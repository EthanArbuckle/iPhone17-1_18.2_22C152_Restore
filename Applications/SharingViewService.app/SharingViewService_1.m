id sub_1000B0DDC(uint64_t a1)
{
  return sub_1000B0DF4(a1, type metadata accessor for SVSMoreHelpWebViewController);
}

id sub_1000B0DF4(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for SVSMoreHelpWebViewController()
{
  return self;
}

uint64_t sub_1000B0E60()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B0E98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000B0EA8()
{
  return swift_release();
}

uint64_t sub_1000B0EB0(const char *a1, unsigned int *a2)
{
  uint64_t v4 = type metadata accessor for SFInterventionResponse();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001C70E8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100012C4C(v8, (uint64_t)qword_1001CAFC0);
  v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, a1, v11, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *a2, v4);
  sub_1000AF2D8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1000B1068()
{
  uint64_t v0 = type metadata accessor for SFInterventionResponse();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001C70E8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CAFC0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Intervention ViewController did contact someone", v7, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for SFInterventionResponse.reject(_:), v0);
  sub_1000AF2D8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100017EF4(0, &qword_1001CB060);
  return static SCUIInterventionViewController.openChatWithParents()();
}

uint64_t sub_1000B123C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000B12A4(uint64_t a1)
{
  return sub_1000B1BA0(a1, type metadata accessor for B389MapAnnotation);
}

uint64_t type metadata accessor for B389MapAnnotation()
{
  return self;
}

id sub_1000B150C()
{
  return sub_1000B1BA0(0, type metadata accessor for B389AnnotationView);
}

uint64_t type metadata accessor for B389AnnotationView()
{
  return self;
}

id sub_1000B1570(void *a1, uint64_t a2, SEL *a3)
{
  uint64_t v5 = self;
  id v6 = a1;
  id v7 = [v5 *a3];
  id v8 = [v6 traitCollection];
  id v9 = [v7 resolvedColorWithTraitCollection:v8];

  return v9;
}

void sub_1000B17AC()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_mapView];
  [v1 setAutoresizingMask:18];
  [v1 setDelegate:v0];
  [v1 setUserInteractionEnabled:0];
  id v2 = [self filterIncludingAllCategories];
  [v1 setPointOfInterestFilter:v2];

  [v1 setShowsAttribution:0];
  [v1 setShowsBuildings:1];
  [v1 setRegion:*(double *)(*(void *)&v0[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_mapAnnotation]+ OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_region), *(double *)(*(void *)&v0[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_mapAnnotation]+ OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_region+ 8), *(double *)(*(void *)&v0[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_mapAnnotation]+ OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_region+ 16), *(double *)(*(void *)&v0[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_mapAnnotation]+ OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_region+ 24)];
  type metadata accessor for B389AnnotationView();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v4 = String._bridgeToObjectiveC()();
  [v1 registerClass:ObjCClassFromMetadata forAnnotationViewWithReuseIdentifier:v4];

  id v6 = [objc_allocWithZone((Class)UIView) init];
  [v6 setClipsToBounds:1];
  id v5 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"viewTapped:"];
  [v6 addGestureRecognizer:v5];

  [v6 addSubview:v1];
  [v0 setView:v6];
}

id sub_1000B1B88(uint64_t a1)
{
  return sub_1000B1BA0(a1, type metadata accessor for B389MapViewController);
}

id sub_1000B1BA0(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  [super dealloc];
}

uint64_t type metadata accessor for B389MapViewController()
{
  return self;
}

void *sub_1000B1C5C(void *a1)
{
  type metadata accessor for B389MapAnnotation();
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  sub_100017EF4(0, (unint64_t *)&qword_1001C82F0);
  swift_unknownObjectRetain();
  if ((static NSObject.== infix(_:_:)() & 1) == 0)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [a1 dequeueReusableAnnotationViewWithIdentifier:v4 forAnnotation:v3];

  type metadata accessor for B389AnnotationView();
  id v6 = (void *)swift_dynamicCastClassUnconditional();
  [v6 setCanShowCallout:1];
  [v6 setAllowsPulse:1];
  [v6 updateStateFromLocation:*(void *)(v3 + OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_pairingLocation) duration:0.0];
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1000B1E30()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CB270);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CB270);
  if (qword_1001C6ED8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D1498);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000B1EF8()
{
  uint64_t v1 = v0;
  v76.receiver = v0;
  v76.super_class = (Class)type metadata accessor for B389ErrorViewController();
  [super viewDidLoad];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    return;
  }
  uint64_t v3 = v2;
  id v4 = [self traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryLarge];
  [v3 _setLocalOverrideTraitCollection:v4];

  [v1 setDismissalType:1];
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  NSString v6 = String._bridgeToObjectiveC()();
  v74 = sub_1000B2FF8;
  uint64_t v75 = v5;
  aBlock = _NSConcreteStackBlock;
  unint64_t v71 = 1107296256;
  v72 = sub_1000215A4;
  v73 = &unk_10019F540;
  id v7 = _Block_copy(&aBlock);
  id v8 = self;
  id v9 = [v8 actionWithTitle:v6 style:0 handler:v7];

  _Block_release(v7);
  swift_release();
  swift_release();
  [v1 setDismissButtonAction:v9];

  id v10 = [v1 subtitle];
  if (v10)
  {
    v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;

    if (*(void *)&v1[OBJC_IVAR____TtC18SharingViewService23B389ErrorViewController_error])
    {
      swift_errorRetain();
      if (IsAppleInternalBuild())
      {
        aBlock = 0;
        unint64_t v71 = 0xE000000000000000;
        _StringGuts.grow(_:)(23);
        swift_bridgeObjectRelease();
        aBlock = (void **)v12;
        unint64_t v71 = v14;
        v15._object = (void *)0x800000010015B2D0;
        v15._countAndFlagsBits = 0xD000000000000012;
        String.append(_:)(v15);
        v16 = (void *)_convertErrorToNSError(_:)();
        NSErrorToOSStatus();

        v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v17);
        swift_bridgeObjectRelease();
        v18._countAndFlagsBits = 41;
        v18._object = (void *)0xE100000000000000;
        String.append(_:)(v18);
        NSString v19 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v1 setSubtitle:v19];

        swift_errorRelease();
        goto LABEL_8;
      }
      swift_errorRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_8:
  uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC18SharingViewService23B389ErrorViewController_buttons];
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    swift_bridgeObjectRetain();
    v22 = v8;
    uint64_t v23 = 0;
    do
    {
      uint64_t v24 = *(void *)(v20 + v23 + 32);
      uint64_t v25 = *(void *)(v20 + v23 + 56);
      long long v68 = *(_OWORD *)(v20 + v23 + 40);
      swift_unknownObjectWeakInit();
      v26 = v1;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v24;
      *(_OWORD *)(v27 + 24) = v68;
      *(void *)(v27 + 40) = v25;
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      NSString v28 = String._bridgeToObjectiveC()();
      v74 = sub_1000B3058;
      uint64_t v75 = v27;
      aBlock = _NSConcreteStackBlock;
      unint64_t v71 = 1107296256;
      v72 = sub_1000215A4;
      v73 = &unk_10019F590;
      v29 = _Block_copy(&aBlock);
      id v30 = [v22 actionWithTitle:v28 style:v23 != 0 handler:v29];

      v31 = v29;
      uint64_t v1 = v26;
      _Block_release(v31);
      swift_release();
      swift_unknownObjectWeakDestroy();
      id v32 = [v26 addAction:v30];
      swift_release();
      swift_bridgeObjectRelease();

      v23 += 32;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v33 = String._bridgeToObjectiveC()();
    id v34 = sub_100138404(v33);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v74 = sub_1000B3080;
    uint64_t v75 = v35;
    aBlock = _NSConcreteStackBlock;
    unint64_t v71 = 1107296256;
    v72 = sub_1000215A4;
    v73 = &unk_10019F5B8;
    v37 = _Block_copy(&aBlock);
    id v38 = [v8 actionWithTitle:v36 style:0 handler:v37];

    _Block_release(v37);
    swift_release();
    swift_release();
    id v39 = [v1 addAction:v38];
  }
  id v40 = [self configurationWithPointSize:4 weight:50.0];
  NSString v41 = String._bridgeToObjectiveC()();
  id v69 = [self systemImageNamed:v41 withConfiguration:v40];

  id v42 = [objc_allocWithZone((Class)UIImageView) initWithImage:v69];
  id v43 = [self systemRedColor];
  [v42 setTintColor:v43];

  [v42 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v42 setContentMode:1];
  id v44 = [v1 contentView];
  [v44 addSubview:v42];

  id v67 = self;
  sub_100009A0C((uint64_t *)&unk_1001C8370);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_10017CA90;
  id v46 = [v42 centerXAnchor];
  id v47 = [v1 contentView];
  id v48 = [v47 mainContentGuide];

  id v49 = [v48 centerXAnchor];
  id v50 = [v46 constraintEqualToAnchor:v49];

  *(void *)(v45 + 32) = v50;
  id v51 = [v42 centerYAnchor];
  id v52 = [v1 contentView];
  id v53 = [v52 mainContentGuide];

  id v54 = [v53 centerYAnchor];
  id v55 = [v51 constraintEqualToAnchor:v54];

  *(void *)(v45 + 40) = v55;
  id v56 = [v42 topAnchor];
  id v57 = [v1 contentView];
  id v58 = [v57 mainContentGuide];

  id v59 = [v58 topAnchor];
  id v60 = [v56 constraintGreaterThanOrEqualToAnchor:v59];

  *(void *)(v45 + 48) = v60;
  id v61 = [v42 bottomAnchor];
  id v62 = [v1 contentView];
  id v63 = [v62 mainContentGuide];

  id v64 = [v63 bottomAnchor];
  id v65 = [v61 constraintLessThanOrEqualToAnchor:v64];

  *(void *)(v45 + 56) = v65;
  aBlock = (void **)v45;
  specialized Array._endMutation()();
  sub_100012BB4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v67 activateConstraints:isa];
}

void sub_1000B294C()
{
  if (qword_1001C70F0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012C4C(v0, (uint64_t)qword_1001CB270);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "dismissPressed in B389ErrorViewController", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    NSString v6 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      [v6 dismiss:5];
    }
  }
}

void sub_1000B2A88()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000B2B24();
  }
}

uint64_t sub_1000B2B24()
{
  uint64_t v0 = sub_100009A0C(&qword_1001C7620);
  __chkstk_darwin(v0 - 8);
  os_log_type_t v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001C70F0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100012C4C(v3, (uint64_t)qword_1001CB270);
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    NSString v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)NSString v6 = 134217984;
    v10[1] = 80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "dismissPressed in %ld", v6, 0xCu);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v8 = (void *)result;
    uint64_t v9 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
    sub_10003E5C4(5, (uint64_t)v2, 0, 0, 81);

    return sub_100012CC4((uint64_t)v2);
  }
  return result;
}

id sub_1000B2D34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for B389ErrorViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for B389ErrorViewController()
{
  return self;
}

uint64_t destroy for B389ErrorButton()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for B389ErrorButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for B389ErrorButton(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for B389ErrorButton(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for B389ErrorButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for B389ErrorButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for B389ErrorButton()
{
  return &type metadata for B389ErrorButton;
}

uint64_t sub_1000B2FC0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000B2FF8()
{
}

uint64_t sub_1000B3000(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000B3010()
{
  return swift_release();
}

uint64_t sub_1000B3018()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000B3058()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

void sub_1000B3080()
{
}

uint64_t sub_1000B3098()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CB2C8);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CB2C8);
  if (qword_1001C6F00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D1510);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000B3160(void *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_navigationController);
  if (v2)
  {
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_currentCardViewController);
    *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_currentCardViewController) = a1;
    uint64_t v9 = v2;
    id v5 = a1;

    [v9 pushViewController:v5 animated:1];
  }
  else
  {
    if (qword_1001C70F8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100012C4C(v6, (uint64_t)qword_1001CB2C8);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v7, "Cannot show a card without presenting the initial card first.", v8, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1000B32A4()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_dismissed) & 1) == 0)
  {
    uint64_t v1 = v0;
    *(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_dismissed) = 1;
    if (qword_1001C70F8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100012C4C(v2, (uint64_t)qword_1001CB2C8);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      id v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)id v5 = 136315138;
      type metadata accessor for SVSUserActionType(0);
      uint64_t v6 = String.init<A>(reflecting:)();
      sub_100025CA0(v6, v7, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "AuthenticateAccounts -- dismiss {type: %s}", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    id v8 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_navigationController);
    if (v8) {
      [v8 dismissViewControllerAnimated:1 completion:0];
    }
    uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_currentCardViewController);
    *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_currentCardViewController) = 0;
  }
}

id sub_1000B34FC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AuthenticateAccountsRouter();
  return [super dealloc];
}

uint64_t type metadata accessor for AuthenticateAccountsRouter()
{
  return self;
}

uint64_t sub_1000B35B0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CB328);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CB328);
  if (qword_1001C6EE8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D14C8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000B3678(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  os_log_type_t v4 = *(void **)a1;
  switch(*(unsigned char *)(a1 + 16))
  {
    case 1:
      swift_bridgeObjectRetain();
      return (uint64_t)v4;
    case 3:
      uint64_t result = 4;
      switch((unint64_t)v4)
      {
        case 2uLL:
          uint64_t v13 = a1 + *(int *)(type metadata accessor for D2DSetupModel() + 60);
          if (*(unsigned char *)(v13 + 4) & 1) == 0 && (*(unsigned char *)(v13 + 1)) {
            return 1;
          }
          else {
            return 2;
          }
        case 3uLL:
        case 4uLL:
          return result;
        case 5uLL:
        case 6uLL:
          return 5;
        case 7uLL:
          if (*(unsigned char *)(a1 + 17) && *(unsigned char *)(a1 + 17) != 1)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v14) {
            return 8;
          }
          if (*(void *)(a1 + *(int *)(type metadata accessor for D2DSetupModel() + 76))) {
            return 7;
          }
          else {
            return 6;
          }
        case 8uLL:
          return 8;
        default:
          if (a4 != 3) {
            goto LABEL_25;
          }
          if (a2 ^ 3 | a3)
          {
            if (!(a2 | a3))
            {
              int v11 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for D2DSetupModel() + 88));
              if (v11 != 2 && (v11 & 1) == 0) {
                return 3;
              }
            }
          }
          else if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for D2DSetupModel() + 88)))
          {
            return 0;
          }
LABEL_25:
          sub_10008F3AC((id)a2, a3, a4);
          return a2;
      }
    default:
      id v5 = v4;
      return (uint64_t)v4;
  }
}

void sub_1000B3904()
{
  uint64_t v1 = v0;
  uint64_t v71 = type metadata accessor for D2DSetupModel();
  uint64_t v2 = __chkstk_darwin(v71);
  os_log_type_t v4 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (uint64_t *)((char *)&v70 - v5);
  if (qword_1001C7100 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = sub_100012C4C(v7, (uint64_t)qword_1001CB328);
  swift_retain_n();
  uint64_t v72 = v8;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  p_cache = &OBJC_METACLASS___SVSInterventionViewController.cache;
  uint64_t v12 = &OBJC_METACLASS___SVSInterventionViewController.cache;
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    *(void *)&v98[0] = v70;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v14 = v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
    swift_beginAccess();
    sub_10008F0F0(v14, (uint64_t)v6);
    sub_10008F0F0((uint64_t)v6, (uint64_t)v4);
    uint64_t v15 = String.init<A>(reflecting:)();
    unint64_t v17 = v16;
    sub_10008F1B8((uint64_t)v6);
    *(void *)&long long v99 = sub_100025CA0(v15, v17, (uint64_t *)v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state + 8);
    char v19 = *(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state + 16);
    *(void *)&long long v99 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state);
    *((void *)&v99 + 1) = v18;
    LOBYTE(v100) = v19;
    sub_10008F3AC((id)v99, v18, v19);
    uint64_t v20 = String.init<A>(reflecting:)();
    *(void *)&long long v99 = sub_100025CA0(v20, v21, (uint64_t *)v98);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    uint64_t v12 = (void **)(&OBJC_METACLASS___SVSInterventionViewController + 16);
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Model: %s, State: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    p_cache = (void **)(&OBJC_METACLASS___SVSInterventionViewController + 16);
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v22 = (uint64_t)p_cache[104] + v1;
  swift_beginAccess();
  uint64_t v70 = v22;
  sub_10008F0F0(v22, (uint64_t)v6);
  uint64_t v23 = (char *)v12[105] + v1;
  id v24 = *(id *)v23;
  unint64_t v25 = *((void *)v23 + 1);
  char v26 = v23[16];
  sub_10008F3AC(*(id *)v23, v25, v26);
  sub_1000B5BC8(v6, v24, v25, v26, (uint64_t)v98);
  uint64_t v27 = (long long *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel);
  long long v28 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 144);
  v97[8] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 128);
  v97[9] = v28;
  long long v29 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 176);
  v97[10] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 160);
  v97[11] = v29;
  long long v30 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 80);
  v97[4] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 64);
  v97[5] = v30;
  long long v31 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 112);
  v97[6] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 96);
  v97[7] = v31;
  long long v32 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 16);
  v97[0] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel);
  v97[1] = v32;
  long long v33 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 48);
  v97[2] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 32);
  v97[3] = v33;
  long long v34 = v98[9];
  v27[8] = v98[8];
  v27[9] = v34;
  long long v35 = v98[11];
  v27[10] = v98[10];
  v27[11] = v35;
  long long v36 = v98[5];
  v27[4] = v98[4];
  v27[5] = v36;
  long long v37 = v98[7];
  v27[6] = v98[6];
  v27[7] = v37;
  long long v38 = v98[1];
  *uint64_t v27 = v98[0];
  v27[1] = v38;
  long long v39 = v98[3];
  v27[2] = v98[2];
  v27[3] = v39;
  sub_100019530((uint64_t)v98);
  sub_1000B5AE4((uint64_t)v97);
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v40 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    long long v42 = v27[9];
    long long v107 = v27[8];
    long long v108 = v42;
    long long v43 = v27[11];
    long long v109 = v27[10];
    long long v110 = v43;
    long long v44 = v27[5];
    long long v103 = v27[4];
    long long v104 = v44;
    long long v45 = v27[7];
    long long v105 = v27[6];
    long long v106 = v45;
    long long v46 = v27[1];
    long long v99 = *v27;
    long long v100 = v46;
    long long v47 = v27[3];
    long long v101 = v27[2];
    long long v102 = v47;
    id v48 = *(void (**)(uint64_t, _UNKNOWN **, long long *, uint64_t, uint64_t))(v40 + 32);
    sub_100019530((uint64_t)&v99);
    v48(v1, &off_10019F6C0, &v99, ObjectType, v40);
    swift_unknownObjectRelease();
    sub_1000B5AE4((uint64_t)&v99);
  }
  sub_1000B5AE4((uint64_t)v98);
  swift_retain_n();
  id v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v49, v50))
  {
    id v51 = (uint8_t *)swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    *(_DWORD *)id v51 = 136315138;
    long long v53 = v27[9];
    long long v54 = v27[7];
    long long v93 = v27[8];
    long long v94 = v53;
    long long v55 = v27[9];
    long long v56 = v27[11];
    long long v95 = v27[10];
    long long v96 = v56;
    long long v57 = v27[5];
    long long v58 = v27[3];
    long long v89 = v27[4];
    long long v90 = v57;
    long long v59 = v27[5];
    long long v60 = v27[7];
    long long v91 = v27[6];
    long long v92 = v60;
    long long v61 = v27[1];
    v86[0] = *v27;
    v86[1] = v61;
    long long v62 = v27[3];
    long long v64 = *v27;
    long long v63 = v27[1];
    long long v87 = v27[2];
    long long v88 = v62;
    long long v82 = v55;
    long long v83 = v95;
    long long v84 = v27[11];
    long long v77 = v89;
    long long v78 = v59;
    long long v79 = v91;
    long long v80 = v54;
    long long v81 = v93;
    long long v73 = v64;
    long long v74 = v63;
    uint64_t v85 = v52;
    long long v75 = v87;
    long long v76 = v58;
    sub_100019530((uint64_t)v86);
    uint64_t v65 = String.init<A>(reflecting:)();
    *(void *)&long long v73 = sub_100025CA0(v65, v66, &v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "ViewModel: %s", v51, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  if (v23[16] >= 3u && *(_OWORD *)v23 == 0 && *(unsigned char *)(v70 + *(int *)(v71 + 80)) == 1)
  {
    id v67 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v67, v68))
    {
      id v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v69 = 0;
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "D2D Setup request start setup process", v69, 2u);
      swift_slowDealloc();
    }

    sub_100083CB8();
  }
}

void sub_1000B3FC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for D2DSetupModel();
  __chkstk_darwin(v2 - 8);
  os_log_type_t v4 = (uint64_t *)((char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state;
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state);
  uint64_t v7 = *(void *)(v5 + 8);
  uint64_t v8 = v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
  char v9 = *(unsigned char *)(v5 + 16);
  swift_beginAccess();
  sub_10008F0F0(v8, (uint64_t)v4);
  sub_10008F3AC(v6, v7, v9);
  id v10 = (id)sub_1000B3678((uint64_t)v4, (unint64_t)v6, v7, v9);
  uint64_t v72 = v11;
  char v13 = v12;
  sub_10008F368(v6, v7, v9);
  sub_10008F1B8((uint64_t)v4);
  unint64_t v15 = *(void *)v5;
  uint64_t v14 = *(void *)(v5 + 8);
  int v16 = *(unsigned __int8 *)(v5 + 16);
  switch(v13)
  {
    case 1:
      if (v16 != 1) {
        goto LABEL_53;
      }
      BOOL v18 = v10 == (id)v15 && v72 == v14;
      if (!v18 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_53;
      }
      goto LABEL_11;
    case 2:
      goto LABEL_53;
    case 3:
      switch((unint64_t)v10)
      {
        case 1uLL:
          BOOL v65 = v16 == 3 && v15 == 1;
          break;
        case 2uLL:
          BOOL v65 = v16 == 3 && v15 == 2;
          break;
        case 3uLL:
          BOOL v65 = v16 == 3 && v15 == 3;
          break;
        case 4uLL:
          BOOL v65 = v16 == 3 && v15 == 4;
          break;
        case 5uLL:
          BOOL v65 = v16 == 3 && v15 == 5;
          break;
        case 6uLL:
          BOOL v65 = v16 == 3 && v15 == 6;
          break;
        case 7uLL:
          BOOL v65 = v16 == 3 && v15 == 7;
          break;
        case 8uLL:
          BOOL v65 = v16 == 3 && v15 == 8;
          break;
        default:
          if (v16 != 3 || (v14 | v15) != 0) {
            goto LABEL_53;
          }
          goto LABEL_11;
      }
      if (!v65 || v14 != 0) {
        goto LABEL_53;
      }
      goto LABEL_11;
    default:
      if (!*(unsigned char *)(v5 + 16)
        && (sub_100017EF4(0, (unint64_t *)&qword_1001C82F0),
            sub_10008F3AC((id)v15, v14, 0),
            sub_10008F3AC(v10, v72, 0),
            char v17 = static NSObject.== infix(_:_:)(),
            sub_10008F368(v10, v72, 0),
            sub_10008F368((void *)v15, v14, 0),
            (v17 & 1) != 0))
      {
LABEL_11:
        sub_10008F0F0(v8, (uint64_t)v4);
        id v19 = *(id *)v5;
        unint64_t v20 = *(void *)(v5 + 8);
        char v21 = *(unsigned char *)(v5 + 16);
        sub_10008F3AC(*(id *)v5, v20, v21);
        sub_1000B5BC8(v4, v19, v20, v21, (uint64_t)v98);
        uint64_t v22 = (_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel);
        long long v23 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 144);
        v97[8] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 128);
        v97[9] = v23;
        long long v24 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 176);
        v97[10] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 160);
        v97[11] = v24;
        long long v25 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 80);
        v97[4] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 64);
        v97[5] = v25;
        long long v26 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 112);
        v97[6] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 96);
        v97[7] = v26;
        long long v27 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 16);
        v97[0] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel);
        v97[1] = v27;
        long long v28 = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 48);
        v97[2] = *(_OWORD *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 32);
        v97[3] = v28;
        long long v29 = v98[9];
        v22[8] = v98[8];
        v22[9] = v29;
        long long v30 = v98[11];
        v22[10] = v98[10];
        v22[11] = v30;
        long long v31 = v98[5];
        v22[4] = v98[4];
        v22[5] = v31;
        long long v32 = v98[7];
        v22[6] = v98[6];
        v22[7] = v32;
        long long v33 = v98[1];
        _OWORD *v22 = v98[0];
        v22[1] = v33;
        long long v34 = v98[3];
        v22[2] = v98[2];
        v22[3] = v34;
        sub_100019530((uint64_t)v98);
        sub_1000B5AE4((uint64_t)v97);
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v35 = *(void *)(v1 + 24);
          uint64_t ObjectType = swift_getObjectType();
          long long v37 = v22[9];
          v99[8] = v22[8];
          v99[9] = v37;
          long long v38 = v22[11];
          v99[10] = v22[10];
          v99[11] = v38;
          long long v39 = v22[5];
          v99[4] = v22[4];
          v99[5] = v39;
          long long v40 = v22[7];
          v99[6] = v22[6];
          v99[7] = v40;
          long long v41 = v22[1];
          v99[0] = *v22;
          v99[1] = v41;
          long long v42 = v22[3];
          v99[2] = v22[2];
          v99[3] = v42;
          long long v43 = *(void (**)(uint64_t, _UNKNOWN **, _OWORD *, uint64_t, uint64_t))(v35 + 32);
          sub_100019530((uint64_t)v99);
          v43(v1, &off_10019F6C0, v99, ObjectType, v35);
          swift_unknownObjectRelease();
          sub_1000B5AE4((uint64_t)v99);
        }
        sub_1000B5AE4((uint64_t)v98);
        if (qword_1001C7100 != -1) {
          swift_once();
        }
        uint64_t v44 = type metadata accessor for Logger();
        sub_100012C4C(v44, (uint64_t)qword_1001CB328);
        swift_retain_n();
        long long v45 = Logger.logObject.getter();
        os_log_type_t v46 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v45, v46))
        {
          long long v47 = (uint8_t *)swift_slowAlloc();
          uint64_t v48 = swift_slowAlloc();
          uint64_t v71 = v48;
          *(_DWORD *)long long v47 = 136315138;
          long long v49 = v22[9];
          long long v50 = v22[7];
          long long v93 = v22[8];
          long long v94 = v49;
          long long v51 = v22[9];
          long long v52 = v22[11];
          long long v95 = v22[10];
          long long v96 = v52;
          long long v53 = v22[5];
          long long v54 = v22[3];
          long long v89 = v22[4];
          long long v90 = v53;
          long long v55 = v22[5];
          long long v56 = v22[7];
          long long v91 = v22[6];
          long long v92 = v56;
          long long v57 = v22[1];
          v86[0] = *v22;
          v86[1] = v57;
          long long v58 = v22[3];
          long long v60 = *v22;
          long long v59 = v22[1];
          long long v87 = v22[2];
          long long v88 = v58;
          long long v81 = v93;
          long long v82 = v51;
          long long v61 = v22[11];
          long long v83 = v95;
          long long v84 = v61;
          long long v77 = v89;
          long long v78 = v55;
          long long v79 = v91;
          long long v80 = v50;
          long long v73 = v60;
          long long v74 = v59;
          uint64_t v85 = v48;
          long long v75 = v87;
          long long v76 = v54;
          sub_100019530((uint64_t)v86);
          uint64_t v62 = String.init<A>(reflecting:)();
          *(void *)&long long v73 = sub_100025CA0(v62, v63, &v85);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v45, v46, "ViewModel: %s", v47, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();
        }
        sub_10008F368(v10, v72, v13);
      }
      else
      {
LABEL_53:
        id v67 = *(id *)v5;
        uint64_t v68 = *(void *)(v5 + 8);
        uint64_t v69 = v72;
        *(void *)uint64_t v5 = v10;
        *(void *)(v5 + 8) = v69;
        char v70 = *(unsigned char *)(v5 + 16);
        *(unsigned char *)(v5 + 16) = v13;
        sub_10008F3AC(v10, v69, v13);
        sub_10008F368(v67, v68, v70);
        sub_1000B4618();
        sub_10008F368(v10, v69, v13);
      }
      return;
  }
}

void sub_1000B4618()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state + 8);
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state + 16))
  {
    case 1:
      sub_10009B954();
      break;
    case 2:
      sub_10009BB64(v1);
      uint64_t v3 = v1;
      uint64_t v4 = v2;
      char v5 = 2;
      goto LABEL_6;
    case 3:
      switch((unint64_t)v1)
      {
        case 1uLL:
          uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_router);
          if (qword_1001C7048 != -1) {
            swift_once();
          }
          uint64_t v7 = type metadata accessor for Logger();
          sub_100012C4C(v7, (uint64_t)qword_1001CA730);
          uint64_t v8 = Logger.logObject.getter();
          os_log_type_t v9 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v8, v9))
          {
            id v10 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v10 = 0;
            _os_log_impl((void *)&_mh_execute_header, v8, v9, "D2D Setup showing Visual Auth card", v10, 2u);
            swift_slowDealloc();
          }

          id v11 = objc_allocWithZone((Class)type metadata accessor for D2DSetupVisualAuthViewController());
          id v16 = sub_100018B3C();
          sub_1000B52E4((uint64_t)v16, v6);

          break;
        case 2uLL:
          sub_10009B8B8();
          break;
        case 3uLL:
          sub_10009B8EC();
          break;
        case 4uLL:
          sub_10009B920();
          break;
        case 5uLL:
          sub_10009B988();
          break;
        case 6uLL:
          sub_10009B9F0();
          break;
        case 7uLL:
          sub_10009B9BC();
          break;
        case 8uLL:
          uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_router);
          uint64_t v13 = v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model;
          swift_beginAccess();
          uint64_t v14 = v13 + *(int *)(type metadata accessor for D2DSetupModel() + 72);
          if (*(unsigned char *)(v14 + 4)) {
            int v15 = 0;
          }
          else {
            int v15 = *(_DWORD *)v14;
          }
          *(unsigned char *)(v12 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissedForExternalContent) = v15 == 25;
          sub_10009C7EC(v15, v15 != 19);
          break;
        default:
          sub_10009B884();
          break;
      }
      break;
    default:
      sub_10009BB64(v1);
      uint64_t v3 = v1;
      uint64_t v4 = v2;
      char v5 = 0;
LABEL_6:
      sub_10008F368(v3, v4, v5);
      break;
  }
}

uint64_t sub_1000B4954()
{
  sub_1000181B0(v0 + 16);
  sub_10008F1B8(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_model);
  sub_10008F368(*(void **)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state), *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_state + 16));
  long long v1 = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 144);
  v8[8] = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 128);
  v8[9] = v1;
  long long v2 = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 176);
  v8[10] = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 160);
  v8[11] = v2;
  long long v3 = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 80);
  v8[4] = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 64);
  v8[5] = v3;
  long long v4 = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 112);
  v8[6] = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 96);
  v8[7] = v4;
  long long v5 = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 16);
  v8[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel);
  v8[1] = v5;
  long long v6 = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 48);
  v8[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_viewModel + 32);
  v8[3] = v6;
  sub_1000B5AE4((uint64_t)v8);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1000B4A38()
{
  return type metadata accessor for D2DSetupPresenter();
}

uint64_t type metadata accessor for D2DSetupPresenter()
{
  uint64_t result = qword_1001CB390;
  if (!qword_1001CB390) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B4A8C()
{
  uint64_t result = type metadata accessor for D2DSetupModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for D2DSetupState()
{
  return &type metadata for D2DSetupState;
}

uint64_t sub_1000B4B58(void *a1)
{
  if (qword_1001C7100 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CB328);
  long long v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    long long v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "D2D Setup request handle device setup notification)", v5, 2u);
    swift_slowDealloc();
  }

  return sub_1000833DC(a1);
}

uint64_t sub_1000B4C54(uint64_t a1, unint64_t a2)
{
  return sub_1000B4C94(a1, a2, "D2D Setup request handle scanned code:  '%s'", (uint64_t (*)(uint64_t, unint64_t))sub_100086884);
}

uint64_t sub_1000B4C74(uint64_t a1, unint64_t a2)
{
  return sub_1000B4C94(a1, a2, "D2D Setup request handle PIN entered: '%s'", (uint64_t (*)(uint64_t, unint64_t))sub_100086D64);
}

uint64_t sub_1000B4C94(uint64_t a1, unint64_t a2, const char *a3, uint64_t (*a4)(uint64_t, unint64_t))
{
  if (qword_1001C7100 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100012C4C(v8, (uint64_t)qword_1001CB328);
  swift_bridgeObjectRetain_n();
  os_log_type_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)id v11 = 136315138;
    if (IsAppleInternalBuild())
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = a1;
      unint64_t v13 = a2;
    }
    else
    {
      unint64_t v13 = 0xE100000000000000;
      uint64_t v12 = 42;
    }
    sub_100025CA0(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, a3, v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a4(a1, a2);
}

void sub_1000B4E8C()
{
  uint64_t v1 = v0;
  if (qword_1001C7100 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CB328);
  long long v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    long long v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "D2D Setup request block hardware buttons", v5, 2u);
    swift_slowDealloc();
  }

  long long v6 = *(void (**)(uint64_t))(*(void *)(v1
                                                  + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_interactor)
                                      + 48);
  if (v6)
  {
    swift_retain();
    v6(17);
    sub_100017C38((uint64_t)v6);
  }
}

void sub_1000B4FBC()
{
  uint64_t v1 = v0;
  if (qword_1001C7100 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CB328);
  long long v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    long long v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "D2D Setup request reset hardware button functionality", v5, 2u);
    swift_slowDealloc();
  }

  long long v6 = *(void (**)(uint64_t))(*(void *)(v1
                                                  + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_interactor)
                                      + 64);
  if (v6)
  {
    uint64_t v7 = swift_retain();
    v6(v7);
    sub_100017C38((uint64_t)v6);
  }
}

void sub_1000B50E8()
{
  uint64_t v1 = v0;
  if (qword_1001C7100 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CB328);
  long long v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    long long v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "D2D Setup request What's Next", v5, 2u);
    swift_slowDealloc();
  }

  if (qword_1001C7018 != -1) {
    swift_once();
  }
  sub_100012C4C(v2, (uint64_t)qword_1001CA0E8);
  long long v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Start What's Next flow in Settings", v8, 2u);
    swift_slowDealloc();
  }

  [self postFollowUp];
  sub_10008EB98();
  *(unsigned char *)(*(void *)(v1 + OBJC_IVAR____TtC18SharingViewService17D2DSetupPresenter_router)
           + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_dismissedForExternalContent) = 0;
  sub_10009C7EC(5, 1);
}

uint64_t sub_1000B52C4(uint64_t a1, uint64_t a2)
{
  return sub_1000B5878(*(void **)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1000B52E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  uint64_t v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_7;
  }
  os_log_type_t v9 = *(void (**)(uint64_t, _UNKNOWN **))(a2
                                                   + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_prepareForPresentation);
  if (v9)
  {
    swift_retain();
    v9(a1, &off_10019C038);
    sub_100017C38((uint64_t)v9);
  }
  os_log_type_t v10 = *(void **)(a2 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_navigationController);
  if (v10) {
    [v10 pushViewController:a1 animated:1];
  }
  uint64_t v8 = (uint64_t)&off_10019C038;
  if (qword_1001C7050 != -1) {
    goto LABEL_9;
  }
LABEL_7:
  qword_1001CA750 = v8;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1000B54C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  uint64_t v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_7;
  }
  os_log_type_t v9 = *(void (**)(uint64_t, _UNKNOWN **))(a2
                                                   + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_prepareForPresentation);
  if (v9)
  {
    swift_retain();
    v9(a1, &off_10019C060);
    sub_100017C38((uint64_t)v9);
  }
  os_log_type_t v10 = *(void **)(a2 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_navigationController);
  if (v10) {
    [v10 pushViewController:a1 animated:1];
  }
  uint64_t v8 = (uint64_t)&off_10019C060;
  if (qword_1001C7050 != -1) {
    goto LABEL_9;
  }
LABEL_7:
  qword_1001CA750 = v8;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1000B569C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  os_log_type_t v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
  uint64_t *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  uint64_t v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_7;
  }
  os_log_type_t v9 = *(void (**)(uint64_t, _UNKNOWN **))(a2
                                                   + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_prepareForPresentation);
  if (v9)
  {
    swift_retain();
    v9(a1, &off_10019C088);
    sub_100017C38((uint64_t)v9);
  }
  os_log_type_t v10 = *(void **)(a2 + OBJC_IVAR____TtC18SharingViewService14D2DSetupRouter_navigationController);
  if (v10) {
    [v10 pushViewController:a1 animated:1];
  }
  uint64_t v8 = (uint64_t)&off_10019C088;
  if (qword_1001C7050 != -1) {
    goto LABEL_9;
  }
LABEL_7:
  qword_1001CA750 = v8;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1000B5878(void *a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_39;
      }
      if (a1 == (void *)a4 && a2 == a5) {
        goto LABEL_38;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    case 2:
      goto LABEL_39;
    case 3:
      switch((unint64_t)a1)
      {
        case 1uLL:
          if (a6 != 3 || a4 != 1) {
            goto LABEL_39;
          }
          break;
        case 2uLL:
          if (a6 != 3 || a4 != 2) {
            goto LABEL_39;
          }
          break;
        case 3uLL:
          if (a6 != 3 || a4 != 3) {
            goto LABEL_39;
          }
          break;
        case 4uLL:
          if (a6 != 3 || a4 != 4) {
            goto LABEL_39;
          }
          break;
        case 5uLL:
          if (a6 != 3 || a4 != 5) {
            goto LABEL_39;
          }
          break;
        case 6uLL:
          if (a6 != 3 || a4 != 6) {
            goto LABEL_39;
          }
          break;
        case 7uLL:
          if (a6 != 3 || a4 != 7) {
            goto LABEL_39;
          }
          break;
        case 8uLL:
          if (a6 != 3 || a4 != 8) {
            goto LABEL_39;
          }
          break;
        default:
          if (a6 != 3 || a5 | a4) {
            goto LABEL_39;
          }
          goto LABEL_38;
      }
      if (a5) {
        goto LABEL_39;
      }
LABEL_38:
      uint64_t result = 1;
      break;
    default:
      if (a6)
      {
LABEL_39:
        uint64_t result = 0;
      }
      else
      {
        sub_100017EF4(0, (unint64_t *)&qword_1001C82F0);
        sub_10008F3AC(a1, a2, 0);
        sub_10008F3AC((id)a4, a5, 0);
        char v10 = static NSObject.== infix(_:_:)();
        sub_10008F368((void *)a4, a5, 0);
        sub_10008F368(a1, a2, 0);
        uint64_t result = v10 & 1;
      }
      break;
  }
  return result;
}

uint64_t sub_1000B5AE4(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  long long v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 136);
  uint64_t v8 = *(void *)(a1 + 128);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100019770(v8, v7);
  return a1;
}

uint64_t sub_1000B5BC8@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v10 = (int *)type metadata accessor for D2DSetupModel();
  uint64_t v11 = __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v415 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v415 - v14;
  sub_100073E6C(&v441);
  uint64_t countAndFlagsBits = v441._countAndFlagsBits;
  object = v441._object;
  uint64_t v433 = v442;
  uint64_t v432 = v443;
  uint64_t v431 = v444[0];
  uint64_t v430 = v444[1];
  uint64_t v429 = v444[2];
  uint64_t v428 = v444[3];
  switch(a4)
  {
    case 1:
      NSString v19 = String._bridgeToObjectiveC()();
      unint64_t v20 = (const char *)*((unsigned __int8 *)a1 + v10[25]);
      id v21 = sub_10013753C(v19, v20);

      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      long long v24 = v23;

      long long v25 = self;
      v427 = a1;
      id v26 = [v25 mainBundle];
      v445._object = (void *)0xE000000000000000;
      v27._uint64_t countAndFlagsBits = v22;
      v27._object = v24;
      v28.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v28.value._object = (void *)0xEB00000000656C62;
      v29._uint64_t countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      v445._uint64_t countAndFlagsBits = 0;
      Swift::String v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v445);
      uint64_t v419 = v30._countAndFlagsBits;
      v418 = v30._object;
      swift_bridgeObjectRelease();

      NSString v31 = String._bridgeToObjectiveC()();
      long long v32 = (const char *)SFDeviceClassCodeGet();
      NSString v33 = sub_10013753C(v31, v32);

      if (!v33)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v33 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      id v34 = sub_10013753C(v33, v20);

      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      long long v37 = v36;

      id v38 = [v25 mainBundle];
      v446._object = (void *)0xE000000000000000;
      v39._uint64_t countAndFlagsBits = v35;
      v39._object = v37;
      v40.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v40.value._object = (void *)0xEB00000000656C62;
      v41._uint64_t countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      v446._uint64_t countAndFlagsBits = 0;
      Swift::String v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v446);
      swift_bridgeObjectRelease();

      sub_100009A0C((uint64_t *)&unk_1001C9530);
      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_10017C370;
      *(void *)(v43 + 56) = &type metadata for String;
      *(void *)(v43 + 64) = sub_1000117E4();
      *(Swift::String *)(v43 + 32) = v42;
      id v44 = [v25 mainBundle];
      v45._uint64_t countAndFlagsBits = 0xD000000000000017;
      v447._object = (void *)0xE000000000000000;
      v45._object = (void *)0x800000010015B3E0;
      v46.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v46.value._object = (void *)0xEB00000000656C62;
      v47._uint64_t countAndFlagsBits = 0;
      v47._object = (void *)0xE000000000000000;
      v447._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v45, v46, (NSBundle)v44, v47, v447);

      uint64_t v48 = String.init(format:arguments:)();
      unint64_t v50 = v49;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v424 = sub_1000BEE2C(0xD000000000000014, 0x800000010015B400, (uint64_t)a2, a3, (uint64_t)UIFontTextStyleSubheadline, v48, v50);
      swift_bridgeObjectRelease();
      uint64_t v51 = 1;
      sub_10008F368(a2, a3, 1);
      sub_10008F1B8((uint64_t)v427);
      uint64_t v422 = 0;
      *(void *)&long long v421 = 0;
      unint64_t v420 = 0;
      unint64_t v426 = 0;
      v427 = 0;
      int v52 = 0;
      uint64_t v53 = 0;
      long long v54 = 0;
      uint64_t v55 = 0;
      unint64_t v56 = 0;
      id v423 = 0;
      v425 = 0;
      char v57 = 1;
LABEL_6:
      uint64_t v58 = v419;
      long long v59 = v418;
      goto LABEL_11;
    case 2:
      id v16 = a2;
      uint64_t v17 = a3;
      char v18 = 2;
      goto LABEL_8;
    case 3:
      switch((unint64_t)a2)
      {
        case 1uLL:
          NSString v88 = String._bridgeToObjectiveC()();
          id v89 = sub_10013753C(v88, (const char *)*((unsigned __int8 *)a1 + v10[25]));

          uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          long long v92 = v91;

          long long v93 = self;
          id v94 = [v93 mainBundle];
          v450._object = (void *)0xE000000000000000;
          v95._uint64_t countAndFlagsBits = v90;
          v95._object = v92;
          v96.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v96.value._object = (void *)0xEB00000000656C62;
          v97._uint64_t countAndFlagsBits = 0;
          v97._object = (void *)0xE000000000000000;
          v450._uint64_t countAndFlagsBits = 0;
          Swift::String v98 = NSLocalizedString(_:tableName:bundle:value:comment:)(v95, v96, (NSBundle)v94, v97, v450);
          uint64_t v58 = v98._countAndFlagsBits;
          long long v59 = v98._object;
          swift_bridgeObjectRelease();

          id v99 = [v93 mainBundle];
          v100._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
          v451._object = (void *)0xE000000000000000;
          v100._object = (void *)0x800000010015B6D0;
          v101.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v101.value._object = (void *)0xEB00000000656C62;
          v102._uint64_t countAndFlagsBits = 0;
          v102._object = (void *)0xE000000000000000;
          v451._uint64_t countAndFlagsBits = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v100, v101, (NSBundle)v99, v102, v451);

          id v103 = objc_allocWithZone((Class)NSAttributedString);
          NSString v104 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v424 = [v103 initWithString:v104];

          id v105 = [v93 mainBundle];
          v106._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
          v452._object = (void *)0xE000000000000000;
          v106._object = (void *)0x800000010015B6F0;
          v107.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v107.value._object = (void *)0xEB00000000656C62;
          v108._uint64_t countAndFlagsBits = 0;
          v108._object = (void *)0xE000000000000000;
          v452._uint64_t countAndFlagsBits = 0;
          Swift::String v109 = NSLocalizedString(_:tableName:bundle:value:comment:)(v106, v107, (NSBundle)v105, v108, v452);
          uint64_t v53 = v109._countAndFlagsBits;
          long long v54 = v109._object;

          sub_10008F1B8((uint64_t)a1);
          uint64_t v422 = 0;
          *(void *)&long long v421 = 0;
          unint64_t v420 = 0;
          unint64_t v426 = 0;
          v427 = 0;
          int v52 = 0;
          uint64_t v55 = 0;
          unint64_t v56 = 0;
          id v423 = 0;
          v425 = 0;
          goto LABEL_10;
        case 2uLL:
          long long v110 = self;
          id v111 = [v110 mainBundle];
          v112._uint64_t countAndFlagsBits = 0xD000000000000019;
          v453._object = (void *)0xE000000000000000;
          v112._object = (void *)0x800000010015B670;
          v113.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v113.value._object = (void *)0xEB00000000656C62;
          v114._uint64_t countAndFlagsBits = 0;
          v114._object = (void *)0xE000000000000000;
          v453._uint64_t countAndFlagsBits = 0;
          Swift::String v115 = NSLocalizedString(_:tableName:bundle:value:comment:)(v112, v113, (NSBundle)v111, v114, v453);
          uint64_t v419 = v115._countAndFlagsBits;
          v418 = v115._object;

          v116 = (char *)a1 + v10[15];
          if (v116[4] & 1) == 0 && (v116[2])
          {
            id v314 = [v110 mainBundle];
            v473._object = (void *)0xE000000000000000;
            v315._uint64_t countAndFlagsBits = 0x434E495F48545541;
            v315._object = (void *)0xEE0054434552524FLL;
            v316.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v316.value._object = (void *)0xEB00000000656C62;
            v317._uint64_t countAndFlagsBits = 0;
            v317._object = (void *)0xE000000000000000;
            v473._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v315, v316, (NSBundle)v314, v317, v473);

            sub_100009A0C(&qword_1001C7C10);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_10017C370;
            *(void *)(inited + 32) = NSForegroundColorAttributeName;
            v319 = self;
            v320 = NSForegroundColorAttributeName;
            id v321 = [v319 systemRedColor];
            *(void *)(inited + 64) = sub_100017EF4(0, &qword_1001C7C18);
            *(void *)(inited + 40) = v321;
            sub_100006F44(inited);
            id v322 = objc_allocWithZone((Class)NSAttributedString);
            NSString v323 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            type metadata accessor for Key(0);
            sub_10001C814();
            Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            id v424 = [v322 initWithString:v323 attributes:isa];
          }
          else
          {
            NSString v117 = String._bridgeToObjectiveC()();
            id v118 = sub_10013753C(v117, (const char *)*((unsigned __int8 *)a1 + v10[25]));

            uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v121 = v120;

            id v122 = [v110 mainBundle];
            v454._object = (void *)0xE000000000000000;
            v123._uint64_t countAndFlagsBits = v119;
            v123._object = v121;
            v124.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v124.value._object = (void *)0xEB00000000656C62;
            v125._uint64_t countAndFlagsBits = 0;
            v125._object = (void *)0xE000000000000000;
            v454._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v123, v124, (NSBundle)v122, v125, v454);
            swift_bridgeObjectRelease();

            id v126 = objc_allocWithZone((Class)NSAttributedString);
            NSString v127 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v424 = [v126 initWithString:v127];
          }
          sub_10008F1B8((uint64_t)a1);
          uint64_t v422 = 0;
          *(void *)&long long v421 = 0;
          unint64_t v420 = 0;
          unint64_t v426 = 0;
          v427 = 0;
          int v52 = 0;
          uint64_t v53 = 0;
          long long v54 = 0;
          uint64_t v55 = 0;
          unint64_t v56 = 0;
          id v423 = 0;
          v425 = 0;
          goto LABEL_57;
        case 3uLL:
          char v128 = *((unsigned char *)a1 + v10[29]);
          id v129 = [self mainBundle];
          if (v128)
          {
            v130._uint64_t countAndFlagsBits = 0xD000000000000015;
            v455._object = (void *)0xE000000000000000;
            v130._object = (void *)0x800000010015B650;
            v131.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v131.value._object = (void *)0xEB00000000656C62;
            v132._uint64_t countAndFlagsBits = 0;
            v132._object = (void *)0xE000000000000000;
            v455._uint64_t countAndFlagsBits = 0;
            Swift::String v133 = NSLocalizedString(_:tableName:bundle:value:comment:)(v130, v131, (NSBundle)v129, v132, v455);
            uint64_t v419 = v133._countAndFlagsBits;
            v418 = v133._object;
            v134 = (void *)0xEF54475F4E4F5F4ELL;
          }
          else
          {
            v288._uint64_t countAndFlagsBits = 0xD000000000000012;
            v470._object = (void *)0xE000000000000000;
            v288._object = (void *)0x800000010015B610;
            v289.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v289.value._object = (void *)0xEB00000000656C62;
            v290._uint64_t countAndFlagsBits = 0;
            v290._object = (void *)0xE000000000000000;
            v470._uint64_t countAndFlagsBits = 0;
            Swift::String v291 = NSLocalizedString(_:tableName:bundle:value:comment:)(v288, v289, (NSBundle)v129, v290, v470);
            uint64_t v419 = v291._countAndFlagsBits;
            v418 = v291._object;
            v134 = (void *)0xEC0000004E4F5F4ELL;
          }

          id v292 = [self configurationWithPointSize:72.0];
          NSString v293 = String._bridgeToObjectiveC()();
          v425 = (UIImage *)[self systemImageNamed:v293 withConfiguration:v292];

          id v423 = [self systemBlueColor];
          id v294 = [self mainBundle];
          v471._object = (void *)0xE000000000000000;
          v295._uint64_t countAndFlagsBits = 0x5255545F49464957;
          v295._object = v134;
          v296.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v296.value._object = (void *)0xEB00000000656C62;
          v297._uint64_t countAndFlagsBits = 0;
          v297._object = (void *)0xE000000000000000;
          v471._uint64_t countAndFlagsBits = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v295, v296, (NSBundle)v294, v297, v471);

          id v298 = objc_allocWithZone((Class)NSAttributedString);
          NSString v299 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v424 = [v298 initWithString:v299];

          id v300 = [self mainBundle];
          v301._uint64_t countAndFlagsBits = 0xD000000000000012;
          v472._object = (void *)0xE000000000000000;
          v301._object = (void *)0x800000010015B630;
          v302.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v302.value._object = (void *)0xEB00000000656C62;
          v303._uint64_t countAndFlagsBits = 0;
          v303._object = (void *)0xE000000000000000;
          v472._uint64_t countAndFlagsBits = 0;
          Swift::String v304 = NSLocalizedString(_:tableName:bundle:value:comment:)(v301, v302, (NSBundle)v300, v303, v472);
          uint64_t v55 = v304._countAndFlagsBits;
          unint64_t v56 = (unint64_t)v304._object;

          sub_10008F1B8((uint64_t)a1);
          uint64_t v422 = 0;
          *(void *)&long long v421 = 0;
          unint64_t v420 = 0;
          unint64_t v426 = 0;
          v427 = 0;
          int v52 = 0;
          uint64_t v53 = 0;
          long long v54 = 0;
LABEL_57:
          char v57 = 1;
          uint64_t v51 = 3;
          goto LABEL_6;
        case 4uLL:
          if (*((unsigned __int8 *)a1 + 16) < 3u || *a1 ^ 4 | a1[1])
          {
            NSString v238 = String._bridgeToObjectiveC()();
            id v239 = sub_10013753C(v238, (const char *)*((unsigned __int8 *)a1 + v10[25]));

            uint64_t v240 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v242 = v241;

            id v135 = [self mainBundle];
            v465._object = (void *)0xE000000000000000;
            v243._uint64_t countAndFlagsBits = v240;
            v243._object = v242;
            v244.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v244.value._object = (void *)0xEB00000000656C62;
            v245._uint64_t countAndFlagsBits = 0;
            v245._object = (void *)0xE000000000000000;
            v465._uint64_t countAndFlagsBits = 0;
            Swift::String v246 = NSLocalizedString(_:tableName:bundle:value:comment:)(v243, v244, (NSBundle)v135, v245, v465);
            uint64_t v140 = v246._countAndFlagsBits;
            v141 = v246._object;
            swift_bridgeObjectRelease();
          }
          else
          {
            id v135 = [self mainBundle];
            v136._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
            v456._object = (void *)0xE000000000000000;
            v136._object = (void *)0x800000010015B5F0;
            v137.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v137.value._object = (void *)0xEB00000000656C62;
            v138._uint64_t countAndFlagsBits = 0;
            v138._object = (void *)0xE000000000000000;
            v456._uint64_t countAndFlagsBits = 0;
            Swift::String v139 = NSLocalizedString(_:tableName:bundle:value:comment:)(v136, v137, (NSBundle)v135, v138, v456);
            uint64_t v140 = v139._countAndFlagsBits;
            v141 = v139._object;
          }
          v418 = v141;
          uint64_t v419 = v140;

          NSString v247 = String._bridgeToObjectiveC()();
          v248 = (const char *)SFDeviceClassCodeGet();
          NSString v249 = sub_10013753C(v247, v248);

          if (!v249)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            NSString v249 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          id v250 = sub_10013753C(v249, (const char *)*((unsigned __int8 *)a1 + v10[25]));

          uint64_t v251 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v253 = v252;

          id v254 = [self mainBundle];
          v466._object = (void *)0xE000000000000000;
          v255._uint64_t countAndFlagsBits = v251;
          v255._object = v253;
          v256.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v256.value._object = (void *)0xEB00000000656C62;
          v257._uint64_t countAndFlagsBits = 0;
          v257._object = (void *)0xE000000000000000;
          v466._uint64_t countAndFlagsBits = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v255, v256, (NSBundle)v254, v257, v466);
          swift_bridgeObjectRelease();

          id v258 = objc_allocWithZone((Class)NSAttributedString);
          NSString v259 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v424 = [v258 initWithString:v259];

          sub_10008F1B8((uint64_t)a1);
          uint64_t v422 = 0;
          *(void *)&long long v421 = 0;
          unint64_t v420 = 0;
          unint64_t v426 = 0;
          v427 = 0;
          int v52 = 0;
          uint64_t v53 = 0;
          long long v54 = 0;
          uint64_t v55 = 0;
          unint64_t v56 = 0;
          id v423 = 0;
          v425 = 0;
          char v57 = 1;
          uint64_t v51 = 1;
          goto LABEL_6;
        case 5uLL:
          if (*((unsigned __int8 *)a1 + 16) < 3u || *a1 ^ 5 | a1[1])
          {
            v260 = self;
            id v261 = [v260 mainBundle];
            v262._uint64_t countAndFlagsBits = 0xD000000000000014;
            v467._object = (void *)0xE000000000000000;
            v262._object = (void *)0x800000010015B4F0;
            v263.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v263.value._object = (void *)0xEB00000000656C62;
            v264._uint64_t countAndFlagsBits = 0;
            v264._object = (void *)0xE000000000000000;
            v467._uint64_t countAndFlagsBits = 0;
            Swift::String v265 = NSLocalizedString(_:tableName:bundle:value:comment:)(v262, v263, (NSBundle)v261, v264, v467);
            uint64_t v419 = v265._countAndFlagsBits;
            v418 = v265._object;

            LODWORD(v261) = *((unsigned __int8 *)a1 + v10[29]);
            id v266 = [v260 mainBundle];
            if (v261 == 1)
            {
              unint64_t v414 = 0xE000000000000000;
              unint64_t v267 = 0x800000010015B590;
              unint64_t v268 = 0xD000000000000016;
            }
            else
            {
              unint64_t v268 = 0xD000000000000013;
              unint64_t v414 = 0xE000000000000000;
              unint64_t v267 = 0x800000010015B510;
            }
            v308.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v308.value._object = (void *)0xEB00000000656C62;
            v309._uint64_t countAndFlagsBits = 0;
            v309._object = (void *)0xE000000000000000;
            uint64_t v310 = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v268, v308, (NSBundle)v266, v309, *(Swift::String *)(&v414 - 1));

            id v311 = objc_allocWithZone((Class)NSAttributedString);
            NSString v312 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v313 = [v311 initWithString:v312];
          }
          else
          {
            v142 = self;
            id v143 = [v142 mainBundle];
            v457._object = (void *)0xE000000000000000;
            v144._object = (void *)0x800000010015B5B0;
            v144._uint64_t countAndFlagsBits = 0xD000000000000016;
            v145.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v145.value._object = (void *)0xEB00000000656C62;
            v146._uint64_t countAndFlagsBits = 0;
            v146._object = (void *)0xE000000000000000;
            v457._uint64_t countAndFlagsBits = 0;
            Swift::String v147 = NSLocalizedString(_:tableName:bundle:value:comment:)(v144, v145, (NSBundle)v143, v146, v457);
            uint64_t v419 = v147._countAndFlagsBits;
            v418 = v147._object;

            NSString v148 = String._bridgeToObjectiveC()();
            v149 = (const char *)SFDeviceClassCodeGet();
            id v150 = sub_10013753C(v148, v149);

            NSString v151 = v150;
            NSString v152 = v150;
            if (!v150)
            {
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              NSString v152 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              NSString v151 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
            }
            int v153 = *((unsigned __int8 *)a1 + v10[29]);
            id v154 = v150;
            if (v153 == 1)
            {

              id v155 = objc_retainAutoreleasedReturnValue(sub_10013753C(v152, (const char *)*((unsigned __int8 *)a1
                                                                                          + v10[25])));

              uint64_t v156 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v158 = v157;

              v436[0] = v156;
              v436[1] = v158;
              v159._uint64_t countAndFlagsBits = 5523295;
              v159._object = (void *)0xE300000000000000;
              String.append(_:)(v159);
              uint64_t v160 = v436[0];
              v161 = (void *)v436[1];
            }
            else
            {

              id v371 = objc_retainAutoreleasedReturnValue(sub_10013753C(v151, (const char *)*((unsigned __int8 *)a1
                                                                                          + v10[25])));

              uint64_t v160 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              v161 = v372;
            }
            id v373 = [v142 mainBundle];
            v478._object = (void *)0xE000000000000000;
            v374._uint64_t countAndFlagsBits = v160;
            v374._object = v161;
            v375.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v375.value._object = (void *)0xEB00000000656C62;
            v376._uint64_t countAndFlagsBits = 0;
            v376._object = (void *)0xE000000000000000;
            v478._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v374, v375, (NSBundle)v373, v376, v478);
            swift_bridgeObjectRelease();

            id v377 = objc_allocWithZone((Class)NSAttributedString);
            NSString v312 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v313 = [v377 initWithString:v312];
          }
          id v424 = v313;

          id v378 = [self configurationWithPointSize:72.0];
          v427 = (uint64_t *)0xD000000000000022;
          NSString v379 = String._bridgeToObjectiveC()();
          v425 = (UIImage *)[self systemImageNamed:v379 withConfiguration:v378];

          id v423 = [self systemBlueColor];
          v380 = (char *)a1 + v10[16];
          LODWORD(v417) = *(_DWORD *)v380;
          unint64_t v416 = v380[4];
          uint64_t v422 = sub_100009A0C((uint64_t *)&unk_1001C9530);
          uint64_t v381 = swift_allocObject();
          long long v421 = xmmword_10017C370;
          *(_OWORD *)(v381 + 16) = xmmword_10017C370;
          v382 = self;
          id v383 = [v382 mainBundle];
          v479._object = (void *)0xE000000000000000;
          v384._uint64_t countAndFlagsBits = 0x4954414D49545345;
          v384._object = (void *)0xEA0000000000474ELL;
          v385.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v385.value._object = (void *)0xEB00000000656C62;
          v386._uint64_t countAndFlagsBits = 0;
          v386._object = (void *)0xE000000000000000;
          v479._uint64_t countAndFlagsBits = 0;
          Swift::String v387 = NSLocalizedString(_:tableName:bundle:value:comment:)(v384, v385, (NSBundle)v383, v386, v479);

          v388 = v382;
          *(void *)(v381 + 56) = &type metadata for String;
          unint64_t v420 = sub_1000117E4();
          *(void *)(v381 + 64) = v420;
          *(Swift::String *)(v381 + 32) = v387;
          id v389 = [v382 mainBundle];
          v480._object = (void *)0xE000000000000000;
          v390._object = (void *)0x800000010015B560;
          v390._uint64_t countAndFlagsBits = (uint64_t)v427;
          v391.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v391.value._object = (void *)0xEB00000000656C62;
          v392._uint64_t countAndFlagsBits = 0;
          v392._object = (void *)0xE000000000000000;
          v480._uint64_t countAndFlagsBits = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v390, v391, (NSBundle)v389, v392, v480);

          uint64_t v393 = String.init(format:arguments:)();
          v395 = v394;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v396 = (double *)((char *)a1 + v10[17]);
          char v397 = *((unsigned char *)v396 + 8);
          v427 = v395;
          unint64_t v426 = v393;
          if ((v397 & 1) != 0 || (double v398 = *v396, *v396 < 0.0))
          {
            uint64_t v399 = 0;
          }
          else
          {
            id v400 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
            v401 = v400;
            if (v400
              && ([v400 setUnitsStyle:3],
                  [v401 setIncludesApproximationPhrase:1],
                  [v401 setAllowedUnits:240],
                  [v401 setMaximumUnitCount:1],
                  (id v402 = [v401 stringFromTimeInterval:v398]) != 0))
            {
              v403 = v402;
              uint64_t v399 = (uint64_t)v401;
              swift_bridgeObjectRelease();
              uint64_t v404 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v406 = v405;

              uint64_t v407 = swift_allocObject();
              *(_OWORD *)(v407 + 16) = v421;
              unint64_t v408 = v420;
              *(void *)(v407 + 56) = &type metadata for String;
              *(void *)(v407 + 64) = v408;
              *(void *)(v407 + 32) = v404;
              *(void *)(v407 + 40) = v406;
              id v409 = [v388 mainBundle];
              v410._uint64_t countAndFlagsBits = 0xD000000000000022;
              v481._object = (void *)0xE000000000000000;
              v410._object = (void *)0x800000010015B560;
              v411.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
              v411.value._object = (void *)0xEB00000000656C62;
              v412._uint64_t countAndFlagsBits = 0;
              v412._object = (void *)0xE000000000000000;
              v481._uint64_t countAndFlagsBits = 0;
              NSLocalizedString(_:tableName:bundle:value:comment:)(v410, v411, (NSBundle)v409, v412, v481);

              unint64_t v426 = String.init(format:arguments:)();
              v427 = v413;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v399 = (uint64_t)v401;
            }
          }
          uint64_t v422 = v399;
          sub_10008F1B8((uint64_t)a1);
          *(void *)&long long v421 = 0;
          unint64_t v420 = 0;
          uint64_t v53 = 0;
          long long v54 = 0;
          uint64_t v55 = 0;
          unint64_t v56 = 0;
          uint64_t v51 = 1;
          uint64_t v58 = v419;
          long long v59 = v418;
          int v52 = v417;
          char v57 = v416;
          goto LABEL_11;
        case 6uLL:
          sub_1000B8B9C((uint64_t)&v441);
          NSString v162 = String._bridgeToObjectiveC()();
          id v163 = sub_10013753C(v162, (const char *)*((unsigned __int8 *)a1 + v10[25]));

          uint64_t v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v166 = v165;

          v167 = self;
          id v168 = [v167 mainBundle];
          v458._object = (void *)0xE000000000000000;
          v169._uint64_t countAndFlagsBits = v164;
          v169._object = v166;
          v170.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v170.value._object = (void *)0xEB00000000656C62;
          v171._uint64_t countAndFlagsBits = 0;
          v171._object = (void *)0xE000000000000000;
          v458._uint64_t countAndFlagsBits = 0;
          Swift::String v172 = NSLocalizedString(_:tableName:bundle:value:comment:)(v169, v170, (NSBundle)v168, v171, v458);
          uint64_t v419 = v172._countAndFlagsBits;
          v418 = v172._object;
          swift_bridgeObjectRelease();

          id v173 = [v167 mainBundle];
          v459._object = (void *)0xE000000000000000;
          v174._uint64_t countAndFlagsBits = 1162760004;
          v174._object = (void *)0xE400000000000000;
          v175.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v175.value._object = (void *)0xEB00000000656C62;
          v176._uint64_t countAndFlagsBits = 0;
          v176._object = (void *)0xE000000000000000;
          v459._uint64_t countAndFlagsBits = 0;
          Swift::String v177 = NSLocalizedString(_:tableName:bundle:value:comment:)(v174, v175, (NSBundle)v173, v176, v459);
          uint64_t v417 = v177._countAndFlagsBits;
          unint64_t v416 = (unint64_t)v177._object;

          if ((*((unsigned char *)a1 + v10[28]) & 1) == 0)
          {
            id v305 = [self configurationWithPointSize:72.0];
            NSString v306 = String._bridgeToObjectiveC()();
            v425 = (UIImage *)[self systemImageNamed:v306 withConfiguration:v305];

            id v423 = [self systemBlueColor];
            sub_10008F1B8((uint64_t)a1);
            uint64_t v422 = 0;
            uint64_t countAndFlagsBits = 0;
            object = 0;
            uint64_t v433 = 0;
            uint64_t v432 = 0;
            uint64_t v431 = 0;
            uint64_t v430 = 0;
            uint64_t v429 = 0;
            uint64_t v428 = 0;
            *(void *)&long long v421 = 0;
            unint64_t v420 = 0;
            unint64_t v426 = 0;
            v427 = 0;
            int v52 = 0;
            uint64_t v53 = 0;
            long long v54 = 0;
            v307 = v444;
            goto LABEL_75;
          }
          NSString v178 = String._bridgeToObjectiveC()();
          id v179 = sub_1001374C4(v178);

          uint64_t v180 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v182 = v181;

          id v183 = [v167 mainBundle];
          v460._object = (void *)0xE000000000000000;
          v184._uint64_t countAndFlagsBits = v180;
          v184._object = v182;
          v185.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v185.value._object = (void *)0xEB00000000656C62;
          v186._uint64_t countAndFlagsBits = 0;
          v186._object = (void *)0xE000000000000000;
          v460._uint64_t countAndFlagsBits = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v184, v185, (NSBundle)v183, v186, v460);
          swift_bridgeObjectRelease();

          id v187 = objc_allocWithZone((Class)NSAttributedString);
          NSString v188 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v424 = [v187 initWithString:v188];

          NSString v189 = String._bridgeToObjectiveC()();
          id v190 = sub_1001374C4(v189);

          uint64_t v191 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v193 = v192;

          id v194 = [v167 mainBundle];
          v461._object = (void *)0xE000000000000000;
          v195._uint64_t countAndFlagsBits = v191;
          v195._object = v193;
          v196.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v196.value._object = (void *)0xEB00000000656C62;
          v197._uint64_t countAndFlagsBits = 0;
          v197._object = (void *)0xE000000000000000;
          v461._uint64_t countAndFlagsBits = 0;
          Swift::String v198 = NSLocalizedString(_:tableName:bundle:value:comment:)(v195, v196, (NSBundle)v194, v197, v461);
          uint64_t v53 = v198._countAndFlagsBits;
          swift_bridgeObjectRelease();

          if (qword_1001C7040 != -1) {
            swift_once();
          }
          v415 = v198._object;
          uint64_t v199 = type metadata accessor for Logger();
          sub_100012C4C(v199, (uint64_t)qword_1001CA5D0);
          v200 = Logger.logObject.getter();
          os_log_type_t v201 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v200, v201))
          {
            v202 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v202 = 0;
            _os_log_impl((void *)&_mh_execute_header, v200, v201, "Other device is of same device class, offer Exit Buddy", v202, 2u);
            swift_slowDealloc();
          }

          sub_10008F1B8((uint64_t)a1);
          uint64_t v422 = 0;
          uint64_t countAndFlagsBits = 0;
          object = 0;
          uint64_t v433 = 0;
          uint64_t v432 = 0;
          uint64_t v431 = 0;
          uint64_t v430 = 0;
          uint64_t v429 = 0;
          uint64_t v428 = 0;
          *(void *)&long long v421 = 0;
          unint64_t v420 = 0;
          unint64_t v426 = 0;
          v427 = 0;
          int v52 = 0;
          id v423 = 0;
          v425 = 0;
          char v57 = 1;
          uint64_t v51 = 3;
          uint64_t v58 = v419;
          long long v59 = v418;
          uint64_t v55 = v417;
          unint64_t v56 = v416;
LABEL_60:
          long long v54 = v415;
          goto LABEL_11;
        case 7uLL:
          sub_1000B8B9C((uint64_t)&v441);
          v203 = self;
          v204 = &selRef_errorWithDomain_code_userInfo_;
          id v205 = [v203 mainBundle];
          v206._uint64_t countAndFlagsBits = 0xD000000000000012;
          v462._object = (void *)0xE000000000000000;
          v206._object = (void *)0x800000010015B420;
          v207.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v207.value._object = (void *)0xEB00000000656C62;
          v208._uint64_t countAndFlagsBits = 0;
          v208._object = (void *)0xE000000000000000;
          v462._uint64_t countAndFlagsBits = 0;
          Swift::String v209 = NSLocalizedString(_:tableName:bundle:value:comment:)(v206, v207, (NSBundle)v205, v208, v462);
          uint64_t v419 = v209._countAndFlagsBits;
          v418 = v209._object;

          NSString v210 = String._bridgeToObjectiveC()();
          uint64_t v211 = (uint64_t)a1;
          id v212 = sub_10013753C(v210, (const char *)*((unsigned __int8 *)a1 + v10[25]));

          uint64_t v213 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v215 = v214;

          id v216 = [v203 mainBundle];
          v463._object = (void *)0xE000000000000000;
          v217._uint64_t countAndFlagsBits = v213;
          v217._object = v215;
          v218.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v218.value._object = (void *)0xEB00000000656C62;
          v219._uint64_t countAndFlagsBits = 0;
          v219._object = (void *)0xE000000000000000;
          v463._uint64_t countAndFlagsBits = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v217, v218, (NSBundle)v216, v219, v463);
          swift_bridgeObjectRelease();

          id v220 = objc_allocWithZone((Class)NSAttributedString);
          NSString v221 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v222 = [v220 initWithString:v221];

          id v223 = v222;
          if (IsAppleInternalBuild())
          {
            if (v223)
            {
              v224 = *(void **)((char *)a1 + v10[19]);
              v225 = v223;
              id v226 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v223];
              strcpy((char *)v436, "\n[INTERNAL] ");
              BYTE5(v436[1]) = 0;
              HIWORD(v436[1]) = -5120;
              uint64_t v439 = (uint64_t)v224;
              id v227 = v224;
              sub_100009A0C(&qword_1001CA3E8);
              v228._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
              String.append(_:)(v228);
              swift_bridgeObjectRelease();
              id v229 = objc_allocWithZone((Class)NSAttributedString);
              NSString v230 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v231 = [v229 initWithString:v230];

              [v226 appendAttributedString:v231];
              id v232 = v226;
              id v233 = [v203 mainBundle];
              v234._uint64_t countAndFlagsBits = 0xD000000000000024;
              v464._object = (void *)0xE000000000000000;
              v234._object = (void *)0x800000010015B460;
              v235.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
              v235.value._object = (void *)0xEB00000000656C62;
              v236._uint64_t countAndFlagsBits = 0;
              v236._object = (void *)0xE000000000000000;
              v464._uint64_t countAndFlagsBits = 0;
              Swift::String v237 = NSLocalizedString(_:tableName:bundle:value:comment:)(v234, v235, (NSBundle)v233, v236, v464);
              uint64_t v417 = v237._countAndFlagsBits;
              v415 = v237._object;

              uint64_t v211 = (uint64_t)a1;
              v204 = &selRef_errorWithDomain_code_userInfo_;
            }
            else
            {
              uint64_t v417 = 0;
              v415 = 0;
              id v226 = 0;
            }
          }
          else
          {
            id v226 = v223;

            uint64_t v417 = 0;
            v415 = 0;
          }
          id v424 = v226;
          id v325 = [self configurationWithPointSize:72.0];
          NSString v326 = String._bridgeToObjectiveC()();
          v425 = (UIImage *)[self systemImageNamed:v326 withConfiguration:v325];

          id v423 = [self systemRedColor];
          id v327 = [v203 v204[153]];
          v474._object = (void *)0xE000000000000000;
          v328._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
          v328._object = (void *)0xEF454C5449545F4ELL;
          v329.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v329.value._object = (void *)0xEB00000000656C62;
          v330._uint64_t countAndFlagsBits = 0;
          v330._object = (void *)0xE000000000000000;
          v474._uint64_t countAndFlagsBits = 0;
          Swift::String v331 = NSLocalizedString(_:tableName:bundle:value:comment:)(v328, v329, (NSBundle)v327, v330, v474);
          uint64_t v55 = v331._countAndFlagsBits;
          unint64_t v56 = (unint64_t)v331._object;

          sub_10008F1B8(v211);
          uint64_t v422 = 0;
          uint64_t countAndFlagsBits = 0;
          object = 0;
          uint64_t v433 = 0;
          uint64_t v432 = 0;
          uint64_t v431 = 0;
          uint64_t v430 = 0;
          uint64_t v429 = 0;
          uint64_t v428 = 0;
          *(void *)&long long v421 = 0;
          unint64_t v420 = 0;
          unint64_t v426 = 0;
          v427 = 0;
          int v52 = 0;
          char v57 = 1;
          uint64_t v51 = 3;
          uint64_t v58 = v419;
          long long v59 = v418;
          uint64_t v53 = v417;
          goto LABEL_60;
        case 8uLL:
          goto LABEL_9;
        default:
          NSString v69 = String._bridgeToObjectiveC()();
          unint64_t v426 = v10[25];
          char v70 = (const char *)*((unsigned __int8 *)a1 + v426);
          id v71 = sub_10013753C(v69, v70);

          uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          long long v74 = v73;

          long long v75 = self;
          id v76 = [v75 mainBundle];
          v448._object = (void *)0xE000000000000000;
          v77._uint64_t countAndFlagsBits = v72;
          v77._object = v74;
          v78.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v78.value._object = (void *)0xEB00000000656C62;
          v79._uint64_t countAndFlagsBits = 0;
          v79._object = (void *)0xE000000000000000;
          v448._uint64_t countAndFlagsBits = 0;
          Swift::String v80 = NSLocalizedString(_:tableName:bundle:value:comment:)(v77, v78, (NSBundle)v76, v79, v448);
          uint64_t v419 = v80._countAndFlagsBits;
          v418 = v80._object;
          swift_bridgeObjectRelease();

          long long v81 = v70;
          long long v82 = sub_100138414((char)v70, *((unsigned __int8 *)a1 + v10[26]));
          LOBYTE(v74) = *((unsigned char *)a1 + v10[21]);
          v427 = (uint64_t *)v75;
          id v83 = [v75 mainBundle];
          v425 = v82;
          if (v74)
          {
            v84._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
            v449._object = (void *)0xE000000000000000;
            v84._object = (void *)0x800000010015B800;
            v85.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v85.value._object = (void *)0xEB00000000656C62;
            v86._uint64_t countAndFlagsBits = 0;
            v86._object = (void *)0xE000000000000000;
            v449._uint64_t countAndFlagsBits = 0;
            Swift::String v87 = NSLocalizedString(_:tableName:bundle:value:comment:)(v84, v85, (NSBundle)v83, v86, v449);
            uint64_t v417 = v87._countAndFlagsBits;
            unint64_t v416 = (unint64_t)v87._object;

LABEL_48:
            NSString v276 = String._bridgeToObjectiveC()();
            id v277 = sub_10013753C(v276, v81);

            uint64_t v278 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v280 = v279;

            id v281 = [v427 mainBundle];
            v469._object = (void *)0xE000000000000000;
            v282._uint64_t countAndFlagsBits = v278;
            v282._object = v280;
            v283.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
            v283.value._object = (void *)0xEB00000000656C62;
            v284._uint64_t countAndFlagsBits = 0;
            v284._object = (void *)0xE000000000000000;
            v469._uint64_t countAndFlagsBits = 0;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v282, v283, (NSBundle)v281, v284, v469);
            swift_bridgeObjectRelease();

            id v285 = objc_allocWithZone((Class)NSAttributedString);
            NSString v286 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v287 = [v285 initWithString:v286];

            goto LABEL_68;
          }
          v269._uint64_t countAndFlagsBits = 0xD000000000000012;
          v468._object = (void *)0xE000000000000000;
          v269._object = (void *)0x800000010015B630;
          v270.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v270.value._object = (void *)0xEB00000000656C62;
          v271._uint64_t countAndFlagsBits = 0;
          v271._object = (void *)0xE000000000000000;
          v468._uint64_t countAndFlagsBits = 0;
          Swift::String v272 = NSLocalizedString(_:tableName:bundle:value:comment:)(v269, v270, (NSBundle)v83, v271, v468);

          v273 = (void **)((char *)a1 + v10[7]);
          v274 = v273[1];
          uint64_t v417 = v272._countAndFlagsBits;
          unint64_t v416 = (unint64_t)v272._object;
          if (!v274) {
            goto LABEL_48;
          }
          v275 = *v273;
          v436[0] = *v273;
          v436[1] = v274;
          uint64_t v439 = 64;
          unint64_t v440 = 0xE100000000000000;
          sub_1000B8BF4();
          swift_bridgeObjectRetain();
          if (StringProtocol.contains<A>(_:)())
          {
            id v423 = v274;
            id v424 = v275;
          }
          else
          {
            NSString v332 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v333 = (id)SFLocalizePhoneNumber();

            id v424 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v423 = v334;
          }
          unsigned int v335 = *((unsigned __int8 *)a1 + v10[8]);
          sub_10008F0F0((uint64_t)a1, (uint64_t)v13);
          if (v335 > 0xB)
          {
            uint64_t v336 = *(void *)&v13[v10[7] + 8];
            swift_bridgeObjectRetain();
            sub_10008F1B8((uint64_t)v13);
            if (v336)
            {
              swift_bridgeObjectRelease();
              v437 = &type metadata for AppleAccountFeatureFlags;
              unint64_t v438 = sub_1000B8C48();
              isFeatureEnabled(_:)();
              sub_10002BA5C((uint64_t)v436);
              NSString v337 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v338 = sub_10013753C(v337, (const char *)*((unsigned __int8 *)a1 + v426));

              uint64_t v339 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              v341 = v340;

              v342 = v427;
              id v343 = [v427 mainBundle];
              goto LABEL_67;
            }
          }
          else
          {
            sub_10008F1B8((uint64_t)v13);
          }
          v437 = &type metadata for AppleAccountFeatureFlags;
          unint64_t v438 = sub_1000B8C48();
          isFeatureEnabled(_:)();
          sub_10002BA5C((uint64_t)v436);
          NSString v344 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v345 = sub_10013753C(v344, (const char *)*((unsigned __int8 *)a1 + v426));

          uint64_t v339 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          v341 = v346;

          v342 = v427;
          id v343 = [v427 mainBundle];
LABEL_67:
          id v347 = v343;
          v475._object = (void *)0xE000000000000000;
          v348._uint64_t countAndFlagsBits = v339;
          v348._object = v341;
          v349.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v349.value._object = (void *)0xEB00000000656C62;
          v350._uint64_t countAndFlagsBits = 0;
          v350._object = (void *)0xE000000000000000;
          v475._uint64_t countAndFlagsBits = 0;
          Swift::String v351 = NSLocalizedString(_:tableName:bundle:value:comment:)(v348, v349, (NSBundle)v347, v350, v475);
          uint64_t v422 = v351._countAndFlagsBits;
          unint64_t v426 = (unint64_t)v351._object;
          swift_bridgeObjectRelease();

          sub_100009A0C((uint64_t *)&unk_1001C9530);
          uint64_t v352 = swift_allocObject();
          *(_OWORD *)(v352 + 16) = xmmword_10017C370;
          *(void *)(v352 + 56) = &type metadata for String;
          *(void *)(v352 + 64) = sub_1000117E4();
          id v353 = v423;
          *(void *)(v352 + 32) = v424;
          *(void *)(v352 + 40) = v353;
          id v354 = [v342 mainBundle];
          v476._object = (void *)0xE000000000000000;
          v355._uint64_t countAndFlagsBits = 0x535F4445544F5551;
          v355._object = (void *)0xED0000474E495254;
          v356.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v356.value._object = (void *)0xEB00000000656C62;
          v357._uint64_t countAndFlagsBits = 0;
          v357._object = (void *)0xE000000000000000;
          v476._uint64_t countAndFlagsBits = 0;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v355, v356, (NSBundle)v354, v357, v476);

          uint64_t v358 = String.init(format:arguments:)();
          unint64_t v360 = v359;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v287 = sub_1000BEE2C(0x50415F444C4F423CLL, 0xEF3E44495F454C50, v358, v360, (uint64_t)UIFontTextStyleSubheadline, v422, v426);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_68:
          uint64_t v361 = *a1;
          uint64_t v362 = a1[1];
          int v363 = *((unsigned __int8 *)a1 + 16);
          sub_10008F0F0((uint64_t)a1, (uint64_t)v15);
          if (v363 != 3 || v362 | v361)
          {
            sub_10008F1B8((uint64_t)v15);
            v365 = &selRef_errorWithDomain_code_userInfo_;
          }
          else
          {
            char v364 = v15[v10[20]];
            sub_10008F1B8((uint64_t)v15);
            v365 = &selRef_errorWithDomain_code_userInfo_;
            if ((v364 & 1) == 0)
            {
              sub_1000B8B9C((uint64_t)&v441);
              uint64_t countAndFlagsBits = 0;
              object = 0;
              uint64_t v433 = 0;
              uint64_t v432 = 0;
              uint64_t v431 = 0;
              uint64_t v430 = 0;
              uint64_t v429 = 0;
              uint64_t v428 = 0;
              *(void *)&long long v421 = 0;
              unint64_t v420 = 0;
              goto LABEL_74;
            }
          }
          id v366 = [v427 v365[153]];
          v367._uint64_t countAndFlagsBits = 0xD000000000000014;
          v477._object = (void *)0xE000000000000000;
          v367._object = (void *)0x800000010015B730;
          v368.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v368.value._object = (void *)0xEB00000000656C62;
          v369._uint64_t countAndFlagsBits = 0;
          v369._object = (void *)0xE000000000000000;
          v477._uint64_t countAndFlagsBits = 0;
          Swift::String v370 = NSLocalizedString(_:tableName:bundle:value:comment:)(v367, v368, (NSBundle)v366, v369, v477);
          *(void *)&long long v421 = v370._countAndFlagsBits;
          unint64_t v420 = (unint64_t)v370._object;

LABEL_74:
          id v424 = v287;
          sub_10008F1B8((uint64_t)a1);
          uint64_t v422 = 0;
          unint64_t v426 = 0;
          v427 = 0;
          int v52 = 0;
          uint64_t v53 = 0;
          long long v54 = 0;
          v307 = &v443;
LABEL_75:
          *(v307 - 32) = 0;
          char v57 = 1;
          uint64_t v51 = 3;
          uint64_t v58 = v419;
          long long v59 = v418;
          uint64_t v55 = v417;
          unint64_t v56 = v416;
LABEL_11:
          swift_bridgeObjectRelease_n();
          uint64_t result = sub_100019770(0, 0);
          LOBYTE(v436[0]) = v57;
          *(void *)a5 = v422;
          *(void *)(a5 + 8) = v58;
          long long v61 = v425;
          *(void *)(a5 + 16) = v59;
          *(void *)(a5 + 24) = v61;
          id v62 = v424;
          *(void *)(a5 + 32) = v423;
          *(void *)(a5 + 40) = v62;
          *(void *)(a5 + 48) = v55;
          *(void *)(a5 + 56) = v56;
          *(void *)(a5 + 64) = v53;
          *(void *)(a5 + 72) = v54;
          *(_DWORD *)(a5 + 80) = v52;
          *(unsigned char *)(a5 + 84) = v57;
          unint64_t v63 = v427;
          *(void *)(a5 + 88) = v426;
          *(void *)(a5 + 96) = v63;
          unint64_t v64 = v420;
          *(void *)(a5 + 104) = v421;
          *(void *)(a5 + 112) = v64;
          uint64_t v65 = countAndFlagsBits;
          *(void *)(a5 + 120) = v51;
          *(void *)(a5 + 128) = v65;
          uint64_t v66 = v433;
          *(void *)(a5 + 136) = object;
          *(void *)(a5 + 144) = v66;
          uint64_t v67 = v431;
          *(void *)(a5 + 152) = v432;
          *(void *)(a5 + 160) = v67;
          uint64_t v68 = v429;
          *(void *)(a5 + 168) = v430;
          *(void *)(a5 + 176) = v68;
          *(void *)(a5 + 184) = v428;
          return result;
      }
    default:
      id v16 = a2;
      uint64_t v17 = a3;
      char v18 = 0;
LABEL_8:
      sub_10008F368(v16, v17, v18);
LABEL_9:
      sub_10008F1B8((uint64_t)a1);
      uint64_t v422 = 0;
      *(void *)&long long v421 = 0;
      unint64_t v420 = 0;
      unint64_t v426 = 0;
      v427 = 0;
      int v52 = 0;
      uint64_t v53 = 0;
      long long v54 = 0;
      uint64_t v55 = 0;
      unint64_t v56 = 0;
      id v423 = 0;
      v425 = 0;
      id v424 = 0;
      uint64_t v58 = 0;
      long long v59 = (void *)0xE000000000000000;
LABEL_10:
      char v57 = 1;
      uint64_t v51 = 3;
      goto LABEL_11;
  }
}

uint64_t sub_1000B8B9C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1000B8BF4()
{
  unint64_t result = qword_1001CB4A0;
  if (!qword_1001CB4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB4A0);
  }
  return result;
}

unint64_t sub_1000B8C48()
{
  unint64_t result = qword_1001CB4A8;
  if (!qword_1001CB4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB4A8);
  }
  return result;
}

uint64_t destroy for AuthenticateAccountsAuthViewModel()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AuthenticateAccountsAuthViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AuthenticateAccountsAuthViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for AuthenticateAccountsAuthViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AuthenticateAccountsAuthViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticateAccountsAuthViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticateAccountsAuthViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateAccountsAuthViewModel()
{
  return &type metadata for AuthenticateAccountsAuthViewModel;
}

uint64_t destroy for AuthenticateAccountsImageDefinition()
{
  return sub_100091348();
}

uint64_t _s18SharingViewService35AuthenticateAccountsImageDefinitionOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1000912A4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for AuthenticateAccountsImageDefinition(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_1000912A4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100091348();
  return a1;
}

uint64_t assignWithTake for AuthenticateAccountsImageDefinition(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100091348();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticateAccountsImageDefinition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticateAccountsImageDefinition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000B9054(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateAccountsImageDefinition()
{
  return &type metadata for AuthenticateAccountsImageDefinition;
}

void destroy for AuthenticateAccountsViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100091348();
  unint64_t v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for AuthenticateAccountsViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000912A4();
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  os_log_type_t v9 = *(void **)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  id v11 = v9;
  return a1;
}

uint64_t assignWithCopy for AuthenticateAccountsViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 48);
  sub_1000912A4();
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  sub_100091348();
  uint64_t v7 = *(void **)(a2 + 56);
  char v8 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v7;
  id v9 = v7;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for AuthenticateAccountsViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AuthenticateAccountsViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v6;
  sub_100091348();
  uint64_t v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticateAccountsViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticateAccountsViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateAccountsViewModel()
{
  return &type metadata for AuthenticateAccountsViewModel;
}

uint64_t destroy for AuthenticateAccountsStartViewModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100091348();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AuthenticateAccountsStartViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000912A4();
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  id v9 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v10 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v10;
  uint64_t v11 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v11;
  uint64_t v12 = *(void *)(a2 + 120);
  uint64_t v13 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = v12;
  *(void *)(a1 + 128) = v13;
  id v14 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AuthenticateAccountsStartViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 48);
  sub_1000912A4();
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  sub_100091348();
  uint64_t v7 = *(void **)(a2 + 56);
  char v8 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v7;
  id v9 = v7;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AuthenticateAccountsStartViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for AuthenticateAccountsStartViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v6;
  sub_100091348();
  long long v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticateAccountsStartViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 136)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticateAccountsStartViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateAccountsStartViewModel()
{
  return &type metadata for AuthenticateAccountsStartViewModel;
}

uint64_t sub_1000B9740()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CB4B0);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CB4B0);
  if (qword_1001C6EE0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D14B0);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1000B9808()
{
  uint64_t v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for B332SetupViewControllerProxy();
  [super viewDidLoad];
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CB4B0);
  long long v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "viewDidLoad", v5, 2u);
    swift_slowDealloc();
  }

  char v6 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_pairingAgentObserver];
  sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
  long long v7 = (void *)static OS_dispatch_queue.main.getter();
  [v6 setDispatchQueue:v7];

  [v6 setDelegate:v1];
  [v6 activate];
  return [*(id *)&v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_setupVC] setModalPresentationStyle:0];
}

void sub_1000B9B6C(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CB4B0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    long long v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "ppUpdate", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_setupVC);
  uint64_t v9 = OBJC_IVAR____TtC18SharingViewService23B332SetupViewController_presentedPairingVC;
  uint64_t v10 = *(void **)(v8 + OBJC_IVAR____TtC18SharingViewService23B332SetupViewController_presentedPairingVC);
  if (v10)
  {
    [v10 setDeviceState:a1];
  }
  else
  {
    id v11 = [objc_allocWithZone((Class)PNPPairingViewController) init];
    [v11 setDeviceState:a1];
    uint64_t v12 = *(void **)(v8 + v9);
    *(void *)(v8 + v9) = v11;
    id v13 = v11;

    sub_1000BBC20();
    swift_unknownObjectWeakAssign();
    [v13 setAppearanceDelegate:v2];
    [v13 setDelegate:v2];
  }
}

void sub_1000B9DE4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_dismissed;
  if ((*((unsigned char *)v4 + OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_dismissed) & 1) == 0)
  {
    id v9 = [v4 _remoteViewControllerProxy];
    if (v9)
    {
      uint64_t v10 = v9;
      *((unsigned char *)v4 + v5) = 1;
      uint64_t v11 = qword_1001C7108;
      swift_unknownObjectRetain();
      if (v11 != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      sub_100012C4C(v12, (uint64_t)qword_1001CB4B0);
      id v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "Invalidating retainRemoteViewControllerProxy", v15, 2u);
        swift_slowDealloc();
      }

      if ([v10 respondsToSelector:"invalidate"]) {
        [v10 invalidate];
      }
      swift_unknownObjectRelease_n();
      if (a2)
      {
        uint64_t v27 = a2;
        uint64_t v28 = a3;
        aBlock = _NSConcreteStackBlock;
        uint64_t v24 = 1107296256;
        long long v25 = sub_100021CDC;
        id v26 = &unk_10019FA00;
        id v16 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
      }
      else
      {
        id v16 = 0;
      }
      v22.super_class = (Class)type metadata accessor for B332SetupViewControllerProxy();
      [super dismissViewControllerAnimated:a1 & 1 completion:v16 v4];
    }
    else
    {
      if (qword_1001C7108 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_100012C4C(v17, (uint64_t)qword_1001CB4B0);
      char v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v18, v19))
      {
        unint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "No proxy to dismiss", v20, 2u);
        swift_slowDealloc();
      }

      if (a2)
      {
        uint64_t v27 = a2;
        uint64_t v28 = a3;
        aBlock = _NSConcreteStackBlock;
        uint64_t v24 = 1107296256;
        long long v25 = sub_100021CDC;
        id v26 = &unk_10019F9D8;
        id v16 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
      }
      else
      {
        id v16 = 0;
      }
      id v21 = (objc_class *)type metadata accessor for B332SetupViewControllerProxy();
      v29.receiver = v4;
      v29.super_class = v21;
      objc_msgSendSuper2(&v29, "dismissViewControllerAnimated:completion:", a1 & 1, v16, v22.receiver, v22.super_class);
    }
    _Block_release(v16);
  }
}

uint64_t sub_1000BA1F0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    unint64_t v2 = result & 0xC000000000000001;
    if ((result & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = __CocoaSet.count.getter();
      if (v3) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v3 = *(void *)(result + 16);
      swift_bridgeObjectRetain();
      if (v3)
      {
LABEL_4:
        Swift::String v30 = _swiftEmptyArrayStorage;
        sub_1000E3574(0, v3 & ~(v3 >> 63), 0);
        if (v2)
        {
          __n128 result = __CocoaSet.startIndex.getter();
          char v5 = 1;
        }
        else
        {
          __n128 result = sub_1000EDB60(v1);
          char v5 = v7 & 1;
        }
        uint64_t v27 = result;
        uint64_t v28 = v4;
        char v29 = v5;
        if (v3 < 0) {
          goto LABEL_32;
        }
        do
        {
          while (1)
          {
            int64_t v14 = v27;
            uint64_t v13 = v28;
            char v15 = v29;
            sub_1000ED8C8(v27, v28, v29, v1);
            uint64_t v17 = v16;
            id v18 = [v16 events];

            os_log_type_t v19 = v30;
            __n128 result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              __n128 result = sub_1000E3574(0, v19[2] + 1, 1);
              os_log_type_t v19 = v30;
            }
            unint64_t v21 = v19[2];
            unint64_t v20 = v19[3];
            if (v21 >= v20 >> 1)
            {
              __n128 result = sub_1000E3574(v20 > 1, v21 + 1, 1);
              os_log_type_t v19 = v30;
            }
            v19[2] = v21 + 1;
            v19[v21 + 4] = v18;
            if (v2) {
              break;
            }
            int64_t v8 = sub_1000ED7E4(v14, v13, v15, v1);
            uint64_t v10 = v9;
            char v12 = v11;
            sub_10000BDE4(v14, v13, v15);
            uint64_t v27 = v8;
            uint64_t v28 = v10;
            char v29 = v12 & 1;
            if (!--v3) {
              goto LABEL_22;
            }
          }
          if ((v15 & 1) == 0) {
            goto LABEL_33;
          }
          if (__CocoaSet.Index.handleBitPattern.getter()) {
            swift_isUniquelyReferenced_nonNull_native();
          }
          sub_100009A0C((uint64_t *)&unk_1001C9610);
          objc_super v22 = (void (*)(unsigned char *, void))Set.Index._asCocoa.modify();
          __CocoaSet.formIndex(after:isUnique:)();
          v22(v26, 0);
          --v3;
        }
        while (v3);
LABEL_22:
        sub_10000BDE4(v27, v28, v29);
        swift_bridgeObjectRelease();
        __n128 result = (uint64_t)v30;
        uint64_t v6 = v30[2];
        if (!v6) {
          return swift_bridgeObjectRelease();
        }
LABEL_23:
        if ((*(unsigned char *)(result + 32) & 0x10) != 0)
        {
LABEL_30:
          swift_bridgeObjectRelease();
          return (uint64_t)[v25 dismiss:4];
        }
        if (v6 != 1)
        {
          for (uint64_t i = 5; ; ++i)
          {
            uint64_t v24 = i - 3;
            if (__OFADD__(i - 4, 1)) {
              break;
            }
            if ((*(void *)(result + 8 * i) & 0x10) != 0) {
              goto LABEL_30;
            }
            if (v24 == v6) {
              return swift_bridgeObjectRelease();
            }
          }
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    __n128 result = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v6 = _swiftEmptyArrayStorage[2];
    if (!v6) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_23;
  }
LABEL_34:
  __break(1u);
  return result;
}

id sub_1000BA57C()
{
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100012C4C(v1, (uint64_t)qword_1001CB4B0);
  unint64_t v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    char v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)char v5 = 136315138;
    swift_getObjectType();
    uint64_t v6 = _typeName(_:qualified:)();
    uint64_t v10 = sub_100025CA0(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  [*(id *)&v2[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_pairingAgentObserver] invalidate:v10, v11];
  int64_t v8 = (objc_class *)type metadata accessor for B332SetupViewControllerProxy();
  v12.receiver = v2;
  v12.super_class = v8;
  return [super dealloc];
}

id sub_1000BA7D8(uint64_t a1, uint64_t a2, void *a3)
{
  v3[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_dismissed] = 0;
  v3[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_presented] = 0;
  v3[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_showedAlert] = 0;
  v3[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_shouldShowWhatsNew] = 0;
  *(void *)&v3[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_deviceType] = 0;
  v3[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_daemonAskedForAlert] = 0;
  v3[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_didCompleteOneRotation] = 0;
  uint64_t v6 = OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_pairingAgentObserver;
  id v7 = objc_allocWithZone((Class)SFB332SetupObserver);
  int64_t v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  *(void *)&v8[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_retainRemoteViewControllerProxy] = 0;
  uint64_t v9 = OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_setupVC;
  type metadata accessor for B332SetupViewController();
  *(void *)&v8[v9] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];

  if (a2)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for B332SetupViewControllerProxy();
  id v11 = [super initWithNibName:v10 bundle:a3];

  return v11;
}

id sub_1000BA98C(void *a1)
{
  v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_dismissed] = 0;
  v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_presented] = 0;
  v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_showedAlert] = 0;
  v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_shouldShowWhatsNew] = 0;
  *(void *)&v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_deviceType] = 0;
  v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_daemonAskedForAlert] = 0;
  v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_didCompleteOneRotation] = 0;
  uint64_t v3 = OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_pairingAgentObserver;
  id v4 = objc_allocWithZone((Class)SFB332SetupObserver);
  char v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_retainRemoteViewControllerProxy] = 0;
  uint64_t v6 = OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_setupVC;
  type metadata accessor for B332SetupViewController();
  *(void *)&v5[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for B332SetupViewControllerProxy();
  [super initWithCoder:a1];

  return v7;
}

uint64_t type metadata accessor for B332SetupViewControllerProxy()
{
  return self;
}

id sub_1000BAD8C()
{
  uint64_t v1 = v0;
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CB4B0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    char v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "didTapToPairPencil", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_pairingAgentObserver);

  return [v6 pairTapped];
}

void sub_1000BAFFC()
{
  uint64_t v1 = OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_showedAlert;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_showedAlert)) {
    return;
  }
  uint64_t v2 = v0;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_daemonAskedForAlert) != 1)
  {
    if (qword_1001C7108 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100012C4C(v7, (uint64_t)qword_1001CB4B0);
    oslog = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(oslog, v8)) {
      goto LABEL_19;
    }
    objc_super v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)objc_super v9 = 0;
    NSString v10 = "showAlertIfNeeded - daemonAskedForAlert is false.";
    goto LABEL_18;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_didCompleteOneRotation) == 1)
  {
    if (qword_1001C7108 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100012C4C(v3, (uint64_t)qword_1001CB4B0);
    os_log_type_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "showAlertIfNeeded - showing alert", v6, 2u);
      swift_slowDealloc();
    }

    [*(id *)(*(void *)(v2 + OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_setupVC)+ OBJC_IVAR____TtC18SharingViewService23B332SetupViewController_presentedPairingVC) showPairingPromptAlert];
    *(unsigned char *)(v2 + v1) = 1;
    return;
  }
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100012C4C(v11, (uint64_t)qword_1001CB4B0);
  oslog = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v8))
  {
    objc_super v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)objc_super v9 = 0;
    NSString v10 = "showAlertIfNeeded - didCompleteOneRotation is false.";
LABEL_18:
    _os_log_impl((void *)&_mh_execute_header, oslog, v8, v10, v9, 2u);
    swift_slowDealloc();
  }
LABEL_19:
}

id sub_1000BB308()
{
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100012C4C(v1, (uint64_t)qword_1001CB4B0);
  uint64_t v2 = v0;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  p_cache = &OBJC_METACLASS___SVSInterventionViewController.cache;
  uint64_t v6 = &OBJC_METACLASS___SVSInterventionViewController.cache;
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v7 = swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_setupVC];
    NSString v10 = *(void **)(v9 + OBJC_IVAR____TtC18SharingViewService23B332SetupViewController_presentedPairingVC);
    if (v10)
    {
      uint64_t v17 = *(void *)(v9 + OBJC_IVAR____TtC18SharingViewService23B332SetupViewController_presentedPairingVC);
      id v11 = v10;
      uint64_t v6 = (void **)(&OBJC_METACLASS___SVSInterventionViewController + 16);
      p_cache = (void **)(&OBJC_METACLASS___SVSInterventionViewController + 16);
    }
    else
    {
      HIDWORD(v17) = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v8 = v10;

    *(_WORD *)(v7 + 12) = 1024;
    int v12 = *((unsigned __int8 *)v6[154] + (void)v2);

    LODWORD(v17) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "showPairingStarted. presentedPairingVC: %@, presented: %{BOOL}d", (uint8_t *)v7, 0x12u);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v13 = [v2 pnpDeviceTypeForType:*(void *)&v2[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_deviceType] v17];
  int64_t v14 = v6[154];
  if ((v14[(void)v2] & 1) == 0)
  {
    v14[(void)v2] = 1;
    uint64_t v16 = *(void *)&v2[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_setupVC];
    [v2 presentViewController:v16 animated:0 completion:0];
    id result = *(id *)((char *)p_cache[204] + v16);
    return [result pairingStartedWithDimming:1 deviceType:v13];
  }
  id result = *(id *)((char *)p_cache[204]
                 + *(void *)&v2[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_setupVC]);
  if (result) {
    return [result pairingStartedWithDimming:1 deviceType:v13];
  }
  return result;
}

id sub_1000BB62C()
{
  uint64_t v1 = v0;
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CB4B0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "showPairingSuccess", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = [v1 pnpDeviceTypeForType:*(void *)&v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_deviceType]];
  id result = *(id *)(*(void *)&v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_setupVC]
                 + OBJC_IVAR____TtC18SharingViewService23B332SetupViewController_presentedPairingVC);
  if (result)
  {
    uint64_t v8 = v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_shouldShowWhatsNew];
    return [result pairingSucceededWithShouldShowWhatsNew:v8 deviceType:v6];
  }
  return result;
}

id sub_1000BB840(const char *a1, const char **a2)
{
  uint64_t v5 = v2;
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100012C4C(v6, (uint64_t)qword_1001CB4B0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a1, v9, 2u);
    swift_slowDealloc();
  }

  NSString v10 = *(void **)(*(void *)(v5 + OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_setupVC)
                 + OBJC_IVAR____TtC18SharingViewService23B332SetupViewController_presentedPairingVC);
  id v11 = *a2;

  return [v10 v11];
}

id sub_1000BB9B4()
{
  uint64_t v1 = v0;
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CB4B0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "showPairConsentPrompt", v5, 2u);
    swift_slowDealloc();
  }

  v1[OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_daemonAskedForAlert] = 1;

  return [v1 showAlertIfNeeded];
}

void sub_1000BBC20()
{
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100012C4C(v1, (uint64_t)qword_1001CB4B0);
  os_log_type_t v8 = v0;
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 138412290;
    uint64_t v6 = *(void **)&v8[OBJC_IVAR____TtC18SharingViewService23B332SetupViewController_presentedPairingVC];
    if (v6) {
      id v7 = v6;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;

    _os_log_impl((void *)&_mh_execute_header, v2, v3, "set presentedPairingVC: %@", v4, 0xCu);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1000BBE54(char a1)
{
  uint64_t v2 = v1;
  v21.receiver = v2;
  v21.super_class = (Class)type metadata accessor for B332SetupViewController();
  [super viewWillAppear:a1 & 1];
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CB4B0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "B332SetupViewController viewWillAppear", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v9 = Strong;
  if (Strong)
  {
    id v10 = [Strong _remoteViewControllerProxy];

    if (v10)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v18, 0, sizeof(v18));
    }
    sub_1000737DC((uint64_t)v18, (uint64_t)v19);
    uint64_t v11 = v20;
    if (v20)
    {
      int v12 = sub_10002B550(v19, v20);
      uint64_t v13 = *(void *)(v11 - 8);
      __chkstk_darwin(v12);
      char v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v13 + 16))(v15);
      uint64_t v9 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
      sub_10002BA5C((uint64_t)v19);
    }
    else
    {
      uint64_t v9 = 0;
    }
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = (void *)result;
    *(void *)(result
              + OBJC_IVAR____TtC18SharingViewService28B332SetupViewControllerProxy_retainRemoteViewControllerProxy) = v9;
    swift_unknownObjectRetain();

    uint64_t result = swift_unknownObjectRelease();
  }
  if (v9)
  {
    [v9 setStatusBarHidden:1 withDuration:0.0];
    [v9 setDesiredHardwareButtonEvents:0];
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1000BC16C(char a1)
{
  uint64_t v2 = v1;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for B332SetupViewController();
  [super viewDidAppear:a1 & 1];
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CB4B0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "B332SetupViewController viewDidAppear", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = OBJC_IVAR____TtC18SharingViewService23B332SetupViewController_presentedPairingVC;
  id result = *(id *)&v2[OBJC_IVAR____TtC18SharingViewService23B332SetupViewController_presentedPairingVC];
  if (result)
  {
    id result = [result setModalPresentationStyle:0];
    uint64_t v10 = *(void *)&v2[v8];
    if (v10) {
      return [v2 presentViewController:v10 animated:1 completion:0];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1000BC32C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), SEL *a5)
{
  v8.receiver = a1;
  v8.super_class = (Class)a4();
  return [super a3];
}

id sub_1000BC42C()
{
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100012C4C(v1, (uint64_t)qword_1001CB4B0);
  id v2 = v0;
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_getObjectType();
    uint64_t v6 = _typeName(_:qualified:)();
    sub_100025CA0(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s deinit", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  objc_super v8 = (objc_class *)type metadata accessor for B332SetupViewController();
  v11.receiver = v2;
  v11.super_class = v8;
  return [super dealloc];
}

uint64_t type metadata accessor for B332SetupViewController()
{
  return self;
}

void sub_1000BC834(uint64_t a1, uint64_t a2, char a3, uint64_t a4, double a5)
{
  uint64_t v10 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  __chkstk_darwin(v10 - 8);
  int v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100012C4C(v13, (uint64_t)qword_1001CB4B0);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 134217984;
    *(double *)&v21[1] = a5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "updateDeviceInfo. batteryLevel: %f", v16, 0xCu);
    swift_slowDealloc();
  }

  id v17 = [objc_allocWithZone((Class)PNPDeviceState) init];
  [v17 setBatteryLevel:a5];
  [v17 setBatteryLevelUnknown:a5 < 0.0];
  [v17 setIsCharging:a3 & 1];
  [v17 setEdge:a1];
  sub_10001177C(a4, (uint64_t)v12);
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v18) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v18);
  }
  [v17 setIdentifier:isa];

  if (a2 < 0)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    [v17 setOrientation:a2];
    sub_1000B9B6C((uint64_t)v17);
  }
}

void sub_1000BCB4C()
{
  if (qword_1001C7108 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012C4C(v0, (uint64_t)qword_1001CB4B0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "B332SetupViewController dismiss", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    [Strong dismissViewControllerAnimated:0 completion:0];
  }
}

uint64_t sub_1000BCC84()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000BCCBC(uint64_t a1)
{
  uint64_t v2 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000BCD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000BCD2C()
{
  return swift_release();
}

void sub_1000BCD44()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for D2DSetupVisualAuthViewController();
  [super viewDidLoad];
  sub_1000194C8((uint64_t)v0 + OBJC_IVAR____TtC18SharingViewService33D2DSetupBaseScannerViewController_viewModel, (uint64_t)v11);
  sub_1000194C8((uint64_t)v11, (uint64_t)v8);
  sub_1000194C8((uint64_t)v11, (uint64_t)v12);
  if (sub_10001984C((uint64_t)v12) != 1)
  {
    uint64_t v1 = v9;
    sub_1000194C8((uint64_t)v8, (uint64_t)v7);
    swift_bridgeObjectRetain();
    sub_10001F0FC(v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000198D8);
    sub_10001F0FC(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100019674);
    if (v1)
    {
      uint64_t v2 = swift_allocObject();
      swift_unknownObjectUnownedInit();
      swift_retain();
      NSString v3 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v6[4] = sub_1000BD274;
      v6[5] = v2;
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 1107296256;
      v6[2] = sub_1000215A4;
      v6[3] = &unk_10019FA78;
      os_log_type_t v4 = _Block_copy(v6);
      id v5 = [self actionWithTitle:v3 style:1 handler:v4];

      _Block_release(v4);
      swift_release();
      swift_release();
    }
  }
}

void sub_1000BCF44()
{
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  if (swift_unknownObjectWeakLoadStrong())
  {
    if (qword_1001C7100 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    sub_100012C4C(v0, (uint64_t)qword_1001CB328);
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v1, v2))
    {
      NSString v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "D2D Setup request choose manual pair", v3, 2u);
      swift_slowDealloc();
    }

    sub_1000866E8();
    swift_unknownObjectRelease();
  }
  else
  {
  }
}

uint64_t sub_1000BD0E8(uint64_t a1, unint64_t a2)
{
  NSString v3 = v2;
  [v3 showConfirmationRing];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1000B4C54(a1, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1000BD178()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for D2DSetupVisualAuthViewController();
  [super dealloc];
}

uint64_t sub_1000BD1B0()
{
  return type metadata accessor for D2DSetupVisualAuthViewController();
}

uint64_t type metadata accessor for D2DSetupVisualAuthViewController()
{
  uint64_t result = qword_1001CB768;
  if (!qword_1001CB768) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000BD204()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1000BD23C()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000BD274()
{
}

uint64_t sub_1000BD27C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000BD28C()
{
  return swift_release();
}

void sub_1000BD294()
{
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for D2DSetupFinishViewController();
  [super viewDidLoad];
  id v1 = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:101];
  [v1 startAnimating];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = [v0 contentView];
  [v2 addSubview:v1];

  id v3 = [v0 contentView];
  id v4 = [v3 mainContentGuide];

  id v5 = self;
  sub_100009A0C((uint64_t *)&unk_1001C8370);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10017CA90;
  id v7 = [v1 topAnchor];
  id v8 = [v4 topAnchor];
  id v9 = [v7 constraintGreaterThanOrEqualToAnchor:v8];

  *(void *)(v6 + 32) = v9;
  id v10 = [v1 bottomAnchor];
  id v11 = [v4 bottomAnchor];
  id v12 = [v10 constraintLessThanOrEqualToAnchor:v11];

  *(void *)(v6 + 40) = v12;
  id v13 = [v1 centerXAnchor];
  id v14 = [v4 centerXAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v6 + 48) = v15;
  id v16 = [v1 centerYAnchor];
  id v17 = [v4 centerYAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v6 + 56) = v18;
  specialized Array._endMutation()();
  sub_100012BB4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:isa];
}

void sub_1000BD618(void *a1, uint64_t a2, uint64_t a3, const char **a4, void (*a5)(uint64_t, uint64_t))
{
  v12.receiver = a1;
  v12.super_class = (Class)type metadata accessor for D2DSetupFinishViewController();
  id v8 = *a4;
  id v9 = v12.receiver;
  [super v8:a3];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    a5(Strong, v11);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

id sub_1000BD6F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for D2DSetupFinishViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for D2DSetupFinishViewController()
{
  return self;
}

uint64_t PasswordSharingAssembler.deinit()
{
  return v0;
}

uint64_t PasswordSharingAssembler.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PasswordSharingAssembler()
{
  return self;
}

id sub_1000BD78C(uint64_t a1)
{
  return [*v1 setChangeFlags:a1];
}

unint64_t sub_1000BD7A0(unint64_t result)
{
  if ((result & 0x8000000000000000) == 0) {
    return (unint64_t)[*v1 setDiscoveryFlags:result];
  }
  __break(1u);
  return result;
}

id sub_1000BD7BC()
{
  return [*v0 scanRate];
}

id sub_1000BD7CC(uint64_t a1)
{
  return [*v1 setScanRate:a1];
}

void sub_1000BD7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1000BD7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1000BD808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  id v8 = *v6;
  if (a1)
  {
    v10[4] = a1;
    v10[5] = a2;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    void v10[2] = sub_1000215A4;
    v10[3] = a5;
    id v9 = _Block_copy(v10);
    swift_release();
  }
  else
  {
    id v9 = 0;
  }
  [v8 *a6:v9];
  _Block_release(v9);
}

void sub_1000BD8B4(uint64_t a1, uint64_t a2)
{
  id v5 = *v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v8[4] = sub_1000BDADC;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10002167C;
  v8[3] = &unk_10019FB98;
  id v7 = _Block_copy(v8);
  sub_100029198(a1);
  swift_release();
  [v5 setDeviceChangedHandler:v7];
  sub_100017C38(a1);
  _Block_release(v7);
}

void sub_1000BD9B0(uint64_t a1, uint64_t a2)
{
  id v3 = *v2;
  if (a1)
  {
    v5[4] = a1;
    v5[5] = a2;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 1107296256;
    v5[2] = sub_1000C3530;
    v5[3] = &unk_10019FB48;
    id v4 = _Block_copy(v5);
    swift_retain();
    swift_release();
  }
  else
  {
    id v4 = 0;
  }
  [v3 activateWithCompletion:v4];
  _Block_release(v4);
}

id sub_1000BDA74()
{
  return [*v0 invalidate];
}

uint64_t sub_1000BDA84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000BDA94()
{
  return swift_release();
}

uint64_t sub_1000BDA9C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000BDADC()
{
  id v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

void *sub_1000BDB24(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    id v9 = (void *)((char *)a1 + v8);
    id v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[10];
    *(_DWORD *)((char *)a1 + a3[9]) = *(_DWORD *)((char *)a2 + a3[9]);
    *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
    uint64_t v14 = a3[11];
    uint64_t v15 = a3[12];
    id v16 = (void *)((char *)a1 + v14);
    id v17 = (void *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = (void *)((char *)a1 + v15);
    objc_super v20 = (void *)((char *)a2 + v15);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = a3[13];
    long long v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *long long v23 = *v24;
    v23[1] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1000BDC84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000BDD2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[11];
  uint64_t v14 = a3[12];
  uint64_t v15 = (void *)(a1 + v13);
  id v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (void *)(a1 + v14);
  uint64_t v19 = (void *)(a2 + v14);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = a3[13];
  uint64_t v22 = (void *)(a1 + v21);
  long long v23 = (void *)(a2 + v21);
  uint64_t v24 = v23[1];
  void *v22 = *v23;
  v22[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000BDE3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  id v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v10 = a3[11];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[12];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[13];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000BDF98(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t sub_1000BE064(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(_DWORD *)(a1 + a3[9]) = *(_DWORD *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[12];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  *uint64_t v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[13];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1000BE174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000BE188);
}

uint64_t sub_1000BE188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1000BE24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000BE260);
}

uint64_t sub_1000BE260(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for AuthenticateAccountsModel()
{
  uint64_t result = qword_1001CB8A8;
  if (!qword_1001CB8A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000BE36C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1000BE438(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for AuthenticateAccountsModel();
  uint64_t v12 = &a2[v11[11]];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = &a2[v11[12]];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v14 = &a2[v11[13]];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v52 = 0xD000000000000010;
  unint64_t v53 = 0x8000000100154A50;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v15 = sub_100008A4C((uint64_t)v54), (v16 & 1) != 0))
  {
    sub_100011954(*(void *)(a1 + 56) + 32 * v15, (uint64_t)&v55);
  }
  else
  {
    long long v55 = 0u;
    long long v56 = 0u;
  }
  sub_100009AFC((uint64_t)v54);
  if (!*((void *)&v56 + 1))
  {
    uint64_t v17 = (uint64_t *)&unk_1001C94F0;
    uint64_t v18 = (char *)&v55;
LABEL_10:
    sub_1000118F8((uint64_t)v18, v17);
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v48(v10, v6, v7);
      v48(a2, v10, v7);
      goto LABEL_17;
    }
    uint64_t v17 = (uint64_t *)&unk_1001C9450;
    uint64_t v18 = v6;
    goto LABEL_10;
  }
LABEL_11:
  if (qword_1001C7110 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100012C4C(v19, (uint64_t)qword_1001CB838);
  swift_bridgeObjectRetain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    v54[0] = swift_slowAlloc();
    unint64_t v50 = v11;
    uint64_t v51 = a2;
    *(_DWORD *)uint64_t v22 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v23 = Dictionary.description.getter();
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    *(void *)&long long v55 = sub_100025CA0(v23, v25, v54);
    uint64_t v11 = v50;
    a2 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "No device identifier. {userInfo: %s}", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  UUID.init()();
LABEL_17:
  *(void *)&long long v55 = 0x726174536F747561;
  *((void *)&v55 + 1) = 0xE900000000000074;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v26 = sub_100008A4C((uint64_t)v54), (v27 & 1) != 0))
  {
    sub_100011954(*(void *)(a1 + 56) + 32 * v26, (uint64_t)&v55);
  }
  else
  {
    long long v55 = 0u;
    long long v56 = 0u;
  }
  sub_100009AFC((uint64_t)v54);
  if (!*((void *)&v56 + 1))
  {
    sub_1000118F8((uint64_t)&v55, (uint64_t *)&unk_1001C94F0);
    goto LABEL_25;
  }
  if (!swift_dynamicCast())
  {
LABEL_25:
    char v28 = 0;
    goto LABEL_26;
  }
  char v28 = v52;
LABEL_26:
  a2[v11[5]] = v28;
  uint64_t v52 = 0x556E6F6973736573;
  unint64_t v53 = 0xEB00000000444955;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v29 = sub_100008A4C((uint64_t)v54), (v30 & 1) != 0))
  {
    sub_100011954(*(void *)(a1 + 56) + 32 * v29, (uint64_t)&v55);
  }
  else
  {
    long long v55 = 0u;
    long long v56 = 0u;
  }
  sub_100009AFC((uint64_t)v54);
  if (!*((void *)&v56 + 1))
  {
    sub_1000118F8((uint64_t)&v55, (uint64_t *)&unk_1001C94F0);
    goto LABEL_34;
  }
  if (!swift_dynamicCast())
  {
LABEL_34:
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    goto LABEL_35;
  }
  uint64_t v31 = v52;
  unint64_t v32 = v53;
LABEL_35:
  NSString v33 = (uint64_t *)&a2[v11[6]];
  *NSString v33 = v31;
  v33[1] = v32;
  *(void *)&long long v55 = 1769173874;
  *((void *)&v55 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v34 = sub_100008A4C((uint64_t)v54), (v35 & 1) != 0))
  {
    sub_100011954(*(void *)(a1 + 56) + 32 * v34, (uint64_t)&v55);
  }
  else
  {
    long long v55 = 0u;
    long long v56 = 0u;
  }
  sub_100009AFC((uint64_t)v54);
  if (!*((void *)&v56 + 1))
  {
    sub_1000118F8((uint64_t)&v55, (uint64_t *)&unk_1001C94F0);
    goto LABEL_43;
  }
  if (!swift_dynamicCast())
  {
LABEL_43:
    uint64_t v36 = 0;
    goto LABEL_44;
  }
  uint64_t v36 = v52;
LABEL_44:
  *(void *)&a2[v11[7]] = v36;
  uint64_t v52 = 0xD000000000000010;
  unint64_t v53 = 0x800000010015BAD0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v37 = sub_100008A4C((uint64_t)v54), (v38 & 1) != 0))
  {
    sub_100011954(*(void *)(a1 + 56) + 32 * v37, (uint64_t)&v55);
  }
  else
  {
    long long v55 = 0u;
    long long v56 = 0u;
  }
  sub_100009AFC((uint64_t)v54);
  if (!*((void *)&v56 + 1))
  {
    sub_1000118F8((uint64_t)&v55, (uint64_t *)&unk_1001C94F0);
LABEL_54:
    if (qword_1001C7110 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_100012C4C(v39, (uint64_t)qword_1001CB838);
    swift_bridgeObjectRetain();
    Swift::String_optional v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v40, v41))
    {
      Swift::String v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      *(_DWORD *)Swift::String v42 = 136446210;
      *(void *)&long long v55 = 0xD000000000000010;
      *((void *)&v55 + 1) = 0x800000010015BAD0;
      AnyHashable.init<A>(_:)();
      if (*(void *)(a1 + 16) && (unint64_t v43 = sub_100008A4C((uint64_t)v54), (v44 & 1) != 0))
      {
        sub_100011954(*(void *)(a1 + 56) + 32 * v43, (uint64_t)&v55);
      }
      else
      {
        long long v55 = 0u;
        long long v56 = 0u;
      }
      sub_100009AFC((uint64_t)v54);
      sub_100009A0C((uint64_t *)&unk_1001C94F0);
      uint64_t v45 = String.init<A>(describing:)();
      v54[0] = sub_100025CA0(v45, v46, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Invalid device action type, assuming v1. {deviceActionType: %{public}s}", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_63;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_54;
  }
  if (v52 == 43)
  {
    swift_bridgeObjectRelease();
    char v47 = 1;
    goto LABEL_64;
  }
  if (v52 != 32) {
    goto LABEL_54;
  }
  swift_bridgeObjectRelease();
LABEL_63:
  char v47 = 0;
LABEL_64:
  a2[v11[8]] = v47;
  *(_DWORD *)&a2[v11[9]] = 0;
  *(void *)&a2[v11[10]] = 0;
}

uint64_t sub_1000BED64()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CB838);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CB838);
  if (qword_1001C6F00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D1510);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1000BEE2C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v14 = sub_100009A0C(&qword_1001CB900);
  __chkstk_darwin(v14 - 8);
  char v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = a6;
  unint64_t v46 = a7;
  uint64_t v43 = a1;
  unint64_t v44 = a2;
  v42[10] = a3;
  v42[11] = a4;
  sub_1000B8BF4();
  uint64_t v17 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  unint64_t v19 = v18;
  uint64_t v45 = v17;
  unint64_t v46 = v18;
  uint64_t v43 = a3;
  unint64_t v44 = a4;
  uint64_t v20 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 1, 1, v20);
  uint64_t v21 = StringProtocol.range<A>(of:options:range:locale:)();
  unint64_t v23 = v22;
  LOBYTE(a3) = v24;
  sub_1000BF1E4((uint64_t)v16);
  if ((a3 & 1) != 0 || (v21 ^ v23) < 0x4000)
  {
    id v40 = objc_allocWithZone((Class)NSAttributedString);
    NSString v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v38 = [v40 initWithString:v39];
  }
  else
  {
    uint64_t v45 = v21;
    unint64_t v46 = v23;
    uint64_t v43 = v17;
    unint64_t v44 = v19;
    swift_bridgeObjectRetain();
    sub_100009A0C(&qword_1001CB908);
    sub_1000BF244();
    uint64_t v25 = _NSRange.init<A, B>(_:in:)();
    uint64_t v27 = v26;
    char v28 = self;
    id v29 = [v28 preferredFontForTextStyle:a5];
    [v29 pointSize];
    double v31 = v30;

    sub_100009A0C(&qword_1001C7C10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10017C370;
    *(void *)(inited + 32) = NSFontAttributeName;
    NSString v33 = NSFontAttributeName;
    id v34 = [v28 systemFontOfSize:v31];
    *(void *)(inited + 64) = sub_1000BF2A0();
    *(void *)(inited + 40) = v34;
    sub_100006F44(inited);
    id v35 = objc_allocWithZone((Class)NSMutableAttributedString);
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_10001C814();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v38 = [v35 initWithString:v36 attributes:isa];

    NSString v39 = [v28 boldSystemFontOfSize:v31];
    [v38 addAttribute:v33 value:v39 range:v25];
  }

  return v38;
}

uint64_t sub_1000BF1E4(uint64_t a1)
{
  uint64_t v2 = sub_100009A0C(&qword_1001CB900);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000BF244()
{
  unint64_t result = qword_1001CB910;
  if (!qword_1001CB910)
  {
    sub_10000B424(&qword_1001CB908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB910);
  }
  return result;
}

unint64_t sub_1000BF2A0()
{
  unint64_t result = qword_1001CB918;
  if (!qword_1001CB918)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001CB918);
  }
  return result;
}

uint64_t sub_1000BF2E0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CB920);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CB920);
  if (qword_1001C6EF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D14F8);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t *sub_1000BF3A8@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1000BF3C0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1000BF420()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1000BF470(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6574617473;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000BF4FC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100009A0C(&qword_1001CB998);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10002B550(a1, a1[3]);
  sub_1000C140C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[0] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v11[0] = *(unsigned char *)(v3 + 16);
    char v12 = 1;
    sub_1000C1460();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100069968(v3 + 24, (uint64_t)v13, &qword_1001C9428);
    sub_100069968((uint64_t)v13, (uint64_t)v11, &qword_1001C9428);
    char v12 = 2;
    sub_10002B73C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v11[0] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1000BF6FC()
{
  return sub_1000BF470(*v0);
}

uint64_t sub_1000BF704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1000C14B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1000BF72C(uint64_t a1)
{
  unint64_t v2 = sub_1000C140C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1000BF768(uint64_t a1)
{
  unint64_t v2 = sub_1000C140C();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1000BF7A4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000C1654(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1000BF7E8(void *a1)
{
  return sub_1000BF4FC(a1);
}

uint64_t sub_1000BF824(uint64_t *a1, void (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(v3 + *a1);
  if (v5)
  {
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v8 = v3;
    a2();
    swift_allocObject();
    uint64_t v6 = a3();
    *(void *)(v8 + v4) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

void sub_1000BF970(uint64_t a1, void *a2, void *aBlock)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  uint64_t v5 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v5;
  swift_retain();
  id v6 = a2;
  v4();
  swift_release();
  swift_release();
}

void sub_1000BFA28(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  Class v5 = isa;
  (*(void (**)(uint64_t))(a3 + 16))(a3);
}

uint64_t sub_1000BFB1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v9[4] = a2;
  v9[5] = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1000BFBE0;
  v9[3] = &unk_10019FC88;
  id v6 = _Block_copy(v9);
  long long v7 = *(void (**)(uint64_t, uint64_t, void *))(a4 + 16);
  swift_retain();
  v7(a4, a1, v6);
  _Block_release(v6);
  return swift_release();
}

uint64_t sub_1000BFBE0(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(void *, unint64_t))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v4 = v2;
    uint64_t v2 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;
  }
  else
  {
    swift_retain();
    unint64_t v6 = 0xF000000000000000;
  }
  v3(v2, v6);
  sub_10002B7E4((uint64_t)v2, v6);

  return swift_release();
}

id sub_1000BFC78()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC18SharingViewService32HeadphoneDigitalEngravingManager____lazy_storage___decoder] = 0;
  *(void *)&v0[OBJC_IVAR____TtC18SharingViewService32HeadphoneDigitalEngravingManager____lazy_storage___encoder] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC18SharingViewService32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  id v3 = objc_allocWithZone((Class)NSUserDefaults);
  id v4 = v0;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 initWithSuiteName:v5];

  if (!v6) {
    id v6 = [self standardUserDefaults];
  }
  *(void *)&v4[OBJC_IVAR____TtC18SharingViewService32HeadphoneDigitalEngravingManager_localStorage] = v6;

  v8.receiver = v4;
  v8.super_class = ObjectType;
  return [super init];
}

void sub_1000BFDA0(void *a1)
{
  id v3 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:[a1 productIdentifier]];
  if (v3)
  {
    id v4 = v3;
    unsigned int v5 = [v3 supportsDigitalEngraving];

    if (v5)
    {
      id v6 = [a1 addressString];
      if (v6)
      {
        long long v7 = v6;
        uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v10 = v9;

        sub_1000BFF8C(v8, v10, (uint64_t)v14);
        sub_1000C0E60((uint64_t)v14);
        sub_100069968((uint64_t)v14, (uint64_t)v15, &qword_1001CB980);
        if (v16) {
          goto LABEL_5;
        }
        v17[0] = v8;
        v17[1] = v10;
        char v18 = 0;
        long long v19 = xmmword_10017CAE0;
        uint64_t v20 = 0;
        swift_bridgeObjectRetain();
        sub_1000C0410((uint64_t)v17);
        swift_bridgeObjectRelease();
        sub_10002B7E4(0, 0xF000000000000000);
        uint64_t v11 = *(void (**)(void *, void (*)(uint64_t, unint64_t), void *))(v1 + OBJC_IVAR____TtC18SharingViewService32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler);
        if (!v11)
        {
LABEL_5:
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v12 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v13 = (void *)swift_allocObject();
          v13[2] = v8;
          v13[3] = v10;
          v13[4] = v12;
          sub_100029198((uint64_t)v11);
          swift_retain();
          v11(a1, sub_1000C0F5C, v13);
          sub_100017C38((uint64_t)v11);
          swift_release();
          swift_release();
        }
      }
    }
  }
}

void sub_1000BFF8C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v7 = *(id *)(v3 + OBJC_IVAR____TtC18SharingViewService32HeadphoneDigitalEngravingManager_localStorage);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 dictionaryForKey:v8];

  long long v10 = 0uLL;
  if (!v9)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    goto LABEL_13;
  }
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v11 + 16))
  {
    long long v20 = 0u;
    *(_OWORD *)uint64_t v21 = 0u;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_100008A90(a1, a2);
  if ((v13 & 1) == 0)
  {
    long long v20 = 0u;
    *(_OWORD *)uint64_t v21 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_100011954(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)&v21[8])
  {
LABEL_11:
    sub_100073364((uint64_t)&v20);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    long long v10 = 0uLL;
    goto LABEL_13;
  }
  uint64_t v15 = v23;
  unint64_t v14 = v24;
  sub_1000BF824(&OBJC_IVAR____TtC18SharingViewService32HeadphoneDigitalEngravingManager____lazy_storage___decoder, (void (*)(void))&type metadata accessor for JSONDecoder, (uint64_t (*)(void))&JSONDecoder.init());
  sub_1000C1044();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_10000A5B8(v15, v14);
  swift_release();
  uint64_t v17 = *((void *)&v20 + 1);
  uint64_t v16 = v20;
  uint64_t v18 = v21[0];
  long long v10 = *(_OWORD *)&v21[8];
  uint64_t v19 = v22;
LABEL_13:
  *(void *)a3 = v16;
  *(void *)(a3 + 8) = v17;
  *(void *)(a3 + 16) = v18;
  *(_OWORD *)(a3 + 24) = v10;
  *(void *)(a3 + 40) = v19;
}

void sub_1000C0410(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1000BF824(&OBJC_IVAR____TtC18SharingViewService32HeadphoneDigitalEngravingManager____lazy_storage___encoder, (void (*)(void))&type metadata accessor for JSONEncoder, (uint64_t (*)(void))&JSONEncoder.init());
  long long v4 = *(_OWORD *)(a1 + 16);
  long long v27 = *(_OWORD *)a1;
  long long v28 = v4;
  long long v29 = *(_OWORD *)(a1 + 32);
  sub_1000C0F68();
  uint64_t v5 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v7 = v6;
  swift_release();
  uint64_t v8 = OBJC_IVAR____TtC18SharingViewService32HeadphoneDigitalEngravingManager_localStorage;
  id v9 = *(id *)(v1 + OBJC_IVAR____TtC18SharingViewService32HeadphoneDigitalEngravingManager_localStorage);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 dictionaryForKey:v10];

  if (v11)
  {
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v13 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  *((void *)&v28 + 1) = &type metadata for Data;
  *(void *)&long long v27 = v5;
  *((void *)&v27 + 1) = v7;
  sub_100009A50(&v27, v26);
  swift_bridgeObjectRetain();
  sub_100009B90(v5, v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1000EA950(v26, v13, v12, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = *(id *)(v2 + v8);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  [v15 setObject:isa forKey:v17];

  if (qword_1001C7118 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_100012C4C(v18, (uint64_t)qword_1001CB920);
  sub_100009B90(v5, v7);
  sub_1000C0FBC(a1);
  sub_100009B90(v5, v7);
  sub_1000C0FBC(a1);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    *(void *)&v26[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315394;
    *(void *)&long long v27 = v5;
    *((void *)&v27 + 1) = v7;
    sub_100009B90(v5, v7);
    uint64_t v22 = String.init<A>(reflecting:)();
    *(void *)&long long v27 = sub_100025CA0(v22, v23, (uint64_t *)v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A5B8(v5, v7);
    sub_10000A5B8(v5, v7);
    *(_WORD *)(v21 + 12) = 2080;
    *(void *)&long long v27 = v13;
    *((void *)&v27 + 1) = v12;
    swift_bridgeObjectRetain();
    uint64_t v24 = String.init<A>(reflecting:)();
    *(void *)&long long v27 = sub_100025CA0(v24, v25, (uint64_t *)v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000C1000(a1);
    sub_1000C1000(a1);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Storing engraving data received from AACP %s for:%s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10000A5B8(v5, v7);
  }
  else
  {
    sub_10000A5B8(v5, v7);
    sub_10000A5B8(v5, v7);
    sub_10000A5B8(v5, v7);
    sub_1000C1000(a1);
    sub_1000C1000(a1);
  }
}

void sub_1000C0ABC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    uint64_t v25 = v4;
    uint64_t v26 = v5;
    sub_100009B90(a1, a2);
    if (qword_1001C7118 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100012C4C(v10, (uint64_t)qword_1001CB920);
    sub_100009B90(a1, a2);
    sub_100009B90(a1, a2);
    id v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      v18[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v19 = a1;
      unint64_t v20 = a2;
      sub_100009B90(a1, a2);
      uint64_t v14 = String.init<A>(reflecting:)();
      uint64_t v19 = sub_100025CA0(v14, v15, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10002B7E4(a1, a2);
      sub_10002B7E4(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Engraving data received from AACP %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10002B7E4(a1, a2);
      sub_10002B7E4(a1, a2);
    }

    uint64_t v19 = a3;
    unint64_t v20 = a4;
    char v21 = 1;
    uint64_t v22 = a1;
    unint64_t v23 = a2;
    uint64_t v24 = 0;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      NSString v17 = (void *)Strong;
      sub_10002B914(a1, a2);
      swift_bridgeObjectRetain();
      sub_1000C0410((uint64_t)&v19);
      sub_10002B7E4(a1, a2);
      swift_bridgeObjectRelease();
      sub_10002B7E4(a1, a2);
    }
    else
    {
      sub_10002B7E4(a1, a2);
    }
  }
}

uint64_t type metadata accessor for HeadphoneDigitalEngravingManager()
{
  return self;
}

uint64_t sub_1000C0E60(uint64_t a1)
{
  return a1;
}

void sub_1000C0E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_10002B7E4(a4, a5);
  }
}

uint64_t sub_1000C0EE4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C0F1C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000C0F5C(uint64_t a1, unint64_t a2)
{
  sub_1000C0ABC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_1000C0F68()
{
  unint64_t result = qword_1001CB988;
  if (!qword_1001CB988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB988);
  }
  return result;
}

uint64_t sub_1000C0FBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_10002B914(v2, v3);
  return a1;
}

uint64_t sub_1000C1000(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_10002B7E4(v2, v3);
  return a1;
}

unint64_t sub_1000C1044()
{
  unint64_t result = qword_1001CB990;
  if (!qword_1001CB990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB990);
  }
  return result;
}

uint64_t sub_1000C1098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000BFB1C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1000C10A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C10B0()
{
  return swift_release();
}

uint64_t sub_1000C10B8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C10F0(uint64_t a1, unint64_t a2)
{
  sub_1000BFA28(a1, a2, *(void *)(v2 + 16));
}

uint64_t destroy for HeadphoneDigitalEngravingManager.Record(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    return sub_10000A5B8(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_100009B90(v7, v6);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v6;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (uint64_t *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_100009B90(*v4, *(void *)(a2 + 32));
      uint64_t v8 = *(void *)(a1 + 24);
      unint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v5;
      sub_10000A5B8(v8, v9);
      goto LABEL_8;
    }
    sub_10002A824(a1 + 24);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_100009B90(*v4, *(void *)(a2 + 32));
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
LABEL_8:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

__n128 initializeWithTake for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unint64_t v5 = (void *)(a2 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v5;
      *(void *)(a1 + 32) = v7;
      sub_10000A5B8(v8, v6);
      goto LABEL_6;
    }
    sub_10002A824(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
LABEL_6:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record;
}

unint64_t sub_1000C140C()
{
  unint64_t result = qword_1001CB9A0;
  if (!qword_1001CB9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB9A0);
  }
  return result;
}

unint64_t sub_1000C1460()
{
  unint64_t result = qword_1001CB9A8;
  if (!qword_1001CB9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB9A8);
  }
  return result;
}

uint64_t sub_1000C14B4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000010015BC40
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010015BC60 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010015BC80)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000C1654@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100009A0C(&qword_1001CB9B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002B550(a1, a1[3]);
  sub_1000C140C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_10002BA5C((uint64_t)a1);
  }
  LOBYTE(v19) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  char v22 = 1;
  sub_1000C1968();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v21 = v19;
  char v22 = 2;
  sub_10002B63C();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v12 = v19;
  LOBYTE(v19) = 3;
  unint64_t v17 = v20;
  uint64_t v18 = v12;
  sub_10002B914(v12, v20);
  uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  unint64_t v15 = v17;
  uint64_t v14 = v18;
  sub_10002B914(v18, v17);
  sub_10002B7E4(v14, v15);
  swift_bridgeObjectRelease();
  sub_10002BA5C((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = sub_10002B7E4(v14, v15);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v13;
  return result;
}

unint64_t sub_1000C1968()
{
  unint64_t result = qword_1001CB9B8;
  if (!qword_1001CB9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB9B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C1A88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record.CodingKeys()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C1B8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record.State()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record.State;
}

unint64_t sub_1000C1BC8()
{
  unint64_t result = qword_1001CB9C0;
  if (!qword_1001CB9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB9C0);
  }
  return result;
}

unint64_t sub_1000C1C20()
{
  unint64_t result = qword_1001CB9C8;
  if (!qword_1001CB9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB9C8);
  }
  return result;
}

unint64_t sub_1000C1C78()
{
  unint64_t result = qword_1001CB9D0;
  if (!qword_1001CB9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB9D0);
  }
  return result;
}

unint64_t sub_1000C1CD0()
{
  unint64_t result = qword_1001CB9D8;
  if (!qword_1001CB9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB9D8);
  }
  return result;
}

unint64_t sub_1000C1D24()
{
  unint64_t result = qword_1001CB9E0;
  if (!qword_1001CB9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CB9E0);
  }
  return result;
}

void sub_1000C1D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  long long v6 = *(_OWORD *)(a3 + 144);
  v56[8] = *(_OWORD *)(a3 + 128);
  v56[9] = v6;
  long long v7 = *(_OWORD *)(a3 + 176);
  v56[10] = *(_OWORD *)(a3 + 160);
  v56[11] = v7;
  long long v8 = *(_OWORD *)(a3 + 80);
  v56[4] = *(_OWORD *)(a3 + 64);
  v56[5] = v8;
  long long v9 = *(_OWORD *)(a3 + 112);
  v56[6] = *(_OWORD *)(a3 + 96);
  v56[7] = v9;
  long long v10 = *(_OWORD *)(a3 + 16);
  v56[0] = *(_OWORD *)a3;
  v56[1] = v10;
  long long v11 = *(_OWORD *)(a3 + 48);
  v56[2] = *(_OWORD *)(a3 + 32);
  v56[3] = v11;
  nullsub_4(v56);
  uint64_t v12 = (uint64_t)&v3[OBJC_IVAR____TtC18SharingViewService26D2DSetupBaseViewController_viewModel];
  sub_100069968(v12, (uint64_t)v57, &qword_1001C79C8);
  sub_100069968((uint64_t)v56, v12, &qword_1001C79C8);
  sub_100019530(a3);
  sub_10007029C((uint64_t)v57);
  NSString v13 = String._bridgeToObjectiveC()();
  [v4 setTitle:v13];

  [v4 setAttributedSubtitle:*(void *)(a3 + 40)];
  uint64_t v14 = *(void **)(a3 + 24);
  if (v14)
  {
    uint64_t v15 = OBJC_IVAR____TtC18SharingViewService26D2DSetupWiFiViewController_imageView;
    uint64_t v16 = *(void **)&v4[OBJC_IVAR____TtC18SharingViewService26D2DSetupWiFiViewController_imageView];
    if (v16)
    {
      id v17 = v14;
      id v18 = v16;
      [v18 setImage:v17];
      uint64_t v19 = *(void **)(a3 + 32);
      if (v19)
      {
        id v20 = v19;
        [v18 setTintColor:v20];
      }
    }
    else
    {
      id v21 = [objc_allocWithZone((Class)UIImageView) initWithImage:v14];
      char v22 = *(void **)&v4[v15];
      *(void *)&v4[v15] = v21;

      sub_100069968(a3 + 32, (uint64_t)v53, &qword_1001CBA20);
      sub_100069968((uint64_t)v53, (uint64_t)&v54, &qword_1001CBA20);
      if (v54)
      {
        unint64_t v23 = *(void **)&v4[v15];
        if (!v23)
        {
LABEL_11:

          goto LABEL_12;
        }
        [v23 setTintColor:];
      }
    }
    uint64_t v24 = *(void **)&v4[v15];
    if (v24)
    {
      id v25 = v24;
      [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v26 = [v4 contentView];
      [v26 addSubview:v25];

      id v27 = [v4 contentView];
      id v28 = [v27 mainContentGuide];

      id v50 = self;
      sub_100009A0C((uint64_t *)&unk_1001C8370);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_10017CA90;
      id v30 = [v25 topAnchor];
      id v31 = [v28 topAnchor];
      id v32 = [v30 constraintGreaterThanOrEqualToAnchor:v31];

      *(void *)(v29 + 32) = v32;
      id v33 = [v25 bottomAnchor];
      id v34 = [v28 bottomAnchor];
      id v35 = [v33 constraintLessThanOrEqualToAnchor:v34];

      *(void *)(v29 + 40) = v35;
      id v36 = [v25 centerXAnchor];
      id v37 = [v28 centerXAnchor];
      id v38 = [v36 constraintEqualToAnchor:v37];

      *(void *)(v29 + 48) = v38;
      id v39 = [v25 centerYAnchor];
      id v40 = [v28 centerYAnchor];
      id v41 = [v39 constraintEqualToAnchor:v40];

      *(void *)(v29 + 56) = v41;
      aBlock[0] = v29;
      specialized Array._endMutation()();
      sub_100012BB4();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v50 activateConstraints:isa];
    }
    goto LABEL_11;
  }
LABEL_12:
  uint64_t v43 = OBJC_IVAR____TtC18SharingViewService26D2DSetupWiFiViewController_action;
  if (!*(void *)&v4[OBJC_IVAR____TtC18SharingViewService26D2DSetupWiFiViewController_action])
  {
    sub_100069968(a3 + 48, (uint64_t)v52, &qword_1001C9420);
    sub_100069968((uint64_t)v52, (uint64_t)v55, &qword_1001C9420);
    if (v55[1])
    {
      uint64_t v44 = swift_allocObject();
      swift_unknownObjectUnownedInit();
      sub_10009B0C4((uint64_t)v52);
      swift_retain();
      NSString v45 = String._bridgeToObjectiveC()();
      sub_1000C2670((uint64_t)v52);
      aBlock[4] = sub_1000C2668;
      aBlock[5] = v44;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000215A4;
      aBlock[3] = &unk_10019FED0;
      unint64_t v46 = _Block_copy(aBlock);
      id v47 = [self actionWithTitle:v45 style:0 handler:v46];

      _Block_release(v46);
      swift_release();
      swift_release();
      id v48 = [v4 addAction:v47];

      uint64_t v49 = *(void **)&v4[v43];
      *(void *)&v4[v43] = v48;
    }
  }
}

void sub_1000C2368()
{
  uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
  uint64_t v1 = *(void **)(Strong + OBJC_IVAR____TtC18SharingViewService26D2DSetupWiFiViewController_action);
  id v6 = (id)Strong;
  if (v1) {
    [v1 setEnabled:0];
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    if (qword_1001C7100 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100012C4C(v2, (uint64_t)qword_1001CB328);
    int v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "D2D Setup request turn on WiFi", v5, 2u);
      swift_slowDealloc();
    }

    sub_100087680();
    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void sub_1000C254C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService26D2DSetupWiFiViewController_action);
}

id sub_1000C258C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for D2DSetupWiFiViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for D2DSetupWiFiViewController()
{
  return self;
}

uint64_t sub_1000C2630()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C2668()
{
}

uint64_t sub_1000C2670(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000C269C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C26AC()
{
  return swift_release();
}

void sub_1000C26B4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000C28A0();
  }
}

uint64_t sub_1000C276C(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 showActivityIndicatorWithStatus:v3];

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v5 = [a1 text];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000F9638();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000C28A0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsAuthViewController_viewModel];
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setTitle:v2];

  NSString v3 = String._bridgeToObjectiveC()();
  [v0 setSubtitle:v3];

  [v0 setNumberOfDigits:*((void *)v1 + 5)];
  [v0 setDismissalType:*((void *)v1 + 6)];
  if (v1[32] == 1)
  {
    id v5 = String._bridgeToObjectiveC()();
    [v0 showActivityIndicatorWithStatus:];
  }
  else
  {
    [v0 hideActivityIndicator];
    id v4 = [v0 passcodeEntryView];
    id v5 = String._bridgeToObjectiveC()();
    [v4 setText:];
  }
}

id sub_1000C2A18()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AuthenticateAccountsAuthViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for AuthenticateAccountsAuthViewController()
{
  return self;
}

uint64_t sub_1000C2ACC(uint64_t a1, unint64_t a2)
{
  v28[3] = &type metadata for Data;
  v28[4] = &protocol witness table for Data;
  v28[0] = a1;
  v28[1] = a2;
  id v4 = sub_10002B550(v28, (uint64_t)&type metadata for Data);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_100009B90(a1, a2);
      sub_100009B90(v5, v6);
      long long v8 = (unsigned char *)__DataStorage._bytes.getter();
      if (v8)
      {
        uint64_t v9 = __DataStorage._offset.getter();
        if (!__OFSUB__((int)v5, v9))
        {
          v8 += (int)v5 - v9;
          goto LABEL_7;
        }
LABEL_31:
        __break(1u);
      }
LABEL_7:
      uint64_t v10 = __DataStorage._length.getter();
      if (v10 >= (v5 >> 32) - (int)v5) {
        uint64_t v11 = (v5 >> 32) - (int)v5;
      }
      else {
        uint64_t v11 = v10;
      }
      uint64_t v12 = &v8[v11];
      if (v8) {
        NSString v13 = v12;
      }
      else {
        NSString v13 = 0;
      }
      sub_1000E3F4C(v8, v13, &v27);
      sub_10000A5B8(v5, v6);
LABEL_27:
      sub_10000A5B8(a1, a2);
      uint64_t v24 = v27;
      sub_10002BA5C((uint64_t)v28);
      return v24;
    case 2uLL:
      uint64_t v14 = *(void *)(v5 + 16);
      uint64_t v15 = *(void *)(v5 + 24);
      sub_100009B90(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v16 = (unsigned char *)__DataStorage._bytes.getter();
      if (!v16) {
        goto LABEL_17;
      }
      uint64_t v17 = __DataStorage._offset.getter();
      if (__OFSUB__(v14, v17)) {
        goto LABEL_30;
      }
      v16 += v14 - v17;
LABEL_17:
      BOOL v18 = __OFSUB__(v15, v14);
      uint64_t v19 = v15 - v14;
      if (v18) {
        goto LABEL_29;
      }
      uint64_t v20 = __DataStorage._length.getter();
      if (v20 >= v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = v20;
      }
      char v22 = &v16[v21];
      if (v16) {
        unint64_t v23 = v22;
      }
      else {
        unint64_t v23 = 0;
      }
      sub_1000E3F4C(v16, v23, &v27);
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v26, 0, 14);
      sub_100009B90(a1, a2);
      long long v7 = v26;
      goto LABEL_26;
    default:
      v26[0] = *v4;
      LOWORD(v26[1]) = v6;
      BYTE2(v26[1]) = BYTE2(v6);
      BYTE3(v26[1]) = BYTE3(v6);
      BYTE4(v26[1]) = BYTE4(v6);
      BYTE5(v26[1]) = BYTE5(v6);
      sub_100009B90(a1, a2);
      long long v7 = (char *)v26 + BYTE6(v6);
LABEL_26:
      sub_1000E3F4C(v26, v7, &v27);
      goto LABEL_27;
  }
}

unint64_t sub_1000C2D80()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100009A0C(&qword_1001C7620);
  __chkstk_darwin(v6 - 8);
  long long v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009BE8(v1, (uint64_t)v8, &qword_1001C7620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    return 0xD000000000000012;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1000F4FF8(&qword_1001C95A0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v9;
}

unint64_t sub_1000C2F74()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  __chkstk_darwin(v6 - 8);
  long long v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009BE8(v1, (uint64_t)v8, (uint64_t *)&unk_1001C9450);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    return 0xD000000000000013;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1000F4FF8(&qword_1001C9460, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v9;
}

void *sub_1000C3168@<X0>(int a1@<W0>, unint64_t a2@<X1>, void *a3@<X3>, unint64_t a4@<X8>)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_17;
  }
  unint64_t v4 = a2;
  if (!a2) {
    return _swiftEmptyArrayStorage;
  }
  LODWORD(v5) = a1;
  a3 = sub_1000E2EA0(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v7 = a3[2];
  a4 = a3[3];
  unint64_t v6 = v7 + 1;
  if (v7 >= a4 >> 1) {
    goto LABEL_18;
  }
  while (1)
  {
    a3[2] = v6;
    *((unsigned char *)a3 + v7 + 32) = v5;
    if (v4 == 1) {
      break;
    }
    unint64_t v8 = a3[3];
    if (v6 >= v8 >> 1) {
      a3 = sub_1000E2EA0((void *)(v8 > 1), v7 + 2, 1, a3);
    }
    a4 = v5 >> 8;
    a3[2] = v7 + 2;
    *((unsigned char *)a3 + v6 + 32) = BYTE1(v5);
    unint64_t v5 = v4 - 2;
    if (v4 == 2) {
      break;
    }
    unint64_t v6 = v7 + 34;
    for (uint64_t i = 0xFFFFFFFFFFFFFFELL; i; --i)
    {
      a4 = a3[3];
      unint64_t v4 = v6 - 31;
      if (v6 - 32 >= a4 >> 1) {
        a3 = sub_1000E2EA0((void *)(a4 > 1), v6 - 31, 1, a3);
      }
      a3[2] = v4;
      *((unsigned char *)a3 + v6++) = 0;
      if (!--v5) {
        return a3;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    a3 = sub_1000E2EA0((void *)(a4 > 1), v6, 1, a3);
  }
  return a3;
}

void *sub_1000C32B0@<X0>(int a1@<W0>, unint64_t a2@<X1>, void *a3@<X3>, unint64_t a4@<X8>)
{
  if ((a2 & 0x8000000000000000) != 0) {
    goto LABEL_23;
  }
  unint64_t v4 = a2;
  if (!a2) {
    return _swiftEmptyArrayStorage;
  }
  LODWORD(v5) = a1;
  a3 = sub_1000E2EA0(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v7 = a3[2];
  a4 = a3[3];
  int64_t i = v7 + 1;
  if (v7 >= a4 >> 1) {
    goto LABEL_24;
  }
  while (1)
  {
    a3[2] = i;
    *((unsigned char *)a3 + v7 + 32) = v5;
    if (v4 == 1) {
      break;
    }
    unint64_t v9 = a3[2];
    unint64_t v8 = a3[3];
    if (v9 >= v8 >> 1) {
      a3 = sub_1000E2EA0((void *)(v8 > 1), v9 + 1, 1, a3);
    }
    a3[2] = v9 + 1;
    *((unsigned char *)a3 + v9 + 32) = BYTE1(v5);
    if (v4 == 2) {
      break;
    }
    unint64_t v11 = a3[2];
    unint64_t v10 = a3[3];
    if (v11 >= v10 >> 1) {
      a3 = sub_1000E2EA0((void *)(v10 > 1), v11 + 1, 1, a3);
    }
    a3[2] = v11 + 1;
    *((unsigned char *)a3 + v11 + 32) = BYTE2(v5);
    if (v4 == 3) {
      break;
    }
    unint64_t v7 = a3[2];
    unint64_t v12 = a3[3];
    if (v7 >= v12 >> 1) {
      a3 = sub_1000E2EA0((void *)(v12 > 1), v7 + 1, 1, a3);
    }
    a4 = BYTE3(v5);
    a3[2] = v7 + 1;
    *((unsigned char *)a3 + v7 + 32) = BYTE3(v5);
    unint64_t v5 = v4 - 4;
    if (v4 == 4) {
      break;
    }
    for (int64_t i = 0xFFFFFFFFFFFFFFCLL; i; --i)
    {
      unint64_t v7 = a3[2];
      unint64_t v13 = a3[3];
      unint64_t v4 = v7 + 1;
      if (v7 >= v13 >> 1) {
        a3 = sub_1000E2EA0((void *)(v13 > 1), v7 + 1, 1, a3);
      }
      a3[2] = v4;
      a4 = (unint64_t)a3 + v7;
      *((unsigned char *)a3 + v7 + 32) = 0;
      if (!--v5) {
        return a3;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    a3 = sub_1000E2EA0((void *)(a4 > 1), i, 1, a3);
  }
  return a3;
}

void sub_1000C3470(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3 == 1)
  {
    sub_1000E7D54((uint64_t)a4, (uint64_t)v10);

    sub_1000619BC(v10[0], v10[1], (void *)v10[2]);
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10[0] = *v4;
    *unint64_t v4 = 0x8000000000000000;
    sub_1000EA0F0(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *unint64_t v4 = v10[0];

    swift_bridgeObjectRelease();
  }
}

void sub_1000C3530(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_1000C359C(uint64_t a1)
{
  return sub_1000C35B4(a1);
}

uint64_t sub_1000C35B4(uint64_t a1)
{
  if (qword_1001C6F08 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v6 = off_1001C7CC0;
  uint64_t v24 = off_1001C7CC0;
  off_1001C7CC0 = (_UNKNOWN *)0x8000000000000000;
  unint64_t v8 = sub_100008A90(v4, v3);
  uint64_t v9 = v6[2];
  BOOL v10 = (v7 & 1) == 0;
  uint64_t v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v1 = v7;
  if (v6[3] < v11)
  {
    sub_1000E8730(v11, isUniquelyReferenced_nonNull_native);
    unint64_t v6 = v24;
    unint64_t v12 = sub_100008A90(v4, v3);
    if ((v1 & 1) == (v13 & 1))
    {
      unint64_t v8 = v12;
      goto LABEL_8;
    }
    goto LABEL_17;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_15;
  }
  while (1)
  {
LABEL_8:
    off_1001C7CC0 = v6;
    swift_bridgeObjectRelease();
    uint64_t v14 = off_1001C7CC0;
    if (v1) {
      goto LABEL_11;
    }
    *((void *)off_1001C7CC0 + (v8 >> 6) + 8) |= 1 << v8;
    uint64_t v15 = (uint64_t *)(v14[6] + 16 * v8);
    *uint64_t v15 = v4;
    v15[1] = v3;
    *(void *)(v14[7] + 8 * v8) = 0;
    uint64_t v16 = v14[2];
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17) {
      break;
    }
    v14[2] = v18;
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v19 = v14[7];
    uint64_t v20 = *(void *)(v19 + 8 * v8);
    BOOL v21 = __CFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      *(void *)(v19 + 8 * v8) = v22;
      swift_endAccess();
      return swift_bridgeObjectRelease();
    }
LABEL_14:
    __break(1u);
LABEL_15:
    sub_1000EB034();
    unint64_t v6 = v24;
  }
  __break(1u);
LABEL_17:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000C378C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_1000C37E0()
{
  char v1 = v0;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "startTapped", v5, 2u);
    swift_slowDealloc();
  }

  v1[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_didTapStart] = 1;
  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sessionError];
  if (!v6)
  {
    uint64_t v7 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleVC;
    unint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleVC];
    if (!v8)
    {
      id v19 = objc_allocWithZone((Class)type metadata accessor for AirTagRolePickerViewController());
      uint64_t v20 = v1;
      id v21 = [v19 init];
      swift_unknownObjectWeakAssign();

      uint64_t v22 = *(void **)&v1[v7];
      *(void *)&v1[v7] = v21;

      unint64_t v23 = *(void **)&v1[v7];
      if (!v23) {
        goto LABEL_17;
      }
      id v24 = v23;
      sub_100073BF8(&v30);
      NSString v25 = String._bridgeToObjectiveC()();
      NSString v26 = String._bridgeToObjectiveC()();
      NSString v27 = String._bridgeToObjectiveC()();
      NSString v28 = String._bridgeToObjectiveC()();
      sub_1000B8B9C((uint64_t)&v30);
      id v29 = [v24 dismissalConfirmationActionWithTitle:v25 message:v26 confirmButtonTitle:v27 cancelButtonTitle:v28];

      [v24 setDismissButtonAction:v29];
      unint64_t v8 = *(void **)&v1[v7];
      if (!v8) {
        goto LABEL_17;
      }
    }
    uint64_t v9 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav;
    BOOL v10 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
    if (v10)
    {
      id v11 = v8;
      id v12 = v10;
      id v13 = [v12 viewControllers];
      sub_100017EF4(0, (unint64_t *)&qword_1001C9650);
      unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v15 = v11;
      LOBYTE(v13) = sub_1000EEBC4(v14);

      swift_bridgeObjectRelease();
      uint64_t v16 = *(void **)&v1[v9];
      if ((v13 & 1) == 0)
      {
        if (v16)
        {
          id v17 = v16;
          [v17 pushViewController:v15 animated:1];
          goto LABEL_16;
        }
LABEL_23:
        __break(1u);
        return;
      }
      if (v16)
      {
        id v17 = v16;

LABEL_16:
LABEL_17:
        sub_1000C6930(v18);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_23;
  }
  swift_errorRetain();
  sub_1000D5DB0(v6);

  swift_errorRelease();
}

uint64_t sub_1000C3B54(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

unint64_t sub_1000C3B60(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_100009A0C(&qword_1001C7240);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  uint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  BOOL v10 = (char *)&type metadata for Any + 8;
  id v11 = &type metadata for Bool;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_10002BAB0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    id v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_100009A50(v6, v7);
    sub_100009A50(v7, v40);
    sub_100009A50(v40, &v38);
    unint64_t result = sub_100008A90(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      id v12 = v7;
      id v13 = v6;
      uint64_t v14 = v1;
      id v15 = v11;
      uint64_t v16 = v10;
      id v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *id v17 = v35;
      v17[1] = v36;
      BOOL v10 = v16;
      id v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      uint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_10002BA5C((uint64_t)v18);
      unint64_t result = (unint64_t)sub_100009A50(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    NSString v27 = (uint64_t *)(v2[6] + 16 * result);
    *NSString v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_100009A50(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1000C3EBC(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100009A0C(&qword_1001C7258);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v26 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v25) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v26 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v25) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v26 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v25) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v26 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v25) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v26 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    int v17 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v12);
    sub_100011954(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v38 + 8);
    LODWORD(v38[0]) = v17;
    v36[0] = v38[0];
    v36[1] = v38[1];
    uint64_t v37 = v39;
    LODWORD(v35[0]) = v17;
    swift_dynamicCast();
    sub_100009A50((_OWORD *)((char *)v36 + 8), v30);
    long long v31 = v27;
    long long v32 = v28;
    uint64_t v33 = v29;
    sub_100009A50(v30, v34);
    long long v27 = v31;
    long long v28 = v32;
    uint64_t v29 = v33;
    sub_100009A50(v34, v35);
    sub_100009A50(v35, &v31);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v18 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)&v6[8 * (v19 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v19) & ~*(void *)&v6[8 * (v19 >> 6)])) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)&v6[8 * v20];
      }
      while (v24 == -1);
      unint64_t v9 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v27;
    *(_OWORD *)(v10 + 16) = v28;
    *(void *)(v10 + 32) = v29;
    uint64_t result = (uint64_t)sub_100009A50(&v31, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v25)
  {
LABEL_37:
    swift_release();
    sub_10002BAB0();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v26 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v25) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v26 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1000C4274(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C4320(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1000C4348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000118F8(a1, &qword_1001C9540);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1000C44F4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1000C4580(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_100017EF4(0, &qword_1001CBCD0);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C4604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          int64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1000C473C(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v7 = *(void (**)(uint64_t, double, double, double))(a1 + 32);
  uint64_t v8 = swift_retain();
  v7(v8, a2, a3, a4);

  return swift_release();
}

void sub_1000C47A8()
{
  uint64_t v1 = type metadata accessor for B389PresentationConfig.Mode(0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (unsigned __int8 *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  Swift::Int v6 = (char *)&v30 - v5;
  uint64_t v7 = sub_100009A0C(&qword_1001C9418);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  BOOL v12 = (char *)&v30 - v11;
  uint64_t v30 = v0;
  uint64_t v13 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
  swift_beginAccess();
  sub_100009BE8(v13, (uint64_t)v12, &qword_1001C9418);
  uint64_t v14 = type metadata accessor for B389PresentationConfig(0);
  unint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  if (v15(v12, 1, v14) == 1)
  {
    __break(1u);
    goto LABEL_17;
  }
  sub_10002B7F8((uint64_t)&v12[*(int *)(v14 + 24)], (uint64_t)v6, type metadata accessor for B389PresentationConfig.Mode);
  sub_10002B7F8((uint64_t)v6, (uint64_t)v4, type metadata accessor for B389PresentationConfig.Mode);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      sub_100061E18((uint64_t)v4, type metadata accessor for B389PresentationConfig.Mode);
      sub_100061E18((uint64_t)v6, type metadata accessor for B389PresentationConfig.Mode);
      sub_100061E18((uint64_t)v12, type metadata accessor for B389PresentationConfig);
LABEL_9:
      sub_100009BE8(v13, (uint64_t)v10, &qword_1001C9418);
      if (v15(v10, 1, v14) != 1)
      {
        uint64_t v21 = *(void *)&v10[*(int *)(v14 + 44)];
        type metadata accessor for SDB389BubbleMonitor();
        swift_allocObject();
        uint64_t v22 = sub_100020B18(v21);
        sub_100061E18((uint64_t)v10, type metadata accessor for B389PresentationConfig);
        uint64_t v20 = v30;
        *(void *)(v30 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_bubbleMonitor) = v22;
        goto LABEL_11;
      }
LABEL_17:
      __break(1u);
      return;
    }
    int v17 = v4[*(int *)(sub_100009A0C((uint64_t *)&unk_1001C9580) + 48)];
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v18 - 8) + 8))(v4, v18);
  }
  else
  {
    int v17 = *v4;
  }
  sub_100061E18((uint64_t)v6, type metadata accessor for B389PresentationConfig.Mode);
  sub_100061E18((uint64_t)v12, type metadata accessor for B389PresentationConfig);
  if (!v17) {
    goto LABEL_9;
  }
  type metadata accessor for SDB389BubbleMonitor();
  swift_allocObject();
  uint64_t v19 = sub_100020B18(-50);
  uint64_t v20 = v30;
  *(void *)(v30 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_bubbleMonitor) = v19;
LABEL_11:
  swift_release();
  uint64_t v23 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_bubbleMonitor;
  uint64_t v24 = *(void *)(v20 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_bubbleMonitor);
  if (v24)
  {
    sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
    swift_retain();
    uint64_t v25 = static OS_dispatch_queue.main.getter();
    swift_beginAccess();
    uint64_t v26 = *(void **)(v24 + 24);
    *(void *)(v24 + 24) = v25;
    swift_release();

    uint64_t v27 = *(void *)(v20 + v23);
    if (v27)
    {
      uint64_t v28 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_beginAccess();
      uint64_t v29 = *(void *)(v27 + 48);
      *(void *)(v27 + 48) = sub_1000F5BDC;
      *(void *)(v27 + 56) = v28;
      sub_100017C38(v29);
      if (*(void *)(v20 + v23))
      {
        swift_retain();
        sub_100020B98((uint64_t)nullsub_4, 0);
        swift_release();
      }
    }
  }
}

void sub_1000C4C30(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for B389PresentationConfig.Mode(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (unsigned __int8 *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v45 - v8;
  uint64_t v10 = sub_100009A0C(&qword_1001C9418);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v45 - v14;
  if (qword_1001C6E58 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1001D1410;
  NSString v17 = String._bridgeToObjectiveC()();
  LOBYTE(v16) = [(id)v16 BOOLForKey:v17];

  if ((v16 & 1) == 0)
  {
    uint64_t v18 = (uint64_t)v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
    swift_beginAccess();
    sub_100009BE8(v18, (uint64_t)v15, &qword_1001C9418);
    uint64_t v19 = type metadata accessor for B389PresentationConfig(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v15, 1, v19) == 1)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    int v20 = v15[*(int *)(v19 + 40)];
    sub_100061E18((uint64_t)v15, type metadata accessor for B389PresentationConfig);
    if (v20 == 1)
    {
      sub_1000E0A70(a1);
      return;
    }
  }
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_100012C4C(v21, (uint64_t)qword_1001CBA60);
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "continuePressed", v24, 2u);
    swift_slowDealloc();
  }

  sub_1000CD3A8(1);
  id v25 = objc_allocWithZone((Class)LSApplicationRecord);
  id v26 = sub_1000E2BC8(0xD000000000000010, 0x8000000100154550, 0);
  uint64_t v39 = v26;
  if (!v26)
  {
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "FindMy not installed when continueFromStartView, showing AirTagInstallFindMyViewController", v29, 2u);
      swift_slowDealloc();
    }

    id v30 = objc_allocWithZone((Class)type metadata accessor for AirTagInstallFindMyViewController());
    long long v31 = v2;
    id v32 = [v30 init];
    swift_unknownObjectWeakAssign();

    sub_100073BF8(&v46);
    NSString v33 = String._bridgeToObjectiveC()();
    NSString v34 = String._bridgeToObjectiveC()();
    NSString v35 = String._bridgeToObjectiveC()();
    NSString v36 = String._bridgeToObjectiveC()();
    sub_1000B8B9C((uint64_t)&v46);
    id v37 = [v32 dismissalConfirmationActionWithTitle:v33 message:v34 confirmButtonTitle:v35 cancelButtonTitle:v36];

    [v32 setDismissButtonAction:v37];
    long long v38 = *(void **)&v31[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
    if (v38)
    {
      sub_1000C6930((uint64_t)[v38 pushViewController:v32 animated:1]);

      return;
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_1000C37E0();
  uint64_t v40 = (uint64_t)v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
  swift_beginAccess();
  sub_100009BE8(v40, (uint64_t)v13, &qword_1001C9418);
  uint64_t v41 = type metadata accessor for B389PresentationConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v13, 1, v41) != 1)
  {
    sub_10002B7F8((uint64_t)&v13[*(int *)(v41 + 24)], (uint64_t)v9, type metadata accessor for B389PresentationConfig.Mode);
    sub_10002B7F8((uint64_t)v9, (uint64_t)v7, type metadata accessor for B389PresentationConfig.Mode);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        sub_100061E18((uint64_t)v7, type metadata accessor for B389PresentationConfig.Mode);
        sub_100061E18((uint64_t)v9, type metadata accessor for B389PresentationConfig.Mode);
        sub_100061E18((uint64_t)v13, type metadata accessor for B389PresentationConfig);
LABEL_25:

        return;
      }
      int v43 = v7[*(int *)(sub_100009A0C((uint64_t *)&unk_1001C9580) + 48)];
      uint64_t v44 = type metadata accessor for UUID();
      (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v44 - 8) + 8))(v7, v44);
    }
    else
    {
      int v43 = *v7;
    }
    sub_100061E18((uint64_t)v9, type metadata accessor for B389PresentationConfig.Mode);
    sub_100061E18((uint64_t)v13, type metadata accessor for B389PresentationConfig);
    if (v43) {
      sub_1000E0C74();
    }
    goto LABEL_25;
  }
LABEL_28:
  __break(1u);
}

void sub_1000C52D4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_linkingVC);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    sub_100073BF8(&v24);
    NSString v4 = String._bridgeToObjectiveC()();
    NSString v5 = String._bridgeToObjectiveC()();
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    sub_1000B8B9C((uint64_t)&v24);
    id v8 = [v3 dismissalConfirmationActionWithTitle:v4 message:v5 confirmButtonTitle:v6 cancelButtonTitle:v7];

    [v3 setDismissButtonAction:v8];
    uint64_t v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_appleIDInfo);
    swift_beginAccess();
    uint64_t v10 = *v9;
    uint64_t v11 = v9[1];
    uint64_t v12 = (void *)v9[2];
    uint64_t v13 = v9[3];
    uint64_t v14 = v9[4];
    unint64_t v15 = (uint64_t *)&v3[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_appleIDInfo];
    uint64_t v16 = *(void *)&v3[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_appleIDInfo];
    uint64_t v17 = *(void *)&v3[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_appleIDInfo + 8];
    uint64_t v18 = *(void **)&v3[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_appleIDInfo + 16];
    *unint64_t v15 = v10;
    v15[1] = v11;
    v15[2] = (uint64_t)v12;
    v15[3] = v13;
    v15[4] = v14;
    sub_100061F8C(v10, v11, v12);
    sub_100061F8C(v10, v11, v12);
    sub_10001CAD4(v16, v17, v18);
    sub_100081800();
    sub_10001CAD4(v10, v11, v12);
    uint64_t v19 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav);
    if (v19)
    {
      [v19 pushViewController:v3 animated:1];
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100012C4C(v20, (uint64_t)qword_1001CBA60);
    oslog = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(oslog, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v21, "linkingVC is nill when showLoadingView is called", v22, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1000C5598()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_namingVC);
  if (v1)
  {
    id v2 = v1;
    sub_100073BF8(&v13);
    NSString v3 = String._bridgeToObjectiveC()();
    NSString v4 = String._bridgeToObjectiveC()();
    NSString v5 = String._bridgeToObjectiveC()();
    NSString v6 = String._bridgeToObjectiveC()();
    sub_1000B8B9C((uint64_t)&v13);
    id v7 = [v2 dismissalConfirmationActionWithTitle:v3 message:v4 confirmButtonTitle:v5 cancelButtonTitle:v6];

    [v2 setDismissButtonAction:v7];
    id v8 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav);
    if (v8)
    {
      sub_1000C6930((uint64_t)[v8 pushViewController:v2 animated:1]);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100012C4C(v9, (uint64_t)qword_1001CBA60);
    oslog = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(oslog, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v10, "namingVC is nill when showNamingVC is called", v11, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1000C5790()
{
  uint64_t v1 = sub_100009A0C(&qword_1001C7CD0);
  __chkstk_darwin(v1 - 8);
  NSString v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchTimeInterval();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char **)((char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for DispatchTime();
  os_log_t v50 = *(os_log_t *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v10 = __chkstk_darwin(v9);
  Swift::String v13 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_loadingVC];
  if (v13)
  {
    uint64_t v45 = v12;
    Swift::String v46 = v3;
    id v47 = (char *)&v45 - v11;
    uint64_t v48 = v10;
    id v14 = v13;
    sub_100073BF8(&v51);
    NSString v15 = String._bridgeToObjectiveC()();
    NSString v16 = String._bridgeToObjectiveC()();
    NSString v17 = String._bridgeToObjectiveC()();
    NSString v18 = String._bridgeToObjectiveC()();
    uint64_t v49 = v0;
    uint64_t v19 = v18;
    sub_1000B8B9C((uint64_t)&v51);
    id v20 = [v14 dismissalConfirmationActionWithTitle:v15 message:v16 confirmButtonTitle:v17 cancelButtonTitle:v19];

    [v14 setDismissButtonAction:v20];
    os_log_type_t v21 = *(void **)&v49[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
    if (v21)
    {
      id v22 = v14;
      [v21 pushViewController:v22 animated:1];
      os_log_type_t v23 = v45;
      static DispatchTime.now()();
      void *v7 = 90;
      (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchTimeInterval.seconds(_:), v4);
      Swift::String v24 = v47;
      + infix(_:_:)();
      (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
      os_log_t v25 = v50;
      Class isa = v50[1].isa;
      uint64_t v27 = v48;
      ((void (*)(char *, uint64_t))isa)(v23, v48);
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_100012C4C(v28, (uint64_t)qword_1001CBA60);
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        long long v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Starting timeout.", v31, 2u);
        os_log_t v25 = v50;
        swift_slowDealloc();
      }

      ((void (*)(char *, char *, uint64_t))v25[2].isa)(v23, v24, v27);
      uint64_t v32 = (uint64_t)v46;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v25[7].isa)(v46, 1, 1, v27);
      sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
      NSString v33 = (void *)static OS_dispatch_queue.main.getter();
      NSString v34 = v23;
      uint64_t v35 = swift_allocObject();
      NSString v36 = v49;
      *(void *)(v35 + 16) = v49;
      type metadata accessor for PushableTimer(0);
      swift_allocObject();
      id v37 = v36;
      uint64_t v38 = sub_100028284(v34, v32, v33, (uint64_t)sub_1000F5BB8, v35);

      swift_release();
      uint64_t v39 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_timeout;
      *(void *)&v37[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_timeout] = v38;
      uint64_t v40 = swift_release();
      if (*(void *)&v37[v39])
      {
        swift_getObjectType();
        swift_retain();
        OS_dispatch_source.resume()();
        uint64_t v40 = swift_release();
      }
      sub_1000C6930(v40);

      ((void (*)(char *, uint64_t))isa)(v47, v48);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_100012C4C(v41, (uint64_t)qword_1001CBA60);
    os_log_t v50 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v50, v42))
    {
      int v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v42, "loadingVC is nill when showLoadingView is called", v43, 2u);
      swift_slowDealloc();
    }
    os_log_t v44 = v50;
  }
}

uint64_t sub_1000C5D90()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CBA60);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CBA60);
  if (qword_1001C6ED8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D1498);
  NSString v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t (*sub_1000C5E58())()
{
  return j__swift_endAccess;
}

BOOL sub_1000C5EB4(uint64_t a1, uint64_t a2)
{
  return sub_1000EDBEC(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_1000C5ED0()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleName + 8))
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleName);
LABEL_3:
    swift_bridgeObjectRetain();
    return v1;
  }
  if (!*(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories))
  {
    uint64_t v1 = 0;
    goto LABEL_3;
  }
  unint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1000391F0(v3);
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex + 8) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = 0;
    goto LABEL_3;
  }
  unint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex);
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v5 < v4[2])
  {
    id v6 = (id)v4[2 * v5 + 5];
    swift_bridgeObjectRelease();
    id v7 = [v6 roleId];
    if (v7 == (id)SPBeaconRoleIdOther)
    {
      id v8 = [self mainBundle];
      NSString v9 = String._bridgeToObjectiveC()();
      NSString v10 = String._bridgeToObjectiveC()();
      id v11 = sub_100138304(v8, v9, v10);
    }
    else
    {
      id v11 = [v6 role];
    }
    uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    id v14 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_fnameDisplay);
    uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_fnameDisplay + 8);
    if (v15)
    {
      uint64_t v16 = *v14;
      NSString v17 = self;
      swift_bridgeObjectRetain();
      id v18 = [v17 mainBundle];
      NSString v19 = String._bridgeToObjectiveC()();
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = sub_100138304(v18, v19, v20);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100009A0C((uint64_t *)&unk_1001C9530);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_10017C360;
      *(void *)(v22 + 56) = &type metadata for String;
      unint64_t v23 = sub_1000117E4();
      *(void *)(v22 + 32) = v16;
      *(void *)(v22 + 40) = v15;
      *(void *)(v22 + 96) = &type metadata for String;
      *(void *)(v22 + 104) = v23;
      *(void *)(v22 + 64) = v23;
      *(void *)(v22 + 72) = v1;
      *(void *)(v22 + 80) = v13;
      uint64_t v1 = static String.localizedStringWithFormat(_:_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
    }
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C61F8()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleEmoji + 8))
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleEmoji);
LABEL_10:
    swift_bridgeObjectRetain();
    return v1;
  }
  if (!*(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories))
  {
LABEL_6:
    uint64_t v1 = 0;
    goto LABEL_10;
  }
  unint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = sub_1000391F0(v2);
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex + 8) == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  unint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex);
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v5 < v3[2])
  {
    id v6 = (id)v3[2 * v5 + 5];
    swift_bridgeObjectRelease();
    id v7 = [v6 roleEmoji];

    uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1000C632C(char a1)
{
  unint64_t v2 = v1;
  v51.receiver = v1;
  v51.super_class = (Class)type metadata accessor for AirTagSetupMainViewController();
  [super viewDidAppear:a1 & 1];
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CBA60);
  unint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "AirTagSetupMainViewController viewWillAppear", v7, 2u);
    swift_slowDealloc();
  }

  id v8 = [v2 _remoteViewControllerProxy];
  *(void *)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_retain] = v8;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (v8)
  {
    [v8 setStatusBarHidden:1 withDuration:0.0];
    swift_unknownObjectRetain();
    [v8 setDesiredHardwareButtonEvents:[v2 desiredHomeButtonEvents]];
    swift_unknownObjectRelease();
  }
  sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
  NSString v9 = (void *)static OS_dispatch_queue.main.getter();
  sub_100009A0C(&qword_1001C9640);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10017C370;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v11;
  *(void *)(inited + 72) = &type metadata for Bool;
  *(unsigned char *)(inited + 48) = 1;
  sub_100007074(inited);
  id v12 = objc_allocWithZone((Class)CBCentralManager);
  uint64_t v13 = v2;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [v12 initWithDelegate:v13 queue:v9 options:isa];

  uint64_t v16 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central;
  NSString v17 = *(void **)&v13[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central];
  *(void *)&v13[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central] = v15;

  id v18 = *(void **)&v13[v16];
  if (!v18)
  {
    __break(1u);
    goto LABEL_15;
  }
  sub_100017EF4(0, (unint64_t *)&unk_1001C94B0);
  id v19 = v18;
  Class v20 = Array._bridgeToObjectiveC()().super.isa;
  sub_100007074((uint64_t)_swiftEmptyArrayStorage);
  Class v21 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v19 scanForPeripheralsWithServices:v20 options:v21];

  uint64_t v22 = *(void **)&v13[v16];
  if (!v22)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v23 = [v22 sharedPairingAgent];
  if (!v23)
  {
LABEL_16:
    __break(1u);
    return;
  }
  Swift::String v24 = v23;
  [v23 setDelegate:v13];

  if (sub_1000623DC())
  {
    id v25 = objc_allocWithZone((Class)type metadata accessor for AirTagStartViewController());
    id v26 = v13;
    uint64_t v27 = (char *)[v25 init];
    swift_unknownObjectWeakAssign();

    uint64_t v28 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v29 = (void (**)())&v27[OBJC_IVAR____TtC18SharingViewService25AirTagStartViewController_invalidateBubbleMonitor];
    uint64_t v30 = *(void *)&v27[OBJC_IVAR____TtC18SharingViewService25AirTagStartViewController_invalidateBubbleMonitor];
    NSObject *v29 = sub_1000F58D4;
    v29[1] = (void (*)())v28;
    sub_100017C38(v30);
    long long v31 = *(void **)&v26[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_startVC];
    *(void *)&v26[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_startVC] = v27;
    uint64_t v32 = v27;
  }
  else
  {
    NSString v33 = (objc_class *)type metadata accessor for AirTagRestrictedViewController();
    id v34 = objc_allocWithZone(v33);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    v50.receiver = v34;
    v50.super_class = v33;
    uint64_t v32 = (char *)[super initWithContentView:0];
  }
  id v35 = objc_allocWithZone((Class)type metadata accessor for AirTagCustomNameViewController());
  NSString v36 = v13;
  id v37 = sub_100076DEC(v36);
  uint64_t v38 = *(void **)&v36[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_namingVC];
  *(void *)&v36[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_namingVC] = v37;

  id v39 = objc_allocWithZone((Class)type metadata accessor for AirTagLinkingViewController());
  uint64_t v40 = v36;
  uint64_t v41 = sub_100081F44((uint64_t)v40);
  os_log_type_t v42 = *(void **)&v40[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_linkingVC];
  *(void *)&v40[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_linkingVC] = v41;

  id v43 = objc_allocWithZone((Class)type metadata accessor for AirTagLoadingViewController());
  os_log_t v44 = v40;
  id v45 = [v43 init];
  swift_unknownObjectWeakAssign();

  Swift::String v46 = *(void **)&v44[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_loadingVC];
  *(void *)&v44[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_loadingVC] = v45;

  id v47 = [v44 presentProxCardFlowWithDelegate:v44 initialViewController:v32];
  uint64_t v48 = *(void **)&v44[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
  *(void *)&v44[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav] = v47;

  sub_1000C6930(v49);
  swift_unknownObjectRelease();
}

void sub_1000C68BC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_bubbleMonitor);
    swift_retain();

    if (v2)
    {
      sub_1000219EC();
      swift_release();
    }
  }
}

void sub_1000C6930(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1001C6F10 != -1) {
    a1 = swift_once();
  }
  unint64_t v3 = (os_unfair_lock_s *)qword_1001C7CC8;
  uint64_t v4 = __chkstk_darwin(a1);
  __chkstk_darwin(v4);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  sub_1000F4E84(&v10);
  os_unfair_lock_unlock(v3 + 4);
  uint64_t v5 = v10;
  swift_release();
  if (v5 != 1)
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100012C4C(v6, (uint64_t)qword_1001CBA60);
    id v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v7, v8))
    {
      NSString v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)NSString v9 = 134217984;
      uint64_t v10 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unexpected quantity of AirTagSetupMainViewController instances: %lu. fault is likely due to a retain cycle.", v9, 0xCu);
      swift_slowDealloc();
    }
  }
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_needsNFCUI) & 1) == 0)
  {
    sub_1000CEA64();
    sub_1000D25CC();
    sub_1000DED58();
    sub_1000D2A5C();
    sub_1000D1208();
    sub_1000D2078();
    sub_1000D388C();
    sub_1000D6AB8();
    sub_1000D6DBC();
    sub_1000CEA64();
    sub_1000D6F84();
    sub_1000D76E4();
    sub_1000D7D38();
    sub_1000D4548();
    sub_1000D2814();
    sub_1000D89EC();
    sub_1000DB208();
    sub_1000DB980();
    sub_1000DC9F8();
    sub_1000DD218();
    sub_1000DDBC8();
    sub_1000DDF5C();
    sub_1000D46E0();
    sub_1000DE164(1);
    sub_1000D609C();
    sub_1000C72CC(1);
  }
}

void sub_1000C6E1C(char a1)
{
  uint64_t v2 = v1;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CBA60);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    id v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Main viewDidDisappear", v7, 2u);
    swift_slowDealloc();
  }

  v43.receiver = v2;
  v43.super_class = (Class)type metadata accessor for AirTagSetupMainViewController();
  [super viewDidDisappear:a1 & 1];
  sub_1000C72CC(0);
  uint64_t v8 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_startVC;
  NSString v9 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_startVC];
  if (v9)
  {
    swift_unknownObjectWeakAssign();
    NSString v9 = *(void **)&v2[v8];
  }
  *(void *)&v2[v8] = 0;

  uint64_t v10 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleVC;
  uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleVC];
  if (v11)
  {
    swift_unknownObjectWeakAssign();
    uint64_t v11 = *(void **)&v2[v10];
  }
  *(void *)&v2[v10] = 0;

  uint64_t v12 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_namingVC;
  uint64_t v13 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_namingVC];
  if (v13)
  {
    swift_unknownObjectWeakAssign();
    uint64_t v13 = *(void **)&v2[v12];
  }
  *(void *)&v2[v12] = 0;

  uint64_t v14 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_linkingVC;
  id v15 = *(char **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_linkingVC];
  if (v15)
  {
    uint64_t v16 = *(void **)&v15[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_mainController];
    *(void *)&v15[OBJC_IVAR____TtC18SharingViewService27AirTagLinkingViewController_mainController] = 0;

    id v15 = *(char **)&v2[v14];
  }
  *(void *)&v2[v14] = 0;

  uint64_t v17 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_loadingVC;
  id v18 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_loadingVC];
  if (v18)
  {
    swift_unknownObjectWeakAssign();
    id v18 = *(void **)&v2[v17];
  }
  *(void *)&v2[v17] = 0;

  id v19 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_doneVC];
  *(void *)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_doneVC] = 0;

  uint64_t v20 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_errorVC;
  Class v21 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_errorVC];
  if (v21)
  {
    swift_unknownObjectWeakAssign();
    Class v21 = *(void **)&v2[v20];
  }
  *(void *)&v2[v20] = 0;

  uint64_t v22 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_appleIDVC;
  id v23 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_appleIDVC];
  if (v23)
  {
    swift_unknownObjectWeakAssign();
    id v23 = *(void **)&v2[v22];
  }
  *(void *)&v2[v22] = 0;

  uint64_t v24 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_hsa2VC;
  id v25 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_hsa2VC];
  if (v25)
  {
    swift_unknownObjectWeakAssign();
    id v25 = *(void **)&v2[v24];
  }
  *(void *)&v2[v24] = 0;

  uint64_t v26 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairLockedVC;
  uint64_t v27 = *(void **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairLockedVC];
  if (v27)
  {
    swift_unknownObjectWeakAssign();
    uint64_t v27 = *(void **)&v2[v26];
  }
  *(void *)&v2[v26] = 0;

  uint64_t v28 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_nfcVC;
  uint64_t v29 = *(char **)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_nfcVC];
  if (!v29) {
    goto LABEL_32;
  }
  uint64_t v30 = *(void (**)(void, uint64_t, double))&v29[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler];
  if (!v30) {
    goto LABEL_31;
  }
  uint64_t v31 = OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_uiStartTicks;
  if (*(void *)&v29[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_uiStartTicks])
  {
    sub_100029198(*(void *)&v29[OBJC_IVAR____TtC18SharingViewService27B389NFCStatusViewController_responseHandler]);
    uint64_t v32 = v29;
    Swift::UInt64 v33 = UpTicks()();
    Swift::UInt64 v34 = *(void *)&v29[v31];
    BOOL v35 = v33 >= v34;
    Swift::UInt64 v36 = v33 - v34;
    if (!v35)
    {
      __break(1u);
      return;
    }
    double v37 = UpTicksToSecondsF(_:)(v36);
  }
  else
  {
    swift_retain();
    double v37 = 0.0;
  }
  v30(0, 1, v37);
  sub_100017C38((uint64_t)v30);
  uint64_t v29 = *(char **)&v2[v28];
  if (v29)
  {
LABEL_31:
    [v29 setMainController:0];
    uint64_t v38 = *(void **)&v2[v28];
  }
  else
  {
LABEL_32:
    uint64_t v38 = 0;
  }
  *(void *)&v2[v28] = 0;

  uint64_t v39 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_timeout;
  if (*(void *)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_timeout])
  {
    swift_getObjectType();
    swift_retain();
    OS_dispatch_source.cancel()();
    swift_release();
  }
  *(void *)&v2[v39] = 0;
  swift_release();
  uint64_t v40 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_xpcAgent;
  [*(id *)&v2[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_xpcAgent] invalidate];
  uint64_t v41 = *(void **)&v2[v40];
  *(void *)&v2[v40] = 0;

  id v42 = [v2 _remoteViewControllerProxy];
  sub_1000CD3A8(0);
  if (v42)
  {
    if ([v42 respondsToSelector:"invalidate"]) {
      [v42 invalidate];
    }
    swift_unknownObjectRelease();
  }
}

void sub_1000C72CC(char a1)
{
  uint64_t v2 = v1;
  id aBlock = (id)0x3A73736563637573;
  uint64_t v46 = 0xE900000000000020;
  BOOL v3 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v4 = 1702195828;
  }
  else {
    uint64_t v4 = 0x65736C6166;
  }
  if (v3) {
    unint64_t v5 = 0xE500000000000000;
  }
  else {
    unint64_t v5 = 0xE400000000000000;
  }
  unint64_t v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1000E40C0(&v51, 0xD000000000000019, 0x8000000100157390);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  swift_bridgeObjectRetain();
  sub_10002821C(1479, 0xD000000000000070, 0x800000010015BE50, v7, 0xD000000000000019, 0x8000000100157390, (uint64_t)aBlock, v46);
  swift_bridgeObjectRelease_n();
  sub_1000CD3A8(0);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentDisconnect)) {
    goto LABEL_35;
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentDisconnect) = 1;
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
  if (v8)
  {
    NSString v9 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central);
    if (!v9)
    {
LABEL_44:
      __break(1u);
      return;
    }
    uint64_t v43 = *(void *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
    id v10 = v8;
    id v11 = [v9 sharedPairingAgent];
    uint64_t v51 = (uint64_t)v11;
    sub_100009A0C((uint64_t *)&unk_1001C94D0);
    Optional.unwrap(_:file:line:)();

    uint64_t v12 = aBlock;
    unsigned int v42 = [aBlock isPeerPaired:v10];
    if (v42)
    {
      uint64_t v13 = 0x64656C696166;
      if (a1) {
        uint64_t v13 = 0x6564656563637573;
      }
      uint64_t type = v13;
      if (a1) {
        unint64_t v14 = 0xE900000000000064;
      }
      else {
        unint64_t v14 = 0xE600000000000000;
      }
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_100012C4C(v15, (uint64_t)qword_1001CBA60);
      swift_bridgeObjectRetain();
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        id v18 = (uint8_t *)swift_slowAlloc();
        id aBlock = (id)swift_slowAlloc();
        *(_DWORD *)id v18 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v51 = sub_100025CA0(type, v14, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Intentionally unpairing after setup %s <rdar://49613642>", v18, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      [v12 unpairPeer:v10];
    }
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100012C4C(v19, (uint64_t)qword_1001CBA60);
    uint64_t v20 = v10;
    Class v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v39 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412546;
      os_log_type_t typea = v22;
      id aBlock = v20;
      uint64_t v20 = v20;
      uint64_t v24 = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v39 = v43;

      *(_WORD *)(v23 + 12) = 1024;
      LODWORD(aBlock) = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, typea, "%@. BT-paired already? %{BOOL}d", (uint8_t *)v23, 0x12u);
      sub_100009A0C(&qword_1001C9410);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      Class v21 = v20;
      uint64_t v24 = v20;
    }
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_findMyFinalizeState) != 2)
  {
    id v25 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
    if (v25)
    {
      uint64_t v26 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_spManager);
      uint64_t v49 = sub_1000DE994;
      uint64_t v50 = 0;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v46 = 1107296256;
      id v47 = sub_1000C3530;
      uint64_t v48 = &unk_1001A0248;
      uint64_t v27 = _Block_copy(&aBlock);
      id v28 = v25;
      [v26 invalidatePairingSession:v28 completion:v27];
      _Block_release(v27);
    }
  }
  if (a1) {
    sub_1000DEBA0();
  }
  uint64_t v29 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central);
  if (!v29)
  {
    __break(1u);
    goto LABEL_44;
  }
  [v29 stopScan];
LABEL_35:
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_didTapStart) == 1)
  {
    uint64_t v30 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_reenabledProxCard;
    if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_reenabledProxCard) & 1) == 0)
    {
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_100012C4C(v31, (uint64_t)qword_1001CBA60);
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v32, v33))
      {
        Swift::UInt64 v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)Swift::UInt64 v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Re-enabling another setup", v34, 2u);
        swift_slowDealloc();
      }

      id v35 = [objc_allocWithZone((Class)SFClient) init];
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = v35;
      uint64_t v49 = sub_100061EB0;
      uint64_t v50 = v36;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v46 = 1107296256;
      id v47 = sub_1000C3530;
      uint64_t v48 = &unk_1001A0220;
      double v37 = _Block_copy(&aBlock);
      id v38 = v35;
      swift_release();
      [v38 reenableProxCardType:102 completion:v37];

      _Block_release(v37);
      *(unsigned char *)(v2 + v30) = 1;
    }
  }
  swift_beginAccess();
  sub_1000EB8CC(0xD000000000000019, 0x8000000100157390);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_100028250(1523, 0xD000000000000070, 0x800000010015BE50, v7, 0xD000000000000019, 0x8000000100157390, 0, 0xE000000000000000);
}

uint64_t sub_1000C7C0C()
{
  v1[7] = v0;
  uint64_t v2 = type metadata accessor for AirTagPairing2.AssetRequest();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  sub_100009A0C(&qword_1001CBD18);
  v1[11] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for AirTagHardwareModel();
  v1[12] = v3;
  v1[13] = *(void *)(v3 - 8);
  v1[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AirTagPairing2.Configuration();
  v1[15] = v4;
  v1[16] = *(void *)(v4 - 8);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  sub_100009A0C(&qword_1001C9418);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for AirTagPairing2.Configuration.Color();
  v1[21] = v5;
  v1[22] = *(void *)(v5 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[25] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[26] = v7;
  v1[27] = v6;
  return _swift_task_switch(sub_1000C7EA4, v7, v6);
}

uint64_t sub_1000C7EA4()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[7] + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
  swift_beginAccess();
  uint64_t v24 = v2;
  sub_100009BE8(v2, v1, &qword_1001C9418);
  uint64_t v3 = type metadata accessor for B389PresentationConfig(0);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48);
  if (v23(v1, 1, v3) == 1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return AirTagPairing2.AssetRequest.assets()();
  }
  uint64_t v5 = v0[23];
  uint64_t v4 = v0[24];
  uint64_t v6 = v0[21];
  uint64_t v7 = v0[22];
  uint64_t v8 = v0[20];
  uint64_t v22 = v0[19];
  uint64_t v9 = v0[13];
  uint64_t v10 = v0[14];
  uint64_t v11 = v0[12];
  int v12 = *(unsigned __int8 *)(v8 + *(int *)(v3 + 32));
  sub_100061E18(v8, type metadata accessor for B389PresentationConfig);
  uint64_t v13 = (unsigned int *)&enum case for AirTagPairing2.Configuration.Color.hermes(_:);
  if (!v12) {
    uint64_t v13 = (unsigned int *)&enum case for AirTagPairing2.Configuration.Color.white(_:);
  }
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v4, *v13, v6);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v10, enum case for AirTagHardwareModel.original(_:), v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v4, v6);
  AirTagPairing2.Configuration.init(hardwareModel:color:timeout:)();
  sub_100009BE8(v24, v22, &qword_1001C9418);
  if (v23(v22, 1, v3) == 1) {
    goto LABEL_11;
  }
  uint64_t v14 = v0[19];
  uint64_t v15 = (uint64_t *)(v14 + *(int *)(v3 + 56));
  uint64_t v16 = *v15;
  unint64_t v17 = v15[1];
  sub_10002B914(*v15, v17);
  sub_100061E18(v14, type metadata accessor for B389PresentationConfig);
  if (v17 >> 60 != 15)
  {
    uint64_t v18 = v0[11];
    sub_100009B90(v16, v17);
    PersonalizationAssetManager.PrePairingAssetInfo.init(scannedBluetoothData:)();
    uint64_t v19 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 0, 1, v19);
    AirTagPairing2.Configuration.engravingInformation.setter();
    sub_10002B7E4(v16, v17);
  }
  (*(void (**)(void, void, void))(v0[16] + 16))(v0[17], v0[18], v0[15]);
  AirTagPairing2.AssetRequest.init(configuration:)();
  uint64_t v20 = (void *)swift_task_alloc();
  v0[28] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1000C81D8;
  return AirTagPairing2.AssetRequest.assets()();
}

uint64_t sub_1000C81D8(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 232) = a1;
  *(void *)(v4 + 240) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 216);
  uint64_t v6 = *(void *)(v3 + 208);
  if (v1) {
    uint64_t v7 = sub_1000C8644;
  }
  else {
    uint64_t v7 = sub_1000C831C;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_1000C831C()
{
  uint64_t v23 = v0;
  swift_release();
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100012C4C(v1, (uint64_t)qword_1001CBA60);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t type = static os_log_type_t.default.getter();
  BOOL v3 = os_log_type_enabled(v2, type);
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[24];
  uint64_t v7 = v0[21];
  uint64_t v6 = v0[22];
  uint64_t v8 = v0[18];
  uint64_t v9 = v0[15];
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[9];
  uint64_t v20 = v0[8];
  uint64_t v21 = v0[10];
  if (v3)
  {
    uint64_t v18 = v0[18];
    int v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)int v12 = 136315138;
    v0[5] = v4;
    type metadata accessor for AirTagPairing2.Assets();
    swift_retain();
    uint64_t v13 = String.init<A>(describing:)();
    v0[6] = sub_100025CA0(v13, v14, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v2, type, "Got assets %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v20);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  else
  {

    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v20);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v16 = v0[29];
  return v15(v16);
}

uint64_t sub_1000C8644()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[10];
  uint64_t v9 = v0[8];
  uint64_t v8 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1000C8780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v93 = a3;
  uint64_t v92 = a2;
  uint64_t v6 = sub_100009A0C(&qword_1001C9540);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for B389PresentationConfig.Mode(0);
  uint64_t v9 = __chkstk_darwin(v97);
  uint64_t v89 = (uint64_t)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v86 - v11;
  uint64_t v13 = sub_100009A0C(&qword_1001C9418);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for B389PresentationConfig(0);
  uint64_t v16 = *(void *)(v96 - 8);
  uint64_t v17 = __chkstk_darwin(v96);
  id v94 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v86 - v19;
  *(void *)&long long v107 = a1;
  sub_100009A0C((uint64_t *)&unk_1001C9620);
  Optional.unwrap(_:file:line:)();
  id v21 = aBlock;
  id v22 = [aBlock userInfo];
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v24 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v24 = 0;
  }
  *(void *)&long long v107 = v24;
  sub_100009A0C((uint64_t *)&unk_1001CBD40);
  Optional.unwrap(_:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v25 = aBlock;
  *(void *)&long long v107 = 0xD000000000000011;
  *((void *)&v107 + 1) = 0x8000000100157B70;
  AnyHashable.init<A>(_:)();
  if (v25[2] && (unint64_t v26 = sub_100008A4C((uint64_t)&aBlock), (v27 & 1) != 0))
  {
    sub_100011954(v25[7] + 32 * v26, (uint64_t)&v107);
  }
  else
  {
    long long v107 = 0u;
    long long v108 = 0u;
  }
  Swift::String v98 = v20;
  swift_bridgeObjectRelease();
  sub_100009AFC((uint64_t)&aBlock);
  id v88 = v21;
  if (*((void *)&v108 + 1))
  {
    int v28 = swift_dynamicCast();
    if (v28) {
      uint64_t v29 = v99;
    }
    else {
      uint64_t v29 = 0;
    }
    if (v28) {
      unint64_t v30 = v100;
    }
    else {
      unint64_t v30 = 0xF000000000000000;
    }
  }
  else
  {
    sub_1000118F8((uint64_t)&v107, (uint64_t *)&unk_1001C94F0);
    uint64_t v29 = 0;
    unint64_t v30 = 0xF000000000000000;
  }
  *(void *)&long long v107 = v29;
  *((void *)&v107 + 1) = v30;
  sub_100009A0C(&qword_1001C9428);
  Optional.unwrap(_:file:line:)();
  sub_10002B7E4(v29, v30);
  uint64_t v31 = (uint64_t)aBlock;
  unint64_t v32 = v102;
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_1000F4FF8(&qword_1001C9630, (void (*)(uint64_t))type metadata accessor for B389PresentationConfig);
  uint64_t v33 = (uint64_t)v98;
  uint64_t v34 = v96;
  uint64_t v91 = v31;
  unint64_t v90 = v32;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  swift_release();
  sub_10002B7F8(v33, (uint64_t)v15, type metadata accessor for B389PresentationConfig);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v15, 0, 1, v34);
  uint64_t v35 = (uint64_t)&v4[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig];
  swift_beginAccess();
  sub_1000F5694((uint64_t)v15, v35);
  swift_endAccess();
  uint64_t v87 = v33 + *(int *)(v34 + 24);
  sub_10002B7F8(v87, (uint64_t)v12, type metadata accessor for B389PresentationConfig.Mode);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v37 = v33;
  if (EnumCaseMultiPayload)
  {
    uint64_t v38 = (uint64_t)v94;
    if (EnumCaseMultiPayload == 1)
    {
      char v39 = v12[*(int *)(sub_100009A0C((uint64_t *)&unk_1001C9580) + 48)];
      uint64_t v40 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v12, v40);
    }
    else
    {
      sub_100061E18((uint64_t)v12, type metadata accessor for B389PresentationConfig.Mode);
      char v39 = 0;
    }
  }
  else
  {
    char v39 = *v12;
    uint64_t v38 = (uint64_t)v94;
  }
  v4[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_needsMulti] = v39;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  id v94 = v8;
  uint64_t v41 = type metadata accessor for Logger();
  sub_100012C4C(v41, (uint64_t)qword_1001CBA60);
  sub_10002B7F8(v33, v38, type metadata accessor for B389PresentationConfig);
  unsigned int v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  BOOL v44 = os_log_type_enabled(v42, v43);
  Swift::String v95 = v4;
  if (v44)
  {
    id v45 = (uint8_t *)swift_slowAlloc();
    id aBlock = (id)swift_slowAlloc();
    *(_DWORD *)id v45 = 136315138;
    uint64_t v46 = sub_100022450();
    *(void *)&long long v107 = sub_100025CA0(v46, v47, (uint64_t *)&aBlock);
    uint64_t v37 = (uint64_t)v98;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100061E18(v38, type metadata accessor for B389PresentationConfig);
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "presentConfig: %s", v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100061E18(v38, type metadata accessor for B389PresentationConfig);
  }

  uint64_t v48 = v88;
  uint64_t v49 = (uint64_t *)(v37 + *(int *)(v96 + 52));
  unint64_t v50 = v49[1];
  if (v50)
  {
    uint64_t v51 = *v49;
    uint64_t v52 = HIBYTE(v50) & 0xF;
    if ((v50 & 0x2000000000000000) == 0) {
      uint64_t v52 = v51 & 0xFFFFFFFFFFFFLL;
    }
    if (v52)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v53, v54))
      {
        long long v55 = (uint8_t *)swift_slowAlloc();
        id aBlock = (id)swift_slowAlloc();
        *(_DWORD *)long long v55 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)&long long v107 = sub_100025CA0(v51, v50, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "Using given name: '%s'", v55, 0xCu);
        swift_arrayDestroy();
        uint64_t v37 = (uint64_t)v98;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      long long v56 = (uint64_t *)&v95[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_fnameDisplay];
      *long long v56 = v51;
      v56[1] = v50;
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v57 = v89;
  sub_10002B7F8(v87, v89, type metadata accessor for B389PresentationConfig.Mode);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100061E18(v57, type metadata accessor for B389PresentationConfig.Mode);
    uint64_t v58 = (uint64_t)v94;
    long long v59 = v95;
  }
  else
  {
    uint64_t v58 = (uint64_t)v94;
    long long v59 = v95;
    long long v60 = &v95[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairState];
    *(void *)long long v60 = 5;
    v60[8] = 1;
    v59[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_connectionState] = 1;
  }
  id v61 = [v48 xpcEndpoint];
  if (v61)
  {
    id v62 = v61;
    v59[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_needsNFCUI] = 1;
    id v63 = [objc_allocWithZone((Class)NSXPCListenerEndpoint) init];
    unint64_t v64 = *(void **)&v59[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_endpoint];
    *(void *)&v59[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_endpoint] = v63;
    id v65 = v63;

    [v65 _setEndpoint:v62];
    id v66 = [objc_allocWithZone((Class)CUXPCAgent) init];
    uint64_t v67 = *(void **)&v59[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_xpcAgent];
    *(void *)&v59[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_xpcAgent] = v66;
    id v68 = v66;

    sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
    NSString v69 = (void *)static OS_dispatch_queue.main.getter();
    [v68 setDispatchQueue:v69];

    char v70 = self;
    id v71 = [v70 interfaceWithProtocol:&OBJC_PROTOCOL___SFXPCB389NFCPromptConfigurationReceiving];
    [v68 setExportedInterface:v71];

    [v68 setExportedObject:v59];
    NSString v72 = String._bridgeToObjectiveC()();
    [v68 setLabel:v72];

    [v68 setListenerEndpoint:v65];
    id v73 = [v70 interfaceWithProtocol:&OBJC_PROTOCOL___SDXPCClientInterface];
    [v68 setRemoteObjectInterface:v73];

    id v105 = sub_1000C95B0;
    uint64_t v106 = 0;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v102 = 1107296256;
    id v103 = sub_100021CDC;
    NSString v104 = &unk_1001A0590;
    long long v74 = _Block_copy(&aBlock);
    [v68 setInterruptionHandler:v74];
    _Block_release(v74);
    id v105 = sub_1000C95BC;
    uint64_t v106 = 0;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v102 = 1107296256;
    id v103 = sub_100021CDC;
    NSString v104 = &unk_1001A05B8;
    long long v75 = _Block_copy(&aBlock);
    [v68 setInvalidationHandler:v75];
    _Block_release(v75);
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = v68;
    id v105 = sub_1000F5814;
    uint64_t v106 = v76;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v102 = 1107296256;
    id v103 = sub_1000C3530;
    NSString v104 = &unk_1001A0608;
    Swift::String v77 = _Block_copy(&aBlock);
    id v78 = v68;
    swift_release();
    [v78 activateWithCompletion:v77];
    _Block_release(v77);
    swift_unknownObjectRelease();

    uint64_t v37 = (uint64_t)v98;
  }
  uint64_t v79 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v58, 1, 1, v79);
  type metadata accessor for MainActor();
  Swift::String v80 = v59;
  uint64_t v81 = v92;
  uint64_t v82 = v93;
  sub_100029198(v92);
  uint64_t v83 = static MainActor.shared.getter();
  Swift::String v84 = (void *)swift_allocObject();
  v84[2] = v83;
  v84[3] = &protocol witness table for MainActor;
  v84[4] = v80;
  v84[5] = v81;
  v84[6] = v82;
  sub_1000C4348(v58, (uint64_t)&unk_1001CBD58, (uint64_t)v84);
  swift_release();
  sub_10000A5B8(v91, v90);

  return sub_100061E18(v37, type metadata accessor for B389PresentationConfig);
}

void sub_1000C95B0()
{
}

void sub_1000C95BC()
{
}

void sub_1000C95C8(const char *a1)
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, a1, v4, 2u);
    swift_slowDealloc();
  }
}

void sub_1000C96B8(uint64_t a1, void *a2)
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CBA60);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    if (a1)
    {
      swift_getErrorValue();
      unint64_t v8 = Error.localizedDescription.getter();
      unint64_t v10 = v9;
    }
    else
    {
      uint64_t aBlock = 0;
      unint64_t v15 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v10 = 0x8000000100154E70;
      unint64_t v8 = 0xD000000000000015;
    }
    uint64_t aBlock = sub_100025CA0(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Agent activated, error? %s.", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v18 = sub_1000C9960;
  uint64_t v19 = 0;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  unint64_t v15 = 1107296256;
  uint64_t v16 = sub_1000C3530;
  uint64_t v17 = &unk_1001A0630;
  uint64_t v11 = _Block_copy(&aBlock);
  id v12 = [a2 remoteObjectProxyWithErrorHandler:v11];
  _Block_release(v11);
  if (v12)
  {
    [v12 preheatXPCConnection];
    swift_unknownObjectRelease();
  }
}

void sub_1000C9960(uint64_t a1)
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
  swift_errorRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    if (a1)
    {
      swift_getErrorValue();
      unint64_t v5 = Error.localizedDescription.getter();
      unint64_t v7 = v6;
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v7 = 0x8000000100154E70;
      unint64_t v5 = 0xD000000000000015;
    }
    sub_100025CA0(v5, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "remoteObjectProxyWithErrorHandler failed in updateStateRemotely. Error: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_1000C9B80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  v6[5] = type metadata accessor for MainActor();
  void v6[6] = static MainActor.shared.getter();
  unint64_t v7 = (void *)swift_task_alloc();
  v6[7] = v7;
  void *v7 = v6;
  v7[1] = sub_1000C9C34;
  return sub_1000C7C0C();
}

uint64_t sub_1000C9C34(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    unint64_t v8 = sub_1000C9E48;
  }
  else
  {
    *(void *)(v4 + 72) = a1;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    unint64_t v8 = sub_1000C9DB4;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_1000C9DB4()
{
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  swift_release();
  *(void *)(v3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_assets) = v1;
  uint64_t v4 = swift_release();
  if (v2) {
    ((void (*)(uint64_t))v0[3])(v4);
  }
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1000C9E48()
{
  swift_release();
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100012C4C(v1, (uint64_t)qword_1001CBA60);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to loadAssetBundle in AirTagSetupMainViewController", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 24);

  if (v5) {
    (*(void (**)(void))(v0 + 24))();
  }
  swift_errorRelease();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

void sub_1000CA054(uint64_t a1)
{
  if (qword_1001C7120 != -1) {
    goto LABEL_39;
  }
  while (1)
  {
    uint64_t v2 = type metadata accessor for Logger();
    sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
    swift_bridgeObjectRetain_n();
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136315138;
      if (a1)
      {
        sub_100017EF4(0, (unint64_t *)&qword_1001C9600);
        sub_1000A7C34((unint64_t *)&qword_1001CAF70, (unint64_t *)&qword_1001C9600);
        swift_bridgeObjectRetain();
        uint64_t v6 = Set.description.getter();
        unint64_t v8 = v7;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v37 = 0;
        unint64_t v38 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        uint64_t v37 = 0x6C616E6F6974704FLL;
        unint64_t v38 = 0xE90000000000003CLL;
        sub_100009A0C(&qword_1001CA830);
        v9._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
        String.append(_:)(v9);
        swift_bridgeObjectRelease();
        v10._uint64_t countAndFlagsBits = 0x656E6F6E2E3ELL;
        v10._object = (void *)0xE600000000000000;
        String.append(_:)(v10);
        uint64_t v6 = v37;
        unint64_t v8 = v38;
      }
      uint64_t v37 = sub_100025CA0(v6, v8, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "handleButtonActions: %s", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (!a1) {
      break;
    }
    unint64_t v11 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = __CocoaSet.count.getter();
      if (!v12) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(a1 + 16);
      swift_bridgeObjectRetain();
      if (!v12)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        uint64_t v16 = _swiftEmptyArrayStorage;
        uint64_t v17 = _swiftEmptyArrayStorage[2];
        if (!v17) {
          goto LABEL_36;
        }
        goto LABEL_30;
      }
    }
    unsigned int v42 = _swiftEmptyArrayStorage;
    sub_1000E3574(0, v12 & ~(v12 >> 63), 0);
    if (v11)
    {
      uint64_t v13 = __CocoaSet.startIndex.getter();
      char v15 = 1;
    }
    else
    {
      uint64_t v13 = sub_1000EDB64(a1);
      char v15 = v18 & 1;
    }
    uint64_t v39 = v13;
    uint64_t v40 = v14;
    char v41 = v15;
    if (v12 < 0)
    {
      __break(1u);
LABEL_41:
      __break(1u);
      break;
    }
    do
    {
      while (1)
      {
        int64_t v25 = v39;
        uint64_t v24 = v40;
        char v26 = v41;
        sub_1000ED8F0(v39, v40, v41, a1, (unint64_t *)&qword_1001C9600);
        int v28 = v27;
        id v29 = [v27 events];

        unint64_t v30 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000E3574(0, v30[2] + 1, 1);
          unint64_t v30 = v42;
        }
        unint64_t v32 = v30[2];
        unint64_t v31 = v30[3];
        if (v32 >= v31 >> 1)
        {
          sub_1000E3574(v31 > 1, v32 + 1, 1);
          unint64_t v30 = v42;
        }
        _OWORD v30[2] = v32 + 1;
        v30[v32 + 4] = v29;
        if (v11) {
          break;
        }
        int64_t v19 = sub_1000ED7E4(v25, v24, v26, a1);
        uint64_t v21 = v20;
        char v23 = v22;
        sub_10000BDE4(v25, v24, v26);
        uint64_t v39 = v19;
        uint64_t v40 = v21;
        char v41 = v23 & 1;
        if (!--v12) {
          goto LABEL_29;
        }
      }
      if ((v26 & 1) == 0) {
        goto LABEL_41;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_100009A0C((uint64_t *)&unk_1001C9610);
      uint64_t v33 = (void (*)(uint64_t *, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v33(&v37, 0);
      --v12;
    }
    while (v12);
LABEL_29:
    sub_10000BDE4(v39, v40, v41);
    swift_bridgeObjectRelease();
    uint64_t v16 = v42;
    uint64_t v17 = v42[2];
    if (!v17)
    {
LABEL_36:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_30:
    if ((v16[4] & 0x10) != 0)
    {
LABEL_37:
      swift_bridgeObjectRelease();
      [v36 dismiss:4];
      return;
    }
    if (v17 == 1) {
      goto LABEL_36;
    }
    uint64_t v34 = 5;
    while (1)
    {
      uint64_t v35 = v34 - 3;
      if (__OFADD__(v34 - 4, 1)) {
        break;
      }
      if ((v16[v34] & 0x10) != 0) {
        goto LABEL_37;
      }
      ++v34;
      if (v35 == v17) {
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_39:
    swift_once();
  }
  __break(1u);
}

void sub_1000CA768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = [objc_allocWithZone((Class)_LSOpenConfiguration) init];
  [v6 setSensitive:1];
  sub_1000C3B60(*(void *)(v3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_fbOtions));
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 setFrontBoardOptions:isa];

  id v16 = [self defaultWorkspace];
  sub_100009A0C(&qword_1001C95E8);
  Optional.unwrap(_:file:line:)();

  unint64_t v8 = (void *)aBlock[0];
  URL._bridgeToObjectiveC()(v9);
  unint64_t v11 = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  aBlock[4] = sub_1000F55AC;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000C4274;
  aBlock[3] = &unk_1001A04C8;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v6;
  sub_100029198(a2);
  swift_release();
  [v8 openURL:v11 configuration:v14 completionHandler:v13];
  _Block_release(v13);
}

void sub_1000CA988(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100012C4C(v6, (uint64_t)qword_1001CBA60);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  unint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    if (a1)
    {
      swift_bridgeObjectRetain();
      unint64_t v10 = Dictionary.description.getter();
      unint64_t v12 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v10 = 0xD000000000000026;
      unint64_t v12 = 0x80000001001574B0;
    }
    sub_100025CA0(v10, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue();
      unint64_t v13 = Error.localizedDescription.getter();
      unint64_t v15 = v14;
    }
    else
    {
      unint64_t v13 = 0xD000000000000015;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v15 = 0x8000000100154E70;
    }
    sub_100025CA0(v13, v15, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Open URL callback success: %s, error: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (a3) {
      goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    if (a3) {
LABEL_13:
    }
      a3();
  }
}

void sub_1000CACA0()
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012C4C(v0, (uint64_t)qword_1001CBA60);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "assertion acquired: %{BOOL}d", v2, 8u);
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1000CADDC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v47 = a2;
  uint64_t v11 = sub_100009A0C(&qword_1001C7620);
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v46 + 64);
  uint64_t v13 = __chkstk_darwin(v11 - 8);
  unint64_t v14 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v39 - v15;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100012C4C(v17, (uint64_t)qword_1001CBA60);
  sub_100029198(a3);
  sub_100029198(a3);
  char v18 = Logger.logObject.getter();
  int v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, (os_log_type_t)v19))
  {
    int v41 = v19;
    unsigned int v42 = v16;
    int v20 = a1;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v50 = v40;
    *(_DWORD *)uint64_t v21 = 134218498;
    uint64_t v48 = a5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 1024;
    int v44 = v20;
    LODWORD(v48) = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 18) = 2080;
    id v45 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v43 = v6;
    if (a3)
    {
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = a3;
      *(void *)(v22 + 24) = a4;
      char v23 = sub_10006982C;
    }
    else
    {
      char v23 = 0;
      uint64_t v22 = 0;
    }
    uint64_t v48 = (uint64_t)v23;
    uint64_t v49 = v22;
    sub_100029198(a3);
    sub_100009A0C(&qword_1001C95D8);
    uint64_t v24 = Optional.debugDescription.getter();
    unint64_t v26 = v25;
    sub_100017C38((uint64_t)v23);
    uint64_t v48 = sub_100025CA0(v24, v26, &v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100017C38(a3);
    sub_100017C38(a3);
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v41, "dismissCompletion from %ld. inActionType: %d, completion: %s", (uint8_t *)v21, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v14 = v45;
    a1 = v44;
    uint64_t v16 = v42;
    uint64_t v6 = v43;
  }
  else
  {
    sub_100017C38(a3);
    sub_100017C38(a3);
  }
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100009BE8(v47, (uint64_t)v16, &qword_1001C7620);
  sub_100009BE8((uint64_t)v16, (uint64_t)v14, &qword_1001C7620);
  unint64_t v28 = (*(unsigned __int8 *)(v46 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v27;
  *(_DWORD *)(v29 + 24) = a1;
  *(void *)(v29 + 32) = a3;
  *(void *)(v29 + 40) = a4;
  sub_100069968((uint64_t)v16, v29 + v28, &qword_1001C7620);
  unint64_t v30 = *(void **)(v6 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav);
  if (v30)
  {
    sub_100029198(a3);
    swift_retain();
    id v31 = [v30 topViewController];
    uint64_t v50 = (uint64_t)v31;
    sub_100009A0C(&qword_1001C95D0);
    Optional.unwrap(_:file:line:)();

    unint64_t v32 = (void *)v48;
    self;
    uint64_t v33 = swift_dynamicCastObjCClass();
    if (v33)
    {
      id v36 = (void *)v33;
      id v34 = v32;
      id v35 = [v36 containerView];
      LODWORD(v36) = [v35 swipeDismissible];

      if (!a1) {
        goto LABEL_18;
      }
    }
    else
    {
      self;
      uint64_t v37 = (void *)swift_dynamicCastObjCClass();
      if (!v37)
      {
        if (a1) {
          goto LABEL_16;
        }
        goto LABEL_18;
      }
      id v36 = (void *)(((unint64_t)[v37 dismissalType] >> 1) & 1);
      if (!a1) {
        goto LABEL_18;
      }
    }
    if (!v36)
    {
LABEL_16:
      sub_1000118F8((uint64_t)v14, &qword_1001C7620);
      swift_release();
      sub_1000EE29C(v32, (uint64_t)sub_1000F5308, v29);

      return swift_release();
    }
LABEL_18:
    sub_1000CB398(v27, a1, a3, a4, (uint64_t)v14);
    swift_release();

    swift_release();
    return sub_1000118F8((uint64_t)v14, &qword_1001C7620);
  }
  sub_100029198(a3);
  uint64_t result = sub_1000118F8((uint64_t)v14, &qword_1001C7620);
  __break(1u);
  return result;
}

void sub_1000CB398(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100009A0C(&qword_1001C7620);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v24 = a4;
    uint64_t v14 = type metadata accessor for Logger();
    sub_100012C4C(v14, (uint64_t)qword_1001CBA60);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "dismissClosure called", v17, 2u);
      swift_slowDealloc();
    }

    sub_1000C72CC(0);
    BOOL v18 = a2 != 19;
    sub_100009BE8(a5, (uint64_t)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1001C7620);
    unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v24;
    *(void *)(v20 + 16) = a3;
    *(void *)(v20 + 24) = v21;
    sub_100069968((uint64_t)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v19, &qword_1001C7620);
    *(void *)(v20 + ((v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
    aBlock[4] = sub_1000F54D8;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021CDC;
    aBlock[3] = &unk_1001A0428;
    uint64_t v22 = _Block_copy(aBlock);
    sub_100029198(a3);
    id v23 = v13;
    swift_release();
    [v23 dismissViewControllerAnimated:v18 completion:v22];
    _Block_release(v22);
  }
}

uint64_t sub_1000CB664(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  ((void (*)(void))__chkstk_darwin)();
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009A0C(&qword_1001C7620);
  uint64_t v11 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  os_log_type_t v16 = (char *)&v33 - v15;
  if (a1) {
    a1(v14);
  }
  sub_100009BE8(a3, (uint64_t)v16, &qword_1001C7620);
  unint64_t v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v17 = v38(v16, 1, v7);
  sub_1000118F8((uint64_t)v16, &qword_1001C7620);
  uint64_t v39 = a3;
  if (v17 == 1)
  {
    id v18 = 0;
  }
  else
  {
    uint64_t v37 = v10;
    unint64_t v19 = (void *)sub_1000EEEDC();
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100012C4C(v20, (uint64_t)qword_1001CBA60);
    id v18 = v19;
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      id v34 = v23;
      uint64_t v35 = v8;
      *(_DWORD *)id v23 = 138412290;
      id v40 = v18;
      id v24 = v18;
      uint64_t v36 = v7;
      id v25 = v24;
      uint64_t v8 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v33 = v18;

      uint64_t v7 = v36;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Took assertion: %@", v34, 0xCu);
      sub_100009A0C(&qword_1001C9410);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v10 = v37;
  }
  uint64_t v26 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_xpcAgent;
  [*(id *)&a4[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_xpcAgent] invalidate];
  uint64_t v27 = *(void **)&a4[v26];
  *(void *)&a4[v26] = 0;

  id v28 = [a4 _remoteViewControllerProxy];
  sub_1000CD3A8(0);
  if (v28)
  {
    if ([v28 respondsToSelector:"invalidate"]) {
      [v28 invalidate];
    }
    swift_unknownObjectRelease();
  }
  sub_100009BE8(v39, (uint64_t)v13, &qword_1001C7620);
  if (v38(v13, 1, v7) == 1)
  {

    return sub_1000118F8((uint64_t)v13, &qword_1001C7620);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v18;
    uint64_t v31 = v8;
    id v32 = v18;
    sub_1000CA768((uint64_t)v10, (uint64_t)sub_100069DF8, v30);

    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v7);
  }
}

void sub_1000CBAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, void *a7, void *a8)
{
  id v51 = a8;
  id v45 = a7;
  uint64_t v47 = a1;
  uint64_t v10 = sub_100009A0C(&qword_1001CBE70);
  uint64_t v49 = *(void *)(v10 - 8);
  uint64_t v50 = v10;
  __chkstk_darwin(v10);
  uint64_t v46 = v11;
  uint64_t v48 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = self;
  id v13 = [v12 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = sub_100138304(v13, v14, v15);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100009A0C((uint64_t *)&unk_1001C9530);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10017C370;
  *(void *)(v17 + 56) = &type metadata for String;
  *(void *)(v17 + 64) = sub_1000117E4();
  if (a5) {
    uint64_t v18 = a4;
  }
  else {
    uint64_t v18 = 0;
  }
  unint64_t v19 = 0xE000000000000000;
  if (a5) {
    unint64_t v19 = a5;
  }
  *(void *)(v17 + 32) = v18;
  *(void *)(v17 + 40) = v19;
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v20 = [v12 mainBundle];
  NSString v21 = String._bridgeToObjectiveC()();
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = sub_100138304(v20, v21, v22);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = [self alertControllerWithTitle:v24 message:v25 preferredStyle:1];

  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = sub_100138404(v27);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  long long v56 = nullsub_4;
  uint64_t v57 = 0;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v53 = 1107296256;
  os_log_type_t v54 = sub_1000215A4;
  long long v55 = &unk_1001A0680;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v31 = self;
  id v32 = [v31 actionWithTitle:v29 style:1 handler:v30];
  _Block_release(v30);

  id v45 = v32;
  [v26 addAction:v32];
  NSString v33 = String._bridgeToObjectiveC()();
  NSString v34 = sub_1001374C4(v33);

  if (!v34)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v35 = sub_100138404(v34);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v48;
  uint64_t v36 = v49;
  uint64_t v38 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v47, v50);
  unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v40 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v40 + v39, v37, v38);
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  long long v56 = sub_1000F5984;
  uint64_t v57 = v40;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v53 = 1107296256;
  os_log_type_t v54 = sub_1000215A4;
  long long v55 = &unk_1001A06D0;
  unsigned int v42 = _Block_copy(&aBlock);
  swift_release();
  id v43 = [v31 actionWithTitle:v41 style:0 handler:v42];
  _Block_release(v42);

  [v26 addAction:v43];
  [v26 setPreferredAction:v43];
  [v51 presentViewController:v26 animated:1 completion:0];
}

uint64_t sub_1000CC0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100009A0C(&qword_1001CBE70);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100009A0C(&qword_1001C9540);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  type metadata accessor for MainActor();
  uint64_t v11 = static MainActor.shared.getter();
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, v6, v3);
  sub_1000C4348((uint64_t)v9, (uint64_t)&unk_1001CBE80, v13);
  return swift_release();
}

uint64_t sub_1000CC2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a4;
  uint64_t v5 = type metadata accessor for DeviceWithCompanion();
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  sub_100009A0C(&qword_1001C9558);
  v4[11] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ClientOrigin();
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v4[15] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[16] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[17] = v8;
  v4[18] = v7;
  return _swift_task_switch(sub_1000CC464, v8, v7);
}

uint64_t sub_1000CC464()
{
  (*(void (**)(void, void, void))(v0[13] + 104))(v0[14], enum case for ClientOrigin.other(_:), v0[12]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  os_log_type_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  *os_log_type_t v1 = v0;
  v1[1] = sub_1000CC548;
  uint64_t v2 = v0[15];
  return Session.init(_:)(v2);
}

uint64_t sub_1000CC548(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[20] = a1;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[21] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1000CC698;
  uint64_t v5 = v2[10];
  return Session.thisDeviceWithCompanion()(v5);
}

uint64_t sub_1000CC698()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  uint64_t v4 = *(void *)(v2 + 136);
  if (v0) {
    uint64_t v5 = sub_1000CCD04;
  }
  else {
    uint64_t v5 = sub_1000CC7D4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000CC7D4()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  DeviceWithCompanion.thisDevice.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  uint64_t v5 = type metadata accessor for Device();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) == 1)
  {
    uint64_t v7 = v0[11];
    swift_release();
    sub_1000118F8(v7, &qword_1001C9558);
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100012C4C(v8, (uint64_t)qword_1001CBA60);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Me device switch failed, no this device", v11, 2u);
      swift_slowDealloc();
    }

    sub_100009A0C(&qword_1001CBE70);
    CheckedContinuation.resume(returning:)();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    uint64_t v14 = v0[11];
    uint64_t v15 = Device.identifier.getter();
    uint64_t v17 = v16;
    v0[23] = v16;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
    uint64_t v18 = (void *)swift_task_alloc();
    v0[24] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1000CCA84;
    return Session.setActiveLocationSharingDevice(_:)(v15, v17);
  }
}

uint64_t sub_1000CCA84()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_1000CCF68;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_1000CCBA0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000CCBA0()
{
  swift_release();
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100012C4C(v1, (uint64_t)qword_1001CBA60);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Me device switch succeeded", v4, 2u);
    swift_slowDealloc();
  }

  sub_100009A0C(&qword_1001CBE70);
  CheckedContinuation.resume(returning:)();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1000CCD04()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100012C4C(v1, (uint64_t)qword_1001CBA60);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.localizedDescription.getter();
    *(void *)(v0 + 48) = sub_100025CA0(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Me device switch failed: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_100009A0C(&qword_1001CBE70);
  CheckedContinuation.resume(returning:)();
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1000CCF68()
{
  uint64_t v10 = v0;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100012C4C(v1, (uint64_t)qword_1001CBA60);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.localizedDescription.getter();
    *(void *)(v0 + 48) = sub_100025CA0(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Me device switch failed: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_100009A0C(&qword_1001CBE70);
  CheckedContinuation.resume(returning:)();
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

void sub_1000CD1D4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_dismissed;
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_dismissed) & 1) == 0)
  {
    uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav);
    if (v5)
    {
      if (a2)
      {
        v11[4] = a2;
        v11[5] = a3;
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 1107296256;
        void v11[2] = sub_100021CDC;
        v11[3] = &unk_1001A0518;
        uint64_t v8 = _Block_copy(v11);
        id v9 = v5;
        sub_100029198(a2);
        swift_release();
      }
      else
      {
        id v10 = v5;
        uint64_t v8 = 0;
      }
      [v5 dismissViewControllerAnimated:a1 & 1 completion:v8];
      _Block_release(v8);

      *(unsigned char *)(v3 + v4) = 1;
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000CD3A8(char a1)
{
  if ([v1 _remoteViewControllerProxy])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
  }
  sub_100069968((uint64_t)v12, (uint64_t)v13, (uint64_t *)&unk_1001C94F0);
  if (v14)
  {
    sub_100009A0C((uint64_t *)&unk_1001C9A60);
    if (swift_dynamicCast())
    {
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100012C4C(v3, (uint64_t)qword_1001CBA60);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        unint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v6 = 67109120;
        v13[0] = a1 & 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Setting idle timer disabled: %{BOOL}d", v6, 8u);
        swift_slowDealloc();
      }

      uint64_t v7 = String._bridgeToObjectiveC()();
      [v11 setIdleTimerDisabled:a1 & 1 forReason:v7];
      swift_unknownObjectRelease();
      goto LABEL_16;
    }
  }
  else
  {
    sub_1000118F8((uint64_t)v13, (uint64_t *)&unk_1001C94F0);
  }
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100012C4C(v8, (uint64_t)qword_1001CBA60);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v9))
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v9, "Could not grab remote view controller proxy", v10, 2u);
    swift_slowDealloc();
  }
LABEL_16:
}

id sub_1000CD664(uint64_t a1, uint64_t a2, void *a3)
{
  sub_100009A0C(&qword_1001CBD20);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0xD00000000000001DLL;
  *(void *)(v6 + 24) = 0x800000010017F410;
  uint64_t v7 = qword_1001C6F10;
  uint64_t v8 = v3;
  os_log_type_t v9 = v8;
  if (v7 != -1) {
    uint64_t v8 = (unsigned char *)swift_once();
  }
  id v10 = (os_unfair_lock_s *)qword_1001C7CC8;
  __chkstk_darwin(v8);
  swift_retain();
  os_unfair_lock_lock(v10 + 4);
  sub_1000F5C74();
  uint64_t v11 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController___doNotReference;
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  *(void *)&v9[v11] = v6;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_inFlightOperations] = &_swiftEmptySetSingleton;
  unint64_t v12 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_appleIDInfo];
  *(_OWORD *)unint64_t v12 = xmmword_10017C910;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = 0;
  *((void *)v12 + 2) = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_timeout] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_multiThreshold] = -50;
  uint64_t v13 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig];
  uint64_t v14 = type metadata accessor for B389PresentationConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om;
  type metadata accessor for OnceManager();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = &_swiftEmptySetSingleton;
  *(void *)&v9[v15] = v16;
  uint64_t v17 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_beaconManager;
  *(void *)&v9[v17] = [objc_allocWithZone((Class)SPBeaconManager) init];
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_dismissed] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_retain] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_startVC] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleVC] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_namingVC] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_linkingVC] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_loadingVC] = 0;
  uint64_t v18 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_spManager;
  *(void *)&v9[v18] = [objc_allocWithZone((Class)SPPairingManager) init];
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_requestedPairingData] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_reenabledProxCard] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_didTapStart] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_didAgreeToLinking] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_needsMulti] = 0;
  uint64_t v19 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_followupController;
  *(void *)&v9[v19] = [objc_allocWithZone((Class)FLFollowUpController) init];
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_connectionState] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapSnapshotter] = 0;
  id v20 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex];
  *(void *)id v20 = 0;
  v20[8] = 1;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_doneVC] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_errorVC] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_nfcVC] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_appleIDVC] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_hsa2VC] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairLockedVC] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sessionError] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_assets] = 0;
  NSString v21 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_location];
  *(void *)NSString v21 = 0;
  *((void *)v21 + 1) = 0;
  v21[16] = 1;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_shownError] = 0;
  uint64_t v22 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_remainingCharacteristicsToDiscover;
  *(void *)&v9[v22] = sub_1000EEB50((uint64_t)&off_10019ACE0);
  uint64_t v23 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars;
  *(void *)&v9[v23] = sub_100007710((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v24 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_readValues;
  *(void *)&v9[v24] = sub_100007814((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredMainService] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_startedCharacteristicDiscovery] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentDisconnect] = 0;
  NSString v25 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_writeManager];
  unint64_t v26 = sub_1000072D0((uint64_t)_swiftEmptyArrayStorage);
  *NSString v25 = 178;
  v25[1] = v26;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentReadRequest] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentSecondReadRequest] = 0;
  *(_OWORD *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_storeS1] = xmmword_10017CAE0;
  NSString v27 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_targetS1Length];
  *(void *)NSString v27 = 0;
  v27[8] = 1;
  id v28 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_fnameDisplay];
  *id v28 = 0;
  v28[1] = 0;
  NSString v29 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vbVersionStr];
  void *v29 = 0;
  v29[1] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_handledS1S2PayloadRead] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sessionVerified] = 0;
  uint64_t v30 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_nfcUUID];
  uint64_t v31 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_needsNFCUI] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_nfcConfig] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_endpoint] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_xpcAgent] = 0;
  uint64_t v32 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_locationShifter;
  *(void *)&v9[v32] = [objc_allocWithZone((Class)GEOLocationShifter) init];
  NSString v33 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleName];
  *NSString v33 = 0;
  v33[1] = 0;
  NSString v34 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleEmoji];
  *NSString v34 = 0;
  v34[1] = 0;
  id v35 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue];
  *id v35 = xmmword_10017CAE0;
  v35[1] = 0u;
  _OWORD v35[2] = 0u;
  v35[3] = 0u;
  v35[4] = 0u;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_bubbleMonitor] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories] = 0;
  uint64_t v36 = &v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairState];
  *(void *)uint64_t v36 = 0;
  v36[8] = 1;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_findMyFinalizeState] = 0;
  v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapConfigurationState] = 0;
  *(void *)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapViewController] = 0;
  uint64_t v37 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_fbOtions;
  *(void *)&v9[v37] = sub_100007928((uint64_t)&off_10019B3B8);

  if (a2)
  {
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v38 = 0;
  }
  v41.receiver = v9;
  v41.super_class = (Class)type metadata accessor for AirTagSetupMainViewController();
  id v39 = [super initWithNibName:v38 bundle:a3];

  return v39;
}

id sub_1000CDD48(void *a1)
{
  sub_100009A0C(&qword_1001CBD20);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0xD00000000000001DLL;
  *(void *)(v3 + 24) = 0x800000010017F410;
  uint64_t v4 = qword_1001C6F10;
  os_log_type_t v5 = v1;
  uint64_t v6 = v5;
  if (v4 != -1) {
    os_log_type_t v5 = (unsigned char *)swift_once();
  }
  uint64_t v7 = (os_unfair_lock_s *)qword_1001C7CC8;
  __chkstk_darwin(v5);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  sub_1000F55D0();
  uint64_t v8 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController___doNotReference;
  os_unfair_lock_unlock(v7 + 4);
  swift_release();
  *(void *)&v6[v8] = v3;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_inFlightOperations] = &_swiftEmptySetSingleton;
  os_log_type_t v9 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_appleIDInfo];
  *(_OWORD *)os_log_type_t v9 = xmmword_10017C910;
  *((void *)v9 + 3) = 0;
  *((void *)v9 + 4) = 0;
  *((void *)v9 + 2) = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_timeout] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_multiThreshold] = -50;
  id v10 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig];
  uint64_t v11 = type metadata accessor for B389PresentationConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om;
  type metadata accessor for OnceManager();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = &_swiftEmptySetSingleton;
  *(void *)&v6[v12] = v13;
  uint64_t v14 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_beaconManager;
  *(void *)&v6[v14] = [objc_allocWithZone((Class)SPBeaconManager) init];
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_dismissed] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_retain] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_startVC] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleVC] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_namingVC] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_linkingVC] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_loadingVC] = 0;
  uint64_t v15 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_spManager;
  *(void *)&v6[v15] = [objc_allocWithZone((Class)SPPairingManager) init];
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_requestedPairingData] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_reenabledProxCard] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_didTapStart] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_didAgreeToLinking] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_needsMulti] = 0;
  uint64_t v16 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_followupController;
  *(void *)&v6[v16] = [objc_allocWithZone((Class)FLFollowUpController) init];
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_connectionState] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapSnapshotter] = 0;
  uint64_t v17 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex];
  *(void *)uint64_t v17 = 0;
  v17[8] = 1;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_doneVC] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_errorVC] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_nfcVC] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_appleIDVC] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_hsa2VC] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairLockedVC] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sessionError] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_assets] = 0;
  uint64_t v18 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_location];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  v18[16] = 1;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_shownError] = 0;
  uint64_t v19 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_remainingCharacteristicsToDiscover;
  *(void *)&v6[v19] = sub_1000EEB50((uint64_t)&off_10019ACE0);
  uint64_t v20 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars;
  *(void *)&v6[v20] = sub_100007710((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v21 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_readValues;
  *(void *)&v6[v21] = sub_100007814((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredMainService] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_startedCharacteristicDiscovery] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentDisconnect] = 0;
  uint64_t v22 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_writeManager];
  unint64_t v23 = sub_1000072D0((uint64_t)_swiftEmptyArrayStorage);
  void *v22 = 178;
  v22[1] = v23;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentReadRequest] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentSecondReadRequest] = 0;
  *(_OWORD *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_storeS1] = xmmword_10017CAE0;
  uint64_t v24 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_targetS1Length];
  *(void *)uint64_t v24 = 0;
  v24[8] = 1;
  NSString v25 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_fnameDisplay];
  *NSString v25 = 0;
  v25[1] = 0;
  unint64_t v26 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vbVersionStr];
  void *v26 = 0;
  v26[1] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_handledS1S2PayloadRead] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sessionVerified] = 0;
  NSString v27 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_nfcUUID];
  uint64_t v28 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_needsNFCUI] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_nfcConfig] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_endpoint] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_xpcAgent] = 0;
  uint64_t v29 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_locationShifter;
  *(void *)&v6[v29] = [objc_allocWithZone((Class)GEOLocationShifter) init];
  uint64_t v30 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleName];
  *uint64_t v30 = 0;
  v30[1] = 0;
  uint64_t v31 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_customRoleEmoji];
  void *v31 = 0;
  v31[1] = 0;
  uint64_t v32 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue];
  *uint64_t v32 = xmmword_10017CAE0;
  v32[1] = 0u;
  v32[2] = 0u;
  v32[3] = 0u;
  v32[4] = 0u;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_bubbleMonitor] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories] = 0;
  NSString v33 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairState];
  *(void *)NSString v33 = 0;
  v33[8] = 1;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_findMyFinalizeState] = 0;
  v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapConfigurationState] = 0;
  *(void *)&v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapViewController] = 0;
  uint64_t v34 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_fbOtions;
  *(void *)&v6[v34] = sub_100007928((uint64_t)&off_10019B408);

  v37.receiver = v6;
  v37.super_class = (Class)type metadata accessor for AirTagSetupMainViewController();
  [super initWithCoder:a1];

  return v35;
}

id sub_1000CE3B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AirTagSetupMainViewController();
  return [super dealloc];
}

uint64_t sub_1000CE784()
{
  return type metadata accessor for AirTagSetupMainViewController();
}

uint64_t type metadata accessor for AirTagSetupMainViewController()
{
  uint64_t result = qword_1001CBAD8;
  if (!qword_1001CBAD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000CE7D8()
{
  sub_1000CEA10(319, (unint64_t *)&unk_1001CBAF0, (void (*)(uint64_t))type metadata accessor for B389PresentationConfig);
  if (v0 <= 0x3F)
  {
    sub_1000CEA10(319, (unint64_t *)&qword_1001C8C60, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1000CEA10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1000CEA64()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_100009A0C(&qword_1001C7620);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for URL();
  id v121 = *(id *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v7 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_inFlightOperations;
  swift_beginAccess();
  unint64_t v124 = (unint64_t)"ensureUserConsented()";
  uint64_t v125 = v8;
  sub_1000E40C0((Swift::Int *)&v128, 0xD00000000000001CLL, 0x8000000100157440);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  unint64_t v123 = (unint64_t)"inViewController.swift";
  sub_10002821C(709, 0xD000000000000070, 0x800000010015BE50, v9, 0xD00000000000001CLL, 0x8000000100157440, 0, 0xE000000000000000);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_requestedPairingData))
  {
LABEL_2:
    if (*(void *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session)
      && *(void *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories))
    {
      swift_beginAccess();
      unint64_t v10 = v124 | 0x8000000000000000;
      sub_1000EB8CC(0xD00000000000001CLL, v124 | 0x8000000000000000);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_100028250(806, 0xD000000000000070, v123 | 0x8000000000000000, v9, 0xD00000000000001CLL, v10, 0, 0xE000000000000000);
    }
    else
    {
      sub_100061734();
      swift_allocError();
      *NSString v27 = 1;
      swift_willThrow();
    }
    return;
  }
  uint64_t v117 = v9;
  uint64_t v120 = v1;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_requestedPairingData) = 1;
  uint64_t v11 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_spManager);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  Swift::String v132 = sub_1000F5138;
  uint64_t v133 = v12;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v131 = sub_1000C44F4;
  *((void *)&v131 + 1) = &unk_1001A0270;
  uint64_t v13 = v2;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_release();
  [v11 initiatePairingSessionWithCompletion:v14];
  _Block_release(v14);
  uint64_t v15 = *(void **)(v13 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_beaconManager);
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  Swift::String v132 = sub_1000F5140;
  uint64_t v133 = v16;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v131 = sub_1000C4580;
  *((void *)&v131 + 1) = &unk_1001A0298;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_release();
  [v15 roleCategoriesWithCompletion:v17];
  _Block_release(v17);
  id v18 = [objc_allocWithZone((Class)ACAccountStore) init];
  id v19 = [v18 aa_primaryAppleAccount];
  if (!v19)
  {
    URL.init(string:)();
    Optional.unwrap(_:file:line:)();
    sub_1000118F8((uint64_t)v5, &qword_1001C7620);
    uint64_t v28 = (void (**)(char *, void, uint64_t, void))v121;
    uint64_t v29 = v122;
    (*((void (**)(char *, char *, uint64_t))v121 + 2))(v5, v7, v122);
    v28[7](v5, 0, 1, v29);
    sub_1000D0C54(0, 0, 0, 0, 0, 0, 0, 0, (uint64_t)v5);
    sub_1000118F8((uint64_t)v5, &qword_1001C7620);
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100012C4C(v30, (uint64_t)qword_1001CBA60);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      NSString v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "No iCloud account.", v33, 2u);
      swift_slowDealloc();
    }

    sub_100061734();
    swift_allocError();
    *uint64_t v34 = 3;
    swift_willThrow();

    ((void (*)(char *, uint64_t))v28[1])(v7, v29);
    return;
  }
  uint64_t v20 = v19;
  uint64_t v122 = v13;
  id v121 = [objc_allocWithZone((Class)AAUIProfilePictureStore) initWithAppleAccount:v19 grandSlamAccount:0 accountStore:v18];
  id v21 = [v121 profilePictureForAccountOwner];
  id v22 = [v20 username];
  id v118 = v18;
  id v119 = v20;
  if (v22)
  {
    unint64_t v23 = v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v26 = 0;
  }
  id v35 = (uint64_t *)(v122 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_appleIDInfo);
  swift_beginAccess();
  uint64_t v36 = *v35;
  uint64_t v37 = v35[1];
  NSString v38 = (void *)v35[2];
  *id v35 = v24;
  v35[1] = v26;
  v35[3] = 0;
  v35[4] = 0;
  _OWORD v35[2] = (uint64_t)v21;
  id v39 = v21;
  sub_10001CAD4(v36, v37, v38);
  id v40 = [self sharedInstance];
  NSString v41 = String._bridgeToObjectiveC()();
  id v42 = v119;
  id v43 = [v119 accountPropertyForKey:v41];

  if (v43)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v128 = 0u;
    long long v129 = 0u;
  }
  sub_100069968((uint64_t)&v128, (uint64_t)&aBlock, (uint64_t *)&unk_1001C94F0);
  if (!*((void *)&v131 + 1))
  {
    sub_1000118F8((uint64_t)&aBlock, (uint64_t *)&unk_1001C94F0);
    goto LABEL_24;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    sub_100061734();
    swift_allocError();
    *uint64_t v50 = 3;
    swift_willThrow();

    return;
  }
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v45 = [v40 authKitAccountWithAltDSID:v44];

  uint64_t v46 = &qword_1001C7000;
  id v115 = v39;
  if (v45)
  {
    id v47 = [v40 additionalInfoForAccount:v45];
    if (v47)
    {
      uint64_t v48 = v47;
      uint64_t v49 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v49 = 0;
    }
    id v113 = v40;
    LODWORD(v112) = [v40 phoneAsAppleIDForAccount:v45];
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    uint64_t v58 = sub_100012C4C(v57, (uint64_t)qword_1001CBA60);
    swift_bridgeObjectRetain_n();
    uint64_t v116 = v58;
    long long v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.default.getter();
    BOOL v61 = os_log_type_enabled(v59, v60);
    Swift::String v114 = v45;
    if (v61)
    {
      uint64_t v62 = swift_slowAlloc();
      id v111 = (id)swift_slowAlloc();
      *(void *)&long long v128 = v111;
      *(_DWORD *)uint64_t v62 = 136315394;
      if (v49)
      {
        swift_bridgeObjectRetain();
        unint64_t v63 = Dictionary.description.getter();
        unint64_t v65 = v64;
        swift_bridgeObjectRelease();
      }
      else
      {
        *(void *)&long long aBlock = 0;
        *((void *)&aBlock + 1) = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v63 = 0xD000000000000026;
        unint64_t v65 = 0x80000001001574B0;
      }
      *(void *)&long long aBlock = sub_100025CA0(v63, v65, (uint64_t *)&v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v62 + 12) = 1024;
      LODWORD(aBlock) = v112;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Additional account info: %s, MAKO: %{BOOL}d", (uint8_t *)v62, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v46 = &qword_1001C7000;
      if (!v49) {
        goto LABEL_43;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (!v49) {
        goto LABEL_43;
      }
    }
    if (*(void *)(v49 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v66 = sub_100008A90(0x6D754E656E6F6870, 0xEC00000073726562);
      if (v67)
      {
        sub_100011954(*(void *)(v49 + 56) + 32 * v66, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v131 = 0u;
      }
      uint64_t v68 = v49;
      swift_bridgeObjectRelease();
      if (*((void *)&v131 + 1))
      {
        sub_100017EF4(0, (unint64_t *)&unk_1001CBCC0);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_45;
        }
        Swift::String v77 = (void *)v128;
        id v78 = [(id)v128 firstObject];
        uint64_t v52 = v114;
        if (v78)
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v128 = 0u;
          long long v129 = 0u;
        }
        sub_100069968((uint64_t)&v128, (uint64_t)&aBlock, (uint64_t *)&unk_1001C94F0);
        if (*((void *)&v131 + 1))
        {
          sub_100017EF4(0, (unint64_t *)&unk_1001C9500);
          if (swift_dynamicCast())
          {
            id v111 = v77;
            id v100 = v126;
            *(void *)&long long v128 = 0x6D754E656E6F6870;
            *((void *)&v128 + 1) = 0xEB00000000726562;
            id v101 = [v126 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
            swift_unknownObjectRelease();
            if (v101)
            {
              _bridgeAnyObjectToAny(_:)();
              swift_unknownObjectRelease();
            }
            else
            {
              long long v128 = 0u;
              long long v129 = 0u;
            }
            sub_100069968((uint64_t)&v128, (uint64_t)&aBlock, (uint64_t *)&unk_1001C94F0);
            uint64_t v2 = v122;
            if (*((void *)&v131 + 1))
            {
              if (swift_dynamicCast())
              {
                unint64_t v102 = v127;
                if ((v112 & 1) == 0)
                {
                  uint64_t v103 = (uint64_t)v126;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRetain_n();
                  NSString v104 = Logger.logObject.getter();
                  os_log_type_t v105 = static os_log_type_t.default.getter();
                  BOOL v106 = os_log_type_enabled(v104, v105);
                  uint64_t v112 = v103;
                  if (v106)
                  {
                    long long v107 = (uint8_t *)swift_slowAlloc();
                    *(void *)&long long aBlock = swift_slowAlloc();
                    *(_DWORD *)long long v107 = 136315138;
                    long long v110 = v107 + 4;
                    swift_bridgeObjectRetain();
                    *(void *)&long long v128 = sub_100025CA0(v103, v102, (uint64_t *)&aBlock);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease_n();
                    _os_log_impl((void *)&_mh_execute_header, v104, v105, "Phone number: %s", v107, 0xCu);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {

                    swift_bridgeObjectRelease_n();
                  }
                  id v55 = v118;
                  id v40 = v113;
                  Swift::String v109 = sub_1000C5E58();
                  if (v108[1] != 1)
                  {
                    v108[3] = v112;
                    v108[4] = v102;
                  }
                  swift_bridgeObjectRelease();
                  ((void (*)(long long *, void))v109)(&aBlock, 0);

                  uint64_t v2 = v122;
                  uint64_t v46 = &qword_1001C7000;
LABEL_58:
                  id v79 = [v40 securityLevelForAccount:v52];
                  Swift::String v80 = Logger.logObject.getter();
                  os_log_type_t v81 = static os_log_type_t.default.getter();
                  if (os_log_type_enabled(v80, v81))
                  {
                    uint64_t v82 = (uint8_t *)swift_slowAlloc();
                    *(_DWORD *)uint64_t v82 = 134217984;
                    *(void *)&long long aBlock = v79;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    _os_log_impl((void *)&_mh_execute_header, v80, v81, "securityLevel: %lu", v82, 0xCu);
                    uint64_t v2 = v122;
                    swift_slowDealloc();
                  }

                  if (v79 != (id)4)
                  {
                    sub_1000D1080();
                    id v94 = Logger.logObject.getter();
                    os_log_type_t v95 = static os_log_type_t.error.getter();
                    BOOL v96 = os_log_type_enabled(v94, v95);
                    id v97 = v115;
                    if (v96)
                    {
                      Swift::String v98 = (uint8_t *)swift_slowAlloc();
                      *(_WORD *)Swift::String v98 = 0;
                      _os_log_impl((void *)&_mh_execute_header, v94, v95, "No HSA2.", v98, 2u);
                      swift_slowDealloc();
                    }

                    sub_100061734();
                    swift_allocError();
                    *uint64_t v99 = 3;
                    swift_willThrow();

                    return;
                  }
                  goto LABEL_61;
                }

                swift_bridgeObjectRelease();
                uint64_t v46 = &qword_1001C7000;
              }
              else
              {
              }
            }
            else
            {

              sub_1000118F8((uint64_t)&aBlock, (uint64_t *)&unk_1001C94F0);
            }
LABEL_46:
            uint64_t v69 = v68;
            swift_bridgeObjectRetain();
            char v70 = Logger.logObject.getter();
            os_log_type_t v71 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v70, v71))
            {
              NSString v72 = (uint8_t *)swift_slowAlloc();
              uint64_t v73 = swift_slowAlloc();
              *(void *)&long long v128 = v73;
              *(_DWORD *)NSString v72 = 136315138;
              uint64_t v112 = v73;
              if (v69)
              {
                swift_bridgeObjectRetain();
                unint64_t v74 = Dictionary.description.getter();
                unint64_t v76 = v75;
                swift_bridgeObjectRelease();
              }
              else
              {
                *(void *)&long long aBlock = 0;
                *((void *)&aBlock + 1) = 0xE000000000000000;
                _StringGuts.grow(_:)(17);
                swift_bridgeObjectRelease();
                unint64_t v74 = 0xD000000000000026;
                unint64_t v76 = 0x80000001001574B0;
              }
              *(void *)&long long aBlock = sub_100025CA0(v74, v76, (uint64_t *)&v128);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v70, v71, "Failed to decode phone number from: %s", v72, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              id v55 = v118;
              uint64_t v2 = v122;
              id v40 = v113;
              uint64_t v46 = &qword_1001C7000;
            }
            else
            {

              swift_bridgeObjectRelease_n();
              id v55 = v118;
              id v40 = v113;
            }
            uint64_t v52 = v114;
            goto LABEL_58;
          }

LABEL_45:
          uint64_t v2 = v122;
          goto LABEL_46;
        }
      }
LABEL_44:
      sub_1000118F8((uint64_t)&aBlock, (uint64_t *)&unk_1001C94F0);
      goto LABEL_45;
    }
LABEL_43:
    uint64_t v68 = v49;
    long long aBlock = 0u;
    long long v131 = 0u;
    goto LABEL_44;
  }
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v51 = type metadata accessor for Logger();
  sub_100012C4C(v51, (uint64_t)qword_1001CBA60);
  uint64_t v52 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.default.getter();
  BOOL v54 = os_log_type_enabled(v52, v53);
  id v55 = v118;
  if (v54)
  {
    long long v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v56 = 0;
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "No AppleID account", v56, 2u);
    swift_slowDealloc();
  }
  uint64_t v2 = v122;
LABEL_61:

  id v83 = [objc_allocWithZone((Class)CDPStateController) init];
  *(void *)&long long aBlock = 0;
  unsigned int v84 = [v83 isManateeAvailable:&aBlock];
  uint64_t v9 = v117;
  if (v84)
  {
    id v85 = (id)aBlock;

    goto LABEL_2;
  }
  id v86 = (id)aBlock;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  sub_1000D1080();
  if (v46[36] != -1) {
    swift_once();
  }
  uint64_t v87 = type metadata accessor for Logger();
  sub_100012C4C(v87, (uint64_t)qword_1001CBA60);
  id v88 = Logger.logObject.getter();
  os_log_type_t v89 = static os_log_type_t.error.getter();
  BOOL v90 = os_log_type_enabled(v88, v89);
  id v91 = v119;
  if (v90)
  {
    uint64_t v92 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v92 = 0;
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "No manatee.", v92, 2u);
    swift_slowDealloc();
  }

  sub_100061734();
  swift_allocError();
  *uint64_t v93 = 3;
  swift_willThrow();
  swift_errorRelease();
}

uint64_t sub_1000D0044(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v13 = (void *)result;
    sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
    uint64_t v22 = static OS_dispatch_queue.main.getter();
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = a1;
    v14[3] = a2;
    v14[4] = v13;
    aBlock[4] = sub_1000F51B0;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021CDC;
    aBlock[3] = &unk_1001A0338;
    uint64_t v15 = _Block_copy(aBlock);
    uint64_t v21 = v8;
    uint64_t v16 = v15;
    id v17 = a1;
    swift_errorRetain();
    id v18 = v13;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000F4FF8((unint64_t *)&qword_1001C8320, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100009A0C((uint64_t *)&unk_1001C9440);
    sub_10002BAB8((unint64_t *)&qword_1001C8330, (uint64_t *)&unk_1001C9440);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v19 = (void *)v22;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  }
  return result;
}

uint64_t sub_1000D0370(void *a1, uint64_t a2, uint64_t a3)
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100012C4C(v6, (uint64_t)qword_1001CBA60);
  id v7 = a1;
  swift_errorRetain();
  id v8 = v7;
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412546;
    if (a1) {
      id v13 = v8;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v12 = a1;

    *(_WORD *)(v11 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue();
      unint64_t v14 = Error.localizedDescription.getter();
      unint64_t v16 = v15;
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v16 = 0x8000000100154E70;
      unint64_t v14 = 0xD000000000000015;
    }
    sub_100025CA0(v14, v16, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Got pairing session: %@, error: %s", (uint8_t *)v11, 0x16u);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  *(void *)(a3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sessionError) = a2;
  swift_errorRetain();
  swift_errorRelease();
  id v17 = *(void **)(a3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
  *(void *)(a3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session) = a1;
  id v18 = v8;

  return sub_1000C6930();
}

uint64_t sub_1000D06BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = (void *)result;
    sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
    uint64_t v19 = static OS_dispatch_queue.main.getter();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    *(void *)(v12 + 24) = v11;
    aBlock[4] = sub_1000F5160;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021CDC;
    aBlock[3] = &unk_1001A02E8;
    id v13 = _Block_copy(aBlock);
    uint64_t v18 = v6;
    unint64_t v14 = v13;
    swift_bridgeObjectRetain();
    id v15 = v11;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000F4FF8((unint64_t *)&qword_1001C8320, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100009A0C((uint64_t *)&unk_1001C9440);
    sub_10002BAB8((unint64_t *)&qword_1001C8330, (uint64_t *)&unk_1001C9440);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unint64_t v16 = (void *)v19;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v14);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  }
  return result;
}

uint64_t sub_1000D09DC(uint64_t a1, uint64_t a2)
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CBA60);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_100017EF4(0, &qword_1001CBCD0);
    swift_bridgeObjectRetain();
    uint64_t v8 = Array.description.getter();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_100025CA0(v8, v10, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "roleCategories: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(void *)(a2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories) = a1;
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRelease();
  uint64_t v12 = *(void **)(a2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleVC);
  if (v12)
  {
    id v13 = v12;
    id v14 = [v13 contentView];
    id v15 = [v14 pickerView];

    [v15 reloadAllComponents];
  }
  return sub_1000C6930(v11);
}

void sub_1000D0C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_appleIDVC;
  uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_appleIDVC];
  if (!v11)
  {
    id v14 = objc_allocWithZone((Class)type metadata accessor for AirTagAppleIDViewController());
    id v15 = v9;
    id v16 = [v14 init];
    swift_unknownObjectWeakAssign();

    uint64_t v17 = *(void **)&v9[v10];
    *(void *)&v9[v10] = v16;

    uint64_t v18 = *(void **)&v9[v10];
    if (!v18)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    id v19 = v18;
    sub_100073BF8(&v54);
    NSString v20 = String._bridgeToObjectiveC()();
    NSString v21 = String._bridgeToObjectiveC()();
    NSString v22 = String._bridgeToObjectiveC()();
    NSString v23 = String._bridgeToObjectiveC()();
    sub_1000B8B9C((uint64_t)&v54);
    id v24 = [v19 dismissalConfirmationActionWithTitle:v20 message:v21 confirmButtonTitle:v22 cancelButtonTitle:v23];

    [v19 setDismissButtonAction:v24];
    uint64_t v25 = *(void **)&v9[v10];
    if (!v25)
    {
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v26 = v25;
    uint64_t v27 = a6;
    uint64_t v28 = a5;
    if (!a6) {
      uint64_t v28 = sub_10009CF4C(99);
    }
    uint64_t v29 = (uint64_t *)&v26[OBJC_IVAR____TtC18SharingViewService27AirTagAppleIDViewController_buttonText];
    uint64_t *v29 = v28;
    v29[1] = v27;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    uint64_t v30 = *(void **)&v9[v10];
    if (!v30) {
      goto LABEL_28;
    }
    id v31 = v30;
    if (!a2) {
      sub_10009CF4C(97);
    }
    swift_bridgeObjectRetain();
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v30 setTitle:v32];

    NSString v33 = *(void **)&v9[v10];
    if (!v33) {
      goto LABEL_29;
    }
    id v34 = v33;
    if (!a4) {
      sub_10009CF4C(98);
    }
    swift_bridgeObjectRetain();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v33 setSubtitle:v35];

    uint64_t v36 = *(void *)&v9[v10];
    if (!v36) {
      goto LABEL_30;
    }
    uint64_t v37 = (void *)(v36 + OBJC_IVAR____TtC18SharingViewService27AirTagAppleIDViewController_imageName);
    void *v37 = a7;
    v37[1] = a8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    NSString v38 = *(void **)&v9[v10];
    if (!v38)
    {
LABEL_31:
      __break(1u);
      return;
    }
    uint64_t v39 = (uint64_t)v38 + OBJC_IVAR____TtC18SharingViewService27AirTagAppleIDViewController_onDoneURL;
    swift_beginAccess();
    id v40 = v38;
    sub_1000F5040(a9, v39);
    swift_endAccess();

    uint64_t v11 = *(void **)&v9[v10];
    if (!v11) {
      return;
    }
  }
  uint64_t v41 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav;
  id v42 = *(void **)&v9[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
  if (!v42)
  {
    __break(1u);
    goto LABEL_24;
  }
  id v43 = v11;
  id v44 = v42;
  id v45 = [v44 viewControllers];
  sub_100017EF4(0, (unint64_t *)&qword_1001C9650);
  unint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v47 = v43;
  LOBYTE(v45) = sub_1000EEBC4(v46);

  swift_bridgeObjectRelease();
  uint64_t v48 = *(void **)&v9[v41];
  if ((v45 & 1) == 0)
  {
    if (v48)
    {
      id v49 = v48;
      [v49 pushViewController:v47 animated:1];
      goto LABEL_21;
    }
    goto LABEL_25;
  }
  if (!v48)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v49 = v48;

LABEL_21:
}

void sub_1000D1080()
{
  uint64_t v1 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_hsa2VC;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_hsa2VC];
  uint64_t v3 = v2;
  id v4 = v2;
  if (!v2)
  {
    id v5 = objc_allocWithZone((Class)type metadata accessor for AirTagHSA2ViewController());
    os_log_type_t v6 = v0;
    id v4 = [v5 init];
    swift_unknownObjectWeakAssign();

    uint64_t v3 = *(void **)&v0[v1];
  }
  *(void *)&v0[v1] = v4;
  id v7 = v2;

  uint64_t v8 = *(void **)&v0[v1];
  if (!v8)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v9 = v8;
  sub_100073BF8(&v17);
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  sub_1000B8B9C((uint64_t)&v17);
  id v14 = [v9 dismissalConfirmationActionWithTitle:v10 message:v11 confirmButtonTitle:v12 cancelButtonTitle:v13];

  [v9 setDismissButtonAction:v14];
  id v15 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v16 = *(void *)&v0[v1];
  if (v16)
  {
    [v15 pushViewController:v16 animated:1];
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1000D1208()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for B389PresentationConfig(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v85 = &v82[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  __chkstk_darwin(v5 - 8);
  os_log_type_t v89 = &v82[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v90 = type metadata accessor for UUID();
  uint64_t v92 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  id v91 = &v82[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for B389PresentationConfig.Mode(0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v87 = &v82[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __chkstk_darwin(v9);
  id v88 = &v82[-v12];
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = &v82[-v14];
  __chkstk_darwin(v13);
  Swift::String v17 = &v82[-v16];
  uint64_t v18 = sub_100009A0C(&qword_1001C9418);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  id v86 = &v82[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __chkstk_darwin(v19);
  NSString v23 = &v82[-v22];
  __chkstk_darwin(v21);
  uint64_t v25 = &v82[-v24];
  uint64_t v93 = v1;
  uint64_t v26 = v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
  swift_beginAccess();
  uint64_t v94 = v26;
  sub_100009BE8(v26, (uint64_t)v25, &qword_1001C9418);
  uint64_t v27 = *(NSObject **)(v3 + 48);
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v27)(v25, 1, v2) == 1)
  {
    __break(1u);
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v28 = v27;
  sub_10002B7F8((uint64_t)&v25[*(int *)(v2 + 24)], (uint64_t)v17, type metadata accessor for B389PresentationConfig.Mode);
  sub_10002B7F8((uint64_t)v17, (uint64_t)v15, type metadata accessor for B389PresentationConfig.Mode);
  if (!swift_getEnumCaseMultiPayload())
  {
    sub_100061E18((uint64_t)v17, type metadata accessor for B389PresentationConfig.Mode);
    sub_100061E18((uint64_t)v25, type metadata accessor for B389PresentationConfig);
    return;
  }
  sub_100061E18((uint64_t)v15, type metadata accessor for B389PresentationConfig.Mode);
  sub_100061E18((uint64_t)v17, type metadata accessor for B389PresentationConfig.Mode);
  sub_100061E18((uint64_t)v25, type metadata accessor for B389PresentationConfig);
  sub_100009BE8(v94, (uint64_t)v23, &qword_1001C9418);
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v27)(v23, 1, v2) == 1) {
    goto LABEL_46;
  }
  uint64_t v29 = v88;
  sub_10002B7F8((uint64_t)&v23[*(int *)(v2 + 24)], (uint64_t)v88, type metadata accessor for B389PresentationConfig.Mode);
  uint64_t v30 = v87;
  sub_10002B7F8((uint64_t)v29, (uint64_t)v87, type metadata accessor for B389PresentationConfig.Mode);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v33 = (uint64_t)v89;
  uint64_t v32 = v90;
  os_log_t v84 = v28;
  uint64_t v34 = v92;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v92 + 32))(v89, v30, v90);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v33, 0, 1, v32);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v89, 1, 1, v90);
    sub_100061E18((uint64_t)v30, type metadata accessor for B389PresentationConfig.Mode);
  }
  sub_100061E18((uint64_t)v29, type metadata accessor for B389PresentationConfig.Mode);
  int v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v33, 1, v32);
  uint64_t v36 = v93;
  if (v35 != 1)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v34 + 32))(v91, v33, v32);
    sub_100061E18((uint64_t)v23, type metadata accessor for B389PresentationConfig);
    swift_beginAccess();
    unint64_t v46 = "ensureConnected()";
    sub_1000E40C0(&v97, 0xD000000000000012, 0x8000000100157300);
    swift_endAccess();
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void *)(v36 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
    sub_10002821C(817, 0xD000000000000070, 0x800000010015BE50, v47, 0xD000000000000012, 0x8000000100157300, 0, 0xE000000000000000);
    uint64_t v48 = (unsigned char *)OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central;
    id v49 = *(void **)(v36 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central);
    if (v49)
    {
      if ([v49 state] == (id)5) {
        goto LABEL_18;
      }
      uint64_t v50 = *(void **)&v48[v36];
      if (v50)
      {
        if ([v50 state] != (id)10) {
          goto LABEL_41;
        }
LABEL_18:
        uint64_t v94 = v47;
        if (*(void *)(v36 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph))
        {
LABEL_39:
          swift_beginAccess();
          sub_1000EB8CC(0xD000000000000012, (unint64_t)v46 | 0x8000000000000000);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_100028250(838, 0xD000000000000070, 0x800000010015BE50, v94, 0xD000000000000012, (unint64_t)v46 | 0x8000000000000000, 0, 0xE000000000000000);
          (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v91, v32);
          return;
        }
        os_log_type_t v89 = (unsigned char *)OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph;
        uint64_t v51 = *(void **)&v48[v36];
        if (v51)
        {
          sub_100009A0C((uint64_t *)&unk_1001C94C0);
          uint64_t v52 = v34;
          unint64_t v53 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
          uint64_t v54 = swift_allocObject();
          *(_OWORD *)(v54 + 16) = xmmword_10017C370;
          (*(void (**)(unint64_t, unsigned char *, uint64_t))(v52 + 16))(v54 + v53, v91, v32);
          id v55 = v51;
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v57 = [v55 retrievePeripheralsWithIdentifiers:isa];

          sub_100017EF4(0, (unint64_t *)&unk_1001CBCA0);
          unint64_t v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v58 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v80 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            uint64_t v34 = v92;
            uint64_t v59 = v93;
            if (v80) {
              goto LABEL_22;
            }
          }
          else
          {
            uint64_t v34 = v92;
            uint64_t v59 = v93;
            if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_22:
              id v88 = "ensureConnected()";
              if ((v58 & 0xC000000000000001) != 0)
              {
                os_log_type_t v60 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (!*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
LABEL_44:
                  swift_once();
LABEL_29:
                  uint64_t v67 = type metadata accessor for Logger();
                  sub_100012C4C(v67, (uint64_t)qword_1001CBA60);
                  uint64_t v68 = (id)v59;
                  uint64_t v69 = Logger.logObject.getter();
                  os_log_type_t v70 = static os_log_type_t.default.getter();
                  int v71 = v70;
                  if (os_log_type_enabled(v69, v70))
                  {
                    uint64_t v72 = swift_slowAlloc();
                    os_log_t v84 = v69;
                    uint64_t v73 = v72;
                    uint64_t v74 = swift_slowAlloc();
                    int v83 = v71;
                    unint64_t v75 = (void *)v74;
                    *(_DWORD *)uint64_t v73 = 138412546;
                    id v85 = v48;
                    os_log_type_t v95 = v68;
                    unint64_t v76 = v68;
                    uint64_t v32 = v90;
                    uint64_t v34 = v92;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    *unint64_t v75 = v87;

                    *(_WORD *)(v73 + 12) = 1024;
                    LODWORD(v95) = v86;
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    os_log_t v77 = v84;
                    _os_log_impl((void *)&_mh_execute_header, v84, (os_log_type_t)v83, "%@. BT-paired already? %{BOOL}d", (uint8_t *)v73, 0x12u);
                    sub_100009A0C(&qword_1001C9410);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();
                  }
                  else
                  {
                  }
                  uint64_t v59 = v93;
                  goto LABEL_38;
                }
                os_log_type_t v60 = *(id *)(v58 + 32);
              }
              BOOL v61 = v60;
              swift_bridgeObjectRelease();
              uint64_t v62 = *(void **)&v89[v59];
              *(void *)&v89[v59] = v61;
              uint64_t v87 = v61;
              uint64_t v63 = v59;
              uint64_t v59 = v61;

              unint64_t v64 = *(void **)&v48[v63];
              if (v64)
              {
                id v65 = [v64 sharedPairingAgent];
                uint64_t v97 = (uint64_t)v65;
                sub_100009A0C((uint64_t *)&unk_1001C94D0);
                Optional.unwrap(_:file:line:)();

                uint64_t v48 = v95;
                unsigned int v66 = [v95 isPeerPaired:v59];
                unint64_t v46 = v88;
                LODWORD(v86) = v66;
                if (v66) {
                  [v48 unpairPeer:v59];
                }
                if (qword_1001C7120 == -1) {
                  goto LABEL_29;
                }
                goto LABEL_44;
              }
LABEL_50:
              __break(1u);
              return;
            }
          }
          swift_bridgeObjectRelease();
LABEL_38:
          if (*(void *)&v89[v59]) {
            goto LABEL_39;
          }
          swift_beginAccess();
          sub_1000E40C0(&v97, 0xD000000000000012, (unint64_t)v46 | 0x8000000000000000);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_10002821C(834, 0xD000000000000070, 0x800000010015BE50, v94, 0xD000000000000012, (unint64_t)v46 | 0x8000000000000000, 0, 0xE000000000000000);
LABEL_41:
          sub_100061734();
          swift_allocError();
          *os_log_type_t v81 = 1;
          swift_willThrow();
          (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v91, v32);
          return;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  sub_1000118F8(v33, (uint64_t *)&unk_1001C9450);
  sub_100061E18((uint64_t)v23, type metadata accessor for B389PresentationConfig);
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_100012C4C(v37, (uint64_t)qword_1001CBA60);
  NSString v38 = (char *)(id)v36;
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.fault.getter();
  BOOL v41 = os_log_type_enabled(v39, v40);
  uint64_t v42 = (uint64_t)v86;
  if (v41)
  {
    id v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    uint64_t v97 = v93;
    *(_DWORD *)id v43 = 136315138;
    sub_100009BE8(v94, v42, &qword_1001C9418);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v84)(v42, 1, v2))
    {
      sub_1000118F8(v42, &qword_1001C9418);
      os_log_type_t v95 = 0;
      unint64_t v96 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v44 = 0xD000000000000015;
      unint64_t v45 = 0x8000000100154E70;
    }
    else
    {
      uint64_t v78 = (uint64_t)v85;
      sub_10002B7F8(v42, (uint64_t)v85, type metadata accessor for B389PresentationConfig);
      sub_1000118F8(v42, &qword_1001C9418);
      unint64_t v44 = sub_100022450();
      unint64_t v45 = v79;
      sub_100061E18(v78, type metadata accessor for B389PresentationConfig);
    }
    os_log_type_t v95 = (unsigned char *)sub_100025CA0(v44, v45, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "No btUUID on %s", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1000D2078()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_connectionState;
  int v3 = v0[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_connectionState];
  if (v3 != 4)
  {
    if (v3 == 2)
    {
      swift_beginAccess();
      sub_1000EB8CC(0xD000000000000011, 0x80000001001572E0);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_100028250(852, 0xD000000000000070, 0x800000010015BE50, *(void *)&v0[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om], 0xD000000000000011, 0x80000001001572E0, 0, 0xE000000000000000);
      return;
    }
    if (!v0[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_connectionState])
    {
      swift_beginAccess();
      sub_1000E40C0(&v26, 0xD000000000000011, 0x80000001001572E0);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_10002821C(846, 0xD000000000000070, 0x800000010015BE50, *(void *)&v0[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om], 0xD000000000000011, 0x80000001001572E0, 0, 0xE000000000000000);
      uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central];
      if (v4)
      {
        uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph];
        if (v5)
        {
          id v6 = v4;
          id v7 = v5;
          sub_100007074((uint64_t)_swiftEmptyArrayStorage);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v6 connectPeripheral:v7 options:isa];

          char v9 = 1;
          v1[v2] = 1;
LABEL_20:
          sub_100061734();
          swift_allocError();
          *uint64_t v25 = v9;
          swift_willThrow();
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100012C4C(v17, (uint64_t)qword_1001CBA60);
    uint64_t v18 = v0;
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v29 = v18;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412290;
      char v23 = v1[v2];
      sub_100061734();
      swift_allocError();
      *uint64_t v24 = v23;
      uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v22 = v27;

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Default connectionState throw %@...", v21, 0xCu);
      sub_100009A0C(&qword_1001C9410);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    char v9 = v1[v2];
    goto LABEL_20;
  }
  uint64_t v27 = 0xD000000000000070;
  unint64_t v28 = 0x800000010015BE50;
  uint64_t v26 = 856;
  v10._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v12 = sub_1000E3FC4(&v26, v11);
  swift_endAccess();
  if (v12)
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100012C4C(v13, (uint64_t)qword_1001CBA60);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "ensureConnected - skip", v16, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1000D25CC()
{
  swift_beginAccess();
  sub_1000E40C0(&v8, 0xD000000000000015, 0x8000000100157420);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(867, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000015, 0x8000000100157420, 0, 0xE000000000000000);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_didTapStart))
  {
    swift_beginAccess();
    sub_1000EB8CC(0xD000000000000015, 0x8000000100157420);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_100028250(873, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000015, 0x8000000100157420, 0, 0xE000000000000000);
  }
  else
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100012C4C(v3, (uint64_t)qword_1001CBA60);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Waiting for user to tap start...", v6, 2u);
      swift_slowDealloc();
    }

    sub_100061734();
    swift_allocError();
    unsigned char *v7 = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1000D2814()
{
  swift_beginAccess();
  sub_1000E40C0(&v8, 0xD000000000000012, 0x8000000100157110);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(878, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000012, 0x8000000100157110, 0, 0xE000000000000000);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_didAgreeToLinking))
  {
    swift_beginAccess();
    sub_1000EB8CC(0xD000000000000012, 0x8000000100157110);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_100028250(884, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000012, 0x8000000100157110, 0, 0xE000000000000000);
  }
  else
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100012C4C(v3, (uint64_t)qword_1001CBA60);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Waiting for user to agree to linking...", v6, 2u);
      swift_slowDealloc();
    }

    sub_100061734();
    swift_allocError();
    unsigned char *v7 = 1;
    return swift_willThrow();
  }
}

void sub_1000D2A5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v106 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100009A0C(&qword_1001C7620);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::Int v8 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  os_log_type_t v105 = (char *)&v94 - v10;
  __chkstk_darwin(v9);
  long long v107 = (uint8_t *)&v94 - v11;
  swift_beginAccess();
  sub_1000E40C0(&v111, 0xD000000000000020, 0x8000000100157340);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(uint64_t *)((char *)&v0->isa + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(892, 0xD000000000000070, 0x800000010015BE50, v12, 0xD000000000000020, 0x8000000100157340, 0, 0xE000000000000000);
  uint64_t v13 = *(Class *)((char *)&v0->isa
                 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_followupController);
  if (!v13)
  {
    swift_beginAccess();
    sub_1000EB8CC(0xD000000000000020, 0x8000000100157340);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_100028250(897, 0xD000000000000070, 0x800000010015BE50, v12, 0xD000000000000020, 0x8000000100157340, 0, 0xE000000000000000);
    return;
  }
  uint64_t v104 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_followupController;
  id v109 = 0;
  id v14 = v13;
  id v15 = [v14 pendingFollowUpItems:&v109];
  id v16 = v109;
  if (!v15)
  {
    id v30 = v109;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return;
  }
  uint64_t v17 = v15;
  sub_100017EF4(0, (unint64_t *)&unk_1001CBCB0);
  unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v19 = v16;

  Swift::Int v102 = sub_100028B2C((uint64_t)&off_10019B138);
  swift_arrayDestroy();
  uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v101 = v20;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  id v99 = v14;
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = sub_100012C4C(v21, (uint64_t)qword_1001CBA60);
  swift_bridgeObjectRetain_n();
  uint64_t v103 = v22;
  char v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    unint64_t v96 = v4;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v97 = v2;
    uint64_t v26 = (uint8_t *)v25;
    id v109 = (id)swift_slowAlloc();
    os_log_t v95 = v1;
    *(_DWORD *)uint64_t v26 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v27 = Array.description.getter();
    Swift::String v98 = v8;
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v111 = sub_100025CA0(v27, v29, (uint64_t *)&v109);
    uint64_t v1 = v95;
    uint64_t v4 = v96;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    Swift::Int v8 = v98;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Followup Items: %s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v97;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v31 = (uint64_t)v101;
  swift_bridgeObjectRetain();
  uint64_t v32 = v102;
  swift_bridgeObjectRetain();
  id v33 = v108;
  id v34 = sub_100061C30(v18, v100, v31, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  if (!v34)
  {
    unint64_t v45 = *(Class *)((char *)&v1->isa + v104);
    *(Class *)((char *)&v1->isa + v104) = 0;

LABEL_43:
    return;
  }
  id v35 = v34;
  id v36 = [v35 actions];
  if (!v36)
  {
    __break(1u);
    return;
  }
  uint64_t v37 = v36;
  sub_100017EF4(0, (unint64_t *)&unk_1001C94E0);
  unint64_t v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v38 >> 62))
  {
    if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  uint64_t v87 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v87)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    id v88 = v35;
    os_log_type_t v89 = Logger.logObject.getter();
    os_log_type_t v90 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v89, v90))
    {
      id v108 = v33;
      id v91 = (uint8_t *)swift_slowAlloc();
      uint64_t v92 = (void *)swift_slowAlloc();
      os_log_t v95 = v1;
      long long v107 = v91;
      *(_DWORD *)id v91 = 138412290;
      id v109 = v88;
      uint64_t v93 = v88;
      uint64_t v1 = v95;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v92 = v34;

      _os_log_impl((void *)&_mh_execute_header, v89, v90, "account followup %@ has no actions", v107, 0xCu);
      sub_100009A0C(&qword_1001C9410);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      os_log_type_t v89 = v88;
    }

    unint64_t v45 = *(Class *)((char *)&v1->isa + v104);
    *(Class *)((char *)&v1->isa + v104) = 0;

    goto LABEL_43;
  }
LABEL_14:
  if ((v38 & 0xC000000000000001) != 0)
  {
    id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v39 = *(id *)(v38 + 32);
  }
  os_log_type_t v40 = v39;
  swift_bridgeObjectRelease();
  id v41 = [v35 title];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v44 = v43;
  }
  else
  {
    uint64_t v104 = 0;
    unint64_t v44 = 0;
  }
  swift_bridgeObjectRetain_n();
  id v46 = v40;
  id v47 = v35;
  unint64_t v48 = v44;
  id v49 = v46;
  id v50 = v47;
  uint64_t v51 = Logger.logObject.getter();
  LODWORD(v100) = static os_log_type_t.default.getter();
  BOOL v52 = os_log_type_enabled(v51, (os_log_type_t)v100);
  id v108 = v49;
  id v101 = v50;
  Swift::Int v102 = v48;
  if (v52)
  {
    os_log_t v95 = v51;
    unint64_t v96 = v4;
    uint64_t v97 = v2;
    Swift::String v98 = v8;
    uint64_t v53 = swift_slowAlloc();
    uint64_t v54 = (void *)swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    uint64_t v111 = v94;
    *(_DWORD *)uint64_t v53 = 138412802;
    id v109 = v50;
    id v55 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v54 = v34;

    *(_WORD *)(v53 + 12) = 2080;
    uint64_t v56 = v104;
    unint64_t v57 = v48;
    if (!v48)
    {
      id v109 = 0;
      unint64_t v110 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      uint64_t v56 = 0xD000000000000015;
      unint64_t v57 = 0x8000000100154E70;
    }
    swift_bridgeObjectRetain();
    id v109 = (id)sub_100025CA0(v56, v57, &v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 22) = 2080;
    id v49 = v108;
    id v58 = [v108 label];
    if (v58)
    {
      uint64_t v59 = v58;
      unint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v62 = v61;
    }
    else
    {
      id v109 = 0;
      unint64_t v110 = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v60 = 0xD000000000000015;
      unint64_t v62 = 0x8000000100154E70;
    }
    uint64_t v4 = v96;
    id v109 = (id)sub_100025CA0(v60, v62, &v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v63 = v95;
    _os_log_impl((void *)&_mh_execute_header, v95, (os_log_type_t)v100, "accountFollowup: %@, title: %s, label: %s", (uint8_t *)v53, 0x20u);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v2 = v97;
    Swift::Int v8 = v98;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v64 = [v49 launchActionURL];
  if (!v64)
  {
    uint64_t v72 = (uint64_t)v105;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v106 + 56))(v105, 1, 1, v2);
    goto LABEL_33;
  }
  id v65 = v64;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v66 = v106;
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v106 + 32);
  uint64_t v68 = v4;
  uint64_t v69 = v105;
  v67(v105, v68, v2);
  os_log_type_t v70 = *(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56);
  v70(v69, 0, 1, v2);
  int v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48))(v69, 1, v2);
  uint64_t v72 = (uint64_t)v69;
  if (v71 == 1)
  {
LABEL_33:
    uint64_t v73 = v107;
    URL.init(string:)();
    sub_1000118F8(v72, &qword_1001C7620);
    goto LABEL_34;
  }
  uint64_t v73 = v107;
  v67((char *)v107, (char *)v72, v2);
  v70((char *)v73, 0, 1, v2);
LABEL_34:
  sub_100009BE8((uint64_t)v73, (uint64_t)v8, &qword_1001C7620);
  uint64_t v74 = Logger.logObject.getter();
  os_log_type_t v75 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v74, v75))
  {
    unint64_t v76 = (uint8_t *)swift_slowAlloc();
    id v109 = (id)swift_slowAlloc();
    *(_DWORD *)unint64_t v76 = 136315138;
    unint64_t v77 = sub_1000C2D80();
    uint64_t v111 = sub_100025CA0(v77, v78, (uint64_t *)&v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000118F8((uint64_t)v8, &qword_1001C7620);
    _os_log_impl((void *)&_mh_execute_header, v74, v75, "launchActionURL: %s", v76, 0xCu);
    swift_arrayDestroy();
    uint64_t v73 = v107;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000118F8((uint64_t)v8, &qword_1001C7620);
  }

  uint64_t v79 = v102;
  NSString v80 = String._bridgeToObjectiveC()();
  id v81 = sub_100138404(v80);

  uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v84 = v83;

  sub_1000D0C54(v104, v79, 0, 0xE000000000000000, v82, v84, 0, 0, (uint64_t)v73);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100061734();
  swift_allocError();
  *id v85 = 1;
  swift_willThrow();
  id v86 = v101;

  sub_1000118F8((uint64_t)v73, &qword_1001C7620);
}

void sub_1000D388C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairState;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairState);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairState + 8) == 1)
  {
    switch(v3)
    {
      case 1:
        unint64_t v68 = 0xD000000000000070;
        unint64_t v69 = 0x800000010015BE50;
        uint64_t v67 = 944;
        v21._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v21);
        swift_bridgeObjectRelease();
        uint64_t v22 = String.hashValue.getter();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        char v23 = sub_1000E3FC4(&v67, v22);
        swift_endAccess();
        if ((v23 & 1) == 0) {
          goto LABEL_17;
        }
        if (qword_1001C7120 != -1) {
          swift_once();
        }
        uint64_t v24 = type metadata accessor for Logger();
        sub_100012C4C(v24, (uint64_t)qword_1001CBA60);
        uint64_t v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v25, v26)) {
          goto LABEL_30;
        }
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        unint64_t v28 = "ensurePaired - Wait for pair request";
        goto LABEL_29;
      case 2:
        unint64_t v68 = 0xD000000000000070;
        unint64_t v69 = 0x800000010015BE50;
        uint64_t v67 = 954;
        v29._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v29);
        swift_bridgeObjectRelease();
        uint64_t v30 = String.hashValue.getter();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        char v31 = sub_1000E3FC4(&v67, v30);
        swift_endAccess();
        if ((v31 & 1) == 0) {
          goto LABEL_17;
        }
        if (qword_1001C7120 != -1) {
          swift_once();
        }
        uint64_t v32 = type metadata accessor for Logger();
        sub_100012C4C(v32, (uint64_t)qword_1001CBA60);
        uint64_t v25 = Logger.logObject.getter();
        os_log_type_t v26 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v25, v26)) {
          goto LABEL_30;
        }
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        unint64_t v28 = "ensurePaired - wait for pair";
LABEL_29:
        _os_log_impl((void *)&_mh_execute_header, v25, v26, v28, v27, 2u);
        swift_slowDealloc();
LABEL_30:

        goto LABEL_17;
      case 3:
        unint64_t v68 = 0xD000000000000070;
        unint64_t v69 = 0x800000010015BE50;
        uint64_t v67 = 958;
        v33._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v33);
        swift_bridgeObjectRelease();
        uint64_t v34 = String.hashValue.getter();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        char v35 = sub_1000E3FC4(&v67, v34);
        swift_endAccess();
        if (v35)
        {
          if (qword_1001C7120 != -1) {
            swift_once();
          }
          uint64_t v36 = type metadata accessor for Logger();
          sub_100012C4C(v36, (uint64_t)qword_1001CBA60);
          uint64_t v37 = Logger.logObject.getter();
          os_log_type_t v38 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v37, v38))
          {
            id v39 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v39 = 0;
            _os_log_impl((void *)&_mh_execute_header, v37, v38, "ensurePaired - did pair", v39, 2u);
            swift_slowDealloc();
          }
        }
        uint64_t v40 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph;
        id v41 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
        if (!v41) {
          goto LABEL_62;
        }
        [v41 setDelegate:v1];
        uint64_t v42 = *(void **)(v1 + v40);
        if (!v42) {
          goto LABEL_63;
        }
        id v43 = v42;
        NSString v44 = String._bridgeToObjectiveC()();
        [v43 tag:v44];

        unint64_t v45 = *(void **)(v1 + v40);
        if (!v45) {
          goto LABEL_64;
        }
        sub_100009A0C((uint64_t *)&unk_1001C8370);
        uint64_t v46 = swift_allocObject();
        *(_OWORD *)(v46 + 16) = xmmword_10017C870;
        uint64_t v47 = qword_1001C6E50;
        id v48 = v45;
        if (v47 != -1) {
          swift_once();
        }
        id v49 = (void *)qword_1001D1408;
        *(void *)(v46 + 32) = qword_1001D1408;
        unint64_t v68 = v46;
        specialized Array._endMutation()();
        sub_100017EF4(0, (unint64_t *)&unk_1001C94B0);
        id v50 = v49;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v48 discoverServices:isa];

        *(void *)uint64_t v2 = 4;
        *(unsigned char *)(v2 + 8) = 1;
        return;
      case 4:
        uint64_t v52 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
        unint64_t v68 = 0xD000000000000070;
        unint64_t v69 = 0x800000010015BE50;
        uint64_t v67 = 965;
        v53._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v53);
        swift_bridgeObjectRelease();
        uint64_t v54 = String.hashValue.getter();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        char v55 = sub_1000E3FC4(&v67, v54);
        swift_endAccess();
        if (v55)
        {
          if (qword_1001C7120 != -1) {
            swift_once();
          }
          uint64_t v56 = type metadata accessor for Logger();
          sub_100012C4C(v56, (uint64_t)qword_1001CBA60);
          unint64_t v57 = Logger.logObject.getter();
          os_log_type_t v58 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v59 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v59 = 0;
            _os_log_impl((void *)&_mh_execute_header, v57, v58, "ensurePaired - handledPostPair", v59, 2u);
            swift_slowDealloc();
          }
        }
        swift_beginAccess();
        sub_1000EB8CC(0x6150657275736E65, 0xEE00292864657269);
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_100028250(966, 0xD000000000000070, 0x800000010015BE50, v52, 0x6150657275736E65, 0xEE00292864657269, 0, 0xE000000000000000);
        return;
      case 5:
        unint64_t v68 = 0xD000000000000070;
        unint64_t v69 = 0x800000010015BE50;
        uint64_t v67 = 969;
        v60._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v60);
        swift_bridgeObjectRelease();
        uint64_t v61 = String.hashValue.getter();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        char v62 = sub_1000E3FC4(&v67, v61);
        swift_endAccess();
        if (v62)
        {
          if (qword_1001C7120 != -1) {
            swift_once();
          }
          uint64_t v63 = type metadata accessor for Logger();
          sub_100012C4C(v63, (uint64_t)qword_1001CBA60);
          id v64 = Logger.logObject.getter();
          os_log_type_t v65 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v64, v65))
          {
            uint64_t v66 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v66 = 0;
            _os_log_impl((void *)&_mh_execute_header, v64, v65, "ensurePaired - skip pair", v66, 2u);
            swift_slowDealloc();
          }
        }
        return;
      default:
        swift_beginAccess();
        sub_1000E40C0(&v67, 0x6150657275736E65, 0xEE00292864657269);
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_10002821C(938, 0xD000000000000070, 0x800000010015BE50, *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om), 0x6150657275736E65, 0xEE00292864657269, 0, 0xE000000000000000);
        uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central);
        if (!v4) {
          goto LABEL_59;
        }
        id v5 = [v4 sharedPairingAgent];
        if (!v5) {
          goto LABEL_60;
        }
        if (!*(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph)) {
          goto LABEL_61;
        }
        uint64_t v6 = v5;
        [v5 pairPeer:];

        *(void *)uint64_t v2 = 1;
        *(unsigned char *)(v2 + 8) = 1;
        goto LABEL_17;
    }
  }
  unint64_t v68 = 0xD000000000000070;
  unint64_t v69 = 0x800000010015BE50;
  uint64_t v67 = 948;
  v7._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v9 = sub_1000E3FC4(&v67, v8);
  swift_endAccess();
  if (v9)
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100012C4C(v10, (uint64_t)qword_1001CBA60);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ensurePaired - Respond to request", v13, 2u);
      swift_slowDealloc();
    }
  }
  id v14 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_central);
  if (!v14)
  {
    __break(1u);
    goto LABEL_57;
  }
  id v15 = [v14 sharedPairingAgent];
  if (!v15)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  id v16 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
  if (!v16)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    JUMPOUT(0x1000D4530);
  }
  uint64_t v17 = v15;
  id v18 = v16;
  sub_100006CE4((uint64_t)_swiftEmptyArrayStorage);
  Class v19 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 respondToPairingRequest:v18 type:v3 accept:1 data:v19];

  *(void *)uint64_t v2 = 2;
  *(unsigned char *)(v2 + 8) = 1;
LABEL_17:
  sub_100061734();
  swift_allocError();
  *os_log_type_t v20 = 1;
  swift_willThrow();
}

uint64_t sub_1000D4548()
{
  swift_beginAccess();
  sub_1000E40C0(&v4, 0xD000000000000014, 0x8000000100157130);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(975, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000014, 0x8000000100157130, 0, 0xE000000000000000);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex + 8))
  {
    sub_100061734();
    swift_allocError();
    unsigned char *v2 = 1;
    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    sub_1000EB8CC(0xD000000000000014, 0x8000000100157130);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_100028250(978, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000014, 0x8000000100157130, 0, 0xE000000000000000);
  }
}

void sub_1000D46E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100009A0C(&qword_1001C9418);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  Swift::String v7 = (char *)&v92 - v6;
  uint64_t v8 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_inFlightOperations;
  swift_beginAccess();
  unint64_t v112 = (unint64_t)"v32@?0{?=dd}8d24";
  sub_1000E40C0(v123, 0xD000000000000017, 0x8000000100156B80);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  unint64_t v111 = (unint64_t)"inViewController.swift";
  uint64_t v113 = v13;
  sub_10002821C(983, 0xD000000000000070, 0x800000010015BE50, v13, 0xD000000000000017, 0x8000000100156B80, 0, 0xE000000000000000);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_findMyFinalizeState))
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_findMyFinalizeState) == 2)
    {
LABEL_3:
      swift_beginAccess();
      unint64_t v14 = v112 | 0x8000000000000000;
      sub_1000EB8CC(0xD000000000000017, v112 | 0x8000000000000000);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_100028250(1062, 0xD000000000000070, v111 | 0x8000000000000000, v113, 0xD000000000000017, v14, 0, 0xE000000000000000);
      return;
    }
    goto LABEL_46;
  }
  long long v107 = v11;
  id v108 = (void (**)(char *, void, uint64_t))v9;
  Swift::Int v102 = v7;
  uint64_t v104 = v5;
  uint64_t v15 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_findMyFinalizeState;
  v123[0] = sub_1000C5ED0();
  v123[1] = v16;
  sub_100009A0C(&qword_1001C9420);
  Optional.unwrap(_:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v99 = (uint64_t)aBlock;
  Class v100 = (Class)v116;
  uint64_t v97 = v15;
  *(unsigned char *)(v0 + v15) = 1;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = sub_100012C4C(v17, (uint64_t)qword_1001CBA60);
  Class v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v98 = v12;
  uint64_t v22 = v114;
  if (v21)
  {
    char v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Calling finalizePairing...", v23, 2u);
    swift_slowDealloc();
  }

  uint64_t v24 = (void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_readValues);
  swift_beginAccess();
  os_log_type_t v105 = v24;
  uint64_t v25 = *v24;
  if (*(void *)(v25 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_100008BE0(0xDu);
    if (v27)
    {
      unint64_t v28 = (uint64_t *)(*(void *)(v25 + 56) + 16 * v26);
      uint64_t v29 = *v28;
      unint64_t v30 = v28[1];
      sub_100009B90(*v28, v30);
    }
    else
    {
      uint64_t v29 = 0;
      unint64_t v30 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = 0;
    unint64_t v30 = 0xF000000000000000;
  }
  uint64_t v121 = v29;
  unint64_t v122 = v30;
  uint64_t v106 = sub_100009A0C(&qword_1001C9428);
  Optional.unwrap(_:file:line:)();
  sub_10002B7E4(v29, v30);
  uint64_t v31 = (uint64_t)aBlock;
  unint64_t v32 = v116;
  sub_100009B90((uint64_t)aBlock, v116);
  sub_100009B90(v31, v32);
  uint64_t v101 = v18;
  Swift::String v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  BOOL v35 = os_log_type_enabled(v33, v34);
  unint64_t v109 = v32;
  uint64_t v110 = v31;
  uint64_t v103 = v1;
  if (v35)
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v96 = swift_slowAlloc();
    uint64_t v124 = v96;
    os_log_t v95 = v36;
    *(_DWORD *)uint64_t v36 = 136315138;
    uint64_t v94 = v36 + 4;
    long long aBlock = 0;
    unint64_t v116 = 0xE000000000000000;
    uint64_t v121 = v31;
    unint64_t v122 = v32;
    unint64_t v38 = (unint64_t)v107;
    uint64_t v37 = (uint64_t)v108;
    v108[13](v107, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v8);
    sub_100061900();
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
    (*(void (**)(unint64_t, uint64_t))(v37 + 8))(v38, v8);
    long long aBlock = (void (**)(char *, void, uint64_t))sub_100025CA0((uint64_t)aBlock, v116, &v124);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A5B8(v31, v32);
    sub_10000A5B8(v31, v32);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "c3t4s4Notif: %s", v95, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v103;
    uint64_t v22 = v114;
    swift_slowDealloc();
  }
  else
  {
    sub_10000A5B8(v31, v32);
    sub_10000A5B8(v31, v32);
  }

  if (!*(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories)) {
    goto LABEL_49;
  }
  unint64_t v39 = swift_bridgeObjectRetain();
  uint64_t v40 = v22;
  id v41 = sub_1000391F0(v39);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex + 8))
  {
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  unint64_t v42 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex);
  unint64_t v43 = (unint64_t)v105;
  if ((v42 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v42 >= v41[2])
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  NSString v44 = (uint8_t *)(id)v41[2 * v42 + 5];
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void *)v43;
  if (*(void *)(*(void *)v43 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v46 = sub_100008BE0(0xBu);
    if (v47)
    {
      id v48 = (uint64_t *)(*(void *)(v45 + 56) + 16 * v46);
      uint64_t v49 = *v48;
      unint64_t v50 = v48[1];
      sub_100009B90(*v48, v50);
    }
    else
    {
      uint64_t v49 = 0;
      unint64_t v50 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v49 = 0;
    unint64_t v50 = 0xF000000000000000;
  }
  uint64_t v121 = v49;
  unint64_t v122 = v50;
  Optional.unwrap(_:file:line:)();
  sub_10002B7E4(v49, v50);
  long long v107 = (char *)v116;
  id v108 = aBlock;
  uint64_t v51 = *(void *)v43;
  if (*(void *)(*(void *)v43 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v52 = sub_100008BE0(0xCu);
    if (v53)
    {
      uint64_t v54 = (uint64_t *)(*(void *)(v51 + 56) + 16 * v52);
      uint64_t v55 = *v54;
      unint64_t v56 = v54[1];
      sub_100009B90(*v54, v56);
    }
    else
    {
      uint64_t v55 = 0;
      unint64_t v56 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v55 = 0;
    unint64_t v56 = 0xF000000000000000;
  }
  uint64_t v121 = v55;
  unint64_t v122 = v56;
  Optional.unwrap(_:file:line:)();
  sub_10002B7E4(v55, v56);
  uint64_t v106 = (uint64_t)aBlock;
  os_log_type_t v105 = (void *)v116;
  uint64_t v96 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v57 = v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
  swift_beginAccess();
  os_log_type_t v58 = v102;
  sub_100009BE8(v57, (uint64_t)v102, &qword_1001C9418);
  uint64_t v59 = type metadata accessor for B389PresentationConfig(0);
  Swift::String v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48);
  if (v60(v58, 1, v59) == 1) {
    goto LABEL_51;
  }
  unint64_t v61 = v58[*(int *)(v59 + 36)];
  sub_100061E18((uint64_t)v58, type metadata accessor for B389PresentationConfig);
  uint64_t v114 = v40;
  if (v61 > 3) {
    Swift::Int v102 = 0;
  }
  else {
    Swift::Int v102 = (char *)qword_10017F618[v61];
  }
  os_log_t v95 = v44;
  char v62 = (uint8_t *)[(uint8_t *)v44 roleId];
  uint64_t v92 = sub_1000C61F8();
  uint64_t v64 = v63;
  uint64_t v65 = (uint64_t)v104;
  sub_100009BE8(v57, (uint64_t)v104, &qword_1001C9418);
  if (v60((char *)v65, 1, v59) == 1) {
    goto LABEL_52;
  }
  int v66 = *(unsigned __int8 *)(v65 + *(int *)(v59 + 32));
  sub_100009B90(v110, v109);
  sub_100009B90(v106, (unint64_t)v105);
  sub_100009B90((uint64_t)v108, (unint64_t)v107);
  NSString v67 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v94 = v62;
  uint64_t v99 = (uint64_t)v67;
  int v93 = v66;
  if (v64)
  {
    uint64_t v92 = (uint64_t)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v92 = 0;
  }
  id v68 = objc_allocWithZone((Class)SPPairingConfiguration);
  unint64_t v69 = v109;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  unint64_t v72 = (unint64_t)v107;
  uint64_t v71 = (uint64_t)v108;
  Class v73 = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v74 = v106;
  unint64_t v75 = (unint64_t)v105;
  Class v100 = Data._bridgeToObjectiveC()().super.isa;
  LOBYTE(v91) = v93;
  unint64_t v76 = v68;
  unint64_t v77 = (void *)v99;
  unint64_t v78 = (void *)v92;
  Swift::Int v102 = (char *)[v76 initWithName:v99 roleId:v94 roleEmoji:v92 keyStatus:isa collaborativeKeyC3:v73 signatureS4:v100 isZeus:v91 batteryLevel:v102];
  sub_10000A5B8(v74, v75);
  sub_10000A5B8(v71, v72);
  sub_10000A5B8(v110, v69);

  sub_100061E18((uint64_t)v104, type metadata accessor for B389PresentationConfig);
  uint64_t v79 = v102;
  NSString v80 = Logger.logObject.getter();
  os_log_type_t v81 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v80, v81))
  {
    uint64_t v82 = (uint8_t *)swift_slowAlloc();
    uint64_t v83 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v82 = 138412290;
    long long aBlock = (void (**)(char *, void, uint64_t))v79;
    uint64_t v84 = v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v83 = v79;

    _os_log_impl((void *)&_mh_execute_header, v80, v81, "Calling finalizePairing with config: %@", v82, 0xCu);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    NSString v80 = v79;
  }
  uint64_t v85 = v103;

  id v86 = *(void **)(v85 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
  if (v86)
  {
    uint64_t v87 = *(void **)(v85 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_spManager);
    id v119 = sub_1000F4FA8;
    uint64_t v120 = v96;
    long long aBlock = (void (**)(char *, void, uint64_t))_NSConcreteStackBlock;
    unint64_t v116 = 1107296256;
    uint64_t v117 = sub_1000C44F4;
    id v118 = &unk_1001A0108;
    id v88 = _Block_copy(&aBlock);
    id v89 = v86;
    swift_retain();
    swift_release();
    [v87 finalizePairingWithSession:v89 configuration:v79 completion:v88];
    sub_10000A5B8(v110, v109);
    sub_10000A5B8((uint64_t)v108, (unint64_t)v107);
    sub_10000A5B8(v106, (unint64_t)v105);

    swift_release();
    _Block_release(v88);

    if (*(unsigned char *)(v85 + v97) == 2) {
      goto LABEL_3;
    }
LABEL_46:
    sub_100061734();
    swift_allocError();
    *os_log_type_t v90 = 1;
    swift_willThrow();
    return;
  }
LABEL_53:
  __break(1u);
}

uint64_t sub_1000D5530(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v58 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  __chkstk_darwin(v58);
  Swift::String v7 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v62 - 8);
  uint64_t v9 = __chkstk_darwin(v62);
  uint64_t v11 = &v52[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  Swift::String v60 = &v52[-v12];
  if (a1) {
    int v13 = static os_log_type_t.error.getter();
  }
  else {
    int v13 = static os_log_type_t.default.getter();
  }
  int v14 = v13;
  uint64_t v57 = v7;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = sub_100012C4C(v15, (uint64_t)qword_1001CBA60);
  uint64_t v17 = a2;
  swift_errorRetain();
  uint64_t v18 = v17;
  swift_errorRetain();
  uint64_t v59 = v16;
  Class v19 = Logger.logObject.getter();
  BOOL v20 = os_log_type_enabled(v19, (os_log_type_t)v14);
  unint64_t v61 = a2;
  if (v20)
  {
    int v53 = v14;
    uint64_t v54 = v11;
    uint64_t v55 = v8;
    uint64_t v56 = a3;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 138412546;
    if (a2)
    {
      v63[0] = v18;
      char v23 = v18;
    }
    else
    {
      v63[0] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v22 = v61;

    *(_WORD *)(v21 + 12) = 2080;
    if (a1)
    {
      swift_getErrorValue();
      unint64_t v24 = Error.localizedDescription.getter();
      unint64_t v26 = v25;
    }
    else
    {
      v63[0] = 0;
      v63[1] = (id)0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v26 = 0x8000000100154E70;
      unint64_t v24 = 0xD000000000000015;
    }
    v63[0] = (id)sub_100025CA0(v24, v26, &v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v53, "finalizePairing: session: %@, error: %s", (uint8_t *)v21, 0x16u);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v8 = v55;
    a3 = v56;
    uint64_t v11 = v54;
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  if (*(void *)(a3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_timeout))
  {
    swift_getObjectType();
    swift_retain();
    OS_dispatch_source.cancel()();
    swift_release();
  }
  if (a1)
  {
    swift_errorRetain();
    sub_1000D5DB0(a1);
    return swift_errorRelease();
  }
  else
  {
    unint64_t v28 = *(void **)(a3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
    uint64_t v29 = (uint64_t)v61;
    *(void *)(a3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session) = v61;
    unint64_t v30 = v18;

    uint64_t v64 = v29;
    sub_100009A0C(&qword_1001C8A20);
    Optional.unwrap(_:file:line:)();
    uint64_t v31 = v63[0];
    unint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      os_log_type_t v34 = (uint8_t *)swift_slowAlloc();
      BOOL v35 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v34 = 138412290;
      id v36 = [v31 pairingLocation];
      id v37 = v36;
      if (v36) {
        v63[0] = v36;
      }
      else {
        v63[0] = 0;
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *BOOL v35 = v37;

      _os_log_impl((void *)&_mh_execute_header, v32, v33, "session pairingLocation: %@", v34, 0xCu);
      sub_100009A0C(&qword_1001C9410);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v38 = v62;
    }
    else
    {

      unint64_t v32 = v31;
      uint64_t v38 = v62;
    }

    id v39 = [v31 beaconId];
    uint64_t v40 = (uint64_t)v57;
    if (v39)
    {
      id v41 = v39;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v42 = 0;
    }
    else
    {
      uint64_t v42 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v40, v42, 1, v38);
    unint64_t v43 = v60;
    Optional.unwrap(_:file:line:)();
    sub_1000118F8(v40, (uint64_t *)&unk_1001C9450);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v11, v43, v38);
    NSString v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      unint64_t v46 = (uint8_t *)swift_slowAlloc();
      char v47 = (void *)swift_slowAlloc();
      unint64_t v61 = v31;
      v63[0] = v47;
      *(_DWORD *)unint64_t v46 = 136315138;
      sub_1000F4FF8(&qword_1001C9460, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v64 = sub_100025CA0(v48, v49, (uint64_t *)v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v50 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
      v50(v11, v62);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "beaconID: %s", v46, 0xCu);
      swift_arrayDestroy();
      uint64_t v31 = v61;
      swift_slowDealloc();
      uint64_t v38 = v62;
      swift_slowDealloc();
    }
    else
    {
      unint64_t v50 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
      v50(v11, v38);
    }

    *(unsigned char *)(a3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_findMyFinalizeState) = 2;
    sub_1000C6930(v51);

    return ((uint64_t (*)(unsigned char *, uint64_t))v50)(v60, v38);
  }
}

void sub_1000D5DB0(uint64_t a1)
{
  uint64_t v16 = a1;
  swift_errorRetain();
  sub_100009A0C(&qword_1001CBC30);
  type metadata accessor for SPPairingSessionError(0);
  if (swift_dynamicCast())
  {
    sub_1000DA50C((uint64_t)v15);
  }
  else
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v3, v4))
    {
      id v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)id v5 = 136315138;
      swift_getErrorValue();
      uint64_t v6 = Error.localizedDescription.getter();
      sub_100025CA0(v6, v7, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "handleError: error: %s failed decode as NSError", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    id v8 = [self mainBundle];
    NSString v9 = String._bridgeToObjectiveC()();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = sub_100138304(v8, v9, v10);

    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;

    sub_1000D9F08(v12, v14, a1, 0, 0);
    swift_bridgeObjectRelease();
  }
}

void sub_1000D609C()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  sub_1000E40C0(&v54, 0xD000000000000015, 0x8000000100156B40);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(1067, 0xD000000000000070, 0x800000010015BE50, v2, 0xD000000000000015, 0x8000000100156B40, 0, 0xE000000000000000);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
  if (v3)
  {
    uint64_t v47 = v2;
    id v4 = v3;
    char v5 = SFIsFMFAllowed();
    id v6 = [v4 pairingLocation];

    unint64_t v7 = (void *)&unk_1001D1000;
    if (!v6 || (v5 & 1) == 0)
    {
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_100012C4C(v8, (uint64_t)qword_1001CBA60);
      NSString v9 = v4;
      NSString v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        id v45 = v4;
        uint64_t v12 = swift_slowAlloc();
        *(_DWORD *)uint64_t v12 = 67109376;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v12 + 8) = 1024;
        id v13 = [v9 pairingLocation];

        LODWORD(aBlock) = v13 == 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Not rendering map (isFMFAllowed: %{BOOL}d, pairingLocationIsNil: %{BOOL}d)", (uint8_t *)v12, 0xEu);
        id v4 = v45;
        swift_slowDealloc();
      }
      else
      {

        NSString v10 = v9;
      }

      uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapViewController);
      *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapViewController) = 0;

      unint64_t v7 = &unk_1001D1000;
      *(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapConfigurationState) = 2;
    }
    uint64_t v19 = v7[307];
    if (*(unsigned char *)(v1 + v19))
    {
      if (*(unsigned char *)(v1 + v19) == 2)
      {
LABEL_17:
        swift_beginAccess();
        sub_1000EB8CC(0xD000000000000015, 0x8000000100156B40);
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_100028250(1122, 0xD000000000000070, 0x800000010015BE50, v47, 0xD000000000000015, 0x8000000100156B40, 0, 0xE000000000000000);
LABEL_26:

        return;
      }
LABEL_25:
      sub_100061734();
      swift_allocError();
      *id v41 = 1;
      swift_willThrow();
      goto LABEL_26;
    }
    id v20 = [v4 pairingLocation];
    if (v20)
    {
      uint64_t v21 = v20;
      id v46 = v4;
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      sub_100012C4C(v22, (uint64_t)qword_1001CBA60);
      char v23 = v21;
      unint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      uint64_t v44 = v19;
      if (os_log_type_enabled(v24, v25))
      {
        unint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v26 = 138412290;
        long long aBlock = (void **)&v23->isa;
        unint64_t v43 = v23;
        char v27 = v23;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v42 = v21;

        char v23 = v43;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "session pairingLocation: %@", v26, 0xCu);
        sub_100009A0C(&qword_1001C9410);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v19 = v44;
        swift_slowDealloc();
      }
      else
      {

        unint64_t v24 = v23;
      }

      *(unsigned char *)(v1 + v19) = 1;
      [v23 coordinate];
      double v29 = v28;
      double v31 = v30;
      uint64_t v32 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v32;
      *(void *)(v33 + 24) = v23;
      os_log_type_t v34 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_locationShifter);
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = sub_1000F4F18;
      *(void *)(v35 + 24) = v33;
      unint64_t v52 = sub_100061818;
      int v53 = (double *)v35;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v49 = 1107296256;
      unint64_t v50 = sub_1000C473C;
      uint64_t v51 = &unk_1001A0090;
      id v36 = _Block_copy(&aBlock);
      id v37 = v23;
      swift_retain();
      swift_release();
      uint64_t v38 = (double *)swift_allocObject();
      *((void *)v38 + 2) = sub_1000F4F18;
      *((void *)v38 + 3) = v33;
      v38[4] = v29;
      v38[5] = v31;
      unint64_t v52 = sub_100061890;
      int v53 = v38;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v49 = 1107296256;
      unint64_t v50 = sub_1000C3530;
      uint64_t v51 = &unk_1001A00E0;
      id v39 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
      uint64_t v40 = (void *)static OS_dispatch_queue.main.getter();
      [v34 shiftCoordinate:v36 accuracy:0 withCompletionHandler:v39 mustGoToNetworkCallback:v40 errorHandler:v29 callbackQueue:v31];

      _Block_release(v39);
      _Block_release(v36);

      swift_release();
      id v4 = v46;
      if (*(unsigned char *)(v1 + v44) == 2) {
        goto LABEL_17;
      }
      goto LABEL_25;
    }
    __break(1u);
  }
  else
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100012C4C(v14, (uint64_t)qword_1001CBA60);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Should always have session in ensureMapViewConfigured", v17, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_1000D68B8(CLLocationDegrees a1, CLLocationDegrees a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (unsigned char *)Strong;
    v36.CLLocationDegrees latitude = a1;
    v36.CLLocationDegrees longitude = a2;
    MKCoordinateRegion v37 = MKCoordinateRegionMakeWithDistance(v36, 600.0, 400.0);
    CLLocationDegrees latitude = v37.center.latitude;
    CLLocationDegrees longitude = v37.center.longitude;
    CLLocationDegrees latitudeDelta = v37.span.latitudeDelta;
    CLLocationDegrees longitudeDelta = v37.span.longitudeDelta;
    uint64_t v13 = sub_1000C61F8();
    if (v14)
    {
      uint64_t v15 = v13;
      uint64_t v16 = v14;
      uint64_t v17 = (objc_class *)type metadata accessor for B389MapAnnotation();
      uint64_t v18 = (char *)objc_allocWithZone(v17);
      uint64_t v19 = &v18[OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_roleEmoji];
      *(void *)uint64_t v19 = v15;
      *((void *)v19 + 1) = v16;
      id v20 = (CLLocationDegrees *)&v18[OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_region];
      *id v20 = latitude;
      v20[1] = longitude;
      v20[2] = latitudeDelta;
      v20[3] = longitudeDelta;
      *(void *)&v18[OBJC_IVAR____TtC18SharingViewService17B389MapAnnotation_pairingLocation] = a4;
      v35.receiver = v18;
      v35.super_class = v17;
      id v21 = a4;
      id v22 = [super init];
      char v23 = (objc_class *)type metadata accessor for B389MapViewController();
      unint64_t v24 = (char *)objc_allocWithZone(v23);
      os_log_type_t v25 = &v24[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_tapHandler];
      *(void *)os_log_type_t v25 = 0;
      *((void *)v25 + 1) = 0;
      uint64_t v26 = OBJC_IVAR____TtC18SharingViewService21B389MapViewController_mapView;
      id v27 = objc_allocWithZone((Class)MKMapView);
      id v28 = v22;
      double v29 = v24;
      *(void *)&v24[v26] = [v27 init];
      *(void *)&v29[OBJC_IVAR____TtC18SharingViewService21B389MapViewController_mapAnnotation] = v28;
      id v30 = v28;

      v34.receiver = v29;
      v34.super_class = v23;
      id v31 = [super initWithNibName:0 bundle:0];

      uint64_t v32 = *(void **)&v8[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapViewController];
      *(void *)&v8[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapViewController] = v31;

      v8[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapConfigurationState] = 2;
      sub_1000C6930(v33);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000D6AB8()
{
  swift_beginAccess();
  sub_1000E40C0(v14, 0xD00000000000001DLL, 0x80000001001572C0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(1127, 0xD000000000000070, 0x800000010015BE50, v2, 0xD00000000000001DLL, 0x80000001001572C0, 0, 0xE000000000000000);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredMainService);
  if (!v3)
  {
    sub_100061734();
    swift_allocError();
    *char v5 = 1;
    swift_willThrow();
    return;
  }
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_startedCharacteristicDiscovery) & 1) != 0)
  {
    id v4 = v3;
LABEL_11:
    swift_beginAccess();
    sub_1000EB8CC(0xD00000000000001DLL, 0x80000001001572C0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_100028250(1135, 0xD000000000000070, 0x800000010015BE50, v2, 0xD00000000000001DLL, 0x80000001001572C0, 0, 0xE000000000000000);

    return;
  }
  v14[3] = v1;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_startedCharacteristicDiscovery) = 1;
  id v6 = *(void **)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
  if (v6)
  {
    id v7 = v3;
    id v8 = v6;
    sub_10000B4C4();
    sub_100017EF4(0, (unint64_t *)&unk_1001C94B0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 discoverCharacteristics:isa forService:v7];

    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100012C4C(v10, (uint64_t)qword_1001CBA60);
    os_log_type_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ensureMainServiceDiscovered", v13, 2u);
      swift_slowDealloc();
    }

    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1000D6DBC()
{
  swift_beginAccess();
  sub_1000E40C0(&v5, 0xD000000000000024, 0x8000000100157290);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(1140, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000024, 0x8000000100157290, 0, 0xE000000000000000);
  uint64_t v2 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_remainingCharacteristicsToDiscover;
  swift_beginAccess();
  sub_1000EBA5C(5u);
  swift_endAccess();
  if (*(void *)(*(void *)v2 + 16))
  {
    sub_100061734();
    swift_allocError();
    unsigned char *v3 = 1;
    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    sub_1000EB8CC(0xD000000000000024, 0x8000000100157290);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_100028250(1146, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000024, 0x8000000100157290, 0, 0xE000000000000000);
  }
}

uint64_t sub_1000D6F84()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  sub_1000E40C0((Swift::Int *)&v61, 0xD000000000000014, 0x8000000100157220);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(1151, 0xD000000000000070, 0x800000010015BE50, v2, 0xD000000000000014, 0x8000000100157220, 0, 0xE000000000000000);
  id v61 = *(id *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
  id v3 = v61;
  sub_100009A0C(&qword_1001C8A20);
  Optional.unwrap(_:file:line:)();

  id v4 = v62;
  id v5 = [v62 nonce];

  uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v8 = v7;

  switch(v8 >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(v6) - v6;
      if (__OFSUB__(HIDWORD(v6), v6))
      {
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      uint64_t v9 = (int)v9;
LABEL_6:
      if (v9 != 32)
      {
LABEL_51:
        __break(1u);
        JUMPOUT(0x1000D76D4);
      }
      uint64_t v13 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars);
      swift_beginAccess();
      uint64_t v14 = *v13;
      if (*(void *)(*v13 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v15 = sub_100008BE0(4u);
        if (v16)
        {
          uint64_t v17 = *(void **)(*(void *)(v14 + 56) + 8 * v15);
          id v18 = v17;
        }
        else
        {
          uint64_t v17 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = 0;
      }
      sub_100009A0C((uint64_t *)&unk_1001CBC50);
      Optional.unwrap(_:file:line:)();

      id v63 = v61;
      uint64_t v19 = *v13;
      if (*(void *)(*v13 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v20 = sub_100008BE0(1u);
        if (v21)
        {
          id v22 = *(void **)(*(void *)(v19 + 56) + 8 * v20);
          id v23 = v22;
        }
        else
        {
          id v22 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        id v22 = 0;
      }
      Optional.unwrap(_:file:line:)();

      id v56 = v61;
      uint64_t v24 = *v13;
      uint64_t v55 = v2;
      if (*(void *)(*v13 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v25 = sub_100008BE0(0);
        if (v26)
        {
          id v27 = *(void **)(*(void *)(v24 + 56) + 8 * v25);
          id v28 = v27;
        }
        else
        {
          id v27 = 0;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        id v27 = 0;
      }
      uint64_t v58 = (uint64_t)v27;
      Optional.unwrap(_:file:line:)();

      id v29 = v61;
      uint64_t v30 = v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_writeManager;
      swift_beginAccess();
      if (!*(void *)(*(void *)(v30 + 8) + 16)
        || (swift_bridgeObjectRetain(),
            id v31 = v29,
            sub_100008B9C((uint64_t)v31),
            char v33 = v32,
            swift_bridgeObjectRelease(),
            v31,
            (v33 & 1) == 0))
      {
        uint64_t v34 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph;
        objc_super v35 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
        if (v35)
        {
          [v35 setNotifyValue:1 forCharacteristic:v63];
          CLLocationCoordinate2D v36 = *(void **)(v1 + v34);
          if (v36)
          {
            [v36 setNotifyValue:1 forCharacteristic:v56];
            MKCoordinateRegion v37 = *(void **)(v1 + v34);
            if (v37)
            {
              swift_beginAccess();
              if (*(void *)(*(void *)(v30 + 8) + 16))
              {
                id v38 = v29;
                id v39 = v37;
                sub_100008B9C((uint64_t)v38);
                if (v40)
                {
LABEL_35:

                  swift_endAccess();
                  goto LABEL_36;
                }
              }
              else
              {
                id v41 = v37;
              }
              id v42 = v29;
              id v43 = v37;
              sub_100009B90(v6, v8);
              sub_100009B90(v6, v8);
              id v39 = v43;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v57 = *(void *)(v30 + 8);
              *(void *)(v30 + 8) = 0x8000000000000000;
              sub_1000EA0F0(v6, v8, (uint64_t)v37, v42, isUniquelyReferenced_nonNull_native);
              *(void *)(v30 + 8) = v57;

              swift_bridgeObjectRelease();
              sub_1000201EC(v42);
              sub_10000A5B8(v6, v8);
              id v38 = v39;
              goto LABEL_35;
            }
            goto LABEL_50;
          }
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
LABEL_36:
      uint64_t v45 = *(void *)(v30 + 8);
      if (*(void *)(v45 + 16))
      {
        id v46 = v29;
        swift_bridgeObjectRetain();
        unint64_t v47 = sub_100008B9C((uint64_t)v46);
        if (v48)
        {
          uint64_t v49 = *(void *)(v45 + 56) + 24 * v47;
          id v50 = *(id *)v49;
          unint64_t v51 = *(void *)(v49 + 8);
          uint64_t v52 = *(void *)(v49 + 16);
          sub_100009B50(*(id *)v49, v51, (void *)v52);

          goto LABEL_42;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      id v50 = 0;
      unint64_t v51 = 0;
      uint64_t v52 = 1;
LABEL_42:
      sub_100009A0C((uint64_t *)&unk_1001CBC60);
      Optional.unwrap(_:file:line:)();
      sub_1000619BC((uint64_t)v50, v51, (void *)v52);
      sub_10002B928(v58, v59, v60);
      swift_bridgeObjectRelease();
      if (v60)
      {
        sub_100061734();
        swift_allocError();
        *int v53 = 1;
        swift_willThrow();
      }
      else
      {
        swift_beginAccess();
        sub_1000EB8CC(0xD000000000000014, 0x8000000100157220);
        swift_endAccess();
        swift_bridgeObjectRelease();
        sub_100028250(1169, 0xD000000000000070, 0x800000010015BE50, v55, 0xD000000000000014, 0x8000000100157220, 0, 0xE000000000000000);
      }

      return sub_10000A5B8(v6, v8);
    case 2uLL:
      uint64_t v11 = *(void *)(v6 + 16);
      uint64_t v10 = *(void *)(v6 + 24);
      BOOL v12 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v12) {
        goto LABEL_6;
      }
      goto LABEL_47;
    case 3uLL:
      goto LABEL_51;
    default:
      uint64_t v9 = BYTE6(v8);
      goto LABEL_6;
  }
}

void *sub_1000D76E4()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  sub_1000E40C0(&v41, 0xD00000000000001FLL, 0x80000001001571A0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(1174, 0xD000000000000070, 0x800000010015BE50, v2, 0xD00000000000001FLL, 0x80000001001571A0, 0, 0xE000000000000000);
  uint64_t v3 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_readValues;
  swift_beginAccess();
  if (!*(void *)(*(void *)v3 + 16)
    || (swift_bridgeObjectRetain(), sub_100008BE0(4u), char v5 = v4, swift_bridgeObjectRelease(), (v5 & 1) == 0))
  {
    sub_100061734();
    swift_allocError();
    *uint64_t v17 = 1;
    return (void *)swift_willThrow();
  }
  uint64_t v6 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentReadRequest;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentReadRequest)) {
    goto LABEL_45;
  }
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100012C4C(v7, (uint64_t)qword_1001CBA60);
  unint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "reading all values", v10, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(v1 + v6) = 1;
  uint64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (*(void *)(*v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_100008BE0(2u);
    if (v14)
    {
      unint64_t v15 = *(void **)(*(void *)(v12 + 56) + 8 * v13);
      id v16 = v15;
    }
    else
    {
      unint64_t v15 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v15 = 0;
  }
  id v42 = v15;
  sub_100009A0C((uint64_t *)&unk_1001CBC50);
  Optional.unwrap(_:file:line:)();

  uint64_t v19 = *v11;
  if (*(void *)(*v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_100008BE0(3u);
    if (v21)
    {
      id v22 = *(void **)(*(void *)(v19 + 56) + 8 * v20);
      id v23 = v22;
    }
    else
    {
      id v22 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v22 = 0;
  }
  id v42 = v22;
  Optional.unwrap(_:file:line:)();

  uint64_t v24 = *v11;
  if (*(void *)(*v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_100008BE0(0x10u);
    if (v26)
    {
      id v27 = *(void **)(*(void *)(v24 + 56) + 8 * v25);
      id v28 = v27;
    }
    else
    {
      id v27 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v27 = 0;
  }
  id v42 = v27;
  Optional.unwrap(_:file:line:)();

  uint64_t v29 = *v11;
  if (*(void *)(*v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_100008BE0(0x11u);
    if (v31)
    {
      char v32 = *(void **)(*(void *)(v29 + 56) + 8 * v30);
      id v33 = v32;
    }
    else
    {
      char v32 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v32 = 0;
  }
  id v42 = v32;
  Optional.unwrap(_:file:line:)();

  uint64_t v34 = *v11;
  if (*(void *)(*v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v35 = sub_100008BE0(0x12u);
    if (v36)
    {
      MKCoordinateRegion v37 = *(void **)(*(void *)(v34 + 56) + 8 * v35);
      id v38 = v37;
    }
    else
    {
      MKCoordinateRegion v37 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    MKCoordinateRegion v37 = 0;
  }
  id v42 = v37;
  Optional.unwrap(_:file:line:)();

  uint64_t v39 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph;
  uint64_t result = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
  if (!result)
  {
    __break(1u);
    goto LABEL_47;
  }
  [result readValueForCharacteristic:v40];
  uint64_t result = *(void **)(v1 + v39);
  if (!result)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  [result readValueForCharacteristic:v40];
  uint64_t result = *(void **)(v1 + v39);
  if (!result)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  [result readValueForCharacteristic:v40];
  uint64_t result = *(void **)(v1 + v39);
  if (!result)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  [result readValueForCharacteristic:v40];
  uint64_t result = *(void **)(v1 + v39);
  if (result)
  {
    [result readValueForCharacteristic:v40];

LABEL_45:
    swift_beginAccess();
    sub_1000EB8CC(0xD00000000000001FLL, 0x80000001001571A0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return (void *)sub_100028250(1193, 0xD000000000000070, 0x800000010015BE50, v2, 0xD00000000000001FLL, 0x80000001001571A0, 0, 0xE000000000000000);
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_1000D7D38()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v79 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v4 = (char *)v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v81 = (unint64_t)"ensureRoleSelected()";
  sub_1000E40C0(&v86, 0xD000000000000017, 0x8000000100157150);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  unint64_t v80 = (unint64_t)"inViewController.swift";
  sub_10002821C(1198, 0xD000000000000070, 0x800000010015BE50, v5, 0xD000000000000017, 0x8000000100157150, 0, 0xE000000000000000);
  if (*(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 8) >> 60 == 15) {
    goto LABEL_21;
  }
  uint64_t v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_readValues);
  swift_beginAccess();
  if (!*(void *)(*v6 + 16)) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  sub_100008BE0(2u);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v9 = *v6;
  if (!*(void *)(*v6 + 16)) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_100008BE0(0x10u);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    sub_100061734();
    swift_allocError();
    *id v33 = 1;
    return swift_willThrow();
  }
  uint64_t v76 = v5;
  uint64_t v12 = (uint64_t *)(*(void *)(v9 + 56) + 16 * v10);
  uint64_t v14 = *v12;
  unint64_t v13 = v12[1];
  sub_100009B90(*v12, v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = *v6;
  if (!*(void *)(*v6 + 16))
  {
    uint64_t v30 = v14;
    unint64_t v31 = v13;
LABEL_20:
    sub_10000A5B8(v30, v31);
    goto LABEL_21;
  }
  unint64_t v77 = v13;
  uint64_t v78 = v14;
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_100008BE0(0x11u);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v31 = v77;
    uint64_t v30 = v78;
    goto LABEL_20;
  }
  id v18 = (uint64_t *)(*(void *)(v15 + 56) + 16 * v16);
  uint64_t v19 = *v18;
  unint64_t v20 = v18[1];
  sub_100009B90(*v18, v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = *v6;
  uint64_t v22 = *(void *)(*v6 + 16);
  uint64_t v23 = v78;
  if (!v22)
  {
    uint64_t v32 = v19;
LABEL_19:
    sub_10000A5B8(v32, v20);
    uint64_t v30 = v23;
    unint64_t v31 = v77;
    goto LABEL_20;
  }
  uint64_t v75 = v19;
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_100008BE0(0x12u);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v26 = (uint64_t *)(*(void *)(v21 + 56) + 16 * v24);
  unint64_t v27 = v26[1];
  uint64_t v74 = *v26;
  sub_100009B90(v74, v27);
  swift_bridgeObjectRelease();
  id v28 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_storeS1);
  swift_beginAccess();
  unint64_t v29 = v28[1];
  if (v29 >> 60 == 15)
  {
    sub_10000A5B8(v74, v27);
LABEL_18:
    uint64_t v32 = v75;
    goto LABEL_19;
  }
  unint64_t v73 = v27;
  uint64_t v35 = *v28;
  unint64_t v36 = 0;
  switch(v29 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(v35), v35))
      {
        unint64_t v36 = HIDWORD(v35) - (int)v35;
        goto LABEL_27;
      }
      __break(1u);
      goto LABEL_39;
    case 2uLL:
      uint64_t v38 = *(void *)(v35 + 16);
      uint64_t v37 = *(void *)(v35 + 24);
      unint64_t v36 = v37 - v38;
      if (__OFSUB__(v37, v38))
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
LABEL_27:
      uint64_t v39 = *v28;
      unint64_t v40 = v29;
      sub_100009B90(v39, v29);
      unint64_t v29 = v40;
LABEL_28:
      if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_targetS1Length + 8) & 1) != 0
        || v36 != *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_targetS1Length))
      {
        unint64_t v58 = v29;
        sub_10000A5B8(v75, v20);
        sub_10000A5B8(v74, v73);
        sub_10002B7E4(v35, v58);
        goto LABEL_15;
      }
      uint64_t v71 = v35;
      unint64_t v72 = v29;
      Swift::Int v41 = (void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vbVersionStr);
      uint64_t v43 = v74;
      uint64_t v42 = v75;
      if (!v41[1])
      {
        uint64_t v35 = v77;
        uint64_t v82 = b389VersionString(from:)(v78, v77);
        unint64_t v83 = v44;
        sub_100009A0C(&qword_1001C9420);
        Optional.unwrap(_:file:line:)();
        swift_bridgeObjectRelease();
        unint64_t v36 = v85;
        uint64_t v70 = v84;
        *Swift::Int v41 = v84;
        v41[1] = v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (qword_1001C7120 == -1)
        {
LABEL_32:
          uint64_t v45 = type metadata accessor for Logger();
          sub_100012C4C(v45, (uint64_t)qword_1001CBA60);
          uint64_t v46 = v78;
          sub_100009B90(v78, v35);
          sub_100009B90(v46, v35);
          swift_bridgeObjectRetain();
          unint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.default.getter();
          int v69 = v48;
          unint64_t v49 = v36;
          unint64_t v50 = v35;
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v51 = swift_slowAlloc();
            unint64_t v67 = v49;
            uint64_t v52 = v51;
            uint64_t v68 = swift_slowAlloc();
            uint64_t v87 = v68;
            *(_DWORD *)uint64_t v52 = 136315394;
            v65[1] = v52 + 4;
            uint64_t v84 = 0;
            unint64_t v85 = 0xE000000000000000;
            uint64_t v53 = v78;
            uint64_t v82 = v78;
            unint64_t v83 = v50;
            uint64_t v54 = v79;
            (*(void (**)(char *, void, uint64_t))(v79 + 104))(v4, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v2);
            sub_100061900();
            os_log_t v66 = v47;
            DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
            (*(void (**)(char *, uint64_t))(v54 + 8))(v4, v2);
            uint64_t v84 = sub_100025CA0(v84, v85, &v87);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            unint64_t v55 = v77;
            sub_10000A5B8(v53, v77);
            sub_10000A5B8(v53, v55);
            *(_WORD *)(v52 + 12) = 2080;
            unint64_t v56 = v67;
            swift_bridgeObjectRetain();
            uint64_t v84 = sub_100025CA0(v70, v56, &v87);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            os_log_t v57 = v66;
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            uint64_t v59 = v78;
            sub_10000A5B8(v78, v50);
            sub_10000A5B8(v59, v50);

            swift_bridgeObjectRelease_n();
          }
          uint64_t v43 = v74;
          uint64_t v42 = v75;
          goto LABEL_37;
        }
LABEL_40:
        swift_once();
        goto LABEL_32;
      }
LABEL_37:
      uint64_t v60 = v42;
      sub_100009B90(v42, v20);
      unint64_t v61 = v73;
      sub_100009B90(v43, v73);
      uint64_t v79 = 0xD000000000000070;
      unint64_t v62 = v80 | 0x8000000000000000;
      uint64_t v63 = v76;
      sub_1000291A8(1217, 0xD000000000000070, v80 | 0x8000000000000000, v76, v60, v20, v43, v61);
      sub_10000A5B8(v43, v61);
      sub_10000A5B8(v60, v20);
      swift_beginAccess();
      unint64_t v64 = v81 | 0x8000000000000000;
      sub_1000EB8CC(0xD000000000000017, v81 | 0x8000000000000000);
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_100028250(1219, v79, v62, v63, 0xD000000000000017, v64, 0, 0xE000000000000000);
      sub_10002B7E4(v71, v72);
      sub_10000A5B8(v43, v61);
      sub_10000A5B8(v75, v20);
      return sub_10000A5B8(v78, v77);
    case 3uLL:
      goto LABEL_28;
    default:
      unint64_t v36 = BYTE6(v29);
      goto LABEL_28;
  }
}

void sub_1000D85E8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100012C4C(v12, (uint64_t)qword_1001CBA60);
  sub_100009B90(a1, a2);
  sub_100009B90(a3, a4);
  sub_100009B90(a1, a2);
  sub_100009B90(a3, a4);
  id v28 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  int v14 = v13;
  if (os_log_type_enabled(v28, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v20 = v15 + 4;
    unint64_t v30 = a2;
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    uint64_t v33 = v16;
    uint64_t v29 = a1;
    unsigned int v24 = enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:);
    unint64_t v25 = a4;
    uint64_t v17 = v8;
    uint64_t v23 = *(void (**)(char *))(v9 + 104);
    v23(v11);
    unint64_t v22 = sub_100061900();
    int v26 = v14;
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v11, v8);
    uint64_t v31 = sub_100025CA0(v31, v32, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A5B8(a1, a2);
    sub_10000A5B8(a1, a2);
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    unint64_t v18 = v25;
    uint64_t v29 = a3;
    unint64_t v30 = v25;
    ((void (*)(char *, void, uint64_t))v23)(v11, v24, v17);
    DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
    v21(v11, v17);
    uint64_t v31 = sub_100025CA0(v31, v32, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10000A5B8(a3, v18);
    sub_10000A5B8(a3, v18);
    _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v26, "rpkv: %s, spkv: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10000A5B8(a1, a2);
    sub_10000A5B8(a1, a2);
    sub_10000A5B8(a3, a4);
    sub_10000A5B8(a3, a4);
    uint64_t v19 = v28;
  }
}

uint64_t *sub_1000D89EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100009A0C(&qword_1001C9418);
  __chkstk_darwin(v2 - 8);
  id v89 = (unsigned int *)((char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v4 - 8);
  uint64_t v94 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_inFlightOperations;
  swift_beginAccess();
  unint64_t v91 = (unint64_t)"Expect userMessage encodes";
  uint64_t v93 = v6;
  sub_1000E40C0(v102, 0xD000000000000017, 0x8000000100157040);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v113 = v1;
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  unint64_t v90 = (unint64_t)"inViewController.swift";
  uint64_t v92 = v7;
  sub_10002821C(1224, 0xD000000000000070, 0x800000010015BE50, v7, 0xD000000000000017, 0x8000000100157040, 0, 0xE000000000000000);
  uint64_t v8 = (void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue);
  unint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 8);
  uint64_t v11 = v8[2];
  uint64_t v12 = v8[3];
  uint64_t v13 = v8[4];
  uint64_t v14 = v8[5];
  uint64_t v15 = (void *)v8[7];
  uint64_t v16 = v8[8];
  uint64_t v17 = v8[9];
  Class isa = (Class)v8[6];
  unint64_t v97 = v9;
  v102[0] = v9;
  v102[1] = v10;
  v102[2] = v11;
  v102[3] = v12;
  v102[4] = v13;
  v102[5] = v14;
  v102[6] = (Swift::Int)isa;
  v102[7] = (Swift::Int)v15;
  id v95 = v15;
  v102[8] = v16;
  v102[9] = v17;
  sub_1000619CC(v9, v10, v11, v12, v13, v14, (uint64_t)isa, (uint64_t)v15, v16, v17, (void (*)(void))sub_100009B90);
  sub_100009A0C(&qword_1001C94A8);
  Optional.unwrap(_:file:line:)();
  uint64_t v18 = v13;
  uint64_t v19 = v113;
  sub_1000619CC(v97, v10, v11, v12, v18, v14, (uint64_t)isa, (uint64_t)v95, v16, v17, (void (*)(void))sub_10000A5B8);
  long long v109 = v105;
  long long v110 = v106;
  long long v111 = v107;
  v108[0] = v103;
  v108[1] = v104;
  uint64_t v20 = (uint64_t *)(v19 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_readValues);
  swift_beginAccess();
  uint64_t v21 = *v20;
  if (*(void *)(*v20 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_100008BE0(2u);
    if (v23)
    {
      unsigned int v24 = (uint64_t *)(*(void *)(v21 + 56) + 16 * v22);
      uint64_t v25 = *v24;
      unint64_t v26 = v24[1];
      sub_100009B90(*v24, v26);
    }
    else
    {
      uint64_t v25 = 0;
      unint64_t v26 = 0xF000000000000000;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v25 = 0;
    unint64_t v26 = 0xF000000000000000;
  }
  uint64_t v100 = v25;
  unint64_t v101 = v26;
  sub_100009A0C(&qword_1001C9428);
  Optional.unwrap(_:file:line:)();
  sub_10002B7E4(v25, v26);
  unint64_t v97 = *((void *)&v103 + 1);
  uint64_t v27 = v103;
  id v28 = (uint64_t *)(v19 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_storeS1);
  swift_beginAccess();
  unint64_t v30 = v28[1];
  uint64_t v98 = *v28;
  uint64_t v29 = v98;
  unint64_t v99 = v30;
  sub_10002B914(v98, v30);
  Optional.unwrap(_:file:line:)();
  sub_10002B7E4(v29, v30);
  unint64_t v31 = *((void *)&v103 + 1);
  uint64_t v32 = v103;
  if (*(unsigned char *)(v19 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_handledS1S2PayloadRead)) {
    goto LABEL_16;
  }
  *(unsigned char *)(v19 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_handledS1S2PayloadRead) = 1;
  v112[0] = v109;
  long long v103 = v109;
  sub_100061AA0((uint64_t)v112);
  static String.Encoding.utf8.getter();
  sub_100061900();
  uint64_t v33 = String.init<A>(bytes:encoding:)();
  unint64_t v35 = v34;
  uint64_t v36 = sub_100061AD0((uint64_t)v112);
  uint64_t v98 = v33;
  unint64_t v99 = v35;
  __chkstk_darwin(v36);
  sub_100009A0C(&qword_1001C9420);
  Optional.unwrap(_:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void **)(v19 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
  if (!v37) {
    goto LABEL_22;
  }
  uint64_t v38 = *(void **)(v19 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_spManager);
  uint64_t v94 = (char *)v103;
  id v95 = v38;
  id v39 = v37;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  v40.super.Class isa = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v41 = *v20;
  if (!*(void *)(*v20 + 16))
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  Class v86 = v40.super.isa;
  id v87 = v39;
  unint64_t v88 = v31;
  swift_bridgeObjectRetain();
  unint64_t v42 = sub_100008BE0(0x12u);
  if ((v43 & 1) == 0)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v44 = (uint64_t *)(*(void *)(v41 + 56) + 16 * v42);
  uint64_t v45 = *v44;
  unint64_t v46 = v44[1];
  sub_100009B90(*v44, v46);
  swift_bridgeObjectRelease();
  Class v85 = Data._bridgeToObjectiveC()().super.isa;
  sub_10000A5B8(v45, v46);
  uint64_t v47 = *v20;
  if (!*(void *)(*v20 + 16)) {
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  unint64_t v48 = sub_100008BE0(0x11u);
  if ((v49 & 1) == 0)
  {
LABEL_24:
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v50 = (uint64_t *)(*(void *)(v47 + 56) + 16 * v48);
  uint64_t v51 = *v50;
  unint64_t v52 = v50[1];
  sub_100009B90(*v50, v52);
  swift_bridgeObjectRelease();
  Class v84 = Data._bridgeToObjectiveC()().super.isa;
  uint64_t result = (uint64_t *)sub_10000A5B8(v51, v52);
  if (!*(void *)(v19 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vbVersionStr + 8))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v82 = v32;
  uint64_t v83 = v27;
  swift_bridgeObjectRetain();
  NSString v81 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v54 = v19 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
  swift_beginAccess();
  uint64_t v55 = v54;
  unint64_t v56 = v89;
  sub_100009BE8(v55, (uint64_t)v89, &qword_1001C9418);
  uint64_t v57 = type metadata accessor for B389PresentationConfig(0);
  uint64_t result = (uint64_t *)(*(uint64_t (**)(unsigned int *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v56, 1, v57);
  if (result == 1)
  {
LABEL_26:
    __break(1u);
    return result;
  }
  uint64_t v58 = *v56;
  sub_100061E18((uint64_t)v56, type metadata accessor for B389PresentationConfig);
  Class v59 = Data._bridgeToObjectiveC()().super.isa;
  Class v60 = Data._bridgeToObjectiveC()().super.isa;
  Class v80 = v60;
  unint64_t v61 = (char *)String._bridgeToObjectiveC()();
  id v89 = (unsigned int *)v61;
  swift_bridgeObjectRelease();
  Class v62 = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v94 = (char *)v62;
  uint64_t v63 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)&long long v105 = sub_1000F50B0;
  *((void *)&v105 + 1) = v63;
  *(void *)&long long v103 = _NSConcreteStackBlock;
  *((void *)&v103 + 1) = 1107296256;
  *(void *)&long long v104 = sub_1000C44F4;
  *((void *)&v104 + 1) = &unk_1001A0180;
  unint64_t v64 = _Block_copy(&v103);
  swift_release();
  Class v78 = v62;
  Class v76 = v60;
  unint64_t v77 = v61;
  uint64_t v74 = v58;
  Class v75 = v59;
  Class v65 = v59;
  Class v66 = isa;
  Class v67 = v86;
  uint64_t v68 = v87;
  Class v70 = v84;
  Class v69 = v85;
  uint64_t v71 = v81;
  [v95 verifyPairingWithPairingSession:v87 signature:isa attestation:v86 systemPublicKey:v85 refKeyPublicKey:v84 systemVersion:v81 vendorId:76 productId:v74 ecid:v75 chipId:v76 serialNumber:v77 collaborativeKey:v78 completion:v64];

  _Block_release(v64);
  uint64_t v19 = v113;
  uint64_t v32 = v82;
  uint64_t v27 = v83;
  unint64_t v31 = v88;
LABEL_16:
  if (*(unsigned char *)(v19 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sessionVerified))
  {
    swift_beginAccess();
    unint64_t v72 = v91 | 0x8000000000000000;
    sub_1000EB8CC(0xD000000000000017, v91 | 0x8000000000000000);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_100028250(1284, 0xD000000000000070, v90 | 0x8000000000000000, v92, 0xD000000000000017, v72, 0, 0xE000000000000000);
    sub_10000A5B8(v32, v31);
    sub_10000A5B8(v27, v97);
    return sub_100061B48((uint64_t *)v108);
  }
  else
  {
    sub_100061734();
    swift_allocError();
    unsigned char *v73 = 1;
    swift_willThrow();
    sub_10000A5B8(v32, v31);
    sub_10000A5B8(v27, v97);
    return sub_100061B48((uint64_t *)v108);
  }
}

uint64_t sub_1000D9360(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  _StringGuts.grow(_:)(33);
  v6._uint64_t countAndFlagsBits = 0x6E206C6169726553;
  v6._object = (void *)0xEF28207265626D75;
  String.append(_:)(v6);
  long long v9 = *(_OWORD *)(a1 + 32);
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v2);
  sub_100061900();
  DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v7._object = (void *)0x8000000100157060;
  v7._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v7);
  return v11;
}

uint64_t sub_1000D94FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v16 = (void *)result;
    sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
    uint64_t v23 = static OS_dispatch_queue.main.getter();
    uint64_t v17 = (void *)swift_allocObject();
    void v17[2] = a2;
    v17[3] = a1;
    v17[4] = v16;
    aBlock[4] = v24;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021CDC;
    aBlock[3] = v25;
    uint64_t v18 = _Block_copy(aBlock);
    swift_errorRetain();
    id v19 = a1;
    id v20 = v16;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000F4FF8((unint64_t *)&qword_1001C8320, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100009A0C((uint64_t *)&unk_1001C9440);
    sub_10002BAB8((unint64_t *)&qword_1001C8330, (uint64_t *)&unk_1001C9440);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v21 = (void *)v23;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v26);
  }
  return result;
}

uint64_t sub_1000D9818(uint64_t a1, void *a2, uint64_t a3)
{
  if (a1) {
    os_log_type_t v6 = static os_log_type_t.error.getter();
  }
  else {
    os_log_type_t v6 = static os_log_type_t.default.getter();
  }
  os_log_type_t v7 = v6;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100012C4C(v8, (uint64_t)qword_1001CBA60);
  id v9 = a2;
  swift_errorRetain();
  id v10 = v9;
  swift_errorRetain();
  uint64_t v11 = Logger.logObject.getter();
  if (os_log_type_enabled(v11, v7))
  {
    uint64_t v44 = a3;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = (void *)swift_slowAlloc();
    unint64_t v46 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412546;
    if (a2)
    {
      v45[0] = (uint64_t)v10;
      id v14 = v10;
    }
    else
    {
      v45[0] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v13 = a2;

    *(_WORD *)(v12 + 12) = 2080;
    if (a1)
    {
      swift_getErrorValue();
      unint64_t v21 = Error.localizedDescription.getter();
      unint64_t v23 = v22;
    }
    else
    {
      v45[0] = 0;
      v45[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v21 = 0xD000000000000015;
      unint64_t v23 = 0x8000000100154E70;
    }
    v45[0] = sub_100025CA0(v21, v23, (uint64_t *)&v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v7, "verifyPairing %@ completion, error: %s", (uint8_t *)v12, 0x16u);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a3 = v44;
    if (!a1)
    {
LABEL_19:
      uint64_t v24 = v10;
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v29 = a2;
        unint64_t v30 = (void *)v28;
        *(_DWORD *)uint64_t v27 = 138412290;
        unint64_t v31 = v29;
        if (v29)
        {
          v45[0] = (uint64_t)v24;
          uint64_t v32 = v24;
        }
        else
        {
          v45[0] = 0;
        }
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v30 = v31;

        _os_log_impl((void *)&_mh_execute_header, v25, v26, "verifyPairing %@ success", v27, 0xCu);
        sub_100009A0C(&qword_1001C9410);
        swift_arrayDestroy();
        a2 = v31;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v25 = v24;
      }

      uint64_t v41 = *(void **)(a3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
      *(void *)(a3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session) = a2;
      unint64_t v42 = v24;

      *(unsigned char *)(a3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sessionVerified) = 1;
      return sub_1000C6930(v43);
    }
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    if (!a1) {
      goto LABEL_19;
    }
  }
  v45[0] = a1;
  swift_errorRetain();
  swift_errorRetain();
  sub_100009A0C(&qword_1001CBC30);
  type metadata accessor for SPPairingSessionError(0);
  if (swift_dynamicCast())
  {
    uint64_t v15 = v46;
    sub_1000DA50C((uint64_t)v46);
  }
  else
  {
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      v45[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      swift_getErrorValue();
      uint64_t v19 = Error.localizedDescription.getter();
      unint64_t v46 = (void *)sub_100025CA0(v19, v20, v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "verifyPairing error %s failed decode as NSError", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    id v33 = [self mainBundle];
    NSString v34 = String._bridgeToObjectiveC()();
    NSString v35 = String._bridgeToObjectiveC()();
    id v36 = sub_100138304(v33, v34, v35);

    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v39 = v38;

    swift_errorRetain();
    sub_1000D9F08(v37, v39, a1, 0, 0);
    swift_errorRelease();
    swift_bridgeObjectRelease();
  }
  return swift_errorRelease();
}

void sub_1000D9F08(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((v5[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_shownError] & 1) == 0)
  {
    v5[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_shownError] = 1;
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100012C4C(v13, (uint64_t)qword_1001CBA60);
    swift_bridgeObjectRetain();
    swift_errorRetain();
    id v14 = v5;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v15 = v14;
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = a1;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315650;
      swift_bridgeObjectRetain();
      v42[0] = sub_100025CA0(v18, a2, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v19 + 12) = 2080;
      if (a3)
      {
        swift_getErrorValue();
        unint64_t v20 = Error.localizedDescription.getter();
        unint64_t v22 = v21;
      }
      else
      {
        v42[0] = 0;
        v42[1] = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v22 = 0x8000000100154E70;
        unint64_t v20 = 0xD000000000000015;
      }
      v42[0] = sub_100025CA0(v20, v22, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v19 + 22) = 2080;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v23 = Set.description.getter();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      sub_100025CA0(v23, v25, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "showError reason: %s, error: %s\nThe following operations were in-flight at the time of error, and have not finished:\n%s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      a1 = v18;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    sub_1000C72CC(0);
    uint64_t v26 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_errorVC;
    uint64_t v27 = *(void **)&v15[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_errorVC];
    uint64_t v28 = v27;
    id v29 = v27;
    if (!v27)
    {
      id v30 = objc_allocWithZone((Class)type metadata accessor for AirTagErrorViewController());
      unint64_t v31 = v15;
      id v29 = [v30 init];
      swift_unknownObjectWeakAssign();

      uint64_t v28 = *(void **)&v15[v26];
    }
    *(void *)&v15[v26] = v29;
    id v32 = v27;

    uint64_t v33 = *(void *)&v15[v26];
    if (v33)
    {
      NSString v34 = (uint64_t *)(v33 + OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_message);
      *NSString v34 = a1;
      v34[1] = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v35 = *(void *)&v15[v26];
      if (v35)
      {
        *(void *)(v35 + OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_error) = a3;
        swift_errorRetain();
        swift_errorRelease();
        uint64_t v36 = *(void *)&v15[v26];
        if (v36)
        {
          uint64_t v37 = (void *)(v36 + OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_errorTitle);
          void *v37 = a4;
          v37[1] = a5;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          unint64_t v38 = *(void **)&v15[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
          if (v38)
          {
            uint64_t v39 = *(void *)&v15[v26];
            if (v39)
            {
              [v38 pushViewController:v39 animated:1];
              return;
            }
            goto LABEL_27;
          }
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100012C4C(v8, (uint64_t)qword_1001CBA60);
  swift_bridgeObjectRetain_n();
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    v42[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_100025CA0(a1, a2, v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Already showing error, dropping message: %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1000DA50C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100009A0C(&qword_1001C7620);
  __chkstk_darwin(v4 - 8);
  os_log_type_t v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = a1;
  type metadata accessor for SPPairingSessionError(0);
  sub_1000F4FF8(&qword_1001C73D0, type metadata accessor for SPPairingSessionError);
  _BridgedStoredNSError.code.getter();
  switch(v80)
  {
    case 17:
      unint64_t v22 = self;
      id v23 = [v22 mainBundle];
      NSString v24 = String._bridgeToObjectiveC()();
      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = sub_100138304(v23, v24, v25);

      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v27;

      id v28 = [v22 mainBundle];
      NSString v29 = String._bridgeToObjectiveC()();
      NSString v30 = String._bridgeToObjectiveC()();
      id v31 = sub_100138304(v28, v29, v30);

      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v32;

      goto LABEL_3;
    case 18:
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_100012C4C(v33, (uint64_t)qword_1001CBA60);
      NSString v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v79 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 136315138;
        uint64_t v77 = (uint64_t)(v36 + 4);
        id v37 = [self mainBundle];
        NSString v38 = String._bridgeToObjectiveC()();
        NSString v39 = String._bridgeToObjectiveC()();
        id v40 = sub_100138304(v37, v38, v39);

        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v43 = v42;

        uint64_t v78 = sub_100025CA0(v41, v43, &v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s", v36, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      sub_1000DEEEC();
      break;
    case 20:
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      uint64_t v44 = type metadata accessor for Logger();
      sub_100012C4C(v44, (uint64_t)qword_1001CBA60);
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        uint64_t v77 = swift_slowAlloc();
        uint64_t v79 = v77;
        *(_DWORD *)uint64_t v47 = 136315138;
        Class v76 = v47 + 4;
        id v48 = [self mainBundle];
        NSString v49 = String._bridgeToObjectiveC()();
        NSString v50 = String._bridgeToObjectiveC()();
        id v51 = sub_100138304(v48, v49, v50);

        uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v54 = v53;

        uint64_t v78 = sub_100025CA0(v52, v54, &v79);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "%s", v47, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v55 = self;
      id v56 = [v55 mainBundle];
      NSString v57 = String._bridgeToObjectiveC()();
      NSString v58 = String._bridgeToObjectiveC()();
      id v59 = sub_100138304(v56, v57, v58);

      uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v62 = v61;

      id v63 = [v55 mainBundle];
      NSString v64 = String._bridgeToObjectiveC()();
      NSString v65 = String._bridgeToObjectiveC()();
      id v66 = sub_100138304(v63, v64, v65);

      uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v69 = v68;

      NSString v70 = String._bridgeToObjectiveC()();
      id v71 = sub_100138404(v70);

      uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v74 = v73;

      URL.init(string:)();
      sub_1000D0C54(v60, v62, v67, v69, v72, v74, 0xD000000000000010, 0x8000000100156C90, (uint64_t)v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000118F8((uint64_t)v6, &qword_1001C7620);
      break;
    default:
      id v7 = [self mainBundle];
      NSString v8 = String._bridgeToObjectiveC()();
      NSString v9 = String._bridgeToObjectiveC()();
      id v10 = sub_100138304(v7, v8, v9);

      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v12;

      uint64_t v14 = 0;
      uint64_t v15 = 0;
LABEL_3:
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_100012C4C(v16, (uint64_t)qword_1001CBA60);
      swift_bridgeObjectRetain_n();
      os_log_type_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        Class v76 = (uint8_t *)v14;
        unint64_t v20 = (uint8_t *)v19;
        uint64_t v21 = swift_slowAlloc();
        uint64_t v77 = v2;
        uint64_t v80 = v21;
        *(_DWORD *)unint64_t v20 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v79 = sub_100025CA0(v11, v13, &v80);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s", v20, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v14 = (uint64_t)v76;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1000D9F08(v11, v13, a1, v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
}

void sub_1000DB208()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for String.Encoding();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  os_log_type_t v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v7 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_inFlightOperations;
  swift_beginAccess();
  unint64_t v55 = (unint64_t)"Expect discovered c3_t4_s4 char";
  v62[7] = v7;
  sub_1000E40C0(v62, 0xD00000000000001ALL, 0x8000000100157000);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  unint64_t v52 = (unint64_t)"inViewController.swift";
  uint64_t v54 = v8;
  sub_10002821C(1289, 0xD000000000000070, 0x800000010015BE50, v8, 0xD00000000000001ALL, 0x8000000100157000, 0, 0xE000000000000000);
  NSString v9 = (uint64_t *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_100008BE0(5u);
    if (v12)
    {
      id v53 = *(id *)(*(void *)(v10 + 56) + 8 * v11);
      swift_bridgeObjectRelease();
      uint64_t v13 = v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_writeManager;
      swift_beginAccess();
      if (*(void *)(*(void *)(v13 + 8) + 16))
      {
        id v14 = v53;
        swift_bridgeObjectRetain();
        sub_100008B9C((uint64_t)v14);
        char v16 = v15;
        swift_bridgeObjectRelease();

        if (v16)
        {
LABEL_23:
          uint64_t v40 = *(void *)(v13 + 8);
          if (*(void *)(v40 + 16))
          {
            id v41 = v53;
            swift_bridgeObjectRetain();
            unint64_t v42 = sub_100008B9C((uint64_t)v41);
            if (v43)
            {
              uint64_t v44 = *(void *)(v40 + 56) + 24 * v42;
              id v45 = *(id *)v44;
              unint64_t v46 = *(void *)(v44 + 8);
              uint64_t v47 = *(void *)(v44 + 16);
              sub_100009B50(*(id *)v44, v46, (void *)v47);

LABEL_29:
              uint64_t v56 = (uint64_t)v45;
              unint64_t v57 = v46;
              uint64_t v58 = v47;
              sub_100009A0C((uint64_t *)&unk_1001CBC60);
              Optional.unwrap(_:file:line:)();
              sub_1000619BC((uint64_t)v45, v46, (void *)v47);
              id v48 = v61;
              sub_10002B928(v59, v60, v61);
              swift_bridgeObjectRelease();
              if (v48)
              {
                sub_100061734();
                swift_allocError();
                *NSString v49 = 1;
                swift_willThrow();
              }
              else
              {
                swift_beginAccess();
                unint64_t v50 = v55 | 0x8000000000000000;
                sub_1000EB8CC(0xD00000000000001ALL, v55 | 0x8000000000000000);
                swift_endAccess();
                swift_bridgeObjectRelease();
                sub_100028250(1309, 0xD000000000000070, v52 | 0x8000000000000000, v54, 0xD00000000000001ALL, v50, 0, 0xE000000000000000);
              }

              return;
            }
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          id v45 = 0;
          unint64_t v46 = 0;
          uint64_t v47 = 1;
          goto LABEL_29;
        }
      }
      os_log_type_t v17 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
      v51[1] = v1;
      if (v17)
      {
        id v18 = [v17 userMessage];
        if (v18)
        {
          uint64_t v19 = v18;
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
      static String.Encoding.utf8.getter();
      uint64_t v27 = String.data(using:allowLossyConversion:)();
      unint64_t v29 = v28;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      uint64_t v56 = v27;
      unint64_t v57 = v29;
      sub_100009A0C(&qword_1001C9428);
      Optional.unwrap(_:file:line:)();
      sub_10002B7E4(v27, v29);
      NSString v30 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
      if (!v30)
      {
        __break(1u);
        return;
      }
      uint64_t v31 = v59;
      unint64_t v32 = v60;
      swift_beginAccess();
      if (*(void *)(*(void *)(v13 + 8) + 16))
      {
        id v33 = v53;
        id v34 = v30;
        sub_100008B9C((uint64_t)v33);
        if (v35)
        {
LABEL_22:

          swift_endAccess();
          sub_10000A5B8(v31, v32);
          goto LABEL_23;
        }
      }
      else
      {
        id v36 = v30;
      }
      id v37 = v53;
      id v38 = v30;
      sub_100009B90(v31, v32);
      sub_100009B90(v31, v32);
      id v34 = v38;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v56 = *(void *)(v13 + 8);
      *(void *)(v13 + 8) = 0x8000000000000000;
      sub_1000EA0F0(v31, v32, (uint64_t)v30, v37, isUniquelyReferenced_nonNull_native);
      *(void *)(v13 + 8) = v56;

      swift_bridgeObjectRelease();
      sub_1000201EC(v37);
      sub_10000A5B8(v31, v32);
      id v33 = v34;
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  v62[0] = 0xD000000000000070;
  v62[1] = 0x800000010015BE50;
  uint64_t v59 = 1293;
  v20._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = String.hashValue.getter();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  char v22 = sub_1000E3FC4(&v59, v21);
  swift_endAccess();
  if (v22)
  {
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100012C4C(v23, (uint64_t)qword_1001CBA60);
    NSString v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      id v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "ensureUserMessageWritten - skipped", v26, 2u);
      swift_slowDealloc();
    }
  }
  swift_beginAccess();
  sub_1000EB8CC(0xD00000000000001ALL, v55 | 0x8000000000000000);
  swift_endAccess();
  swift_bridgeObjectRelease();
}

void sub_1000DB980()
{
  uint64_t v1 = type metadata accessor for String.Encoding();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v129 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_inFlightOperations;
  swift_beginAccess();
  Swift::String v136 = "Expect discovered baaCert char";
  sub_1000E40C0((Swift::Int *)&v152, 0xD00000000000001BLL, 0x8000000100156EF0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v137 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(1314, 0xD000000000000070, 0x800000010015BE50, v137, 0xD00000000000001BLL, 0x8000000100156EF0, 0, 0xE000000000000000);
  id v152 = *(id *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
  id v6 = v152;
  sub_100009A0C(&qword_1001C8A20);
  Optional.unwrap(_:file:line:)();

  Swift::Int v7 = v154;
  uint64_t v148 = v0;
  uint64_t v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = *(void *)(*v8 + 16);
  unint64_t v135 = (unint64_t)"inViewController.swift";
  if (v10)
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_100008BE0(0xDu);
    if (v12)
    {
      uint64_t v13 = *(void **)(*(void *)(v9 + 56) + 8 * v11);
      id v14 = v13;
    }
    else
    {
      uint64_t v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v149 = (uint64_t)v13;
  sub_100009A0C((uint64_t *)&unk_1001CBC50);
  Optional.unwrap(_:file:line:)();

  id v144 = v152;
  uint64_t v15 = *v8;
  if (*(void *)(*v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_100008BE0(6u);
    if (v17)
    {
      id v18 = *(void **)(*(void *)(v15 + 56) + 8 * v16);
      id v19 = v18;
    }
    else
    {
      id v18 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v18 = 0;
  }
  uint64_t v149 = (uint64_t)v18;
  Optional.unwrap(_:file:line:)();

  id v147 = v152;
  uint64_t v20 = *v8;
  if (*(void *)(*v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_100008BE0(7u);
    if (v22)
    {
      uint64_t v23 = *(void **)(*(void *)(v20 + 56) + 8 * v21);
      id v24 = v23;
    }
    else
    {
      uint64_t v23 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t v149 = (uint64_t)v23;
  Optional.unwrap(_:file:line:)();

  id v146 = v152;
  uint64_t v25 = *v8;
  if (*(void *)(*v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_100008BE0(8u);
    if (v27)
    {
      unint64_t v28 = *(void **)(*(void *)(v25 + 56) + 8 * v26);
      id v29 = v28;
    }
    else
    {
      unint64_t v28 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v28 = 0;
  }
  uint64_t v149 = (uint64_t)v28;
  Optional.unwrap(_:file:line:)();

  id v145 = v152;
  uint64_t v30 = *v8;
  if (*(void *)(*v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_100008BE0(9u);
    if (v32)
    {
      id v33 = *(void **)(*(void *)(v30 + 56) + 8 * v31);
      id v34 = v33;
    }
    else
    {
      id v33 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v33 = 0;
  }
  uint64_t v149 = (uint64_t)v33;
  Optional.unwrap(_:file:line:)();

  id v134 = v152;
  id v35 = [v7 collaborativeKeyC2];
  if (v35)
  {
    id v36 = v35;
    uint64_t v37 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v39 = v38;
  }
  else
  {
    uint64_t v37 = 0;
    unint64_t v39 = 0xF000000000000000;
  }
  uint64_t v149 = v37;
  unint64_t v150 = v39;
  uint64_t v40 = sub_100009A0C(&qword_1001C9428);
  Optional.unwrap(_:file:line:)();
  sub_10002B7E4(v37, v39);
  unint64_t v140 = v153;
  uint64_t v141 = (uint64_t)v152;
  id v41 = [v7 serverSeed];
  if (v41)
  {
    unint64_t v42 = v41;
    uint64_t v43 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v45 = v44;
  }
  else
  {
    uint64_t v43 = 0;
    unint64_t v45 = 0xF000000000000000;
  }
  uint64_t v149 = v43;
  unint64_t v150 = v45;
  Optional.unwrap(_:file:line:)();
  sub_10002B7E4(v43, v45);
  unint64_t v142 = v153;
  uint64_t v143 = (uint64_t)v152;
  id v46 = [v7 serverSignature];
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v48 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v50 = v49;
  }
  else
  {
    uint64_t v48 = 0;
    unint64_t v50 = 0xF000000000000000;
  }
  uint64_t v149 = v48;
  unint64_t v150 = v50;
  Optional.unwrap(_:file:line:)();
  sub_10002B7E4(v48, v50);
  uint64_t v139 = (uint64_t)v152;
  unint64_t v138 = v153;
  id v51 = [v7 maskedAppleID];
  if (v51)
  {
    unint64_t v52 = v51;
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v55 = v54;
  }
  else
  {
    uint64_t v53 = 0;
    unint64_t v55 = 0;
  }
  uint64_t v149 = v53;
  unint64_t v150 = v55;
  sub_100009A0C(&qword_1001C9420);
  Optional.unwrap(_:file:line:)();
  swift_bridgeObjectRelease();
  uint64_t v56 = v148 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_writeManager;
  swift_beginAccess();
  if (!*(void *)(*(void *)(v56 + 8) + 16)) {
    goto LABEL_47;
  }
  uint64_t v133 = v40;
  unint64_t v57 = v4;
  uint64_t v58 = v2;
  uint64_t v59 = v1;
  unint64_t v60 = v7;
  swift_bridgeObjectRetain();
  id v61 = v147;
  sub_100008B9C((uint64_t)v61);
  if ((v62 & 1) == 0)
  {
    swift_bridgeObjectRelease();

    Swift::Int v7 = v60;
    uint64_t v1 = v59;
    uint64_t v2 = v58;
    uint64_t v4 = v57;
LABEL_47:
    Swift::String v132 = v7;
    uint64_t v133 = v5;
    static String.Encoding.utf8.getter();
    uint64_t v68 = String.data(using:allowLossyConversion:)();
    unint64_t v70 = v69;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v151[0] = v68;
    v151[1] = v70;
    Optional.unwrap(_:file:line:)();
    sub_10002B7E4(v68, v70);
    uint64_t v71 = v149;
    unint64_t v72 = v150;
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v73 = type metadata accessor for Logger();
    sub_100012C4C(v73, (uint64_t)qword_1001CBA60);
    unint64_t v74 = v72 >> 62;
    sub_100009B90(v71, v72);
    sub_100009B90(v71, v72);
    uint64_t v75 = Logger.logObject.getter();
    os_log_type_t v76 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v75, v76))
    {
      unint64_t v130 = v72 >> 62;
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      v151[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 136315138;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      id v79 = (id)SFHexStringForData();

      if (v79)
      {
        unint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v82 = v81;
      }
      else
      {
        uint64_t v149 = 0;
        unint64_t v150 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        unint64_t v80 = 0xD000000000000015;
        unint64_t v82 = 0x8000000100154E70;
      }
      uint64_t v149 = sub_100025CA0(v80, v82, v151);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10000A5B8(v71, v72);
      sub_10000A5B8(v71, v72);
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "writingAppleID: %s", v77, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v83 = v148;
      LODWORD(v74) = v130;
    }
    else
    {
      sub_10000A5B8(v71, v72);
      sub_10000A5B8(v71, v72);

      uint64_t v83 = v148;
    }
    switch((int)v74)
    {
      case 1:
        LODWORD(v84) = HIDWORD(v71) - v71;
        if (__OFSUB__(HIDWORD(v71), v71)) {
          goto LABEL_87;
        }
        uint64_t v84 = (int)v84;
LABEL_60:
        if (v84 > 30)
        {
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          __break(1u);
        }
        else
        {
LABEL_61:
          uint64_t v88 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph;
          id v89 = *(void **)(v83 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
          if (v89)
          {
            [v89 setNotifyValue:1 forCharacteristic:v144];
            unint64_t v90 = *(void **)(v83 + v88);
            if (v90)
            {
              swift_beginAccess();
              uint64_t v91 = *(void *)(*(void *)(v56 + 8) + 16);
              uint64_t v131 = v71;
              if (v91)
              {
                id v92 = v147;
                id v93 = v90;
                sub_100008B9C((uint64_t)v92);
                if (v94) {
                  goto LABEL_68;
                }
              }
              else
              {
                id v95 = v90;
              }
              id v96 = v147;
              id v97 = v90;
              unint64_t v98 = v142;
              uint64_t v99 = v143;
              sub_100009B90(v143, v142);
              sub_100009B90(v99, v98);
              id v93 = v97;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v151[0] = *(void *)(v56 + 8);
              *(void *)(v56 + 8) = 0x8000000000000000;
              sub_1000EA0F0(v99, v98, (uint64_t)v90, v96, isUniquelyReferenced_nonNull_native);
              *(void *)(v56 + 8) = v151[0];

              swift_bridgeObjectRelease();
              sub_1000201EC(v96);
              sub_10000A5B8(v99, v98);
              id v92 = v93;
LABEL_68:

              swift_endAccess();
              unint64_t v101 = *(void **)(v83 + v88);
              if (v101)
              {
                swift_beginAccess();
                uint64_t v102 = *(void *)(*(void *)(v56 + 8) + 16);
                id v103 = v101;
                if (v102)
                {
                  id v104 = v146;
                  sub_100008B9C((uint64_t)v104);
                  if (v105) {
                    goto LABEL_73;
                  }
                }
                id v106 = v103;
                id v107 = v146;
                unint64_t v108 = v140;
                uint64_t v109 = v141;
                sub_100009B90(v141, v140);
                sub_100009B90(v109, v108);
                id v103 = v106;
                char v110 = swift_isUniquelyReferenced_nonNull_native();
                v151[0] = *(void *)(v56 + 8);
                *(void *)(v56 + 8) = 0x8000000000000000;
                sub_1000EA0F0(v109, v108, (uint64_t)v101, v107, v110);
                *(void *)(v56 + 8) = v151[0];

                swift_bridgeObjectRelease();
                sub_1000201EC(v107);
                sub_10000A5B8(v109, v108);
                id v104 = v103;
LABEL_73:

                swift_endAccess();
                long long v111 = *(void **)(v148 + v88);
                uint64_t v66 = v139;
                unint64_t v67 = v138;
                if (v111)
                {
                  swift_beginAccess();
                  uint64_t v112 = *(void *)(*(void *)(v56 + 8) + 16);
                  id v113 = v111;
                  if (v112)
                  {
                    id v114 = v145;
                    sub_100008B9C((uint64_t)v114);
                    if (v115) {
                      goto LABEL_78;
                    }
                  }
                  id v116 = v113;
                  id v117 = v145;
                  sub_100009B90(v66, v67);
                  sub_100009B90(v66, v67);
                  id v113 = v116;
                  char v118 = swift_isUniquelyReferenced_nonNull_native();
                  v151[0] = *(void *)(v56 + 8);
                  *(void *)(v56 + 8) = 0x8000000000000000;
                  sub_1000EA0F0(v66, v67, (uint64_t)v111, v117, v118);
                  *(void *)(v56 + 8) = v151[0];

                  swift_bridgeObjectRelease();
                  sub_1000201EC(v117);
                  sub_10000A5B8(v66, v67);
                  id v114 = v113;
LABEL_78:

                  swift_endAccess();
                  id v119 = *(void **)(v148 + v88);
                  if (v119)
                  {
                    swift_beginAccess();
                    uint64_t v120 = *(void *)(*(void *)(v56 + 8) + 16);
                    id v121 = v119;
                    id v65 = v134;
                    if (v120)
                    {
                      id v122 = v134;
                      sub_100008B9C((uint64_t)v122);
                      if (v123)
                      {
                        uint64_t v124 = v131;
LABEL_84:

                        swift_endAccess();
                        sub_10000A5B8(v124, v72);
                        uint64_t v63 = v137;
                        NSString v64 = v136;
                        unint64_t v60 = v132;
                        goto LABEL_85;
                      }
                    }
                    uint64_t v124 = v131;
                    sub_100009B90(v131, v72);
                    id v125 = v121;
                    id v126 = v65;
                    sub_100009B90(v124, v72);
                    id v121 = v125;
                    char v127 = swift_isUniquelyReferenced_nonNull_native();
                    v151[0] = *(void *)(v56 + 8);
                    *(void *)(v56 + 8) = 0x8000000000000000;
                    sub_1000EA0F0(v124, v72, (uint64_t)v119, v126, v127);
                    *(void *)(v56 + 8) = v151[0];

                    swift_bridgeObjectRelease();
                    sub_1000201EC(v126);
                    sub_10000A5B8(v124, v72);
                    id v122 = v121;
                    goto LABEL_84;
                  }
LABEL_93:
                  __break(1u);
                  JUMPOUT(0x1000DC9E8);
                }
LABEL_92:
                __break(1u);
                goto LABEL_93;
              }
LABEL_91:
              __break(1u);
              goto LABEL_92;
            }
LABEL_90:
            __break(1u);
            goto LABEL_91;
          }
        }
        __break(1u);
        goto LABEL_90;
      case 2:
        uint64_t v86 = *(void *)(v71 + 16);
        uint64_t v85 = *(void *)(v71 + 24);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v84 = v85 - v86;
        if (!v87) {
          goto LABEL_60;
        }
        goto LABEL_88;
      case 3:
        goto LABEL_61;
      default:
        uint64_t v84 = BYTE6(v72);
        goto LABEL_60;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v63 = v137;
  NSString v64 = v136;
  id v65 = v134;
  uint64_t v66 = v139;
  unint64_t v67 = v138;
LABEL_85:
  swift_beginAccess();
  unint64_t v128 = (unint64_t)v64 | 0x8000000000000000;
  sub_1000EB8CC(0xD00000000000001BLL, v128);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_100028250(1348, 0xD000000000000070, v135 | 0x8000000000000000, v63, 0xD00000000000001BLL, v128, 0, 0xE000000000000000);
  sub_10000A5B8(v66, v67);
  sub_10000A5B8(v143, v142);
  sub_10000A5B8(v141, v140);
}

void sub_1000DC9F8()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  sub_1000E40C0(&v55, 0xD000000000000014, 0x8000000100156E90);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(1353, 0xD000000000000070, 0x800000010015BE50, v47, 0xD000000000000014, 0x8000000100156E90, 0, 0xE000000000000000);
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (*(void *)(*v2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_100008BE0(0xAu);
    if (v5)
    {
      id v6 = *(void **)(*(void *)(v3 + 56) + 8 * v4);
      id v7 = v6;
    }
    else
    {
      id v6 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  uint64_t v51 = (uint64_t)v6;
  sub_100009A0C((uint64_t *)&unk_1001CBC50);
  Optional.unwrap(_:file:line:)();

  uint64_t v8 = (void *)v55;
  uint64_t v9 = v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_writeManager;
  swift_beginAccess();
  if (!*(void *)(*(void *)(v9 + 8) + 16)
    || (swift_bridgeObjectRetain(),
        id v10 = v8,
        sub_100008B9C((uint64_t)v10),
        char v12 = v11,
        swift_bridgeObjectRelease(),
        v10,
        (v12 & 1) == 0))
  {
    unint64_t v52 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_session);
    uint64_t v13 = v52;
    sub_100009A0C(&qword_1001C8A20);
    Optional.unwrap(_:file:line:)();

    id v14 = v56;
    id v15 = [v56 baaLeaftCert];

    if (v15)
    {
      uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v18 = v17;
    }
    else
    {
      uint64_t v16 = 0;
      unint64_t v18 = 0xF000000000000000;
    }
    unsigned __int16 v49 = v16;
    sub_100009A0C(&qword_1001C9428);
    Optional.unwrap(_:file:line:)();
    sub_10002B7E4(v16, v18);
    unint64_t v19 = v53;
    uint64_t v48 = (uint64_t)v52;
    switch(v53 >> 62)
    {
      case 1uLL:
        if (!__OFSUB__(HIDWORD(v52), v52)) {
          goto LABEL_16;
        }
        goto LABEL_39;
      case 2uLL:
        if (!__OFSUB__(v52[3], v52[2])) {
          goto LABEL_16;
        }
        goto LABEL_40;
      default:
LABEL_16:
        sub_100009A0C(&qword_1001C94A0);
        Optional.unwrap(_:file:line:)();
        if (qword_1001C7120 != -1) {
          swift_once();
        }
        uint64_t v20 = type metadata accessor for Logger();
        sub_100012C4C(v20, (uint64_t)qword_1001CBA60);
        unint64_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 33554688;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "data length: %hu", v23, 6u);
          swift_slowDealloc();
        }

        unint64_t v26 = sub_1000C3168(v49, 2uLL, v24, v25);
        if (v26[2] == 2)
        {
          uint64_t v27 = sub_1000EDE7C((uint64_t)v26);
          unint64_t v29 = v28;
          swift_bridgeObjectRelease();
          uint64_t v51 = v27;
          unint64_t v53 = v29;
          sub_100009B90(v27, v29);
          sub_100009B90(v48, v19);
          sub_1000ED5C0(v48, v19);
          sub_10000A5B8(v48, v19);
          sub_10000A5B8(v27, v29);
          uint64_t v30 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
          if (v30)
          {
            swift_beginAccess();
            if (*(void *)(*(void *)(v9 + 8) + 16))
            {
              id v31 = v8;
              id v32 = v30;
              sub_100008B9C((uint64_t)v31);
              if (v33)
              {
LABEL_27:

                swift_endAccess();
                sub_10000A5B8(v51, v53);
                sub_10000A5B8(v48, v19);
                break;
              }
            }
            else
            {
              id v34 = v30;
            }
            id v35 = v8;
            id v36 = v30;
            sub_100009B90(v51, v53);
            sub_100009B90(v51, v53);
            id v32 = v36;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v50 = *(void *)(v9 + 8);
            *(void *)(v9 + 8) = 0x8000000000000000;
            sub_1000EA0F0(v51, v53, (uint64_t)v30, v35, isUniquelyReferenced_nonNull_native);
            *(void *)(v9 + 8) = v50;

            swift_bridgeObjectRelease();
            sub_1000201EC(v35);
            sub_10000A5B8(v51, v53);
            id v31 = v32;
            goto LABEL_27;
          }
        }
        else
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
        }
        __break(1u);
        JUMPOUT(0x1000DD208);
    }
  }
  uint64_t v38 = *(void *)(v9 + 8);
  if (*(void *)(v38 + 16))
  {
    id v39 = v8;
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_100008B9C((uint64_t)v39);
    if (v41)
    {
      uint64_t v42 = *(void *)(v38 + 56) + 24 * v40;
      id v43 = *(id *)v42;
      unint64_t v44 = *(void *)(v42 + 8);
      uint64_t v45 = *(void *)(v42 + 16);
      sub_100009B50(*(id *)v42, v44, (void *)v45);

      goto LABEL_34;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  id v43 = 0;
  unint64_t v44 = 0;
  uint64_t v45 = 1;
LABEL_34:
  sub_100009A0C((uint64_t *)&unk_1001CBC60);
  Optional.unwrap(_:file:line:)();
  sub_1000619BC((uint64_t)v43, v44, (void *)v45);
  sub_10002B928(v51, v53, v54);
  swift_bridgeObjectRelease();
  if (v54)
  {
    sub_100061734();
    swift_allocError();
    *id v46 = 1;
    swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    sub_1000EB8CC(0xD000000000000014, 0x8000000100156E90);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_100028250(1372, 0xD000000000000070, 0x800000010015BE50, v47, 0xD000000000000014, 0x8000000100156E90, 0, 0xE000000000000000);
  }
}

void sub_1000DD218()
{
  uint64_t v1 = type metadata accessor for Calendar();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  id v79 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v78 = (char *)&v71 - v8;
  uint64_t v9 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_inFlightOperations;
  swift_beginAccess();
  unint64_t v73 = (unint64_t)"Expect discovered c3 char";
  sub_1000E40C0(&v87, 0xD000000000000014, 0x8000000100156E30);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  unint64_t v72 = (unint64_t)"inViewController.swift";
  uint64_t v74 = v10;
  sub_10002821C(1390, 0xD000000000000070, 0x800000010015BE50, v10, 0xD000000000000014, 0x8000000100156E30, 0, 0xE000000000000000);
  uint64_t v81 = v0;
  char v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars);
  swift_beginAccess();
  uint64_t v12 = *v11;
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v75 = v9;
  uint64_t v77 = v5;
  if (v13)
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_100008BE0(0xEu);
    if (v15)
    {
      uint64_t v16 = *(void **)(*(void *)(v12 + 56) + 8 * v14);
      id v17 = v16;
    }
    else
    {
      uint64_t v16 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = 0;
  }
  v85[0] = (uint64_t)v16;
  sub_100009A0C((uint64_t *)&unk_1001CBC50);
  Optional.unwrap(_:file:line:)();

  id v88 = (id)v87;
  uint64_t v18 = v81 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_writeManager;
  swift_beginAccess();
  if (!*(void *)(*(void *)(v18 + 8) + 16)
    || (swift_bridgeObjectRetain(),
        id v19 = v88,
        sub_100008B9C((uint64_t)v19),
        char v21 = v20,
        swift_bridgeObjectRelease(),
        v19,
        (v21 & 1) == 0))
  {
    Date.init()();
    static Calendar.current.getter();
    Calendar.startOfDay(for:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    Date.timeIntervalSinceReferenceDate.getter();
    double v23 = v22;
    Date.timeIntervalSinceReferenceDate.getter();
    double v25 = v24;
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    double v26 = v23 - v25;
    uint64_t v27 = type metadata accessor for Logger();
    sub_100012C4C(v27, (uint64_t)qword_1001CBA60);
    unint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 134217984;
      *(double *)uint64_t v85 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "timeSinceMidnight: %f", v30, 0xCu);
      swift_slowDealloc();
    }

    double v31 = v26 * (double)MillisecondsPerSecond.getter();
    if ((~*(void *)&v31 & 0x7FF0000000000000) != 0)
    {
      if (v31 > -9.22337204e18)
      {
        if (v31 < 9.22337204e18)
        {
          uint64_t v32 = (uint64_t)v31;
          unint64_t v33 = (unint64_t)(uint64_t)v31 >> 32;
          BOOL v34 = v33 == 0;
          BOOL v35 = v33 != 0;
          if (!v34) {
            LODWORD(v32) = 0;
          }
          LODWORD(v85[0]) = v32;
          BYTE4(v85[0]) = v35;
          sub_100009A0C((uint64_t *)&unk_1001C9490);
          Optional.unwrap(_:file:line:)();
          uint64_t v38 = sub_1000C32B0(v82, 4uLL, v36, v37);
          swift_bridgeObjectRetain_n();
          id v39 = Logger.logObject.getter();
          os_log_type_t v40 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v39, v40))
          {
            char v41 = (uint8_t *)swift_slowAlloc();
            v85[0] = swift_slowAlloc();
            *(_DWORD *)char v41 = 136315138;
            uint64_t v71 = v41 + 4;
            swift_bridgeObjectRetain();
            uint64_t v42 = Array.description.getter();
            unint64_t v44 = v43;
            swift_bridgeObjectRelease();
            uint64_t v82 = sub_100025CA0(v42, v44, v85);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v39, v40, "reftime payload: %s", v41, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          if (v38[2] == 4)
          {
            uint64_t v45 = *(void **)(v81 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
            if (v45)
            {
              swift_beginAccess();
              if (*(void *)(*(void *)(v18 + 8) + 16))
              {
                id v46 = v88;
                id v47 = v45;
                sub_100008B9C((uint64_t)v46);
                if (v48)
                {
LABEL_28:
                  swift_bridgeObjectRelease();

                  swift_endAccess();
                  uint64_t v57 = v77;
                  uint64_t v58 = *(void (**)(char *, uint64_t))(v76 + 8);
                  v58(v79, v77);
                  v58(v78, v57);
                  goto LABEL_29;
                }
              }
              else
              {
                id v49 = v45;
              }
              uint64_t v50 = swift_bridgeObjectRetain();
              uint64_t v51 = sub_1000EDE7C(v50);
              unint64_t v53 = v52;
              swift_bridgeObjectRelease();
              id v54 = v88;
              id v55 = v45;
              sub_100009B90(v51, v53);
              id v47 = v55;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v82 = *(void *)(v18 + 8);
              *(void *)(v18 + 8) = 0x8000000000000000;
              sub_1000EA0F0(v51, v53, (uint64_t)v45, v54, isUniquelyReferenced_nonNull_native);
              *(void *)(v18 + 8) = v82;

              swift_bridgeObjectRelease();
              sub_1000201EC(v54);
              sub_10000A5B8(v51, v53);
              id v46 = v47;
              goto LABEL_28;
            }
LABEL_43:
            __break(1u);
            return;
          }
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_41;
  }
LABEL_29:
  uint64_t v59 = *(void *)(v18 + 8);
  if (!*(void *)(v59 + 16))
  {
    swift_bridgeObjectRetain();
LABEL_34:
    id v64 = 0;
    unint64_t v65 = 0;
    uint64_t v66 = 1;
    goto LABEL_35;
  }
  id v60 = v88;
  swift_bridgeObjectRetain();
  unint64_t v61 = sub_100008B9C((uint64_t)v60);
  if ((v62 & 1) == 0)
  {

    goto LABEL_34;
  }
  uint64_t v63 = *(void *)(v59 + 56) + 24 * v61;
  id v64 = *(id *)v63;
  unint64_t v65 = *(void *)(v63 + 8);
  uint64_t v66 = *(void *)(v63 + 16);
  sub_100009B50(*(id *)v63, v65, (void *)v66);

LABEL_35:
  uint64_t v82 = (uint64_t)v64;
  unint64_t v83 = v65;
  uint64_t v84 = v66;
  sub_100009A0C((uint64_t *)&unk_1001CBC60);
  Optional.unwrap(_:file:line:)();
  sub_1000619BC((uint64_t)v64, v65, (void *)v66);
  unint64_t v67 = v86;
  sub_10002B928(v85[0], v85[1], v86);
  swift_bridgeObjectRelease();
  if (v67)
  {
    sub_100061734();
    uint64_t v68 = swift_allocError();
    *unint64_t v69 = 1;
    uint64_t v80 = v68;
    swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    unint64_t v70 = v73 | 0x8000000000000000;
    sub_1000EB8CC(0xD000000000000014, v73 | 0x8000000000000000);
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_100028250(1410, 0xD000000000000070, v72 | 0x8000000000000000, v74, 0xD000000000000014, v70, 0, 0xE000000000000000);
  }
}

void *sub_1000DDBC8()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  sub_1000E40C0(&v22, 0xD00000000000001DLL, 0x8000000100156DD0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(1415, 0xD000000000000070, 0x800000010015BE50, v2, 0xD00000000000001DLL, 0x8000000100156DD0, 0, 0xE000000000000000);
  uint64_t v3 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_readValues;
  swift_beginAccess();
  if (!*(void *)(*(void *)v3 + 16)
    || (swift_bridgeObjectRetain(), sub_100008BE0(0xDu), char v5 = v4, swift_bridgeObjectRelease(), (v5 & 1) == 0))
  {
    sub_100061734();
    swift_allocError();
    *uint64_t v12 = 1;
    return (void *)swift_willThrow();
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentSecondReadRequest)) {
    goto LABEL_20;
  }
  *(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_sentSecondReadRequest) = 1;
  uint64_t v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*(void *)(*v6 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_100008BE0(0xBu);
    if (v9)
    {
      uint64_t v10 = *(void **)(*(void *)(v7 + 56) + 8 * v8);
      id v11 = v10;
    }
    else
    {
      uint64_t v10 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  double v23 = v10;
  sub_100009A0C((uint64_t *)&unk_1001CBC50);
  Optional.unwrap(_:file:line:)();

  uint64_t v14 = *v6;
  if (*(void *)(*v6 + 16))
  {
    char v15 = v21;
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_100008BE0(0xCu);
    if (v17)
    {
      uint64_t v18 = *(void **)(*(void *)(v14 + 56) + 8 * v16);
      id v19 = v18;
    }
    else
    {
      uint64_t v18 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = v21;
    uint64_t v18 = 0;
  }
  double v23 = v18;
  Optional.unwrap(_:file:line:)();

  uint64_t v20 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph;
  uint64_t result = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
  if (result)
  {
    [result readValueForCharacteristic:v15];
    uint64_t result = *(void **)(v1 + v20);
    if (result)
    {
      [result readValueForCharacteristic:v21];

LABEL_20:
      swift_beginAccess();
      sub_1000EB8CC(0xD00000000000001DLL, 0x8000000100156DD0);
      swift_endAccess();
      swift_bridgeObjectRelease();
      return (void *)sub_100028250(1426, 0xD000000000000070, 0x800000010015BE50, v2, 0xD00000000000001DLL, 0x8000000100156DD0, 0, 0xE000000000000000);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000DDF5C()
{
  swift_beginAccess();
  sub_1000E40C0(&v9, 0xD000000000000016, 0x8000000100156DB0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(1431, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000016, 0x8000000100156DB0, 0, 0xE000000000000000);
  uint64_t v2 = v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_readValues;
  swift_beginAccess();
  if (!*(void *)(*(void *)v2 + 16)) {
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  sub_100008BE0(0xBu);
  char v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    goto LABEL_6;
  }
  if (*(void *)(*(void *)v2 + 16)
    && (swift_bridgeObjectRetain(), sub_100008BE0(0xCu), char v6 = v5, swift_bridgeObjectRelease(), (v6 & 1) != 0))
  {
    swift_beginAccess();
    sub_1000EB8CC(0xD000000000000016, 0x8000000100156DB0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_100028250(1436, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000016, 0x8000000100156DB0, 0, 0xE000000000000000);
  }
  else
  {
LABEL_6:
    sub_100061734();
    swift_allocError();
    *unint64_t v8 = 1;
    return swift_willThrow();
  }
}

void sub_1000DE164(char a1)
{
  uint64_t v2 = v1;
  uint64_t v52 = 0x3A73736563637573;
  unint64_t v53 = 0xE900000000000020;
  BOOL v4 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v5 = 1702195828;
  }
  else {
    uint64_t v5 = 0x65736C6166;
  }
  if (v4) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  uint64_t v9 = v52;
  uint64_t v8 = v53;
  swift_beginAccess();
  unint64_t v54 = (unint64_t)"ensureCleanedUp(success:)";
  sub_1000E40C0(v50, 0xD00000000000001ELL, 0x80000001001573B0);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  swift_bridgeObjectRetain();
  sub_10002821C(1441, 0xD000000000000070, 0x800000010015BE50, v10, 0xD00000000000001ELL, 0x80000001001573B0, v9, v8);
  swift_bridgeObjectRelease_n();
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairState + 8) == 1
    && *(void *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairState) == 4)
  {
    uint64_t v47 = v10;
    id v11 = (uint64_t *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars);
    swift_beginAccess();
    uint64_t v12 = *v11;
    if (*(void *)(v12 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_100008BE0(0xFu);
      if (v14)
      {
        char v15 = *(void **)(*(void *)(v12 + 56) + 8 * v13);
        id v16 = v15;
      }
      else
      {
        char v15 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v15 = 0;
    }
    sub_100009A0C((uint64_t *)&unk_1001CBC50);
    Optional.unwrap(_:file:line:)();

    char v21 = *(void **)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_periph);
    if (!v21)
    {
      __break(1u);
      return;
    }
    Swift::Int v22 = (void *)v50[0];
    uint64_t v23 = v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_writeManager;
    swift_beginAccess();
    uint64_t v24 = *(void *)(*(void *)(v23 + 8) + 16);
    id v25 = v21;
    char v48 = v22;
    if (v24)
    {
      id v26 = v22;
      sub_100008B9C((uint64_t)v26);
      if (v27) {
        goto LABEL_25;
      }

      Swift::Int v22 = v48;
    }
    sub_100009A0C(&qword_1001C8348);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_10017C370;
    *(unsigned char *)(v28 + 32) = a1 & 1;
    uint64_t v29 = sub_1000EDE7C(v28);
    uint64_t v30 = v22;
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    id v33 = v25;
    id v34 = v30;
    sub_100009B90(v29, v32);
    id v25 = v33;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = *(void *)(v23 + 8);
    *(void *)(v23 + 8) = 0x8000000000000000;
    sub_1000EA0F0(v29, v32, (uint64_t)v21, v34, isUniquelyReferenced_nonNull_native);
    *(void *)(v23 + 8) = v49;

    swift_bridgeObjectRelease();
    sub_1000201EC(v34);
    sub_10000A5B8(v29, v32);
    id v26 = v25;
LABEL_25:

    swift_endAccess();
    uint64_t v36 = *(void *)(v23 + 8);
    if (*(void *)(v36 + 16))
    {
      id v37 = v48;
      swift_bridgeObjectRetain();
      unint64_t v38 = sub_100008B9C((uint64_t)v37);
      if (v39)
      {
        uint64_t v40 = *(void *)(v36 + 56) + 24 * v38;
        id v41 = *(id *)v40;
        unint64_t v42 = *(void *)(v40 + 8);
        uint64_t v43 = *(void *)(v40 + 16);
        sub_100009B50(*(id *)v40, v42, (void *)v43);

LABEL_31:
        sub_100009A0C((uint64_t *)&unk_1001CBC60);
        Optional.unwrap(_:file:line:)();
        sub_1000619BC((uint64_t)v41, v42, (void *)v43);
        unint64_t v44 = v51;
        sub_10002B928(v50[0], v50[1], v51);
        swift_bridgeObjectRelease();
        if (v44)
        {
          sub_100061734();
          swift_allocError();
          *uint64_t v45 = 1;
          swift_willThrow();
        }
        else
        {
          swift_beginAccess();
          unint64_t v46 = v54 | 0x8000000000000000;
          sub_1000EB8CC(0xD00000000000001ELL, v54 | 0x8000000000000000);
          swift_endAccess();
          swift_bridgeObjectRelease();
          sub_100028250(1456, 0xD000000000000070, 0x800000010015BE50, v47, 0xD00000000000001ELL, v46, 0, 0xE000000000000000);
        }

        return;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    id v41 = 0;
    unint64_t v42 = 0;
    uint64_t v43 = 1;
    goto LABEL_31;
  }
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100012C4C(v17, (uint64_t)qword_1001CBA60);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Never paired. Skip receipt write.", v20, 2u);
    swift_slowDealloc();
  }
}

void sub_1000DE768(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
}

void sub_1000DE774(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
}

void sub_1000DE780(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, const char *a5)
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100012C4C(v10, (uint64_t)qword_1001CBA60);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_bridgeObjectRetain();
    sub_100025CA0(a1, a2, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_100025CA0(a3, a4, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a5, (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_1000DE994(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100012C4C(v1, (uint64_t)qword_1001CBA60);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      char v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)char v3 = 136315138;
      swift_getErrorValue();
      uint64_t v4 = Error.localizedDescription.getter();
      sub_100025CA0(v4, v5, &v7);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Error in invalidatePairing: %s", v3, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

id sub_1000DEBA0()
{
  uint64_t v1 = v0;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
  char v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "showDone", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_doneVC;
  uint64_t v7 = *(char **)&v1[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_doneVC];
  uint64_t v8 = v7;
  uint64_t v9 = v7;
  if (!v7)
  {
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_mapViewController];
    id v11 = objc_allocWithZone((Class)type metadata accessor for AirTagDoneViewController());
    id v12 = v10;
    uint64_t v13 = v1;
    uint64_t v9 = (char *)[v11 init];
    swift_unknownObjectWeakAssign();

    uint64_t v14 = *(void **)&v9[OBJC_IVAR____TtC18SharingViewService24AirTagDoneViewController_mapViewController];
    *(void *)&v9[OBJC_IVAR____TtC18SharingViewService24AirTagDoneViewController_mapViewController] = v10;

    uint64_t v8 = *(void **)&v1[v6];
  }
  *(void *)&v1[v6] = v9;
  char v15 = v7;

  id result = *(id *)&v1[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (!*(void *)&v1[v6])
  {
LABEL_13:
    __break(1u);
    return result;
  }

  return [result pushViewController:animated:];
}

uint64_t sub_1000DED58()
{
  swift_beginAccess();
  sub_1000E40C0(&v4, 0xD000000000000016, 0x8000000100157370);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_om);
  sub_10002821C(1536, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000016, 0x8000000100157370, 0, 0xE000000000000000);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_needsMulti))
  {
    sub_100061734();
    swift_allocError();
    unsigned char *v2 = 1;
    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    sub_1000EB8CC(0xD000000000000016, 0x8000000100157370);
    swift_endAccess();
    swift_bridgeObjectRelease();
    return sub_100028250(1538, 0xD000000000000070, 0x800000010015BE50, v1, 0xD000000000000016, 0x8000000100157370, 0, 0xE000000000000000);
  }
}

void sub_1000DEEEC()
{
  uint64_t v1 = v0;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
  char v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "pairLocked", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairLockedVC;
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairLockedVC];
  uint64_t v8 = v7;
  id v9 = v7;
  if (!v7)
  {
    id v10 = objc_allocWithZone((Class)type metadata accessor for AirTagPairLockedViewController());
    id v11 = v1;
    id v9 = [v10 init];
    swift_unknownObjectWeakAssign();

    uint64_t v8 = *(void **)&v1[v6];
  }
  *(void *)&v1[v6] = v9;
  id v12 = v7;

  uint64_t v13 = *(void **)&v1[v6];
  if (!v13)
  {
    __break(1u);
    goto LABEL_12;
  }
  id v14 = v13;
  sub_100073BF8(&v22);
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  sub_1000B8B9C((uint64_t)&v22);
  id v19 = [v14 dismissalConfirmationActionWithTitle:v15 message:v16 confirmButtonTitle:v17 cancelButtonTitle:v18];

  [v14 setDismissButtonAction:v19];
  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav];
  if (!v20)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v21 = *(void *)&v1[v6];
  if (v21)
  {
    [v20 pushViewController:v21 animated:1];
    v1[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_shownError] = 1;
    sub_1000C72CC(0);
    return;
  }
LABEL_13:
  __break(1u);
}

uint64_t sub_1000DF148()
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012C4C(v0, (uint64_t)qword_1001CBA60);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Connection Timed Out", v3, 2u);
    swift_slowDealloc();
  }

  id v4 = [self mainBundle];
  NSString v5 = String._bridgeToObjectiveC()();
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = sub_100138304(v4, v5, v6);

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v10 = v9;

  sub_1000D9F08(v8, v10, 0, 0, 0);

  return swift_bridgeObjectRelease();
}

void sub_1000DF300(void *a1)
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
  id v3 = a1;
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    NSString v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)NSString v6 = 134217984;
    [v3 state];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "centralManagerDidUpdateState: %ld", v6, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
  sub_1000C6930(v7);
}

void sub_1000DF7A0(void *a1, uint64_t a2)
{
  unint64_t v3 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredMainService;
  if (*(void *)(v2 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredMainService)) {
    return;
  }
  uint64_t v5 = (uint64_t)a1;
  id v6 = [a1 services];
  if (!v6) {
    return;
  }
  uint64_t v7 = v6;
  sub_100017EF4(0, (unint64_t *)&unk_1001C95B0);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_5;
    }
LABEL_29:
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  if (!v9) {
    goto LABEL_29;
  }
LABEL_5:
  char v39 = (void *)v5;
  uint64_t v40 = a2;
  unint64_t v37 = v3;
  uint64_t v38 = v2;
  uint64_t v2 = sub_100017EF4(0, (unint64_t *)&qword_1001C82F0);
  unint64_t v3 = v8 & 0xC000000000000001;
  uint64_t v10 = 4;
  while (1)
  {
    if (v3) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v8 + 8 * v10);
    }
    id v12 = v11;
    a2 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    id v13 = [v11 UUID];
    if (qword_1001C6E50 != -1) {
      swift_once();
    }
    uint64_t v5 = static NSObject.== infix(_:_:)();

    if (v5) {
      break;
    }

    ++v10;
    if (a2 == v9) {
      goto LABEL_29;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v14 = qword_1001C7120;
  id v15 = v12;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100012C4C(v16, (uint64_t)qword_1001CBA60);
  id v17 = v39;
  swift_errorRetain();
  id v18 = v17;
  swift_errorRetain();
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315394;
    id v22 = [v18 services];
    if (v22)
    {
      uint64_t v23 = v22;
      static Array._unconditionallyBridgeFromObjectiveC(_:)();

      swift_bridgeObjectRetain();
      uint64_t v24 = Array.description.getter();
      unint64_t v26 = v25;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      sub_100009A0C((uint64_t *)&unk_1001CBD00);
      v29._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
      String.append(_:)(v29);
      swift_bridgeObjectRelease();
      v30._uint64_t countAndFlagsBits = 0x656E6F6E2E3ELL;
      v30._object = (void *)0xE600000000000000;
      String.append(_:)(v30);
      uint64_t v24 = 0x6C616E6F6974704FLL;
      unint64_t v26 = 0xE90000000000003CLL;
    }
    sub_100025CA0(v24, v26, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    if (v40)
    {
      swift_getErrorValue();
      unint64_t v31 = Error.localizedDescription.getter();
      unint64_t v33 = v32;
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v33 = 0x8000000100154E70;
      unint64_t v31 = 0xD000000000000015;
    }
    unint64_t v28 = v37;
    uint64_t v27 = v38;
    sub_100025CA0(v31, v33, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "didDiscoverServices: %s, error? %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    unint64_t v28 = v37;
    uint64_t v27 = v38;
  }
  id v34 = *(void **)(v27 + v28);
  *(void *)(v27 + v28) = v15;
  id v35 = v15;

  sub_1000C6930(v36);
}

void sub_1000DFE5C(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, void *))
{
  id v10 = a3;
  id v11 = a4;
  id v12 = a1;
  id v13 = a5;
  a6(v11, a5);
}

void sub_1000DFEF4()
{
  uint64_t v1 = v0;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "B389 Setup was dismissed", v5, 2u);
    swift_slowDealloc();
  }

  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_dismissed) & 1) == 0)
  {
    [v1 dismiss:0];
  }
}

unsigned char *storeEnumTagSinglePayload for AirTagSetupMainViewController.FindMyFinalizationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000E0124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirTagSetupMainViewController.FindMyFinalizationState()
{
  return &type metadata for AirTagSetupMainViewController.FindMyFinalizationState;
}

ValueMetadata *type metadata accessor for AirTagSetupMainViewController.PairingState()
{
  return &type metadata for AirTagSetupMainViewController.PairingState;
}

unint64_t sub_1000E0170()
{
  unint64_t result = qword_1001CBC20;
  if (!qword_1001CBC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CBC20);
  }
  return result;
}

void sub_1000E01C4(uint64_t a1)
{
  uint64_t v61 = a1;
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v54 = (char *)v52 - v6;
  uint64_t v59 = sub_100009A0C(&qword_1001C95A8);
  __chkstk_darwin(v59);
  id v60 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for B389PresentationConfig.Mode(0);
  uint64_t v9 = __chkstk_darwin(v8);
  id v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)v52 - v12;
  uint64_t v14 = sub_100009A0C(&qword_1001C9418);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v57 = (uint64_t)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  id v22 = (char *)v52 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v52 - v23;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v26 = (void *)Strong;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v52[1] = v2 + 16;
    unint64_t v53 = v5;
    v52[0] = v27;
    v27(v24, v61, v1);
    uint64_t v56 = v2;
    unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
    v28(v24, 0, 1, v1);
    id v58 = v26;
    uint64_t v29 = (uint64_t)v26 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
    swift_beginAccess();
    sub_100009BE8(v29, (uint64_t)v16, &qword_1001C9418);
    uint64_t v30 = type metadata accessor for B389PresentationConfig(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v16, 1, v30) == 1)
    {
      __break(1u);
      return;
    }
    uint64_t v31 = *(int *)(v30 + 24);
    id v55 = v16;
    sub_10002B7F8((uint64_t)&v16[v31], (uint64_t)v13, type metadata accessor for B389PresentationConfig.Mode);
    sub_10002B7F8((uint64_t)v13, (uint64_t)v11, type metadata accessor for B389PresentationConfig.Mode);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v33 = (uint64_t)v60;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v34 = v56;
      (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v22, v11, v1);
      v28(v22, 0, 1, v1);
    }
    else
    {
      v28(v22, 1, 1, v1);
      sub_100061E18((uint64_t)v11, type metadata accessor for B389PresentationConfig.Mode);
      uint64_t v34 = v56;
    }
    uint64_t v35 = v61;
    uint64_t v36 = v59;
    sub_100061E18((uint64_t)v13, type metadata accessor for B389PresentationConfig.Mode);
    uint64_t v37 = v33 + *(int *)(v36 + 48);
    sub_100009BE8((uint64_t)v24, v33, (uint64_t *)&unk_1001C9450);
    sub_100009BE8((uint64_t)v22, v37, (uint64_t *)&unk_1001C9450);
    uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
    if (v38(v33, 1, v1) == 1)
    {
      sub_1000118F8((uint64_t)v22, (uint64_t *)&unk_1001C9450);
      sub_1000118F8((uint64_t)v24, (uint64_t *)&unk_1001C9450);
      if (v38(v37, 1, v1) == 1)
      {
        sub_1000118F8(v33, (uint64_t *)&unk_1001C9450);
        sub_100061E18((uint64_t)v55, type metadata accessor for B389PresentationConfig);
LABEL_13:
        if (qword_1001C7120 != -1) {
          swift_once();
        }
        uint64_t v45 = type metadata accessor for Logger();
        sub_100012C4C(v45, (uint64_t)qword_1001CBA60);
        unint64_t v46 = v53;
        ((void (*)(char *, uint64_t, uint64_t))v52[0])(v53, v35, v1);
        uint64_t v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          uint64_t v63 = swift_slowAlloc();
          *(_DWORD *)uint64_t v49 = 136315138;
          sub_1000F4FF8(&qword_1001C9460, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v62 = sub_100025CA0(v50, v51, &v63);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v46, v1);
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "Lost %s", v49, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v34 + 8))(v46, v1);
        }

        [v58 dismiss:7];
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v39 = v57;
      sub_100009BE8(v33, v57, (uint64_t *)&unk_1001C9450);
      if (v38(v37, 1, v1) != 1)
      {
        uint64_t v40 = v39;
        uint64_t v41 = v54;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v54, v37, v1);
        sub_1000F4FF8((unint64_t *)&qword_1001CBD10, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v42 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v43 = *(void (**)(char *, uint64_t))(v34 + 8);
        v43(v41, v1);
        sub_1000118F8((uint64_t)v22, (uint64_t *)&unk_1001C9450);
        sub_1000118F8((uint64_t)v24, (uint64_t *)&unk_1001C9450);
        uint64_t v44 = v40;
        uint64_t v35 = v61;
        v43((char *)v44, v1);
        sub_1000118F8(v33, (uint64_t *)&unk_1001C9450);
        sub_100061E18((uint64_t)v55, type metadata accessor for B389PresentationConfig);
        if (v42) {
          goto LABEL_13;
        }
LABEL_19:

        return;
      }
      sub_1000118F8((uint64_t)v22, (uint64_t *)&unk_1001C9450);
      sub_1000118F8((uint64_t)v24, (uint64_t *)&unk_1001C9450);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v39, v1);
    }
    sub_1000118F8(v33, &qword_1001C95A8);
    sub_100061E18((uint64_t)v55, type metadata accessor for B389PresentationConfig);
    goto LABEL_19;
  }
}

void sub_1000E0A70(void *a1)
{
  sub_10009CF4C(108);
  sub_10009CF4C(109);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [self alertControllerWithTitle:v3 message:v4 preferredStyle:1];

  sub_10009CF4C(110);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  id v7 = v1;
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v11[4] = sub_1000F5BC0;
  v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_1000215A4;
  v11[3] = &unk_1001A0770;
  uint64_t v9 = _Block_copy(v11);
  swift_release();
  id v10 = [self actionWithTitle:v8 style:0 handler:v9];
  _Block_release(v9);

  [v5 addAction:v10];
  [v5 setPreferredAction:v10];
  [a1 presentViewController:v5 animated:1 completion:0];
}

uint64_t sub_1000E0C74()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  NSString v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v21 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v19 - v12;
  sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v11, v7);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v0;
  aBlock[4] = sub_1000F5BD4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021CDC;
  aBlock[3] = &unk_1001A07C0;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000F4FF8((unint64_t *)&qword_1001C8320, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100009A0C((uint64_t *)&unk_1001C9440);
  sub_10002BAB8((unint64_t *)&qword_1001C8330, (uint64_t *)&unk_1001C9440);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v21);
}

void sub_1000E1038(NSObject *a1)
{
  os_log_t v118 = a1;
  uint64_t v113 = type metadata accessor for B389PresentationConfig.Mode(0);
  uint64_t v1 = __chkstk_darwin(v113);
  long long v111 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v102 - v4;
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v102 - v6;
  uint64_t v8 = sub_100009A0C(&qword_1001C9418);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  id v17 = (char *)&v102 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v102 - v18;
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v116 = *(void *)(v20 - 8);
  uint64_t v117 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v112 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  id v114 = (char *)&v102 - v23;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100012C4C(v24, (uint64_t)qword_1001CBA60);
  unint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Done waiting for multi scan", v27, 2u);
    swift_slowDealloc();
  }

  uint64_t v28 = OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_bubbleMonitor;
  uint64_t v29 = *(uint64_t *)((char *)&v118->isa
                   + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_bubbleMonitor);
  if (v29)
  {
    swift_beginAccess();
    uint64_t v115 = v29;
    swift_retain();
    uint64_t v30 = swift_bridgeObjectRetain();
    v121[0] = (uint64_t)sub_10002646C(v30);
    sub_1000262F8(v121);
    unint64_t v31 = sub_1000208FC(v121[0]);
    swift_bridgeObjectRelease();
    if (*(Class *)((char *)&v118->isa + v28))
    {
      swift_retain();
      sub_1000219EC();
      swift_release();
    }
    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_10:
        if ((v31 & 0xC000000000000001) != 0)
        {
          id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            __break(1u);
          }
          id v33 = *(id *)(v31 + 32);
        }
        uint64_t v34 = v33;
        swift_bridgeObjectRelease();
        id v110 = v34;
        id v35 = [v34 bleDevice];
        if (!v35)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))(v19, 1, 1, v117);
          goto LABEL_24;
        }
        uint64_t v36 = v35;
        id v37 = [v35 identifier];

        if (v37)
        {
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v38 = v116;
          uint64_t v39 = *(NSObject **)(v116 + 56);
          uint64_t v40 = v17;
          uint64_t v41 = 0;
        }
        else
        {
          uint64_t v38 = v116;
          uint64_t v39 = *(NSObject **)(v116 + 56);
          uint64_t v40 = v17;
          uint64_t v41 = 1;
        }
        uint64_t v45 = v117;
        uint64_t v109 = v39;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v39)(v40, v41, 1, v117);
        sub_100069968((uint64_t)v17, (uint64_t)v19, (uint64_t *)&unk_1001C9450);
        unint64_t v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
        if (v108(v19, 1, v45) == 1)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          sub_1000118F8((uint64_t)v19, (uint64_t *)&unk_1001C9450);
          unint64_t v46 = v110;
          uint64_t v47 = Logger.logObject.getter();
          os_log_type_t v48 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v47, v48))
          {
            uint64_t v49 = swift_slowAlloc();
            uint64_t v50 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v49 = 138412546;
            unint64_t v51 = [v46 bleDevice];
            uint64_t v52 = v51;
            if (v51) {
              v121[0] = (uint64_t)v51;
            }
            else {
              v121[0] = 0;
            }
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v50 = v52;

            *(_WORD *)(v49 + 12) = 2112;
            v121[0] = (uint64_t)v46;
            uint64_t v86 = v46;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v50[1] = v46;

            _os_log_impl((void *)&_mh_execute_header, v47, v48, "No identifier for ble device %@ on %@", (uint8_t *)v49, 0x16u);
            sub_100009A0C(&qword_1001C9410);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            uint64_t v47 = v46;
          }

LABEL_53:
          *((unsigned char *)&v118->isa + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_needsMulti) = 0;
          sub_1000C6930(v65);
          goto LABEL_54;
        }
        unint64_t v53 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        unint64_t v54 = v114;
        id v107 = v53;
        v53(v114, v19, v45);
        id v55 = (char *)v118 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
        swift_beginAccess();
        id v106 = v55;
        sub_100009BE8((uint64_t)v55, (uint64_t)v10, &qword_1001C9418);
        uint64_t v56 = type metadata accessor for B389PresentationConfig(0);
        uint64_t v57 = *(void *)(v56 - 8);
        char v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
        uint64_t v104 = v57 + 48;
        if (v105(v10, 1, v56) == 1)
        {
          __break(1u);
LABEL_58:
          __break(1u);
          swift_release();
          __break(1u);
          return;
        }
        uint64_t v103 = v56;
        sub_10002B7F8((uint64_t)&v10[*(int *)(v56 + 24)], (uint64_t)v7, type metadata accessor for B389PresentationConfig.Mode);
        sub_10002B7F8((uint64_t)v7, (uint64_t)v5, type metadata accessor for B389PresentationConfig.Mode);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v58 = v117;
          v107(v14, v5, v117);
          uint64_t v59 = v116;
          ((void (*)(char *, void, uint64_t, uint64_t))v109)(v14, 0, 1, v58);
        }
        else
        {
          uint64_t v60 = v116;
          uint64_t v58 = v117;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v109)(v14, 1, 1, v117);
          uint64_t v61 = (uint64_t)v5;
          uint64_t v59 = v60;
          unint64_t v54 = v114;
          sub_100061E18(v61, type metadata accessor for B389PresentationConfig.Mode);
        }
        sub_100061E18((uint64_t)v7, type metadata accessor for B389PresentationConfig.Mode);
        if (v108(v14, 1, v58) == 1)
        {
          swift_bridgeObjectRelease();
          sub_1000118F8((uint64_t)v14, (uint64_t *)&unk_1001C9450);
          sub_100061E18((uint64_t)v10, type metadata accessor for B389PresentationConfig);
          uint64_t v62 = Logger.logObject.getter();
          os_log_type_t v63 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v62, v63))
          {
            id v64 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v64 = 0;
            _os_log_impl((void *)&_mh_execute_header, v62, v63, "No btUUID", v64, 2u);
            swift_slowDealloc();
          }

          uint64_t v65 = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v54, v117);
          goto LABEL_53;
        }
        v107(v112, v14, v58);
        sub_100061E18((uint64_t)v10, type metadata accessor for B389PresentationConfig);
        sub_1000F4FF8((unint64_t *)&qword_1001CBD10, (void (*)(uint64_t))&type metadata accessor for UUID);
        int v66 = dispatch thunk of static Equatable.== infix(_:_:)();
        id v67 = v110;
        swift_bridgeObjectRetain();
        id v68 = v67;
        unint64_t v69 = Logger.logObject.getter();
        os_log_type_t v70 = static os_log_type_t.default.getter();
        int v71 = v70;
        if (os_log_type_enabled(v69, v70))
        {
          uint64_t v72 = swift_slowAlloc();
          LODWORD(v110) = v66;
          uint64_t v73 = v72;
          uint64_t v74 = swift_slowAlloc();
          LODWORD(v108) = v71;
          uint64_t v75 = (void *)v74;
          uint64_t v109 = swift_slowAlloc();
          uint64_t v120 = v109;
          *(_DWORD *)uint64_t v73 = 138412802;
          uint64_t v119 = (uint64_t)v68;
          id v76 = v68;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v75 = v68;

          *(_WORD *)(v73 + 12) = 1024;
          LODWORD(v119) = (v110 & 1) == 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v73 + 18) = 2080;
          sub_100017EF4(0, &qword_1001C9590);
          swift_bridgeObjectRetain();
          uint64_t v77 = Array.description.getter();
          unint64_t v79 = v78;
          swift_bridgeObjectRelease();
          uint64_t v119 = sub_100025CA0(v77, v79, (uint64_t *)&v120);
          unint64_t v54 = v114;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          uint64_t v59 = v116;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v108, "Closest B389 is %@. isDifferent: %{BOOL}d.\nall: %s", (uint8_t *)v73, 0x1Cu);
          sub_100009A0C(&qword_1001C9410);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          LOBYTE(v73) = (_BYTE)v110;
          swift_slowDealloc();

          if ((v73 & 1) == 0) {
            goto LABEL_38;
          }
        }
        else
        {

          swift_bridgeObjectRelease_n();
          if ((v66 & 1) == 0)
          {
LABEL_38:
            uint64_t v80 = v68;
            uint64_t v81 = Logger.logObject.getter();
            os_log_type_t v82 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v81, v82))
            {
              unint64_t v83 = (uint8_t *)swift_slowAlloc();
              uint64_t v84 = (void *)swift_slowAlloc();
              *(_DWORD *)unint64_t v83 = 138412290;
              uint64_t v120 = v80;
              uint64_t v85 = v80;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *uint64_t v84 = v80;

              uint64_t v59 = v116;
              _os_log_impl((void *)&_mh_execute_header, v81, v82, "Setting different tag for multi: %@", v83, 0xCu);
              sub_100009A0C(&qword_1001C9410);
              swift_arrayDestroy();
              unint64_t v54 = v114;
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              uint64_t v81 = v80;
            }
            uint64_t v91 = (uint64_t)v111;

            uint64_t v92 = *(int *)(sub_100009A0C((uint64_t *)&unk_1001C9580) + 48);
            id v93 = v54;
            char v94 = v54;
            uint64_t v95 = v117;
            (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v91, v93, v117);
            *(unsigned char *)(v91 + v92) = 1;
            swift_storeEnumTagMultiPayload();
            id v96 = v106;
            swift_beginAccess();
            uint64_t v97 = v103;
            if (v105(v96, 1, v103) != 1)
            {
              sub_1000698A4(v91, (uint64_t)&v96[*(int *)(v97 + 24)]);
              swift_endAccess();

              Swift::Int v87 = *(void (**)(char *, uint64_t))(v59 + 8);
              v87(v112, v95);
              id v89 = v94;
              uint64_t v90 = v95;
              goto LABEL_48;
            }
            goto LABEL_58;
          }
        }

        Swift::Int v87 = *(void (**)(char *, uint64_t))(v59 + 8);
        uint64_t v88 = v117;
        v87(v112, v117);
        id v89 = v54;
        uint64_t v90 = v88;
LABEL_48:
        uint64_t v98 = ((uint64_t (*)(char *, uint64_t))v87)(v89, v90);
        *((unsigned char *)&v118->isa + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_needsMulti) = 0;
        sub_1000C6930(v98);
LABEL_54:
        swift_release();
        return;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v32) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v99 = Logger.logObject.getter();
    os_log_type_t v100 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v99, v100))
    {
      unint64_t v101 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v101 = 0;
      _os_log_impl((void *)&_mh_execute_header, v99, v100, "No more B389s in range...", v101, 2u);
      swift_slowDealloc();
    }

    goto LABEL_53;
  }
  os_log_t v118 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v118, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v118, v42, "No bubble monitor found during multi setup", v43, 2u);
    swift_slowDealloc();
  }
  os_log_t v44 = v118;
}

void sub_1000E2058()
{
  uint64_t v1 = v0;
  unint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100017EF4(0, (unint64_t *)&qword_1001CA820);
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, unint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, unint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleCategories);
  if (v2)
  {
    uint64_t v40 = _swiftEmptyArrayStorage;
    if (!(v2 >> 62))
    {
      uint64_t v7 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      uint64_t v39 = v1;
      if (v7)
      {
LABEL_5:
        if (v7 < 1)
        {
LABEL_40:
          __break(1u);
          goto LABEL_41;
        }
        uint64_t v8 = 0;
        do
        {
          if ((v2 & 0xC000000000000001) != 0) {
            id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v9 = *(id *)(v2 + 8 * v8 + 32);
          }
          uint64_t v10 = v9;
          ++v8;
          id v11 = [v9 roles];
          sub_100017EF4(0, (unint64_t *)&qword_1001C9478);
          unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_1000E7B80(v12, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000ECE40);
        }
        while (v7 != v8);
        swift_bridgeObjectRelease_n();
        uint64_t v1 = v39;
        unint64_t v13 = (unint64_t)v40;
LABEL_19:
        uint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleVC);
        if (v18)
        {
          id v19 = [*(id *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_roleVC) contentView];
          id v20 = [v19 pickerView];

          id v21 = [v20 selectedRowInComponent:0];
        }
        else
        {
          id v21 = 0;
        }
        uint64_t v22 = (uint64_t *)(v1 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_selectedRoleIndex);
        uint64_t *v22 = (uint64_t)v21;
        *((unsigned char *)v22 + 8) = v18 == 0;
        unint64_t v23 = sub_1000C5ED0();
        unint64_t v25 = v24;
        if (qword_1001C7120 != -1) {
          swift_once();
        }
        uint64_t v26 = type metadata accessor for Logger();
        uint64_t v27 = sub_100012C4C(v26, (uint64_t)qword_1001CBA60);
        swift_bridgeObjectRetain();
        uint64_t v28 = Logger.logObject.getter();
        os_log_type_t v29 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = (uint8_t *)swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          *(_DWORD *)uint64_t v30 = 136315138;
          v38[1] = v27;
          if (v25)
          {
            unint64_t v31 = v25;
          }
          else
          {
            uint64_t v40 = 0;
            unint64_t v41 = 0xE000000000000000;
            _StringGuts.grow(_:)(17);
            swift_bridgeObjectRelease();
            unint64_t v31 = 0x8000000100154E70;
            unint64_t v23 = 0xD000000000000015;
          }
          swift_bridgeObjectRetain();
          uint64_t v40 = (void *)sub_100025CA0(v23, v31, &v42);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "continuePressed, name = %s", v30, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        if (v22[1])
        {
          __break(1u);
          return;
        }
        unint64_t v32 = *v22;
        if (*v22 < 0)
        {
          __break(1u);
        }
        else if (v32 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v33 = *(id *)(v13 + 8 * v32 + 32);
          swift_bridgeObjectRelease();
          id v34 = [v33 roleId];

          if (v34 == (id)SPBeaconRoleIdOther)
          {
            id v35 = Logger.logObject.getter();
            os_log_type_t v36 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v35, v36))
            {
              id v37 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v37 = 0;
              _os_log_impl((void *)&_mh_execute_header, v35, v36, "Showing name and emoji view", v37, 2u);
              swift_slowDealloc();
            }

            sub_1000C5598();
          }
          else
          {
            sub_1000C52D4();
          }
          return;
        }
        __break(1u);
        goto LABEL_40;
      }
LABEL_18:
      swift_bridgeObjectRelease_n();
      unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
      goto LABEL_19;
    }
LABEL_17:
    swift_bridgeObjectRetain_n();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v39 = v1;
    if (v7) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (qword_1001C7120 != -1) {
LABEL_41:
  }
    swift_once();
  uint64_t v14 = type metadata accessor for Logger();
  sub_100012C4C(v14, (uint64_t)qword_1001CBA60);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Could not determine role categories", v17, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1000E26C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_1000E2758, v6, v5);
}

void sub_1000E2758()
{
  uint64_t v1 = *(void **)(v0[3] + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_vcNav);
  v0[7] = v1;
  if (v1)
  {
    uint64_t v4 = (void (*)(id))((char *)&dword_1001CBE60 + dword_1001CBE60);
    id v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[8] = v3;
    void *v3 = v0;
    v3[1] = sub_1000E2828;
    v4(v2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000E2828()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_1000E29AC;
  }
  else
  {

    uint64_t v3 = *(void *)(v2 + 40);
    uint64_t v4 = *(void *)(v2 + 48);
    uint64_t v5 = sub_1000E2944;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000E2944()
{
  swift_release();
  sub_1000E2058();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000E29AC()
{
  uint64_t v1 = (void *)v0[7];
  swift_release();

  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error switching me Device %@", v5, 0xCu);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1000E2058();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

id sub_1000E2BC8(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1000E2CA4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1000E2CCC(uint64_t a1, int *a2)
{
  id v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  os_log_type_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *os_log_type_t v4 = v2;
  v4[1] = sub_1000E2DA8;
  return v6(a1);
}

uint64_t sub_1000E2DA8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_1000E2EA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_100009A0C(&qword_1001C8348);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      uint64_t v10[3] = 2 * v11 - 64;
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      unint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000EE690(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E2F9C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100009A0C(&qword_1001CBC48);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000EE778(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E30AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100009A0C(&qword_1001CBE90);
  uint64_t v10 = *(void *)(type metadata accessor for URLQueryItem() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for URLQueryItem() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000EE9F8(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_1000E3314(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100009A0C(&qword_1001CBF00);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000EECDC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000E3424(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100009A0C(&qword_1001CBCE0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000EEDD0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E3534(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000E35F4(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_1000E3554(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000E3754(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1000E3574(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000E38E0(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1000E3594(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000E3A40(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1000E35B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000E3B9C(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1000E35D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000E3D0C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1000E35F4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100009A0C(&qword_1001CBEE8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E3754(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100009A0C(&qword_1001CBC48);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    uint64_t v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = &_swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100009A0C((uint64_t *)&unk_1001C9480);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E38E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100009A0C(&qword_1001CBD38);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E3A40(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100009A0C(&qword_1001CBCD8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E3B9C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100009A0C(&qword_1001CBE98);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000E3D0C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100009A0C((uint64_t *)&unk_1001CBEA0);
  uint64_t v10 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  id v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  id v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unsigned char *sub_1000E3F4C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_1000EDCB8(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_1000EDD7C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_1000EDDF8((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1000E3FC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = static Hasher._hash(seed:_:)();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1000E5948(a2, v9, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1000E40C0(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1000E5A6C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1000E4270(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100017EF4(0, &qword_1001CBEB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_1000E49D4(v7, result + 1);
    uint64_t v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_1000E5624();
      unint64_t v23 = v28;
    }
    else
    {
      unint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_1000E58C4((uint64_t)v8, v23);
    uint64_t *v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100017EF4(0, &qword_1001CBEB0);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    id v8 = a2;
    sub_1000E5C08((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1000E4510(unsigned char *a1, Swift::Int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  sub_10000ACA8();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  Swift::Int v19 = a2;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    uint64_t v10 = a2;
    while (1)
    {
      unint64_t v11 = 0x8000000100153F60;
      switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
      {
        case 1:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 2:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 3:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 4:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 5:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 6:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 7:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 8:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 9:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xA:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xB:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xC:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xD:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xE:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xF:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0x10:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0x11:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0x12:
          Swift::Int v12 = "51-86AA-8D9728F8D66C";
LABEL_22:
          unint64_t v11 = (unint64_t)v12 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v13 = 0x8000000100153F60;
      switch(v10)
      {
        case 1:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 2:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 3:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 4:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 5:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 6:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 7:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 8:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 9:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 10:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 11:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 12:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 13:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 14:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 15:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 16:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 17:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 18:
          unint64_t v14 = "51-86AA-8D9728F8D66C";
LABEL_42:
          unint64_t v13 = (unint64_t)v14 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v11 == v13)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_49;
      }
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_46;
      }
    }
    swift_bridgeObjectRelease();
LABEL_49:
    uint64_t result = 0;
    char v17 = *(unsigned char *)(*(void *)(*v3 + 48) + v8);
  }
  else
  {
LABEL_46:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    void *v3 = 0x8000000000000000;
    char v17 = v19;
    sub_1000E5D90(v19, v8, isUniquelyReferenced_nonNull_native);
    void *v3 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v17;
  return result;
}

Swift::Int sub_1000E49D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100009A0C(&qword_1001CBEC0);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_100017EF4(0, &qword_1001CBEB0);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1000E5624();
          uint64_t v2 = v14;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_1000E4BCC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100009A0C(&qword_1001CBC38);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *unint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000E4E50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100009A0C(&qword_1001CBC40);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1000E5130()
{
  uint64_t v1 = *v0;
  sub_100009A0C((uint64_t *)&unk_1001CBC90);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16)) {
    goto LABEL_37;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  BOOL v27 = (void *)(v1 + 56);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_38;
    }
    if (v13 >= v7) {
      break;
    }
    unint64_t v14 = v27[v13];
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v7) {
        break;
      }
      unint64_t v14 = v27[v9];
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v7) {
          break;
        }
        unint64_t v14 = v27[v9];
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v7) {
            break;
          }
          unint64_t v14 = v27[v15];
          if (!v14)
          {
            while (1)
            {
              int64_t v9 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_39;
              }
              if (v9 >= v7) {
                goto LABEL_33;
              }
              unint64_t v14 = v27[v9];
              ++v15;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v15;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = *(unsigned char *)(*(void *)(v1 + 48) + v12);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v17 = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v18) >> 6;
    do
    {
      if (++v20 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1000E55D8);
      }
      BOOL v23 = v20 == v22;
      if (v20 == v22) {
        unint64_t v20 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v8 + 8 * v20);
    }
    while (v24 == -1);
    unint64_t v10 = __clz(__rbit64(~v24)) + (v20 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(unsigned char *)(*(void *)(v3 + 48) + v10) = v16;
    ++*(void *)(v3 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v25 = 1 << *(unsigned char *)(v1 + 32);
  if (v25 > 63) {
    bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v27 = -1 << v25;
  }
  *(void *)(v1 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_1000E5624()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100009A0C(&qword_1001CBEC0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1000E58C4(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_1000E5948(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1000E4BCC();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1000E6260();
      goto LABEL_14;
    }
    sub_1000E68EC();
  }
  uint64_t v8 = *v3;
  unint64_t result = static Hasher._hash(seed:_:)();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

Swift::Int sub_1000E5A6C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1000E4E50();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (Swift::Int)sub_1000E63F8();
      goto LABEL_22;
    }
    sub_1000E6B50();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  unint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *unint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_1000E5C08(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1000E5624();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1000E6740();
      goto LABEL_14;
    }
    sub_1000E72BC();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100017EF4(0, &qword_1001CBEB0);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = static NSObject.== infix(_:_:)();

    if (v12)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = static NSObject.== infix(_:_:)();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

Swift::Int sub_1000E5D90(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unsigned __int8 v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  char v22 = result;
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1000E5130();
    }
    else
    {
      if (v8 > v7)
      {
        unint64_t result = (Swift::Int)sub_1000E65AC();
        goto LABEL_53;
      }
      sub_1000E6E00();
    }
    uint64_t v9 = *v3;
    Hasher.init(_seed:)();
    sub_10000ACA8();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    unint64_t result = Hasher._finalize()();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      uint64_t v12 = v6;
      while (1)
      {
        unint64_t v13 = 0x8000000100153F60;
        switch(*(unsigned char *)(*(void *)(v9 + 48) + a2))
        {
          case 1:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 2:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 3:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 4:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 5:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 6:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 7:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 8:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 9:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 0xA:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 0xB:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 0xC:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 0xD:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 0xE:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 0xF:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 0x10:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 0x11:
            id v14 = "51-86AA-8D9728F8D66C";
            goto LABEL_29;
          case 0x12:
            id v14 = "51-86AA-8D9728F8D66C";
LABEL_29:
            unint64_t v13 = (unint64_t)v14 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v15 = 0x8000000100153F60;
        switch(v12)
        {
          case 1:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 2:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 3:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 4:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 5:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 6:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 7:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 8:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 9:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 10:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 11:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 12:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 13:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 14:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 15:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 16:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 17:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
            goto LABEL_49;
          case 18:
            uint64_t v16 = "51-86AA-8D9728F8D66C";
LABEL_49:
            unint64_t v15 = (unint64_t)v16 | 0x8000000000000000;
            break;
          default:
            break;
        }
        if (v13 == v15) {
          break;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_57;
        }
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_53;
        }
      }
LABEL_56:
      swift_bridgeObjectRelease_n();
LABEL_57:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x1000E61C8);
    }
  }
LABEL_53:
  uint64_t v18 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v18 + 48) + a2) = v22;
  uint64_t v19 = *(void *)(v18 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_56;
  }
  *(void *)(v18 + 16) = v21;
  return result;
}

void *sub_1000E6260()
{
  uint64_t v1 = v0;
  sub_100009A0C(&qword_1001CBC38);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000E63F8()
{
  uint64_t v1 = v0;
  sub_100009A0C(&qword_1001CBC40);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000E65AC()
{
  uint64_t v1 = v0;
  sub_100009A0C((uint64_t *)&unk_1001CBC90);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1000E6740()
{
  uint64_t v1 = v0;
  sub_100009A0C(&qword_1001CBEC0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000E68EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100009A0C(&qword_1001CBC38);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000E6B50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100009A0C(&qword_1001CBC40);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000E6E00()
{
  uint64_t v1 = *v0;
  sub_100009A0C((uint64_t *)&unk_1001CBC90);
  uint64_t v2 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v26 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v26) {
      break;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v26) {
        break;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v26) {
          break;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v9);
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v26) {
            break;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              int64_t v9 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_37;
              }
              if (v9 >= v26) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v5 + 8 * v9);
              ++v15;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v15;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = *(unsigned char *)(*(void *)(v1 + 48) + v12);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v17 = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v18) >> 6;
    do
    {
      if (++v20 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x1000E7270);
      }
      BOOL v23 = v20 == v22;
      if (v20 == v22) {
        unint64_t v20 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v8 + 8 * v20);
    }
    while (v24 == -1);
    unint64_t v10 = __clz(__rbit64(~v24)) + (v20 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(unsigned char *)(*(void *)(v3 + 48) + v10) = v16;
    ++*(void *)(v3 + 16);
  }
LABEL_33:
  uint64_t result = swift_release_n();
LABEL_35:
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_1000E72BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100009A0C(&qword_1001CBEC0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = NSObject._rawHashValue(seed:)(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000E7538(unint64_t a1)
{
  return sub_1000E7B80(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000EC7A4);
}

uint64_t sub_1000E7550(uint64_t result)
{
  uint64_t v4 = v2;
  uint64_t v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.count.getter();
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = *(void *)(result + 16);
  }
  if ((unint64_t)*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = v18 + v6;
    if (!__OFADD__(v18, v6)) {
      goto LABEL_6;
    }
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v6;
  if (__OFADD__(v7, v6)) {
    goto LABEL_21;
  }
LABEL_6:
  unint64_t v9 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v4 = v12;
    uint64_t v11 = v12 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v13 = *(void *)(v11 + 16);
  uint64_t v14 = (*(void *)(v11 + 24) >> 1) - v13;
  uint64_t result = (uint64_t)sub_1000ED0B8(&v42, (void *)(v11 + 8 * v13 + 32), v14, v5);
  if (result < v6) {
    goto LABEL_22;
  }
  if (result >= 1)
  {
    uint64_t v15 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v16 = __OFADD__(v15, result);
    uint64_t v17 = v15 + result;
    if (v16)
    {
      __break(1u);
LABEL_29:
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_18;
      }
      sub_100017EF4(0, &qword_1001CBEB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v22 = v41;
      swift_unknownObjectRelease();
      while (2)
      {
        if (!v22) {
          goto LABEL_18;
        }
        while (1)
        {
          uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          if (v3 + 1 > *(void *)(v24 + 0x18) >> 1)
          {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
          }
          uint64_t v25 = *(void *)(v24 + 24) >> 1;
          if (v3 < v25) {
            break;
          }
LABEL_33:
          *(void *)(v24 + 16) = v3;
        }
        uint64_t v26 = v24 + 32;
        while (1)
        {
          *(void *)(v26 + 8 * v3++) = v22;
          int64_t v27 = v45;
          if (v42 < 0)
          {
            if (!__CocoaSet.Iterator.next()()) {
              goto LABEL_70;
            }
            sub_100017EF4(0, &qword_1001CBEB0);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            unint64_t v22 = v41;
            swift_unknownObjectRelease();
            goto LABEL_45;
          }
          if (!v46) {
            break;
          }
          unint64_t v28 = (v46 - 1) & v46;
          unint64_t v29 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_41:
          unint64_t v22 = *(void **)(*(void *)(v42 + 48) + 8 * v29);
          id v30 = v22;
LABEL_42:
          int64_t v45 = v27;
          unint64_t v46 = v28;
LABEL_45:
          if (!v22)
          {
LABEL_70:
            *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v3;
            goto LABEL_18;
          }
          if (v3 >= v25)
          {
            uint64_t v24 = *v4 & 0xFFFFFFFFFFFFFF8;
            goto LABEL_33;
          }
        }
        int64_t v31 = v45 + 1;
        if (__OFADD__(v45, 1))
        {
          __break(1u);
LABEL_94:
          unint64_t v22 = 0;
          unint64_t v20 = 0;
          int64_t v19 = v1;
LABEL_27:
          int64_t v45 = v19;
          unint64_t v46 = v20;
          continue;
        }
        break;
      }
      int64_t v32 = (unint64_t)(v44 + 64) >> 6;
      if (v31 >= v32)
      {
        unint64_t v22 = 0;
        unint64_t v28 = 0;
        goto LABEL_42;
      }
      unint64_t v33 = *(void *)(v43 + 8 * v31);
      if (!v33)
      {
        int64_t v34 = v45 + 2;
        if (v45 + 2 >= v32) {
          goto LABEL_67;
        }
        unint64_t v33 = *(void *)(v43 + 8 * v34);
        if (!v33)
        {
          int64_t v1 = v45 + 3;
          if (v45 + 3 >= v32) {
            goto LABEL_68;
          }
          unint64_t v33 = *(void *)(v43 + 8 * v1);
          if (v33)
          {
            int64_t v31 = v45 + 3;
            goto LABEL_51;
          }
          int64_t v34 = v45 + 4;
          if (v45 + 4 >= v32)
          {
            unint64_t v22 = 0;
            unint64_t v28 = 0;
            int64_t v27 = v45 + 3;
            goto LABEL_42;
          }
          unint64_t v33 = *(void *)(v43 + 8 * v34);
          if (!v33)
          {
            int64_t v31 = v45 + 5;
            if (v45 + 5 >= v32)
            {
LABEL_68:
              unint64_t v22 = 0;
              unint64_t v28 = 0;
              int64_t v27 = v34;
              goto LABEL_42;
            }
            unint64_t v33 = *(void *)(v43 + 8 * v31);
            if (!v33)
            {
              int64_t v31 = v32 - 1;
              uint64_t v35 = v45 + 6;
              while (v32 != v35)
              {
                unint64_t v33 = *(void *)(v43 + 8 * v35++);
                if (v33)
                {
                  int64_t v31 = v35 - 1;
                  goto LABEL_51;
                }
              }
LABEL_67:
              unint64_t v22 = 0;
              unint64_t v28 = 0;
              int64_t v27 = v31;
              goto LABEL_42;
            }
            goto LABEL_51;
          }
        }
        int64_t v31 = v34;
      }
LABEL_51:
      unint64_t v28 = (v33 - 1) & v33;
      unint64_t v29 = __clz(__rbit64(v33)) + (v31 << 6);
      int64_t v27 = v31;
      goto LABEL_41;
    }
    *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v17;
  }
  if (result != v14)
  {
LABEL_18:
    sub_10002BAB0();
    return specialized Array._endMutation()();
  }
LABEL_23:
  uint64_t v3 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  int64_t v19 = v45;
  if (v42 < 0) {
    goto LABEL_29;
  }
  if (v46)
  {
    unint64_t v20 = (v46 - 1) & v46;
    unint64_t v21 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_26:
    unint64_t v22 = *(void **)(*(void *)(v42 + 48) + 8 * v21);
    id v23 = v22;
    goto LABEL_27;
  }
  int64_t v36 = v45 + 1;
  if (!__OFADD__(v45, 1))
  {
    int64_t v37 = (unint64_t)(v44 + 64) >> 6;
    if (v36 >= v37)
    {
      unint64_t v22 = 0;
      unint64_t v20 = 0;
      goto LABEL_27;
    }
    unint64_t v38 = *(void *)(v43 + 8 * v36);
    if (v38) {
      goto LABEL_75;
    }
    int64_t v39 = v45 + 2;
    if (v45 + 2 >= v37)
    {
LABEL_91:
      unint64_t v22 = 0;
      unint64_t v20 = 0;
      int64_t v19 = v36;
      goto LABEL_27;
    }
    unint64_t v38 = *(void *)(v43 + 8 * v39);
    if (v38) {
      goto LABEL_79;
    }
    int64_t v1 = v45 + 3;
    if (v45 + 3 < v37)
    {
      unint64_t v38 = *(void *)(v43 + 8 * v1);
      if (v38)
      {
        int64_t v36 = v45 + 3;
        goto LABEL_75;
      }
      int64_t v39 = v45 + 4;
      if (v45 + 4 >= v37) {
        goto LABEL_94;
      }
      unint64_t v38 = *(void *)(v43 + 8 * v39);
      if (v38)
      {
LABEL_79:
        int64_t v36 = v39;
LABEL_75:
        unint64_t v20 = (v38 - 1) & v38;
        unint64_t v21 = __clz(__rbit64(v38)) + (v36 << 6);
        int64_t v19 = v36;
        goto LABEL_26;
      }
      int64_t v36 = v45 + 5;
      if (v45 + 5 < v37)
      {
        unint64_t v38 = *(void *)(v43 + 8 * v36);
        if (!v38)
        {
          int64_t v36 = v37 - 1;
          uint64_t v40 = v45 + 6;
          do
          {
            if (v37 == v40) {
              goto LABEL_91;
            }
            unint64_t v38 = *(void *)(v43 + 8 * v40++);
          }
          while (!v38);
          int64_t v36 = v40 - 1;
        }
        goto LABEL_75;
      }
    }
    unint64_t v22 = 0;
    unint64_t v20 = 0;
    int64_t v19 = v39;
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000E7B50(unint64_t a1)
{
  return sub_1000E7B80(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000ECC0C);
}

uint64_t sub_1000E7B68(unint64_t a1)
{
  return sub_1000E7B80(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000ECE40);
}

uint64_t sub_1000E7B80(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    uint64_t *v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1000E7D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100008B9C(a1);
  LOBYTE(a1) = v7;
  uint64_t result = swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v3;
    uint64_t v13 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1000EABC8();
      uint64_t v10 = v13;
    }

    uint64_t v11 = *(void *)(v10 + 56) + 24 * v6;
    uint64_t v12 = *(void *)(v11 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v11;
    *(void *)(a2 + 16) = v12;
    sub_1000E9A58(v6, v10);
    uint64_t *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 1;
  }
  return result;
}

uint64_t sub_1000E7E3C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_100008C68(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000EAD9C();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_1000E9C20(v4, v7);
  uint64_t *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1000E7F34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_100008A90(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000EB034();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1000E9F18(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1000E8014(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100009A0C(&qword_1001CBC70);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v35 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_33;
        }
        unint64_t v22 = v37[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v22 = v37[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v35;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v22 = v37[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      unint64_t v28 = *(void **)(*(void *)(v5 + 48) + 8 * v20);
      uint64_t v29 = *(void *)(v5 + 56) + 24 * v20;
      id v30 = *(void **)v29;
      unint64_t v31 = *(void *)(v29 + 8);
      int64_t v32 = *(void **)(v29 + 16);
      if ((v38 & 1) == 0)
      {
        id v33 = v28;
        sub_100009B50(v30, v31, v32);
      }
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v7 + 48) + 8 * v17) = v28;
      uint64_t v18 = (void *)(*(void *)(v7 + 56) + 24 * v17);
      *uint64_t v18 = v30;
      v18[1] = v31;
      _OWORD v18[2] = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000E830C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100009A0C(&qword_1001CBEE0);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1000F4FF8((unint64_t *)&unk_1001C72C0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_1000E8730(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100009A0C(&qword_1001CBD30);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000E8A3C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100009A0C(&qword_1001CBF08);
  char v34 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt32 v27 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v27);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v16) = v27;
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *unint64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000E8D24(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100009A0C(&qword_1001C7288);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v33 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_41;
  }
  if (v16 >= v34)
  {
    swift_release();
    uint64_t v3 = v33;
    unint64_t v17 = (void *)(v5 + 64);
    if (v36)
    {
LABEL_36:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v17, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v17 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v35 + 8 * v16);
    ++v12;
    if (v18) {
      goto LABEL_21;
    }
    int64_t v12 = v16 + 1;
    if (v16 + 1 >= v34) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v35 + 8 * v12);
    if (v18)
    {
LABEL_21:
      unint64_t v10 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      unint64_t v21 = *(void **)(*(void *)(v5 + 56) + 8 * v15);
      if ((v36 & 1) == 0) {
        id v22 = v21;
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v23 = Hasher._finalize()();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v26);
        if (v30 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(unsigned char *)(*(void *)(v7 + 48) + v13) = v20;
          *(void *)(*(void *)(v7 + 56) + 8 * v13) = v21;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x1000E91F0);
    }
    int64_t v19 = v16 + 2;
    if (v19 < v34)
    {
      unint64_t v18 = *(void *)(v35 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          int64_t v12 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_42;
          }
          if (v12 >= v34) {
            goto LABEL_33;
          }
          unint64_t v18 = *(void *)(v35 + 8 * v12);
          ++v19;
          if (v18) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v19;
      goto LABEL_21;
    }
LABEL_33:
    swift_release();
    uint64_t v3 = v33;
    if (v36) {
      goto LABEL_36;
    }
  }
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000E923C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100009A0C(&qword_1001C7280);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v31 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_41;
  }
  if (v16 >= v32)
  {
    swift_release();
    uint64_t v3 = v31;
    unint64_t v17 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_36:
      uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
      if (v29 >= 64) {
        bzero(v17, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v17 = -1 << v29;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v33 + 8 * v16);
    ++v12;
    if (v18) {
      goto LABEL_21;
    }
    int64_t v12 = v16 + 1;
    if (v16 + 1 >= v32) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v33 + 8 * v12);
    if (v18)
    {
LABEL_21:
      unint64_t v10 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      long long v34 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v15);
      if ((a2 & 1) == 0) {
        sub_100009B90(v34, *((unint64_t *)&v34 + 1));
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v21 = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = v21 & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v24);
        if (v28 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(unsigned char *)(*(void *)(v7 + 48) + v13) = v20;
          *(_OWORD *)(*(void *)(v7 + 56) + 16 * v13) = v34;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x1000E970CLL);
    }
    int64_t v19 = v16 + 2;
    if (v19 < v32)
    {
      unint64_t v18 = *(void *)(v33 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          int64_t v12 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_42;
          }
          if (v12 >= v32) {
            goto LABEL_33;
          }
          unint64_t v18 = *(void *)(v33 + 8 * v12);
          ++v19;
          if (v18) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v19;
      goto LABEL_21;
    }
LABEL_33:
    swift_release();
    uint64_t v3 = v31;
    if (a2) {
      goto LABEL_36;
    }
  }
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1000E9758(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100009A0C(&qword_1001C7240);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    long long v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      Swift::Int v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_100009A50(v24, v35);
      }
      else
      {
        sub_100011954((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_100009A50(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

void sub_1000E9A58(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v11 = *(void *)(a2 + 40);
        id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v13 = NSObject._rawHashValue(seed:)(v11);

        Swift::Int v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v14 >= v9 && v3 >= v14)
          {
LABEL_16:
            uint64_t v17 = *(void *)(a2 + 48);
            int64_t v18 = (void *)(v17 + 8 * v3);
            unint64_t v19 = (void *)(v17 + 8 * v6);
            if (v3 != v6 || v18 >= v19 + 1) {
              *int64_t v18 = *v19;
            }
            uint64_t v20 = *(void *)(a2 + 56);
            unint64_t v21 = v20 + 24 * v3;
            uint64_t v22 = (long long *)(v20 + 24 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v21 >= (unint64_t)v22 + 24))
            {
              long long v10 = *v22;
              *(void *)(v21 + 16) = *((void *)v22 + 2);
              *(_OWORD *)unint64_t v21 = v10;
              int64_t v3 = v6;
            }
          }
        }
        else if (v14 >= v9 || v3 >= v14)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << a1) - 1;
  }
  *uint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1000E9C20(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      Swift::Int v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_1000F4FF8((unint64_t *)&unk_1001C72C0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1000E9F18(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v9 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          Swift::Int v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          int64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1000EA0F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  unint64_t v6 = v5;
  uint64_t v11 = *v5;
  unint64_t v13 = sub_100008B9C((uint64_t)a4);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 >= v16 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_1000EABC8();
LABEL_7:
    uint64_t v19 = (void *)*v6;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7] + 24 * v13;
      sub_10002B928(*(void *)v20, *(void *)(v20 + 8), *(void **)(v20 + 16));
      *(void *)uint64_t v20 = a1;
      *(void *)(v20 + 8) = a2;
      *(void *)(v20 + 16) = a3;
      return;
    }
    goto LABEL_11;
  }
  sub_1000E8014(v16, a5 & 1);
  unint64_t v21 = sub_100008B9C((uint64_t)a4);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_17:
    sub_100017EF4(0, (unint64_t *)&qword_1001C7250);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v13 = v21;
  uint64_t v19 = (void *)*v6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  v19[(v13 >> 6) + 8] |= 1 << v13;
  *(void *)(v19[6] + 8 * v13) = a4;
  uint64_t v23 = (void *)(v19[7] + 24 * v13);
  *uint64_t v23 = a1;
  v23[1] = a2;
  v23[2] = a3;
  uint64_t v24 = v19[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v19[2] = v26;

  id v27 = a4;
}

void sub_1000EA28C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = (void *)*v3;
  unint64_t v14 = sub_100008C68(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1000EAD9C();
    goto LABEL_7;
  }
  sub_1000E830C(v17, a3 & 1);
  unint64_t v22 = sub_100008C68(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1000EAAA4(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1000EA434(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100008A90(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000EB034();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1000E8730(result, a4 & 1);
  uint64_t result = sub_100008A90(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v23;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000EA598(uint64_t a1, uint64_t a2, Swift::UInt32 a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100008D00(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000EB1E4();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      char v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *char v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a3;
    uint64_t v21 = (void *)(v18[7] + 16 * v12);
    *uint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      _OWORD v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1000E8A3C(result, a4 & 1);
  uint64_t result = sub_100008D00(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1000EA6D8(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_100008BE0(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1000EB394();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_1000E8D24(v13, a3 & 1);
  unint64_t v18 = sub_100008BE0(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t sub_1000EA810(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100008BE0(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000EB538();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 16 * v12;
      uint64_t result = sub_10000A5B8(*(void *)v19, *(void *)(v19 + 8));
      *(void *)uint64_t v19 = a1;
      *(void *)(v19 + 8) = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a3;
    BOOL v21 = (void *)(v18[7] + 16 * v12);
    *BOOL v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      _OWORD v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1000E923C(result, a4 & 1);
  uint64_t result = sub_100008BE0(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    unint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

_OWORD *sub_1000EA950(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100008A90(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1000EB6E4();
      goto LABEL_7;
    }
    sub_1000E9758(v15, a4 & 1);
    unint64_t v21 = sub_100008A90(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_10002BA5C((uint64_t)v19);
    return sub_100009A50(a1, v19);
  }
LABEL_13:
  sub_1000EAB5C(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_1000EAAA4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_1000EAB5C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_100009A50(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void *sub_1000EABC8()
{
  int64_t v1 = v0;
  sub_100009A0C(&qword_1001CBC70);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *int64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(void **)v19;
    unint64_t v21 = *(void *)(v19 + 8);
    char v22 = *(void **)(v19 + 16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    BOOL v23 = (void *)(*(void *)(v4 + 56) + v18);
    *BOOL v23 = v20;
    v23[1] = v21;
    v23[2] = v22;
    id v24 = v17;
    uint64_t result = sub_100009B50(v20, v21, v22);
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000EAD9C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009A0C(&qword_1001CBEE0);
  BOOL v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *BOOL v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1000EB034()
{
  uint64_t v1 = v0;
  sub_100009A0C(&qword_1001CBD30);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    void *v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000EB1E4()
{
  uint64_t v1 = v0;
  sub_100009A0C(&qword_1001CBF08);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    void *v22 = v21;
    v22[1] = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1000EB394()
{
  uint64_t v1 = v0;
  sub_100009A0C(&qword_1001C7288);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000EB538()
{
  uint64_t v1 = v0;
  sub_100009A0C(&qword_1001C7280);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    long long v16 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v16;
    id result = (void *)sub_100009B90(v16, *((unint64_t *)&v16 + 1));
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000EB6E4()
{
  uint64_t v1 = v0;
  sub_100009A0C(&qword_1001C7240);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_100011954(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_100009A50(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000EB8CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000E63F8();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1000EBF14(v8);
  uint64_t *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1000EBA5C(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  Hasher.init(_seed:)();
  sub_10000ACA8();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    uint64_t v9 = a1;
    while (1)
    {
      unint64_t v10 = 0x8000000100153F60;
      switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
      {
        case 1:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 2:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 3:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 4:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 5:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 6:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 7:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 8:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 9:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xA:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xB:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xC:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xD:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xE:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0xF:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0x10:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0x11:
          BOOL v11 = "51-86AA-8D9728F8D66C";
          goto LABEL_22;
        case 0x12:
          BOOL v11 = "51-86AA-8D9728F8D66C";
LABEL_22:
          unint64_t v10 = (unint64_t)v11 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v12 = 0x8000000100153F60;
      switch(v9)
      {
        case 1:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 2:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 3:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 4:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 5:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 6:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 7:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 8:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 9:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 10:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 11:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 12:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 13:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 14:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 15:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 16:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 17:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
          goto LABEL_42;
        case 18:
          uint64_t v13 = "51-86AA-8D9728F8D66C";
LABEL_42:
          unint64_t v12 = (unint64_t)v13 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v10 == v12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_49;
      }
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        break;
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_46;
      }
    }
    swift_bridgeObjectRelease();
LABEL_49:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v2;
    uint64_t v19 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000E65AC();
      uint64_t v17 = v19;
    }
    uint64_t v15 = *(unsigned __int8 *)(*(void *)(v17 + 48) + v7);
    sub_1000EC0DC(v7);
    uint64_t *v2 = v19;
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_46:
    swift_bridgeObjectRelease();
    return 19;
  }
  return v15;
}

unint64_t sub_1000EBF14(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          char v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    id result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1000EC0DC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        unint64_t v10 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v2);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *uint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    id result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x1000EC4A0);
  }
  *(void *)(v3 + 16) = v16;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t (*sub_1000EC4EC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000EC608(v6, a2, a3);
  return sub_1000EC554;
}

uint64_t (*sub_1000EC558(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000EC688(v6, a2, a3);
  return sub_1000EC554;
}

void sub_1000EC5C0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_1000EC608(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1000F5CF0;
  }
  __break(1u);
  return result;
}

void (*sub_1000EC688(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1000EC708;
  }
  __break(1u);
  return result;
}

void sub_1000EC708(id *a1)
{
}

uint64_t sub_1000EC710(uint64_t a1, uint64_t a2)
{
  uint64_t result = __DataStorage._bytes.getter();
  if (!result || (uint64_t result = __DataStorage._offset.getter(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      __DataStorage._length.getter();
      return Data._Representation.append(contentsOf:)();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000EC7A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10002BAB8((unint64_t *)&unk_1001CBED0, &qword_1001CBEC8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100009A0C(&qword_1001CBEC8);
          uint64_t v12 = sub_1000EC4EC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100017EF4(0, &qword_1001CBEB0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EC9D8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10002BAB8(&qword_1001CBEF8, &qword_1001CBEF0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100009A0C(&qword_1001CBEF0);
          uint64_t v12 = sub_1000EC4EC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100017EF4(0, &qword_1001C9590);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000ECC0C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10002BAB8((unint64_t *)&unk_1001CBCF0, &qword_1001CBCE8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100009A0C(&qword_1001CBCE8);
          uint64_t v12 = sub_1000EC4EC(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100017EF4(0, (unint64_t *)&qword_1001C7250);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000ECE40(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10002BAB8(&qword_1001CBE48, &qword_1001CBE40);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100009A0C(&qword_1001CBE40);
          uint64_t v12 = sub_1000EC558(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100017EF4(0, (unint64_t *)&qword_1001C9478);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1000ED074@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, void *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_1000ED0B8(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  unint64_t v6 = a2;
  int64_t v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100017EF4(0, &qword_1001CBEB0);
    sub_1000A7C34(&qword_1001CBEB8, &qword_1001CBEB0);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v27;
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v11 = 0;
    goto LABEL_38;
  }
  int64_t v9 = 0;
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = a4 + 56;
  uint64_t v8 = ~v19;
  uint64_t v20 = -v19;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v10 = v21 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v11 = 0;
LABEL_38:
    int64_t v22 = v24;
LABEL_41:
    void *v22 = v4;
    v22[1] = v7;
    v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (void *)v11;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v11 = 0;
  int64_t v25 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_40;
      }
      sub_100017EF4(0, &qword_1001CBEB0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v25)
    {
      unint64_t v10 = 0;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    if (v16) {
      goto LABEL_23;
    }
    int64_t v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      unint64_t v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        int64_t v15 = v9 + 3;
        goto LABEL_23;
      }
      int64_t v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        unint64_t v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v17);
      if (!v16)
      {
        int64_t v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          unint64_t v10 = 0;
          int64_t v9 = v17;
          goto LABEL_40;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v15);
        if (!v16)
        {
          int64_t v18 = v9 + 6;
          while (v25 != v18)
          {
            unint64_t v16 = *(void *)(v7 + 8 * v18++);
            if (v16)
            {
              int64_t v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v10 = 0;
          int64_t v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v15 = v17;
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    id v14 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      uint64_t v11 = a3;
LABEL_40:
      uint64_t v8 = v23;
      int64_t v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void *sub_1000ED3C4(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void **)(*(void *)(a4 + 56) + 8 * v16);
    void *v11 = v20;
    if (v13 == v10)
    {
      id v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = v20;
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1000ED5C0(uint64_t a1, unint64_t a2)
{
  uint64_t v10[3] = &type metadata for Data;
  v10[4] = &protocol witness table for Data;
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = sub_10002B550(v10, (uint64_t)&type metadata for Data);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_100009B90(a1, a2);
      sub_100009B90(v5, v6);
      sub_1000EC710((int)v5, v5 >> 32);
      sub_10000A5B8(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_100009B90(a1, a2);
      swift_retain();
      swift_retain();
      sub_1000EC710(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_100009B90(a1, a2);
      Data._Representation.append(contentsOf:)();
      break;
  }
  return sub_10002BA5C((uint64_t)v10);
}

int64_t sub_1000ED7E4(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1000ED8C8(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_1000ED8DC(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_1000ED8F0(uint64_t a1, int a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_100017EF4(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_100017EF4(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v17;
  swift_unknownObjectRelease();
  Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v7 = (v7 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_23;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v14 = static NSObject.== infix(_:_:)();
    }
    while ((v14 & 1) == 0);
  }

LABEL_17:
  unint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v16 = v15;
}

uint64_t sub_1000EDB64(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

BOOL sub_1000EDBEC(uint64_t a1, char a2, unint64_t a3, char a4)
{
  if (a2)
  {
    switch(a1)
    {
      case 1:
        if ((a4 & 1) == 0 || a3 != 1) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2:
        if ((a4 & 1) == 0 || a3 != 2) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 3:
        if ((a4 & 1) == 0 || a3 != 3) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 4:
        if ((a4 & 1) == 0 || a3 != 4) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 5:
        if ((a4 & 1) == 0 || a3 <= 4) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if ((a4 & 1) == 0 || a3) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (a4 & 1) == 0 && a1 == a3;
  }
  return result;
}

uint64_t sub_1000EDCB8(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_1000EDD7C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Data.RangeReference();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1000EDDF8(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1000EDE7C(uint64_t a1)
{
  uint64_t v9 = sub_100009A0C(&qword_1001CBC78);
  uint64_t v10 = sub_10002BAB8((unint64_t *)&unk_1001CBC80, &qword_1001CBC78);
  v8[0] = a1;
  uint64_t v2 = sub_10002B550(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  unint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_1000E3F4C(v3, v4, &v7);
  uint64_t v5 = v7;
  sub_10002BA5C((uint64_t)v8);
  return v5;
}

void sub_1000EDF3C(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = sub_1001374C4(v6);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = [self mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100138304(v8, v9, v10);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_100138404(v12);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [self alertControllerWithTitle:v14 message:v15 preferredStyle:1];

  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = sub_100138404(v17);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  swift_retain();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v23[4] = sub_10006982C;
  v23[5] = v19;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_1000215A4;
  v23[3] = &unk_1001A0810;
  id v21 = _Block_copy(v23);
  swift_release();
  id v22 = [self actionWithTitle:v20 style:0 handler:v21];
  _Block_release(v21);

  [v16 addAction:v22];
  [v16 setPreferredAction:v22];
  [a1 presentViewController:v16 animated:1 completion:0];
}

void sub_1000EE29C(void *a1, uint64_t a2, uint64_t a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = sub_1001374C4(v6);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = [self mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = sub_100138304(v8, v9, v10);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRelease();

  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = sub_100138404(v12);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [self alertControllerWithTitle:v14 message:v15 preferredStyle:1];

  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = sub_100138404(v17);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  swift_retain();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v28[4] = sub_10006A018;
  void v28[5] = v19;
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 1107296256;
  v28[2] = sub_1000215A4;
  v28[3] = &unk_1001A03D8;
  id v21 = _Block_copy(v28);
  swift_release();
  id v22 = self;
  id v23 = [v22 actionWithTitle:v20 style:0 handler:v21];
  _Block_release(v21);

  [v16 addAction:v23];
  NSString v24 = String._bridgeToObjectiveC()();
  id v25 = sub_100138404(v24);

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = [v22 actionWithTitle:v26 style:1 handler:0];

  [v16 addAction:v27];
  [v16 setPreferredAction:v23];
  [a1 presentViewController:v16 animated:1 completion:0];
}

char *sub_1000EE690(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    NSString v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EE778(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100009A0C((uint64_t *)&unk_1001C9480);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EE884(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_100017EF4(0, &qword_1001CBEB0);
  sub_1000A7C34(&qword_1001CBEB8, &qword_1001CBEB0);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        unint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1000E4270(&v9, v6);
      }
    }
    else
    {
      id v7 = (void **)(a1 + 32);
      do
      {
        id v8 = *v7++;
        sub_1000E4270(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000EE9F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for URLQueryItem() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EEB50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1000F55F8();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1000E4510(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1000EEBC4(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_12;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    sub_100017EF4(0, (unint64_t *)&qword_1001C82F0);
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      unsigned int v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      char v7 = static NSObject.== infix(_:_:)();

      if ((v7 & 1) == 0)
      {
        ++v3;
        if (v6 != v2) {
          continue;
        }
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  char v7 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1000EECDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EEDD0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100009A0C(&qword_1001CBCE8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000EEEDC()
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012C4C(v0, (uint64_t)qword_1001CBA60);
  unint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "takeBKSAssertion()", v3, 2u);
    swift_slowDealloc();
  }

  id v4 = [self processInfo];
  id v5 = [v4 processIdentifier];

  id v6 = objc_allocWithZone((Class)BKSProcessAssertion);
  NSString v7 = String._bridgeToObjectiveC()();
  aBlock[4] = sub_1000CACA0;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000C378C;
  aBlock[3] = &unk_1001A0478;
  uint64_t v8 = _Block_copy(aBlock);
  swift_release();
  id v9 = [v6 initWithPID:v5 flags:15 reason:9 name:v7 withHandler:v8];
  _Block_release(v8);

  sub_100009A0C(&qword_1001C95E0);
  Optional.unwrap(_:file:line:)();

  return aBlock[0];
}

uint64_t sub_1000EF118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v3[5] = type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[7] = v5;
  v3[8] = v4;
  return _swift_task_switch(sub_1000EF1B8, v5, v4);
}

uint64_t sub_1000EF1B8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  MGGetBoolAnswer();

  uint64_t v2 = v0[4];
  uint64_t v3 = v0[3];
  uint64_t v17 = v0[2];
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = sub_1001374C4(v4);

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v0[9] = v8;
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = sub_1001374C4(v9);

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  v0[10] = v13;
  v0[11] = static MainActor.shared.getter();
  NSString v14 = (void *)swift_task_alloc();
  v0[12] = v14;
  v14[2] = v6;
  v14[3] = v8;
  Swift::Int v14[4] = v3;
  v14[5] = v2;
  v14[6] = v11;
  v14[7] = v13;
  v14[8] = v17;
  NSString v15 = (void *)swift_task_alloc();
  v0[13] = v15;
  *NSString v15 = v0;
  v15[1] = sub_100062D58;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)();
}

uint64_t sub_1000EF44C(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = type metadata accessor for PreferenceError();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Device();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ClientOrigin();
  v1[11] = v4;
  v1[12] = *(void *)(v4 - 8);
  v1[13] = swift_task_alloc();
  type metadata accessor for RequestOrigin();
  v1[14] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[15] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[16] = v6;
  v1[17] = v5;
  return _swift_task_switch(sub_1000EF634, v6, v5);
}

uint64_t sub_1000EF634()
{
  (*(void (**)(void, void, void))(v0[12] + 104))(v0[13], enum case for ClientOrigin.other(_:), v0[11]);
  RequestOrigin.init(_:)();
  type metadata accessor for Session();
  swift_allocObject();
  NSString v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  *NSString v1 = v0;
  v1[1] = sub_1000EF718;
  uint64_t v2 = v0[14];
  return Session.init(_:)(v2);
}

uint64_t sub_1000EF718(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[19] = a1;
  swift_task_dealloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[20] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1000EF86C;
  uint64_t v5 = v2[10];
  return Session.activeLocationSharingDevice(cached:)(v5, 1);
}

uint64_t sub_1000EF86C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_1000F02EC;
  }
  else {
    uint64_t v5 = sub_1000EF9A8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000EF9A8()
{
  if (Device.isThisDevice.getter())
  {
    swift_release();
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100012C4C(v1, (uint64_t)qword_1001CBA60);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Me device is this device.", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = v0[10];
    uint64_t v6 = v0[7];
    uint64_t v7 = v0[8];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = Device.deviceName.getter();
    uint64_t v12 = v11;
    v0[22] = v11;
    uint64_t v13 = (void *)swift_task_alloc();
    v0[23] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1000EFBB8;
    uint64_t v14 = v0[3];
    return sub_1000EF118(v14, v10, v12);
  }
}

uint64_t sub_1000EFBB8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_1000EFD10;
  }
  else {
    uint64_t v5 = sub_100063854;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000EFD10()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[10], v0[7]);
  uint64_t v1 = v0[24];
  v0[2] = v1;
  v0[25] = v1;
  swift_errorRetain();
  sub_100009A0C(&qword_1001CBC30);
  if (swift_dynamicCast())
  {
    if ((*(unsigned int (**)(void, void))(v0[5] + 88))(v0[6], v0[4]) == enum case for PreferenceError.missingMeDevice(_:))
    {
      swift_errorRelease();
      uint64_t v2 = (void *)swift_task_alloc();
      v0[26] = v2;
      void *v2 = v0;
      v2[1] = sub_1000EFF98;
      uint64_t v3 = v0[9];
      return Session.activeLocationSharingDevice(cached:)(v3, 0);
    }
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  }
  swift_errorRelease();
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CBA60);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "No active me device.", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = (void *)swift_task_alloc();
  v0[31] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1000641F8;
  uint64_t v9 = v0[3];
  return sub_1000EF118(v9, 0, 0);
}

uint64_t sub_1000EFF98()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_100064714;
  }
  else {
    uint64_t v5 = sub_1000F00D4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000F00D4()
{
  if (Device.isThisDevice.getter())
  {
    swift_release();
    if (qword_1001C7120 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100012C4C(v1, (uint64_t)qword_1001CBA60);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Me device is this device.", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v7 = v0[7];
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  else
  {
    uint64_t v10 = Device.deviceName.getter();
    uint64_t v12 = v11;
    v0[28] = v11;
    uint64_t v13 = (void *)swift_task_alloc();
    v0[29] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_100063EF8;
    uint64_t v14 = v0[3];
    return sub_1000EF118(v14, v10, v12);
  }
}

uint64_t sub_1000F02EC()
{
  uint64_t v1 = v0[21];
  v0[2] = v1;
  v0[25] = v1;
  swift_errorRetain();
  sub_100009A0C(&qword_1001CBC30);
  if (swift_dynamicCast())
  {
    if ((*(unsigned int (**)(void, void))(v0[5] + 88))(v0[6], v0[4]) == enum case for PreferenceError.missingMeDevice(_:))
    {
      swift_errorRelease();
      uint64_t v2 = (void *)swift_task_alloc();
      v0[26] = v2;
      void *v2 = v0;
      v2[1] = sub_1000EFF98;
      uint64_t v3 = v0[9];
      return Session.activeLocationSharingDevice(cached:)(v3, 0);
    }
    (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  }
  swift_errorRelease();
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CBA60);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "No active me device.", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = (void *)swift_task_alloc();
  v0[31] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1000641F8;
  uint64_t v9 = v0[3];
  return sub_1000EF118(v9, 0, 0);
}

void sub_1000F055C(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100009A0C(&qword_1001C95A8);
  __chkstk_darwin(v57);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for B389PresentationConfig.Mode(0);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v55 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v56 = (uint64_t)&v47 - v11;
  uint64_t v12 = sub_100009A0C(&qword_1001C9418);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v53 = (uint64_t)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  NSString v20 = (char *)&v47 - v19;
  __chkstk_darwin(v18);
  uint64_t v58 = (char *)&v47 - v21;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_100012C4C(v22, (uint64_t)qword_1001CBA60);
  id v23 = a1;
  NSString v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v52 = v5;
  uint64_t v54 = v8;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v49 = v14;
    uint64_t v28 = (uint8_t *)v27;
    os_log_type_t v48 = (void *)swift_slowAlloc();
    uint64_t v50 = v7;
    *(_DWORD *)uint64_t v28 = 138412290;
    id v60 = v23;
    id v29 = v23;
    uint64_t v51 = v2;
    int64_t v30 = v20;
    id v31 = v29;
    uint64_t v7 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v48 = v23;

    NSString v20 = v30;
    uint64_t v2 = v51;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "didConnect: %@", v28, 0xCu);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v14 = v49;
    swift_slowDealloc();
  }
  else
  {
  }
  id v32 = [v23 identifier];
  uint64_t v33 = (uint64_t)v58;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v34(v33, 0, 1, v2);
  uint64_t v35 = v59 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
  swift_beginAccess();
  sub_100009BE8(v35, (uint64_t)v14, &qword_1001C9418);
  uint64_t v36 = type metadata accessor for B389PresentationConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v14, 1, v36) == 1)
  {
    __break(1u);
    return;
  }
  uint64_t v37 = (uint64_t)&v14[*(int *)(v36 + 24)];
  uint64_t v38 = v56;
  sub_10002B7F8(v37, v56, type metadata accessor for B389PresentationConfig.Mode);
  uint64_t v39 = v55;
  sub_10002B7F8(v38, v55, type metadata accessor for B389PresentationConfig.Mode);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v20, v39, v2);
    v34((uint64_t)v20, 0, 1, v2);
  }
  else
  {
    v34((uint64_t)v20, 1, 1, v2);
    sub_100061E18(v39, type metadata accessor for B389PresentationConfig.Mode);
  }
  uint64_t v40 = v57;
  sub_100061E18(v38, type metadata accessor for B389PresentationConfig.Mode);
  uint64_t v41 = (uint64_t)&v7[*(int *)(v40 + 48)];
  sub_100009BE8(v33, (uint64_t)v7, (uint64_t *)&unk_1001C9450);
  sub_100009BE8((uint64_t)v20, v41, (uint64_t *)&unk_1001C9450);
  uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v42((uint64_t)v7, 1, v2) != 1)
  {
    uint64_t v44 = v53;
    sub_100009BE8((uint64_t)v7, v53, (uint64_t *)&unk_1001C9450);
    if (v42(v41, 1, v2) != 1)
    {
      uint64_t v45 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v52, v41, v2);
      sub_1000F4FF8((unint64_t *)&qword_1001CBD10, (void (*)(uint64_t))&type metadata accessor for UUID);
      LODWORD(v57) = dispatch thunk of static Equatable.== infix(_:_:)();
      int v46 = *(void (**)(char *, uint64_t))(v3 + 8);
      v46(v45, v2);
      sub_1000118F8((uint64_t)v20, (uint64_t *)&unk_1001C9450);
      sub_1000118F8(v33, (uint64_t *)&unk_1001C9450);
      v46((char *)v44, v2);
      sub_1000118F8((uint64_t)v7, (uint64_t *)&unk_1001C9450);
      uint64_t v43 = sub_100061E18((uint64_t)v14, type metadata accessor for B389PresentationConfig);
      if ((v57 & 1) == 0) {
        return;
      }
      goto LABEL_17;
    }
    sub_1000118F8((uint64_t)v20, (uint64_t *)&unk_1001C9450);
    sub_1000118F8(v33, (uint64_t *)&unk_1001C9450);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v44, v2);
LABEL_15:
    sub_1000118F8((uint64_t)v7, &qword_1001C95A8);
    sub_100061E18((uint64_t)v14, type metadata accessor for B389PresentationConfig);
    return;
  }
  sub_1000118F8((uint64_t)v20, (uint64_t *)&unk_1001C9450);
  sub_1000118F8(v33, (uint64_t *)&unk_1001C9450);
  if (v42(v41, 1, v2) != 1) {
    goto LABEL_15;
  }
  sub_1000118F8((uint64_t)v7, (uint64_t *)&unk_1001C9450);
  uint64_t v43 = sub_100061E18((uint64_t)v14, type metadata accessor for B389PresentationConfig);
LABEL_17:
  *(unsigned char *)(v59 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_connectionState) = 2;
  sub_1000C6930(v43);
}

void sub_1000F0D74(void *a1, uint64_t a2)
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CBA60);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    BOOL v26 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v9 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v26 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "didFailToConnect: %@", v8, 0xCu);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v10 = self;
  id v11 = [v10 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = sub_100138304(v11, v12, v13);

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  id v18 = [v10 mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = sub_100138304(v18, v19, v20);

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  sub_1000D9F08(v15, v17, a2, v22, v24);
  swift_bridgeObjectRelease();
  uint64_t v25 = swift_bridgeObjectRelease();
  sub_1000C6930(v25);
}

void sub_1000F1094(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (a2) {
    os_log_type_t v6 = static os_log_type_t.error.getter();
  }
  else {
    os_log_type_t v6 = static os_log_type_t.default.getter();
  }
  os_log_type_t v7 = v6;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100012C4C(v8, (uint64_t)qword_1001CBA60);
  id v9 = a1;
  swift_errorRetain();
  id v10 = v9;
  swift_errorRetain();
  id v11 = Logger.logObject.getter();
  if (os_log_type_enabled(v11, v7))
  {
    uint64_t v12 = swift_slowAlloc();
    NSString v13 = (void *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412546;
    id v14 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *NSString v13 = v10;

    *(_WORD *)(v12 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue();
      unint64_t v15 = Error.localizedDescription.getter();
      unint64_t v17 = v16;
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v15 = 0xD000000000000015;
      unint64_t v17 = 0x8000000100154E70;
    }
    sub_100025CA0(v15, v17, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v7, "didDisconnectPeripheral: %@, error: %s", (uint8_t *)v12, 0x16u);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_findMyFinalizeState) != 2)
  {
    NSString v19 = self;
    id v20 = [v19 mainBundle];
    NSString v21 = String._bridgeToObjectiveC()();
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = sub_100138304(v20, v21, v22);

    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    id v27 = [v19 mainBundle];
    NSString v28 = String._bridgeToObjectiveC()();
    NSString v29 = String._bridgeToObjectiveC()();
    id v30 = sub_100138304(v27, v28, v29);

    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;

    sub_1000D9F08(v24, v26, a2, v31, v33);
    swift_bridgeObjectRelease();
    uint64_t v18 = swift_bridgeObjectRelease();
  }
  sub_1000C6930(v18);
}

void sub_1000F14D8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100012C4C(v6, (uint64_t)qword_1001CBA60);
  id v7 = a1;
  id v8 = a2;
  id v9 = v7;
  id v10 = v8;
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    id v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412546;
    os_log_type_t type = v12;
    id v15 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v14 = v9;

    *(_WORD *)(v13 + 12) = 2112;
    id v16 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v14[1] = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, type, "didLosePeripheral: %@, forType: %@", (uint8_t *)v13, 0x16u);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (v3[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_didTapStart] == 1)
  {
    if (v3[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_findMyFinalizeState] != 2)
    {
      unint64_t v17 = self;
      id v18 = [v17 mainBundle];
      NSString v19 = String._bridgeToObjectiveC()();
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = sub_100138304(v18, v19, v20);

      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;

      id v25 = [v17 mainBundle];
      NSString v26 = String._bridgeToObjectiveC()();
      NSString v27 = String._bridgeToObjectiveC()();
      id v28 = sub_100138304(v25, v26, v27);

      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v30;

      sub_1000D9F08(v22, v24, 0, v29, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    [v3 dismiss:7];
  }
  sub_1000C72CC(0);
}

void sub_1000F188C(void *a1, uint64_t a2)
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100012C4C(v4, (uint64_t)qword_1001CBA60);
  id v5 = a1;
  swift_errorRetain();
  id v6 = v5;
  swift_errorRetain();
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    id v10 = (void *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    if (a1) {
      id v11 = v6;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v10 = a1;

    *(_WORD *)(v9 + 12) = 2080;
    if (a2)
    {
      swift_getErrorValue();
      unint64_t v12 = Error.localizedDescription.getter();
      unint64_t v14 = v13;
    }
    else
    {
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v12 = 0xD000000000000015;
      unint64_t v14 = 0x8000000100154E70;
    }
    sub_100025CA0(v12, v14, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "peerDidFailToCompletePairing: %@, error: %s", (uint8_t *)v9, 0x16u);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }

  id v15 = self;
  id v16 = [v15 mainBundle];
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = sub_100138304(v16, v17, v18);

  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v22 = v21;

  id v23 = [v15 mainBundle];
  NSString v24 = String._bridgeToObjectiveC()();
  NSString v25 = String._bridgeToObjectiveC()();
  id v26 = sub_100138304(v23, v24, v25);

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;

  sub_1000D9F08(v20, v22, a2, v27, v29);
  swift_bridgeObjectRelease();
  uint64_t v30 = swift_bridgeObjectRelease();
  sub_1000C6930(v30);
}

void sub_1000F1CE0(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v54 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  os_log_type_t v48 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100009A0C(&qword_1001C95A8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for B389PresentationConfig.Mode(0);
  uint64_t v7 = __chkstk_darwin(v50);
  uint64_t v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v57 = (uint64_t)&v46 - v10;
  uint64_t v11 = sub_100009A0C(&qword_1001C9418);
  __chkstk_darwin(v11 - 8);
  uint64_t v55 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v49 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  NSString v18 = (char *)&v46 - v17;
  __chkstk_darwin(v16);
  uint64_t v53 = (char *)&v46 - v19;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100012C4C(v20, (uint64_t)qword_1001CBA60);
  id v21 = a1;
  unint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  BOOL v24 = os_log_type_enabled(v22, v23);
  uint64_t v51 = v9;
  uint64_t v52 = v4;
  if (v24)
  {
    int v46 = v18;
    uint64_t v47 = v6;
    NSString v25 = (uint8_t *)swift_slowAlloc();
    id v26 = (void *)swift_slowAlloc();
    *(_DWORD *)NSString v25 = 138412290;
    if (a1)
    {
      id v58 = v21;
      id v27 = v21;
    }
    else
    {
      a1 = 0;
      id v58 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v26 = a1;

    _os_log_impl((void *)&_mh_execute_header, v22, v23, "peerDidCompletePairing: %@", v25, 0xCu);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    NSString v18 = v46;
    id v6 = v47;
  }
  else
  {
  }
  uint64_t v28 = (uint64_t)v55;
  if (!a1)
  {
    __break(1u);
LABEL_24:
    __break(1u);
  }
  id v29 = [v21 identifier];
  uint64_t v30 = (uint64_t)v53;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v31 = v54;
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
  v32(v30, 0, 1, v2);
  uint64_t v33 = v56 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
  swift_beginAccess();
  sub_100009BE8(v33, v28, &qword_1001C9418);
  uint64_t v34 = type metadata accessor for B389PresentationConfig(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v28, 1, v34) == 1) {
    goto LABEL_24;
  }
  uint64_t v35 = v57;
  sub_10002B7F8(v28 + *(int *)(v34 + 24), v57, type metadata accessor for B389PresentationConfig.Mode);
  uint64_t v36 = (uint64_t)v51;
  sub_10002B7F8(v35, (uint64_t)v51, type metadata accessor for B389PresentationConfig.Mode);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v18, v36, v2);
    v32((uint64_t)v18, 0, 1, v2);
  }
  else
  {
    v32((uint64_t)v18, 1, 1, v2);
    sub_100061E18(v36, type metadata accessor for B389PresentationConfig.Mode);
  }
  uint64_t v37 = v52;
  sub_100061E18(v57, type metadata accessor for B389PresentationConfig.Mode);
  uint64_t v38 = (uint64_t)&v6[*(int *)(v37 + 48)];
  sub_100009BE8(v30, (uint64_t)v6, (uint64_t *)&unk_1001C9450);
  sub_100009BE8((uint64_t)v18, v38, (uint64_t *)&unk_1001C9450);
  uint64_t v39 = (uint64_t)v18;
  uint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
  if (v40((uint64_t)v6, 1, v2) != 1)
  {
    uint64_t v42 = v49;
    sub_100009BE8((uint64_t)v6, v49, (uint64_t *)&unk_1001C9450);
    if (v40(v38, 1, v2) != 1)
    {
      uint64_t v43 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v48, v38, v2);
      sub_1000F4FF8((unint64_t *)&qword_1001CBD10, (void (*)(uint64_t))&type metadata accessor for UUID);
      LODWORD(v57) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v44 = *(void (**)(char *, uint64_t))(v31 + 8);
      v44(v43, v2);
      sub_1000118F8(v39, (uint64_t *)&unk_1001C9450);
      sub_1000118F8(v30, (uint64_t *)&unk_1001C9450);
      v44((char *)v42, v2);
      sub_1000118F8((uint64_t)v6, (uint64_t *)&unk_1001C9450);
      uint64_t v41 = sub_100061E18(v28, type metadata accessor for B389PresentationConfig);
      if ((v57 & 1) == 0) {
        return;
      }
      goto LABEL_21;
    }
    sub_1000118F8(v39, (uint64_t *)&unk_1001C9450);
    sub_1000118F8(v30, (uint64_t *)&unk_1001C9450);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v42, v2);
LABEL_19:
    sub_1000118F8((uint64_t)v6, &qword_1001C95A8);
    sub_100061E18(v28, type metadata accessor for B389PresentationConfig);
    return;
  }
  sub_1000118F8(v39, (uint64_t *)&unk_1001C9450);
  sub_1000118F8(v30, (uint64_t *)&unk_1001C9450);
  if (v40(v38, 1, v2) != 1) {
    goto LABEL_19;
  }
  sub_1000118F8((uint64_t)v6, (uint64_t *)&unk_1001C9450);
  uint64_t v41 = sub_100061E18(v28, type metadata accessor for B389PresentationConfig);
LABEL_21:
  uint64_t v45 = v56 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairState;
  *(void *)uint64_t v45 = 3;
  *(unsigned char *)(v45 + 8) = 1;
  sub_1000C6930(v41);
}

uint64_t sub_1000F253C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v76 = a2;
  uint64_t v85 = sub_100009A0C(&qword_1001C95A8);
  __chkstk_darwin(v85);
  uint64_t v89 = (uint64_t)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for B389PresentationConfig.Mode(0);
  uint64_t v6 = __chkstk_darwin(v82);
  uint64_t v83 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v84 = (uint64_t)&v72 - v8;
  uint64_t v9 = sub_100009A0C(&qword_1001C9418);
  __chkstk_darwin(v9 - 8);
  uint64_t v87 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100009A0C((uint64_t *)&unk_1001C9450);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v81 = (uint64_t)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v72 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v88 = (uint64_t)&v72 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v72 - v19;
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v86 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v75 = (char *)&v72 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v72 - v27;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v30 = sub_100012C4C(v29, (uint64_t)qword_1001CBA60);
  id v31 = a1;
  uint64_t v78 = v30;
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v90 = v28;
  uint64_t v80 = v3;
  uint64_t v77 = v16;
  if (v34)
  {
    uint64_t v73 = v21;
    unint64_t v79 = v20;
    uint64_t v74 = v22;
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 138412290;
    if (a1)
    {
      id v93 = v31;
      id v37 = v31;
    }
    else
    {
      id v93 = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v36 = a1;

    _os_log_impl((void *)&_mh_execute_header, v32, v33, "peerDidRequestPairing: %@", v35, 0xCu);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v22 = v74;
    uint64_t v20 = v79;
    uint64_t v3 = v80;
    uint64_t v21 = v73;
  }
  else
  {
  }
  uint64_t v38 = v88;
  if (!a1)
  {
    __break(1u);
LABEL_26:
    __break(1u);
  }
  id v39 = [v31 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v40 = v3 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig;
  swift_beginAccess();
  uint64_t v41 = v87;
  sub_100009BE8(v40, v87, &qword_1001C9418);
  uint64_t v42 = type metadata accessor for B389PresentationConfig(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48))(v41, 1, v42) == 1) {
    goto LABEL_26;
  }
  uint64_t v43 = v84;
  sub_10002B7F8(v41 + *(int *)(v42 + 24), v84, type metadata accessor for B389PresentationConfig.Mode);
  uint64_t v44 = v83;
  sub_10002B7F8(v43, v83, type metadata accessor for B389PresentationConfig.Mode);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v20, v44, v21);
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v45(v20, 0, 1, v21);
  }
  else
  {
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v45(v20, 1, 1, v21);
    sub_100061E18(v44, type metadata accessor for B389PresentationConfig.Mode);
  }
  sub_100061E18(v43, type metadata accessor for B389PresentationConfig.Mode);
  sub_100061E18(v41, type metadata accessor for B389PresentationConfig);
  int v46 = *(void (**)(uint64_t, char *, uint64_t))(v22 + 16);
  v46(v38, v90, v21);
  v45((char *)v38, 0, 1, v21);
  uint64_t v47 = v89;
  uint64_t v48 = v89 + *(int *)(v85 + 48);
  sub_100009BE8(v38, v89, (uint64_t *)&unk_1001C9450);
  sub_100009BE8((uint64_t)v20, v48, (uint64_t *)&unk_1001C9450);
  uint64_t v49 = v38;
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v50(v47, 1, v21) == 1)
  {
    sub_1000118F8(v49, (uint64_t *)&unk_1001C9450);
    int v51 = v50(v48, 1, v21);
    uint64_t v52 = v86;
    if (v51 == 1)
    {
      uint64_t v53 = sub_1000118F8(v89, (uint64_t *)&unk_1001C9450);
      uint64_t v54 = v90;
LABEL_21:
      uint64_t v59 = v80 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_pairState;
      *(void *)uint64_t v59 = v76;
      *(unsigned char *)(v59 + 8) = 0;
      sub_1000C6930(v53);
      sub_1000118F8((uint64_t)v20, (uint64_t *)&unk_1001C9450);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v54, v21);
    }
    goto LABEL_19;
  }
  uint64_t v55 = (uint64_t)v77;
  sub_100009BE8(v47, (uint64_t)v77, (uint64_t *)&unk_1001C9450);
  if (v50(v48, 1, v21) == 1)
  {
    sub_1000118F8(v88, (uint64_t *)&unk_1001C9450);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v55, v21);
    uint64_t v52 = v86;
LABEL_19:
    sub_1000118F8(v89, &qword_1001C95A8);
    uint64_t v54 = v90;
    goto LABEL_22;
  }
  uint64_t v56 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v75, v48, v21);
  sub_1000F4FF8((unint64_t *)&qword_1001CBD10, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v57 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v58 = *(void (**)(char *, uint64_t))(v22 + 8);
  v58(v56, v21);
  sub_1000118F8(v88, (uint64_t *)&unk_1001C9450);
  v58((char *)v55, v21);
  uint64_t v53 = sub_1000118F8(v89, (uint64_t *)&unk_1001C9450);
  uint64_t v52 = v86;
  uint64_t v54 = v90;
  if (v57) {
    goto LABEL_21;
  }
LABEL_22:
  v46((uint64_t)v52, v54, v21);
  uint64_t v61 = v81;
  sub_100009BE8((uint64_t)v20, v81, (uint64_t *)&unk_1001C9450);
  uint64_t v62 = Logger.logObject.getter();
  os_log_type_t v63 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v62, v63))
  {
    uint64_t v64 = swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    uint64_t v92 = v89;
    *(_DWORD *)uint64_t v64 = 136315394;
    sub_1000F4FF8(&qword_1001C9460, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v91 = sub_100025CA0(v65, v66, &v92);
    unint64_t v79 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v67 = *(void (**)(char *, uint64_t))(v22 + 8);
    v67(v52, v21);
    *(_WORD *)(v64 + 12) = 2080;
    uint64_t v68 = v81;
    unint64_t v69 = sub_1000C2F74();
    uint64_t v91 = sub_100025CA0(v69, v70, &v92);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000118F8(v68, (uint64_t *)&unk_1001C9450);
    _os_log_impl((void *)&_mh_execute_header, v62, v63, "Identifier mismatch, skip pairing request: %s != %s", (uint8_t *)v64, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000118F8((uint64_t)v79, (uint64_t *)&unk_1001C9450);
    return ((uint64_t (*)(char *, uint64_t))v67)(v90, v21);
  }
  else
  {

    sub_1000118F8(v61, (uint64_t *)&unk_1001C9450);
    int v71 = *(void (**)(char *, uint64_t))(v22 + 8);
    v71(v52, v21);
    sub_1000118F8((uint64_t)v20, (uint64_t *)&unk_1001C9450);
    return ((uint64_t (*)(char *, uint64_t))v71)(v54, v21);
  }
}

void sub_1000F3094(void *a1)
{
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100012C4C(v2, (uint64_t)qword_1001CBA60);
  id v3 = a1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    v50[0] = (unint64_t)v3;
    id v8 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v7 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "didDiscoverCharacteristicsFor: %@\n\n", v6, 0xCu);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v9 = [v3 services];
  if (!v9)
  {
    unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_28;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_29;
    }
    goto LABEL_39;
  }
  uint64_t v10 = v9;
  sub_100017EF4(0, (unint64_t *)&unk_1001C95B0);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (v12)
  {
    if (v12 < 1) {
      goto LABEL_44;
    }
    for (uint64_t i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(v11 + 8 * i + 32);
      }
      uint64_t v16 = v15;
      id v17 = [v15 characteristics];
      if (v17)
      {
        uint64_t v18 = v17;
        sub_100017EF4(0, (unint64_t *)&qword_1001C7250);
        uint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_1000E3424(0, v13[2] + 1, 1, v13);
        }
        unint64_t v21 = v13[2];
        unint64_t v20 = v13[3];
        if (v21 >= v20 >> 1) {
          uint64_t v13 = sub_1000E3424((void *)(v20 > 1), v21 + 1, 1, v13);
        }
        v13[2] = v21 + 1;
        v13[v21 + 4] = v19;
      }
      else
      {
      }
    }
  }
  swift_bridgeObjectRelease_n();
  v50[0] = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v22 = v13[2];
  if (v22)
  {
    swift_bridgeObjectRetain();
    for (uint64_t j = 0; j != v22; ++j)
    {
      unint64_t v24 = swift_bridgeObjectRetain();
      sub_1000E7B80(v24, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000ECC0C);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  unint64_t v25 = v50[0];
  if (v50[0] >> 62) {
    goto LABEL_38;
  }
LABEL_28:
  uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v26)
  {
LABEL_29:
    if (v26 >= 1)
    {
      uint64_t v27 = 0;
      uint64_t v28 = (uint64_t *)(v47 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars);
      uint64_t v29 = &selRef_defaultFontDescriptorWithTextStyle_;
      uint64_t v48 = (uint64_t *)(v47 + OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars);
      do
      {
        id v32 = *(id *)(v25 + 8 * v27 + 32);
        id v33 = [v32 v29[140]];
        id v34 = [v33 UUIDString];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        char v35 = sub_10000B800();
        if (v35 != 19)
        {
          char v36 = v35;
          swift_beginAccess();
          int v37 = sub_1000EBA5C(v36);
          swift_endAccess();
          if (v37 != 19)
          {
            uint64_t v38 = Logger.logObject.getter();
            os_log_type_t v39 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v38, v39))
            {
              uint64_t v40 = swift_slowAlloc();
              v50[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v40 = 136315138;
              uint64_t v41 = sub_10000AE10(v36);
              *(void *)(v40 + 4) = sub_100025CA0(v41, v42, (uint64_t *)v50);
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v38, v39, "Discovered %s", (uint8_t *)v40, 0xCu);
              swift_arrayDestroy();
              uint64_t v28 = v48;
              swift_slowDealloc();
              swift_slowDealloc();
            }

            swift_beginAccess();
            id v30 = v32;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v49 = *v28;
            *uint64_t v28 = 0x8000000000000000;
            sub_1000EA6D8((uint64_t)v30, v36, isUniquelyReferenced_nonNull_native);
            *uint64_t v28 = v49;
            swift_bridgeObjectRelease();
            swift_endAccess();
            uint64_t v29 = &selRef_defaultFontDescriptorWithTextStyle_;
          }
        }
        ++v27;
      }
      while (v26 != v27);
      goto LABEL_39;
    }
    __break(1u);
LABEL_44:
    __break(1u);
    return;
  }
LABEL_39:
  uint64_t v43 = swift_bridgeObjectRelease();
  sub_1000C6930(v43);
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v44, v45))
  {
    int v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v46 = 0;
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "done iterating chars", v46, 2u);
    swift_slowDealloc();
  }
}

void sub_1000F3768(void *a1, void *a2)
{
  uint64_t v4 = sub_100009A0C(&qword_1001C9418);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(uint8_t **)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint8_t *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [a2 value];
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v127 = v8;
    uint64_t v129 = v14;
    unint64_t v130 = v12;
    Swift::String v132 = (void *)v11;
    id v128 = a1;
    uint64_t v17 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v133 = v18;

    id v19 = [a2 UUID];
    NSString v20 = String._bridgeToObjectiveC()();
    unint64_t v21 = self;
    id v22 = [v21 UUIDWithString:v20];

    sub_100017EF4(0, (unint64_t *)&unk_1001C94B0);
    char v23 = static NSObject.== infix(_:_:)();

    id v131 = v19;
    if (v23)
    {
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      uint64_t v24 = (uint64_t)v132;
      uint64_t v25 = sub_100012C4C((uint64_t)v132, (uint64_t)qword_1001CBA60);
      unint64_t v26 = v133;
      sub_100009B90(v17, v133);
      sub_100009B90(v17, v26);
      sub_100009B90(v17, v26);
      sub_100009B90(v17, v26);
      uint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v6 = (char *)swift_slowAlloc();
        uint64_t v138 = swift_slowAlloc();
        *(_DWORD *)uint64_t v6 = 136315394;
        sub_100009B90(v17, v26);
        uint64_t v29 = Data.description.getter();
        id v19 = (id)v25;
        unint64_t v31 = v30;
        sub_10000A5B8(v17, v133);
        *(void *)&long long v137 = sub_100025CA0(v29, v31, &v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10000A5B8(v17, v133);
        sub_10000A5B8(v17, v133);
        *((_WORD *)v6 + 6) = 2048;
        uint64_t v32 = Data.hashValue.getter();
        sub_10000A5B8(v17, v133);
        *(void *)&long long v137 = v32;
        uint64_t v25 = (uint64_t)v19;
        unint64_t v26 = v133;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10000A5B8(v17, v26);
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "didUpdateValueFor s1UUID: %s, hash: %ld", (uint8_t *)v6, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10000A5B8(v17, v26);
        sub_10000A5B8(v17, v26);
        sub_10000A5B8(v17, v26);
        sub_10000A5B8(v17, v26);
      }

      uint64_t v48 = &v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_storeS1];
      swift_beginAccess();
      if (*((void *)v48 + 1) >> 60 != 15)
      {
        swift_beginAccess();
        if (*((void *)v48 + 1) >> 60 == 15)
        {
LABEL_102:
          __break(1u);
LABEL_103:
          __break(1u);
LABEL_104:

          __break(1u);
LABEL_105:
          __break(1u);
          swift_unexpectedError();
          __break(1u);
LABEL_106:
          __break(1u);
          JUMPOUT(0x1000F4B44);
        }
        Data.append(_:)();
        swift_endAccess();
LABEL_48:
        (*((void (**)(uint8_t *, uint64_t, uint64_t))v130 + 2))(v129, v25, v24);
        uint64_t v6 = v134;
        uint64_t v91 = Logger.logObject.getter();
        os_log_type_t v92 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v91, v92))
        {
          id v93 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v93 = 134217984;
          unint64_t v94 = *((void *)v48 + 1);
          if (v94 >> 60 == 15) {
            goto LABEL_104;
          }
          uint64_t v95 = *(void *)v48;
          id v96 = v93;
          uint64_t v97 = 0;
          switch(v94 >> 62)
          {
            case 1uLL:
              LODWORD(v97) = HIDWORD(v95) - v95;
              if (__OFSUB__(HIDWORD(v95), v95)) {
                goto LABEL_94;
              }
              uint64_t v97 = (int)v97;
LABEL_56:
              *(void *)&long long v137 = v97;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              _os_log_impl((void *)&_mh_execute_header, v91, v92, "Current s1 length: %ld", v96, 0xCu);
              swift_slowDealloc();
              break;
            case 2uLL:
              uint64_t v99 = *(void *)(v95 + 16);
              uint64_t v98 = *(void *)(v95 + 24);
              BOOL v77 = __OFSUB__(v98, v99);
              uint64_t v97 = v98 - v99;
              if (!v77) {
                goto LABEL_56;
              }
              goto LABEL_95;
            case 3uLL:
              goto LABEL_56;
            default:
              uint64_t v97 = BYTE6(v94);
              goto LABEL_56;
          }
        }
        else
        {

          uint64_t v91 = v6;
        }

        (*((void (**)(uint8_t *, uint64_t))v130 + 1))(v129, v24);
        unint64_t v100 = *((void *)v48 + 1);
        if (v100 >> 60 != 15)
        {
          uint64_t v101 = *(void *)v48;
          uint64_t v102 = 0;
          switch(v100 >> 62)
          {
            case 1uLL:
              LODWORD(v102) = HIDWORD(v101) - v101;
              if (!__OFSUB__(HIDWORD(v101), v101))
              {
                uint64_t v102 = (int)v102;
LABEL_63:
                char v105 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_targetS1Length];
                if ((v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_targetS1Length + 8] & 1) == 0)
                {
                  if (*(void *)v105 < v102)
                  {
                    id v106 = Logger.logObject.getter();
                    os_log_type_t v107 = static os_log_type_t.fault.getter();
                    if (os_log_type_enabled(v106, v107))
                    {
                      unint64_t v108 = (uint8_t *)swift_slowAlloc();
                      *(_WORD *)unint64_t v108 = 0;
                      _os_log_impl((void *)&_mh_execute_header, v106, v107, "length went over", v108, 2u);
                      swift_slowDealloc();
                    }
                  }
                  unint64_t v109 = *((void *)v48 + 1);
                  if (v109 >> 60 != 15)
                  {
                    if ((v105[8] & 1) == 0)
                    {
                      uint64_t v110 = *(void *)v48;
                      uint64_t v111 = *(void *)v105;
                      sub_100009B90(*(void *)v48, *((void *)v48 + 1));
                      sub_10001F1D8(v111, v110, v109, (uint64_t *)&v137);
                      uint64_t v112 = *(void *)v48;
                      unint64_t v113 = *((void *)v48 + 1);
                      *(_OWORD *)uint64_t v48 = v137;
                      uint64_t v54 = sub_10002B7E4(v112, v113);
                      unint64_t v114 = *((void *)v48 + 1);
                      if (v114 >> 60 != 15)
                      {
                        uint64_t v115 = *(void *)v48;
                        uint64_t v116 = 0;
                        switch(v114 >> 62)
                        {
                          case 1uLL:
                            LODWORD(v116) = HIDWORD(v115) - v115;
                            if (__OFSUB__(HIDWORD(v115), v115)) {
                              goto LABEL_90;
                            }
                            uint64_t v116 = (int)v116;
LABEL_76:
                            if (v105[8]) {
                              goto LABEL_101;
                            }
                            id v19 = v131;
                            if (v116 < *(void *)v105)
                            {
                              uint64_t v119 = &v6[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_discoveredChars];
                              swift_beginAccess();
                              uint64_t v120 = *(void *)v119;
                              if (*(void *)(*(void *)v119 + 16))
                              {
                                swift_bridgeObjectRetain();
                                unint64_t v121 = sub_100008BE0(1u);
                                if (v122)
                                {
                                  char v123 = *(void **)(*(void *)(v120 + 56) + 8 * v121);
                                  id v124 = v123;
                                }
                                else
                                {
                                  char v123 = 0;
                                }
                                swift_bridgeObjectRelease();
                              }
                              else
                              {
                                char v123 = 0;
                              }
                              unint64_t v135 = v123;
                              sub_100009A0C((uint64_t *)&unk_1001CBC50);
                              Optional.unwrap(_:file:line:)();

                              id v125 = v136;
                              [v128 readValueForCharacteristic:v136];
                            }
                            break;
                          case 2uLL:
                            uint64_t v118 = *(void *)(v115 + 16);
                            uint64_t v117 = *(void *)(v115 + 24);
                            BOOL v77 = __OFSUB__(v117, v118);
                            uint64_t v116 = v117 - v118;
                            if (!v77) {
                              goto LABEL_76;
                            }
                            goto LABEL_91;
                          case 3uLL:
                            goto LABEL_76;
                          default:
                            uint64_t v116 = BYTE6(v114);
                            goto LABEL_76;
                        }
                        goto LABEL_85;
                      }
                      goto LABEL_100;
                    }
LABEL_99:
                    __break(1u);
LABEL_100:
                    __break(1u);
LABEL_101:
                    __break(1u);
                    goto LABEL_102;
                  }
LABEL_98:
                  __break(1u);
                  goto LABEL_99;
                }
LABEL_97:
                __break(1u);
                goto LABEL_98;
              }
              __break(1u);
LABEL_89:
              __break(1u);
LABEL_90:
              __break(1u);
LABEL_91:
              __break(1u);
LABEL_92:
              __break(1u);
LABEL_93:
              __break(1u);
LABEL_94:
              __break(1u);
LABEL_95:
              __break(1u);
              break;
            case 2uLL:
              uint64_t v104 = *(void *)(v101 + 16);
              uint64_t v103 = *(void *)(v101 + 24);
              BOOL v77 = __OFSUB__(v103, v104);
              uint64_t v102 = v103 - v104;
              if (!v77) {
                goto LABEL_63;
              }
              goto LABEL_89;
            case 3uLL:
              goto LABEL_63;
            default:
              uint64_t v102 = BYTE6(v100);
              goto LABEL_63;
          }
        }
        __break(1u);
        goto LABEL_97;
      }
      uint64_t v49 = &v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_targetS1Length];
      if (v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_targetS1Length + 8] == 1)
      {
        uint64_t v50 = v25;
        unint64_t v51 = v26 >> 62;
        switch(v26 >> 62)
        {
          case 1uLL:
            LODWORD(v52) = HIDWORD(v17) - v17;
            if (__OFSUB__(HIDWORD(v17), v17)) {
              goto LABEL_92;
            }
            uint64_t v52 = (int)v52;
LABEL_37:
            if (v52 < 2) {
              goto LABEL_105;
            }
            char v78 = Data.subscript.getter();
            char v79 = Data.subscript.getter();
            sub_100009A0C(&qword_1001C8348);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_10017C360;
            *(unsigned char *)(inited + 32) = v78;
            *(unsigned char *)(inited + 33) = v79;
            unsigned __int16 v81 = sub_1000292D0(inited);
            swift_setDeallocating();
            uint64_t v82 = Logger.logObject.getter();
            uint64_t v83 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v82, (os_log_type_t)v83))
            {
              uint64_t v84 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v84 = 33554688;
              unint64_t v26 = v133;
              LOWORD(v137) = v81;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl((void *)&_mh_execute_header, v82, (os_log_type_t)v83, "s1 target length: %hu", v84, 6u);
              swift_slowDealloc();
            }

            *(void *)uint64_t v49 = v81;
            v49[8] = 0;
            if (v51)
            {
              uint64_t v24 = (uint64_t)v132;
              if (v51 == 1) {
                uint64_t v85 = v17 >> 32;
              }
              else {
                uint64_t v85 = *(void *)(v17 + 24);
              }
              sub_100009B90(v17, v26);
            }
            else
            {
              uint64_t v85 = BYTE6(v26);
              uint64_t v24 = (uint64_t)v132;
            }
            uint64_t v25 = v50;
            if (v85 < 2) {
              goto LABEL_106;
            }
            uint64_t v86 = Data._Representation.subscript.getter();
            uint64_t v88 = v87;
            sub_10000A5B8(v17, v26);
            uint64_t v89 = *(void *)v48;
            unint64_t v90 = *((void *)v48 + 1);
            *(void *)uint64_t v48 = v86;
            *((void *)v48 + 1) = v88;
            sub_10002B7E4(v89, v90);
            break;
          case 2uLL:
            uint64_t v76 = *(void *)(v17 + 16);
            uint64_t v75 = *(void *)(v17 + 24);
            BOOL v77 = __OFSUB__(v75, v76);
            uint64_t v52 = v75 - v76;
            if (!v77) {
              goto LABEL_37;
            }
            goto LABEL_93;
          case 3uLL:
            goto LABEL_105;
          default:
            uint64_t v52 = BYTE6(v26);
            goto LABEL_37;
        }
        goto LABEL_48;
      }
      __break(1u);
      goto LABEL_87;
    }
    id v38 = v19;
    NSString v39 = String._bridgeToObjectiveC()();
    id v40 = [v21 UUIDWithString:v39];

    char v41 = static NSObject.== infix(_:_:)();
    if (v41)
    {
      unint64_t v42 = v133;
      if (qword_1001C7120 != -1) {
        swift_once();
      }
      sub_100012C4C((uint64_t)v132, (uint64_t)qword_1001CBA60);
      sub_100009B90(v17, v42);
      sub_100009B90(v17, v42);
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v43, v44))
      {
        os_log_type_t v45 = (uint8_t *)swift_slowAlloc();
        Swift::String v132 = (void *)swift_slowAlloc();
        Swift::String v136 = v132;
        *(void *)&long long v137 = v17;
        unint64_t v130 = v45;
        *(_DWORD *)os_log_type_t v45 = 136315138;
        uint64_t v129 = v45 + 4;
        uint64_t v138 = 0;
        unint64_t v139 = 0xE000000000000000;
        *((void *)&v137 + 1) = v133;
        uint64_t v46 = v127;
        (*(void (**)(char *, void, uint64_t))(v127 + 104))(v10, enum case for DefaultStringInterpolation.PrintUtilsHexFormat.hex(_:), v7);
        sub_100061900();
        DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v7);
        uint64_t v138 = sub_100025CA0(v138, v139, (uint64_t *)&v136);
        unint64_t v42 = v133;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10000A5B8(v17, v42);
        sub_10000A5B8(v17, v42);
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "didUpdateValueFor payload: %s", v130, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10000A5B8(v17, v42);
        sub_10000A5B8(v17, v42);
      }

      uint64_t v62 = &v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_presentationConfig];
      swift_beginAccess();
      sub_100009BE8((uint64_t)v62, (uint64_t)v6, &qword_1001C9418);
      uint64_t v63 = type metadata accessor for B389PresentationConfig(0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v6, 1, v63) == 1) {
        goto LABEL_103;
      }
      sub_1000118F8((uint64_t)v6, &qword_1001C9418);
      sub_100009B90(v17, v42);
      sub_10000B8B4(v17, v42, &v138);
      uint64_t v64 = *(void *)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue];
      Swift::String v132 = *(void **)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 8];
      uint64_t v65 = *(void *)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 16];
      uint64_t v66 = *(void *)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 24];
      uint64_t v67 = *(void *)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 32];
      uint64_t v68 = *(void *)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 40];
      uint64_t v69 = *(void *)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 48];
      uint64_t v70 = *(void *)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 56];
      uint64_t v71 = v17;
      uint64_t v73 = *(void *)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 64];
      uint64_t v72 = *(void *)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue + 72];
      sub_100069968((uint64_t)&v138, (uint64_t)&v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_payloadValue], &qword_1001C94A8);
      uint64_t v126 = v72;
      uint64_t v17 = v71;
      uint64_t v74 = v69;
      unint64_t v26 = v133;
      sub_1000619CC(v64, (unint64_t)v132, v65, v66, v67, v68, v74, v70, v73, v126, (void (*)(void))sub_10000A5B8);
      id v19 = v131;
    }
    else
    {
      id v53 = [v38 UUIDString];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v54 = sub_10000B800();
      unint64_t v26 = v133;
      id v19 = v131;
      if (v54 != 19)
      {
        LOBYTE(v6) = v54;
        if (qword_1001C7120 == -1)
        {
LABEL_26:
          sub_100012C4C((uint64_t)v132, (uint64_t)qword_1001CBA60);
          uint64_t v55 = Logger.logObject.getter();
          os_log_type_t v56 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v55, v56))
          {
            char v57 = (uint8_t *)swift_slowAlloc();
            uint64_t v138 = swift_slowAlloc();
            *(_DWORD *)char v57 = 136315138;
            uint64_t v58 = sub_10000AE10((char)v6);
            *(void *)&long long v137 = sub_100025CA0(v58, v59, &v138);
            unint64_t v26 = v133;
            id v19 = v131;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v55, v56, "didUpdateValueFor %s", v57, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          id v60 = &v134[OBJC_IVAR____TtC18SharingViewService29AirTagSetupMainViewController_readValues];
          swift_beginAccess();
          sub_100009B90(v17, v26);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v137 = *(void *)v60;
          *(void *)id v60 = 0x8000000000000000;
          sub_1000EA810(v17, v26, v6, isUniquelyReferenced_nonNull_native);
          *(void *)id v60 = v137;
          swift_bridgeObjectRelease();
          uint64_t v54 = swift_endAccess();
          goto LABEL_85;
        }
LABEL_87:
        swift_once();
        goto LABEL_26;
      }
    }
LABEL_85:
    sub_1000C6930(v54);

    sub_10000A5B8(v17, v26);
    return;
  }
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  sub_100012C4C(v11, (uint64_t)qword_1001CBA60);
  id v134 = a2;
  id v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    char v35 = (uint8_t *)swift_slowAlloc();
    char v36 = (void *)swift_slowAlloc();
    *(_DWORD *)char v35 = 138412290;
    uint64_t v138 = (uint64_t)v134;
    int v37 = v134;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v36 = v134;

    _os_log_impl((void *)&_mh_execute_header, v33, v34, "didUpdateValueFor %@ value = nil", v35, 0xCu);
    sub_100009A0C(&qword_1001C9410);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v47 = v134;
  }
}

void sub_1000F4B84(void *a1, uint64_t a2)
{
  if (a2) {
    os_log_type_t v4 = static os_log_type_t.error.getter();
  }
  else {
    os_log_type_t v4 = static os_log_type_t.default.getter();
  }
  os_log_type_t v5 = v4;
  if (qword_1001C7120 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100012C4C(v6, (uint64_t)qword_1001CBA60);
  id v7 = a1;
  swift_errorRetain();
  id v8 = v7;
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  if (!os_log_type_enabled(v9, v5))
  {

    swift_errorRelease();
    swift_errorRelease();

    if (a2) {
      return;
    }
    goto LABEL_13;
  }
  uint64_t v10 = swift_slowAlloc();
  uint64_t v11 = (void *)swift_slowAlloc();
  uint64_t v17 = swift_slowAlloc();
  uint64_t v18 = (uint64_t)v8;
  *(_DWORD *)uint64_t v10 = 138412546;
  id v12 = v8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  void *v11 = v8;

  *(_WORD *)(v10 + 12) = 2080;
  if (a2)
  {
    swift_getErrorValue();
    unint64_t v13 = Error.localizedDescription.getter();
    unint64_t v15 = v14;
  }
  else
  {
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
    _StringGuts.grow(_:)(17);
    swift_bridgeObjectRelease();
    unint64_t v15 = 0x8000000100154E70;
    unint64_t v13 = 0xD000000000000015;
  }
  uint64_t v18 = sub_100025CA0(v13, v15, &v17);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_errorRelease();
  _os_log_impl((void *)&_mh_execute_header, v9, v5, "didWriteValueFor characteristic: %@, error? %s", (uint8_t *)v10, 0x16u);
  sub_100009A0C(&qword_1001C9410);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (!a2)
  {
LABEL_13:
    swift_beginAccess();
    sub_1000201EC(v8);
    uint64_t v16 = swift_endAccess();
    sub_1000C6930(v16);
  }
}

void *sub_1000F4E84@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1000F4EC8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F4F00()
{
  return sub_100061EE8((void (*)(void))&_swift_release);
}

void sub_1000F4F18(CLLocationDegrees a1, CLLocationDegrees a2)
{
  sub_1000D68B8(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1000F4F20()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000F4F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000F4F68()
{
  return swift_release();
}

uint64_t sub_1000F4F70()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000F4FA8(void *a1, uint64_t a2)
{
  return sub_1000D94FC(a1, a2, v2, (uint64_t)&unk_1001A0140, (uint64_t)sub_1000F4FEC, (uint64_t)&unk_1001A0158);
}

uint64_t sub_1000F4FEC()
{
  return sub_1000D5530(*(void *)(v0 + 16), *(NSObject **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1000F4FF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000F5040(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100009A0C(&qword_1001C7620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F50A8()
{
  return sub_1000D9360(*(void *)(v0 + 16));
}

uint64_t sub_1000F50B0(void *a1, uint64_t a2)
{
  return sub_1000D94FC(a1, a2, v2, (uint64_t)&unk_1001A01B8, (uint64_t)sub_1000F50F4, (uint64_t)&unk_1001A01D0);
}

uint64_t sub_1000F50F4()
{
  return sub_1000D9818(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1000F5100()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F5138(void *a1, uint64_t a2)
{
  return sub_1000D0044(a1, a2);
}

uint64_t sub_1000F5140(uint64_t a1)
{
  return sub_1000D06BC(a1);
}

uint64_t sub_1000F5148()
{
  return sub_100061EE8((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1000F5160()
{
  return sub_1000D09DC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000F5168()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000F51B0()
{
  return sub_1000D0370(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1000F51BC()
{
  uint64_t v1 = *(void *)(sub_100009A0C(&qword_1001C7620) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_1000F5308()
{
  uint64_t v1 = *(void *)(sub_100009A0C(&qword_1001C7620) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  int v3 = *(_DWORD *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1000CB398(v2, v3, v4, v5, v6);
}

uint64_t sub_1000F5378()
{
  uint64_t v1 = *(void *)(sub_100009A0C(&qword_1001C7620) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;

  return _swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_1000F54D8()
{
  uint64_t v1 = *(void *)(sub_100009A0C(&qword_1001C7620) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(char **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1000CB664(v3, v4, v0 + v2, v5);
}

uint64_t sub_1000F556C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000F55AC(uint64_t a1, uint64_t a2)
{
  sub_1000CA988(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_1000F55B4()
{
  return sub_1000C35B4(v0);
}

uint64_t sub_1000F55D0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1000F55F8()
{
  unint64_t result = qword_1001CBD28;
  if (!qword_1001CBD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CBD28);
  }
  return result;
}

uint64_t sub_1000F564C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000F5684()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_1000F5694(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100009A0C(&qword_1001C9418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000F56FC()
{
  swift_unknownObjectRelease();

  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000F574C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1000F5CF4;
  return sub_1000C9B80(a1, v4, v5, v6, v7, v8);
}

void sub_1000F5814(uint64_t a1)
{
  sub_1000C96B8(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000F581C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100064AA8;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1001CBE28 + dword_1001CBE28);
  return v6(a1, v4);
}

void sub_1000F58D4()
{
}

void sub_1000F58DC(uint64_t a1)
{
  sub_1000CBAE0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_1000F58F0()
{
  uint64_t v1 = sub_100009A0C(&qword_1001CBE70);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000F5984(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100009A0C(&qword_1001CBE70) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000CC0D4(a1, v4);
}

uint64_t sub_1000F59F8()
{
  uint64_t v1 = sub_100009A0C(&qword_1001CBE70);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000F5AC8(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_100009A0C(&qword_1001CBE70) - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100064AA8;
  return sub_1000CC2B8(a1, v5, v6, v7);
}

uint64_t sub_1000F5BB8()
{
  return sub_1000DF148();
}

id sub_1000F5BC0()
{
  return [*(id *)(v0 + 16) dismiss:0];
}

void sub_1000F5BD4()
{
  sub_1000E1038(*(NSObject **)(v0 + 16));
}

void sub_1000F5BDC(uint64_t a1)
{
}

uint64_t sub_1000F5C74()
{
  return sub_1000F55D0();
}

void sub_1000F5CF8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100078988();
    sub_100069EE8();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  uint64_t v16 = v2;
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v11 = v3;
    goto LABEL_29;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 < v8)
    {
      unint64_t v14 = *(void *)(v17 + 8 * v13);
      uint64_t v11 = v3 + 1;
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 3;
      if (v3 + 3 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 4;
      if (v3 + 4 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14)
      {
LABEL_28:
        uint64_t v9 = (v14 - 1) & v14;
        unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
        id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
        if (v12)
        {
          do
          {
            if (objc_msgSend(v12, "events", v16) == (id)16) {
              break;
            }

            uint64_t v3 = v11;
            unint64_t v4 = v9;
            if ((v1 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!__CocoaSet.Iterator.next()()) {
              break;
            }
            sub_100078988();
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v12 = v23;
            swift_unknownObjectRelease();
            uint64_t v11 = v3;
            uint64_t v9 = v4;
          }
          while (v23);
        }
        goto LABEL_33;
      }
      uint64_t v11 = v3 + 5;
      if (v3 + 5 < v8)
      {
        unint64_t v14 = *(void *)(v17 + 8 * v11);
        if (!v14)
        {
          uint64_t v15 = v3 + 6;
          while (v8 != v15)
          {
            unint64_t v14 = *(void *)(v17 + 8 * v15++);
            if (v14)
            {
              uint64_t v11 = v15 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    sub_10002BAB0();
    return;
  }
  __break(1u);
}

uint64_t sub_1000F5F9C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CBF10);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CBF10);
  if (qword_1001C6F00 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D1510);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1000F6064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModelDidUpdate];
  void *v9 = nullsub_4;
  v9[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_remoteViewControllerProxy] = 0;
  v4[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_currentState] = 9;
  v4[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_homeButtonPressedWhileLocked] = 0;
  swift_unknownObjectWeakInit();
  unint64_t v10 = &v4[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_interactor];
  *unint64_t v10 = a1;
  v10[1] = a2;
  uint64_t v11 = &v4[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_router];
  void *v11 = a3;
  v11[1] = a4;
  id v12 = &v4[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModel];
  *(void *)id v12 = 0;
  *((void *)v12 + 1) = 0xE000000000000000;
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0xE000000000000000;
  v12[32] = 0;
  *(_OWORD *)(v12 + 40) = xmmword_10017C910;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for AuthenticateAccountsPresenter();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  [super init];
  *(void *)(a1 + 24) = &off_1001A08C8;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v13;
}

id sub_1000F61A8()
{
  id v1 = [self defaultCenter];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 removeObserver:v0 name:v2 object:0];

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for AuthenticateAccountsPresenter();
  [super dealloc];
}

__n128 sub_1000F63B4@<Q0>(uint64_t a1@<X8>)
{
  unint64_t v3 = 0xD000000000000012;
  objc_super v4 = self;
  id v5 = [v4 mainBundle];
  v6._uint64_t countAndFlagsBits = 0xD000000000000021;
  v62._object = (void *)0xE000000000000000;
  v6._object = (void *)0x800000010015C610;
  v7.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v7.value._object = (void *)0xEB00000000656C62;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v62._uint64_t countAndFlagsBits = 0;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v62);

  id v10 = [v4 mainBundle];
  v11._uint64_t countAndFlagsBits = 0xD000000000000027;
  v63._object = (void *)0xE000000000000000;
  v11._object = (void *)0x800000010015C640;
  v12.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v12.value._object = (void *)0xEB00000000656C62;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v63._uint64_t countAndFlagsBits = 0;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v63);

  id v52 = [self labelColor];
  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_interactor)
      + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model;
  uint64_t v16 = type metadata accessor for AuthenticateAccountsModel();
  char v51 = *(unsigned char *)(v15 + *(int *)(v16 + 20));
  id v17 = [v4 mainBundle];
  v64._object = (void *)0xE000000000000000;
  v18._uint64_t countAndFlagsBits = 0x5443454E4E4F43;
  v18._object = (void *)0xE700000000000000;
  v19.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v19.value._object = (void *)0xEB00000000656C62;
  v20._uint64_t countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v64._uint64_t countAndFlagsBits = 0;
  *(Swift::String *)uint64_t v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v64);

  id v21 = [v4 mainBundle];
  v65._object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = 0x495443454E4E4F43;
  v22._object = (void *)0xEA0000000000474ELL;
  v23.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v23.value._object = (void *)0xEB00000000656C62;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v65._uint64_t countAndFlagsBits = 0;
  *(Swift::String *)&v29[16] = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v65);

  id v25 = [v4 mainBundle];
  v26._uint64_t countAndFlagsBits = 0xD000000000000031;
  v66._object = (void *)0xE000000000000000;
  v26._object = (void *)0x800000010015C670;
  v27.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v27.value._object = (void *)0xEB00000000656C62;
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v66._uint64_t countAndFlagsBits = 0;
  *(Swift::String *)&v29[32] = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v66);

  int v30 = *(unsigned __int8 *)(v15 + *(int *)(v16 + 32));
  id v50 = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30 == 1)
  {
    id v31 = [v4 mainBundle];
    v32._uint64_t countAndFlagsBits = 0xD000000000000024;
    v67._object = (void *)0xE000000000000000;
    v32._object = (void *)0x800000010015C6B0;
    v33.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v33.value._object = (void *)0xEB00000000656C62;
    v34._uint64_t countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    v67._uint64_t countAndFlagsBits = 0;
    Swift::String v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v67);
    uint64_t countAndFlagsBits = v35._countAndFlagsBits;
    swift_bridgeObjectRelease();

    id v37 = [v4 mainBundle];
    v38._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v68._object = (void *)0xE000000000000000;
    v38._object = (void *)0x800000010015C6E0;
    v39.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v39.value._object = (void *)0xEB00000000656C62;
    v40._uint64_t countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    v68._uint64_t countAndFlagsBits = 0;
    Swift::String v41 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v39, (NSBundle)v37, v40, v68);
    uint64_t v42 = v41._countAndFlagsBits;
    swift_bridgeObjectRelease();

    unint64_t v43 = 0x800000010015C710;
    object = v41._object;
    os_log_type_t v45 = v35._object;
  }
  else
  {
    unint64_t v43 = 0xED0000726573755FLL;
    unint64_t v3 = 0x6464615F786F7270;
    object = v14._object;
    uint64_t v42 = v14._countAndFlagsBits;
    uint64_t countAndFlagsBits = v9._countAndFlagsBits;
    os_log_type_t v45 = v9._object;
  }
  *(void *)&long long v53 = countAndFlagsBits;
  *((void *)&v53 + 1) = v45;
  v54.n128_u64[0] = v42;
  v54.n128_u64[1] = (unint64_t)object;
  *(void *)&long long v55 = v3;
  *((void *)&v55 + 1) = v43;
  LOBYTE(v56) = v30 ^ 1;
  *((void *)&v56 + 1) = v50;
  long long v57 = xmmword_10017F640;
  LOBYTE(v58) = v51;
  *((void *)&v58 + 1) = *(void *)v29;
  long long v59 = *(_OWORD *)&v29[8];
  long long v60 = *(_OWORD *)&v29[24];
  uint64_t v61 = *(void *)&v29[40];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000912A4();
  sub_100091208((uint64_t)&v53);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100091348();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000912AC((uint64_t)&v53);
  long long v46 = v60;
  *(_OWORD *)(a1 + 96) = v59;
  *(_OWORD *)(a1 + 112) = v46;
  *(void *)(a1 + 128) = v61;
  long long v47 = v56;
  *(_OWORD *)(a1 + 32) = v55;
  *(_OWORD *)(a1 + 48) = v47;
  long long v48 = v58;
  *(_OWORD *)(a1 + 64) = v57;
  *(_OWORD *)(a1 + 80) = v48;
  __n128 result = v54;
  *(_OWORD *)a1 = v53;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

id sub_1000F68E8()
{
  sub_1000F63B4((uint64_t)v80);
  uint64_t v1 = v80[0];
  uint64_t v2 = v80[2];
  uint64_t v73 = v80[1];
  uint64_t v74 = v80[3];
  uint64_t v3 = v81;
  uint64_t v75 = v81;
  uint64_t v78 = v82;
  uint64_t v5 = v83;
  uint64_t v4 = v84;
  uint64_t v6 = v86;
  uint64_t v76 = v85;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_interactor)
     + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model;
  Swift::String v8 = (int *)type metadata accessor for AuthenticateAccountsModel();
  Swift::String v9 = (uint64_t *)(v7 + v8[11]);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  Swift::String_optional v12 = (uint64_t *)(v7 + v8[12]);
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = (uint64_t *)(v7 + v8[13]);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  *(void *)&long long v95 = v1;
  *((void *)&v95 + 1) = v73;
  *(void *)&long long v96 = v2;
  *((void *)&v96 + 1) = v74;
  *(void *)&long long v97 = v3;
  *((void *)&v97 + 1) = v78;
  *(void *)&long long v98 = v5;
  *((void *)&v98 + 1) = v4;
  *(void *)&long long v99 = v76;
  *((void *)&v99 + 1) = v6;
  *(void *)&long long v100 = v10;
  *((void *)&v100 + 1) = v11;
  *(void *)&long long v101 = v13;
  uint64_t v18 = v11;
  *((void *)&v101 + 1) = v14;
  *(void *)&long long v102 = v16;
  *((void *)&v102 + 1) = v17;
  long long v89 = v97;
  long long v90 = v98;
  long long v87 = v95;
  long long v88 = v96;
  long long v93 = v101;
  long long v94 = v102;
  long long v91 = v99;
  long long v92 = v100;
  id v19 = objc_allocWithZone((Class)PRXFeatureListViewController);
  uint64_t v20 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v77 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v21 = [v19 init];
  NSString v22 = String._bridgeToObjectiveC()();
  [v21 setTitle:v22];

  id v23 = v21;
  NSString v24 = String._bridgeToObjectiveC()();
  [v23 setSubtitle:v24];

  [v23 setDismissalType:v75];
  if (v20)
  {
    id v25 = self;
    swift_bridgeObjectRetain();
    id v26 = [v25 mainBundle];
    v103._object = (void *)0xE000000000000000;
    v27._object = (void *)0x800000010015C5D0;
    v27._uint64_t countAndFlagsBits = 0xD000000000000031;
    v28.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v28.value._object = (void *)0xEB00000000656C62;
    v29._uint64_t countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v103._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v103);

    NSString v30 = String._bridgeToObjectiveC()();
    id v31 = [self systemImageNamed:v30];

    id v32 = [self systemBlueColor];
    id v33 = objc_allocWithZone((Class)PRXFeature);
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [v33 initWithTitle:v34 detailText:v35 icon:v31 tintColor:v32 valueChangedBlock:0];
  }
  if (v14)
  {
    id v37 = self;
    swift_bridgeObjectRetain();
    id v38 = [v37 mainBundle];
    v104._object = (void *)0xE000000000000000;
    v39._object = (void *)0x800000010015C570;
    v39._uint64_t countAndFlagsBits = 0xD000000000000031;
    v40.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v40.value._object = (void *)0xEB00000000656C62;
    v41._uint64_t countAndFlagsBits = 0;
    v41._object = (void *)0xE000000000000000;
    v104._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v104);

    NSString v42 = String._bridgeToObjectiveC()();
    id v43 = [self _systemImageNamed:v42];

    id v44 = [self systemBlueColor];
    id v45 = objc_allocWithZone((Class)PRXFeature);
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v48 = [v45 initWithTitle:v46 detailText:v47 icon:v43 tintColor:v44 valueChangedBlock:0];
  }
  if (v77)
  {
    uint64_t v49 = self;
    swift_bridgeObjectRetain();
    id v50 = [v49 mainBundle];
    v51._uint64_t countAndFlagsBits = 0xD000000000000036;
    v105._object = (void *)0xE000000000000000;
    v51._object = (void *)0x800000010015C530;
    v52.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v52.value._object = (void *)0xEB00000000656C62;
    v53._uint64_t countAndFlagsBits = 0;
    v53._object = (void *)0xE000000000000000;
    v105._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v51, v52, (NSBundle)v50, v53, v105);

    NSString v54 = String._bridgeToObjectiveC()();
    id v55 = [self _systemImageNamed:v54];

    id v56 = [self systemBlueColor];
    id v57 = objc_allocWithZone((Class)PRXFeature);
    NSString v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v59 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v60 = [v57 initWithTitle:v58 detailText:v59 icon:v55 tintColor:v56 valueChangedBlock:0];
  }
  uint64_t v61 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v62 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v61;
  *(void *)(v63 + 24) = v62;
  long long v64 = v92;
  *(_OWORD *)(v63 + 96) = v91;
  *(_OWORD *)(v63 + 112) = v64;
  long long v65 = v94;
  *(_OWORD *)(v63 + 128) = v93;
  *(_OWORD *)(v63 + 144) = v65;
  long long v66 = v88;
  *(_OWORD *)(v63 + 32) = v87;
  *(_OWORD *)(v63 + 48) = v66;
  long long v67 = v90;
  *(_OWORD *)(v63 + 64) = v89;
  *(_OWORD *)(v63 + 80) = v67;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1000F9F34((uint64_t)&v95);
  NSString v68 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1000F9F28;
  aBlock[5] = v63;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000215A4;
  aBlock[3] = &unk_1001A0B40;
  uint64_t v69 = _Block_copy(aBlock);
  id v70 = [self actionWithTitle:v68 style:0 handler:v69];

  _Block_release(v69);
  swift_release();
  swift_release();
  swift_release();
  sub_1000F9FC0((uint64_t)&v95);
  id v71 = [v23 addAction:v70];
  sub_1000912AC((uint64_t)v80);

  return v23;
}

void sub_1000F71BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    swift_beginAccess();
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();
    if (v8)
    {
      Swift::String v9 = (void *)v8;
      [a1 setEnabled:0];
      [v9 setDismissalType:*(void *)(a4 + 40)];
      NSString v10 = String._bridgeToObjectiveC()();
      [v9 showActivityIndicatorWithStatus:v10];

      sub_1000F72A0();
      uint64_t v7 = v9;
    }
  }
}

void sub_1000F72A0()
{
  if (v0[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_currentState] <= 1u
    && (uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_router],
        (uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_currentCardViewController)) != 0)
    && (uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_remoteViewControllerProxy)) != 0)
  {
    id v4 = v2;
    swift_unknownObjectRetain();
    sub_10007ED14((uint64_t)v4, v3);

    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1001C7128 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100012C4C(v5, (uint64_t)qword_1001CBF10);
    uint64_t v16 = v0;
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315650;
      sub_100009A0C(&qword_1001CBF98);
      uint64_t v9 = String.init<A>(reflecting:)();
      sub_100025CA0(v9, v10, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      id v11 = objc_retain(*(id *)(*(void *)&v16[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_router]
                              + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_currentCardViewController));
      sub_100009A0C(&qword_1001CBFA0);
      uint64_t v12 = String.init<A>(reflecting:)();
      sub_100025CA0(v12, v13, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 22) = 2080;
      swift_unknownObjectRetain();
      sub_100009A0C(&qword_1001CBFA8);
      uint64_t v14 = String.init<A>(reflecting:)();
      sub_100025CA0(v14, v15, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to start authentication -- invalid state. {currentState: %s, cardViewController: %s, remoteViewControllerProxy: %s}", (uint8_t *)v8, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

id sub_1000F766C()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v19._object = (void *)0xE000000000000000;
  v4._uint64_t countAndFlagsBits = 0x49544E4548545541;
  v4._object = (void *)0xEE004E4F49544143;
  v5.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v5.value._object = (void *)0xEB00000000656C62;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0;
  Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v19);

  id v8 = [v2 mainBundle];
  v20._object = (void *)0xE000000000000000;
  v9._object = (void *)0x800000010015C510;
  v9._uint64_t countAndFlagsBits = 0xD000000000000019;
  v10.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v10.value._object = (void *)0xEB00000000656C62;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v20);

  unint64_t v13 = &v1[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModel];
  *(Swift::String *)unint64_t v13 = v7;
  *((Swift::String *)v13 + 1) = v12;
  v13[32] = 0;
  *(_OWORD *)(v13 + 40) = xmmword_10017F650;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(_OWORD *))&v1[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModelDidUpdate];
  long long v15 = *((_OWORD *)v13 + 1);
  v17[0] = *(_OWORD *)v13;
  v17[1] = v15;
  void v17[2] = *((_OWORD *)v13 + 2);
  uint64_t v18 = *((void *)v13 + 6);
  swift_retain();
  sub_1000F9CC8((uint64_t)v17);
  v14(v17);
  sub_1000F9D00((uint64_t)v17);
  swift_release();
  return sub_1000F9D38(v1);
}

id sub_1000F783C()
{
  unint64_t v1 = 0xD000000000000022;
  uint64_t v2 = self;
  id v3 = &selRef_errorWithDomain_code_userInfo_;
  id v4 = [v2 mainBundle];
  v5._uint64_t countAndFlagsBits = 0xD000000000000027;
  v44._object = (void *)0xE000000000000000;
  v5._object = (void *)0x800000010015C410;
  v6.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v6.value._object = (void *)0xEB00000000656C62;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v44._uint64_t countAndFlagsBits = 0;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v44);
  uint64_t countAndFlagsBits = v8._countAndFlagsBits;
  object = v8._object;

  id v11 = [v2 mainBundle];
  v12._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v45._object = (void *)0xE000000000000000;
  v12._object = (void *)0x800000010015C440;
  v13.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v13.value._object = (void *)0xEB00000000656C62;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v45._uint64_t countAndFlagsBits = 0;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v45);
  uint64_t v16 = v15._countAndFlagsBits;
  uint64_t v17 = v15._object;

  id v18 = [self labelColor];
  uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_interactor)
      + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model;
  LODWORD(v19) = *(unsigned __int8 *)(v19 + *(int *)(type metadata accessor for AuthenticateAccountsModel() + 32));
  id v20 = v18;
  if (v19 == 1)
  {
    id v21 = [v2 mainBundle];
    v22._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v46._object = (void *)0xE000000000000000;
    v22._object = (void *)0x800000010015C4A0;
    v23.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v23.value._object = (void *)0xEB00000000656C62;
    v24._uint64_t countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v46._uint64_t countAndFlagsBits = 0;
    Swift::String v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v46);
    uint64_t countAndFlagsBits = v25._countAndFlagsBits;
    swift_bridgeObjectRelease();

    id v26 = [v2 mainBundle];
    v27._uint64_t countAndFlagsBits = 0xD000000000000030;
    v47._object = (void *)0xE000000000000000;
    v27._object = (void *)0x800000010015C4D0;
    v28.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v28.value._object = (void *)0xEB00000000656C62;
    v29._uint64_t countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v47._uint64_t countAndFlagsBits = 0;
    Swift::String v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v47);
    uint64_t v16 = v30._countAndFlagsBits;
    swift_bridgeObjectRelease();

    unint64_t v31 = 0xE400000000000000;
    unint64_t v1 = 1918985575;
    uint64_t v17 = v30._object;
    id v3 = &selRef_errorWithDomain_code_userInfo_;
    object = v25._object;
  }
  else
  {
    unint64_t v31 = 0x800000010015C470;
  }
  v40[0] = countAndFlagsBits;
  v40[1] = object;
  _OWORD v40[2] = v16;
  v40[3] = v17;
  v40[4] = v1;
  v40[5] = v31;
  char v41 = 0;
  id v42 = v20;
  uint64_t v43 = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000912A4();
  id v32 = objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsImageCardViewController());
  id v33 = sub_1000A4430((uint64_t)v40);
  id v34 = [v2 v3[153]];
  v48._object = (void *)0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0x5F474E4954544553;
  v35._object = (void *)0xEA00000000005055;
  v36.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v36.value._object = (void *)0xEB00000000656C62;
  v37._uint64_t countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v48._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v48);

  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v33 showActivityIndicatorWithStatus:v38];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100091348();
  return v33;
}

id sub_1000F7C10()
{
  unint64_t v1 = 0xD000000000000014;
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v4._uint64_t countAndFlagsBits = 0xD000000000000026;
  v51._object = (void *)0xE000000000000000;
  v4._object = (void *)0x800000010015C300;
  v5.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v5.value._object = (void *)0xEB00000000656C62;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v51._uint64_t countAndFlagsBits = 0;
  Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v51);
  object = v7._object;

  id v9 = [v2 mainBundle];
  v10._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v52._object = (void *)0xE000000000000000;
  v10._object = (void *)0x800000010015C330;
  v11.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v11.value._object = (void *)0xEB00000000656C62;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v52._uint64_t countAndFlagsBits = 0;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v52);
  uint64_t countAndFlagsBits = v13._countAndFlagsBits;
  Swift::String v15 = v13._object;

  id v16 = [self systemBlueColor];
  Swift::String v45 = v0;
  uint64_t v17 = *(void *)&v0[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_interactor]
      + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model;
  LODWORD(v17) = *(unsigned __int8 *)(v17 + *(int *)(type metadata accessor for AuthenticateAccountsModel() + 32));
  id v18 = v16;
  if (v17 == 1)
  {
    id v19 = [v2 mainBundle];
    v20._uint64_t countAndFlagsBits = 0xD000000000000023;
    v53._object = (void *)0xE000000000000000;
    v20._object = (void *)0x800000010015C390;
    v21.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v21.value._object = (void *)0xEB00000000656C62;
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v53._uint64_t countAndFlagsBits = 0;
    Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v53);
    uint64_t v24 = v23._countAndFlagsBits;
    swift_bridgeObjectRelease();

    id v25 = [v2 mainBundle];
    v26._uint64_t countAndFlagsBits = 0xD000000000000029;
    v54._object = (void *)0xE000000000000000;
    v26._object = (void *)0x800000010015C3C0;
    v27.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v27.value._object = (void *)0xEB00000000656C62;
    v28._uint64_t countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v54._uint64_t countAndFlagsBits = 0;
    Swift::String v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v54);
    uint64_t countAndFlagsBits = v29._countAndFlagsBits;
    swift_bridgeObjectRelease();

    unint64_t v30 = 0x800000010015C3F0;
    object = v23._object;
    Swift::String v15 = v29._object;
  }
  else
  {
    unint64_t v1 = 0xD000000000000027;
    unint64_t v30 = 0x800000010015C360;
    uint64_t v24 = v7._countAndFlagsBits;
  }
  v47[0] = v24;
  v47[1] = object;
  v47[2] = countAndFlagsBits;
  v47[3] = v15;
  v47[4] = v1;
  v47[5] = v30;
  char v48 = 0;
  unint64_t v31 = v18;
  id v49 = v18;
  uint64_t v50 = 3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000912A4();
  id v32 = objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsImageCardViewController());
  id v33 = sub_1000A4430((uint64_t)v47);
  id v34 = [v2 mainBundle];
  v55._object = (void *)0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 1162760004;
  v35._object = (void *)0xE400000000000000;
  v36.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v36.value._object = (void *)0xEB00000000656C62;
  v37._uint64_t countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v55._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v55);

  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v45;
  id v39 = v45;
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1000FA274;
  aBlock[5] = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000215A4;
  aBlock[3] = &unk_1001A0A78;
  char v41 = _Block_copy(aBlock);
  id v42 = [self actionWithTitle:v40 style:0 handler:v41];

  _Block_release(v41);
  swift_release();
  id v43 = [v33 addAction:v42];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100091348();
  return v33;
}

id sub_1000F80C8()
{
  unint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v51._object = (void *)0xE000000000000000;
  v3._object = (void *)0x800000010015C210;
  v3._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v4.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v4.value._object = (void *)0xEB00000000656C62;
  v5._uint64_t countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v51._uint64_t countAndFlagsBits = 0;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v51);
  uint64_t countAndFlagsBits = v6._countAndFlagsBits;
  object = v6._object;

  id v9 = [v1 mainBundle];
  v10._uint64_t countAndFlagsBits = 0xD000000000000031;
  v52._object = (void *)0xE000000000000000;
  v10._object = (void *)0x800000010015C240;
  v11.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v11.value._object = (void *)0xEB00000000656C62;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v52._uint64_t countAndFlagsBits = 0;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v52);
  uint64_t v14 = v13._countAndFlagsBits;
  Swift::String v15 = v13._object;

  id v16 = [self systemRedColor];
  Swift::String v45 = v0;
  uint64_t v17 = *(void *)&v0[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_interactor]
      + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model;
  LODWORD(v17) = *(unsigned __int8 *)(v17 + *(int *)(type metadata accessor for AuthenticateAccountsModel() + 32));
  id v18 = v16;
  if (v17 == 1)
  {
    id v19 = [v1 mainBundle];
    v20._uint64_t countAndFlagsBits = 0xD000000000000025;
    v53._object = (void *)0xE000000000000000;
    v20._object = (void *)0x800000010015C280;
    v21.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v21.value._object = (void *)0xEB00000000656C62;
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v53._uint64_t countAndFlagsBits = 0;
    Swift::String v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v53);
    uint64_t countAndFlagsBits = v23._countAndFlagsBits;
    swift_bridgeObjectRelease();

    id v24 = [v1 mainBundle];
    v54._object = (void *)0xE000000000000000;
    v25._object = (void *)0x800000010015C2B0;
    v25._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    v26.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v26.value._object = (void *)0xEB00000000656C62;
    v27._uint64_t countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v54._uint64_t countAndFlagsBits = 0;
    Swift::String v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v54);
    uint64_t v14 = v28._countAndFlagsBits;
    swift_bridgeObjectRelease();

    unint64_t v29 = 0xD000000000000010;
    unint64_t v30 = 0x800000010015C2E0;
    object = v23._object;
    Swift::String v15 = v28._object;
  }
  else
  {
    unint64_t v29 = 0xD00000000000002DLL;
    unint64_t v30 = 0x800000010015C190;
  }
  v47[0] = countAndFlagsBits;
  v47[1] = object;
  v47[2] = v14;
  v47[3] = v15;
  v47[4] = v29;
  v47[5] = v30;
  char v48 = 0;
  unint64_t v31 = v18;
  id v49 = v18;
  uint64_t v50 = 3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000912A4();
  id v32 = objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsImageCardViewController());
  id v33 = sub_1000A4430((uint64_t)v47);
  id v34 = [v1 mainBundle];
  v55._object = (void *)0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
  v35._object = (void *)0xEF454C5449545F4ELL;
  v36.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v36.value._object = (void *)0xEB00000000656C62;
  v37._uint64_t countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  v55._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v55);

  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v45;
  id v39 = v45;
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1000FA274;
  aBlock[5] = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000215A4;
  aBlock[3] = &unk_1001A0A28;
  char v41 = _Block_copy(aBlock);
  id v42 = [self actionWithTitle:v40 style:0 handler:v41];

  _Block_release(v41);
  swift_release();
  id v43 = [v33 addAction:v42];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_100091348();
  return v33;
}

id sub_1000F859C()
{
  unint64_t v1 = v0;
  id v2 = self;
  id v3 = [v2 mainBundle];
  v4._uint64_t countAndFlagsBits = 0xD000000000000037;
  v34._object = (void *)0xE000000000000000;
  v4._object = (void *)0x800000010015C110;
  v5.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v5.value._object = (void *)0xEB00000000656C62;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v34._uint64_t countAndFlagsBits = 0;
  Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v34);

  id v8 = [v2 mainBundle];
  v9._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  v35._object = (void *)0xE000000000000000;
  v9._object = (void *)0x800000010015C150;
  v10.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v10.value._object = (void *)0xEB00000000656C62;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v35);

  v28[0] = v7;
  v28[1] = v12;
  unint64_t v29 = 0xD00000000000002DLL;
  unint64_t v30 = 0x800000010015C190;
  char v31 = 0;
  id v32 = [self systemRedColor];
  uint64_t v33 = 3;
  id v13 = objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsImageCardViewController());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000912A4();
  id v14 = v32;
  id v15 = sub_1000A4430((uint64_t)v28);
  id v16 = [v2 mainBundle];
  v17._uint64_t countAndFlagsBits = 0xD000000000000040;
  v36._object = (void *)0xE000000000000000;
  v17._object = (void *)0x800000010015C1C0;
  v18.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v18.value._object = (void *)0xEB00000000656C62;
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v36._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v36);

  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v1;
  id v21 = v1;
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1000F9CC0;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000215A4;
  aBlock[3] = &unk_1001A09D8;
  Swift::String v23 = _Block_copy(aBlock);
  id v24 = [self actionWithTitle:v22 style:0 handler:v23];

  _Block_release(v23);
  swift_release();
  id v25 = [v15 addAction:v24];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100091348();

  return v15;
}

void sub_1000F8914()
{
  uint64_t v0 = sub_100009A0C(&qword_1001C7620);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  id v3 = &v25[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v1);
  Swift::String_optional v5 = &v25[-v4];
  sub_1000B32A4();
  URL.init(string:)();
  id v6 = [self defaultWorkspace];
  if (!v6) {
    goto LABEL_5;
  }
  Swift::String v7 = v6;
  sub_10006DD94((uint64_t)v5, (uint64_t)v3);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  Swift::String v11 = 0;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) != 1)
  {
    URL._bridgeToObjectiveC()(v10);
    Swift::String v11 = v12;
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v3, v8);
  }
  sub_100007074((uint64_t)_swiftEmptyArrayStorage);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v26 = 0;
  unsigned int v14 = [v7 openSensitiveURL:v11 withOptions:isa error:&v26];

  id v15 = v26;
  if (!v14)
  {
    id v16 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100012CC4((uint64_t)v5);
    Swift::String v17 = (void *)_convertErrorToNSError(_:)();
    if (qword_1001C7128 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100012C4C(v18, (uint64_t)qword_1001CBF10);
    id v19 = v17;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      NSString v22 = (uint8_t *)swift_slowAlloc();
      Swift::String v23 = (void *)swift_slowAlloc();
      *(_DWORD *)NSString v22 = 138412290;
      id v26 = v19;
      id v24 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *Swift::String v23 = v19;

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Open Settings failed {error: %@}", v22, 0xCu);
      sub_100009A0C(&qword_1001C9410);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
    }
  }
  else
  {
LABEL_5:
    sub_100012CC4((uint64_t)v5);
  }
}

id sub_1000F8CFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v4._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v34._object = (void *)0xE000000000000000;
  v4._object = (void *)0x800000010015C080;
  v5.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v5.value._object = (void *)0xEB00000000656C62;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v34._uint64_t countAndFlagsBits = 0;
  Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v34);

  id v8 = [v2 mainBundle];
  v9._uint64_t countAndFlagsBits = 0xD000000000000031;
  v35._object = (void *)0xE000000000000000;
  v9._object = (void *)0x800000010015C0B0;
  v10.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v10.value._object = (void *)0xEB00000000656C62;
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v35);

  v28[0] = v7;
  v28[1] = v12;
  unint64_t v29 = 0xD000000000000011;
  unint64_t v30 = 0x800000010015C0F0;
  char v31 = 0;
  id v32 = [self systemRedColor];
  uint64_t v33 = 3;
  id v13 = objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsImageCardViewController());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000912A4();
  id v14 = v32;
  id v15 = sub_1000A4430((uint64_t)v28);
  id v16 = [v2 mainBundle];
  v36._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0x4F545455425F4B4FLL;
  v17._object = (void *)0xEF454C5449545F4ELL;
  v18.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v18.value._object = (void *)0xEB00000000656C62;
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v36._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v36);

  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v1;
  id v21 = v1;
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1000F9C74;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000215A4;
  aBlock[3] = &unk_1001A0988;
  Swift::String v23 = _Block_copy(aBlock);
  id v24 = [self actionWithTitle:v22 style:0 handler:v23];

  _Block_release(v23);
  swift_release();
  id v25 = [v15 addAction:v24];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100091348();

  return v15;
}

uint64_t type metadata accessor for AuthenticateAccountsPresenter()
{
  return self;
}

uint64_t sub_1000F90D4()
{
  uint64_t v1 = v0;
  if ((*(unsigned char *)(*(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_router)
                 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_dismissed) & 1) == 0)
  {
    if (qword_1001C7128 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100012C4C(v2, (uint64_t)qword_1001CBF10);
    id v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      Swift::String_optional v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String_optional v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Main disappeared without dismiss (device locked?)...dismissing UI", v5, 2u);
      swift_slowDealloc();
    }

    sub_1000B32A4();
  }
  sub_10007F348();
  *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_remoteViewControllerProxy) = 0;
  uint64_t result = swift_unknownObjectRelease();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_currentState) = 9;
  return result;
}

void sub_1000F9218(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1000F5CF8(a1);
  os_log_type_t v4 = v3;

  if (v4)
  {
    if (qword_1001C7128 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100012C4C(v5, (uint64_t)qword_1001CBF10);
    Swift::String v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Home button", v8, 2u);
      swift_slowDealloc();
    }

    uint64_t v9 = OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_homeButtonPressedWhileLocked;
    if ((*(unsigned char *)(v2
                   + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_homeButtonPressedWhileLocked) & 1) != 0
      || !sub_10006FF38())
    {
      Swift::String_optional v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v10, v11))
      {
        Swift::String v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)Swift::String v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Ignoring first home button press to unlock", v12, 2u);
        swift_slowDealloc();
      }

      *(unsigned char *)(v2 + v9) = 1;
    }
    else
    {
      sub_1000B32A4();
    }
  }
}

void sub_1000F93BC()
{
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_currentState))
  {
    if (qword_1001C7128 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100012C4C(v1, (uint64_t)qword_1001CBF10);
    id v8 = v0;
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v4 = 136315138;
      uint64_t v9 = v5;
      sub_100009A0C(&qword_1001CBF98);
      uint64_t v6 = String.init<A>(reflecting:)();
      sub_100025CA0(v6, v7, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Invalid state to show details. {currentState: %s}", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  else
  {
    sub_10007EADC();
  }
}

void sub_1000F9638()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModel;
  *(unsigned char *)(v1 + 32) = 1;
  uint64_t v2 = *(void (**)(void *))(v0
                                       + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModelDidUpdate);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  v9[0] = *(void *)v1;
  v9[1] = v3;
  v9[2] = v4;
  v9[3] = v5;
  char v10 = 1;
  long long v11 = *(_OWORD *)(v1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2(v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_interactor)
                + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_setupSession);
  if (v6)
  {
    id v7 = v6;
    id v8 = String._bridgeToObjectiveC()();
    [v7 pairSetupTryPIN:v8];
  }
}

void sub_1000F9778(char a1)
{
  switch(a1)
  {
    case 1:
      id v4 = sub_1000F68E8();
      goto LABEL_12;
    case 2:
      id v4 = sub_1000F766C();
      goto LABEL_12;
    case 3:
      id v11 = sub_1000F783C();
      swift_unknownObjectWeakAssign();
      id v4 = v11;
      goto LABEL_12;
    case 4:
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong) {
        return;
      }
      uint64_t v6 = (void *)Strong;
      id v7 = [self mainBundle];
      v15._object = (void *)0xE000000000000000;
      v8._object = (void *)0x800000010015C770;
      v8._uint64_t countAndFlagsBits = 0xD000000000000012;
      v9.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v9.value._object = (void *)0xEB00000000656C62;
      v10._uint64_t countAndFlagsBits = 0;
      v10._object = (void *)0xE000000000000000;
      v15._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v15);

      id v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v6 showActivityIndicatorWithStatus:v12];

      break;
    case 5:
      id v4 = sub_1000F7C10();
      goto LABEL_12;
    case 6:
      id v4 = sub_1000F80C8();
      goto LABEL_12;
    case 7:
      id v4 = sub_1000F859C();
      goto LABEL_12;
    case 8:
      id v4 = sub_1000F8CFC();
      goto LABEL_12;
    default:
      sub_1000F63B4((uint64_t)v13);
      uint64_t v3 = objc_allocWithZone((Class)type metadata accessor for AuthenticateAccountsStartViewController());
      id v4 = sub_100090ECC((uint64_t)v13, v1, v3);
LABEL_12:
      *((unsigned char *)v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_currentState) = a1;
      id v12 = v4;
      sub_1000B3160(v4);
      break;
  }
}

void sub_1000F9984()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_router);
  uint64_t v2 = OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_remoteViewControllerProxy;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_remoteViewControllerProxy);
  if (v3) {
    [v3 dismiss];
  }
  *(void *)(v1 + v2) = 0;
  swift_unknownObjectRelease();
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_currentCardViewController);
  *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService26AuthenticateAccountsRouter_currentCardViewController) = 0;

  *(unsigned char *)(v0 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_currentState) = 9;
}

uint64_t getEnumTagSinglePayload for AuthenticateAccountsState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AuthenticateAccountsState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000F9BACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateAccountsState()
{
  return &type metadata for AuthenticateAccountsState;
}

unint64_t sub_1000F9BE8()
{
  unint64_t result = qword_1001CBF90;
  if (!qword_1001CBF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001CBF90);
  }
  return result;
}

uint64_t sub_1000F9C3C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000F9C74()
{
}

uint64_t sub_1000F9CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000F9CB8()
{
  return swift_release();
}

void sub_1000F9CC0()
{
}

uint64_t sub_1000F9CC8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000F9D00(uint64_t a1)
{
  return a1;
}

id sub_1000F9D38(unsigned char *a1)
{
  uint64_t v2 = (objc_class *)type metadata accessor for AuthenticateAccountsAuthViewController();
  int v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsAuthViewController_presenter + 8] = 0;
  *(void *)(swift_unknownObjectWeakInit() + 8) = &off_1001A08E8;
  swift_unknownObjectWeakAssign();
  uint64_t v4 = *(void *)&a1[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModel + 8];
  uint64_t v5 = *(void *)&a1[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModel + 16];
  uint64_t v6 = *(void *)&a1[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModel + 24];
  char v7 = a1[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModel + 32];
  int v8 = &v3[OBJC_IVAR____TtC18SharingViewService38AuthenticateAccountsAuthViewController_viewModel];
  long long v9 = *(_OWORD *)&a1[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModel + 40];
  *(void *)int v8 = *(void *)&a1[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModel];
  *((void *)v8 + 1) = v4;
  *((void *)v8 + 2) = v5;
  *((void *)v8 + 3) = v6;
  v8[32] = v7;
  *(_OWORD *)(v8 + 40) = v9;
  v15.receiver = v3;
  v15.super_class = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = [super initWithContentView:0];
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = (void (**)())&a1[OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModelDidUpdate];
  *id v12 = sub_1000F9EA8;
  v12[1] = (void (*)())v11;
  id v13 = v10;

  swift_release();
  return v13;
}

uint64_t sub_1000F9E70()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000F9EA8()
{
}

uint64_t sub_1000F9EB0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 160, 7);
}

void sub_1000F9F28(void *a1)
{
  sub_1000F71BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_1000F9F34(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000F9FC0(uint64_t a1)
{
  return a1;
}

void sub_1000FA04C(int a1)
{
  uint64_t v2 = OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_currentState;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_currentState) == 2)
  {
    if ((a1 & 0x10000) != 0)
    {
      uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_interactor)
         + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccounsInteractor_model;
      uint64_t v4 = *(int *)(type metadata accessor for AuthenticateAccountsModel() + 36);
      int v5 = *(_DWORD *)(v3 + v4);
      BOOL v6 = __CFADD__(v5, 1);
      int v7 = v5 + 1;
      if (v6)
      {
        __break(1u);
      }
      else
      {
        *(_DWORD *)(v3 + v4) = v7;
        uint64_t v8 = v1 + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModel;
        *(unsigned char *)(v8 + 32) = 0;
        long long v9 = (void (**)(_OWORD *))(v1
                                            + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModelDidUpdate);
        id v10 = *(void (**)(void *))(v1
                                              + OBJC_IVAR____TtC18SharingViewService29AuthenticateAccountsPresenter_authViewModelDidUpdate);
        uint64_t v11 = *(void *)(v8 + 8);
        uint64_t v12 = *(void *)(v8 + 16);
        uint64_t v13 = *(void *)(v8 + 24);
        v24[0] = *(void *)v8;
        v24[1] = v11;
        v24[2] = v12;
        v24[3] = v13;
        char v25 = 0;
        long long v26 = *(_OWORD *)(v8 + 40);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10(v24);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v14 = [self mainBundle];
        v28._object = (void *)0xE000000000000000;
        v15._uint64_t countAndFlagsBits = 0x434E495F48545541;
        v15._object = (void *)0xEE0054434552524FLL;
        v16.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v16.value._object = (void *)0xEB00000000656C62;
        v17._uint64_t countAndFlagsBits = 0;
        v17._object = (void *)0xE000000000000000;
        v28._uint64_t countAndFlagsBits = 0;
        Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v28);

        *(Swift::String *)(v8 + 16) = v18;
        swift_bridgeObjectRelease();
        Swift::String v19 = *v9;
        long long v20 = *(_OWORD *)(v8 + 16);
        v22[0] = *(_OWORD *)v8;
        v22[1] = v20;
        v22[2] = *(_OWORD *)(v8 + 32);
        uint64_t v23 = *(void *)(v8 + 48);
        swift_retain();
        sub_1000F9CC8((uint64_t)v22);
        v19(v22);
        sub_1000F9D00((uint64_t)v22);
        swift_release();
      }
    }
  }
  else
  {
    id v21 = sub_1000F766C();
    *(unsigned char *)(v1 + v2) = 2;
    sub_1000B3160(v21);
  }
}

void sub_1000FA2AC(double a1, double a2, double a3, double a4)
{
  NSString v8 = String._bridgeToObjectiveC()();
  type metadata accessor for Key(0);
  sub_10001C814();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  [v8 drawInRect:a1 withAttributes:a2, a3, a4];
}

void sub_1000FA378(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

int64_t sub_1000FA3C4()
{
  uint64_t v1 = v0;
  id v2 = [v0 CGImage];
  if (!v2) {
    return 0;
  }
  id v3 = v2;
  uint64_t v4 = (CGImage *)[v0 CGImage];
  if (!v4) {
    goto LABEL_37;
  }
  int v5 = v4;
  int64_t Height = CGImageGetHeight(v4);
  size_t Width = CGImageGetWidth(v5);
  int64_t result = CGImageGetBytesPerRow(v5);
  if ((unsigned __int128)(result * (__int128)Height) >> 64 != (result * Height) >> 63)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  size_t v9 = result;
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  uint64_t v11 = (void *)swift_slowAlloc();
  size_t BitsPerComponent = CGImageGetBitsPerComponent(v5);
  CGContextRef v13 = CGBitmapContextCreate(v11, Width, Height, BitsPerComponent, v9, DeviceRGB, 2u);

  if (!v13)
  {
LABEL_37:

    return 0;
  }
  size_t v14 = CGImageGetHeight((CGImageRef)v3);
  int64_t v15 = CGImageGetWidth((CGImageRef)v3);
  double v16 = (double)v15;
  CGContextRef.draw(_:in:byTiling:)();
  Swift::String v17 = CGImageGetDataProvider((CGImageRef)v3);
  if (!v17)
  {
LABEL_36:

    goto LABEL_37;
  }
  Swift::String v18 = v17;
  CFDataRef v19 = CGDataProviderCopyData(v17);
  if (!v19)
  {

    goto LABEL_36;
  }
  CFDataRef v20 = v19;
  int64_t result = (int64_t)CFDataGetBytePtr(v19);
  if (result)
  {
    if ((v14 & 0x8000000000000000) != 0)
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    if (v14)
    {
      if (v15 < 0)
      {
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = v14;
      uint64_t v25 = v15;
      while (v23 != v14)
      {
        if (v15)
        {
          int64_t v26 = v15 * v23;
          if ((unsigned __int128)(v15 * (__int128)v23) >> 64 != (v15 * v23) >> 63) {
            goto LABEL_50;
          }
          uint64_t v27 = 0;
          while (1)
          {
            int64_t v28 = v26 + v27;
            if (__OFADD__(v26, v27)) {
              break;
            }
            if ((unint64_t)(v28 - 0x2000000000000000) >> 62 != 3) {
              goto LABEL_48;
            }
            int v29 = *(unsigned __int8 *)(result + 4 * v28);
            if (v27 >= v25) {
              uint64_t v30 = v25;
            }
            else {
              uint64_t v30 = v27;
            }
            if (v22 <= v27) {
              uint64_t v31 = v27;
            }
            else {
              uint64_t v31 = v22;
            }
            uint64_t v32 = v27 + 1;
            if (v23 >= v24) {
              uint64_t v33 = v24;
            }
            else {
              uint64_t v33 = v23;
            }
            if (v21 <= v23) {
              uint64_t v34 = v23;
            }
            else {
              uint64_t v34 = v21;
            }
            if (v29)
            {
              uint64_t v21 = v34;
              uint64_t v22 = v31;
              uint64_t v24 = v33;
              uint64_t v25 = v30;
            }
            uint64_t v27 = v32;
            if (v15 == v32) {
              goto LABEL_12;
            }
          }
          __break(1u);
LABEL_48:
          __break(1u);
          break;
        }
LABEL_12:
        if (++v23 == v14)
        {
          double v16 = (double)v25;
          int64_t v15 = v25;
          goto LABEL_42;
        }
      }
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v24 = 0;
LABEL_42:
    BOOL v36 = __OFSUB__(v22, v15);
    uint64_t v37 = v22 - v15;
    if (v36) {
      goto LABEL_53;
    }
    BOOL v36 = __OFSUB__(v21, v24);
    uint64_t v38 = v21 - v24;
    if (v36)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    v42.origin.y = (double)v24;
    v42.size.width = (double)v37;
    v42.size.height = (double)v38;
    v42.origin.x = v16;
    CGImageRef v39 = CGImageCreateWithImageInRect((CGImageRef)v3, v42);
    if (v39)
    {
      CGImageRef v40 = v39;
      [v1 scale];
      id v35 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:scale:orientation:", v40, objc_msgSend(v1, "imageOrientation"), v41);

      return (int64_t)v35;
    }

    goto LABEL_37;
  }
LABEL_56:
  __break(1u);
  return result;
}

uint64_t sub_1000FA6DC(uint64_t a1, uint64_t a2, double a3)
{
  double v6 = a3 * 0.6;
  id v7 = [self systemFontOfSize:a3 * 0.6];
  double v8 = a3 - v6;
  double v9 = (a3 - v6) * 0.5;
  id v10 = [self sharedApplication];
  id v11 = [v10 userInterfaceLayoutDirection];

  if (v11 == (id)1) {
    double v12 = -(v8 * 0.5);
  }
  else {
    double v12 = v9;
  }
  sub_100009A0C(&qword_1001C7C10);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10017C370;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 64) = sub_1000BF2A0();
  *(void *)(inited + 40) = v7;
  size_t v14 = NSFontAttributeName;
  id v15 = v7;
  unint64_t v16 = sub_100006F44(inited);
  id v17 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:a3];
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(double *)(v18 + 32) = v12;
  *(double *)(v18 + 40) = v9;
  *(double *)(v18 + 48) = a3;
  *(double *)(v18 + 56) = a3;
  *(void *)(v18 + 64) = v16;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1000FAB40;
  *(void *)(v19 + 24) = v18;
  uint64_t v34 = sub_1000FAB64;
  uint64_t v35 = v19;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  uint64_t v32 = sub_1000FA378;
  uint64_t v33 = &unk_1001A0BB8;
  CFDataRef v20 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  id v21 = [v17 imageWithActions:v20];
  _Block_release(v20);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((v20 & 1) == 0)
  {
    id v23 = (id)sub_1000FA3C4();
    if (v23)
    {
      id v29 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:a3];
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v23;
      *(double *)(v24 + 24) = a3;
      *(double *)(v24 + 32) = a3;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = sub_1000FABDC;
      *(void *)(v25 + 24) = v24;
      uint64_t v34 = sub_1000FAC68;
      uint64_t v35 = v25;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v31 = 1107296256;
      uint64_t v32 = sub_1000FA378;
      uint64_t v33 = &unk_1001A0C30;
      int64_t v26 = _Block_copy(&aBlock);
      uint64_t v27 = v15;
      id v28 = v23;
      swift_retain();
      swift_release();
      id v15 = v29;
      id v23 = [v29 imageWithActions:v26];

      _Block_release(v26);
      LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      swift_release();
      if ((v28 & 1) == 0) {
        return (uint64_t)v23;
      }
      __break(1u);
    }
    swift_release();

    return (uint64_t)v23;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000FAB00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1000FAB40()
{
  sub_1000FA2AC(v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1000FAB54()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000FAB64()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000FAB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000FAB9C()
{
  return swift_release();
}

uint64_t sub_1000FABA4()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_1000FABDC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  double v2 = *(double *)(v0 + 24);
  double v3 = *(double *)(v0 + 32);
  [v1 size];
  double v5 = v4;
  double v6 = (v2 - v4) * 0.5;
  double v8 = (v3 - v7) * 0.5;

  return [v1 drawInRect:v6, v8, v5];
}

uint64_t sub_1000FAC50()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000FAC6C()
{
  return [v0 showConfirmationRing];
}

id sub_1000FADE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScannerViewController();
  return [super dealloc];
}

id sub_1000FAEA0()
{
  return [v0 start];
}

id sub_1000FAEB0()
{
  return [v0 stop];
}

uint64_t sub_1000FAEC0()
{
  return type metadata accessor for ScannerViewController();
}

uint64_t type metadata accessor for ScannerViewController()
{
  uint64_t result = qword_1001CBFE0;
  if (!qword_1001CBFE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000FAF14()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000FAFAC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CBFF0);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CBFF0);
  if (qword_1001C6ED8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D1498);
  double v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000FB074()
{
  uint64_t v1 = v0;
  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v3 = (void *)Strong;
    sub_1000C5ED0();
    if (v4)
    {
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v5 = 0;
    }
    [v1 setTitle:v5];

    [v1 setDismissalType:1];
    *((unsigned char *)v1 + OBJC_IVAR____TtC18SharingViewService25AirTagMovieViewController_shouldSkipEngageMovie) = 1;
    sub_10009CF4C(39);
    double v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 showActivityIndicatorWithStatus:v7];
  }
  else
  {
    if (qword_1001C7130 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100012C4C(v6, (uint64_t)qword_1001CBFF0);
    double v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v7, v8))
    {
      double v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "mainController is nil during viewDidLoad", v9, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t type metadata accessor for AirTagLoadingViewController()
{
  return self;
}

uint64_t sub_1000FB2E0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CC030);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CC030);
  if (qword_1001C6ED8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D1498);
  double v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000FB3A8(char a1)
{
  uint64_t v2 = v1;
  v53.receiver = v1;
  v53.super_class = (Class)type metadata accessor for AirTagErrorViewController();
  [super viewWillAppear:a1 & 1];
  if (!*(void *)&v1[OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_errorTitle + 8]) {
    sub_10009CF4C(121);
  }
  swift_bridgeObjectRetain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v4];

  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_message + 8];
  if (v5)
  {
    long long aBlock = *(void ***)&v1[OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_message];
    uint64_t v48 = v5;
    swift_bridgeObjectRetain();
    if (IsAppleInternalBuild())
    {
      uint64_t v6 = OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_error;
      if (*(void *)&v1[OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_error])
      {
        _StringGuts.grow(_:)(26);
        swift_bridgeObjectRelease();
        if (*(void *)&v1[v6])
        {
          swift_errorRetain();
          double v7 = (void *)_convertErrorToNSError(_:)();
          swift_errorRelease();
        }
        else
        {
          double v7 = 0;
        }
        NSErrorToOSStatus();

        v8._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v8);
        swift_bridgeObjectRelease();
        v9._uint64_t countAndFlagsBits = 41;
        v9._object = (void *)0xE100000000000000;
        String.append(_:)(v9);
        v10._uint64_t countAndFlagsBits = 0xD000000000000017;
        v10._object = (void *)0x800000010015C920;
        String.append(_:)(v10);
        swift_bridgeObjectRelease();
      }
    }
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v2 setSubtitle:v11];
  }
  [v2 setDismissalType:1];
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Swift::String v51 = sub_1000FC0D4;
  uint64_t v52 = v12;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v48 = 1107296256;
  id v49 = sub_1000215A4;
  uint64_t v50 = &unk_1001A0C98;
  size_t v14 = _Block_copy(&aBlock);
  id v15 = [self actionWithTitle:v13 style:0 handler:v14];

  _Block_release(v14);
  swift_release();
  swift_release();

  id v16 = [self configurationWithPointSize:4 weight:50.0];
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [self systemImageNamed:v17 withConfiguration:v16];

  id v19 = [objc_allocWithZone((Class)UIImageView) initWithImage:v18];
  id v20 = [self systemRedColor];
  [v19 setTintColor:v20];

  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v19 setContentMode:1];
  id v21 = [v2 contentView];
  [v21 addSubview:v19];

  if (v18)
  {
    [v18 size];
    double v23 = v22;
    double v25 = v24;
  }
  else
  {
    double v25 = 0.0;
    double v23 = 0.0;
  }
  id v26 = [v2 contentView];
  id v27 = [v26 mainContentGuide];

  id v28 = self;
  sub_100009A0C((uint64_t *)&unk_1001C8370);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10017C530;
  id v30 = [v19 centerXAnchor];
  id v31 = [v27 centerXAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v29 + 32) = v32;
  id v33 = [v19 centerYAnchor];
  id v34 = [v27 centerYAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v29 + 40) = v35;
  id v36 = [v19 heightAnchor];
  id v37 = [v36 constraintEqualToConstant:v25];

  *(void *)(v29 + 48) = v37;
  id v38 = [v19 widthAnchor];
  id v39 = [v38 constraintEqualToConstant:v23];

  *(void *)(v29 + 56) = v39;
  id v40 = [v19 topAnchor];
  id v41 = [v27 topAnchor];
  id v42 = [v40 constraintGreaterThanOrEqualToAnchor:v41];

  *(void *)(v29 + 64) = v42;
  id v43 = [v19 bottomAnchor];
  id v44 = [v27 bottomAnchor];
  id v45 = [v43 constraintLessThanOrEqualToAnchor:v44];

  *(void *)(v29 + 72) = v45;
  long long aBlock = (void **)v29;
  specialized Array._endMutation()();
  sub_100012BB4();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v28 activateConstraints:isa];
}

void sub_1000FBB20()
{
  uint64_t v0 = sub_100009A0C(&qword_1001C7620);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001C7138 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100012C4C(v3, (uint64_t)qword_1001CC030);
  NSString v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    v17[1] = 46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "errorVC \"Ok\" pressed in %ld", v6, 0xCu);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v8 = (void *)Strong;
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    if (v9)
    {
      Swift::String v10 = (void *)v9;
      uint64_t v11 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v2, 1, 1, v11);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v8;
      id v13 = v8;
      sub_1000CADDC(5, (uint64_t)v2, (uint64_t)sub_1000FC12C, v12, 53);

      swift_release();
      sub_100012CC4((uint64_t)v2);
      return;
    }
  }
  size_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "mainController nil while initializing primaryAction", v16, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1000FBDE4(uint64_t result)
{
  uint64_t v1 = *(void (**)(uint64_t))(result
                                      + OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_onDoneAction);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    return sub_100017C38((uint64_t)v1);
  }
  return result;
}

id sub_1000FBEE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AirTagErrorViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for AirTagErrorViewController()
{
  return self;
}

id sub_1000FBFDC(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_onDoneAction];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  NSString v4 = &v1[OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_message];
  *(void *)NSString v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_error] = 0;
  os_log_type_t v5 = &v1[OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_errorTitle];
  *(void *)os_log_type_t v5 = 0;
  *((void *)v5 + 1) = 0;
  uint64_t v6 = (uint64_t *)&v1[OBJC_IVAR____TtC18SharingViewService25AirTagErrorViewController_defaultBtnTitle];
  double v7 = v1;
  *uint64_t v6 = sub_10009CF4C(120);
  v6[1] = v8;
  swift_unknownObjectWeakInit();

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for AirTagErrorViewController();
  return [super initWithContentView:a1];
}

uint64_t sub_1000FC09C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000FC0D4()
{
}

uint64_t sub_1000FC0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000FC0EC()
{
  return swift_release();
}

uint64_t sub_1000FC0F4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FC12C()
{
  return sub_1000FBDE4(*(void *)(v0 + 16));
}

uint64_t sub_1000FC134()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012D24(v0, qword_1001CC0A0);
  uint64_t v1 = sub_100012C4C(v0, (uint64_t)qword_1001CC0A0);
  if (qword_1001C6ED8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100012C4C(v0, (uint64_t)qword_1001D1498);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000FC1FC()
{
  v61.receiver = v0;
  v61.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [self traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryLarge];
    [v2 _setLocalOverrideTraitCollection:v3];

    NSString v4 = self;
    id v5 = [v4 mainBundle];
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = sub_100138304(v5, v6, v7);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v0 setTitle:v9];

    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = sub_1001374C4(v10);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v12 = [v4 mainBundle];
    NSString v13 = String._bridgeToObjectiveC()();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = sub_100138304(v12, v13, v14);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v0 setSubtitle:v16];

    [v0 setDismissalType:1];
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    NSString v18 = String._bridgeToObjectiveC()();
    NSString v59 = sub_1000FD0D0;
    uint64_t v60 = v17;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v56 = 1107296256;
    id v57 = sub_1000215A4;
    NSString v58 = &unk_1001A0D10;
    id v19 = _Block_copy(&aBlock);
    id v20 = self;
    id v21 = [v20 actionWithTitle:v18 style:0 handler:v19];

    _Block_release(v19);
    swift_release();
    swift_release();
    [v0 setDismissButtonAction:v21];

    sub_10009CF4C(120);
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v59 = sub_1000FD0F0;
    uint64_t v60 = v22;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v56 = 1107296256;
    id v57 = sub_1000215A4;
    NSString v58 = &unk_1001A0D38;
    double v24 = _Block_copy(&aBlock);
    id v54 = [v20 actionWithTitle:v23 style:0 handler:v24];

    _Block_release(v24);
    swift_release();
    swift_release();

    id v25 = [self configurationWithPointSize:4 weight:50.0];
    NSString v26 = String._bridgeToObjectiveC()();
    id v53 = [self systemImageNamed:v26 withConfiguration:v25];

    id v27 = [objc_allocWithZone((Class)UIImageView) initWithImage:v53];
    id v28 = [self systemRedColor];
    [v27 setTintColor:v28];

    [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v0 contentView];
    [v29 addSubview:v27];

    id v52 = self;
    sub_100009A0C((uint64_t *)&unk_1001C8370);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_10017CA90;
    id v31 = [v27 topAnchor];
    id v32 = [v0 contentView];
    id v33 = [v32 mainContentGuide];

    id v34 = [v33 topAnchor];
    id v35 = [v31 constraintGreaterThanOrEqualToAnchor:v34];

    *(void *)(v30 + 32) = v35;
    id v36 = [v27 centerXAnchor];
    id v37 = [v0 contentView];
    id v38 = [v37 mainContentGuide];

    id v39 = [v38 centerXAnchor];
    id v40 = [v36 constraintEqualToAnchor:v39];

    *(void *)(v30 + 40) = v40;
    id v41 = [v27 centerYAnchor];
    id v42 = [v0 contentView];
    id v43 = [v42 mainContentGuide];

    id v44 = [v43 centerYAnchor];
    id v45 = [v41 constraintEqualToAnchor:v44];

    *(void *)(v30 + 48) = v45;
    id v46 = [v27 bottomAnchor];
    id v47 = [v0 contentView];
    id v48 = [v47 mainContentGuide];

    id v49 = [v48 bottomAnchor];
    id v50 = [v46 constraintLessThanOrEqualToAnchor:v49];

    *(void *)(v30 + 56) = v50;
    long long aBlock = (void **)v30;
    specialized Array._endMutation()();
    sub_100012BB4();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v52 activateConstraints:isa];
  }
  else
  {
    __break(1u);
  }
}

void sub_1000FCAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  NSString v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001C7140 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100012C4C(v3, (uint64_t)qword_1001CC0A0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  swift_retain_n();
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    NSString v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    v22[0] = v19;
    *(_DWORD *)NSString v10 = 136315138;
    swift_beginAccess();
    uint64_t v20 = a2 + 16;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {
      swift_release();
      __break(1u);
      return;
    }
    id v12 = (void *)Strong;
    swift_getObjectType();

    uint64_t v13 = _typeName(_:qualified:)();
    uint64_t v21 = sub_100025CA0(v13, v14, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "dismissPressed in %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_beginAccess();
  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    NSString v16 = (void *)v15;
    uint64_t v17 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v17)
    {
      [v17 dismiss:0];
    }
  }
}

void sub_1000FCE04()
{
  if (qword_1001C7140 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100012C4C(v0, (uint64_t)qword_1001CC0A0);
  id v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Ok button (RestrictedView) pressed in %ld", v3, 0xCu);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    NSString v6 = swift_unknownObjectWeakLoadStrong();
    if (v6)
    {
      uint64_t v7 = v6;
      [v6 dismiss:0];

      goto LABEL_11;
    }
  }
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "mainController nil while initializing primaryAction", v9, 2u);
    swift_slowDealloc();
  }
LABEL_11:
}

uint64_t type metadata accessor for AirTagRestrictedViewController()
{
  return self;
}

uint64_t sub_1000FD098()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000FD0D0(uint64_t a1)
{
  sub_1000FCAF4(a1, v1);
}

uint64_t sub_1000FD0D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000FD0E8()
{
  return swift_release();
}

void sub_1000FD0F0()
{
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t start(int a1, char **a2)
{
  LogControl();
  uint64_t v5 = UIApplicationMain(a1, a2, 0, @"AppDelegate");
  return v5;
}

id sub_1000FD554(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

void sub_1000FDBA8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (dword_1001CC250 <= 90 && (dword_1001CC250 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000FDCDC;
    block[3] = &unk_1001A1BD8;
    block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else if (dword_1001CC250 <= 30 && (dword_1001CC250 != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

id sub_1000FDCDC(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 49) = 0;
  [*(id *)(*(void *)(a1 + 32) + 41) setEnabled:1];
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 57);

  return [v2 setHidden:1];
}

Class sub_1000FDD48()
{
  if (qword_1001D1378 != -1) {
    dispatch_once(&qword_1001D1378, &stru_1001A0D60);
  }
  Class result = objc_getClass("ASDSystemAppRequest");
  qword_1001D1370 = (uint64_t)result;
  off_1001CC2C0 = (uint64_t (*)())sub_1000FDDAC;
  return result;
}

id sub_1000FDDAC()
{
  return (id)qword_1001D1370;
}

void sub_1000FDDB8(id a1)
{
  qword_1001D1380 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AppStoreDaemon.framework/AppStoreDaemon", 2);
}

id sub_1000FE1F0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _launchHomeApp];
}

void sub_1000FF438(id a1, BOOL a2, NSError *a3)
{
  BOOL v3 = a2;
  uint64_t v4 = a3;
  uint64_t v5 = v4;
  os_log_type_t v9 = v4;
  if (dword_1001CC2C8 <= 30)
  {
    if (dword_1001CC2C8 != -1 || (uint64_t v4 = (NSError *)_LogCategory_Initialize(), v5 = v9, v4))
    {
      uint64_t v4 = (NSError *)LogPrintF();
      uint64_t v5 = v9;
    }
  }
  if (v3)
  {
    id v6 = objc_alloc_init((Class)NSMutableDictionary);
    [v6 setObject:@"com.apple.siri.spoken-messages.opt-in.dismissed" forKeyedSubscript:@"signalIdentifier"];
    [v6 setObject:@"com.apple.Sharing" forKeyedSubscript:@"sourceBundleIdentifier"];
    uint64_t v7 = +[_CDContextualKeyPath keyPathWithKey:@"/discoverability/signals/dataDictionary"];
    os_log_type_t v8 = +[_CDClientContext userContext];
    [v8 setObject:v6 forKeyedSubscript:v7];

    uint64_t v5 = v9;
  }

  _objc_release_x1(v4, v5);
}

void sub_1000FF898(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 104));
  _Unwind_Resume(a1);
}

void sub_1000FF8EC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleContinueButton];
}

void sub_1000FF92C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleDoNotAnnounceButton];
}

void sub_1000FF96C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleDismissButton];
}

id sub_100101B6C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _handleVisualAuthEvent:a2];
}

id sub_100101B78(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _handleVisualAuthScannedCode:a2];
}

void sub_100101B84(uint64_t a1)
{
  id v1 = [*(id *)(*(void *)(a1 + 32) + 120) view];
  [v1 setHidden:1];
}

const char *sub_100101F84(int a1)
{
  if (a1 > 299)
  {
    if (a1 <= 799)
    {
      if (a1 <= 519)
      {
        if (a1 <= 410)
        {
          if (a1 <= 399)
          {
            if (a1 == 300) {
              return "BackupProgress";
            }
            if (a1 == 310) {
              return "SyncProgress";
            }
          }
          else
          {
            switch(a1)
            {
              case 400:
                return "StopSetup";
              case 401:
                return "PINPair";
              case 410:
                return "MigrateStart";
            }
          }
        }
        else if (a1 > 430)
        {
          switch(a1)
          {
            case 431:
              return "eSimExternal2FAStop";
            case 500:
              return "SiriWelcome";
            case 510:
              return "SiriDialogA";
          }
        }
        else
        {
          switch(a1)
          {
            case 411:
              return "MigrateStop";
            case 420:
              return "FileTransferReady";
            case 430:
              return "eSimExternal2FAStart";
          }
        }
      }
      else if (a1 > 559)
      {
        if (a1 > 599)
        {
          switch(a1)
          {
            case 600:
              return "SiriSkipDemo";
            case 700:
              return "StopSetupLEDs";
            case 710:
              return "AudioPasscodeEnded";
          }
        }
        else
        {
          switch(a1)
          {
            case 560:
              return "SiriDialogCMusic";
            case 570:
              return "SiriDialogCNews";
            case 580:
              return "SiriDialogCWeather";
          }
        }
      }
      else if (a1 > 549)
      {
        switch(a1)
        {
          case 550:
            return "SiriDialogBWeather";
          case 555:
            return "SiriDialogBClock";
          case 558:
            return "SiriDialogBMusic";
        }
      }
      else
      {
        switch(a1)
        {
          case 520:
            return "SiriDialogBStart";
          case 530:
            return "SiriDialogBHome";
          case 540:
            return "SiriDialogBNews";
        }
      }
      return "?";
    }
    if (a1 > 999)
    {
      if (a1 <= 1099)
      {
        if (a1 == 1000) {
          return "SecureIntentStart";
        }
        if (a1 == 1001) {
          return "SecureIntentFinish";
        }
      }
      else
      {
        switch(a1)
        {
          case 1100:
            return "OneTimeCodeDetected";
          case 2000:
            return "DependentStart";
          case 2001:
            return "DependentEnd";
        }
      }
      return "?";
    }
    switch(a1)
    {
      case 900:
        Class result = "SU-No-SetupScanAttempt";
        break;
      case 901:
        Class result = "SU-No-SetupStatusUpdate";
        break;
      case 902:
        Class result = "SU-No-SetupWipeWifi";
        break;
      case 903:
        Class result = "SU-No-SetupCancelled";
        break;
      case 904:
        Class result = "SU-No-SetupObliterate";
        break;
      case 905:
        Class result = "SU-No-SetupCannotCancel";
        break;
      case 906:
        Class result = "SysDrop AirDrop Event";
        break;
      case 907:
        Class result = "SysDrop Sysdiagnose Event";
        break;
      case 908:
        Class result = "SysDrop Cancel Event";
        break;
      case 909:
        Class result = "File Transfer Progress Event";
        break;
      case 910:
        Class result = "File Transfer Completed Event";
        break;
      case 911:
        Class result = "iOSWiFiSetup";
        break;
      case 912:
        Class result = "HKPrimaryResidentSSIDFetchStart";
        break;
      case 913:
        Class result = "LoggingProfileTransfer";
        break;
      default:
        switch(a1)
        {
          case 800:
            Class result = "AuthAccountsStart";
            break;
          case 803:
            Class result = "AuthAccountsiCloudProgress";
            break;
          case 804:
            Class result = "AuthAccountsStoreProgress";
            break;
          case 805:
            Class result = "AuthAccountsGameCenterProgress";
            break;
          default:
            return "?";
        }
        break;
    }
  }
  else if (a1 > 129)
  {
    if (a1 > 249)
    {
      switch(a1)
      {
        case 260:
          Class result = "TVLSStart";
          break;
        case 261:
        case 262:
        case 263:
        case 265:
        case 266:
        case 267:
        case 268:
        case 269:
        case 271:
        case 273:
        case 275:
          return "?";
        case 264:
          Class result = "TVLSFinish";
          break;
        case 270:
          Class result = "TVLSEstimateStart";
          break;
        case 272:
          Class result = "TVLSEstimateFinal";
          break;
        case 274:
          Class result = "TVLSEstimateFailed";
          break;
        case 276:
          Class result = "TVLSTryAgain";
          break;
        case 277:
          Class result = "TVLSToneBegan";
          break;
        case 278:
          Class result = "TVLCalStart";
          break;
        case 279:
          Class result = "TVLCalStep";
          break;
        case 280:
          Class result = "TVLCalFailed";
          break;
        case 281:
          Class result = "TVLCalTryAgain";
          break;
        case 282:
          Class result = "TVLCalFinal";
          break;
        default:
          if (a1 != 250) {
            return "?";
          }
          Class result = "ReportSuccess";
          break;
      }
    }
    else
    {
      if (a1 <= 219)
      {
        if (a1 <= 149)
        {
          if (a1 == 130) {
            return "WiFiPoweredOff";
          }
          if (a1 == 140) {
            return "RecognizeVoice";
          }
        }
        else
        {
          switch(a1)
          {
            case 150:
              return "SiriForEveryone";
            case 200:
              return "WiFiStart";
            case 210:
              return "ActivationStart";
          }
        }
        return "?";
      }
      switch(a1)
      {
        case 230:
          return "HomeKitStart";
        case 231:
        case 232:
        case 233:
        case 235:
        case 237:
        case 238:
        case 239:
          return "?";
        case 234:
          return "HomeKitSetupStart";
        case 236:
          return "CDPSetupStart";
        case 240:
          return "BuddyStarting";
        case 241:
          return "BuddyProgress";
        case 242:
          return "BuddyFinished";
        default:
          if (a1 == 220)
          {
            Class result = "iCloudStart";
          }
          else
          {
            if (a1 != 224) {
              return "?";
            }
            Class result = "AppleIDSetupStart";
          }
          break;
      }
    }
  }
  else
  {
    if (a1 <= 79)
    {
      if (a1 > 49)
      {
        if (a1 > 64)
        {
          if (a1 == 65) {
            return "SecurityAPCLoopStart";
          }
          if (a1 == 70) {
            return "SecurityFinish";
          }
        }
        else
        {
          if (a1 == 50) {
            return "PreAuthFinish";
          }
          if (a1 == 60) {
            return "SecurityStart";
          }
        }
      }
      else
      {
        if (a1 > 29)
        {
          switch(a1)
          {
            case 30:
              Class result = "Error";
              break;
            case 31:
              Class result = "SessionStarted";
              break;
            case 32:
              Class result = "SessionEnded";
              break;
            case 33:
              Class result = "SessionSecured";
              break;
            case 35:
              Class result = "ConnectStart";
              break;
            case 40:
              Class result = "PreAuthStart";
              break;
            default:
              return "?";
          }
          return result;
        }
        switch(a1)
        {
          case 0:
            return "Invalid";
          case 10:
            return "Start";
          case 20:
            return "Final";
        }
      }
      return "?";
    }
    if (a1 > 119)
    {
      switch(a1)
      {
        case 'x':
          return "CheckingiCloud";
        case 'z':
          return "CheckingAppleMusic";
        case '|':
          return "CheckingAccount";
      }
      return "?";
    }
    switch(a1)
    {
      case 'P':
        Class result = "BasicConfigStart";
        break;
      case 'Z':
        Class result = "BasicConfigFinish";
        break;
      case '\\':
        Class result = "StepStart";
        break;
      case '^':
        Class result = "StepFinish";
        break;
      case '_':
        Class result = "PreFinish";
        break;
        Class result = "SetupFinished";
        break;
      case 'a':
        Class result = "SetupResumed";
        break;
      case 'b':
        Class result = "SetupSuspend";
        break;
      case 'c':
        Class result = "SetupPeerSWUpdate";
        break;
      case 'd':
        Class result = "Finished";
        break;
      default:
        return "?";
    }
  }
  return result;
}

void sub_10010289C(uint64_t a1)
{
  id v1 = [*(id *)(*(void *)(a1 + 32) + 104) containerView];
  [v1 reactivate];
}

id sub_100102A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _sessionHandleProgress:a2 info:a3];
}

id sub_100102AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (dword_1001CC338 <= 30 && (dword_1001CC338 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  id v6 = *(void **)(a1 + 32);

  return _[v6 showAuthUIWithFlags:a2 throttleSeconds:a3 animated:1];
}

void sub_10010345C(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CC338 <= 50 && (dword_1001CC338 != -1 || _LogCategory_Initialize()))
  {
    id v3 = v4;
    LogPrintF();
  }
  [*(id *)(*(void *)(a1 + 32) + 192) sendAppEvent:&off_1001A70A0 v3];
}

void sub_100103514(uint64_t a1, void *a2)
{
  id v6 = a2;
  if ([v6 type] == 1)
  {
    if (dword_1001CC338 <= 50 && (dword_1001CC338 != -1 || _LogCategory_Initialize()))
    {
      id v3 = [*(id *)(a1 + 32) targetID];
      id v4 = [*(id *)(a1 + 32) peerPublicKey];
      uint64_t v5 = [*(id *)(a1 + 32) selfPublicKey];
      LogPrintF();
    }
  }
  else if (dword_1001CC338 <= 50 && (dword_1001CC338 != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

void sub_100103654(id a1, RPFileTransferItem *a2, id a3)
{
  uint64_t v5 = a2;
  id v4 = (void (**)(id, void))a3;
  if (dword_1001CC338 <= 50 && (dword_1001CC338 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  v4[2](v4, 0);
}

id sub_100103B04(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

void sub_100104424(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (dword_1001CC338 <= 30 && (dword_1001CC338 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  [*(id *)(*(void *)(a1 + 32) + 24) dismiss:*(unsigned int *)(a1 + 40)];
}

void sub_1001044D0(id a1, UIAlertAction *a2)
{
  uint64_t v2 = a2;
  id v3 = v2;
  if (dword_1001CC338 <= 30)
  {
    id v4 = v2;
    if (dword_1001CC338 != -1 || (uint64_t v2 = (UIAlertAction *)_LogCategory_Initialize(), v3 = v4, v2))
    {
      uint64_t v2 = (UIAlertAction *)LogPrintF();
      id v3 = v4;
    }
  }

  _objc_release_x1(v2, v3);
}

void sub_100104ABC(uint64_t a1, int a2)
{
  if (a2 || MKBGetDeviceLockState() - 1 >= 2)
  {
    if (dword_1001CC338 <= 30 && (dword_1001CC338 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    id v3 = objc_alloc_init((Class)SFClient);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_100104CAC;
    void v8[3] = &unk_1001A0EE0;
    uint64_t v4 = *(void *)(a1 + 40);
    id v9 = v3;
    uint64_t v10 = v4;
    id v5 = v3;
    [v5 retriggerProximitySetup:v8];
  }
  else
  {
    if (dword_1001CC338 <= 30 && (dword_1001CC338 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    [*(id *)(*(void *)(a1 + 32) + 24) dismiss:10];
    id v6 = (void *)UIApp;
    uint64_t v7 = *(void *)(a1 + 40);
    [v6 endBackgroundTask:v7];
  }
}

id sub_100104C58(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  uint64_t v2 = *(void **)(*(void *)(a1 + 40) + 24);

  return _[v2 showAuthUIWithFlags:0 throttleSeconds:0xFFFFFFFFLL animated:1];
}

void sub_100104CAC(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CC338 <= 30 && (dword_1001CC338 != -1 || _LogCategory_Initialize()))
  {
    id v3 = v4;
    LogPrintF();
  }
  [*(id *)(a1 + 32) invalidate:v3];
  [UIApp endBackgroundTask:*(void *)(a1 + 40)];
}

void sub_100104D64(id a1)
{
  if (dword_1001CC338 <= 30 && (dword_1001CC338 != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

id sub_100105CAC(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  unsigned int v2 = [*(id *)(a1 + 40) isEqual:@"123456"];
  id v3 = *(void **)(a1 + 48);
  if (v2)
  {
    id v4 = (void *)v3[3];
    return [v4 showFinishUI];
  }
  else
  {
    return [v3 showWithFlags:0x10000 throttleSeconds:0xFFFFFFFFLL];
  }
}

void sub_100105F9C(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) view];
  [v7 bounds];
  double MidX = CGRectGetMidX(v9);
  id v3 = [*(id *)(a1 + 32) containerView];
  [v3 center];
  double v5 = v4;
  id v6 = [*(id *)(a1 + 32) containerView];
  [v6 setCenter:MidX, v5];
}

void sub_100106038(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 layoutIfNeeded];
}

void sub_10010648C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 length];
  double v4 = [*(id *)(*(void *)(a1 + 32) + 49) digits];
  id v5 = [v4 count];

  if (v3 == v5) {
    [*(id *)(a1 + 32) _handlePINEntered:v6];
  }
}

id sub_1001068BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

id sub_10010705C(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  unsigned int v2 = *(void **)(*(void *)(a1 + 40) + 24);

  return [v2 showBackupSyncUI:300 info:0];
}

id sub_100107444(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  unsigned int v2 = *(void **)(a1 + 40);

  return [v2 _handleTestTimerFired];
}

void sub_100108D58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    long long v8 = 0u;
    long long v9 = 0u;
    long long v6 = 0u;
    long long v7 = 0u;
    id v1 = *(id *)(a1 + 32);
    id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    if (v2)
    {
      id v3 = v2;
      uint64_t v4 = *(void *)v7;
      do
      {
        for (uint64_t i = 0; i != v3; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v7 != v4) {
            objc_enumerationMutation(v1);
          }
          [*(id *)(*((void *)&v6 + 1) + 8 * i) animationDidStart];
        }
        id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
      }
      while (v3);
    }
  }
  if (dword_1001CC3A8 <= 10 && (dword_1001CC3A8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
}

void sub_100108ED0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100108F54;
  block[3] = &unk_1001A1BD8;
  id v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100108F54(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 32);
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) animationDidComplete:(void)v6];
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_100109178(uint64_t a1)
{
  id v1 = *(const void **)(a1 + 32);
  if (v1) {
    CFRelease(v1);
  }
}

void sub_1001097B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  obuint64_t j = [v3 animationKeys];
  id v4 = [obj countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v24;
    do
    {
      long long v7 = 0;
      do
      {
        if (*(void *)v24 != v6) {
          objc_enumerationMutation(obj);
        }
        uint64_t v8 = *(void *)(*((void *)&v23 + 1) + 8 * (void)v7);
        long long v9 = [v3 animationPlayerForKey:v8];
        uint64_t v10 = [v9 animation];
        [v10 duration];
        double v12 = v11;
        double v13 = *(double *)(*(void *)(a1 + 32) + 96);
        if (v13 != v12 && dword_1001CC3A8 <= 50)
        {
          if (dword_1001CC3A8 != -1) {
            goto LABEL_9;
          }
          if (_LogCategory_Initialize())
          {
            double v13 = *(double *)(*(void *)(a1 + 32) + 96);
LABEL_9:
            double v19 = v12;
            double v20 = v13;
            LogPrintF();
          }
        }
        [v10 setUsesSceneTimeBase:1 * v19, v20];
        [v10 setRepeatCount:0.0];
        [v3 removeAnimationForKey:v8];
        [v3 addAnimation:v10 forKey:v8];

        long long v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v14 = [obj countByEnumeratingWithState:&v23 objects:v27 count:16];
      id v5 = v14;
    }
    while (v14);
  }

  uint64_t v15 = [v3 geometry];
  NSString v16 = (void *)v15;
  if (v15)
  {
    uint64_t v17 = *(void *)(a1 + 32);
    if (v15 != *(void *)(v17 + 64))
    {
      objc_storeStrong((id *)(v17 + 40), a2);
      objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), v16);
    }
  }
  uint64_t v18 = [v3 camera];
  if (v18) {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 32), a2);
  }
}

id sub_10010A658(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

void sub_10010A924(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CC478 <= 60 && (dword_1001CC478 != -1 || _LogCategory_Initialize()))
  {
    id v3 = v4;
    LogPrintF();
  }
  [*(id *)(a1 + 32) invalidate:v3];
}

void sub_10010A9C8(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CC478 <= 30 && (dword_1001CC478 != -1 || _LogCategory_Initialize()))
  {
    id v3 = v4;
    LogPrintF();
  }
  [*(id *)(a1 + 32) invalidate:v3];
}

void sub_10010AD88(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (dword_1001CC478 <= 30 && (dword_1001CC478 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  [*(id *)(a1 + 32) dismiss:8];
}

void sub_10010AF3C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 32);
  if (v2)
  {
    id v4 = v2;
    dispatch_source_cancel(v4);
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void **)(v5 + 32);
    *(void *)(v5 + 32) = 0;

    uint64_t v1 = *(void *)(a1 + 32);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(v1 + 40));
  [WeakRetained dismiss:8];
}

void sub_10010B240(uint64_t a1)
{
  if (dword_1001CC478 <= 30 && (dword_1001CC478 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10010B4DC;
  block[3] = &unk_1001A1BD8;
  id v3 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10010B320(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(void *)(v1 + 24) != 20)
  {
    id v3 = *(void **)(v1 + 32);
    if (v3)
    {
      id v4 = v3;
      dispatch_source_cancel(v4);
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = *(void **)(v5 + 32);
      *(void *)(v5 + 32) = 0;
    }
    dispatch_source_t v7 = dispatch_source_create((dispatch_source_type_t)&_dispatch_source_type_timer, 0, 0, (dispatch_queue_t)&_dispatch_main_q);
    uint64_t v8 = *(void *)(a1 + 32);
    long long v9 = *(void **)(v8 + 32);
    *(void *)(v8 + 32) = v7;

    uint64_t v10 = *(void *)(a1 + 32);
    double v11 = *(NSObject **)(v10 + 32);
    handler[0] = _NSConcreteStackBlock;
    handler[1] = 3221225472;
    handler[2] = sub_10010B440;
    handler[3] = &unk_1001A1BD8;
    handler[4] = v10;
    dispatch_source_set_event_handler(v11, handler);
    SFDispatchTimerSet();
    dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 32) + 32));
  }
}

id sub_10010B440(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 32);
  if (v3)
  {
    id v4 = v3;
    dispatch_source_cancel(v4);
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void **)(v5 + 32);
    *(void *)(v5 + 32) = 0;

    uint64_t v2 = *(void *)(a1 + 32);
  }
  [*(id *)(v2 + 8) setColorMode:0 animated:1];
  dispatch_source_t v7 = *(void **)(*(void *)(a1 + 32) + 8);

  return [v7 setState:9 animated:1 completionHandler:0];
}

id sub_10010B4DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) uiOperationEnd];
}

void sub_10010B898(id a1)
{
  if (dword_1001CC478 <= 30 && (dword_1001CC478 != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

void sub_10010C014(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (dword_1001CC478 <= 30 && (dword_1001CC478 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  [*(id *)(a1 + 32) dismiss:8];
}

id sub_10010C47C(uint64_t a1)
{
  if (dword_1001CC478 <= 30 && (dword_1001CC478 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 dismissIfIdle];
}

id sub_10010C500(uint64_t a1)
{
  if (dword_1001CC478 <= 30 && (dword_1001CC478 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v2 = *(void **)(a1 + 32);

  return _[v2 dismissIfIdle];
}

void sub_10010C584(uint64_t a1, void *a2)
{
  id v5 = a2;
  if (dword_1001CC478 <= 30 && (dword_1001CC478 != -1 || _LogCategory_Initialize()))
  {
    id v4 = v5;
    LogPrintF();
  }
  id v3 = [*(id *)(*(void *)(a1 + 32) + 56) remoteObjectProxyWithErrorHandler:&stru_1001A0F98 v4];
  [v3 uiActivatedWithCompletion:&stru_1001A0FB8];
}

void sub_10010C654(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = v2;
  if (v2)
  {
    if (dword_1001CC478 <= 60)
    {
      id v4 = v2;
      if (dword_1001CC478 != -1 || (uint64_t v2 = (NSError *)_LogCategory_Initialize(), v3 = v4, v2))
      {
LABEL_7:
        uint64_t v2 = (NSError *)LogPrintF();
        id v3 = v4;
      }
    }
  }
  else if (dword_1001CC478 <= 30)
  {
    id v4 = 0;
    if (dword_1001CC478 != -1) {
      goto LABEL_7;
    }
    uint64_t v2 = (NSError *)_LogCategory_Initialize();
    id v3 = 0;
    if (v2) {
      goto LABEL_7;
    }
  }

  _objc_release_x1(v2, v3);
}

void sub_10010C73C(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = v2;
  if (dword_1001CC478 <= 60)
  {
    id v4 = v2;
    if (dword_1001CC478 != -1 || (uint64_t v2 = (NSError *)_LogCategory_Initialize(), v3 = v4, v2))
    {
      uint64_t v2 = (NSError *)LogPrintF();
      id v3 = v4;
    }
  }

  _objc_release_x1(v2, v3);
}

id sub_10010D2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _sessionHandleProgress:a2 info:a3];
}

id sub_10010D2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (dword_1001CC5A8 <= 30 && (dword_1001CC5A8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  uint64_t v6 = *(void **)(a1 + 32);

  return _[v6 showAuthUIWithFlags:a2 throttleSeconds:a3 animated:1];
}

id sub_10010D924(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _deviceFound:a2];
}

id sub_10010D930(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _deviceLost:a2];
}

id sub_10010D93C(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _deviceFound:a2];
}

void sub_10010D948(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (dword_1001CC5A8 <= 30 && (dword_1001CC5A8 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    goto LABEL_31;
  }
  if (dword_1001CC5A8 <= 30 && (dword_1001CC5A8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  v10[0] = @"scanRate";
  uint64_t v4 = (uint64_t)[*(id *)(*(void *)(a1 + 32) + 24) scanRate];
  if (v4 <= 19)
  {
    id v5 = "Invalid";
    switch(v4)
    {
      case 0:
        goto LABEL_28;
      case 1:
        id v5 = "BackgroundOld";
        break;
      case 2:
        id v5 = "NormalOld";
        break;
      case 3:
        id v5 = "HighOld";
        break;
      case 4:
        id v5 = "AggressiveOld";
        break;
      case 10:
        id v5 = "Background";
        break;
      default:
        goto LABEL_27;
    }
    goto LABEL_28;
  }
  if (v4 > 39)
  {
    if (v4 == 40)
    {
      id v5 = "High";
      goto LABEL_28;
    }
    if (v4 == 50)
    {
      id v5 = "Aggressive";
      goto LABEL_28;
    }
LABEL_27:
    id v5 = "?";
    goto LABEL_28;
  }
  if (v4 == 20)
  {
    id v5 = "Normal";
    goto LABEL_28;
  }
  if (v4 != 30) {
    goto LABEL_27;
  }
  id v5 = "HighNormal";
LABEL_28:
  uint64_t v6 = +[NSString stringWithUTF8String:v5];
  dispatch_source_t v7 = (void *)v6;
  CFStringRef v8 = @"?";
  if (v6) {
    CFStringRef v8 = (const __CFString *)v6;
  }
  v10[1] = @"state";
  v11[0] = v8;
  v11[1] = @"Start";
  long long v9 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:2];
  SFPowerLogEvent();

LABEL_31:
}

id sub_10010E548(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

id sub_10010E904(uint64_t a1)
{
  if (dword_1001CC5A8 <= 30 && (dword_1001CC5A8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  *(unsigned char *)(*(void *)(a1 + 32) + 131) = 0;
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 invalidateTouchDelayTimer];
}

void sub_10010F128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
}

uint64_t sub_10010F154(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10010F164(uint64_t a1)
{
}

void sub_10010F16C(uint64_t a1, void *a2, int a3, void *a4)
{
  id v9 = a2;
  id v8 = a4;
  if (v8)
  {
    if (dword_1001CC5A8 <= 60 && (dword_1001CC5A8 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
  }
  else
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
  if (a3) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_10010FCD8(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  uint64_t v2 = *(void **)(*(void *)(a1 + 40) + 24);

  return [v2 showDoneUI:0];
}

void sub_1001131DC(void *a1, void *a2)
{
  id v7 = a1;
  id v3 = a2;
  if (([v3 isBeingPresented] & 1) == 0
    && ([v3 isBeingDismissed] & 1) == 0
    && ([v3 isMovingToParentViewController] & 1) == 0
    && ([v3 isMovingFromParentViewController] & 1) == 0)
  {
    uint64_t v4 = [v7 viewControllers];
    unsigned __int8 v5 = [v4 containsObject:v3];

    if (v5) {
      id v6 = [v7 popToViewController:v3 animated:1];
    }
    else {
      [v7 pushViewController:v3 animated:1];
    }
  }
}

void sub_1001134A4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainController];
  uint64_t v1 = [v2 colorCalibratorSetupSession];
  [v1 tryAgain];
}

void sub_100113CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v11 - 208));
  _Unwind_Resume(a1);
}

void sub_100113D3C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleTryAgainButton];
}

void sub_100113D7C(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CC6D8 <= 30 && (dword_1001CC6D8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleDismissButton];
}

void sub_10011446C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mainController];
  unsigned __int8 v3 = [v2 testFlags];

  id v4 = [*(id *)(a1 + 32) mainController];
  id v5 = v4;
  if ((v3 & 2) != 0) {
    [v4 showTryAgainUI];
  }
  else {
    [v4 showDoneUI:0 completed:1];
  }
}

void sub_100114904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id a23)
{
}

void sub_100114944(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CC6D8 <= 30 && (dword_1001CC6D8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleDismissButton];
}

void sub_100115124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id a31)
{
}

void sub_10011516C(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CC6D8 <= 30 && (dword_1001CC6D8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleDismissButton];
}

void sub_100115D1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 192));
  _Unwind_Resume(a1);
}

void sub_100115D60(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleDismissButton];
}

id sub_100116228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _sessionHandleProgress:a2 info:a3];
}

id sub_100116238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (dword_1001CC6D8 <= 30 && (dword_1001CC6D8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  id v6 = *(void **)(a1 + 32);

  return _[v6 showAuthUIWithFlags:a2 throttleSeconds:a3];
}

void sub_1001165E8(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CC6D8 <= 30 && (dword_1001CC6D8 != -1 || _LogCategory_Initialize()))
  {
    id v3 = v4;
    LogPrintF();
  }
  [*(id *)(a1 + 32) invalidate:v3];
}

id sub_10011668C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 dismiss];
}

void sub_100117268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 192));
  _Unwind_Resume(a1);
}

void sub_1001172AC(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CC6D8 <= 30 && (dword_1001CC6D8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleDismissButton];
}

void sub_100117E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id a31)
{
}

void sub_100117EB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleContinueButton];
}

void sub_100117EF8(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CC6D8 <= 30 && (dword_1001CC6D8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleDismissButton];
}

void sub_100118584(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  unsigned int v2 = [*(id *)(a1 + 40) isEqual:@"1234"];
  id v3 = *(void **)(a1 + 48);
  if (v2)
  {
    id v4 = [v3 mainController];
    [v4 showProgressUI];
  }
  else
  {
    [v3 showWithFlags:0x10000 throttleSeconds:0xFFFFFFFFLL];
  }
}

void sub_1001189D8(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 length];
  id v4 = [*(id *)(*(void *)(a1 + 32) + 49) digits];
  id v5 = [v4 count];

  if (v3 == v5) {
    [*(id *)(a1 + 32) _handlePINEntered:v6];
  }
}

void sub_100118CC4(uint64_t a1, void *a2)
{
  id v6 = a2;
  if (dword_1001CC748 <= 30 && (dword_1001CC748 != -1 || _LogCategory_Initialize()))
  {
    id v5 = v6;
    LogPrintF();
  }
  [*(id *)(*(void *)(a1 + 32) + 72) invalidate];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(void **)(v3 + 72);
  *(void *)(v3 + 72) = 0;

  [*(id *)(a1 + 32) showDoneUI:NSErrorToOSStatus()];
}

id sub_100118D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (dword_1001CC748 <= 30 && (dword_1001CC748 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  id v6 = *(void **)(a1 + 32);

  return _[v6 showAuthUIWithFlags:a2 throttleSeconds:a3];
}

id sub_100119224(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

id sub_100119A44(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  unsigned int v2 = *(void **)(*(void *)(a1 + 40) + 24);

  return _[v2 showAuthUIWithFlags:0 throttleSeconds:0xFFFFFFFFLL];
}

id sub_10011A094(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  if ([*(id *)(a1 + 40) isEqual:@"1234"])
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
    unsigned __int8 v2 = [*(id *)(*(void *)(a1 + 48) + 24) testFlags];
    uint64_t v3 = *(void **)(*(void *)(a1 + 48) + 24);
    if ((v2 & 2) != 0) {
      uint64_t v4 = 4294960574;
    }
    else {
      uint64_t v4 = 0;
    }
    return [v3 showDoneUI:v4];
  }
  else
  {
    id v5 = *(void **)(a1 + 48);
    return [v5 showWithFlags:0x10000 throttleSeconds:0xFFFFFFFFLL];
  }
}

void sub_10011A3AC(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) view];
  [v7 bounds];
  double MidX = CGRectGetMidX(v9);
  uint64_t v3 = [*(id *)(a1 + 32) containerView];
  [v3 center];
  double v5 = v4;
  id v6 = [*(id *)(a1 + 32) containerView];
  [v6 setCenter:MidX, v5];
}

void sub_10011A448(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 layoutIfNeeded];
}

void sub_10011A8B0(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 length];
  double v4 = [*(id *)(*(void *)(a1 + 32) + 41) digits];
  id v5 = [v4 count];

  if (v3 == v5) {
    [*(id *)(a1 + 32) _handlePINEntered:v6];
  }
}

id sub_10011B010(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:0.0];
}

id sub_10011B1A8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 16) setAlpha:1.0];
}

id sub_10011C580(uint64_t a1)
{
  return _[*(id *)(a1 + 32) handlePasswordPicked:*(void *)(a1 + 40)];
}

void *sub_10011CC40(void *result, int a2)
{
  id v3 = result;
  if (dword_1001CC7B8 <= 30)
  {
    if (dword_1001CC7B8 != -1 || (Class result = (void *)_LogCategory_Initialize(), result)) {
      Class result = (void *)LogPrintF();
    }
  }
  if (a2)
  {
    double v4 = (void *)v3[4];
    uint64_t v5 = v4[11];
    return [v4 presentViewController:v5 animated:1 completion:&stru_1001A10A8];
  }
  return result;
}

void sub_10011CD18(id a1)
{
  if (dword_1001CC7B8 <= 30 && (dword_1001CC7B8 != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

Class sub_10011CD8C()
{
  if (qword_1001D1390 != -1) {
    dispatch_once(&qword_1001D1390, &stru_1001A10C8);
  }
  Class result = objc_getClass("_SFAppAutoFillPasswordViewController");
  qword_1001D1388 = (uint64_t)result;
  off_1001CC828 = (uint64_t (*)())sub_10011CDF0;
  return result;
}

id sub_10011CDF0()
{
  return (id)qword_1001D1388;
}

void sub_10011CDFC(id a1)
{
  qword_1001D1398 = (uint64_t)dlopen("/System/Library/Frameworks/SafariServices.framework/SafariServices", 2);
}

void sub_10011D214(id a1, NSError *a2)
{
  unsigned __int8 v2 = a2;
  id v3 = v2;
  if (v2)
  {
    if (dword_1001CC7B8 <= 60)
    {
      double v4 = v2;
      if (dword_1001CC7B8 != -1 || (unsigned __int8 v2 = (NSError *)_LogCategory_Initialize(), v3 = v4, v2))
      {
LABEL_7:
        unsigned __int8 v2 = (NSError *)LogPrintF();
        id v3 = v4;
      }
    }
  }
  else if (dword_1001CC7B8 <= 30)
  {
    double v4 = 0;
    if (dword_1001CC7B8 != -1) {
      goto LABEL_7;
    }
    unsigned __int8 v2 = (NSError *)_LogCategory_Initialize();
    id v3 = 0;
    if (v2) {
      goto LABEL_7;
    }
  }

  _objc_release_x1(v2, v3);
}

id sub_10011D724(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss:8];
}

id sub_10011D990(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss:8];
}

id sub_10011DB74(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss:8];
}

void sub_10011DE18(uint64_t a1, void *a2, void *a3)
{
  id v14 = a2;
  id v5 = a3;
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 56);
  if (v7)
  {
    id v8 = v7;
    dispatch_source_cancel(v8);
    uint64_t v9 = *(void *)(a1 + 32);
    uint64_t v10 = *(void **)(v9 + 56);
    *(void *)(v9 + 56) = 0;

    uint64_t v6 = *(void *)(a1 + 32);
  }
  [*(id *)(v6 + 72) invalidate];
  uint64_t v11 = *(void *)(a1 + 32);
  double v12 = *(void **)(v11 + 72);
  *(void *)(v11 + 72) = 0;

  double v13 = *(void **)(a1 + 32);
  if (v5) {
    [v13 _pickerAlertShowError:v5];
  }
  else {
    [v13 _pickerAlertShowSuccess];
  }
}

void sub_10011DEE4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 72) invalidate];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 72);
  *(void *)(v2 + 72) = 0;
}

void sub_10011E49C(uint64_t a1, uint64_t a2, void *a3)
{
  double v4 = *(void **)(a1 + 32);
  id v5 = a3;
  [*(id *)(a1 + 32) insertObject:v5 atIndex:[v4 indexOfObject:v5 inSortedRange:0 options:1024 usingComparator:&stru_1001A1128]];
}

id sub_10011E51C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = 0;

  double v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);

  return _[v4 _pickerAlertHandlePickedDevice:v5];
}

id sub_10011E568(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _pickerAlertCanceled];
}

int64_t sub_10011E570(id a1, SFDevice *a2, SFDevice *a3)
{
  double v4 = a3;
  uint64_t v5 = [(SFDevice *)a2 name];
  uint64_t v6 = (void *)v5;
  if (v5) {
    id v7 = (__CFString *)v5;
  }
  else {
    id v7 = @"?";
  }
  id v8 = v7;

  uint64_t v9 = [(SFDevice *)v4 name];

  if (v9) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = @"?";
  }
  uint64_t v11 = v10;

  id v12 = [(__CFString *)v8 localizedStandardCompare:v11];
  return (int64_t)v12;
}

id sub_10011EA3C(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _discoveryFoundDevice:a2];
}

id sub_10011EA48(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _discoveryTimeout];
}

void sub_10011EA50(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  id v3 = v2;
  if (v2)
  {
    if (dword_1001CC830 <= 60)
    {
      double v4 = v2;
      if (dword_1001CC830 != -1 || (uint64_t v2 = (NSError *)_LogCategory_Initialize(), v3 = v4, v2))
      {
LABEL_7:
        uint64_t v2 = (NSError *)LogPrintF();
        id v3 = v4;
      }
    }
  }
  else if (dword_1001CC830 <= 30)
  {
    double v4 = 0;
    if (dword_1001CC830 != -1) {
      goto LABEL_7;
    }
    uint64_t v2 = (NSError *)_LogCategory_Initialize();
    id v3 = 0;
    if (v2) {
      goto LABEL_7;
    }
  }

  _objc_release_x1(v2, v3);
}

id sub_10011ED6C(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

id sub_10011F504(uint64_t a1)
{
  return [*(id *)(a1 + 32) showPairingUIWithFlags:*(unsigned int *)(a1 + 40) throttleSeconds:*(unsigned int *)(a1 + 44)];
}

void sub_10011F598(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)UINotificationFeedbackGenerator);
  [v2 notificationOccurred:0];
  uint64_t v3 = *(void *)(a1 + 32);
  double v4 = *(void **)(v3 + 184);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_10011F690;
  uint64_t v10[3] = &unk_1001A1BD8;
  v10[4] = v3;
  [v4 dismissViewControllerAnimated:1 completion:v10];
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 184);
  *(void *)(v5 + 184) = 0;

  id v7 = [*(id *)(*(void *)(a1 + 32) + 192) view];
  [v7 setHidden:0];

  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(v8 + 192);
  *(void *)(v8 + 192) = 0;
}

void sub_10011F690(uint64_t a1)
{
  id v1 = [*(id *)(*(void *)(a1 + 32) + 176) containerView];
  [v1 reactivate];
}

id sub_10011F9E4(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _handlePairingFinished];
}

void sub_10011F9EC(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9)
{
  id v14 = a2;
  id v15 = a3;
  id v16 = a4;
  id v17 = a5;
  id v18 = a6;
  id v19 = a9;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10011FB5C;
  block[3] = &unk_1001A12C8;
  void block[4] = *(void *)(a1 + 32);
  id v27 = v14;
  id v28 = v15;
  id v29 = v16;
  id v30 = v17;
  id v31 = v18;
  id v32 = v19;
  id v20 = v19;
  id v21 = v18;
  id v22 = v17;
  id v23 = v16;
  id v24 = v15;
  id v25 = v14;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10011FB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _handlePromptForPINWithFlags:a2 throttleSeconds:a3];
}

id sub_10011FB5C(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 232), *(id *)(a1 + 40));
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 48), *(id *)(a1 + 48));
  id v2 = [*(id *)(a1 + 56) copy];
  uint64_t v3 = *(void *)(a1 + 32);
  double v4 = *(void **)(v3 + 96);
  *(void *)(v3 + 96) = v2;

  id v5 = [*(id *)(a1 + 64) copy];
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 216);
  *(void *)(v6 + 216) = v5;

  id v8 = [*(id *)(a1 + 72) copy];
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void **)(v9 + 224);
  *(void *)(v9 + 224) = v8;

  id v11 = objc_retainBlock(*(id *)(a1 + 80));
  uint64_t v12 = *(void *)(a1 + 32);
  double v13 = *(void **)(v12 + 56);
  *(void *)(v12 + 56) = v11;

  id v14 = *(void **)(a1 + 32);

  return [v14 showPasswordPickerUI];
}

id sub_10011FE20(uint64_t a1)
{
  return _[*(id *)(a1 + 32) handlePasswordPicked:*(void *)(a1 + 40)];
}

id sub_10012035C(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _deviceFound:a2];
}

id sub_100120368(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _deviceLost:a2];
}

id sub_100120374(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _deviceChanged:a2];
}

void sub_100120380(id a1, NSError *a2)
{
  id v2 = a2;
  uint64_t v3 = v2;
  if (v2)
  {
    if (dword_1001CC8A0 <= 60)
    {
      double v4 = v2;
      if (dword_1001CC8A0 != -1 || (id v2 = (NSError *)_LogCategory_Initialize(), v3 = v4, v2))
      {
LABEL_7:
        id v2 = (NSError *)LogPrintF();
        uint64_t v3 = v4;
      }
    }
  }
  else if (dword_1001CC8A0 <= 30)
  {
    double v4 = 0;
    if (dword_1001CC8A0 != -1) {
      goto LABEL_7;
    }
    id v2 = (NSError *)_LogCategory_Initialize();
    uint64_t v3 = 0;
    if (v2) {
      goto LABEL_7;
    }
  }

  _objc_release_x1(v2, v3);
}

void *sub_1001206D4(void *result, int a2)
{
  uint64_t v3 = result;
  if (dword_1001CC8A0 <= 30)
  {
    if (dword_1001CC8A0 != -1 || (Class result = (void *)_LogCategory_Initialize(), result)) {
      Class result = (void *)LogPrintF();
    }
  }
  if (a2)
  {
    uint64_t v4 = v3[4];
    id v5 = *(void **)(v4 + 160);
    uint64_t v6 = *(void *)(v4 + 168);
    return [v5 presentViewController:v6 animated:1 completion:&stru_1001A1230];
  }
  return result;
}

void sub_1001207B8(id a1)
{
  if (dword_1001CC8A0 <= 30 && (dword_1001CC8A0 != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

Class sub_10012082C()
{
  if (qword_1001D13A8 != -1) {
    dispatch_once(&qword_1001D13A8, &stru_1001A1310);
  }
  Class result = objc_getClass("_SFAppAutoFillPasswordViewController");
  qword_1001D13A0 = (uint64_t)result;
  off_1001CC910 = (uint64_t (*)())sub_100120890;
  return result;
}

id sub_100120890()
{
  return (id)qword_1001D13A0;
}

void sub_10012089C(id a1)
{
  qword_1001D13B0 = (uint64_t)dlopen("/System/Library/Frameworks/SafariServices.framework/SafariServices", 2);
}

id sub_100120F74(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _handleVisualAuthEvent:a2];
}

id sub_100120F80(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) _handleVisualAuthScannedCode:a2];
}

void sub_100120F8C(uint64_t a1)
{
  id v1 = [*(id *)(*(void *)(a1 + 32) + 192) view];
  [v1 setHidden:1];
}

void sub_10012148C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (v5 && dword_1001CC8A0 <= 60 && (dword_1001CC8A0 != -1 || _LogCategory_Initialize()))
  {
    id v7 = [v5 localizedDescription];
    LogPrintF();
  }
  if (a2)
  {
    *(_DWORD *)(*(void *)(a1 + 32) + 40) = 4;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001215D8;
    block[3] = &unk_1001A16B0;
    uint64_t v6 = *(void *)(a1 + 40);
    void block[4] = *(void *)(a1 + 32);
    void block[5] = v6;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    [UIApp endBackgroundTask:*(void *)(a1 + 40)];
    *(_DWORD *)(*(void *)(a1 + 32) + 40) = 3;
  }
}

id sub_1001215D8(uint64_t a1)
{
  [*(id *)(a1 + 32) showPasswordPickerUI];
  id v2 = (void *)UIApp;
  uint64_t v3 = *(void *)(a1 + 40);

  return [v2 endBackgroundTask:v3];
}

void sub_100121620(id a1)
{
  if (dword_1001CC8A0 <= 30 && (dword_1001CC8A0 != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

id sub_100121FCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 dismiss];
}

id sub_100122CA8(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  unsigned int v2 = [*(id *)(a1 + 40) isEqual:@"1234"];
  uint64_t v3 = *(void **)(a1 + 48);
  if (v2)
  {
    uint64_t v4 = (void *)v3[3];
    return [v4 showPasswordPickerUI];
  }
  else
  {
    return [v3 showWithFlags:0x10000 throttleSeconds:0xFFFFFFFFLL];
  }
}

void sub_100122FE8(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) view];
  [v7 bounds];
  double MidX = CGRectGetMidX(v9);
  uint64_t v3 = [*(id *)(a1 + 32) containerView];
  [v3 center];
  double v5 = v4;
  uint64_t v6 = [*(id *)(a1 + 32) containerView];
  [v6 setCenter:MidX, v5];
}

void sub_100123084(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 layoutIfNeeded];
}

void sub_10012349C(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 length];
  double v4 = [*(id *)(*(void *)(a1 + 32) + 49) digits];
  id v5 = [v4 count];

  if (v3 == v5) {
    [*(id *)(a1 + 32) _handlePINEntered:v6];
  }
}

id sub_100123928(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  unsigned int v2 = *(void **)(*(void *)(a1 + 40) + 24);

  return [v2 showPairingUIWithFlags:0 throttleSeconds:0xFFFFFFFFLL];
}

_DWORD *sub_100125BCC(uint64_t a1)
{
  Class result = *(_DWORD **)(a1 + 32);
  int v2 = result[25];
  if (v2 == 1)
  {
    uint64_t v3 = 0;
  }
  else
  {
    if (v2 != 2) {
      return result;
    }
    uint64_t v3 = 4294960596;
  }
  return [result showDoneUI:v3];
}

id sub_100125C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _sessionHandleProgress:a2 info:a3];
}

id sub_1001262DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 dismiss];
}

void sub_100127AE8(uint64_t a1)
{
  id v1 = +[NSURL URLWithString:*(void *)(a1 + 32)];
  if (dword_1001CC9D8 <= 30 && (dword_1001CC9D8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (v1)
  {
    uint64_t v2 = +[LSApplicationWorkspace defaultWorkspace];
    id v5 = 0;
    unsigned __int8 v3 = [v2 openSensitiveURL:v1 withOptions:0 error:&v5];
    id v4 = v5;

    if (v3) {
      goto LABEL_13;
    }
  }
  else
  {
    id v4 = 0;
  }
  if (dword_1001CC9D8 <= 90 && (dword_1001CC9D8 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
LABEL_13:
}

void sub_100128280(uint64_t a1, void *a2)
{
  long long v3 = *(_OWORD *)(a1 + 48);
  long long v5 = *(_OWORD *)(a1 + 32);
  long long v6 = v3;
  long long v7 = *(_OWORD *)(a1 + 64);
  id v4 = a2;
  [v4 setTransform:&v5];
  [v4 setAlpha:*(double *)(a1 + 80), v5, v6, v7];
}

void sub_1001282D8(uint64_t a1)
{
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100128534;
  v14[3] = &unk_1001A1AE8;
  id v2 = *(id *)(a1 + 40);
  Swift::Int v14[4] = *(void *)(a1 + 32);
  id v15 = v2;
  +[UIView addKeyframeWithRelativeStartTime:v14 relativeDuration:0.0 animations:0.25];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  void v11[2] = sub_100128550;
  v11[3] = &unk_1001A1400;
  id v3 = *(id *)(a1 + 40);
  v11[4] = *(void *)(a1 + 32);
  id v12 = v3;
  id v13 = *(id *)(a1 + 48);
  +[UIView addKeyframeWithRelativeStartTime:v11 relativeDuration:0.25 animations:0.25];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1001285BC;
  void v8[3] = &unk_1001A1400;
  id v4 = *(id *)(a1 + 40);
  void v8[4] = *(void *)(a1 + 32);
  id v9 = v4;
  id v10 = *(id *)(a1 + 48);
  +[UIView addKeyframeWithRelativeStartTime:v8 relativeDuration:0.5 animations:0.25];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _OWORD v6[2] = sub_100128628;
  v6[3] = &unk_1001A1AE8;
  id v5 = *(id *)(a1 + 48);
  v6[4] = *(void *)(a1 + 32);
  id v7 = v5;
  +[UIView addKeyframeWithRelativeStartTime:v6 relativeDuration:0.75 animations:0.25];
}

void sub_1001284EC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) infoButton];
  [v1 setAlpha:1.0];
}

uint64_t sub_100128534(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_100128550(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

uint64_t sub_1001285BC(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 48) + 16);

  return v2();
}

uint64_t sub_100128628(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100128644(id a1, UIView *a2)
{
  long long v2 = *(_OWORD *)&CGAffineTransformIdentity.c;
  long long v4 = *(_OWORD *)&CGAffineTransformIdentity.a;
  long long v5 = v2;
  long long v6 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  id v3 = a2;
  [(UIView *)v3 setTransform:&v4];
  -[UIView setAlpha:](v3, "setAlpha:", 1.0, v4, v5, v6);
}

void sub_100128E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100128E54(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) infoButton];
  if ([v3 isActive]) {
    CFStringRef v2 = @"Surprise!";
  }
  else {
    CFStringRef v2 = @"ProxCardKit Test";
  }
  [*(id *)(a1 + 32) setTitle:v2];
}

void sub_100128EC4(uint64_t a1)
{
  id v1 = objc_alloc_init((Class)PRXFeatureTourContentViewController);
  [v1 setTitle:@"Card Title"];
  [v1 setBodyText:@"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur varius neque sed nibh porttitor."];
  CFStringRef v2 = v1;
  [v1 setDismissalType:1];
  id v3 = objc_alloc_init((Class)UIView);
  long long v4 = +[UIColor systemRedColor];
  long long v5 = [v4 colorWithAlphaComponent:0.33];
  [v3 setBackgroundColor:v5];

  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  long long v6 = v2;
  id v37 = v2;
  id v7 = [v2 contentView];
  [v7 addSubview:v3];

  id v8 = +[PRXLabel labelWithStyle:0];
  id v9 = +[UIColor systemBackgroundColor];
  [v8 setTextColor:v9];

  [v8 setText:@"Main Content"];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v10 = [v6 contentView];
  [v10 addSubview:v8];

  id v11 = [v6 contentView];
  id v12 = [v11 mainContentGuide];

  id v35 = [v3 leadingAnchor];
  id v33 = [v12 leadingAnchor];
  id v32 = [v35 constraintEqualToAnchor:v33];
  v41[0] = v32;
  id v31 = [v3 trailingAnchor];
  id v30 = [v12 trailingAnchor];
  id v29 = [v31 constraintEqualToAnchor:v30];
  v41[1] = v29;
  id v36 = v3;
  id v28 = [v3 topAnchor];
  id v27 = [v12 topAnchor];
  long long v26 = [v28 constraintEqualToAnchor:v27];
  v41[2] = v26;
  id v25 = [v3 bottomAnchor];
  id v13 = [v12 bottomAnchor];
  id v14 = [v25 constraintEqualToAnchor:v13];
  v41[3] = v14;
  id v34 = v8;
  id v15 = [v8 centerXAnchor];
  id v16 = [v12 centerXAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];
  v41[4] = v17;
  id v18 = [v8 centerYAnchor];
  id v19 = [v12 centerYAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];
  v41[5] = v20;
  id v21 = +[NSArray arrayWithObjects:v41 count:6];
  +[NSLayoutConstraint activateConstraints:v21];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v23 = [WeakRetained navigationController];
  [v23 pushViewController:v37 animated:1];

  dispatch_time_t v24 = dispatch_time(0, 2000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100129364;
  block[3] = &unk_1001A14F8;
  objc_copyWeak(&v40, (id *)(a1 + 32));
  dispatch_after(v24, (dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v40);
}

void sub_100129364(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained navigationController];
  CFStringRef v2 = objc_alloc_init(ProxCardKitTestTermsAndConditionsViewController);
  [v1 pushViewController:v2 animated:1];
}

void sub_1001295E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012961C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained navigationController];
  CFStringRef v2 = objc_alloc_init(ProxCardKitTestPasscodeEntryViewController);
  [v1 pushViewController:v2 animated:1];
}

void sub_100129694(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained presentingViewController];
  [v1 dismissViewControllerAnimated:1 completion:0];
}

void sub_100129790(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = objc_alloc_init(ProxCardKitTestAppIconsViewController);
  [v2 pushViewController:v1 animated:1];
}

void sub_100129AF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100129B18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained navigationController];
  id v2 = objc_alloc_init(ProxCardKitTestOptionsViewController);
  [v1 pushViewController:v2 animated:1];
}

void sub_100129CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100129D0C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained navigationController];
  id v2 = objc_alloc_init(ProxCardKitTestPickerViewController);
  [v1 pushViewController:v2 animated:1];
}

void sub_10012A068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012A088(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained navigationController];
  id v2 = objc_alloc_init(ProxCardKitTestFeaturesViewController);
  [v1 pushViewController:v2 animated:1];
}

void sub_10012A480(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012A4BC(uint64_t a1, void *a2)
{
  if ([a2 isOn])
  {
    CFStringRef v3 = [@"ProxCardKit Test " stringByAppendingString:@" - Surprise!"];
  }
  else
  {
    CFStringRef v3 = @"ProxCardKit Test ";
  }
  long long v5 = (__CFString *)v3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setTitle:v5];
}

void sub_10012A544(uint64_t a1)
{
  id v5 = objc_alloc_init((Class)VPScannerProxCardViewController);
  id v2 = [[ProxCardKitTestScannerViewController alloc] initWithScannerEngine:v5];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  long long v4 = [WeakRetained navigationController];
  [v4 pushViewController:v2 animated:1];
}

void sub_10012A68C(uint64_t a1)
{
  [*(id *)(a1 + 32) showConfirmationRing];
  dispatch_time_t v2 = dispatch_time(0, 500000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10012A728;
  block[3] = &unk_1001A1BD8;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10012A728(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) navigationController];
  id v1 = objc_alloc_init(ProxCardKitTestEndViewController);
  [v2 pushViewController:v1 animated:1];
}

void sub_10012AB78(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) presentingViewController];
  [v1 dismissViewControllerAnimated:1 completion:0];
}

void sub_10012ADC4(id a1, PRXAction *a2)
{
  id v3 = +[UIApplication sharedApplication];
  id v2 = +[NSURL URLWithString:@"https://apple.com"];
  [v3 openURL:v2 withCompletionHandler:0];
}

void sub_10012B5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4) {
    NSLog(@"Failed to mark terms as agreed in iCloud: %@", a4);
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10012B63C;
  block[3] = &unk_1001A1BD8;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10012B63C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) dismissTerms:1];
}

void sub_10012B968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012B9A0(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleAgreeFromObjectModel:v3];
}

void sub_10012B9FC(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10012BAD0;
  block[3] = &unk_1001A14F8;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  objc_destroyWeak(&v2);
}

void sub_10012BA8C(id a1, BOOL a2, NSError *a3)
{
  CFStringRef v3 = @"Fail";
  if (a2) {
    CFStringRef v3 = @"Success";
  }
  NSLog(@"results = %@, with error = %@", v3, a3);
}

void sub_10012BAD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _termsDisagree];
}

void sub_10012BDC8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (dword_1001CCAA8 <= 30 && (dword_1001CCAA8 != -1 || _LogCategory_Initialize()))
  {
    uint64_t v4 = *(unsigned int *)(a1 + 40);
    if (v4 > 3) {
      id v5 = "?";
    }
    else {
      id v5 = off_1001A15D0[v4];
    }
    id v9 = v5;
    LogPrintF();
  }
  long long v6 = [*(id *)(a1 + 32) _remoteViewControllerProxy];
  id v7 = *(void **)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  void v10[2] = sub_10012BF00;
  uint64_t v10[3] = &unk_1001A1BD8;
  id v11 = v6;
  id v8 = v6;
  [v7 dismissViewControllerAnimated:1 completion:v10];
}

id sub_10012BEF8(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

id sub_10012BF00(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss];
}

id sub_10012C0B4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 dismiss];
}

uint64_t sub_10012C430(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (*(void *)(*(void *)(a1 + 32) + 24))
  {
    long long v6 = v3;
    id v3 = [v3 supportsAACPService];
    id v4 = v6;
    if (v3)
    {
      if (!*(_DWORD *)(*(void *)(a1 + 32) + 56))
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 56) = [v6 productIdentifier];
        id v3 = [*(id *)(*(void *)(a1 + 32) + 48) updateProductID:*(unsigned int *)(*(void *)(a1 + 32) + 56)];
        id v4 = v6;
      }
    }
  }

  return _objc_release_x1(v3, v4);
}

void sub_10012D120(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) mainController];
  id v7 = [v1 appContent];

  if (dword_1001CCB18 <= 50 && (dword_1001CCB18 != -1 || _LogCategory_Initialize()))
  {
    uint64_t v2 = [v7 adamIDs];
    unsigned int v3 = [v7 installed];
    id v4 = "no";
    if (v3) {
      id v4 = "yes";
    }
    id v5 = v2;
    long long v6 = v4;
    LogPrintF();
  }
  [v7 launchWithCompletion:&stru_1001A1638 v5, v6];
}

void sub_10012D210(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  unsigned int v3 = v2;
  if (v2)
  {
    if (dword_1001CCB18 <= 90)
    {
      id v4 = v2;
      if (dword_1001CCB18 != -1 || (uint64_t v2 = (NSError *)_LogCategory_Initialize(), v3 = v4, v2))
      {
        uint64_t v2 = (NSError *)LogPrintF();
        unsigned int v3 = v4;
      }
    }
  }

  _objc_release_x1(v2, v3);
}

void sub_10012D394(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) launchURL];

  if (v2)
  {
    unsigned int v3 = [*(id *)(a1 + 32) issuerID];

    if (v3)
    {
      id v4 = [*(id *)(a1 + 32) launchURL];
      id v5 = [*(id *)(a1 + 32) issuerID];
      long long v6 = +[NSString stringWithFormat:@"%@brand=%@&supportedRadioTechnologies=NFC", v4, v5];

      id v7 = +[LSApplicationWorkspace defaultWorkspace];
      id v8 = +[NSURL URLWithString:v6];
      id v10 = 0;
      [v7 openURL:v8 withOptions:&off_1001A71E0 error:&v10];
      id v9 = v10;

      if (dword_1001CCB18 <= 30 && (dword_1001CCB18 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }

      return;
    }
    if (dword_1001CCB18 > 90 || dword_1001CCB18 == -1 && !_LogCategory_Initialize()) {
      return;
    }
  }
  else if (dword_1001CCB18 > 90 || dword_1001CCB18 == -1 && !_LogCategory_Initialize())
  {
    return;
  }

  LogPrintF();
}

void sub_10012E1C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, id *a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak(&a68);
  _Unwind_Resume(a1);
}

void sub_10012E218(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleEnterCode];
}

void sub_10012E258(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleOpenApp];
}

uint64_t sub_10012E674(uint64_t a1)
{
  [*(id *)(a1 + 32) dismiss];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    unsigned int v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_10012EC58(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v17 = a3;
  id v8 = a4;
  if (v8)
  {
    if (dword_1001CCB18 > 90 || dword_1001CCB18 == -1 && !_LogCategory_Initialize()) {
      goto LABEL_11;
    }
  }
  else if (dword_1001CCB18 > 50 || dword_1001CCB18 == -1 && !_LogCategory_Initialize())
  {
    goto LABEL_11;
  }
  LogPrintF();
LABEL_11:
  uint64_t v9 = *(void *)(a1 + 32);
  id v10 = *(void **)(v9 + 32);
  *(void *)(v9 + 32) = v7;
  id v11 = v7;

  if (v17)
  {
    uint64_t v12 = *(void *)(a1 + 32);
    id v13 = v17;
    id v14 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v13;
  }
  else
  {
    uint64_t v15 = +[UIImage systemImageNamed:@"lock.circle"];
    uint64_t v16 = *(void *)(a1 + 32);
    id v14 = *(void **)(v16 + 40);
    *(void *)(v16 + 40) = v15;
  }

  [*(id *)(a1 + 32) viewUpdateAppInfo];
}

void sub_10012FB14(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  id v2 = [*(id *)(*(void *)(a1 + 32) + 48) panGestureRecognizer];
  [v2 setEnabled:1];
}

void sub_100130070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_10013009C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    long long v6 = [WeakRetained superview];
    [v3 locationInView:v6];
    double v8 = v7;
    double v10 = v9;

    id v11 = [v5 superview];
    [v11 convertPoint:v5[6] toView:v8];
    double v13 = v12;
    double v15 = v14;

    id v16 = [v5[6] pointInside:0 withEvent:v13, v15];
  }
  else
  {
    id v16 = 0;
  }

  return v16;
}

uint64_t sub_100130CD0(uint64_t a1)
{
  [*(id *)(a1 + 32) dismiss];
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v3 = *(uint64_t (**)(void))(result + 16);
    return v3();
  }
  return result;
}

void sub_100131578(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = SFMainQueue();
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10013162C;
  v7[3] = &unk_1001A1B88;
  uint64_t v5 = *(void *)(a1 + 32);
  id v8 = v3;
  uint64_t v9 = v5;
  id v6 = v3;
  dispatch_async(v4, v7);
}

id sub_10013162C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v2 || !*(unsigned char *)(v3 + 80))
  {
    id v4 = v2;
    uint64_t v5 = *(void **)(v3 + 88);
    *(void *)(v3 + 88) = v4;
  }
  else
  {
    off_1001CCCD0();
    uint64_t v6 = objc_opt_new();
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t v5 = *(void **)(v7 + 88);
    *(void *)(v7 + 88) = v6;
  }

  id v8 = *(void **)(a1 + 40);
  if (v8[11])
  {
    return [v8 presentAppropriateViewControllerIfReady];
  }
  else
  {
    return [v8 dismiss:0];
  }
}

Class sub_1001316EC()
{
  if (qword_1001D13C0 != -1) {
    dispatch_once(&qword_1001D13C0, &stru_1001A1758);
  }
  Class result = objc_getClass("PKPhysicalCard");
  qword_1001D13D0 = (uint64_t)result;
  off_1001CCCD0 = (uint64_t (*)())sub_100131750;
  return result;
}

id sub_100131750()
{
  return (id)qword_1001D13D0;
}

void sub_10013175C(id a1)
{
  qword_1001D13C8 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore", 2);
}

Class sub_100131788()
{
  if (qword_1001D13C0 != -1) {
    dispatch_once(&qword_1001D13C0, &stru_1001A1758);
  }
  Class result = objc_getClass("PKAccountService");
  qword_1001D13B8 = (uint64_t)result;
  off_1001CCCC8 = (uint64_t (*)())sub_1001317EC;
  return result;
}

id sub_1001317EC()
{
  return (id)qword_1001D13B8;
}

id sub_100131ED0(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  *(void *)(*(void *)(a1 + 40) + 121) = [*(id *)(*(void *)(a1 + 40) + 24) forcedActivationResult];
  id v2 = *(void **)(a1 + 40);

  return _[v2 handleCompletedIfReady];
}

void sub_100131F30(uint64_t a1, uint64_t a2)
{
  id v4 = SFMainQueue();
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100131FC8;
  v5[3] = &unk_1001A16B0;
  v5[4] = *(void *)(a1 + 32);
  v5[5] = a2;
  dispatch_async(v4, v5);
}

id sub_100131FC8(uint64_t a1)
{
  *(void *)(*(void *)(a1 + 32) + 121) = *(void *)(a1 + 40);
  if (*(void *)(a1 + 40))
  {
    if (dword_1001CCC58 <= 90 && (dword_1001CCC58 != -1 || _LogCategory_Initialize())) {
LABEL_11:
    }
      LogPrintF();
  }
  else if (dword_1001CCC58 <= 30 && (dword_1001CCC58 != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_11;
  }
  uint64_t v3 = *(void **)(a1 + 32);

  return _[v3 handleCompletedIfReady];
}

id sub_100132554(void *a1)
{
  id v1 = a1;
  id v2 = +[UIScreen mainScreen];
  [v2 scale];
  double v4 = v3;

  CGFloat v5 = 504.0 / v4;
  CGFloat v6 = 317.0 / v4;
  id v7 = [objc_alloc((Class)UIView) initWithFrame:0.0, 0.0, v5, v6];
  id v8 = +[UIColor clearColor];
  [v7 setBackgroundColor:v8];

  id v9 = [objc_alloc((Class)UILabel) initWithFrame:CGRectMake(5.6 / (85.598 / v5), 32.3 / (53.98 / v6), 504.0, 317.0)];
  double v10 = +[UIFont systemFontOfSize:kCTFontUIFontDesignRounded weight:7.0 design:UIFontWeightMedium];
  [v9 setFont:v10];

  id v11 = +[UIColor colorWithWhite:0.54 alpha:1.0];
  [v9 setTextColor:v11];

  [v9 setText:v1];
  [v9 sizeToFit];
  [v7 addSubview:v9];
  v15.width = v5;
  v15.height = v6;
  UIGraphicsBeginImageContextWithOptions(v15, 0, 3.0);
  [v7 bounds];
  [v7 drawViewHierarchyInRect:1];
  double v12 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();

  return v12;
}

id sub_10013275C(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 57) setAlpha:1.0];
  id v2 = *(void **)(*(void *)(a1 + 32) + 73);

  return [v2 setAlpha:1.0];
}

id sub_1001327B8(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 57) setAlpha:1.0];
  id v2 = *(void **)(*(void *)(a1 + 32) + 73);

  return [v2 setAlpha:1.0];
}

void sub_100132E8C(id a1)
{
  id v1 = +[LSApplicationWorkspace defaultWorkspace];
  id v2 = +[NSURL URLWithString:@"wallet://credit/locationRequest"];
  double v3 = sub_100138B88();
  id v5 = 0;
  [v1 openURL:v2 withOptions:v3 error:&v5];
  id v4 = v5;

  if (dword_1001CCC58 <= 30 && (dword_1001CCC58 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
}

void sub_100133D20(id a1)
{
  id v1 = +[LSApplicationWorkspace defaultWorkspace];
  id v2 = +[NSURL URLWithString:@"wallet://credit/details"];
  double v3 = sub_100138B88();
  id v5 = 0;
  [v1 openURL:v2 withOptions:v3 error:&v5];
  id v4 = v5;

  if (dword_1001CCC58 <= 30 && (dword_1001CCC58 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
}

void sub_1001342A0(id a1)
{
  id v1 = +[LSApplicationWorkspace defaultWorkspace];
  id v2 = +[NSURL URLWithString:@"wallet://credit/details"];
  double v3 = sub_100138B88();
  id v5 = 0;
  [v1 openURL:v2 withOptions:v3 error:&v5];
  id v4 = v5;

  if (dword_1001CCC58 <= 30 && (dword_1001CCC58 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
}

void sub_100135764(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  long long v2 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v3[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v3[1] = v2;
  v3[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v1 setTransform:v3];
}

id sub_1001357BC(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) completeTransition:a2];
}

void sub_1001359E0(uint64_t a1)
{
  long long v2 = [*(id *)(a1 + 32) view];
  [v2 bounds];
  CGAffineTransformMakeTranslation(&v6, 0.0, -v3);
  id v4 = [*(id *)(a1 + 32) view];
  CGAffineTransform v5 = v6;
  [v4 setTransform:&v5];
}

id sub_100135A5C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v4 = [*(id *)(a1 + 32) view];
    [v4 removeFromSuperview];
  }
  CGAffineTransform v5 = *(void **)(a1 + 40);

  return _[v5 completeTransition:a2];
}

void *sub_100135F50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  Class result = *(void **)(a1 + 40);
  if (v3 == result[1]) {
    return _[result xpcStarted:a2];
  }
  return result;
}

void sub_1001361CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001361F0(uint64_t a1, uint64_t a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    [WeakRetained[3] dismiss:a2];
    id WeakRetained = v4;
  }
}

id sub_100136374(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  v4.receiver = *(id *)(a1 + 40);
  v4.super_class = (Class)SVSCommonNavController;
  return [super pushViewController:v1 transition:v2];
}

id sub_100136450(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 48);
  v4.receiver = *(id *)(a1 + 40);
  v4.super_class = (Class)SVSCommonNavController;
  return [super pushViewController:v1 animated:v2];
}

id sub_100136558(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 48);
  v5.receiver = *(id *)(a1 + 40);
  v5.super_class = (Class)SVSCommonNavController;
  return [super presentViewController:v1 animated:v2 completion:v3];
}

id sub_100136D00(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

id sub_100136D0C(uint64_t a1)
{
  [*(id *)(a1 + 32) setAlpha:1.0];
  [*(id *)(a1 + 40) setAlpha:0.0];
  *(unsigned char *)(*(void *)(a1 + 48) + 24) = 0;
  id result = [*(id *)(*(void *)(a1 + 48) + 32) count];
  if (result)
  {
    uint64_t v3 = *(void **)(a1 + 48);
    return _[v3 _update];
  }
  return result;
}

id sub_1001374C4(void *a1)
{
  id v1 = a1;
  unsigned int v2 = SFDeviceClassCodeGet() - 1;
  if (v2 > 6) {
    CFStringRef v3 = @"_IPHONE";
  }
  else {
    CFStringRef v3 = off_1001A18E0[v2];
  }
  objc_super v4 = [v1 stringByAppendingString:v3];

  return v4;
}

id sub_10013753C(void *a1, const char *a2)
{
  if ((a2 - 1) > 6) {
    CFStringRef v2 = @"_IPHONE";
  }
  else {
    CFStringRef v2 = off_1001A18E0[((_BYTE)a2 - 1)];
  }
  return [a1 stringByAppendingString:v2];
}

void sub_100137568(unsigned int a1, unsigned int a2, uint64_t a3, id *a4, id *a5, id *a6, id *a7)
{
  uint64_t v74 = 0;
  uint64_t v75 = &v74;
  uint64_t v76 = 0x3032000000;
  uint64_t v77 = sub_1001380C0;
  uint64_t v78 = sub_1001380D0;
  id v79 = 0;
  if (a1 == 8207) {
    uint64_t v10 = 8194;
  }
  else {
    uint64_t v10 = a1;
  }
  if ((a3 & 4) != 0)
  {
    if (dword_1001CCD98 <= 30 && (dword_1001CCD98 != -1 || _LogCategory_Initialize()))
    {
      uint64_t v62 = a3;
      uint64_t v63 = &unk_10017FA70;
      uint64_t v60 = v10;
      uint64_t v61 = a2;
      LogPrintF();
    }
    uint64_t v18 = mach_absolute_time();
    if ((a3 & 8) != 0) {
      id v64 = [objc_alloc((Class)SFDeviceAssetQuery) initWithHomePodColor:a2 version:v10];
    }
    else {
      id v64 = [objc_alloc((Class)SFDeviceAssetQuery) initWithBluetoothProductIdentifier:v10 color:a2];
    }
    id v19 = a7;
    dispatch_semaphore_t v20 = dispatch_semaphore_create(0);
    id v21 = objc_alloc_init((Class)SFDeviceAssetManager);
    dispatch_queue_t v22 = dispatch_queue_create("SVSMobileAssetLookup", 0);
    [v21 setDispatchQueue:v22];

    [v21 activate];
    id v23 = objc_alloc((Class)SFDeviceAssetRequestConfiguration);
    v68[0] = _NSConcreteStackBlock;
    v68[1] = 3221225472;
    v68[2] = sub_1001380D8;
    v68[3] = &unk_1001A1780;
    int v72 = v10;
    char v73 = a2;
    id v70 = &v74;
    uint64_t v71 = v18;
    dispatch_time_t v24 = v20;
    uint64_t v69 = v24;
    id v25 = [v23 initWithQueryResultHandler:v68];
    [v25 setTimeout:3.0];
    [v21 getAssetBundleForDeviceQuery:v64 withRequestConfiguration:v25];
    dispatch_time_t v26 = dispatch_time(0, 5000000000);
    intptr_t v27 = dispatch_semaphore_wait(v24, v26);
    a7 = v19;
    if (v27)
    {
      if (dword_1001CCD98 <= 60)
      {
        intptr_t v28 = v27;
        if (dword_1001CCD98 != -1 || _LogCategory_Initialize())
        {
          uint64_t v60 = v28;
          LogPrintF();
        }
      }
    }
    id v29 = (void *)v75[5];
    if (v29)
    {
      if ((a3 & 8) == 0)
      {
        double v12 = [v29 pathForResource:SFDeviceAssetNameMovieConnectIntro ofType:0];
        if (v10 == 8203) {
          goto LABEL_40;
        }
        id v30 = +[SFHeadphoneProduct b507];
        unsigned int v31 = [v30 productID];

        if (v10 == v31) {
          goto LABEL_40;
        }
        id v32 = +[SFHeadphoneProduct b494];
        unsigned int v33 = [v32 productID];

        if (v10 == v33
          || (+[SFHeadphoneProduct b607],
              id v36 = objc_claimAutoreleasedReturnValue(),
              unsigned int v37 = [v36 productID],
              v36,
              v10 == 0x10000)
          || v10 == v37)
        {
LABEL_40:
          uint64_t v38 = [v75[5] pathForResource:SFDeviceAssetNameMovieStatusLoopCharged ofType:0 v60, v61, v62, v63];
        }
        else
        {
          uint64_t v38 = [(id)v75[5] pathForResource:SFDeviceAssetNameMovieLoop ofType:0];
        }
        long long v67 = (void *)v38;
        id v39 = SFDeviceAssetNameMovieConnectLoop;
        id v11 = [(id)v75[5] pathForResource:v39 ofType:0];

        if (!v11)
        {
          id v11 = v67;
          long long v67 = v11;
        }
        a7 = v19;
LABEL_46:

        if ((a3 & 8) != 0) {
          goto LABEL_6;
        }
        goto LABEL_47;
      }
      double v12 = [v29 pathForResource:@"ProxCard_connect-engage.mov" ofType:0];
      if (v12)
      {
        long long v67 = 0;
        id v11 = 0;
        goto LABEL_46;
      }
      if (dword_1001CCD98 <= 90 && (dword_1001CCD98 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
    }
    long long v67 = 0;
    id v11 = 0;
    double v12 = 0;
    goto LABEL_46;
  }
  long long v67 = 0;
  id v11 = 0;
  double v12 = 0;
  if ((a3 & 8) != 0)
  {
LABEL_6:
    double v13 = (void *)GestaltCopyAnswer();
    double v14 = a6;
    CGSize v15 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"ProxCard_Setup@%dx.png", [v13 intValue]);
    id v16 = [(id)v75[5] pathForResource:v15 ofType:0];
    if (!v16)
    {
      if (dword_1001CCD98 <= 90 && (dword_1001CCD98 != -1 || _LogCategory_Initialize())) {
        LogPrintF();
      }
      id v16 = @"UnsupportedAccessory.png";
    }
    if (v10 == 5) {
      id v34 = @"HOMEPOD_MINI";
    }
    else {
      id v34 = @"HOMEPOD";
    }
    id v35 = sub_100138280(@"Localizable", v34);
    goto LABEL_64;
  }
LABEL_47:
  double v14 = a6;
  if (v10 == 8194
    || v10 == 8206
    || v10 == 0x10000
    || (id v40 = [objc_alloc((Class)SFHeadphoneProduct) initWithProductID:v10],
        unsigned int v41 = [v40 isAirPods],
        v40,
        v41))
  {
    if (a3)
    {
      CGSize v15 = 0;
      id v16 = @"AirPod-Case-Open-B188.png";
    }
    else
    {
      id v42 = (void *)GestaltCopyAnswer();
      id v43 = [v42 intValue];
      if (v10 == 0x10000) {
        +[NSString stringWithFormat:@"ProxCard_case-closed-charged@%dx.png", v43];
      }
      else {
      CGSize v15 = +[NSString stringWithFormat:@"ProxCard_case-closed@%dx.png", v43];
      }
      uint64_t v44 = [(id)v75[5] pathForResource:v15 ofType:0];
      if (v44) {
        id v16 = (__CFString *)v44;
      }
      else {
        id v16 = @"AirPod-Case-Closed-B188.png";
      }
    }
    if (v10 == 8206)
    {
      double v13 = +[NSBundle bundleWithIdentifier:@"com.apple.Sharing"];
      id v45 = +[NSString stringWithFormat:@"Localizable-PID_%d", 8206];
      id v46 = [objc_alloc((Class)NSString) initWithFormat:@"PRODUCT_NAME_PID_%d" 8206];
      id v35 = sub_100138304(v13, v45, v46);
    }
    else
    {
      id v47 = +[SFHeadphoneProduct b688];
      unsigned int v48 = [v47 productID];

      if (v10 != v48)
      {
        id v35 = sub_100138280(@"Localizable", @"AIRPODS");
        goto LABEL_65;
      }
      double v13 = +[NSBundle bundleWithIdentifier:@"com.apple.Sharing"];
      id v49 = +[NSString stringWithFormat:@"Localizable-PID_%d", v10];
      id v50 = [objc_alloc((Class)NSString) initWithFormat:@"PRODUCT_NAME_PID_%d" v10];
      id v35 = sub_100138304(v13, v49, v50);
    }
LABEL_64:

LABEL_65:
    Swift::String v51 = 0;
    goto LABEL_66;
  }
  switch((int)v10)
  {
    case 8194:
    case 8202:
    case 8203:
    case 8204:
    case 8205:
    case 8208:
      goto LABEL_77;
    case 8195:
      id v35 = sub_100138280(@"Localizable", @"POWERBEATS3_WIRELESS");
      Swift::String v51 = 0;
      CGSize v15 = 0;
      CFStringRef v58 = @"PowerBeats3Wireless-Black-Small-B188.png";
      CFStringRef v59 = @"PowerBeats3Wireless-Black-B188.png";
      goto LABEL_88;
    case 8197:
      id v35 = sub_100138280(@"Localizable", @"BEATSX");
      Swift::String v51 = 0;
      CGSize v15 = 0;
      CFStringRef v58 = @"BeatsX-Black-Small-B188.png";
      CFStringRef v59 = @"BeatsX-Black-B188.png";
      goto LABEL_88;
    case 8198:
      id v35 = sub_100138280(@"Localizable", @"BEATS_SOLO3_WIRELESS");
      Swift::String v51 = 0;
      CGSize v15 = 0;
      CFStringRef v58 = @"BeatsSolo3Wireless-Black-Small-B188.png";
      CFStringRef v59 = @"BeatsSolo3Wireless-Black-B188.png";
LABEL_88:
      if ((a3 & 2) != 0) {
        id v16 = (__CFString *)v58;
      }
      else {
        id v16 = (__CFString *)v59;
      }
      break;
    case 8201:
      Swift::String v51 = +[UIColor grayColor];
      uint64_t v57 = sub_100138280(@"Localizable", @"BEATS_STUDIO3_WIRELESS");
      goto LABEL_86;
    default:
      id v55 = [objc_alloc((Class)SFHeadphoneProduct) initWithProductID:v10];
      unsigned int v56 = [v55 supportsMobileAsset];

      if (v56)
      {
LABEL_77:
        Swift::String v51 = +[UIColor grayColor];
        id v52 = +[NSBundle bundleWithIdentifier:@"com.apple.Sharing"];
        id v53 = +[NSString stringWithFormat:@"Localizable-PID_%d", v10];
        id v54 = [objc_alloc((Class)NSString) initWithFormat:@"PRODUCT_NAME_PID_%d" v10];
        id v35 = sub_100138304(v52, v53, v54);
      }
      else
      {
        Swift::String v51 = +[UIColor grayColor];
        uint64_t v57 = sub_100138280(@"Localizable", @"AUDIO_ACCESSORY");
LABEL_86:
        id v35 = (void *)v57;
      }
      CGSize v15 = 0;
      id v16 = @"UnsupportedAccessory.png";
      break;
  }
LABEL_66:
  if (a4) {
    objc_storeStrong(a4, v16);
  }
  if (a5) {
    objc_storeStrong(a5, v35);
  }
  if (v14) {
    objc_storeStrong(v14, v12);
  }
  if (a7) {
    objc_storeStrong(a7, (id)v75[5]);
  }
  _Block_object_dispose(&v74, 8);
}

void sub_10013800C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

uint64_t sub_1001380C0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1001380D0(uint64_t a1)
{
}

void sub_1001380D8(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v8 = a2;
  id v13 = a3;
  id v9 = a5;
  mach_absolute_time();
  UpTicksToSecondsF();
  if (v9)
  {
    if (dword_1001CCD98 <= 60 && (dword_1001CCD98 != -1 || _LogCategory_Initialize())) {
LABEL_7:
    }
      LogPrintF();
  }
  else if (dword_1001CCD98 <= 30 && (dword_1001CCD98 != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v8;
  id v12 = v8;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_100138280(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  objc_super v5 = +[NSBundle mainBundle];
  CGAffineTransform v6 = sub_100138304(v5, v4, v3);

  return v6;
}

id sub_100138304(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (SFIsGreenTeaDevice())
  {
    id v8 = [v7 stringByAppendingString:@"_GT"];
    id v9 = [v5 localizedStringForKey:v8 value:@"_GT" table:v6];

    if (![v9 isEqual:@"_GT"]) {
      goto LABEL_5;
    }
  }
  id v9 = 0;
LABEL_5:
  if (![v9 length])
  {
    uint64_t v10 = [v5 localizedStringForKey:v7 value:&stru_1001A1DC0 table:v6];

    id v9 = (void *)v10;
  }
  if (v9) {
    id v11 = v9;
  }
  else {
    id v11 = v7;
  }
  id v12 = v11;

  return v12;
}

id sub_100138404(void *a1)
{
  return sub_100138280(@"Localizable", a1);
}

UIImage *sub_100138414(char a1, int a2)
{
  unsigned __int8 v2 = a2 - 1;
  if ((a2 - 1) >= 3)
  {
    unsigned __int8 v2 = a1 - 2;
    if ((a1 - 2) >= 4u)
    {
      CFStringRef v4 = @"ProxiPhoneGeneric.png";
      return +[UIImage imageNamed:v4];
    }
    id v3 = off_1001A1930;
  }
  else
  {
    id v3 = off_1001A1918;
  }
  CFStringRef v4 = v3[v2];
  return +[UIImage imageNamed:v4];
}

uint64_t sub_100138464()
{
  return SFLocalizedStringForKey();
}

id sub_100138494(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v9 = a1;
  id v10 = objc_alloc((Class)NSString);
  id v11 = sub_100138280(@"Localizable", v9);
  id v12 = [v10 initWithFormat:v11 arguments:&a9];

  if (v12) {
    id v13 = v12;
  }
  else {
    id v13 = v9;
  }
  id v14 = v13;

  return v14;
}

id sub_100138540(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = a2;
  id v11 = a1;
  id v12 = objc_alloc((Class)NSString);
  id v13 = sub_100138280(v11, v10);

  id v14 = [v12 initWithFormat:v13 arguments:&a9];
  if (v14) {
    CGSize v15 = v14;
  }
  else {
    CGSize v15 = v10;
  }
  id v16 = v15;

  return v16;
}

uint64_t sub_1001385F8()
{
  uint64_t v0 = +[NSLocale currentLocale];
  id v1 = [v0 languageCode];

  if (([v1 isEqual:@"ar"] & 1) != 0
    || ([v1 isEqual:@"hi"] & 1) != 0
    || ([v1 isEqual:@"th"] & 1) != 0)
  {
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = (uint64_t)[v1 isEqual:@"vi"];
  }

  return v2;
}

void sub_100138698(void *a1, void *a2)
{
}

void sub_1001386A0(void *a1, void *a2, int a3)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _OWORD v6[2] = sub_10013875C;
  v6[3] = &unk_1001A17A8;
  int v9 = a3;
  id v7 = a1;
  id v8 = a2;
  id v4 = v8;
  id v5 = v7;
  [v5 cancelProxCardDraggingWithCompletion:v6];
}

void sub_10013875C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) transitioningDelegate];
  int v3 = *(_DWORD *)(a1 + 48);
  id v15 = (id)v2;
  if ((v3 & 2) != 0)
  {
    id v4 = objc_alloc_init(SVSTopAnimator);
    [*(id *)(a1 + 32) setTransitioningDelegate:v4];
  }
  else
  {
    if (v3) {
      goto LABEL_6;
    }
    id v4 = +[CATransition animation];
    [(SVSTopAnimator *)v4 setDuration:0.5];
    [(SVSTopAnimator *)v4 setType:kCATransitionFade];
    id v5 = +[CAMediaTimingFunction functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
    [(SVSTopAnimator *)v4 setTimingFunction:v5];

    id v6 = [*(id *)(a1 + 32) view];
    id v7 = [v6 layer];
    [v7 addAnimation:v4 forKey:0];

    id v8 = [*(id *)(a1 + 40) view];
    int v9 = [v8 layer];
    [v9 addAnimation:v4 forKey:0];
  }
LABEL_6:
  id v10 = [*(id *)(a1 + 32) viewControllers];
  unsigned __int8 v11 = [v10 containsObject:*(void *)(a1 + 40)];

  id v12 = *(void **)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  if (v11) {
    id v14 = [v12 popToViewController:v13 animated:0];
  }
  else {
    [v12 pushViewController:v13 animated:0];
  }
  [*(id *)(a1 + 32) setTransitioningDelegate:v15];
}

uint64_t sub_100138944()
{
  uint64_t v0 = +[UIScreen mainScreen];
  [v0 scale];
  double v2 = v1;
  [v0 _referenceBounds];
  double v4 = v3;
  double v6 = v5;
  id v7 = +[UIDevice currentDevice];
  unint64_t v8 = (unint64_t)[v7 userInterfaceIdiom];

  if ((v8 & 0xFFFFFFFFFFFFFFFBLL) == 1)
  {
    if (v2 == 2.0 && v4 == 768.0 && v6 == 1024.0)
    {
      uint64_t v12 = 7;
    }
    else
    {
      BOOL v11 = v2 == 2.0;
      if (v4 != 834.0) {
        BOOL v11 = 0;
      }
      if (v11 && v6 == 1112.0)
      {
        uint64_t v12 = 8;
      }
      else
      {
        if (v6 != 1194.0) {
          LOBYTE(v11) = 0;
        }
        if (v11)
        {
          uint64_t v12 = 9;
        }
        else if (v6 == 1366.0 && v4 == 1024.0 && v2 == 2.0)
        {
          uint64_t v12 = 10;
        }
        else
        {
          uint64_t v12 = 0;
        }
      }
    }
  }
  else
  {
    BOOL v13 = v2 == 2.0 && v4 == 320.0;
    if (v13 && v6 == 568.0)
    {
      uint64_t v12 = 1;
    }
    else if (v2 == 2.0 && v4 == 375.0 && v6 == 667.0)
    {
      uint64_t v12 = 2;
    }
    else
    {
      BOOL v14 = v2 == 3.0;
      if (v4 != 414.0) {
        BOOL v14 = 0;
      }
      if (v14 && v6 == 736.0)
      {
        uint64_t v12 = 3;
      }
      else if (v2 == 3.0 && v4 == 375.0 && v6 == 812.0)
      {
        uint64_t v12 = 4;
      }
      else if (v2 == 2.0 && (v4 == 414.0 ? (BOOL v18 = v6 == 896.0) : (BOOL v18 = 0), v18))
      {
        uint64_t v12 = 5;
      }
      else if (v14 && v6 == 896.0)
      {
        uint64_t v12 = 6;
      }
      else
      {
        uint64_t v12 = 0;
      }
    }
  }

  return v12;
}

id sub_100138B88()
{
  v2[0] = FBSOpenApplicationOptionKeyUnlockDevice;
  v2[1] = FBSOpenApplicationOptionKeyPromptUnlockDevice;
  v3[0] = &__kCFBooleanTrue;
  v3[1] = &__kCFBooleanTrue;
  uint64_t v0 = +[NSDictionary dictionaryWithObjects:v3 forKeys:v2 count:2];

  return v0;
}

id sub_100138C24()
{
  v7[0] = kCTFontTraitsAttribute;
  v6[0] = kCTFontUIFontDesignDefault;
  v5[0] = kCTFontUIFontDesignTrait;
  v5[1] = kCTFontWeightTrait;
  uint64_t v0 = +[NSNumber numberWithDouble:kCTFontWeightRegular];
  v6[1] = v0;
  double v1 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];
  v7[1] = kCTFontLanguageAwareLineHeightRatioAttribute;
  v8[0] = v1;
  v8[1] = &off_1001A72F8;
  double v2 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:2];
  double v3 = +[UIFontDescriptor fontDescriptorWithFontAttributes:v2];

  return v3;
}

id sub_100138D70()
{
  v7[0] = kCTFontTraitsAttribute;
  v6[0] = kCTFontUIFontDesignDefault;
  v5[0] = kCTFontUIFontDesignTrait;
  v5[1] = kCTFontWeightTrait;
  uint64_t v0 = +[NSNumber numberWithDouble:kCTFontWeightSemibold];
  v6[1] = v0;
  double v1 = +[NSDictionary dictionaryWithObjects:v6 forKeys:v5 count:2];
  v7[1] = kCTFontLanguageAwareLineHeightRatioAttribute;
  v8[0] = v1;
  v8[1] = &off_1001A72F8;
  double v2 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:2];
  double v3 = +[UIFontDescriptor fontDescriptorWithFontAttributes:v2];

  return v3;
}

id sub_100139884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _sessionHandleProgress:a2 info:a3];
}

id sub_100139894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (dword_1001CCF28 <= 30 && (dword_1001CCF28 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  double v6 = *(void **)(a1 + 32);

  return _[v6 showAuthUIWithFlags:a2 throttleSeconds:a3];
}

void sub_100139C34(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (dword_1001CCF28 <= 30 && (dword_1001CCF28 != -1 || _LogCategory_Initialize()))
  {
    id v3 = v4;
    LogPrintF();
  }
  [*(id *)(a1 + 32) invalidate:v3];
}

id sub_100139CD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 dismiss];
}

id sub_10013AEF4(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  unsigned int v2 = [*(id *)(a1 + 40) isEqual:@"1234"];
  id v3 = *(void **)(a1 + 48);
  if (v2)
  {
    id v4 = (void *)v3[3];
    return [v4 showProgressUI];
  }
  else
  {
    return [v3 showWithFlags:0x10000 throttleSeconds:0xFFFFFFFFLL];
  }
}

void sub_10013B1E4(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) view];
  [v7 bounds];
  double MidX = CGRectGetMidX(v9);
  id v3 = [*(id *)(a1 + 32) containerView];
  [v3 center];
  double v5 = v4;
  double v6 = [*(id *)(a1 + 32) containerView];
  [v6 setCenter:MidX, v5];
}

void sub_10013B280(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 layoutIfNeeded];
}

void sub_10013B6E8(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 length];
  double v4 = [*(id *)(*(void *)(a1 + 32) + 65) digits];
  id v5 = [v4 count];

  if (v3 == v5) {
    [*(id *)(a1 + 32) _handlePINEntered:v6];
  }
}

id sub_10013BC74(uint64_t a1)
{
  unsigned __int8 v2 = [*(id *)(*(void *)(a1 + 32) + 24) testFlags];
  id v3 = *(void **)(*(void *)(a1 + 32) + 24);
  if ((v2 & 2) != 0)
  {
    return [v3 showTryAgainUI];
  }
  else
  {
    return [v3 showDoneUI:0];
  }
}

id sub_10013C820(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 dismiss];
}

void sub_10013CF54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  _Block_object_dispose((const void *)(v25 - 136), 8);
  _Unwind_Resume(a1);
}

Class sub_10013CFA8(uint64_t a1)
{
  v6[0] = 0;
  if (!qword_1001D13E0)
  {
    v6[1] = _NSConcreteStackBlock;
    void v6[2] = (void *)3221225472;
    v6[3] = sub_10013EA58;
    void v6[4] = &unk_1001A1A68;
    void v6[5] = v6;
    long long v7 = off_1001A1A50;
    uint64_t v8 = 0;
    qword_1001D13E0 = _sl_dlopen();
  }
  if (!qword_1001D13E0)
  {
    id v3 = +[NSAssertionHandler currentHandler];
    double v4 = +[NSString stringWithUTF8String:"void *BridgePreferencesLibrary(void)"];
    [v3 handleFailureInFunction:v4 file:@"WatchSetupViewController.m" lineNumber:37 description:@"%s" v6[0]];

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("BPSWatchSetupProxCardViewController");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = +[NSAssertionHandler currentHandler];
    id v5 = +[NSString stringWithUTF8String:"Class getBPSWatchSetupProxCardViewControllerClass(void)_block_invoke"];
    [v3 handleFailureInFunction:v5 file:@"WatchSetupViewController.m" lineNumber:38 description:@"Unable to find class %s" @"BPSWatchSetupProxCardViewController"];

LABEL_10:
    __break(1u);
  }
  qword_1001D13D8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

id sub_10013D194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) dismissAnimated:a2 completion:a3];
}

Class sub_10013D1A4(uint64_t a1)
{
  v6[0] = 0;
  if (!qword_1001D13F0)
  {
    v6[1] = _NSConcreteStackBlock;
    void v6[2] = (void *)3221225472;
    v6[3] = sub_10013E9E4;
    void v6[4] = &unk_1001A1A68;
    void v6[5] = v6;
    long long v7 = off_1001A1A88;
    uint64_t v8 = 0;
    qword_1001D13F0 = _sl_dlopen();
  }
  if (!qword_1001D13F0)
  {
    id v3 = +[NSAssertionHandler currentHandler];
    double v4 = +[NSString stringWithUTF8String:"void *NanoRegistryLibrary(void)"];
    [v3 handleFailureInFunction:v4 file:@"WatchSetupViewController.m" lineNumber:46 description:@"%s" v6[0]];

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("NRPairingCompatibilityVersionInfo");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = +[NSAssertionHandler currentHandler];
    id v5 = +[NSString stringWithUTF8String:"Class getNRPairingCompatibilityVersionInfoClass(void)_block_invoke"];
    [v3 handleFailureInFunction:v5 file:@"WatchSetupViewController.m" lineNumber:48 description:@"Unable to find class %s" @"NRPairingCompatibilityVersionInfo"];

LABEL_10:
    __break(1u);
  }
  qword_1001D13E8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10013D390(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained dismissViewControllerAnimated:1 completion:0];
}

id sub_10013D67C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _launchWatchAppForPairing];
}

void sub_10013D7FC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

Class sub_10013D814(uint64_t a1)
{
  v6[0] = 0;
  if (!qword_1001D1400)
  {
    v6[1] = _NSConcreteStackBlock;
    void v6[2] = (void *)3221225472;
    v6[3] = sub_10013DBA0;
    void v6[4] = &unk_1001A1A68;
    void v6[5] = v6;
    long long v7 = off_1001A1AA0;
    uint64_t v8 = 0;
    qword_1001D1400 = _sl_dlopen();
  }
  if (!qword_1001D1400)
  {
    id v3 = +[NSAssertionHandler currentHandler];
    double v4 = +[NSString stringWithUTF8String:"void *AppStoreDaemonLibrary(void)"];
    [v3 handleFailureInFunction:v4 file:@"WatchSetupViewController.m" lineNumber:41 description:@"%s" v6[0]];

    goto LABEL_10;
  }
  if (v6[0]) {
    free(v6[0]);
  }
  Class result = objc_getClass("ASDSystemAppRequest");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (!*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v3 = +[NSAssertionHandler currentHandler];
    id v5 = +[NSString stringWithUTF8String:"Class getASDSystemAppRequestClass(void)_block_invoke"];
    [v3 handleFailureInFunction:v5 file:@"WatchSetupViewController.m" lineNumber:43 description:@"Unable to find class %s" "ASDSystemAppRequest"];

LABEL_10:
    __break(1u);
  }
  qword_1001D13F8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_10013DA00(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    if (dword_1001CCF98 <= 90 && (dword_1001CCF98 != -1 || _LogCategory_Initialize())) {
      LogPrintF();
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10013DB34;
    block[3] = &unk_1001A1BD8;
    void block[4] = *(void *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else if (dword_1001CCF98 <= 30 && (dword_1001CCF98 != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

id sub_10013DB34(uint64_t a1)
{
  uint64_t v2 = sub_100138280(@"Localizable", @"WATCH_PAIR_FAILED");
  [*(id *)(a1 + 32) setSubtitle:v2];

  [*(id *)(a1 + 32) setPairing:0];
  id v3 = *(void **)(a1 + 32);

  return _[v3 hideActivityIndicator];
}

uint64_t sub_10013DBA0()
{
  uint64_t result = _sl_dlopen();
  qword_1001D1400 = result;
  return result;
}

void sub_10013DC60(id a1)
{
  if (dword_1001CCF98 <= 60 && (dword_1001CCF98 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  id v1 = objc_alloc_init((Class)SFClient);
  uint64_t v2 = +[NSURL URLWithString:@"bridge://?action=StartPairing"];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10013DD6C;
  v4[3] = &unk_1001A1A08;
  id v5 = v1;
  id v3 = v1;
  [v3 openSetupURL:v2 completion:v4];
}

void sub_10013DD6C(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    if (dword_1001CCF98 <= 60 && (dword_1001CCF98 != -1 || _LogCategory_Initialize()))
    {
      id v3 = v4;
LABEL_7:
      LogPrintF();
    }
  }
  else if (dword_1001CCF98 <= 60 && (dword_1001CCF98 != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_7;
  }
  [*(id *)(a1 + 32) invalidate:v3];
}

void sub_10013E8DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 160));
  _Unwind_Resume(a1);
}

void sub_10013E920(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _handleContinueButton];
}

uint64_t sub_10013E9E4()
{
  uint64_t result = _sl_dlopen();
  qword_1001D13F0 = result;
  return result;
}

uint64_t sub_10013EA58()
{
  uint64_t result = _sl_dlopen();
  qword_1001D13E0 = result;
  return result;
}

id sub_1001402A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _[*(id *)(a1 + 32) _sessionHandleProgress:a2 info:a3];
}

void sub_1001402B8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v8 = v5;
  if (dword_1001CD068 <= 30)
  {
    if (dword_1001CD068 != -1 || (v6 = _LogCategory_Initialize(), id v5 = v8, v6))
    {
      id v7 = [v5 count];
      LogPrintF();
      id v5 = v8;
    }
  }
  [*(id *)(a1 + 32) showHomePickerUI:v5 defaultIndex:a3 v7];
}

id sub_100140374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (dword_1001CD068 <= 30 && (dword_1001CD068 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  int v6 = *(void **)(a1 + 32);

  return _[v6 showAuthUIWithFlags:a2 throttleSeconds:a3];
}

void sub_10014041C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v8 = v5;
  if (dword_1001CD068 <= 30)
  {
    if (dword_1001CD068 != -1 || (v6 = _LogCategory_Initialize(), id v5 = v8, v6))
    {
      id v7 = [v5 count];
      LogPrintF();
      id v5 = v8;
    }
  }
  [*(id *)(a1 + 32) showRoomPickerUI:v5 firstSuggestedIndex:a3];
}

id sub_100140D18(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2) {
    (*(void (**)(void))(v2 + 16))();
  }
  id v3 = *(void **)(a1 + 32);

  return [v3 dismiss];
}

id sub_100141210(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismiss:11];
}

id sub_1001419B4(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  uint64_t v2 = *(void **)(*(void *)(a1 + 40) + 24);

  return _[v2 showAuthUIWithFlags:0 throttleSeconds:0xFFFFFFFFLL];
}

id sub_1001420E0(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  unsigned int v2 = [*(id *)(a1 + 40) isEqual:@"1234"];
  id v3 = *(void **)(a1 + 48);
  if (v2)
  {
    id v4 = (void *)v3[3];
    return [v4 showProgressUI];
  }
  else
  {
    return [v3 showWithFlags:0x10000 throttleSeconds:0xFFFFFFFFLL];
  }
}

void sub_1001423D0(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) view];
  [v7 bounds];
  double MidX = CGRectGetMidX(v9);
  id v3 = [*(id *)(a1 + 32) containerView];
  [v3 center];
  double v5 = v4;
  int v6 = [*(id *)(a1 + 32) containerView];
  [v6 setCenter:MidX, v5];
}

void sub_10014246C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 layoutIfNeeded];
}

void sub_1001428D4(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [v6 length];
  double v4 = [*(id *)(*(void *)(a1 + 32) + 49) digits];
  id v5 = [v4 count];

  if (v3 == v5) {
    [*(id *)(a1 + 32) _handlePINEntered:v6];
  }
}

id sub_100142D84(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  unsigned int v2 = [*(id *)(*(void *)(a1 + 40) + 24) testMode];
  id v3 = *(void **)(*(void *)(a1 + 40) + 24);
  if (v2 == 1)
  {
    return [v3 showHomePickerUI:&__NSArray0__struct defaultIndex:-1];
  }
  else
  {
    return [v3 showDoneUI:4294960574];
  }
}

void sub_1001432D4(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  id v2 = objc_alloc_init((Class)NSMutableArray);
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v3 = (char *)[&off_1001A72B0 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    double v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(&off_1001A72B0);
        }
        id v7 = SFLocalizedStringForKey();
        [v2 addObject:v7];

        ++v6;
      }
      while (v4 != v6);
      double v4 = (char *)[&off_1001A72B0 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
  [*(id *)(*(void *)(a1 + 40) + 24) showRoomPickerUI:v2 firstSuggestedIndex:1];
}

id sub_100143A80(uint64_t a1)
{
  dispatch_source_cancel(*(dispatch_source_t *)(a1 + 32));
  if ([*(id *)(*(void *)(a1 + 40) + 24) testMode] == 1) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = 4294960574;
  }
  id v3 = *(void **)(*(void *)(a1 + 40) + 24);

  return [v3 showDoneUI:v2];
}

void sub_1001441EC(uint64_t a1)
{
  id v1 = +[NSURL URLWithString:*(void *)(a1 + 32)];
  if (dword_1001CD068 <= 30 && (dword_1001CD068 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
  if (v1)
  {
    uint64_t v2 = +[LSApplicationWorkspace defaultWorkspace];
    id v5 = 0;
    unsigned __int8 v3 = [v2 openSensitiveURL:v1 withOptions:0 error:&v5];
    id v4 = v5;

    if (v3) {
      goto LABEL_13;
    }
  }
  else
  {
    id v4 = 0;
  }
  if (dword_1001CD068 <= 90 && (dword_1001CD068 != -1 || _LogCategory_Initialize())) {
    LogPrintF();
  }
LABEL_13:
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t JSONDecoder.init()()
{
  return JSONDecoder.init()();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t URLComponents.host.setter()
{
  return URLComponents.host.setter();
}

uint64_t URLComponents.scheme.setter()
{
  return URLComponents.scheme.setter();
}

uint64_t URLComponents.init()()
{
  return URLComponents.init()();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t __DataStorage.init(bytes:length:)()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

uint64_t type metadata accessor for __DataStorage()
{
  return type metadata accessor for __DataStorage();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t URLResourceValues.isDirectory.getter()
{
  return URLResourceValues.isDirectory.getter();
}

uint64_t URLResourceValues.typeIdentifier.getter()
{
  return URLResourceValues.typeIdentifier.getter();
}

uint64_t URLResourceValues.contentType.getter()
{
  return URLResourceValues.contentType.getter();
}

uint64_t type metadata accessor for URLResourceValues()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t dispatch thunk of PropertyListDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t PropertyListDecoder.init()()
{
  return PropertyListDecoder.init()();
}

uint64_t type metadata accessor for PropertyListDecoder()
{
  return type metadata accessor for PropertyListDecoder();
}

uint64_t _BridgedStoredNSError.code.getter()
{
  return _BridgedStoredNSError.code.getter();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t URL.resourceValues(forKeys:)()
{
  return URL.resourceValues(forKeys:)();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.description.getter()
{
  return Data.description.getter();
}

uint64_t type metadata accessor for Data.RangeReference()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t Data._Representation.append(contentsOf:)()
{
  return Data._Representation.append(contentsOf:)();
}

uint64_t Data._Representation.subscript.getter()
{
  return Data._Representation.subscript.getter();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.append(_:)()
{
  return Data.append(_:)();
}

uint64_t type metadata accessor for Data.Iterator()
{
  return type metadata accessor for Data.Iterator();
}

uint64_t Data.Iterator.init(_:at:)()
{
  return Data.Iterator.init(_:at:)();
}

uint64_t Data.hashValue.getter()
{
  return Data.hashValue.getter();
}

uint64_t Data.subscript.getter()
{
  return Data.subscript.getter();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t Calendar.startOfDay(for:)()
{
  return Calendar.startOfDay(for:)();
}

uint64_t static Calendar.current.getter()
{
  return static Calendar.current.getter();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t IndexPath.row.getter()
{
  return IndexPath.row.getter();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t AirTagPairing2.AssetRequest.init(configuration:)()
{
  return AirTagPairing2.AssetRequest.init(configuration:)();
}

uint64_t type metadata accessor for AirTagPairing2.AssetRequest()
{
  return type metadata accessor for AirTagPairing2.AssetRequest();
}

uint64_t AirTagPairing2.Configuration.init(hardwareModel:color:timeout:)()
{
  return AirTagPairing2.Configuration.init(hardwareModel:color:timeout:)();
}

uint64_t AirTagPairing2.Configuration.engravingInformation.setter()
{
  return AirTagPairing2.Configuration.engravingInformation.setter();
}

uint64_t type metadata accessor for AirTagPairing2.Configuration.Color()
{
  return type metadata accessor for AirTagPairing2.Configuration.Color();
}

uint64_t type metadata accessor for AirTagPairing2.Configuration()
{
  return type metadata accessor for AirTagPairing2.Configuration();
}

uint64_t type metadata accessor for AirTagPairing2.Assets.ViewIdentifier()
{
  return type metadata accessor for AirTagPairing2.Assets.ViewIdentifier();
}

uint64_t AirTagPairing2.Assets.view(_:)()
{
  return AirTagPairing2.Assets.view(_:)();
}

uint64_t type metadata accessor for AirTagPairing2.Assets()
{
  return type metadata accessor for AirTagPairing2.Assets();
}

uint64_t type metadata accessor for AirTagHardwareModel()
{
  return type metadata accessor for AirTagHardwareModel();
}

uint64_t dispatch thunk of VideoPlaybackControllable.play()()
{
  return dispatch thunk of VideoPlaybackControllable.play()();
}

uint64_t PersonalizationAssetManager.PrePairingAssetInfo.init(scannedBluetoothData:)()
{
  return PersonalizationAssetManager.PrePairingAssetInfo.init(scannedBluetoothData:)();
}

uint64_t type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo()
{
  return type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
}

uint64_t SFMExampleUtterance.__allocating_init(forRole:)()
{
  return SFMExampleUtterance.__allocating_init(forRole:)();
}

uint64_t type metadata accessor for SFMExampleUtterance()
{
  return type metadata accessor for SFMExampleUtterance();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

uint64_t type metadata accessor for ClientOrigin()
{
  return type metadata accessor for ClientOrigin();
}

uint64_t type metadata accessor for RequestOrigin()
{
  return type metadata accessor for RequestOrigin();
}

uint64_t RequestOrigin.init(_:)()
{
  return RequestOrigin.init(_:)();
}

uint64_t type metadata accessor for PreferenceError()
{
  return type metadata accessor for PreferenceError();
}

uint64_t DeviceWithCompanion.thisDevice.getter()
{
  return DeviceWithCompanion.thisDevice.getter();
}

uint64_t type metadata accessor for DeviceWithCompanion()
{
  return type metadata accessor for DeviceWithCompanion();
}

uint64_t Device.isThisDevice.getter()
{
  return Device.isThisDevice.getter();
}

uint64_t Device.deviceName.getter()
{
  return Device.deviceName.getter();
}

uint64_t Device.identifier.getter()
{
  return Device.identifier.getter();
}

uint64_t type metadata accessor for Device()
{
  return type metadata accessor for Device();
}

uint64_t type metadata accessor for Session()
{
  return type metadata accessor for Session();
}

uint64_t fatalError(_:file:line:)()
{
  return fatalError(_:file:line:)();
}

Swift::Double __swiftcall UpTicksToSecondsF(_:)(Swift::UInt64 a1)
{
  UpTicksToSecondsF(_:)(a1);
  return result;
}

uint64_t MillisecondsPerSecond.getter()
{
  return MillisecondsPerSecond.getter();
}

Swift::UInt64 __swiftcall UpTicks()()
{
  return UpTicks()();
}

uint64_t static CNBoopSessionViewOld.initFromNFC(with:)()
{
  return static CNBoopSessionViewOld.initFromNFC(with:)();
}

uint64_t type metadata accessor for CNBoopSessionViewOld()
{
  return type metadata accessor for CNBoopSessionViewOld();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t os_signpost(_:dso:log:name:signpostID:_:_:)()
{
  return os_signpost(_:dso:log:name:signpostID:_:_:)();
}

uint64_t OSSignpostID.init(log:)()
{
  return OSSignpostID.init(log:)();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Logger.init(_:)()
{
  return Logger.init(_:)();
}

uint64_t type metadata accessor for SFAirDropReceive.Failure()
{
  return type metadata accessor for SFAirDropReceive.Failure();
}

uint64_t static SFInterventionResponse.== infix(_:_:)()
{
  return static SFInterventionResponse.== infix(_:_:)();
}

uint64_t type metadata accessor for SFInterventionResponse()
{
  return type metadata accessor for SFInterventionResponse();
}

uint64_t static SFInterventionWorkflow.SprinboardSettings.userInfoKey.getter()
{
  return static SFInterventionWorkflow.SprinboardSettings.userInfoKey.getter();
}

uint64_t SFInterventionWorkflow.SprinboardSettings.rawValue.getter()
{
  return SFInterventionWorkflow.SprinboardSettings.rawValue.getter();
}

uint64_t type metadata accessor for SFInterventionWorkflow.SprinboardSettings()
{
  return type metadata accessor for SFInterventionWorkflow.SprinboardSettings();
}

uint64_t SFInterventionWorkflow.init(rawValue:)()
{
  return SFInterventionWorkflow.init(rawValue:)();
}

uint64_t type metadata accessor for SFInterventionWorkflow()
{
  return type metadata accessor for SFInterventionWorkflow();
}

uint64_t static SFMoveToAppShareSheetSettings.encodedFiles.getter()
{
  return static SFMoveToAppShareSheetSettings.encodedFiles.getter();
}

uint64_t SFMoveToAppShareSheetSettings.rawValue.getter()
{
  return SFMoveToAppShareSheetSettings.rawValue.getter();
}

uint64_t type metadata accessor for SFMoveToAppShareSheetSettings()
{
  return type metadata accessor for SFMoveToAppShareSheetSettings();
}

uint64_t SFItemDestinationAlertSettings.rawValue.getter()
{
  return SFItemDestinationAlertSettings.rawValue.getter();
}

uint64_t static SFItemDestinationAlertSettings.viewModel.getter()
{
  return static SFItemDestinationAlertSettings.viewModel.getter();
}

uint64_t type metadata accessor for SFItemDestinationAlertSettings()
{
  return type metadata accessor for SFItemDestinationAlertSettings();
}

uint64_t SFItemDestinationAlertViewModel.cancelAction.getter()
{
  return SFItemDestinationAlertViewModel.cancelAction.getter();
}

uint64_t SFItemDestinationAlertViewModel.title.getter()
{
  return SFItemDestinationAlertViewModel.title.getter();
}

uint64_t SFItemDestinationAlertViewModel.Action.id.getter()
{
  return SFItemDestinationAlertViewModel.Action.id.getter();
}

uint64_t SFItemDestinationAlertViewModel.Action.title.getter()
{
  return SFItemDestinationAlertViewModel.Action.title.getter();
}

uint64_t type metadata accessor for SFItemDestinationAlertViewModel.Action()
{
  return type metadata accessor for SFItemDestinationAlertViewModel.Action();
}

uint64_t SFItemDestinationAlertViewModel.actions.getter()
{
  return SFItemDestinationAlertViewModel.actions.getter();
}

uint64_t SFItemDestinationAlertViewModel.message.getter()
{
  return SFItemDestinationAlertViewModel.message.getter();
}

uint64_t type metadata accessor for SFItemDestinationAlertViewModel()
{
  return type metadata accessor for SFItemDestinationAlertViewModel();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t UIHostingController.init(coder:rootView:)()
{
  return UIHostingController.init(coder:rootView:)();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.distantFuture.getter()
{
  return static DispatchTime.distantFuture.getter();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t DispatchWorkItem.init(flags:block:)()
{
  return DispatchWorkItem.init(flags:block:)();
}

uint64_t type metadata accessor for DispatchWorkItem()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t Array.init()()
{
  return Array.init()();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t String.init(data:encoding:)()
{
  return String.init(data:encoding:)();
}

uint64_t String.init<A>(bytes:encoding:)()
{
  return String.init<A>(bytes:encoding:)();
}

uint64_t String.init(format:arguments:)()
{
  return String.init(format:arguments:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

uint64_t String.init<A>(reflecting:)()
{
  return String.init<A>(reflecting:)();
}

uint64_t String.utf8CString.getter()
{
  return String.utf8CString.getter();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

uint64_t String.init(cString:)()
{
  return String.init(cString:)();
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.hashValue.getter()
{
  return String.hashValue.getter();
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t Array.count.getter()
{
  return Array.count.getter();
}

uint64_t Array.append(_:)()
{
  return Array.append(_:)();
}

Swift::Void __swiftcall Array.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
}

uint64_t type metadata accessor for Array()
{
  return type metadata accessor for Array();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Index._asCocoa.modify()
{
  return Set.Index._asCocoa.modify();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t Collection.isEmpty.getter()
{
  return Collection.isEmpty.getter();
}

uint64_t CGContextRef.draw(_:in:byTiling:)()
{
  return CGContextRef.draw(_:in:byTiling:)();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

uint64_t OS_dispatch_source.setEventHandler(handler:)()
{
  return OS_dispatch_source.setEventHandler(handler:)();
}

Swift::Void __swiftcall OS_dispatch_source.cancel()()
{
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
}

Swift::Void __swiftcall OS_dispatch_source.activate()()
{
}

uint64_t static os_signpost_type_t.end.getter()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t static SCUIInterventionViewController.openChatWithParents()()
{
  return static SCUIInterventionViewController.openChatWithParents()();
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hashValue.getter()
{
  return NSObject.hashValue.getter();
}

uint64_t _NSRange.init<A, B>(_:in:)()
{
  return _NSRange.init<A, B>(_:in:)();
}

uint64_t Optional.unwrap(_:file:line:)()
{
  return Optional.unwrap(_:file:line:)();
}

uint64_t Optional.debugDescription.getter()
{
  return Optional.debugDescription.getter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.range<A>(of:options:range:locale:)()
{
  return StringProtocol.range<A>(of:options:range:locale:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.Index.handleBitPattern.getter()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

uint64_t __CocoaSet.formIndex(after:isUnique:)()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t dispatch thunk of _AnyIndexBox._typeID.getter()
{
  return dispatch thunk of _AnyIndexBox._typeID.getter();
}

uint64_t dispatch thunk of _AnyIndexBox._isEqual(to:)()
{
  return dispatch thunk of _AnyIndexBox._isEqual(to:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t dispatch thunk of _AnyCollectionBox.subscript.getter()
{
  return dispatch thunk of _AnyCollectionBox.subscript.getter();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat()
{
  return type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(nilPrint:)()
{
  return DefaultStringInterpolation.appendInterpolation<A>(nilPrint:)();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t _findStringSwitchCaseWithCache(cases:string:cache:)()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

NSNumber __swiftcall Int32._bridgeToObjectiveC()()
{
  return (NSNumber)Int32._bridgeToObjectiveC()();
}

uint64_t static Hasher._hash(seed:bytes:count:)()
{
  return static Hasher._hash(seed:bytes:count:)();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t Mirror.init(reflecting:)()
{
  return Mirror.init(reflecting:)();
}

uint64_t Mirror.children.getter()
{
  return Mirror.children.getter();
}

uint64_t type metadata accessor for Mirror()
{
  return type metadata accessor for Mirror();
}

NSNumber __swiftcall UInt32._bridgeToObjectiveC()()
{
  return (NSNumber)UInt32._bridgeToObjectiveC()();
}

NSNumber __swiftcall UInt64._bridgeToObjectiveC()()
{
  return (NSNumber)UInt64._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

void AudioServicesPlaySystemSoundWithCompletion(SystemSoundID inSystemSoundID, void *inCompletionBlock)
{
}

CFTimeInterval CACurrentMediaTime(void)
{
  return _CACurrentMediaTime();
}

uint64_t CEMStringIsSingleEmoji()
{
  return _CEMStringIsSingleEmoji();
}

CFTypeID CFArrayGetTypeID(void)
{
  return _CFArrayGetTypeID();
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return _CFDataGetBytePtr(theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return _CFDataGetTypeID();
}

uint64_t CFDictionaryGetDouble()
{
  return _CFDictionaryGetDouble();
}

uint64_t CFDictionaryGetInt64()
{
  return _CFDictionaryGetInt64();
}

uint64_t CFDictionaryGetInt64Ranged()
{
  return _CFDictionaryGetInt64Ranged();
}

uint64_t CFDictionaryGetTypedValue()
{
  return _CFDictionaryGetTypedValue();
}

CFTypeID CFErrorGetTypeID(void)
{
  return _CFErrorGetTypeID();
}

uint64_t CFPrefs_GetInt64()
{
  return _CFPrefs_GetInt64();
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeID CFStringGetTypeID(void)
{
  return _CFStringGetTypeID();
}

CFStringRef CFURLCopyFileSystemPath(CFURLRef anURL, CFURLPathStyle pathStyle)
{
  return _CFURLCopyFileSystemPath(anURL, pathStyle);
}

CFURLRef CFURLCreateFromFileSystemRepresentation(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory)
{
  return _CFURLCreateFromFileSystemRepresentation(allocator, buffer, bufLen, isDirectory);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return _CGBitmapContextCreate(data, width, height, bitsPerComponent, bytesPerRow, space, bitmapInfo);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return _CGColorGetComponents(color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return _CGColorSpaceCreateDeviceRGB();
}

void CGContextAddEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextBeginPath(CGContextRef c)
{
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
}

void CGContextSetAlpha(CGContextRef c, CGFloat alpha)
{
}

void CGContextSetFillColor(CGContextRef c, const CGFloat *components)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

CFDataRef CGDataProviderCopyData(CGDataProviderRef provider)
{
  return _CGDataProviderCopyData(provider);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return _CGImageCreateWithImageInRect(image, rect);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return _CGImageGetBitsPerComponent(image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return _CGImageGetBytesPerRow(image);
}

CGDataProviderRef CGImageGetDataProvider(CGImageRef image)
{
  return _CGImageGetDataProvider(image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return _CGImageGetHeight(image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return _CGImageGetWidth(image);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CMTime *__cdecl CMTimeAdd(CMTime *__return_ptr retstr, CMTime *lhs, CMTime *rhs)
{
  return _CMTimeAdd(retstr, lhs, rhs);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  return _CMTimeGetSeconds(time);
}

uint64_t CUMainQueue()
{
  return _CUMainQueue();
}

CVReturn CVMetalTextureCacheCreate(CFAllocatorRef allocator, CFDictionaryRef cacheAttributes, id metalDevice, CFDictionaryRef textureAttributes, CVMetalTextureCacheRef *cacheOut)
{
  return _CVMetalTextureCacheCreate(allocator, cacheAttributes, metalDevice, textureAttributes, cacheOut);
}

CVReturn CVMetalTextureCacheCreateTextureFromImage(CFAllocatorRef allocator, CVMetalTextureCacheRef textureCache, CVImageBufferRef sourceImage, CFDictionaryRef textureAttributes, MTLPixelFormat pixelFormat, size_t width, size_t height, size_t planeIndex, CVMetalTextureRef *textureOut)
{
  return _CVMetalTextureCacheCreateTextureFromImage(allocator, textureCache, sourceImage, textureAttributes, pixelFormat, width, height, planeIndex, textureOut);
}

id CVMetalTextureGetTexture(CVMetalTextureRef image)
{
  return _CVMetalTextureGetTexture(image);
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return _CVPixelBufferGetHeight(pixelBuffer);
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return _CVPixelBufferGetWidth(pixelBuffer);
}

uint64_t DebugGetErrorString()
{
  return _DebugGetErrorString();
}

uint64_t GestaltCopyAnswer()
{
  return _GestaltCopyAnswer();
}

uint64_t GestaltGetDeviceClass()
{
  return _GestaltGetDeviceClass();
}

uint64_t IsAppleInternalBuild()
{
  return _IsAppleInternalBuild();
}

uint64_t LogControl()
{
  return _LogControl();
}

uint64_t LogPrintF()
{
  return _LogPrintF();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGIsQuestionValid()
{
  return _MGIsQuestionValid();
}

uint64_t MKBGetDeviceLockState()
{
  return _MKBGetDeviceLockState();
}

MKCoordinateRegion MKCoordinateRegionMakeWithDistance(CLLocationCoordinate2D centerCoordinate, CLLocationDistance latitudinalMeters, CLLocationDistance longitudinalMeters)
{
  return _MKCoordinateRegionMakeWithDistance(centerCoordinate, latitudinalMeters, longitudinalMeters);
}

uint64_t NSErrorF()
{
  return _NSErrorF();
}

uint64_t NSErrorToOSStatus()
{
  return _NSErrorToOSStatus();
}

uint64_t NSErrorWithOSStatusF()
{
  return _NSErrorWithOSStatusF();
}

void NSLog(NSString *format, ...)
{
}

uint64_t NSPrintF()
{
  return _NSPrintF();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return _PBDataWriterWriteBOOLField();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return _PBDataWriterWriteInt32Field();
}

uint64_t PBDataWriterWriteStringField()
{
  return _PBDataWriterWriteStringField();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return _PBDataWriterWriteUint32Field();
}

uint64_t PBDataWriterWriteUint64Field()
{
  return _PBDataWriterWriteUint64Field();
}

uint64_t PBReaderReadString()
{
  return _PBReaderReadString();
}

uint64_t PBReaderSkipValueWithTag()
{
  return _PBReaderSkipValueWithTag();
}

uint64_t SBSRequestPasscodeUnlockUI()
{
  return _SBSRequestPasscodeUnlockUI();
}

uint64_t SFAWDEnsureInitialized()
{
  return _SFAWDEnsureInitialized();
}

uint64_t SFAdjustmentFiltersForAssetTypeAndURL()
{
  return _SFAdjustmentFiltersForAssetTypeAndURL();
}

uint64_t SFDashboardLogJSON()
{
  return _SFDashboardLogJSON();
}

uint64_t SFDeviceClassCodeGet()
{
  return _SFDeviceClassCodeGet();
}

uint64_t SFDeviceHomeButtonType()
{
  return _SFDeviceHomeButtonType();
}

uint64_t SFDeviceModelCodeGet()
{
  return _SFDeviceModelCodeGet();
}

uint64_t SFDispatchTimerSet()
{
  return _SFDispatchTimerSet();
}

uint64_t SFFontForTextStyleWithAdditionalSymbolicTraits()
{
  return _SFFontForTextStyleWithAdditionalSymbolicTraits();
}

uint64_t SFHexStringForData()
{
  return _SFHexStringForData();
}

uint64_t SFIsAnnounceCallsEnabled()
{
  return _SFIsAnnounceCallsEnabled();
}

uint64_t SFIsDevicePhone()
{
  return _SFIsDevicePhone();
}

uint64_t SFIsFMFAllowed()
{
  return _SFIsFMFAllowed();
}

uint64_t SFIsGreenTeaDevice()
{
  return _SFIsGreenTeaDevice();
}

uint64_t SFIsRangingSupported()
{
  return _SFIsRangingSupported();
}

uint64_t SFLocalizePhoneNumber()
{
  return _SFLocalizePhoneNumber();
}

uint64_t SFLocalizedStringForKey()
{
  return _SFLocalizedStringForKey();
}

uint64_t SFMainQueue()
{
  return _SFMainQueue();
}

uint64_t SFMetricsLog()
{
  return _SFMetricsLog();
}

uint64_t SFPowerLogEvent()
{
  return _SFPowerLogEvent();
}

uint64_t SFTestFlagsFromString()
{
  return _SFTestFlagsFromString();
}

uint64_t SecondsToUpTicks()
{
  return _SecondsToUpTicks();
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

uint64_t UISizeRoundToScale()
{
  return _UISizeRoundToScale();
}

uint64_t UISizeRoundToViewScale()
{
  return _UISizeRoundToViewScale();
}

uint64_t UpTicksToMilliseconds()
{
  return _UpTicksToMilliseconds();
}

uint64_t UpTicksToSecondsF()
{
  return _UpTicksToSecondsF();
}

uint64_t WiFiManagerClientCreate()
{
  return _WiFiManagerClientCreate();
}

uint64_t WiFiManagerClientGetPower()
{
  return _WiFiManagerClientGetPower();
}

uint64_t WiFiManagerClientSetPower()
{
  return _WiFiManagerClientSetPower();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _LogCategory_Initialize()
{
  return __LogCategory_Initialize();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t b389_log()
{
  return _b389_log();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void exit(int a1)
{
}

void free(void *a1)
{
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

uint64_t mach_continuous_time(void)
{
  return _mach_continuous_time();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return _realpath_DARWIN_EXTSN(a1, a2);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_deallocUninitializedObject()
{
  return _swift_deallocUninitializedObject();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _[a1 CGRectValue];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLAssetWithURL_options_(void *a1, const char *a2, ...)
{
  return [a1 URLAssetWithURL:options:];
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return [a1 URLForResource:withExtension:];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend__applicationIconImageForBundleIdentifier_format_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForBundleIdentifier:format:scale:");
}

id objc_msgSend__applicationIconImageForFormat_precomposed_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForFormat:precomposed:scale:");
}

id objc_msgSend__deviceDiscoveryEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _deviceDiscoveryEnsureStarted];
}

id objc_msgSend__deviceSupported(void *a1, const char *a2, ...)
{
  return _[a1 _deviceSupported];
}

id objc_msgSend__discoveryStart(void *a1, const char *a2, ...)
{
  return _[a1 _discoveryStart];
}

id objc_msgSend__discoveryStop(void *a1, const char *a2, ...)
{
  return _[a1 _discoveryStop];
}

id objc_msgSend__flatImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flatImageWithColor:");
}

id objc_msgSend__handleAgreeFromObjectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleAgreeFromObjectModel:");
}

id objc_msgSend__handleContinueButton(void *a1, const char *a2, ...)
{
  return _[a1 _handleContinueButton];
}

id objc_msgSend__handleDeviceNoLongerNeedsPassword(void *a1, const char *a2, ...)
{
  return _[a1 _handleDeviceNoLongerNeedsPassword];
}

id objc_msgSend__handleDismissButton(void *a1, const char *a2, ...)
{
  return _[a1 _handleDismissButton];
}

id objc_msgSend__handleEnterCode(void *a1, const char *a2, ...)
{
  return _[a1 _handleEnterCode];
}

id objc_msgSend__handleHomeButtonPressed(void *a1, const char *a2, ...)
{
  return _[a1 _handleHomeButtonPressed];
}

id objc_msgSend__handleMigrateStart(void *a1, const char *a2, ...)
{
  return _[a1 _handleMigrateStart];
}

id objc_msgSend__handleOpenApp(void *a1, const char *a2, ...)
{
  return _[a1 _handleOpenApp];
}

id objc_msgSend__handlePINEntered_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handlePINEntered:");
}

id objc_msgSend__handleTestTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _handleTestTimerFired];
}

id objc_msgSend__handleTryAgainButton(void *a1, const char *a2, ...)
{
  return _[a1 _handleTryAgainButton];
}

id objc_msgSend__handleVisualAuthEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleVisualAuthEvent:");
}

id objc_msgSend__pairSetupTryPIN_(void *a1, const char *a2, ...)
{
  return [a1 _pairSetupTryPIN:];
}

id objc_msgSend__pickerAlertShowError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pickerAlertShowError:");
}

id objc_msgSend__pickerAlertShowSuccess(void *a1, const char *a2, ...)
{
  return _[a1 _pickerAlertShowSuccess];
}

id objc_msgSend__preferredFontForTextStyle_variant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:variant:");
}

id objc_msgSend__prepareTrainingAnimation(void *a1, const char *a2, ...)
{
  return _[a1 _prepareTrainingAnimation];
}

id objc_msgSend__referenceBounds(void *a1, const char *a2, ...)
{
  return _[a1 _referenceBounds];
}

id objc_msgSend__remoteViewControllerProxy(void *a1, const char *a2, ...)
{
  return _[a1 _remoteViewControllerProxy];
}

id objc_msgSend__sessionStart(void *a1, const char *a2, ...)
{
  return _[a1 _sessionStart];
}

id objc_msgSend__sessionStart_(void *a1, const char *a2, ...)
{
  return [a1 _sessionStart:];
}

id objc_msgSend__setContinuousCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 _setContinuousCornerRadius:];
}

id objc_msgSend__setDisallowsAutoPauseOnRouteRemovalIfNoAudio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:");
}

id objc_msgSend__setEndpoint_(void *a1, const char *a2, ...)
{
  return [a1 _setEndpoint:];
}

id objc_msgSend__setUsesDynamicRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUsesDynamicRowHeight:");
}

id objc_msgSend__startPairing_(void *a1, const char *a2, ...)
{
  return [a1 _startPairing:];
}

id objc_msgSend__termsDisagree(void *a1, const char *a2, ...)
{
  return _[a1 _termsDisagree];
}

id objc_msgSend__tryPIN_(void *a1, const char *a2, ...)
{
  return [a1 _tryPIN:];
}

id objc_msgSend__updateCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 _updateCornerRadius];
}

id objc_msgSend__updateLabels(void *a1, const char *a2, ...)
{
  return _[a1 _updateLabels];
}

id objc_msgSend__updateWidthConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _updateWidthConstraints];
}

id objc_msgSend_aa_needsToVerifyTerms(void *a1, const char *a2, ...)
{
  return [a1 aa_needsToVerifyTerms];
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return [a1 aa_primaryAppleAccount];
}

id objc_msgSend_actionButtons(void *a1, const char *a2, ...)
{
  return _[a1 actionButtons];
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:style:handler:];
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _[a1 activate];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 activateConstraints:];
}

id objc_msgSend_activatePhysicalCard_withActivationCode_forFeatureIdentifier_completion_(void *a1, const char *a2, ...)
{
  return [a1 activatePhysicalCard:withActivationCode:forFeatureIdentifier:completion:];
}

id objc_msgSend_activateTouchDelayTimer(void *a1, const char *a2, ...)
{
  return _[a1 activateTouchDelayTimer];
}

id objc_msgSend_activateWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 activateWithCompletion:];
}

id objc_msgSend_activateWithDimmingView_bottomMarginConstraint_dismissHandler_(void *a1, const char *a2, ...)
{
  return [a1 activateWithDimmingView:bottomMarginConstraint:dismissHandler:];
}

id objc_msgSend_activeInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 activeInterfaceOrientation];
}

id objc_msgSend_activityIndicator(void *a1, const char *a2, ...)
{
  return _[a1 activityIndicator];
}

id objc_msgSend_adamIDs(void *a1, const char *a2, ...)
{
  return _[a1 adamIDs];
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return [a1 addAction:];
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return [a1 addAnimation:forKey:];
}

id objc_msgSend_addAnimationObserver_(void *a1, const char *a2, ...)
{
  return [a1 addAnimationObserver:];
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttribute:value:range:];
}

id objc_msgSend_addChildNode_(void *a1, const char *a2, ...)
{
  return [a1 addChildNode:];
}

id objc_msgSend_addCompletedHandler_(void *a1, const char *a2, ...)
{
  return [a1 addCompletedHandler:];
}

id objc_msgSend_addFeature_(void *a1, const char *a2, ...)
{
  return [a1 addFeature:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addItem_(void *a1, const char *a2, ...)
{
  return [a1 addItem:];
}

id objc_msgSend_addKeyframeWithRelativeStartTime_relativeDuration_animations_(void *a1, const char *a2, ...)
{
  return [a1 addKeyframeWithRelativeStartTime:relativeStartTime:relativeDuration:animations:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addObserver_selector_name_object_suspensionBehavior_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:suspensionBehavior:];
}

id objc_msgSend_addOutput_(void *a1, const char *a2, ...)
{
  return [a1 addOutput:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_advertisementFields(void *a1, const char *a2, ...)
{
  return _[a1 advertisementFields];
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return [a1 alertControllerWithTitle:message:preferredStyle:];
}

id objc_msgSend_alignmentRectInsets(void *a1, const char *a2, ...)
{
  return _[a1 alignmentRectInsets];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return [a1 allocWithZone:];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateAlongsideTransition:completion:];
}

id objc_msgSend_animateKeyframesWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateKeyframesWithDuration:delay:options:animations:completion:];
}

id objc_msgSend_animateToStateName_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 animateToStateName:completionHandler:];
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:animations:completion:];
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return _[a1 animation];
}

id objc_msgSend_animationDidComplete(void *a1, const char *a2, ...)
{
  return _[a1 animationDidComplete];
}

id objc_msgSend_animationDidStart(void *a1, const char *a2, ...)
{
  return _[a1 animationDidStart];
}

id objc_msgSend_animationKeys(void *a1, const char *a2, ...)
{
  return _[a1 animationKeys];
}

id objc_msgSend_animationPlayerForKey_(void *a1, const char *a2, ...)
{
  return [a1 animationPlayerForKey:];
}

id objc_msgSend_announceCallsState(void *a1, const char *a2, ...)
{
  return _[a1 announceCallsState];
}

id objc_msgSend_announceMessagesEvent(void *a1, const char *a2, ...)
{
  return _[a1 announceMessagesEvent];
}

id objc_msgSend_appContent(void *a1, const char *a2, ...)
{
  return _[a1 appContent];
}

id objc_msgSend_appIconImage(void *a1, const char *a2, ...)
{
  return _[a1 appIconImage];
}

id objc_msgSend_appIconImageView(void *a1, const char *a2, ...)
{
  return _[a1 appIconImageView];
}

id objc_msgSend_appName(void *a1, const char *a2, ...)
{
  return _[a1 appName];
}

id objc_msgSend_appState(void *a1, const char *a2, ...)
{
  return _[a1 appState];
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return [a1 appendString:];
}

id objc_msgSend_appleIDHeadersForRequest_(void *a1, const char *a2, ...)
{
  return [a1 appleIDHeadersForRequest:];
}

id objc_msgSend_applicationProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 applicationProxyForIdentifier:];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return _[a1 asset];
}

id objc_msgSend_authenticateToPresentInPopover_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authenticateToPresentInPopover:completion:");
}

id objc_msgSend_autoGrant(void *a1, const char *a2, ...)
{
  return _[a1 autoGrant];
}

id objc_msgSend_b494(void *a1, const char *a2, ...)
{
  return _[a1 b494];
}

id objc_msgSend_b507(void *a1, const char *a2, ...)
{
  return _[a1 b507];
}

id objc_msgSend_b607(void *a1, const char *a2, ...)
{
  return _[a1 b607];
}

id objc_msgSend_b688(void *a1, const char *a2, ...)
{
  return _[a1 b688];
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return _[a1 background];
}

id objc_msgSend_badPINCount(void *a1, const char *a2, ...)
{
  return _[a1 badPINCount];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _[a1 begin];
}

id objc_msgSend_beginBackgroundTaskWithExpirationHandler_(void *a1, const char *a2, ...)
{
  return [a1 beginBackgroundTaskWithExpirationHandler:];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_bleDevice(void *a1, const char *a2, ...)
{
  return _[a1 bleDevice];
}

id objc_msgSend_borderColor(void *a1, const char *a2, ...)
{
  return _[a1 borderColor];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_bottomMarginConstraint(void *a1, const char *a2, ...)
{
  return _[a1 bottomMarginConstraint];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_btProductID(void *a1, const char *a2, ...)
{
  return _[a1 btProductID];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return [a1 bundleForClass];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 bundleWithIdentifier:];
}

id objc_msgSend_camera(void *a1, const char *a2, ...)
{
  return _[a1 camera];
}

id objc_msgSend_canEvaluatePolicy_error_(void *a1, const char *a2, ...)
{
  return [a1 canEvaluatePolicy:error:];
}

id objc_msgSend_cancelProxCardDraggingWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 cancelProxCardDraggingWithCompletion:];
}

id objc_msgSend_cardSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 cardSubtitle];
}

id objc_msgSend_cardTitle(void *a1, const char *a2, ...)
{
  return _[a1 cardTitle];
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _[a1 center];
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerXAnchor];
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _[a1 centerYAnchor];
}

id objc_msgSend_chooseHome_(void *a1, const char *a2, ...)
{
  return [a1 chooseHome:];
}

id objc_msgSend_chooseRoom_(void *a1, const char *a2, ...)
{
  return [a1 chooseRoom:];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clientInfo(void *a1, const char *a2, ...)
{
  return _[a1 clientInfo];
}

id objc_msgSend_clientInfoHeader(void *a1, const char *a2, ...)
{
  return _[a1 clientInfoHeader];
}

id objc_msgSend_clientTryPIN_(void *a1, const char *a2, ...)
{
  return [a1 clientTryPIN:];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_colorCalibratorSetupSession(void *a1, const char *a2, ...)
{
  return _[a1 colorCalibratorSetupSession];
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return [a1 colorWithAlphaComponent:];
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithRed:green:blue:alpha:];
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithWhite:alpha:];
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return _[a1 commit];
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return _[a1 completionHandler];
}

id objc_msgSend_componentsWithString_(void *a1, const char *a2, ...)
{
  return [a1 componentsWithString:];
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithPointSize:];
}

id objc_msgSend_configureUIElementsDefault(void *a1, const char *a2, ...)
{
  return _[a1 configureUIElementsDefault];
}

id objc_msgSend_configureUIElementsForHotspot(void *a1, const char *a2, ...)
{
  return _[a1 configureUIElementsForHotspot];
}

id objc_msgSend_configureVideo(void *a1, const char *a2, ...)
{
  return _[a1 configureVideo];
}

id objc_msgSend_configureVideoGeometry(void *a1, const char *a2, ...)
{
  return _[a1 configureVideoGeometry];
}

id objc_msgSend_constant(void *a1, const char *a2, ...)
{
  return _[a1 constant];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToConstant:];
}

id objc_msgSend_constraintEqualToSystemSpacingAfterAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToSystemSpacingAfterAnchor:multiplier:];
}

id objc_msgSend_constraintGreaterThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintGreaterThanOrEqualToAnchor:];
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToAnchor];
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return _[a1 constraints];
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _[a1 containerView];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsTraitsInCollection_(void *a1, const char *a2, ...)
{
  return [a1 containsTraitsInCollection:];
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _[a1 contentOffset];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return [a1 convertPoint:toView:];
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:fromView:];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyPixelBufferForItemTime_itemTimeForDisplay_(void *a1, const char *a2, ...)
{
  return [a1 copyPixelBufferForItemTime:itemTimeForDisplay:];
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return [a1 copyWithZone:];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_currentCommandBuffer(void *a1, const char *a2, ...)
{
  return _[a1 currentCommandBuffer];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentItem(void *a1, const char *a2, ...)
{
  return _[a1 currentItem];
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _[a1 currentLocale];
}

id objc_msgSend_currentTime(void *a1, const char *a2, ...)
{
  return _[a1 currentTime];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 dataWithBytes:length:];
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfFile:];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 deactivateConstraints:];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultPrimaryActionStyle(void *a1, const char *a2, ...)
{
  return _[a1 defaultPrimaryActionStyle];
}

id objc_msgSend_defaultSecondaryActionStyle(void *a1, const char *a2, ...)
{
  return _[a1 defaultSecondaryActionStyle];
}

id objc_msgSend_defaultSubtitleFont(void *a1, const char *a2, ...)
{
  return _[a1 defaultSubtitleFont];
}

id objc_msgSend_defaultTitleColor(void *a1, const char *a2, ...)
{
  return _[a1 defaultTitleColor];
}

id objc_msgSend_defaultTitleFont(void *a1, const char *a2, ...)
{
  return _[a1 defaultTitleFont];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_deleteCharactersInRange_(void *a1, const char *a2, ...)
{
  return [a1 deleteCharactersInRange:];
}

id objc_msgSend_desiredHomeButtonEvents(void *a1, const char *a2, ...)
{
  return _[a1 desiredHomeButtonEvents];
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return _[a1 device];
}

id objc_msgSend_deviceActionType(void *a1, const char *a2, ...)
{
  return _[a1 deviceActionType];
}

id objc_msgSend_deviceColorCode(void *a1, const char *a2, ...)
{
  return _[a1 deviceColorCode];
}

id objc_msgSend_deviceDiscoveryStart(void *a1, const char *a2, ...)
{
  return _[a1 deviceDiscoveryStart];
}

id objc_msgSend_deviceDiscoveryStop(void *a1, const char *a2, ...)
{
  return _[a1 deviceDiscoveryStop];
}

id objc_msgSend_deviceForSession(void *a1, const char *a2, ...)
{
  return _[a1 deviceForSession];
}

id objc_msgSend_deviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 deviceIdentifier];
}

id objc_msgSend_deviceName(void *a1, const char *a2, ...)
{
  return _[a1 deviceName];
}

id objc_msgSend_deviceProductID(void *a1, const char *a2, ...)
{
  return _[a1 deviceProductID];
}

id objc_msgSend_deviceSupportsInEarDetection(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupportsInEarDetection];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithDictionary:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_diffuse(void *a1, const char *a2, ...)
{
  return _[a1 diffuse];
}

id objc_msgSend_digits(void *a1, const char *a2, ...)
{
  return _[a1 digits];
}

id objc_msgSend_dimmingView(void *a1, const char *a2, ...)
{
  return _[a1 dimmingView];
}

id objc_msgSend_discoverabilitySignal(void *a1, const char *a2, ...)
{
  return _[a1 discoverabilitySignal];
}

id objc_msgSend_discoverabilitySignalsStream(void *a1, const char *a2, ...)
{
  return _[a1 discoverabilitySignalsStream];
}

id objc_msgSend_dismiss(void *a1, const char *a2, ...)
{
  return _[a1 dismiss];
}

id objc_msgSend_dismiss_(void *a1, const char *a2, ...)
{
  return [a1 dismiss];
}

id objc_msgSend_dismiss_animated_(void *a1, const char *a2, ...)
{
  return [a1 dismiss:YES];
}

id objc_msgSend_dismiss_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismiss:completion:];
}

id objc_msgSend_dismissActionStyle(void *a1, const char *a2, ...)
{
  return _[a1 dismissActionStyle];
}

id objc_msgSend_dismissActionTitle(void *a1, const char *a2, ...)
{
  return _[a1 dismissActionTitle];
}

id objc_msgSend_dismissAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissAnimated:completion:];
}

id objc_msgSend_dismissEventually(void *a1, const char *a2, ...)
{
  return _[a1 dismissEventually];
}

id objc_msgSend_dismissObjectModelsAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissObjectModelsAnimated:YES completion:nil];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerAnimated:YES completion:nil];
}

id objc_msgSend_dismissWithAction_(void *a1, const char *a2, ...)
{
  return [a1 dismissWithAction:];
}

id objc_msgSend_dismissWithType_(void *a1, const char *a2, ...)
{
  return [a1 dismissWithType:];
}

id objc_msgSend_dismissing(void *a1, const char *a2, ...)
{
  return _[a1 dismissing];
}

id objc_msgSend_displayCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 displayCornerRadius];
}

id objc_msgSend_displayStringForContactIdentifier_deviceIdentifier_completion_(void *a1, const char *a2, ...)
{
  return [a1 displayStringForContactIdentifier:deviceIdentifier:completion:];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_drawViewHierarchyInRect_afterScreenUpdates_(void *a1, const char *a2, ...)
{
  return [a1 drawViewHierarchyInRect:afterScreenUpdates:];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 effectWithStyle:];
}

id objc_msgSend_endBackgroundTask_(void *a1, const char *a2, ...)
{
  return [a1 endBackgroundTask:];
}

id objc_msgSend_ensureStoppedWithDismiss_(void *a1, const char *a2, ...)
{
  return [a1 ensureStoppedWithDismiss];
}

id objc_msgSend_ensureStoppedWithDismiss_reason_(void *a1, const char *a2, ...)
{
  return [a1 ensureStoppedWithDismiss:reason:];
}

id objc_msgSend_enumerateChildNodesUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateChildNodesUsingBlock:];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateKeysAndObjectsUsingBlock:];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_evaluatePolicy_localizedReason_reply_(void *a1, const char *a2, ...)
{
  return [a1 evaluatePolicy:localizedReason:reply:];
}

id objc_msgSend_eventWithStream_source_startDate_endDate_identifierStringValue_metadata_(void *a1, const char *a2, ...)
{
  return [a1 eventWithStream:source:startDate:endDate:identifierStringValue:metadata:];
}

id objc_msgSend_events(void *a1, const char *a2, ...)
{
  return _[a1 events];
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 exceptionWithName:reason:userInfo:];
}

id objc_msgSend_extendedUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 extendedUserInfo];
}

id objc_msgSend_failureResult(void *a1, const char *a2, ...)
{
  return _[a1 failureResult];
}

id objc_msgSend_featureWithTitle_detailText_icon_tintColor_(void *a1, const char *a2, ...)
{
  return [a1 featureWithTitle:detailText:icon:tintColor:];
}

id objc_msgSend_fetchNameAndIconWithSize_completion_(void *a1, const char *a2, ...)
{
  return [a1 fetchNameAndIconWithSize:completion:];
}

id objc_msgSend_fileRadar_(void *a1, const char *a2, ...)
{
  return [a1 fileRadar:];
}

id objc_msgSend_fileTransferSessionTemplate(void *a1, const char *a2, ...)
{
  return _[a1 fileTransferSessionTemplate];
}

id objc_msgSend_fileURLWithPath_relativeToURL_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithPath:relativeToURL:];
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_finish(void *a1, const char *a2, ...)
{
  return _[a1 finish];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_fontDescriptorWithFontAttributes_(void *a1, const char *a2, ...)
{
  return [a1 fontDescriptorWithFontAttributes:];
}

id objc_msgSend_fontDescriptorWithSymbolicTraits_(void *a1, const char *a2, ...)
{
  return [a1 fontDescriptorWithSymbolicTraits:];
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return [a1 fontWithDescriptor:];
}

id objc_msgSend_forcedActivationResult(void *a1, const char *a2, ...)
{
  return _[a1 forcedActivationResult];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return [a1 functionWithName:];
}

id objc_msgSend_geometry(void *a1, const char *a2, ...)
{
  return _[a1 geometry];
}

id objc_msgSend_getAssetBundleForDeviceQuery_withRequestConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAssetBundleForDeviceQuery:withRequestConfiguration:");
}

id objc_msgSend_grayColor(void *a1, const char *a2, ...)
{
  return _[a1 grayColor];
}

id objc_msgSend_handleActivateButton_(void *a1, const char *a2, ...)
{
  return [a1 handleActivateButton:];
}

id objc_msgSend_handleAllowButtonPressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAllowButtonPressed:");
}

id objc_msgSend_handleContinueButton(void *a1, const char *a2, ...)
{
  return _[a1 handleContinueButton];
}

id objc_msgSend_handleContinueForCalls(void *a1, const char *a2, ...)
{
  return _[a1 handleContinueForCalls];
}

id objc_msgSend_handleContinueForMessages(void *a1, const char *a2, ...)
{
  return _[a1 handleContinueForMessages];
}

id objc_msgSend_handleDismissButton(void *a1, const char *a2, ...)
{
  return _[a1 handleDismissButton];
}

id objc_msgSend_handleDismissForCalls(void *a1, const char *a2, ...)
{
  return _[a1 handleDismissForCalls];
}

id objc_msgSend_handleDismissForMessages(void *a1, const char *a2, ...)
{
  return _[a1 handleDismissForMessages];
}

id objc_msgSend_handleDoNotAnnounceButton(void *a1, const char *a2, ...)
{
  return _[a1 handleDoNotAnnounceButton];
}

id objc_msgSend_handleDoNotForMessages(void *a1, const char *a2, ...)
{
  return _[a1 handleDoNotForMessages];
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return [a1 handleFailureInFunction:file:lineNumber:description:];
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return [a1 handleFailureInMethod:object:file:lineNumber:description:];
}

id objc_msgSend_handleProgressEvent_(void *a1, const char *a2, ...)
{
  return [a1 handleProgressEvent:];
}

id objc_msgSend_handleProgressEvent_info_(void *a1, const char *a2, ...)
{
  return [a1 handleProgressEvent:info:];
}

id objc_msgSend_handleStartButton_(void *a1, const char *a2, ...)
{
  return [a1 handleStartButton:];
}

id objc_msgSend_hasNewPixelBufferForItemTime_(void *a1, const char *a2, ...)
{
  return [a1 hasNewPixelBufferForItemTime:];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 heightAnchor];
}

id objc_msgSend_hotspot(void *a1, const char *a2, ...)
{
  return _[a1 hotspot];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_imageByApplyingSymbolConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 imageByApplyingSymbolConfiguration:];
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:];
}

id objc_msgSend_imageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:inBundle:];
}

id objc_msgSend_inEarDetection(void *a1, const char *a2, ...)
{
  return _[a1 inEarDetection];
}

id objc_msgSend_indexOfObject_inSortedRange_options_usingComparator_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:inSortedRange:options:usingComparator:];
}

id objc_msgSend_infoButton(void *a1, const char *a2, ...)
{
  return _[a1 infoButton];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initWithAccount_parameters_preferPassword_(void *a1, const char *a2, ...)
{
  return [a1 initWithAccount:parameters:preferPassword:];
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivityIndicatorStyle:];
}

id objc_msgSend_initWithAdamIDs_(void *a1, const char *a2, ...)
{
  return [a1 initWithAdamIDs:];
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithBarButtonSystemItem:target:action:];
}

id objc_msgSend_initWithBluetoothProductIdentifier_color_(void *a1, const char *a2, ...)
{
  return [a1 initWithBluetoothProductIdentifier:color:];
}

id objc_msgSend_initWithBundleID_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleID:];
}

id objc_msgSend_initWithContentView_(void *a1, const char *a2, ...)
{
  return [a1 initWithContentView:];
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return [a1 initWithEffect:];
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 initWithFormat:];
}

id objc_msgSend_initWithFormat_arguments_(void *a1, const char *a2, ...)
{
  return [a1 initWithFormat:arguments:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithFrame_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:options:];
}

id objc_msgSend_initWithGestureRecognizerEvaluator_(void *a1, const char *a2, ...)
{
  return [a1 initWithGestureRecognizerEvaluator:];
}

id objc_msgSend_initWithHomePodColor_version_(void *a1, const char *a2, ...)
{
  return [a1 initWithHomePodColor:version:];
}

id objc_msgSend_initWithIdentifier_bundleID_context_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:bundleID:context:];
}

id objc_msgSend_initWithIdentifier_bundleIdentifier_itemIdentifier_groupIdentifier_deviceIdentifier_userIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:bundleIdentifier:itemIdentifier:groupIdentifier:deviceIdentifier:userIdentifier:];
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:];
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 initWithObjects:];
}

id objc_msgSend_initWithPixelBufferAttributes_(void *a1, const char *a2, ...)
{
  return [a1 initWithPixelBufferAttributes:];
}

id objc_msgSend_initWithPresentedViewController_presentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithPresentedViewController:presentingViewController:];
}

id objc_msgSend_initWithProductID_(void *a1, const char *a2, ...)
{
  return [a1 initWithProductID:];
}

id objc_msgSend_initWithQueryResultHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithQueryResultHandler:];
}

id objc_msgSend_initWithScannerEngine_(void *a1, const char *a2, ...)
{
  return [a1 initWithScannerEngine:];
}

id objc_msgSend_initWithSize_(void *a1, const char *a2, ...)
{
  return [a1 initWithSize:];
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:attributes:];
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initWithTitle_detailText_icon_tintColor_valueChangedBlock_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:detailText:icon:tintColor:valueChangedBlock:];
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:style:target:action:];
}

id objc_msgSend_initWithURLString_account_(void *a1, const char *a2, ...)
{
  return [a1 initWithURLString:account:];
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return [a1 initWithUUIDString:];
}

id objc_msgSend_initWithUserInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserInfo:];
}

id objc_msgSend_initWithUserInfo_withDismissCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserInfo:withDismissCompletionHandler:];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertObject:atIndex:];
}

id objc_msgSend_insertSubview_below_(void *a1, const char *a2, ...)
{
  return [a1 insertSubview:below:];
}

id objc_msgSend_installProfileWithData_completion_(void *a1, const char *a2, ...)
{
  return [a1 installProfileWithData:completion:];
}

id objc_msgSend_installed(void *a1, const char *a2, ...)
{
  return _[a1 installed];
}

id objc_msgSend_instantiateInitialViewController(void *a1, const char *a2, ...)
{
  return _[a1 instantiateInitialViewController];
}

id objc_msgSend_instantiateViewController(void *a1, const char *a2, ...)
{
  return _[a1 instantiateViewController];
}

id objc_msgSend_instantiateViewControllerWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 instantiateViewControllerWithIdentifier];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return [a1 interfaceWithProtocol:];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateTouchDelayTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateTouchDelayTimer];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isAirPods(void *a1, const char *a2, ...)
{
  return _[a1 isAirPods];
}

id objc_msgSend_isBeingDismissed(void *a1, const char *a2, ...)
{
  return _[a1 isBeingDismissed];
}

id objc_msgSend_isBeingPresented(void *a1, const char *a2, ...)
{
  return _[a1 isBeingPresented];
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return _[a1 isDragging];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isInstalled(void *a1, const char *a2, ...)
{
  return _[a1 isInstalled];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return [a1 isMemberOfClass:];
}

id objc_msgSend_isMovingFromParentViewController(void *a1, const char *a2, ...)
{
  return _[a1 isMovingFromParentViewController];
}

id objc_msgSend_isMovingToParentViewController(void *a1, const char *a2, ...)
{
  return _[a1 isMovingToParentViewController];
}

id objc_msgSend_isOn(void *a1, const char *a2, ...)
{
  return _[a1 isOn];
}

id objc_msgSend_isPairing(void *a1, const char *a2, ...)
{
  return _[a1 isPairing];
}

id objc_msgSend_isSiriAllowedWhileLocked(void *a1, const char *a2, ...)
{
  return _[a1 isSiriAllowedWhileLocked];
}

id objc_msgSend_isUpsellFlow(void *a1, const char *a2, ...)
{
  return _[a1 isUpsellFlow];
}

id objc_msgSend_issuerID(void *a1, const char *a2, ...)
{
  return _[a1 issuerID];
}

id objc_msgSend_justBeAContainer(void *a1, const char *a2, ...)
{
  return _[a1 justBeAContainer];
}

id objc_msgSend_keyPathWithKey_(void *a1, const char *a2, ...)
{
  return [a1 keyPathWithKey:];
}

id objc_msgSend_knowledgeStore(void *a1, const char *a2, ...)
{
  return _[a1 knowledgeStore];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_labelWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 labelWithStyle:];
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _[a1 languageCode];
}

id objc_msgSend_latencySetupSession(void *a1, const char *a2, ...)
{
  return _[a1 latencySetupSession];
}

id objc_msgSend_launchSetupForMigration_(void *a1, const char *a2, ...)
{
  return [a1 launchSetupForMigration:];
}

id objc_msgSend_launchURL(void *a1, const char *a2, ...)
{
  return _[a1 launchURL];
}

id objc_msgSend_launchWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 launchWithCompletion:];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_loadData_baseURL_(void *a1, const char *a2, ...)
{
  return [a1 loadData:baseURL:];
}

id objc_msgSend_loadOfflineTerms(void *a1, const char *a2, ...)
{
  return _[a1 loadOfflineTerms];
}

id objc_msgSend_loadRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadRequest:completion:");
}

id objc_msgSend_loadedHandler(void *a1, const char *a2, ...)
{
  return _[a1 loadedHandler];
}

id objc_msgSend_loader(void *a1, const char *a2, ...)
{
  return _[a1 loader];
}

id objc_msgSend_locIntermediateStringForViewType_(void *a1, const char *a2, ...)
{
  return [a1 locIntermediateStringForViewType:];
}

id objc_msgSend_locTableForViewType_(void *a1, const char *a2, ...)
{
  return [a1 locTableForViewType:];
}

id objc_msgSend_localizations(void *a1, const char *a2, ...)
{
  return _[a1 localizations];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 localizedDeviceName];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedStandardCompare_(void *a1, const char *a2, ...)
{
  return [a1 localizedStandardCompare:];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return [a1 locationInView:];
}

id objc_msgSend_logDismissEventForAnnounceMessagesToDuet(void *a1, const char *a2, ...)
{
  return _[a1 logDismissEventForAnnounceMessagesToDuet];
}

id objc_msgSend_logUsageDone_(void *a1, const char *a2, ...)
{
  return [a1 logUsageDone:];
}

id objc_msgSend_logUsageStart_(void *a1, const char *a2, ...)
{
  return [a1 logUsageStart:];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainContentGuide(void *a1, const char *a2, ...)
{
  return _[a1 mainContentGuide];
}

id objc_msgSend_mainController(void *a1, const char *a2, ...)
{
  return _[a1 mainController];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_material(void *a1, const char *a2, ...)
{
  return _[a1 material];
}

id objc_msgSend_materialPropertyWithContents_(void *a1, const char *a2, ...)
{
  return [a1 materialPropertyWithContents:];
}

id objc_msgSend_maxPairingCompatibilityVersion(void *a1, const char *a2, ...)
{
  return _[a1 maxPairingCompatibilityVersion];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modelForUserInfo_(void *a1, const char *a2, ...)
{
  return [a1 modelForUserInfo:];
}

id objc_msgSend_modelForUserInfo_siriControllerClass_(void *a1, const char *a2, ...)
{
  return [a1 modelForUserInfo:siriControllerClass:];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_myAppleID(void *a1, const char *a2, ...)
{
  return _[a1 myAppleID];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameOnCard(void *a1, const char *a2, ...)
{
  return _[a1 nameOnCard];
}

id objc_msgSend_naturalSize(void *a1, const char *a2, ...)
{
  return _[a1 naturalSize];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_needsSetup(void *a1, const char *a2, ...)
{
  return _[a1 needsSetup];
}

id objc_msgSend_newDefaultLibraryWithBundle_error_(void *a1, const char *a2, ...)
{
  return [a1 newDefaultLibraryWithBundle:error:];
}

id objc_msgSend_newTextureWithDescriptor_(void *a1, const char *a2, ...)
{
  return [a1 newTextureWithDescriptor:];
}

id objc_msgSend_nfcTagScanned(void *a1, const char *a2, ...)
{
  return _[a1 nfcTagScanned];
}

id objc_msgSend_nodeWithGeometry_(void *a1, const char *a2, ...)
{
  return [a1 nodeWithGeometry:];
}

id objc_msgSend_nominalFrameRate(void *a1, const char *a2, ...)
{
  return _[a1 nominalFrameRate];
}

id objc_msgSend_notificationOccurred_(void *a1, const char *a2, ...)
{
  return [a1 notificationOccurred:];
}

id objc_msgSend_notifyObserversWithCommandBuffer_(void *a1, const char *a2, ...)
{
  return [a1 notifyObserversWithCommandBuffer:];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInteger:];
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInt:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedLongLong:];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndex:];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_openApplicationWithBundleID_(void *a1, const char *a2, ...)
{
  return [a1 openApplicationWithBundleID:];
}

id objc_msgSend_openButton(void *a1, const char *a2, ...)
{
  return _[a1 openButton];
}

id objc_msgSend_openSensitiveURL_withOptions_error_(void *a1, const char *a2, ...)
{
  return [a1 openSensitiveURL:withOptions:error:];
}

id objc_msgSend_openSetupURL_completion_(void *a1, const char *a2, ...)
{
  return [a1 openSetupURL:completion:];
}

id objc_msgSend_openURL_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 openURL:withCompletionHandler:];
}

id objc_msgSend_openURL_withOptions_error_(void *a1, const char *a2, ...)
{
  return [a1 openURL:withOptions:error:];
}

id objc_msgSend_optionalFeatureWithTitle_detailText_icon_tintColor_valueChangedBlock_(void *a1, const char *a2, ...)
{
  return [a1 optionalFeatureWithTitle:detailText:icon:tintColor:valueChangedBlock:];
}

id objc_msgSend_osBuild(void *a1, const char *a2, ...)
{
  return _[a1 osBuild];
}

id objc_msgSend_otherDeviceClassCode(void *a1, const char *a2, ...)
{
  return _[a1 otherDeviceClassCode];
}

id objc_msgSend_otherDeviceModelCode(void *a1, const char *a2, ...)
{
  return _[a1 otherDeviceModelCode];
}

id objc_msgSend_packageWithContentsOfURL_type_options_error_(void *a1, const char *a2, ...)
{
  return [a1 packageWithContentsOfURL:type:options:error:];
}

id objc_msgSend_pairSetupTryPIN_(void *a1, const char *a2, ...)
{
  return [a1 pairSetupTryPIN:];
}

id objc_msgSend_pairingSession(void *a1, const char *a2, ...)
{
  return _[a1 pairingSession];
}

id objc_msgSend_panGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 panGestureRecognizer];
}

id objc_msgSend_password(void *a1, const char *a2, ...)
{
  return _[a1 password];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return [a1 pathForResource:ofType:];
}

id objc_msgSend_pathForResource_ofType_inDirectory_forLocalization_(void *a1, const char *a2, ...)
{
  return [a1 pathForResource:ofType:inDirectory:forLocalization:];
}

id objc_msgSend_peerPublicKey(void *a1, const char *a2, ...)
{
  return _[a1 peerPublicKey];
}

id objc_msgSend_performAction_completion_(void *a1, const char *a2, ...)
{
  return [a1 performAction:completion:];
}

id objc_msgSend_performRequestWithHandler_(void *a1, const char *a2, ...)
{
  return [a1 performRequestWithHandler:];
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return [a1 performWithoutAnimation:];
}

id objc_msgSend_physicalCard(void *a1, const char *a2, ...)
{
  return _[a1 physicalCard];
}

id objc_msgSend_physicalCardForFeatureIdentifier_activationCode_completion_(void *a1, const char *a2, ...)
{
  return [a1 physicalCardForFeatureIdentifier:activationCode:completion:];
}

id objc_msgSend_planeWithWidth_height_(void *a1, const char *a2, ...)
{
  return [a1 planeWithWidth:height:];
}

id objc_msgSend_playerForMovieAtURL_pointsSize_nominalFrameRate_(void *a1, const char *a2, ...)
{
  return [a1 playerForMovieAtURL:pointsSize:nominalFrameRate:];
}

id objc_msgSend_playerItemWithAsset_(void *a1, const char *a2, ...)
{
  return [a1 playerItemWithAsset:];
}

id objc_msgSend_playerWithPlayerItem_(void *a1, const char *a2, ...)
{
  return [a1 playerWithPlayerItem:];
}

id objc_msgSend_pointInside_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointInside:withEvent:");
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _[a1 pointSize];
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 popToViewController:animated:];
}

id objc_msgSend_postNotificationName_object_userInfo_deliverImmediately_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:userInfo:deliverImmediately:];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithFormat:];
}

id objc_msgSend_prefHideTTR(void *a1, const char *a2, ...)
{
  return _[a1 prefHideTTR];
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontDescriptorWithTextStyle:];
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _[a1 preferredLanguages];
}

id objc_msgSend_preferredLocalizationsFromArray_forPreferences_(void *a1, const char *a2, ...)
{
  return [a1 preferredLocalizationsFromArray:forPreferences:];
}

id objc_msgSend_prepareForRetry(void *a1, const char *a2, ...)
{
  return _[a1 prepareForRetry];
}

id objc_msgSend_presentAppropriateViewControllerIfReady(void *a1, const char *a2, ...)
{
  return _[a1 presentAppropriateViewControllerIfReady];
}

id objc_msgSend_presentProxCardFlowWithDelegate_initialViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentProxCardFlowWithDelegate:initialViewController:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:animated:completion:];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentingViewController];
}

id objc_msgSend_primaryActionStyle(void *a1, const char *a2, ...)
{
  return _[a1 primaryActionStyle];
}

id objc_msgSend_primaryActionTitle(void *a1, const char *a2, ...)
{
  return _[a1 primaryActionTitle];
}

id objc_msgSend_primaryActionUsesLegacyStyling(void *a1, const char *a2, ...)
{
  return _[a1 primaryActionUsesLegacyStyling];
}

id objc_msgSend_primaryColor(void *a1, const char *a2, ...)
{
  return _[a1 primaryColor];
}

id objc_msgSend_productID(void *a1, const char *a2, ...)
{
  return _[a1 productID];
}

id objc_msgSend_productIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 productIdentifier];
}

id objc_msgSend_productImage(void *a1, const char *a2, ...)
{
  return _[a1 productImage];
}

id objc_msgSend_program(void *a1, const char *a2, ...)
{
  return _[a1 program];
}

id objc_msgSend_proxCardNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 proxCardNavigationController];
}

id objc_msgSend_proximityButtonType(void *a1, const char *a2, ...)
{
  return _[a1 proximityButtonType];
}

id objc_msgSend_purpose(void *a1, const char *a2, ...)
{
  return _[a1 purpose];
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushViewController:animated:];
}

id objc_msgSend_queryItemWithName_value_(void *a1, const char *a2, ...)
{
  return [a1 queryItemWithName:value:];
}

id objc_msgSend_raise(void *a1, const char *a2, ...)
{
  return _[a1 raise];
}

id objc_msgSend_rangeOfComposedCharacterSequenceAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfComposedCharacterSequenceAtIndex:];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfString:];
}

id objc_msgSend_reactivate(void *a1, const char *a2, ...)
{
  return _[a1 reactivate];
}

id objc_msgSend_recognizerEvaluator(void *a1, const char *a2, ...)
{
  return _[a1 recognizerEvaluator];
}

id objc_msgSend_reenableProxCardType_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reenableProxCardType:completion:");
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return [a1 remoteObjectProxyWithErrorHandler:];
}

id objc_msgSend_removeAction_(void *a1, const char *a2, ...)
{
  return [a1 removeAction];
}

id objc_msgSend_removeAnimationForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeAnimationForKey:];
}

id objc_msgSend_removeAnimationObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeAnimationObserver];
}

id objc_msgSend_removeAttribute_range_(void *a1, const char *a2, ...)
{
  return [a1 removeAttribute:range:];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 removeGestureRecognizer:];
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectAtIndex:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:name:object:];
}

id objc_msgSend_renderer(void *a1, const char *a2, ...)
{
  return _[a1 renderer];
}

id objc_msgSend_replaceCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return [a1 replaceCharactersInRange:withString:];
}

id objc_msgSend_replaceRegion_mipmapLevel_withBytes_bytesPerRow_(void *a1, const char *a2, ...)
{
  return [a1 replaceRegion:mipmapLevel:withBytes:bytesPerRow:];
}

id objc_msgSend_resourceURL(void *a1, const char *a2, ...)
{
  return _[a1 resourceURL];
}

id objc_msgSend_retriggerProximitySetup_(void *a1, const char *a2, ...)
{
  return [a1 retriggerProximitySetup:];
}

id objc_msgSend_retryActivation(void *a1, const char *a2, ...)
{
  return _[a1 retryActivation];
}

id objc_msgSend_rootNode(void *a1, const char *a2, ...)
{
  return _[a1 rootNode];
}

id objc_msgSend_saveObjects_responseQueue_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveObjects:responseQueue:withCompletion:");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scanRate(void *a1, const char *a2, ...)
{
  return _[a1 scanRate];
}

id objc_msgSend_scannerEngine(void *a1, const char *a2, ...)
{
  return _[a1 scannerEngine];
}

id objc_msgSend_sceneWithURL_options_error_(void *a1, const char *a2, ...)
{
  return [a1 sceneWithURL:options:error:];
}

id objc_msgSend_secondaryActionAvailable(void *a1, const char *a2, ...)
{
  return _[a1 secondaryActionAvailable];
}

id objc_msgSend_secondaryActionStyle(void *a1, const char *a2, ...)
{
  return _[a1 secondaryActionStyle];
}

id objc_msgSend_secondaryActionTitle(void *a1, const char *a2, ...)
{
  return _[a1 secondaryActionTitle];
}

id objc_msgSend_secondaryActionUsesLegacyStyling(void *a1, const char *a2, ...)
{
  return _[a1 secondaryActionUsesLegacyStyling];
}

id objc_msgSend_secondarySystemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 secondarySystemFillColor];
}

id objc_msgSend_selectedRowInComponent_(void *a1, const char *a2, ...)
{
  return [a1 selectedRowInComponent:];
}

id objc_msgSend_selfPublicKey(void *a1, const char *a2, ...)
{
  return _[a1 selfPublicKey];
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _[a1 semanticContentAttribute];
}

id objc_msgSend_sendAppEvent_(void *a1, const char *a2, ...)
{
  return [a1 sendAppEvent:];
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return [a1 sendEvent:];
}

id objc_msgSend_sendResponseWithUnHandledEvents_(void *a1, const char *a2, ...)
{
  return [a1 sendResponseWithUnHandledEvents:];
}

id objc_msgSend_serverDidPickUsername_password_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serverDidPickUsername:password:error:");
}

id objc_msgSend_sessionStart(void *a1, const char *a2, ...)
{
  return _[a1 sessionStart];
}

id objc_msgSend_sessionStop(void *a1, const char *a2, ...)
{
  return _[a1 sessionStop];
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return [a1 setActive:];
}

id objc_msgSend_setActivityIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setActivityIndicator:];
}

id objc_msgSend_setAdjustsFontForContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsFontForContentSizeCategory:];
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsFontSizeToFitWidth:];
}

id objc_msgSend_setAdvertisingName_(void *a1, const char *a2, ...)
{
  return [a1 setAdvertisingName];
}

id objc_msgSend_setAllowNonSecureHTTP_(void *a1, const char *a2, ...)
{
  return [a1 setAllowNonSecureHTTP:];
}

id objc_msgSend_setAllowedUnits_(void *a1, const char *a2, ...)
{
  return [a1 setAllowedUnits:];
}

id objc_msgSend_setAllowsAlertItems_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsAlertItems:];
}

id objc_msgSend_setAllowsAlertStacking_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsAlertStacking:];
}

id objc_msgSend_setAllowsBanners_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsBanners:];
}

id objc_msgSend_setAllowsExternalPlayback_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsExternalPlayback:];
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return [a1 setAlpha:];
}

id objc_msgSend_setAlwaysBounceVertical_(void *a1, const char *a2, ...)
{
  return [a1 setAlwaysBounceVertical:];
}

id objc_msgSend_setAmsURLOverride_(void *a1, const char *a2, ...)
{
  return [a1 setAmsURLOverride];
}

id objc_msgSend_setAnimationDuration_(void *a1, const char *a2, ...)
{
  return [a1 setAnimationDuration:];
}

id objc_msgSend_setAnnounceCallsState_(void *a1, const char *a2, ...)
{
  return [a1 setAnnounceCallsState:];
}

id objc_msgSend_setAnnounceMessagesEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setAnnounceMessagesEnabled:];
}

id objc_msgSend_setAntialiasingMode_(void *a1, const char *a2, ...)
{
  return [a1 setAntialiasingMode:];
}

id objc_msgSend_setAppIconImage_(void *a1, const char *a2, ...)
{
  return [a1 setAppIconImage:];
}

id objc_msgSend_setAppIconImageView_(void *a1, const char *a2, ...)
{
  return [a1 setAppIconImageView:];
}

id objc_msgSend_setAppName_(void *a1, const char *a2, ...)
{
  return [a1 setAppName:];
}

id objc_msgSend_setAppeared_(void *a1, const char *a2, ...)
{
  return [a1 setAppeared:];
}

id objc_msgSend_setAttribute_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setAttribute:forKey:];
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return [a1 setAttributedText:];
}

id objc_msgSend_setAttributes_range_(void *a1, const char *a2, ...)
{
  return [a1 setAttributes:range:];
}

id objc_msgSend_setAuthenticationGracePeriod_(void *a1, const char *a2, ...)
{
  return [a1 setAuthenticationGracePeriod:];
}

id objc_msgSend_setAutoStart_(void *a1, const char *a2, ...)
{
  return [a1 setAutoStart:];
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundColor:];
}

id objc_msgSend_setBadPINCount_(void *a1, const char *a2, ...)
{
  return [a1 setBadPINCount:];
}

id objc_msgSend_setBlendMode_(void *a1, const char *a2, ...)
{
  return [a1 setBlendMode:];
}

id objc_msgSend_setBlockHardwareButtons_(void *a1, const char *a2, ...)
{
  return [a1 setBlockHardwareButtons:];
}

id objc_msgSend_setBlurBackground_(void *a1, const char *a2, ...)
{
  return [a1 setBlurBackground:];
}

id objc_msgSend_setBodyText_(void *a1, const char *a2, ...)
{
  return [a1 setBodyText:];
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return [a1 setBorderColor:];
}

id objc_msgSend_setBorderWidth_(void *a1, const char *a2, ...)
{
  return [a1 setBorderWidth:];
}

id objc_msgSend_setCancelsTouchesInView_(void *a1, const char *a2, ...)
{
  return [a1 setCancelsTouchesInView:];
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return [a1 setCenter:];
}

id objc_msgSend_setChangeFlags_(void *a1, const char *a2, ...)
{
  return [a1 setChangeFlags:];
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setClipsToBounds:];
}

id objc_msgSend_setColorMode_animated_(void *a1, const char *a2, ...)
{
  return [a1 setColorMode:animated:];
}

id objc_msgSend_setCompleted_(void *a1, const char *a2, ...)
{
  return [a1 setCompleted:];
}

id objc_msgSend_setCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setCompletionHandler:];
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return [a1 setConstant:];
}

id objc_msgSend_setContactIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setContactIdentifier];
}

id objc_msgSend_setContentInsetAdjustmentBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setContentInsetAdjustmentBehavior:];
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return [a1 setContentMode:];
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return [a1 setContentOffset:];
}

id objc_msgSend_setContentOffset_animated_(void *a1, const char *a2, ...)
{
  return [a1 setContentOffset:animated:];
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setContentSize:];
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return [a1 setContents:];
}

id objc_msgSend_setCustomImage_withAlignmentEdgeInsets_(void *a1, const char *a2, ...)
{
  return [a1 setCustomImage:withAlignmentEdgeInsets:];
}

id objc_msgSend_setData_(void *a1, const char *a2, ...)
{
  return [a1 setData:];
}

id objc_msgSend_setDefaultHomeIndex_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultHomeIndex:];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDesiredHardwareButtonEvents_(void *a1, const char *a2, ...)
{
  return [a1 setDesiredHardwareButtonEvents:];
}

id objc_msgSend_setDeviceChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceChangedHandler:];
}

id objc_msgSend_setDeviceConnectedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceConnectedHandler:];
}

id objc_msgSend_setDeviceFoundHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceFoundHandler:];
}

id objc_msgSend_setDeviceLostHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceLostHandler:];
}

id objc_msgSend_setDeviceName_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceName:];
}

id objc_msgSend_setDeviceProductID_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceProductID];
}

id objc_msgSend_setDeviceSupportsInEarDetection_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceSupportsInEarDetection:];
}

id objc_msgSend_setDigits_(void *a1, const char *a2, ...)
{
  return [a1 setDigits:];
}

id objc_msgSend_setDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setDisabled:];
}

id objc_msgSend_setDisclaimer_(void *a1, const char *a2, ...)
{
  return [a1 setDisclaimer:];
}

id objc_msgSend_setDiscoveryFlags_(void *a1, const char *a2, ...)
{
  return [a1 setDiscoveryFlags:];
}

id objc_msgSend_setDismissActionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDismissActionStyle:];
}

id objc_msgSend_setDismissActionTitle_(void *a1, const char *a2, ...)
{
  return [a1 setDismissActionTitle:];
}

id objc_msgSend_setDismissButtonAction_(void *a1, const char *a2, ...)
{
  return [a1 setDismissButtonAction:];
}

id objc_msgSend_setDismissalType_(void *a1, const char *a2, ...)
{
  return [a1 setDismissalType:];
}

id objc_msgSend_setDismissing_(void *a1, const char *a2, ...)
{
  return [a1 setDismissing:];
}

id objc_msgSend_setDispatchQueue_(void *a1, const char *a2, ...)
{
  return [a1 setDispatchQueue:];
}

id objc_msgSend_setDisplayNameIsDevice_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayNameIsDevice:];
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return [a1 setDuration:];
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEnabled:];
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return [a1 setError:];
}

id objc_msgSend_setEventHandler_(void *a1, const char *a2, ...)
{
  return [a1 setEventHandler:];
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return [a1 setExportedInterface];
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return [a1 setExportedObject:];
}

id objc_msgSend_setExternallyVerifiedAndApprovedSharedWebCredentialsDomains_(void *a1, const char *a2, ...)
{
  return [a1 setExternallyVerifiedAndApprovedSharedWebCredentialsDomains];
}

id objc_msgSend_setFailureResult_(void *a1, const char *a2, ...)
{
  return [a1 setFailureResult:];
}

id objc_msgSend_setFeatureImage_(void *a1, const char *a2, ...)
{
  return [a1 setFeatureImage:];
}

id objc_msgSend_setFileTransferSession_(void *a1, const char *a2, ...)
{
  return [a1 setFileTransferSession:];
}

id objc_msgSend_setFirstSuggestedIndex_(void *a1, const char *a2, ...)
{
  return [a1 setFirstSuggestedIndex:];
}

id objc_msgSend_setFlags_(void *a1, const char *a2, ...)
{
  return [a1 setFlags:];
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return [a1 setFont:];
}

id objc_msgSend_setForcedActivationResult_(void *a1, const char *a2, ...)
{
  return [a1 setForcedActivationResult:];
}

id objc_msgSend_setFragmentFunctionName_(void *a1, const char *a2, ...)
{
  return [a1 setFragmentFunctionName:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setHandlerForElementName_handler_(void *a1, const char *a2, ...)
{
  return [a1 setHandlerForElementName:handler:];
}

id objc_msgSend_setHasUserSeenAnnounceCallsOptOutScreen_(void *a1, const char *a2, ...)
{
  return [a1 setHasUserSeenAnnounceCallsOptOutScreen:];
}

id objc_msgSend_setHasUserSeenAnnounceMessagesOptOutScreen_(void *a1, const char *a2, ...)
{
  return [a1 setHasUserSeenAnnounceMessagesOptOutScreen:];
}

id objc_msgSend_setHashedEmail_(void *a1, const char *a2, ...)
{
  return [a1 setHashedEmail:];
}

id objc_msgSend_setHashedPhone_(void *a1, const char *a2, ...)
{
  return [a1 setHashedPhone];
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return [a1 setHidden:];
}

id objc_msgSend_setHomes_(void *a1, const char *a2, ...)
{
  return [a1 setHomes:];
}

id objc_msgSend_setHostViewController_(void *a1, const char *a2, ...)
{
  return [a1 setHostViewController:];
}

id objc_msgSend_setHotspotPSK_(void *a1, const char *a2, ...)
{
  return [a1 setHotspotPSK:];
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setIdentifier];
}

id objc_msgSend_setIdleTimerDisabled_forReason_(void *a1, const char *a2, ...)
{
  return [a1 setIdleTimerDisabled:forReason:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setImageStyle_(void *a1, const char *a2, ...)
{
  return [a1 setImageStyle:];
}

id objc_msgSend_setImages_(void *a1, const char *a2, ...)
{
  return [a1 setImages:];
}

id objc_msgSend_setIncludesApproximationPhrase_(void *a1, const char *a2, ...)
{
  return [a1 setIncludesApproximationPhrase:];
}

id objc_msgSend_setInfoButtonAction_(void *a1, const char *a2, ...)
{
  return [a1 setInfoButtonAction:];
}

id objc_msgSend_setInitialState(void *a1, const char *a2, ...)
{
  return _[a1 setInitialState];
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setInterruptionHandler:];
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setInvalidationHandler:];
}

id objc_msgSend_setIsSiriAllowedWhileLocked_(void *a1, const char *a2, ...)
{
  return [a1 setIsSiriAllowedWhileLocked:];
}

id objc_msgSend_setIsUpsellFlow_(void *a1, const char *a2, ...)
{
  return [a1 setIsUpsellFlow:];
}

id objc_msgSend_setItemURL_(void *a1, const char *a2, ...)
{
  return [a1 setItemURL:];
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return [a1 setLabel:];
}

id objc_msgSend_setLibrary_(void *a1, const char *a2, ...)
{
  return [a1 setLibrary:];
}

id objc_msgSend_setLightingModelName_(void *a1, const char *a2, ...)
{
  return [a1 setLightingModelName:];
}

id objc_msgSend_setListenerEndpoint_(void *a1, const char *a2, ...)
{
  return [a1 setListenerEndpoint:];
}

id objc_msgSend_setLocalizedDeviceName_(void *a1, const char *a2, ...)
{
  return [a1 setLocalizedDeviceName];
}

id objc_msgSend_setLocalizedName_(void *a1, const char *a2, ...)
{
  return [a1 setLocalizedName:];
}

id objc_msgSend_setLoops_(void *a1, const char *a2, ...)
{
  return [a1 setLoops:];
}

id objc_msgSend_setMagnificationFilter_(void *a1, const char *a2, ...)
{
  return [a1 setMagnificationFilter:];
}

id objc_msgSend_setMainController_(void *a1, const char *a2, ...)
{
  return [a1 setMainController:];
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setMasksToBounds:];
}

id objc_msgSend_setMaterials_(void *a1, const char *a2, ...)
{
  return [a1 setMaterials:];
}

id objc_msgSend_setMaximumUnitCount_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumUnitCount:];
}

id objc_msgSend_setMinificationFilter_(void *a1, const char *a2, ...)
{
  return [a1 setMinificationFilter:];
}

id objc_msgSend_setMipFilter_(void *a1, const char *a2, ...)
{
  return [a1 setMipFilter:];
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationStyle:];
}

id objc_msgSend_setModalTransitionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalTransitionStyle:];
}

id objc_msgSend_setModel_(void *a1, const char *a2, ...)
{
  return [a1 setModel:];
}

id objc_msgSend_setModelContents_(void *a1, const char *a2, ...)
{
  return [a1 setModelContents:];
}

id objc_msgSend_setMoreInfoAction_(void *a1, const char *a2, ...)
{
  return [a1 setMoreInfoAction:];
}

id objc_msgSend_setMyAppleID_(void *a1, const char *a2, ...)
{
  return [a1 setMyAppleID:];
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return [a1 setName:];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNumberOfTapsRequired_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfTapsRequired:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setOn_(void *a1, const char *a2, ...)
{
  return [a1 setOn:];
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return [a1 setOpaque:];
}

id objc_msgSend_setOpenAction_(void *a1, const char *a2, ...)
{
  return [a1 setOpenAction:];
}

id objc_msgSend_setOpenButton_(void *a1, const char *a2, ...)
{
  return [a1 setOpenButton:];
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return [a1 setOptions:];
}

id objc_msgSend_setOsVersion_(void *a1, const char *a2, ...)
{
  return [a1 setOsVersion:];
}

id objc_msgSend_setOverrideUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 setOverrideUserInterfaceStyle:];
}

id objc_msgSend_setPagingEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setPagingEnabled:];
}

id objc_msgSend_setPairFlags_(void *a1, const char *a2, ...)
{
  return [a1 setPairFlags:];
}

id objc_msgSend_setPairing_(void *a1, const char *a2, ...)
{
  return [a1 setPairing:];
}

id objc_msgSend_setPairingExitView_(void *a1, const char *a2, ...)
{
  return [a1 setPairingExitView:];
}

id objc_msgSend_setPairingFinishedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPairingFinishedHandler:];
}

id objc_msgSend_setPaused_(void *a1, const char *a2, ...)
{
  return [a1 setPaused:];
}

id objc_msgSend_setPeerDevice_(void *a1, const char *a2, ...)
{
  return [a1 setPeerDevice:];
}

id objc_msgSend_setPeerDisplayName_(void *a1, const char *a2, ...)
{
  return [a1 setPeerDisplayName:];
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return [a1 setPlaceholder:];
}

id objc_msgSend_setPreferredAction_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredAction:];
}

id objc_msgSend_setPreferredFramesPerSecond_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredFramesPerSecond:];
}

id objc_msgSend_setPreferredSymbolConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredSymbolConfiguration:];
}

id objc_msgSend_setPresentingViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPresentingViewController:];
}

id objc_msgSend_setPrimaryActionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryActionStyle:];
}

id objc_msgSend_setPrimaryActionTitle_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryActionTitle:];
}

id objc_msgSend_setPrimaryActionUsesLegacyStyling_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryActionUsesLegacyStyling:];
}

id objc_msgSend_setProgram_(void *a1, const char *a2, ...)
{
  return [a1 setProgram:];
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return [a1 setProgress:];
}

id objc_msgSend_setProgressHandler_(void *a1, const char *a2, ...)
{
  return [a1 setProgressHandler:];
}

id objc_msgSend_setPromptForHomeHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPromptForHomeHandler:];
}

id objc_msgSend_setPromptForPINHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPromptForPINHandler:];
}

id objc_msgSend_setPromptForPickerHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPromptForPickerHandler:];
}

id objc_msgSend_setPromptForRoomHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPromptForRoomHandler:];
}

id objc_msgSend_setProxCardNavigationController_(void *a1, const char *a2, ...)
{
  return [a1 setProxCardNavigationController:];
}

id objc_msgSend_setPurpose_(void *a1, const char *a2, ...)
{
  return [a1 setPurpose:];
}

id objc_msgSend_setQueryItems_(void *a1, const char *a2, ...)
{
  return [a1 setQueryItems:];
}

id objc_msgSend_setReadsFromDepthBuffer_(void *a1, const char *a2, ...)
{
  return [a1 setReadsFromDepthBuffer:];
}

id objc_msgSend_setReceivedItemHandler_(void *a1, const char *a2, ...)
{
  return [a1 setReceivedItemHandler:];
}

id objc_msgSend_setRemoteAppID_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteAppID:];
}

id objc_msgSend_setRemoteLocalizedAppName_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteLocalizedAppName:];
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteObjectInterface:];
}

id objc_msgSend_setRemoteUnlocalizedAppName_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteUnlocalizedAppName:];
}

id objc_msgSend_setRenderingOrder_(void *a1, const char *a2, ...)
{
  return [a1 setRenderingOrder:];
}

id objc_msgSend_setRendersContinuously_(void *a1, const char *a2, ...)
{
  return [a1 setRendersContinuously:];
}

id objc_msgSend_setRepairFlags_(void *a1, const char *a2, ...)
{
  return [a1 setRepairFlags:];
}

id objc_msgSend_setRepeatCount_(void *a1, const char *a2, ...)
{
  return [a1 setRepeatCount:];
}

id objc_msgSend_setRequestSSID_(void *a1, const char *a2, ...)
{
  return [a1 setRequestSSID:];
}

id objc_msgSend_setRooms_(void *a1, const char *a2, ...)
{
  return [a1 setRooms:];
}

id objc_msgSend_setRssiThreshold_(void *a1, const char *a2, ...)
{
  return [a1 setRssiThreshold:];
}

id objc_msgSend_setScanRate_(void *a1, const char *a2, ...)
{
  return [a1 setScanRate:];
}

id objc_msgSend_setScannedCodeHandler_(void *a1, const char *a2, ...)
{
  return [a1 setScannedCodeHandler:];
}

id objc_msgSend_setScene_(void *a1, const char *a2, ...)
{
  return [a1 setScene:];
}

id objc_msgSend_setSceneTime_(void *a1, const char *a2, ...)
{
  return [a1 setSceneTime:];
}

id objc_msgSend_setSecondaryActionAvailable_(void *a1, const char *a2, ...)
{
  return [a1 setSecondaryActionAvailable:];
}

id objc_msgSend_setSecondaryActionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSecondaryActionStyle:];
}

id objc_msgSend_setSecondaryActionTitle_(void *a1, const char *a2, ...)
{
  return [a1 setSecondaryActionTitle:];
}

id objc_msgSend_setSecondaryActionUsesLegacyStyling_(void *a1, const char *a2, ...)
{
  return [a1 setSecondaryActionUsesLegacyStyling:];
}

id objc_msgSend_setSessionUUID_(void *a1, const char *a2, ...)
{
  return [a1 setSessionUUID:];
}

id objc_msgSend_setShadowColor_(void *a1, const char *a2, ...)
{
  return [a1 setShadowColor:];
}

id objc_msgSend_setShowsHorizontalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsHorizontalScrollIndicator:];
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsVerticalScrollIndicator:];
}

id objc_msgSend_setSpokenNotificationsProxCardSeen(void *a1, const char *a2, ...)
{
  return _[a1 setSpokenNotificationsProxCardSeen];
}

id objc_msgSend_setState_animated_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setState:animated:completionHandler:];
}

id objc_msgSend_setStateName_(void *a1, const char *a2, ...)
{
  return [a1 setStateName:];
}

id objc_msgSend_setStatus_(void *a1, const char *a2, ...)
{
  return [a1 setStatus:];
}

id objc_msgSend_setStatusBarHidden_withDuration_(void *a1, const char *a2, ...)
{
  return [a1 setStatusBarHidden:withDuration:];
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return [a1 setStyle:];
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return [a1 setSubtitle:];
}

id objc_msgSend_setSubtitleFont_(void *a1, const char *a2, ...)
{
  return [a1 setSubtitleFont:];
}

id objc_msgSend_setSubtitleLabel_(void *a1, const char *a2, ...)
{
  return [a1 setSubtitleLabel:];
}

id objc_msgSend_setSubtitleText_(void *a1, const char *a2, ...)
{
  return [a1 setSubtitleText:];
}

id objc_msgSend_setSwipeDismissible_(void *a1, const char *a2, ...)
{
  return [a1 setSwipeDismissible:];
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return [a1 setText:];
}

id objc_msgSend_setTextChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setTextChangedHandler:];
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setTextColor:];
}

id objc_msgSend_setTextField_(void *a1, const char *a2, ...)
{
  return [a1 setTextField:];
}

id objc_msgSend_setTimeout_(void *a1, const char *a2, ...)
{
  return [a1 setTimeout:];
}

id objc_msgSend_setTimeoutHandler_(void *a1, const char *a2, ...)
{
  return [a1 setTimeoutHandler:];
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return [a1 setTimingFunction:];
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setTintColor:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:forState:];
}

id objc_msgSend_setTitleColor_(void *a1, const char *a2, ...)
{
  return [a1 setTitleColor:];
}

id objc_msgSend_setTitleFont_(void *a1, const char *a2, ...)
{
  return [a1 setTitleFont:];
}

id objc_msgSend_setTitleMessage_(void *a1, const char *a2, ...)
{
  return [a1 setTitleMessage:];
}

id objc_msgSend_setTitleText_(void *a1, const char *a2, ...)
{
  return [a1 setTitleText:];
}

id objc_msgSend_setTitleView_(void *a1, const char *a2, ...)
{
  return [a1 setTitleView:];
}

id objc_msgSend_setToolbarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarHidden:];
}

id objc_msgSend_setToolbarItems_animated_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarItems:animated:];
}

id objc_msgSend_setTouchIDAuthenticationAllowableReuseDuration_(void *a1, const char *a2, ...)
{
  return [a1 setTouchIDAuthenticationAllowableReuseDuration:];
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return [a1 setTransform:];
}

id objc_msgSend_setTransitioningDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setTransitioningDelegate:];
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setTranslatesAutoresizingMaskIntoConstraints:];
}

id objc_msgSend_setTransparency_(void *a1, const char *a2, ...)
{
  return [a1 setTransparency:];
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return [a1 setType:];
}

id objc_msgSend_setUnitsStyle_(void *a1, const char *a2, ...)
{
  return [a1 setUnitsStyle:];
}

id objc_msgSend_setUpActions(void *a1, const char *a2, ...)
{
  return _[a1 setUpActions];
}

id objc_msgSend_setUpSubtitle(void *a1, const char *a2, ...)
{
  return _[a1 setUpSubtitle];
}

id objc_msgSend_setUpTitle(void *a1, const char *a2, ...)
{
  return _[a1 setUpTitle];
}

id objc_msgSend_setUsage_(void *a1, const char *a2, ...)
{
  return [a1 setUsage:];
}

id objc_msgSend_setUserExplicitlyOptedIn_(void *a1, const char *a2, ...)
{
  return [a1 setUserExplicitlyOptedIn:];
}

id objc_msgSend_setUserExplicitlyOptedOut_(void *a1, const char *a2, ...)
{
  return [a1 setUserExplicitlyOptedOut:];
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return [a1 setUserInfo:];
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractionEnabled:];
}

id objc_msgSend_setUsesLegacyStyling_(void *a1, const char *a2, ...)
{
  return [a1 setUsesLegacyStyling:];
}

id objc_msgSend_setUsesSceneTimeBase_(void *a1, const char *a2, ...)
{
  return [a1 setUsesSceneTimeBase:];
}

id objc_msgSend_setValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forHTTPHeaderField:];
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKey:];
}

id objc_msgSend_setVertexFunctionName_(void *a1, const char *a2, ...)
{
  return [a1 setVertexFunctionName:];
}

id objc_msgSend_setVideoURL_sceneURL_(void *a1, const char *a2, ...)
{
  return [a1 setVideoURL:sceneURL:];
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllers:animated:];
}

id objc_msgSend_setViewModel_(void *a1, const char *a2, ...)
{
  return [a1 setViewModel:];
}

id objc_msgSend_setViewType_(void *a1, const char *a2, ...)
{
  return [a1 setViewType:];
}

id objc_msgSend_setWebViewURL_(void *a1, const char *a2, ...)
{
  return [a1 setWebViewURL];
}

id objc_msgSend_setWells_(void *a1, const char *a2, ...)
{
  return [a1 setWells:];
}

id objc_msgSend_setWritesToDepthBuffer_(void *a1, const char *a2, ...)
{
  return [a1 setWritesToDepthBuffer:];
}

id objc_msgSend_setXpcEndpoint_(void *a1, const char *a2, ...)
{
  return [a1 setXpcEndpoint:];
}

id objc_msgSend_setupAssistantStyle(void *a1, const char *a2, ...)
{
  return _[a1 setupAssistantStyle];
}

id objc_msgSend_shadowColor(void *a1, const char *a2, ...)
{
  return _[a1 shadowColor];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferences];
}

id objc_msgSend_shouldPromptForAnnounceCallsForProductID_supportsInEarDetection_isUpsellFlow_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForAnnounceCallsForProductID:supportsInEarDetection:isUpsellFlow:];
}

id objc_msgSend_shouldPromptForAnnounceMessagesForProductID_isUpsellFlow_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForAnnounceMessagesForProductID:isUpsellFlow:];
}

id objc_msgSend_shouldShowSpatialAudioSetUp(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowSpatialAudioSetUp];
}

id objc_msgSend_showActivityIndicatorWithStatus_(void *a1, const char *a2, ...)
{
  return [a1 showActivityIndicatorWithStatus:];
}

id objc_msgSend_showBackupSyncUI_info_(void *a1, const char *a2, ...)
{
  return [a1 showBackupSyncUI:info:];
}

id objc_msgSend_showConfirmationRing(void *a1, const char *a2, ...)
{
  return _[a1 showConfirmationRing];
}

id objc_msgSend_showDoneUI_(void *a1, const char *a2, ...)
{
  return [a1 showDoneUI:];
}

id objc_msgSend_showDoneUI_completed_(void *a1, const char *a2, ...)
{
  return [a1 showDoneUI:completed:];
}

id objc_msgSend_showDoneUI_error_(void *a1, const char *a2, ...)
{
  return [a1 showDoneUI:error:];
}

id objc_msgSend_showDoneUI_error_final_(void *a1, const char *a2, ...)
{
  return [a1 showDoneUI:error:final:];
}

id objc_msgSend_showFinishUI(void *a1, const char *a2, ...)
{
  return _[a1 showFinishUI];
}

id objc_msgSend_showHomePickerUI_defaultIndex_(void *a1, const char *a2, ...)
{
  return [a1 showHomePickerUI:defaultIndex:];
}

id objc_msgSend_showPairingUIWithFlags_throttleSeconds_(void *a1, const char *a2, ...)
{
  return [a1 showPairingUIWithFlags:throttleSeconds:];
}

id objc_msgSend_showPasswordPickerUI(void *a1, const char *a2, ...)
{
  return _[a1 showPasswordPickerUI];
}

id objc_msgSend_showPreparingUI(void *a1, const char *a2, ...)
{
  return _[a1 showPreparingUI];
}

id objc_msgSend_showProgressUI(void *a1, const char *a2, ...)
{
  return _[a1 showProgressUI];
}

id objc_msgSend_showRoomPickerUI_firstSuggestedIndex_(void *a1, const char *a2, ...)
{
  return [a1 showRoomPickerUI:firstSuggestedIndex:];
}

id objc_msgSend_showSpatialAudioTutorial(void *a1, const char *a2, ...)
{
  return _[a1 showSpatialAudioTutorial];
}

id objc_msgSend_showStartUI(void *a1, const char *a2, ...)
{
  return _[a1 showStartUI];
}

id objc_msgSend_showStatus_(void *a1, const char *a2, ...)
{
  return [a1 showStatus:];
}

id objc_msgSend_showTryAgainUI(void *a1, const char *a2, ...)
{
  return _[a1 showTryAgainUI];
}

id objc_msgSend_showWiFi(void *a1, const char *a2, ...)
{
  return _[a1 showWiFi];
}

id objc_msgSend_showWithFlags_throttleSeconds_(void *a1, const char *a2, ...)
{
  return [a1 showWithFlags:throttleSeconds:];
}

id objc_msgSend_siriControllerClass(void *a1, const char *a2, ...)
{
  return _[a1 siriControllerClass];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _[a1 startAnimating];
}

id objc_msgSend_startWithErrorHandler_(void *a1, const char *a2, ...)
{
  return [a1 startWithErrorHandler:];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _[a1 stopAnimating];
}

id objc_msgSend_storyboardWithName_bundle_(void *a1, const char *a2, ...)
{
  return [a1 storyboardWithName:nil bundle:nil];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingFormat:];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return [a1 stringByTrimmingCharactersInSet:];
}

id objc_msgSend_stringFromTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 stringFromTimeInterval:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return [a1 stringWithString:];
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 stringWithUTF8String:];
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return [a1 substringWithRange:];
}

id objc_msgSend_subtitleFont(void *a1, const char *a2, ...)
{
  return _[a1 subtitleFont];
}

id objc_msgSend_subtitleText(void *a1, const char *a2, ...)
{
  return _[a1 subtitleText];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_supportsAACPService(void *a1, const char *a2, ...)
{
  return _[a1 supportsAACPService];
}

id objc_msgSend_supportsMobileAsset(void *a1, const char *a2, ...)
{
  return _[a1 supportsMobileAsset];
}

id objc_msgSend_swipeDismissible(void *a1, const char *a2, ...)
{
  return _[a1 swipeDismissible];
}

id objc_msgSend_symbolCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 symbolCharacterSet];
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBackgroundColor];
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlueColor];
}

id objc_msgSend_systemExtraLightGrayColor(void *a1, const char *a2, ...)
{
  return _[a1 systemExtraLightGrayColor];
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 systemFontOfSize:];
}

id objc_msgSend_systemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return [a1 systemFontOfSize:];
}

id objc_msgSend_systemFontOfSize_weight_design_(void *a1, const char *a2, ...)
{
  return [a1 systemFontOfSize:weight:design:];
}

id objc_msgSend_systemGreenColor(void *a1, const char *a2, ...)
{
  return _[a1 systemGreenColor];
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:];
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:withConfiguration:];
}

id objc_msgSend_systemOrangeColor(void *a1, const char *a2, ...)
{
  return _[a1 systemOrangeColor];
}

id objc_msgSend_systemPurpleColor(void *a1, const char *a2, ...)
{
  return _[a1 systemPurpleColor];
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _[a1 systemRedColor];
}

id objc_msgSend_systemVersions(void *a1, const char *a2, ...)
{
  return _[a1 systemVersions];
}

id objc_msgSend_tagCount(void *a1, const char *a2, ...)
{
  return _[a1 tagCount];
}

id objc_msgSend_targetID(void *a1, const char *a2, ...)
{
  return _[a1 targetID];
}

id objc_msgSend_test(void *a1, const char *a2, ...)
{
  return _[a1 test];
}

id objc_msgSend_testFlags(void *a1, const char *a2, ...)
{
  return _[a1 testFlags];
}

id objc_msgSend_testMode(void *a1, const char *a2, ...)
{
  return _[a1 testMode];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textField(void *a1, const char *a2, ...)
{
  return _[a1 textField];
}

id objc_msgSend_textViewWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 textViewWithStyle:];
}

id objc_msgSend_texture2DDescriptorWithPixelFormat_width_height_mipmapped_(void *a1, const char *a2, ...)
{
  return [a1 texture2DDescriptorWithPixelFormat:width:height:mipmapped:];
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_titleColor(void *a1, const char *a2, ...)
{
  return _[a1 titleColor];
}

id objc_msgSend_titleFont(void *a1, const char *a2, ...)
{
  return _[a1 titleFont];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_titleText(void *a1, const char *a2, ...)
{
  return _[a1 titleText];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _[a1 topViewController];
}

id objc_msgSend_touchDelayActive(void *a1, const char *a2, ...)
{
  return _[a1 touchDelayActive];
}

id objc_msgSend_tracksWithMediaType_(void *a1, const char *a2, ...)
{
  return [a1 tracksWithMediaType:];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_traitCollectionWithHorizontalSizeClass_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionWithHorizontalSizeClass:];
}

id objc_msgSend_traitCollectionWithPreferredContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionWithPreferredContentSizeCategory:];
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 transitionCoordinator];
}

id objc_msgSend_transitionDuration_(void *a1, const char *a2, ...)
{
  return [a1 transitionDuration:];
}

id objc_msgSend_transitioningDelegate(void *a1, const char *a2, ...)
{
  return _[a1 transitioningDelegate];
}

id objc_msgSend_transparency(void *a1, const char *a2, ...)
{
  return _[a1 transparency];
}

id objc_msgSend_tryAgain(void *a1, const char *a2, ...)
{
  return _[a1 tryAgain];
}

id objc_msgSend_tryPIN_(void *a1, const char *a2, ...)
{
  return [a1 tryPIN:];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_uiActivatedWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 uiActivatedWithCompletion:];
}

id objc_msgSend_uiInvalidatedWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 uiInvalidatedWithCompletion:];
}

id objc_msgSend_uiOperationBegin(void *a1, const char *a2, ...)
{
  return _[a1 uiOperationBegin];
}

id objc_msgSend_uiOperationEnd(void *a1, const char *a2, ...)
{
  return _[a1 uiOperationEnd];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_updateAnnounceCallsStateForUserOptedIn(void *a1, const char *a2, ...)
{
  return _[a1 updateAnnounceCallsStateForUserOptedIn];
}

id objc_msgSend_updateAppName_image_(void *a1, const char *a2, ...)
{
  return [a1 updateAppName:image:];
}

id objc_msgSend_updateButtonText_(void *a1, const char *a2, ...)
{
  return [a1 updateButtonText:];
}

id objc_msgSend_updateProductID_(void *a1, const char *a2, ...)
{
  return [a1 updateProductID];
}

id objc_msgSend_updateRasterizationScale_(void *a1, const char *a2, ...)
{
  return [a1 updateRasterizationScale:];
}

id objc_msgSend_updateScrollViewTopInset(void *a1, const char *a2, ...)
{
  return _[a1 updateScrollViewTopInset];
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_urlRequest(void *a1, const char *a2, ...)
{
  return _[a1 urlRequest];
}

id objc_msgSend_user(void *a1, const char *a2, ...)
{
  return _[a1 user];
}

id objc_msgSend_userAgentHeader(void *a1, const char *a2, ...)
{
  return _[a1 userAgentHeader];
}

id objc_msgSend_userContext(void *a1, const char *a2, ...)
{
  return _[a1 userContext];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userInterfaceLayoutDirectionForSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return [a1 userInterfaceLayoutDirectionForSemanticContentAttribute:];
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _[a1 username];
}

id objc_msgSend_videoSizePoints(void *a1, const char *a2, ...)
{
  return _[a1 videoSizePoints];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewControllerForKey_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForKey:];
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_viewFetchContent(void *a1, const char *a2, ...)
{
  return _[a1 viewFetchContent];
}

id objc_msgSend_viewModel(void *a1, const char *a2, ...)
{
  return _[a1 viewModel];
}

id objc_msgSend_viewModelForModel_(void *a1, const char *a2, ...)
{
  return [a1 viewModelForModel:];
}

id objc_msgSend_viewPresentStartViewControllerIfReady(void *a1, const char *a2, ...)
{
  return _[a1 viewPresentStartViewControllerIfReady];
}

id objc_msgSend_viewType(void *a1, const char *a2, ...)
{
  return _[a1 viewType];
}

id objc_msgSend_viewUpdateAppInfo(void *a1, const char *a2, ...)
{
  return _[a1 viewUpdateAppInfo];
}

id objc_msgSend_visibleViewController(void *a1, const char *a2, ...)
{
  return _[a1 visibleViewController];
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 weakObjectsHashTable];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _[a1 widthAnchor];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return [a1 writeToURL:options:error:];
}

id objc_msgSend_xpcEndpoint(void *a1, const char *a2, ...)
{
  return _[a1 xpcEndpoint];
}