void sub_100005B7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100005C50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10000612C(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.Diagnostics.airpodsObservationQueue", 0);
  v2 = (void *)qword_1001868A8;
  qword_1001868A8 = (uint64_t)v1;

  uint64_t v3 = qword_1001868A8;

  +[BluetoothManager setSharedInstanceQueue:v3];
}

void sub_100006184(uint64_t a1)
{
  id v2 = +[BluetoothManager sharedInstance];
  [*(id *)(a1 + 32) setBtManager:v2];
}

void sub_10000627C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) btManager];
  if (!v2
    || (uint64_t v3 = (void *)v2,
        [*(id *)(a1 + 32) btManager],
        v4 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v5 = [v4 available],
        v4,
        v3,
        (v5 & 1) == 0))
  {
    v6 = [*(id *)(a1 + 32) btManagerAvailableSemaphore];
    dispatch_time_t v7 = dispatch_time(0, 3000000000);
    dispatch_semaphore_wait(v6, v7);
  }
  [*(id *)(a1 + 32) _ensureInitialDevicesFetched];
  [*(id *)(a1 + 32) _updateHandlers];
  uint64_t v8 = *(void *)(a1 + 40);
  id v9 = [*(id *)(a1 + 32) devices];
  (*(void (**)(uint64_t, id))(v8 + 16))(v8, v9);
}

id sub_10000644C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 48) copy];
  id v3 = objc_retainBlock(v2);
  v4 = [*(id *)(a1 + 32) handlers];
  [v4 setObject:v3 forKeyedSubscript:*(void *)(a1 + 40)];

  unsigned __int8 v5 = *(void **)(a1 + 32);

  return [v5 _beginObserving];
}

void sub_100006578(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) handlers];
  [v2 removeObjectForKey:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) handlers];
  id v4 = [v3 count];

  if (!v4)
  {
    unsigned __int8 v5 = *(void **)(a1 + 32);
    [v5 _endObserving];
  }
}

void sub_100006E04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10000700C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_1000076AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  objc_destroyWeak(v16);
  _Block_object_dispose(&a16, 8);
  objc_destroyWeak((id *)(v17 - 56));
  _Unwind_Resume(a1);
}

uint64_t sub_1000076DC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_1000076EC(uint64_t a1)
{
}

void sub_1000076F4(uint64_t a1, void *a2)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v3 = a2;
  id v4 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v13;
    while (2)
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void **)(*((void *)&v12 + 1) + 8 * i);
        id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
        v10 = [WeakRetained nanoDevice];
        unsigned int v11 = [v8 isEqual:v10];

        if (v11)
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v8);
          goto LABEL_11;
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
LABEL_11:

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1000079B0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 nanoDevice];
  id v5 = [v3 isEqual:v4];

  return v5;
}

id sub_100007BF8(id result, int a2)
{
  if (a2)
  {
    v2.receiver = (id)*((void *)result + 4);
    v2.super_class = (Class)DADeviceConnectionWatchProxy;
    return [super start];
  }
  return result;
}

id sub_100007C3C(uint64_t a1, void *a2)
{
  objc_super v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 nanoDevice];
  id v5 = [v3 isEqual:v4];

  return v5;
}

void sub_100007E4C(uint64_t a1)
{
  dispatch_queue_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained activeDeviceAssertion];
  [v3 invalidate];

  id v4 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = objc_loadWeakRetained(v1);
    uint64_t v6 = [v5 activeDeviceAssertion];
    dispatch_time_t v7 = [v6 device];
    int v8 = 138412290;
    id v9 = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Successfully invalidiated Active Device Assertion for Device: %@", (uint8_t *)&v8, 0xCu);
  }
}

void sub_1000080E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100008114(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  [WeakRetained setActiveDeviceAssertion:v6];

  int v8 = dispatch_queue_create("com.apple.Diagnostics.quickSwitchQueue", 0);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100008220;
  v12[3] = &unk_10014B218;
  uint64_t v9 = *(void *)(a1 + 32);
  v10 = *(void **)(a1 + 40);
  id v13 = v5;
  uint64_t v14 = v9;
  id v15 = v10;
  id v16 = *(id *)(a1 + 48);
  id v11 = v5;
  dispatch_async(v8, v12);
}

uint64_t sub_100008220(uint64_t a1)
{
  objc_super v2 = (id *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = DiagnosticLogHandleForCategory();
  id v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1001012C4(a1, v2, v5);
    }

    id v6 = [*(id *)(a1 + 40) state];
    [v6 setPhase:0];

    dispatch_time_t v7 = [*(id *)(a1 + 40) state];
    [v7 addErrorCode:6 userInfo:0];

    int v8 = [*(id *)(a1 + 40) state];
    [v8 removeErrorCode:6];

    +[DSAnalytics sendAnalyticsWithEvent:7 error:*(void *)(a1 + 32)];
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v9 = *(void *)(a1 + 48);
      int v11 = 138412290;
      uint64_t v12 = v9;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Successfully switched to Watch: %@", (uint8_t *)&v11, 0xCu);
    }
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_100008780(uint64_t a1)
{
  if (NSClassFromString(@"DADeviceLocal"))
  {
    uint64_t v2 = objc_opt_new();
  }
  else
  {
    uint64_t v3 = (void *)MGCopyAnswer();
    dispatch_time_t v7 = [[DADeviceRepresentation alloc] initWithSerialNumber:v3 isLocal:1 attributes:&__NSDictionary0__struct];

    uint64_t v2 = (uint64_t)v7;
  }
  id v8 = (id)v2;
  id v4 = +[DADeviceDecoratorWithUI decorateWithDevice:v2];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = +[NSSet setWithObject:v4];
  (*(void (**)(uint64_t, void *))(v5 + 16))(v5, v6);
}

void sub_1000089E8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _fetchDevices];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

id sub_100008B38(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 48) copy];
  id v3 = objc_retainBlock(v2);
  id v4 = [*(id *)(a1 + 32) handlers];
  [v4 setObject:v3 forKeyedSubscript:*(void *)(a1 + 40)];

  uint64_t v5 = *(void **)(a1 + 32);

  return [v5 _beginObserving];
}

void sub_100008C64(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) handlers];
  [v2 removeObjectForKey:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) handlers];
  id v4 = [v3 count];

  if (!v4)
  {
    uint64_t v5 = *(void **)(a1 + 32);
    [v5 _endObserving];
  }
}

void sub_100009128(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) devices];
  id v12 = [v2 copy];

  id v3 = [*(id *)(a1 + 32) _fetchDevices];
  id v4 = [*(id *)(a1 + 32) devices];
  id v5 = [v4 mutableCopy];

  [v5 minusSet:v3];
  id v6 = [v3 mutableCopy];
  dispatch_time_t v7 = [*(id *)(a1 + 32) devices];
  [v6 minusSet:v7];

  id v8 = [*(id *)(a1 + 32) devices];
  [v8 minusSet:v5];

  uint64_t v9 = [*(id *)(a1 + 32) devices];
  [v9 unionSet:v6];

  v10 = [*(id *)(a1 + 32) devices];
  unsigned __int8 v11 = [v12 isEqual:v10];

  if ((v11 & 1) == 0) {
    [*(id *)(a1 + 32) _updateHandlers];
  }
}

void sub_100009678(id a1)
{
  qword_1001868B0 = +[NSSet setWithObjects:@"Accessory.SmartBatteryCase", 0];

  _objc_release_x1();
}

void sub_10000992C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100009A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100009B84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100009D14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10000A974(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10000AC54(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v14 = a2;
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  if (!v11)
  {
    id v12 = [*(id *)(a1 + 32) state];
    [v12 setSuiteID:v14];

    id v13 = [*(id *)(a1 + 32) state];
    [v13 setDiagnosticEventID:v9];
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10000B198(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  dispatch_time_t v7 = [*(id *)(a1 + 32) progressForTest];
  [v7 removeObjectForKey:*(void *)(a1 + 40)];

  id v8 = +[NSDate date];
  [v8 timeIntervalSinceDate:*(void *)(a1 + 56)];
  [*(id *)(a1 + 48) setTestDuration:];
  if (v5)
  {
    id v9 = [v5 statusCode];
    [*(id *)(a1 + 48) setStatusCode:v9];

    id v10 = [v5 data];
    [*(id *)(a1 + 48) setData:v10];

    id v11 = [v5 files];

    if (v11)
    {
      v30 = v8;
      id v31 = v6;
      id v12 = [v5 fileSandboxTokens];
      uint64_t v13 = +[DKSandboxExtension consumeSandboxExtensionsWithTokens:v12];

      id v14 = [*(id *)(a1 + 32) sandboxExtensionHandles];
      v29 = (void *)v13;
      [v14 setObject:v13 forKey:*(void *)(a1 + 40)];

      id v15 = [v5 files];
      id v11 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v15 count]);

      long long v34 = 0u;
      long long v35 = 0u;
      long long v32 = 0u;
      long long v33 = 0u;
      id v16 = [v5 files];
      id v17 = [v16 countByEnumeratingWithState:&v32 objects:v36 count:16];
      if (v17)
      {
        id v18 = v17;
        uint64_t v19 = *(void *)v33;
        do
        {
          v20 = 0;
          do
          {
            if (*(void *)v33 != v19) {
              objc_enumerationMutation(v16);
            }
            uint64_t v21 = *(void *)(*((void *)&v32 + 1) + 8 * (void)v20);
            v22 = objc_opt_new();
            [v22 setFileURL:v21];
            [v11 addObject:v22];

            v20 = (char *)v20 + 1;
          }
          while (v18 != v20);
          id v18 = [v16 countByEnumeratingWithState:&v32 objects:v36 count:16];
        }
        while (v18);
      }

      id v8 = v30;
      id v6 = v31;
    }
    v23 = [v5 uploadStatus];

    if (v23)
    {
      v24 = *(void **)(a1 + 48);
      v25 = [v5 uploadStatus];
      [v24 setUploadStatusFromSource:@"DiagnosticsApp" withArray:v25];
    }
    [*(id *)(a1 + 48) setFiles:v11];
  }
  else if (v6)
  {
    switch((unint64_t)[v6 code])
    {
      case 0xFFFFFFFFFFFFFC11:
        v26 = *(void **)(a1 + 48);
        v27 = &off_100156A00;
        goto LABEL_21;
      case 0xFFFFFFFFFFFFFC12:
        v26 = *(void **)(a1 + 48);
        v27 = &off_1001569E8;
        goto LABEL_21;
      case 0xFFFFFFFFFFFFFC13:
        v26 = *(void **)(a1 + 48);
        v27 = &off_1001569D0;
        goto LABEL_21;
      case 0xFFFFFFFFFFFFFC15:
        v26 = *(void **)(a1 + 48);
        v27 = &off_1001569B8;
        goto LABEL_21;
      case 0xFFFFFFFFFFFFFC18:
        v26 = *(void **)(a1 + 48);
        v27 = &off_100156A18;
LABEL_21:
        [v26 setStatusCode:v27];
        break;
      default:
        break;
    }
  }
  v28 = [*(id *)(a1 + 32) session];
  [v28 sendTestResult:*(void *)(a1 + 48) error:0];
}

void sub_10000B6B4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = (id *)(a1 + 32);
  if (*(void *)(a1 + 32) && ([*(id *)(a1 + 40) isDisconnecting] & 1) == 0)
  {
    id v11 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_100101464();
    }

    id v12 = [*v4 code];
    uint64_t v13 = 4;
    if (v12 == (id)-1001) {
      uint64_t v13 = 1;
    }
    BOOL v14 = v12 != (id)-1000 && v12 != (id)-1001;
    if (v12 == (id)-1000) {
      uint64_t v15 = 0;
    }
    else {
      uint64_t v15 = v13;
    }
    [v3 setPhase:v14];
    id v9 = [*v4 userInfo];
    [v3 addErrorCode:v15 userInfo:v9];
  }
  else
  {
    [v3 setErrors:&__NSArray0__struct];
    [v3 setPhase:1];
    id v6 = *(void **)(a1 + 48);
    id v5 = (void *)(a1 + 48);
    unint64_t v7 = (unint64_t)[v6 sessionEndReason];
    uint64_t v8 = v7;
    if (v7 > 4)
    {
      id v9 = DiagnosticLogHandleForCategory();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        sub_1001013E8(v5, v8, v9);
      }
    }
    else
    {
      id v9 = off_10014B2A8[v7];
      id v10 = DiagnosticLogHandleForCategory();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_100101378();
      }
    }
  }
}

void sub_10000B994(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setSuiteName:v3];
  [v4 setSuiteDescription:*(void *)(a1 + 40)];
}

void sub_10000BEB0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = [*(id *)(a1 + 32) state];
  uint64_t v8 = [v7 suiteID];
  if (!v8) {
    goto LABEL_4;
  }
  id v9 = (void *)v8;
  id v10 = [*(id *)(a1 + 32) delegate];
  char v11 = objc_opt_respondsToSelector();

  if (v11)
  {
    unint64_t v7 = [*(id *)(a1 + 32) delegate];
    id v12 = *(void **)(a1 + 32);
    uint64_t v13 = [v12 state];
    BOOL v14 = [v13 suiteID];
    [v7 deviceConnection:v12 didFinishTestSuite:v14 withEntry:v5 error:v6];

LABEL_4:
  }
  uint64_t v15 = [*(id *)(a1 + 32) state];
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_10000C028;
  v17[3] = &unk_10014B3A0;
  id v18 = v5;
  id v16 = v5;
  [v15 transactionWithBlock:v17];
}

void sub_10000C028(uint64_t a1, void *a2)
{
  id v5 = a2;
  if (*(void *)(a1 + 32))
  {
    uint64_t v3 = [v5 history];
    id v4 = [v3 arrayByAddingObject:*(void *)(a1 + 32)];
    [v5 setHistory:v4];
  }
  [v5 setSuiteID:0];
  [v5 setSuiteName:0];
  [v5 setDiagnosticEventID:0];
}

void sub_10000C0CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unint64_t v7 = v6;
  if (!v5 || v6)
  {
    id v10 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
      sub_1001014D8((uint64_t)v7, v10, v11, v12, v13, v14, v15, v16);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 40);
    id v9 = [[DAHistoryEntry alloc] initWithTestSuiteName:*(void *)(a1 + 32) skipped:*(unsigned __int8 *)(a1 + 48) results:v5];
    (*(void (**)(uint64_t, DAHistoryEntry *, void))(v8 + 16))(v8, v9, 0);
  }
}

uint64_t sub_10000C784(void *a1, uint64_t a2)
{
  uint64_t v3 = (void *)a1[4];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10000C81C;
  v5[3] = &unk_10014B418;
  v5[4] = a1[5];
  v5[5] = a2;
  [v3 enumerateObjectsUsingBlock:v5];
  return (*(uint64_t (**)(void))(a1[6] + 16))();
}

void sub_10000C81C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v8 = a2;
  if ([v8 endpoint] == *(id *)(a1 + 40))
  {
    id v6 = [v8 suites];
    unint64_t v7 = [*(id *)(a1 + 32) state];
    [v7 setSuitesAvailable:v6];

    *a4 = 1;
  }
}

id sub_10000CC3C(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) sendProfileResult:a2 error:0];
}

void sub_10000D734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v11 = a6;
  if (a3)
  {
    uint64_t v12 = +[ASTAuthInfoResult authInfoResultWithAttestation:a2 certificate:a3 type:a4 error:a5];
    uint64_t v13 = *(void **)(a1 + 32);
    id v25 = v11;
    unsigned __int8 v14 = [v13 sendAuthInfoResult:v12 error:&v25];
    id v15 = v25;

    if ((v14 & 1) == 0)
    {
      uint64_t v16 = DiagnosticLogHandleForCategory();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
        sub_1001015B4(v15, v16);
      }
    }
  }
  else
  {
    id v17 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
      sub_100101544(v17, v18, v19, v20, v21, v22, v23, v24);
    }

    [*(id *)(a1 + 32) sendAuthInfoResult:0 error:0];
    id v15 = v11;
  }
}

void sub_10000E8D8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10000E900(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void sub_10000E920(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10000EA84(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

id sub_10000EA98(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_10000EAC4(uint64_t a1)
{
}

void sub_10000EACC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    uint64_t v4 = DiagnosticLogHandleForCategory();
    BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
    if (v3)
    {
      if (v5)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Checking for Enhanced Logging Session response", buf, 2u);
      }

      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_10000EC40;
      v8[3] = &unk_10014B4B8;
      uint64_t v6 = *(void *)(a1 + 32);
      v8[4] = WeakRetained;
      v8[5] = v6;
      [WeakRetained checkEnhancedLoggingStateWithReply:v8];
      xpc_transaction_exit_clean();
    }
    else
    {
      if (v5)
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "No reply completion is present in dispatch block for checkAvailabilityWithReply", buf, 2u);
      }
    }
  }
  else
  {
    unint64_t v7 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Lost reference to self when entering dispatch block for checkAvailabilityWithReply", buf, 2u);
    }
  }
}

void sub_10000EC40(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = DiagnosticLogHandleForCategory();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      int v8 = 138412290;
      id v9 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Sending ELSResponse %@ in reply to checkAvailabilityWithReply", (uint8_t *)&v8, 0xCu);
    }

    (*(void (**)(void))(*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) + 16))();
  }
  else
  {
    if (v5)
    {
      LOWORD(v8) = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "No ELS response. Getting session ID", (uint8_t *)&v8, 2u);
    }

    uint64_t v6 = [*(id *)(a1 + 32) getSessionID];
    unint64_t v7 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 138412290;
      id v9 = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Session ID is %@, sending in reply to checkAvailabilityWithReply", (uint8_t *)&v8, 0xCu);
    }

    (*(void (**)(void))(*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) + 16))();
  }
}

uint64_t sub_10000EEA4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10000EFB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) serialNumbers];
  id v3 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v2 count]);
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v4 = v2;
  id v5 = [v4 countByEnumeratingWithState:&v18 objects:v24 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v19;
    do
    {
      int v8 = 0;
      do
      {
        if (*(void *)v19 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = +[ASTIdentity identityWithSerialNumber:*(void *)(*((void *)&v18 + 1) + 8 * (void)v8)];
        [v3 addObject:v9];

        int v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v18 objects:v24 count:16];
    }
    while (v6);
  }

  id v10 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    uint64_t v23 = v3;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Checking for sessions with identities %@", buf, 0xCu);
  }

  double v11 = *(double *)(a1 + 56);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_10000F1F8;
  v14[3] = &unk_10014B530;
  id v15 = v4;
  uint64_t v12 = *(void *)(a1 + 40);
  id v16 = *(id *)(a1 + 48);
  char v17 = *(unsigned char *)(a1 + 64);
  id v13 = v4;
  +[ASTSession sessionExistsForIdentities:v3 ticketNumber:v12 timeout:v14 completion:v11];
}

void sub_10000F1F8(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  if ((a2 & 1) == 0)
  {
    uint64_t v7 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1001017A8(a1, (uint64_t)v6, v7);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  int v8 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = *(unsigned __int8 *)(a1 + 48);
    v10[0] = 67109120;
    v10[1] = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Complete with check for session... exitWhenDone: %d", (uint8_t *)v10, 8u);
  }

  if (*(unsigned char *)(a1 + 48)) {
    xpc_transaction_exit_clean();
  }
}

void sub_10000F710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_10000F744(uint64_t a1, int a2)
{
  id v4 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v6[0] = 67109120;
    v6[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "checkAvailabilityWithTicketNumber finished. Success: %d", (uint8_t *)v6, 8u);
  }

  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10000F850(id a1)
{
  byte_1001868C0 = os_variant_has_internal_content();
}

uint64_t sub_10000F924(uint64_t a1, void *a2)
{
  [a2 status];
  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v3();
}

void sub_10000FC40(uint64_t a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000FCD8;
  v4[3] = &unk_10014B5F0;
  id v5 = *(id *)(a1 + 32);
  [a2 enumerateObjectsUsingBlock:v4];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10000FCD8(uint64_t a1, void *a2)
{
  id v12 = a2;
  uint64_t v3 = [v12 state];
  if (v3)
  {
    id v4 = (void *)v3;
    id v5 = [v12 state];
    uint64_t v6 = [v5 serialNumber];
    if (v6)
    {
      uint64_t v7 = (void *)v6;
      int v8 = [v12 state];
      int v9 = [v8 serialNumber];
      objc_opt_class();
      char isKindOfClass = objc_opt_isKindOfClass();

      if ((isKindOfClass & 1) == 0) {
        goto LABEL_6;
      }
      double v11 = *(void **)(a1 + 32);
      id v4 = [v12 state];
      id v5 = [v4 serialNumber];
      [v11 addObject:v5];
    }
  }
LABEL_6:
}

void sub_100010044(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) connection];
  [v1 end];
}

void sub_100010F8C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) clock];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) clock];
    [v3 invalidate];
  }
}

void sub_100011004(uint64_t a1)
{
  id v2 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) session];
    int v8 = 138412290;
    int v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Successfully flushed defaults, ending bug session %@...", (uint8_t *)&v8, 0xCu);
  }
  id v4 = [*(id *)(a1 + 32) session];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 32) session];
    [v5 cancel];

    [*(id *)(a1 + 32) setSession:0];
    uint64_t v6 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = [*(id *)(a1 + 32) session];
      int v8 = 138412290;
      int v9 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Cancelled session %@.", (uint8_t *)&v8, 0xCu);
    }
  }
}

void sub_10001154C(id a1, DADeviceState *a2)
{
}

void sub_100011640(id a1, DADeviceState *a2)
{
}

void sub_100011774(id a1, DADeviceState *a2)
{
  id v2 = a2;
  [(DADeviceState *)v2 setPhase:8];
  id v4 = +[ELSManager sharedManager];
  id v3 = [v4 snapshot];
  [v3 durationRemaining];
  -[DADeviceState setDurationRemaining:](v2, "setDurationRemaining:");
}

void sub_1000117F0(uint64_t a1)
{
  id v2 = +[NSTimer scheduledTimerWithTimeInterval:*(void *)(a1 + 32) target:"heartbeat" selector:0 userInfo:0 repeats:30.0];
  [*(id *)(a1 + 32) setClock:v2];
}

id sub_1000119BC(uint64_t a1, void *a2)
{
  return [a2 setDurationRemaining:*(double *)(a1 + 32)];
}

void sub_1000119C8(uint64_t a1)
{
  id v2 = +[NSTimer scheduledTimerWithTimeInterval:*(void *)(a1 + 32) target:"heartbeat" selector:0 userInfo:0 repeats:30.0];
  [*(id *)(a1 + 32) setClock:v2];
}

void sub_100011B24(id a1, DADeviceState *a2)
{
}

void sub_100011C64(id a1, DADeviceState *a2)
{
  uint64_t v6 = a2;
  [(DADeviceState *)v6 setPhase:10];
  id v2 = [(DADeviceState *)v6 progress];

  if (!v2)
  {
    id v3 = +[ELSManager sharedManager];
    id v4 = [v3 snapshot];
    id v5 = [v4 uploadCompletedPercentage];
    [(DADeviceState *)v6 setProgress:v5];
  }
}

void sub_100011DE8(id a1, DADeviceState *a2)
{
}

void sub_100011F50(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) state];
  [v1 transactionWithBlock:&stru_10014B8E8];
}

void sub_100011F9C(id a1, DADeviceState *a2)
{
}

void sub_1000120C0(uint64_t a1, void *a2)
{
  [a2 setStatus:8];
  id v3 = [*(id *)(a1 + 32) state];
  [v3 transactionWithBlock:&stru_10014B908];
}

void sub_100012124(id a1, DADeviceState *a2)
{
}

void sub_100012248(uint64_t a1, void *a2, int a3, void *a4, void *a5, uint64_t a6, void *a7)
{
  id v12 = a2;
  id v13 = a4;
  id v14 = a5;
  id v15 = a7;
  id v16 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v50 = v12;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "Bug Session Connected = %@", buf, 0xCu);
  }

  char v17 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v50 = v13;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "Bug Session Collected = %@", buf, 0xCu);
  }

  long long v18 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v50 = v14;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Bug Session Ongoing   = %@", buf, 0xCu);
  }

  [*(id *)(a1 + 32) setSession:v12];
  long long v19 = *(void **)(a1 + 32);
  long long v20 = [v19 session];
  [v20 setUploadDelegate:v19];

  v47[0] = _NSConcreteStackBlock;
  v47[1] = 3221225472;
  v47[2] = sub_100012784;
  v47[3] = &unk_10014B930;
  v47[4] = *(void *)(a1 + 32);
  id v21 = v14;
  id v48 = v21;
  uint64_t v22 = objc_retainBlock(v47);
  uint64_t v23 = +[ELSManager sharedManager];
  uint64_t v24 = [v23 snapshot];
  id v25 = [v24 endDate];

  if (v12 && ((v25 != 0) & ~a3) == 0)
  {
    v26 = +[ELSManager sharedManager];
    v27 = [v26 snapshot];
    ((void (*)(void *, void *))v22[2])(v22, v27);

LABEL_31:
    goto LABEL_32;
  }
  if (v12)
  {
    id v45 = v15;
    v28 = +[ELSManager sharedManager];
    v29 = [v28 snapshot];
    uint64_t v30 = (uint64_t)[v29 status];

    id v31 = +[ELSManager sharedManager];
    long long v32 = [v31 snapshot];
    unint64_t v33 = (unint64_t)[v32 consent];

    id v34 = [v21 count];
    if (v33 && v34)
    {
      uint64_t v30 = 3;
    }
    else if (v33 != 1 || v34)
    {
      if (v34) {
        BOOL v35 = 0;
      }
      else {
        BOOL v35 = (v33 & 0xFFFFFFFFFFFFFFFELL) == 2;
      }
      if (v35) {
        uint64_t v30 = 5;
      }
    }
    else
    {
      uint64_t v30 = 4;
    }
    v36 = +[ELSManager sharedManager];
    v37 = [v36 snapshot];
    id v38 = [v37 status];

    if ((id)v30 == v38)
    {
      v26 = +[ELSManager sharedManager];
      v39 = [v26 snapshot];
      ((void (*)(void *, void *))v22[2])(v22, v39);
    }
    else
    {
      v40 = DiagnosticLogHandleForCategory();
      if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
      {
        v44 = +[ELSManager sharedManager];
        v43 = [v44 snapshot];
        v41 = +[ELSSnapshot statusToString:](ELSSnapshot, "statusToString:", [v43 status]);
        v42 = +[ELSSnapshot statusToString:v30];
        *(_DWORD *)buf = 138412546;
        id v50 = v41;
        __int16 v51 = 2112;
        v52 = v42;
        _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_DEFAULT, "Auto advancing enhanced logging state status from [%@] -> [%@]...", buf, 0x16u);
      }
      v26 = +[ELSManager sharedManager];
      v46[0] = _NSConcreteStackBlock;
      v46[1] = 3221225472;
      v46[2] = sub_1000127D8;
      v46[3] = &unk_10014B950;
      v46[4] = v30;
      [v26 transactionWithBlock:v46 completion:v22];
    }
    id v15 = v45;
    goto LABEL_31;
  }
  if (v15)
  {
    v26 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
      sub_100101A08((uint64_t)v15, v26);
    }
    goto LABEL_31;
  }
LABEL_32:
}

id sub_100012784(uint64_t a1, void *a2)
{
  id result = [a2 status];
  if (result == (id)3)
  {
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    return [v4 unpackQueueWithOngoingExtensions:v5 retry:0];
  }
  return result;
}

id sub_1000127D8(uint64_t a1, void *a2)
{
  return [a2 setStatus:*(void *)(a1 + 32)];
}

void sub_100013000(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 138412290;
    id v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "DiagnosticExtension has completed with attachment group: %@", (uint8_t *)&v5, 0xCu);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_1000130C4(id a1)
{
  id v1 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "All diagnostic extensions completed!", buf, 2u);
  }

  id v2 = +[ELSManager sharedManager];
  id v3 = [v2 snapshot];
  uint64_t v4 = (uint64_t)[v3 status];

  if ((unint64_t)(v4 - 1) <= 4)
  {
    int v5 = +[ELSManager sharedManager];
    id v6 = [v5 snapshot];
    uint64_t v7 = (char *)[v6 consent];

    if ((unint64_t)(v7 - 2) < 2)
    {
      uint64_t v4 = 5;
    }
    else if (v7 == (char *)1)
    {
      uint64_t v4 = 4;
    }
    else if (!v7)
    {
      +[DSAnalytics sendAnalyticsWithEvent:18];
    }
    int v8 = +[ELSManager sharedManager];
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100013244;
    v9[3] = &unk_10014B950;
    v9[4] = v4;
    [v8 transactionWithBlock:v9];
  }
}

id sub_100013244(uint64_t a1, void *a2)
{
  return [a2 setStatus:*(void *)(a1 + 32)];
}

void sub_100013250(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[NSDate date];
  int v5 = [v3 startDate];

  if (!v5) {
    [v3 setStartDate:v4];
  }
  [v3 totalDuration];
  id v6 = [v4 dateByAddingTimeInterval:];
  [v3 setEndDate:v6];

  uint64_t v7 = [*(id *)(a1 + 32) state];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_100013368;
  v9[3] = &unk_10014B3A0;
  id v10 = v3;
  id v8 = v3;
  [v7 transactionWithBlock:v9];
}

void sub_100013368(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  [v2 durationRemaining];
  [v3 setDurationRemaining:];
}

id sub_1000133BC(uint64_t a1, void *a2)
{
  return _[a2 setIdentifiersToRetry:*(void *)(a1 + 32)];
}

void sub_1000134B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  int v5 = +[ELSManager sharedManager];
  id v6 = [v5 snapshot];
  uint64_t v7 = [v6 identifiersToRetry];

  id v8 = dispatch_group_create();
  queue = dispatch_queue_create("com.apple.Diagnostics.retryLocalPersistentDeviceQueue", 0);
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v9 = v4;
  id v10 = [v9 countByEnumeratingWithState:&v28 objects:v34 count:16];
  if (v10)
  {
    id v12 = v10;
    uint64_t v13 = *(void *)v29;
    *(void *)&long long v11 = 138412290;
    long long v22 = v11;
    do
    {
      for (i = 0; i != v12; i = (char *)i + 1)
      {
        if (*(void *)v29 != v13) {
          objc_enumerationMutation(v9);
        }
        id v15 = *(void **)(*((void *)&v28 + 1) + 8 * i);
        id v16 = [v15 stringValue:v22];
        unsigned int v17 = [v7 containsObject:v16];

        if (v17)
        {
          long long v18 = DiagnosticLogHandleForCategory();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            long long v19 = [v15 stringValue];
            *(_DWORD *)buf = v22;
            unint64_t v33 = v19;
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Begin cancelling extension (becuase retry): %@", buf, 0xCu);
          }
          dispatch_group_enter(v8);
          long long v20 = [*(id *)(a1 + 32) session];
          [v20 cancelDiagnosticExtensionWithDEDExtensionIdentifier:v15];

          dispatch_time_t v21 = dispatch_time(0, 2000000000);
          block[0] = _NSConcreteStackBlock;
          block[1] = 3221225472;
          block[2] = sub_1000137C4;
          block[3] = &unk_10014B150;
          block[4] = v15;
          v27 = v8;
          dispatch_after(v21, queue, block);
        }
      }
      id v12 = [v9 countByEnumeratingWithState:&v28 objects:v34 count:16];
    }
    while (v12);
  }

  v25[0] = _NSConcreteStackBlock;
  v25[1] = 3221225472;
  v25[2] = sub_100013890;
  v25[3] = &unk_10014B0D8;
  v25[4] = *(void *)(a1 + 32);
  dispatch_group_notify(v8, queue, v25);
}

void sub_1000137C4(uint64_t a1)
{
  id v2 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) stringValue];
    int v4 = 138412290;
    int v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Finished cancelling extension (becuase retry): %@", (uint8_t *)&v4, 0xCu);
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

id sub_100013890(uint64_t a1)
{
  id v2 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "All cancelled (becuase retry), moving to unpack", v4, 2u);
  }

  return [*(id *)(a1 + 32) unpackQueueWithOngoingExtensions:0 retry:1];
}

void sub_1000139E0(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7)
{
  id v12 = a2;
  id v13 = a4;
  id v14 = a5;
  id v15 = a6;
  id v16 = a7;
  unsigned int v17 = v16;
  if (v12)
  {
    [*(id *)(a1 + 32) setSession:v12];
    if (*(unsigned char *)(a1 + 40))
    {
      long long v18 = [*(id *)(a1 + 32) session];
      [v18 commit];
LABEL_7:
    }
  }
  else if (v16)
  {
    long long v18 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
      sub_100101A08((uint64_t)v17, v18);
    }
    goto LABEL_7;
  }
}

void sub_100013E04(uint64_t a1, char a2)
{
  int v4 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = +[ELSManager sharedManager];
    id v6 = [v5 snapshot];
    uint64_t v7 = [v6 dedSessionIdentifier];
    LODWORD(buf) = 138412290;
    *(void *)((char *)&buf + 4) = v7;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Successfully retrieved %@ bug session activity, starting DEDManager...", (uint8_t *)&buf, 0xCu);
  }
  id v8 = +[DEDManager sharedInstance];
  [v8 start];

  id v9 = objc_opt_new();
  id v10 = +[DEDCapability allCapabilities];
  [v9 requestCapabilitiesSet:v10];

  long long v11 = +[ELSEnvironment sharedInstance];
  id v12 = [v11 cloudKitContainerIdentifier];

  [v9 setFinishingMove:3];
  id v13 = [v12 containerIdentifier];
  [v9 setCloudkitContainer:v13];

  id v14 = +[ELSManager sharedManager];
  id v15 = [v14 snapshot];
  id v16 = [v15 metadata];
  [v9 setCloudkitData:v16];

  unsigned int v17 = +[ELSManager sharedManager];
  long long v18 = [v17 snapshot];
  objc_msgSend(v9, "setAllowsCellularUpload:", objc_msgSend(v18, "consent") == (id)3);

  long long v19 = +[ELSManager sharedManager];
  long long v20 = [v19 snapshot];
  LODWORD(v16) = [v20 status] == (id)5;

  if (v16) {
    [v9 setFinishingMove:0];
  }
  [v9 setCloudkitUseDevelopmentEnvironment:[v12 environment] == 2];
  [v9 setNotifyingMove:2];
  dispatch_time_t v21 = [*(id *)(a1 + 32) notifierConfiguration];
  [v9 setNotifierConfiguration:v21];

  uint64_t v47 = 0;
  id v48 = &v47;
  uint64_t v49 = 0x2020000000;
  char v50 = a2 ^ 1;
  if (a2)
  {
    long long v22 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v23 = +[ELSManager sharedManager];
      uint64_t v24 = [v23 snapshot];
      id v25 = [v24 dedSessionIdentifier];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v25;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Re-connecting to existing %@ bug session...", (uint8_t *)&buf, 0xCu);
    }
  }
  else
  {
    long long v22 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
    {
      v26 = +[ELSManager sharedManager];
      v27 = [v26 snapshot];
      long long v28 = [v27 dedSessionIdentifier];
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v28;
      _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "Creating new %@ bug session...", (uint8_t *)&buf, 0xCu);
    }
  }

  long long v29 = +[DEDManager sharedInstance];
  long long v30 = +[ELSManager sharedManager];
  *(void *)&long long buf = 0;
  *((void *)&buf + 1) = &buf;
  uint64_t v52 = 0x3032000000;
  v53 = sub_100014458;
  v54 = sub_100014468;
  id v55 = +[DEDDevice currentDevice];
  long long v31 = [v30 snapshot];
  long long v32 = [v31 targetDevices];

  if (v32)
  {
    unint64_t v33 = [v30 snapshot];
    id v34 = [v33 targetDevices];
    BOOL v35 = [v34 firstObject];

    if (!v35)
    {
      BOOL v35 = +[DEDDevice currentDevice];
    }
    [v29 start];
    objc_initWeak(&location, *(id *)(a1 + 32));
    v37[0] = _NSConcreteStackBlock;
    v37[1] = 3221225472;
    v37[2] = sub_100014470;
    v37[3] = &unk_10014BA38;
    objc_copyWeak(&v45, &location);
    id v36 = v35;
    id v38 = v36;
    id v39 = v30;
    p_long long buf = &buf;
    id v40 = v9;
    v44 = &v47;
    id v42 = *(id *)(a1 + 40);
    id v41 = v29;
    [v41 discoverDevicesWithCompletion:v37];

    objc_destroyWeak(&v45);
    objc_destroyWeak(&location);
  }
  else
  {
    [*(id *)(a1 + 32) startDEDSessionForDevice:*(void *)(*((void *)&buf + 1) + 40) withConfig:v9 withNewSession:*((unsigned __int8 *)v48 + 24) completionHandler:*(void *)(a1 + 40)];
  }
  _Block_object_dispose(&buf, 8);

  _Block_object_dispose(&v47, 8);
}

void sub_1000143F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t sub_100014458(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100014468(uint64_t a1)
{
}

void sub_100014470(uint64_t a1, void *a2)
{
  id v3 = a2;
  int v4 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)long long buf = 134218242;
    id v32 = [v3 count];
    __int16 v33 = 2112;
    id v34 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "DED discovered %lu devices: %@", buf, 0x16u);
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v25;
    uint64_t v23 = (id *)(a1 + 40);
    do
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(void *)v25 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v24 + 1) + 8 * i);
        long long v11 = [v10 identifier];
        id v12 = [*(id *)(a1 + 32) identifier];
        if ([v11 isEqualToString:v12])
        {
          id v13 = [v10 status];

          if (v13 != (id)1) {
            continue;
          }
          long long v11 = [v10 bugSessions];
          id v14 = [*v23 snapshot];
          id v15 = [v14 status];

          id v16 = [*v23 snapshot];
          unsigned int v17 = [v16 dedSessionIdentifier];
          if ([v11 containsObject:v17])
          {
          }
          else
          {

            if ((unint64_t)v15 >= 4)
            {
              dispatch_time_t v21 = DiagnosticLogHandleForCategory();
              if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
                sub_100101B08(v28, v23, &v29, v21);
              }

              [WeakRetained uploadFinished];
              goto LABEL_20;
            }
          }
          long long v18 = DiagnosticLogHandleForCategory();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            long long v19 = [*v23 snapshot];
            long long v20 = [v19 dedSessionIdentifier];
            *(_DWORD *)long long buf = 138412546;
            id v32 = v20;
            __int16 v33 = 2112;
            id v34 = v10;
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "Found bug session %@ on device %@", buf, 0x16u);
          }
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 72) + 8) + 40), v10);
          [WeakRetained startDEDSessionForDevice:*(void *)(*(void *)(*(void *)(a1 + 72) + 8) + 40) withConfig:*(void *)(a1 + 48) withNewSession:*(unsigned __int8 *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) completionHandler:*(void *)(a1 + 64)];
        }
        else
        {
        }
LABEL_20:
      }
      id v7 = [v5 countByEnumeratingWithState:&v24 objects:v30 count:16];
    }
    while (v7);
  }

  [*(id *)(a1 + 56) stopDiscovery];
}

void sub_10001493C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = DiagnosticLogHandleForCategory();
  uint64_t v8 = v7;
  if (!v5 || v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_100101B98(a1, (uint64_t)v6, v8);
    }

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    +[DSAnalytics sendAnalyticsWithEvent:17 error:v6];
  }
  else
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = [*(id *)(a1 + 32) snapshot];
      id v10 = [v9 dedSessionIdentifier];
      *(_DWORD *)long long buf = 138412290;
      long long v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Successfully connected to %@ bug session, synchronizing...", buf, 0xCu);
    }
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_100014B44;
    v12[3] = &unk_10014BA88;
    id v13 = *(id *)(a1 + 32);
    id v14 = v5;
    id v11 = *(id *)(a1 + 40);
    char v17 = *(unsigned char *)(a1 + 48);
    id v15 = 0;
    id v16 = v11;
    [v14 synchronizeSessionStatusWithCompletion:v12];
  }
}

void sub_100014B44(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    id v11 = [*(id *)(a1 + 32) snapshot];
    id v12 = [v11 dedSessionIdentifier];
    int v18 = 138412290;
    long long v19 = v12;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Successfully synchronized with %@ bug session.", (uint8_t *)&v18, 0xCu);
  }
  id v13 = [*(id *)(a1 + 32) snapshot];
  id v14 = [v13 consentData];

  if (v14)
  {
    id v15 = *(void **)(a1 + 40);
    id v16 = [*(id *)(a1 + 32) snapshot];
    char v17 = [v16 consentData];
    [v15 addData:v17 withFilename:@"consent.pdf"];
  }
  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_100014D84(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(float *)&double v4 = (float)((float)*(unint64_t *)(a1 + 32) / (float)*(uint64_t *)(a1 + 40)) * 100.0;
  id v5 = +[NSNumber numberWithFloat:v4];
  [v3 setProgress:v5];

  id v6 = +[ELSManager sharedManager];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100014E74;
  v8[3] = &unk_10014B7C8;
  id v9 = v3;
  id v7 = v3;
  [v6 transactionWithBlock:v8];
}

void sub_100014E74(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 progress];
  [v3 setUploadCompletedPercentage:v4];
}

id sub_100014FD4(void *a1)
{
  id v1 = a1;
  id v2 = +[ASTLocalization localizedStringForKey:v1];
  id v3 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG)) {
    sub_100101C5C((uint64_t)v1, (uint64_t)v2, v3);
  }

  if (!v2 || [v2 isEqualToString:v1])
  {
    id v4 = +[NSBundle mainBundle];
    uint64_t v5 = [v4 localizedStringForKey:v1 value:&stru_1001548A0 table:0];

    id v2 = (id)v5;
    if (!v5) {
      id v2 = v1;
    }
  }

  return v2;
}

id sub_1000150C0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = a1;
  id v11 = a2;
  id v12 = sub_100014FD4(v10);
  id v13 = v10;
  id v14 = v13;
  if (v12)
  {
    id v14 = v13;
    if (([v12 isEqualToString:v13] & 1) == 0)
    {
      v18[1] = &a9;
      id v15 = objc_alloc((Class)NSString);
      id v16 = +[NSLocale currentLocale];
      v18[0] = 0;
      id v14 = [v15 initWithValidatedFormat:v12 validFormatSpecifiers:v11 locale:v16 arguments:&a9 error:v18];
    }
  }
  if (!v14) {
    id v14 = v13;
  }

  return v14;
}

void sub_100015214(id a1)
{
  qword_1001868D0 = objc_alloc_init(DANvramUtil);

  _objc_release_x1();
}

void sub_100015E68(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  id v3 = [v2 connectedScenes];

  long long v12 = 0u;
  long long v13 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v4 = v3;
  id v5 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v11;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v11 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v10 + 1) + 8 * (void)v8);
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          [v9 _setSystemVolumeHUDEnabled:*(unsigned __int8 *)(a1 + 32)];
        }
        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v6);
  }
}

void sub_100016048(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    BKSDisplayBrightnessGetCurrent();
    float v3 = v2;
    float v4 = *(float *)(a1 + 32);
    if (v3 >= v4)
    {
      if (v3 > v4)
      {
        float v8 = 0.0002;
        do
        {
          dispatch_time_t v9 = dispatch_time(0, (uint64_t)(float)(v8 * 1000000000.0));
          long long v10 = dispatch_get_global_queue(-2, 0);
          v13[0] = _NSConcreteStackBlock;
          v13[1] = 3221225472;
          v13[2] = sub_100016308;
          v13[3] = &unk_10014BB30;
          float v14 = v3;
          dispatch_after(v9, v10, v13);

          float v8 = v8 + 0.0002;
          float v3 = v3 + -0.01;
        }
        while (v3 > *(float *)(a1 + 32));
      }
    }
    else
    {
      float v5 = 0.0002;
      do
      {
        dispatch_time_t v6 = dispatch_time(0, (uint64_t)(float)(v5 * 1000000000.0));
        uint64_t v7 = dispatch_get_global_queue(-2, 0);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_100016284;
        block[3] = &unk_10014BB30;
        float v16 = v3;
        dispatch_after(v6, v7, block);

        float v5 = v5 + 0.0002;
        float v3 = v3 + 0.01;
      }
      while (v3 < *(float *)(a1 + 32));
    }
  }
  else
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10001638C;
    v11[3] = &unk_10014BB30;
    int v12 = *(_DWORD *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);
  }
}

void sub_100016284(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000162FC;
  block[3] = &unk_10014BB30;
  int v2 = *(_DWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1000162FC()
{
  return BKSDisplayBrightnessSet();
}

void sub_100016308(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100016380;
  block[3] = &unk_10014BB30;
  int v2 = *(_DWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_100016380()
{
  return BKSDisplayBrightnessSet();
}

uint64_t sub_10001638C()
{
  return BKSDisplayBrightnessSet();
}

void sub_1000163EC(id a1)
{
  qword_1001868E0 = objc_alloc_init(DADeviceImageViewManager);

  _objc_release_x1();
}

void sub_100016530(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  int v2 = [*(id *)(a1 + 32) attributes];
  float v3 = [v2 objectForKeyedSubscript:@"deviceClass"];
  float v4 = +[NSString stringWithFormat:@"%@", v3];

  float v5 = [*(id *)(a1 + 32) attributes];
  dispatch_time_t v6 = [v5 objectForKeyedSubscript:@"deviceType"];
  uint64_t v7 = +[NSString stringWithFormat:@"%@", v6];

  float v8 = +[UIScreen mainScreen];
  [v8 scale];
  double v10 = v9;

  long long v11 = [*(id *)(a1 + 32) attributes];
  int v12 = [v11 objectForKeyedSubscript:@"deviceEnclosureColor"];
  uint64_t v13 = +[NSNull null];
  if (v12 == (void *)v13)
  {

    char v17 = 0;
    goto LABEL_5;
  }
  float v14 = (void *)v13;
  id v15 = [*(id *)(a1 + 32) attributes];
  float v16 = [v15 objectForKeyedSubscript:@"deviceEnclosureColor"];

  if (v16)
  {
    long long v11 = [*(id *)(a1 + 32) attributes];
    int v12 = [v11 objectForKeyedSubscript:@"deviceEnclosureColor"];
    char v17 = +[NSString stringWithFormat:@"%@", v12];
LABEL_5:

    goto LABEL_7;
  }
  char v17 = 0;
LABEL_7:
  int v18 = [*(id *)(a1 + 32) attributes];
  long long v19 = [v18 objectForKeyedSubscript:@"deviceColor"];
  uint64_t v20 = +[NSNull null];
  if (v19 == (void *)v20)
  {

    long long v25 = 0;
    goto LABEL_11;
  }
  dispatch_time_t v21 = (void *)v20;
  long long v22 = [*(id *)(a1 + 32) attributes];
  uint64_t v23 = [v22 objectForKeyedSubscript:@"deviceColor"];

  if (v23)
  {
    int v18 = [*(id *)(a1 + 32) attributes];
    long long v19 = [v18 objectForKeyedSubscript:@"deviceColor"];
    long long v25 = +[NSString stringWithFormat:@"%@", v19];
LABEL_11:

    goto LABEL_13;
  }
  long long v25 = 0;
LABEL_13:
  float v26 = v10;
  *(float *)&double v24 = v26;
  long long v27 = [WeakRetained imageURLForDeviceClass:v4 deviceModel:v7 deviceColor:v25 deviceEnclosureColor:v17 scale:v24];
  *(float *)&double v28 = v26;
  uint64_t v29 = [WeakRetained imageURLForDeviceClass:v4 deviceModel:v7 deviceColor:0 deviceEnclosureColor:0 scale:v28];
  [WeakRetained downloadAndSetImageForURL:v27 fallbackUrl:v29 withDeviceState:*(void *)(a1 + 32) andCompletionHandler:*(void *)(a1 + 40)];
}

void sub_100016B2C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100016B4C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100016B5C(uint64_t a1)
{
}

id sub_100016B64(void *a1, uint64_t a2)
{
  uint64_t v3 = +[UIImage imageWithData:a2];
  uint64_t v4 = *(void *)(a1[7] + 8);
  float v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  uint64_t v6 = a1[6];
  uint64_t v7 = *(void *)(*(void *)(a1[7] + 8) + 40);
  float v8 = (void *)a1[4];
  uint64_t v9 = a1[5];

  return [v8 setDeviceImage:v7 forDeviceState:v9 withCompletion:v6];
}

void sub_100016BCC(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v16 = a2;
  id v7 = a3;
  id v8 = a4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0
    && [v7 statusCode] == (id)200
    && (+[UIImage imageWithData:v16],
        uint64_t v9 = objc_claimAutoreleasedReturnValue(),
        v9,
        v9))
  {
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
  }
  else
  {
    double v10 = +[NSMutableURLRequest requestWithURL:*(void *)(a1 + 32)];
    [v10 setHTTPMethod:@"GET"];
    uint64_t v11 = [*(id *)(a1 + 40) getImageFromCacheWithRequest:v10];
    uint64_t v12 = *(void *)(*(void *)(a1 + 80) + 8);
    uint64_t v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;

    uint64_t v14 = *(void *)(*(void *)(*(void *)(a1 + 80) + 8) + 40);
    if (v14) {
      [*(id *)(a1 + 40) setDeviceImage:v14 forDeviceState:*(void *)(a1 + 48) withCompletion:*(void *)(a1 + 72)];
    }
    id v15 = [*(id *)(a1 + 56) dataTaskWithRequest:v10 completionHandler:*(void *)(a1 + 64)];
    [v15 resume];
  }
}

void sub_100016F40(uint64_t a1)
{
  if (!*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40))
  {
    uint64_t v2 = +[UIImage imageNamed:@"DeviceImagePlaceholder"];
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = v2;
  }
  id v5 = objc_alloc((Class)UIImageView);
  uint64_t v6 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) scaledImageToHeight:70.0];
  id v8 = [v5 initWithImage:v6];

  [v8 setContentMode:4];
  id v7 = +[UIColor clearColor];
  [v8 setBackgroundColor:v7];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100017528(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_100101CE4();
  }

  +[DSAnalytics sendAnalyticsWithEvent:5 error:v2];
}

void sub_100017674(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_100101D64();
  }

  +[DSAnalytics sendAnalyticsWithEvent:5 error:v2];
}

void sub_100017814(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) receiver];
  [v2 receiveMessage:*(void *)(a1 + 40) data:*(void *)(a1 + 48) fromDestination:*(void *)(a1 + 56) expectsResponse:*(unsigned __int8 *)(a1 + 72) response:*(void *)(a1 + 64)];
}

void sub_100017B2C(id a1)
{
  id v1 = +[NSError errorWithDomain:@"com.apple.iosdiagnosticsd" code:0 userInfo:0];
  +[DSAnalytics sendAnalyticsWithEvent:3 error:v1];
}

void sub_100017BA0(id a1)
{
  id v1 = +[NSError errorWithDomain:@"com.apple.iosdiagnosticsd" code:0 userInfo:0];
  +[DSAnalytics sendAnalyticsWithEvent:4 error:v1];
}

void sub_100017C68(id a1)
{
  uint64_t v13 = objc_opt_class();
  uint64_t v12 = objc_opt_class();
  uint64_t v11 = objc_opt_class();
  uint64_t v1 = objc_opt_class();
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  uint64_t v8 = objc_opt_class();
  uint64_t v9 = objc_opt_class();
  uint64_t v10 = objc_opt_class();
  qword_1001868F0 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v13, v12, v11, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, objc_opt_class(), 0);

  _objc_release_x1();
}

void sub_100018524(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) diagnosticsManager];
  [v2 cancelAllDiagnostics];

  uint64_t v3 = [*(id *)(a1 + 32) reportManager];
  [v3 cancelAllReports];

  id v4 = [*(id *)(a1 + 32) connection];
  [v4 end];
}

void sub_100018DCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
}

void sub_100018E0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    id v4 = +[NSMutableArray array];
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v22 = v3;
    id v5 = v3;
    id v6 = [v5 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v24;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v24 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = *(void **)(*((void *)&v23 + 1) + 8 * i);
          uint64_t v11 = [v10 identifier];
          uint64_t v12 = [v10 version];
          uint64_t v13 = +[ASTTestAttributes attributesWithTestId:v11 version:v12];
          [v4 addObject:v13];
        }
        id v7 = [v5 countByEnumeratingWithState:&v23 objects:v27 count:16];
      }
      while (v7);
    }

    uint64_t v14 = [*(id *)(a1 + 32) profile];
    [v14 setTests:v4];

    id v3 = v22;
  }
  else
  {
    id v4 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100101E1C(v4, v15, v16, v17, v18, v19, v20, v21);
    }
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100018FE8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v17 = 138412546;
    id v18 = v6;
    __int16 v19 = 2112;
    id v20 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Error: %@, Report: %@", (uint8_t *)&v17, 0x16u);
  }

  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    if (v5)
    {
      uint64_t v8 = [v5 arrayForJSON];
      uint64_t v9 = [*(id *)(a1 + 32) profile];
      [v9 setProperties:v8];
    }
    else
    {
      uint64_t v8 = [*(id *)(a1 + 32) profile];
      [v8 setProperties:&__NSArray0__struct];
    }
  }
  else
  {
    uint64_t v8 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_100101E54(v8, v10, v11, v12, v13, v14, v15, v16);
    }
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100019510(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    id v4 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100101E8C(a1, v4);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100019F8C(id a1)
{
  id v3 = objc_alloc_init((Class)NSMutableArray);
  [v3 addObjectsFromArray:&off_100157518];
  [v3 addObjectsFromArray:&off_100157530];
  id v1 = [objc_alloc((Class)DKDiagnosticAllowList) initWithIdentifiers:v3 contactMessage:@"Please reach out to Embedded Field Diagnostics for onboarding with new DiagnosticsKit extensions."];
  uint64_t v2 = (void *)qword_100186900;
  qword_100186900 = (uint64_t)v1;
}

void sub_10001ABD8(uint64_t a1)
{
  byte_100186910 = 0;
  id v4 = [*(id *)(a1 + 32) traitCollection];
  if (objc_opt_respondsToSelector())
  {
    uint64_t v2 = [*(id *)(a1 + 32) traitCollection];
    id v3 = [v2 forceTouchCapability];

    if (v3 == (id)2) {
      byte_100186910 = 1;
    }
  }
  else
  {
  }
}

void sub_10001BCB4(id a1)
{
  id v1 = objc_alloc_init((Class)MIBUClient);
  id v9 = 0;
  unsigned int v2 = [v1 isInBoxUpdateMode:&v9];
  id v3 = v9;
  id v4 = v3;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 0;
  }
  if (v5)
  {
    id v7 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "In-box update mode is active.", v8, 2u);
    }

    byte_100186920 = 1;
  }
  else if (v3)
  {
    id v6 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_100101F08(v4, v6);
    }
  }
}

void sub_10001C2B0(id a1)
{
  qword_100186930 = objc_alloc_init(DAUserInterruptAlertFactory);

  _objc_release_x1();
}

void sub_10001C62C(id a1)
{
  qword_100186940 = objc_alloc_init(DARemoteRunnerManager);

  _objc_release_x1();
}

void sub_10001CC38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, char a19)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001CC84(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10001CC94(uint64_t a1)
{
}

void sub_10001CC9C(uint64_t a1, void *a2)
{
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
  BOOL v5 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained(v5);

  if (WeakRetained)
  {
    id v7 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = objc_loadWeakRetained(v5);
      int v9 = 138412546;
      id v10 = v8;
      __int16 v11 = 2112;
      id v12 = v4;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Connection %@ broke with error %@", (uint8_t *)&v9, 0x16u);
    }
  }
}

void sub_10001D3EC(uint64_t a1, void *a2)
{
  uint64_t v18 = a1;
  id v2 = a2;
  id v3 = objc_alloc_init((Class)NSMutableArray);
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v4 = [v2 tests];
  id v5 = [v4 countByEnumeratingWithState:&v20 objects:v28 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v21;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v21 != v7) {
          objc_enumerationMutation(v4);
        }
        int v9 = *(void **)(*((void *)&v20 + 1) + 8 * i);
        v26[0] = @"version";
        id v10 = [v9 version:v18];
        v26[1] = @"testId";
        v27[0] = v10;
        __int16 v11 = [v9 testId];
        v27[1] = v11;
        id v12 = +[NSDictionary dictionaryWithObjects:v27 forKeys:v26 count:2];
        [v3 addObject:v12];
      }
      id v6 = [v4 countByEnumeratingWithState:&v20 objects:v28 count:16];
    }
    while (v6);
  }

  uint64_t v13 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "System report has finished. Sending to remote runner controlling process", buf, 2u);
  }

  uint64_t v14 = *(void *)(v18 + 32);
  v24[0] = @"properties";
  uint64_t v15 = [v2 properties];
  v24[1] = @"tests";
  v25[0] = v15;
  id v16 = [v3 copy];
  v25[1] = v16;
  int v17 = +[NSDictionary dictionaryWithObjects:v25 forKeys:v24 count:2];
  (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v17);
}

void sub_10001D990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001D9B4(uint64_t a1, void *a2, void *a3)
{
  id v9 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));

  if (WeakRetained)
  {
    id v7 = objc_loadWeakRetained((id *)(a1 + 40));
    id v8 = [v7 state];
    [v8 transactionWithBlock:&stru_10014BE78];
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10001DA6C(id a1, DADeviceState *a2)
{
  id v7 = a2;
  id v2 = [(DADeviceState *)v7 history];
  id v3 = [DAHistoryEntry alloc];
  id v4 = [(DADeviceState *)v7 suiteName];
  id v5 = [(DAHistoryEntry *)v3 initWithTestSuiteName:v4 skipped:0];
  id v6 = [v2 arrayByAddingObject:v5];
  [(DADeviceState *)v7 setHistory:v6];

  [(DADeviceState *)v7 setSuiteName:0];
}

void sub_10001DB30(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = a2;
  [v4 setSuiteName:v3];
  [v4 setSuiteDescription:*(void *)(a1 + 40)];
}

void sub_10001E380(uint64_t a1, char a2, void *a3, void *a4, void *a5)
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = v11;
  if (!v9 || (a2 & 1) != 0)
  {
    if (v11)
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        [*(id *)(a1 + 32) _updateState:v12];
      }
    }
  }
  else
  {
    uint64_t v13 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      int v14 = 138412546;
      uint64_t v15 = v12;
      __int16 v16 = 2112;
      id v17 = v9;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Failed to recieve message on connect for device state with response: %@. Error: %@", (uint8_t *)&v14, 0x16u);
    }
  }
}

void sub_10001E528(uint64_t a1, char a2, void *a3)
{
  if (a3 && (a2 & 1) == 0)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = a3;
    id v6 = [v4 state];
    [v6 setPhase:0];

    id v7 = [*(id *)(a1 + 32) state];
    [v7 addErrorCode:[v5 code] userInfo:0];

    id v9 = [*(id *)(a1 + 32) state];
    id v8 = [v5 code];

    [v9 removeErrorCode:v8];
  }
}

void sub_10001E674(uint64_t a1, char a2, void *a3)
{
  if (a3 && (a2 & 1) == 0)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = a3;
    id v6 = [v4 state];
    [v6 setPhase:1];

    id v7 = [*(id *)(a1 + 32) state];
    [v7 addErrorCode:[v5 code] userInfo:0];

    id v9 = [*(id *)(a1 + 32) state];
    id v8 = [v5 code];

    [v9 removeErrorCode:v8];
  }
}

void sub_10001E7E8(uint64_t a1, char a2, void *a3)
{
  if (a3 && (a2 & 1) == 0)
  {
    id v4 = *(void **)(a1 + 32);
    id v5 = a3;
    id v6 = [v4 state];
    [v6 setPhase:1];

    id v7 = [*(id *)(a1 + 32) state];
    [v7 addErrorCode:[v5 code] userInfo:0];

    id v9 = [*(id *)(a1 + 32) state];
    id v8 = [v5 code];

    [v9 removeErrorCode:v8];
  }
}

void sub_10001E934(uint64_t a1, char a2, void *a3, void *a4, void *a5)
{
  id v13 = a3;
  id v9 = a5;
  if (!v13 || (a2 & 1) != 0)
  {
    if ([a4 isEqualToString:@"messageReceived"])
    {
      objc_opt_class();
      if (objc_opt_isKindOfClass()) {
        [*(id *)(a1 + 32) _updateState:v9];
      }
    }
  }
  else
  {
    id v10 = [*(id *)(a1 + 32) state];
    [v10 setPhase:1];

    id v11 = [*(id *)(a1 + 32) state];
    [v11 addErrorCode:[v13 code] userInfo:0];

    id v12 = [*(id *)(a1 + 32) state];
    [v12 removeErrorCode:[v13 code]];
  }
}

void sub_10001EF24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10001EF4C(uint64_t a1, uint64_t a2)
{
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_10001EF78(uint64_t a1)
{
}

void sub_10001EF80(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  if (([*(id *)(a1 + 32) isCommunicationAvailable] & 1) != 0 || *(unsigned char *)(a1 + 64))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    if (v3) {
      [*v2 _resetDeviceStatePingTimer];
    }
    dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
    id v5 = +[NSDate date];
    v28[0] = _NSConcreteStackBlock;
    v28[1] = 3221225472;
    v28[2] = sub_10001F2EC;
    v28[3] = &unk_10014BF18;
    id v6 = *(void **)(a1 + 40);
    uint8_t v28[4] = *(void *)(a1 + 32);
    id v7 = v6;
    uint64_t v8 = *(void *)(a1 + 56);
    id v29 = v7;
    uint64_t v32 = v8;
    id v9 = v5;
    id v30 = v9;
    id v10 = v4;
    long long v31 = v10;
    id v11 = objc_retainBlock(v28);
    id v12 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = *(void *)(a1 + 40);
      int v14 = [*(id *)(a1 + 32) destination];
      *(_DWORD *)long long buf = 138412546;
      uint64_t v34 = v13;
      __int16 v35 = 2112;
      id v36 = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Sending message: %@ to destination: %@", buf, 0x16u);
    }
    BOOL v15 = v3 != 0;

    __int16 v16 = [*(id *)(a1 + 32) messenger];
    uint64_t v17 = *(void *)(a1 + 40);
    uint64_t v18 = [*(id *)(a1 + 32) destination];
    [v16 sendMessage:v17 data:0 toDestination:v18 forceLocalDelivery:0 expectsResponse:v15 response:v11];

    dispatch_time_t v19 = dispatch_time(0, 30000000000);
    if (dispatch_semaphore_wait(v10, v19) >= 1)
    {
      long long v20 = [*(id *)(a1 + 32) messageReceivingQueue];
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472;
      void v24[2] = sub_10001F7A8;
      v24[3] = &unk_10014BF40;
      id v21 = *(id *)(a1 + 40);
      uint64_t v22 = *(void *)(a1 + 32);
      id v25 = v21;
      uint64_t v26 = v22;
      uint64_t v27 = *(void *)(a1 + 56);
      dispatch_sync(v20, v24);
    }
  }
  else
  {
    long long v23 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
      sub_10010200C(v2);
    }

    (*(void (**)(void))(*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) + 16))();
    id v10 = +[NSError errorWithDomain:@"com.apple.Diagnostics.DADeviceConnectionIDSProxy" code:6 userInfo:0];
    +[DSAnalytics sendAnalyticsWithEvent:7 error:v10];
  }
}

void sub_10001F2EC(uint64_t a1, char a2, void *a3, void *a4, void *a5)
{
  id v9 = a3;
  id v10 = a4;
  id v11 = a5;
  id v12 = [*(id *)(a1 + 32) messageReceivingQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10001F43C;
  block[3] = &unk_10014BEF0;
  id v19 = v10;
  id v20 = v11;
  char v27 = a2;
  id v21 = v9;
  id v13 = *(id *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 32);
  id v22 = v13;
  uint64_t v23 = v14;
  uint64_t v26 = *(void *)(a1 + 64);
  id v24 = *(id *)(a1 + 48);
  id v25 = *(id *)(a1 + 56);
  id v15 = v9;
  id v16 = v11;
  id v17 = v10;
  dispatch_async(v12, block);
}

void sub_10001F43C(uint64_t a1)
{
  id v2 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = *(unsigned __int8 *)(a1 + 96);
    uint64_t v6 = *(void *)(a1 + 48);
    *(_DWORD *)long long buf = 138413058;
    uint64_t v42 = v3;
    __int16 v43 = 2112;
    uint64_t v44 = v4;
    __int16 v45 = 1024;
    int v46 = v5;
    __int16 v47 = 2112;
    uint64_t v48 = v6;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Received response message: %@; data: %@; success: %d; error: %@;",
      buf,
      0x26u);
  }

  if (*(unsigned char *)(a1 + 96))
  {
    unsigned int v7 = [*(id *)(a1 + 32) isEqual:@"deviceIsLocked"];
    if (v7)
    {
      uint64_t v8 = DiagnosticLogHandleForCategory();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_100102228(a1, v8, v9, v10, v11, v12, v13, v14);
      }

      id v15 = +[NSError errorWithDomain:@"com.apple.Diagnostics.DADeviceConnectionIDSProxy" code:5 userInfo:0];
    }
    else
    {
      id v15 = 0;
    }
    if ([*(id *)(a1 + 32) isEqual:@"destinationMismatch"])
    {
      id v24 = DiagnosticLogHandleForCategory();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_1001021B8(a1, v24, v25, v26, v27, v28, v29, v30);
      }

      uint64_t v31 = +[NSError errorWithDomain:@"com.apple.Diagnostics.DADeviceConnectionIDSProxy" code:8 userInfo:0];

      uint64_t v23 = 0;
      id v15 = (void *)v31;
    }
    else
    {
      uint64_t v23 = v7 ^ 1;
    }
  }
  else
  {
    id v16 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_100102148(a1, v16, v17, v18, v19, v20, v21, v22);
    }

    id v15 = +[NSError errorWithDomain:@"com.apple.Diagnostics.DADeviceConnectionIDSProxy" code:6 userInfo:0];
    [*(id *)(a1 + 64) _endDeviceStatePingTimer];
    uint64_t v23 = 0;
  }
  uint64_t v32 = *(void *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
  if (v32)
  {
    (*(void (**)(uint64_t, uint64_t, void *, void, void))(v32 + 16))(v32, v23, v15, *(void *)(a1 + 32), *(void *)(a1 + 40));
    uint64_t v33 = *(void *)(*(void *)(a1 + 88) + 8);
    uint64_t v34 = *(NSObject **)(v33 + 40);
    *(void *)(v33 + 40) = 0;
  }
  else
  {
    uint64_t v34 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR)) {
      sub_1001020B4(a1);
    }
  }

  if (v15) {
    +[DSAnalytics sendAnalyticsWithEvent:7 error:v15];
  }
  __int16 v35 = +[NSDate date];
  [v35 timeIntervalSinceDate:*(void *)(a1 + 72)];
  v37 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", v36 * 1000.0, kDSAnalyticsIDSDurationKey);
  id v40 = v37;
  id v38 = +[NSDictionary dictionaryWithObjects:&v40 forKeys:&v39 count:1];
  +[DSAnalytics sendAnalyticsWithEvent:6 payloadDict:v38];

  [*(id *)(a1 + 64) setCommunicationAvailable:1];
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 80));
}

void sub_10001F7A8(uint64_t a1)
{
  id v2 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_100102328(a1);
  }

  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    uint64_t v3 = +[NSError errorWithDomain:@"com.apple.Diagnostics.DADeviceConnectionIDSProxy" code:6 userInfo:0];
    (*(void (**)(void))(*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) + 16))();
    uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
    int v5 = *(void **)(v4 + 40);
    *(void *)(v4 + 40) = 0;

    +[DSAnalytics sendAnalyticsWithEvent:7 error:v3];
    [*(id *)(a1 + 40) setCommunicationAvailable:0];
  }
  else
  {
    uint64_t v3 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
      sub_100102298(a1);
    }
  }
}

void sub_10001F9C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10001FA50(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10001FAF4;
  v3[3] = &unk_10014BF90;
  v3[4] = *(void *)(a1 + 32);
  id v2 = +[NSTimer scheduledTimerWithTimeInterval:0 repeats:v3 block:30.0];
  [*(id *)(a1 + 32) setDeviceStatePingTimer:v2];
}

id sub_10001FAF4(uint64_t a1)
{
  id v2 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = [*(id *)(a1 + 32) destination];
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Sending ping message to device: %@", (uint8_t *)&v5, 0xCu);
  }
  return [*(id *)(a1 + 32) _ping];
}

void sub_10001FC34(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) deviceStatePingTimer];
  unsigned int v3 = [v2 isValid];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 32) deviceStatePingTimer];
    [v4 invalidate];

    int v5 = *(void **)(a1 + 32);
    [v5 setDeviceStatePingTimer:0];
  }
}

void sub_10001FE54(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void sub_1000202AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100020370(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100020518(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"_nanoRegistryDevicePaired:" name:NRPairedDeviceRegistryDeviceDidPairNotification object:0];

  id v3 = +[NSNotificationCenter defaultCenter];
  [v3 addObserver:*(void *)(a1 + 32) selector:"_nanoRegistryDeviceUnpaired:" name:NRPairedDeviceRegistryDeviceDidUnpairNotification object:0];
}

id sub_1000205C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateDevicesWithSerialNumber:0];
}

void sub_100020684(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) userInfo];
  id v3 = [v2 objectForKeyedSubscript:NRPairedDeviceRegistryDevice];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 40) _createDeviceWithNanoDevice:v3];
    if (v4)
    {
      int v5 = DiagnosticLogHandleForCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = [v4 state];
        unsigned int v7 = [v6 serialNumber];
        int v9 = 138412290;
        uint64_t v10 = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[%@] Nano device connected", (uint8_t *)&v9, 0xCu);
      }
      uint64_t v8 = [*(id *)(a1 + 40) devices];
      [v8 addObject:v4];

      [*(id *)(a1 + 40) _updateHandlers];
    }
  }
}

void sub_100020888(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) userInfo];
  id v3 = [v2 objectForKeyedSubscript:NRPairedDeviceRegistryDevice];

  if (v3)
  {
    uint64_t v4 = [*(id *)(a1 + 40) _createDeviceWithNanoDevice:v3];
    if (v4)
    {
      int v5 = DiagnosticLogHandleForCategory();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v6 = [v4 state];
        unsigned int v7 = [v6 serialNumber];
        int v9 = 138412290;
        uint64_t v10 = v7;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "[%@] Nano device disconnected", (uint8_t *)&v9, 0xCu);
      }
      uint64_t v8 = [*(id *)(a1 + 40) devices];
      [v8 removeObject:v4];

      [*(id *)(a1 + 40) _updateHandlers];
    }
  }
}

void sub_100020B54(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 removeObserver:*(void *)(a1 + 32)];
}

void sub_100020C34(uint64_t a1)
{
  id v2 = +[NRPairedDeviceRegistry sharedInstance];
  id v3 = [v2 getPairedDevices];

  uint64_t v4 = +[NRPairedDeviceRegistry sharedInstance];
  int v5 = +[NRPairedDeviceRegistry pairedDevicesSelectorBlock];
  uint64_t v6 = [v4 getAllDevicesWithArchivedAltAccountDevicesMatching:v5];

  if ([v6 count])
  {
    uint64_t v7 = [v3 arrayByAddingObjectsFromArray:v6];

    id v3 = (void *)v7;
  }
  uint64_t v25 = v6;
  uint64_t v8 = [*(id *)(a1 + 32) devices];
  int v9 = +[NSMutableSet setWithCapacity:](NSMutableSet, "setWithCapacity:", [v8 count]);

  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v10 = v3;
  id v11 = [v10 countByEnumeratingWithState:&v26 objects:v32 count:16];
  if (v11)
  {
    id v12 = v11;
    uint64_t v13 = *(void *)v27;
    do
    {
      for (i = 0; i != v12; i = (char *)i + 1)
      {
        if (*(void *)v27 != v13) {
          objc_enumerationMutation(v10);
        }
        id v15 = [*(id *)(a1 + 32) _createDeviceWithNanoDevice:*(void *)(*((void *)&v26 + 1) + 8 * i)];
        id v16 = DiagnosticLogHandleForCategory();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
        {
          uint64_t v17 = [v15 state];
          uint64_t v18 = [v17 serialNumber];
          *(_DWORD *)long long buf = 138412290;
          uint64_t v31 = v18;
          _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "[%@] Nano device connected", buf, 0xCu);
        }
        [v9 addObject:v15];
      }
      id v12 = [v10 countByEnumeratingWithState:&v26 objects:v32 count:16];
    }
    while (v12);
  }

  uint64_t v19 = [*(id *)(a1 + 32) devices];
  id v20 = [v19 mutableCopy];

  [v20 minusSet:v9];
  id v21 = [v9 mutableCopy];
  uint64_t v22 = [*(id *)(a1 + 32) devices];
  [v21 minusSet:v22];

  uint64_t v23 = [*(id *)(a1 + 32) devices];
  [v23 minusSet:v20];

  id v24 = [*(id *)(a1 + 32) devices];
  [v24 unionSet:v21];

  [*(id *)(a1 + 32) _updateHandlers];
}

void sub_100021214(id a1)
{
  qword_100186950 = objc_alloc_init(DAMockDeviceImageViewManager);

  _objc_release_x1();
}

void sub_100021324(uint64_t a1)
{
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  id v3 = [*(id *)(a1 + 32) attributes];
  uint64_t v4 = [v3 objectForKeyedSubscript:@"imageName"];

  uint64_t v17 = 0;
  uint64_t v18 = &v17;
  uint64_t v19 = 0x3032000000;
  id v20 = sub_1000215F0;
  id v21 = sub_100021600;
  id v22 = 0;
  if (v4)
  {
    uint64_t v5 = +[UIImage imageNamed:v4];
    uint64_t v6 = (void *)v18[5];
    v18[5] = v5;

    if (!v18[5])
    {
      uint64_t v7 = DiagnosticLogHandleForCategory();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)long long buf = 138412290;
        id v24 = v4;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Requesting device image for [%@]", buf, 0xCu);
      }

      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_100021608;
      v13[3] = &unk_10014BFD8;
      id v16 = &v17;
      id v14 = v4;
      uint64_t v8 = v2;
      id v15 = v8;
      +[ASTSession requestAsset:v14 completionHandler:v13];
      dispatch_time_t v9 = dispatch_time(0, 15000000000);
      dispatch_semaphore_wait(v8, v9);
    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100021770;
  block[3] = &unk_10014BC10;
  id v12 = &v17;
  id v11 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  _Block_object_dispose(&v17, 8);
}

void sub_1000215CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000215F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100021600(uint64_t a1)
{
}

void sub_100021608(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = v6;
  if (v5 && !v6)
  {
    uint64_t v8 = +[UIScreen mainScreen];
    [v8 scale];
    uint64_t v9 = +[UIImage imageWithData:scale:](UIImage, "imageWithData:scale:", v5);
    uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8);
    id v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 40) = v9;
  }
  if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    id v12 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v13 = *(void *)(a1 + 32);
      int v17 = 138412290;
      uint64_t v18 = v13;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Could not download device image: [%@]", (uint8_t *)&v17, 0xCu);
    }

    uint64_t v14 = +[UIImage imageNamed:*(void *)(a1 + 32)];
    uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 8);
    id v16 = *(void **)(v15 + 40);
    *(void *)(v15 + 40) = v14;
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_100021770(uint64_t a1)
{
  id v3 = [objc_alloc((Class)UIImageView) initWithImage:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  [v3 setContentMode:4];
  dispatch_semaphore_t v2 = +[UIColor clearColor];
  [v3 setBackgroundColor:v2];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100021B1C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 48) copy];
  id v3 = objc_retainBlock(v2);
  uint64_t v4 = [*(id *)(a1 + 32) handlers];
  [v4 setObject:v3 forKeyedSubscript:*(void *)(a1 + 40)];

  id v5 = *(void **)(a1 + 32);

  return [v5 _beginObserving];
}

void sub_100021C48(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) handlers];
  [v2 removeObjectForKey:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) handlers];
  id v4 = [v3 count];

  if (!v4)
  {
    id v5 = *(void **)(a1 + 32);
    [v5 _endObserving];
  }
}

id sub_100021DA8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) _updateDevicesWithSnapshot:a2];
}

void sub_100021FE0(uint64_t a1)
{
  if ([*(id *)(a1 + 32) status])
  {
    if ((unint64_t)[*(id *)(a1 + 32) status] <= 6)
    {
      id v2 = (id *)(a1 + 40);
      id v3 = [*(id *)(a1 + 40) devices];
      id v4 = [v3 count];

      if (!v4)
      {
        uint64_t v9 = [*v2 devices];
        uint64_t v10 = [*v2 _spawnPersistentDevice];
        [v9 addObject:v10];

        goto LABEL_10;
      }
    }
  }
  if (![*(id *)(a1 + 32) status] || (unint64_t)objc_msgSend(*(id *)(a1 + 32), "status") >= 7)
  {
    id v6 = *(void **)(a1 + 40);
    id v5 = (id *)(a1 + 40);
    uint64_t v7 = [v6 devices];
    id v8 = [v7 count];

    if (v8)
    {
      uint64_t v9 = [*v5 devices];
      [v9 removeAllObjects];
      id v2 = v5;
LABEL_10:

      id v11 = *v2;
      [v11 _updateHandlers];
    }
  }
}

void sub_1000227A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1000227C8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 138412290;
    id v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "New devices: %@", (uint8_t *)&v7, 0xCu);
  }

  [WeakRetained setDevices:v3];
  id v6 = [WeakRetained delegate];
  [v6 observerDidChangeDevices:WeakRetained];
}

void sub_100022A34(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100022A58(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained setDevices:v4];
  id v5 = [WeakRetained delegate];
  [v5 observerDidChangeDevices:WeakRetained];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100023080(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000231E0(uint64_t a1)
{
  uint64_t v2 = +[NSMutableSet set];
  id v3 = dispatch_group_create();
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  uint64_t v10 = a1;
  id v4 = [*(id *)(a1 + 32) observers];
  id v5 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v15;
    do
    {
      id v8 = 0;
      do
      {
        if (*(void *)v15 != v7) {
          objc_enumerationMutation(v4);
        }
        uint64_t v9 = *(void **)(*((void *)&v14 + 1) + 8 * (void)v8);
        dispatch_group_enter(v3);
        v11[0] = _NSConcreteStackBlock;
        v11[1] = 3221225472;
        v11[2] = sub_1000233AC;
        v11[3] = &unk_10014B618;
        id v12 = v2;
        uint64_t v13 = v3;
        [v9 oneshotWithHandler:v11];

        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v6);
  }

  dispatch_group_wait(v3, 0xFFFFFFFFFFFFFFFFLL);
  (*(void (**)(void))(*(void *)(v10 + 40) + 16))();
}

void sub_1000233AC(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = *(id *)(a1 + 32);
  objc_sync_enter(v3);
  id v4 = *(void **)(a1 + 32);
  id v5 = [v6 allObjects];
  [v4 addObjectsFromArray:v5];

  objc_sync_exit(v3);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_100023440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100023E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100023ED0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100023EE0(uint64_t a1)
{
}

void sub_100023EE8(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v6 = a3;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), a2);
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), a3);
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40))
  {
    [*(id *)(a1 + 32) purgeSecurityKey];
    [*(id *)(a1 + 32) setDeviceIdentityKey:[*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) referenceKey]];
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_10002452C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long buf, int a14, __int16 a15, __int16 a16, void *a17)
{
  if (a2 == 1)
  {
    id v17 = objc_begin_catch(a1);
    uint64_t v18 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      uint64_t v19 = [v17 name];
      id v20 = [v17 reason];
      id v21 = [v17 userInfo];
      id v22 = [v21 description];
      LODWORD(buf) = 138412802;
      *(void *)((char *)&buf + 4) = v19;
      WORD6(buf) = 2112;
      *(void *)((char *)&buf + 14) = v20;
      a16 = 2112;
      a17 = v22;
      _os_log_error_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "Exception raised while taking SHA256 of file: %@: %@ (%@)", (uint8_t *)&buf, 0x20u);
    }
    objc_end_catch();
    JUMPOUT(0x1000244DCLL);
  }
  _Unwind_Resume(a1);
}

void sub_100024C88(uint64_t a1)
{
  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  uint64_t v2 = objc_opt_new();
  uint64_t v3 = *(void *)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  _DWORD v6[2] = sub_100024D6C;
  v6[3] = &unk_10014C108;
  uint64_t v9 = *(void *)(a1 + 64);
  long long v5 = *(_OWORD *)(a1 + 48);
  id v4 = (id)v5;
  long long v8 = v5;
  id v7 = *(id *)(a1 + 32);
  [v2 issueClientCertificateWithCompletionOnQueue:0 withOptions:v3 completion:v6];
}

void sub_100024D6C(uint64_t a1, int a2, void *a3, void *a4)
{
  id v8 = a3;
  id v9 = a4;
  if (!a2)
  {
    long long v16 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR)) {
      sub_100102884();
    }

    long long v14 = (id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    long long v15 = a4;
    goto LABEL_9;
  }
  uint64_t v10 = [v8 certificates];
  if (v10)
  {
    id v11 = (void *)v10;
    id v12 = [v8 certificates];
    if ([v12 count] == (id)2)
    {
      id v13 = [v8 referenceKey];

      if (v13)
      {
        long long v14 = (id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
        long long v15 = a3;
LABEL_9:
        objc_storeStrong(v14, v15);
        goto LABEL_14;
      }
    }
    else
    {
    }
  }
  id v17 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR)) {
    sub_100102850();
  }

LABEL_14:
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_100024F00()
{
  if (!qword_100186960) {
    qword_100186960 = _sl_dlopen();
  }
  return qword_100186960;
}

uint64_t sub_100024FD0()
{
  uint64_t result = _sl_dlopen();
  qword_100186960 = result;
  return result;
}

void sub_1000253B8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002549C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000255C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000256F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000259AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100025A40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100025D08(id a1)
{
  qword_100186968 = objc_alloc_init(DADeviceConnectionConfigurator);

  _objc_release_x1();
}

void sub_10002724C(id a1)
{
  uint64_t v1 = objc_opt_class();
  uint64_t v2 = objc_opt_class();
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_opt_class();
  uint64_t v5 = objc_opt_class();
  uint64_t v6 = objc_opt_class();
  uint64_t v7 = objc_opt_class();
  qword_100186978 = +[NSSet setWithObjects:](NSSet, "setWithObjects:", v1, v2, v3, v4, v5, v6, v7, objc_opt_class(), 0);

  _objc_release_x1();
}

void sub_100027AA8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) connection];
  [v1 end];
}

void sub_10002830C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 138412546;
    id v11 = v6;
    __int16 v12 = 2112;
    id v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Error: %@, Report: %@", (uint8_t *)&v10, 0x16u);
  }

  if (v5)
  {
    id v8 = [v5 arrayForJSON];
    id v9 = [*(id *)(a1 + 32) profile];
    [v9 setProperties:v8];
  }
  else
  {
    id v8 = [*(id *)(a1 + 32) profile];
    [v8 setProperties:&__NSArray0__struct];
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_1000286EC(id a1)
{
  qword_100186988 = objc_alloc_init(DALauncherServiceManager);

  _objc_release_x1();
}

void sub_100028C84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, uint64_t a17, uint64_t a18, char a19)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100028CD0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100028CE0(uint64_t a1)
{
}

void sub_100028CE8(uint64_t a1, void *a2)
{
  id v4 = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), a2);
  id v5 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained(v5);

  if (WeakRetained)
  {
    uint64_t v7 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      id v8 = objc_loadWeakRetained(v5);
      int v9 = 138412546;
      id v10 = v8;
      __int16 v11 = 2112;
      id v12 = v4;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Connection %@ broke with error %@", (uint8_t *)&v9, 0x16u);
    }
  }
}

void sub_1000290F8(uint64_t a1)
{
  if (NSClassFromString(@"DADeviceLocal"))
  {
    uint64_t v2 = objc_opt_new();
  }
  else
  {
    uint64_t v3 = (void *)MGCopyAnswer();
    id v6 = [[DADeviceRepresentation alloc] initWithSerialNumber:v3 isLocal:1 attributes:&__NSDictionary0__struct];

    uint64_t v2 = (uint64_t)v6;
  }
  uint64_t v4 = *(void *)(a1 + 32);
  id v7 = (id)v2;
  id v5 = +[NSSet setWithObject:v2];
  (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
}

void sub_10002968C(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(*(void *)(a1 + 32) + 16) + 16))();
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0;
}

void sub_100029BC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(*(void *)(a1 + 32) + 24) invalidate];
  if (*(void *)(a1 + 40)) {
    [v3 setConsentData:];
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100029C70;
  block[3] = &unk_10014B0D8;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100029C70(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void (***)(void))(v2 + 16);
  if (v3)
  {
    v3[2]();
    uint64_t v2 = *(void *)(a1 + 32);
    id v3 = *(void (***)(void))(v2 + 16);
  }
  *(void *)(v2 + 16) = 0;
}

void sub_10002AC78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_10002AD3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002AE00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002AEC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002AF88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002B04C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002B110(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002B1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
}

void sub_10002B278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002B33C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002B400(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002B4C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002B75C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002B844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10002BAA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
}

void sub_10002BDAC(uint64_t a1)
{
  uint64_t v2 = +[NSNotificationCenter defaultCenter];
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  CFStringRef v6 = @"info";
  uint64_t v7 = v3;
  id v5 = +[NSDictionary dictionaryWithObjects:&v7 forKeys:&v6 count:1];
  [v2 postNotificationName:@"com.apple.Diagnostics.deviceStateChangedNotification" object:v4 userInfo:v5];
}

void sub_10002C7BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10002CCC8()
{
  if (!qword_100186998) {
    qword_100186998 = _sl_dlopen();
  }
  return qword_100186998;
}

uint64_t sub_10002CD98()
{
  uint64_t result = _sl_dlopen();
  qword_100186998 = result;
  return result;
}

Class sub_10002CE0C(uint64_t a1)
{
  sub_10002CE64();
  Class result = objc_getClass("NRDevice");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1001869A0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    sub_100102988();
    return (Class)sub_10002CE64();
  }
  return result;
}

uint64_t sub_10002CE64()
{
  uint64_t v0 = sub_10002CCC8();
  if (!v0)
  {
    uint64_t v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

uint64_t sub_10002CEC0()
{
  if (!qword_1001869A8) {
    qword_1001869A8 = _sl_dlopen();
  }
  return qword_1001869A8;
}

uint64_t sub_10002CF90()
{
  uint64_t result = _sl_dlopen();
  qword_1001869A8 = result;
  return result;
}

Class sub_10002D004(uint64_t a1)
{
  if (!sub_10002CEC0())
  {
    uint64_t v3 = (void *)abort_report_np();
    free(v3);
  }
  Class result = objc_getClass("SFDevice");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1001869B0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v4 = sub_1001029B0();
    return (Class)sub_10002D094(v4);
  }
  return result;
}

void *sub_10002D094(uint64_t a1)
{
  uint64_t v2 = (void *)sub_10002CE64();
  Class result = dlsym(v2, "NRDevicePropertyIsPaired");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  qword_1001869B8 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

DADeviceAirpods *sub_10002D0E4(uint64_t a1)
{
  sub_10002CE64();
  Class result = (DADeviceAirpods *)objc_getClass("NRPairedDeviceRegistry");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    qword_1001869C0 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  }
  else
  {
    uint64_t v3 = (DADeviceAirpods *)sub_1001029D8();
    return [(DADeviceAirpods *)v3 initWithBluetoothDevice:v5];
  }
  return result;
}

void sub_10002D73C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) connection];
  [v1 end];
}

void sub_10002E054(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = +[NSMutableArray array];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id obj = v2;
  id v18 = [obj countByEnumeratingWithState:&v24 objects:v29 count:16];
  if (v18)
  {
    uint64_t v17 = *(void *)v25;
    do
    {
      uint64_t v4 = 0;
      do
      {
        if (*(void *)v25 != v17) {
          objc_enumerationMutation(obj);
        }
        uint64_t v19 = v4;
        id v5 = *(void **)(*((void *)&v24 + 1) + 8 * v4);
        long long v20 = 0u;
        long long v21 = 0u;
        long long v22 = 0u;
        long long v23 = 0u;
        CFStringRef v6 = [v5 supportedDevices];
        id v7 = [v6 countByEnumeratingWithState:&v20 objects:v28 count:16];
        if (v7)
        {
          id v8 = v7;
          uint64_t v9 = *(void *)v21;
          do
          {
            id v10 = 0;
            do
            {
              if (*(void *)v21 != v9) {
                objc_enumerationMutation(v6);
              }
              if ([*(id *)(*((void *)&v20 + 1) + 8 * (void)v10) isEqualToString:@"AirPods"])
              {
                __int16 v11 = [v5 identifier];
                id v12 = [v5 version];
                id v13 = +[ASTTestAttributes attributesWithTestId:v11 version:v12];
                [v3 addObject:v13];
              }
              id v10 = (char *)v10 + 1;
            }
            while (v8 != v10);
            id v8 = [v6 countByEnumeratingWithState:&v20 objects:v28 count:16];
          }
          while (v8);
        }

        uint64_t v4 = v19 + 1;
      }
      while ((id)(v19 + 1) != v18);
      id v18 = [obj countByEnumeratingWithState:&v24 objects:v29 count:16];
    }
    while (v18);
  }

  long long v14 = [*(id *)(a1 + 32) profile];
  [v14 setTests:v3];

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10002E2A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 138412546;
    id v11 = v6;
    __int16 v12 = 2112;
    id v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Error: %@, Report: %@", (uint8_t *)&v10, 0x16u);
  }

  if (v5)
  {
    id v8 = [v5 arrayForJSON];
    uint64_t v9 = [*(id *)(a1 + 32) profile];
    [v9 setProperties:v8];
  }
  else
  {
    id v8 = [*(id *)(a1 + 32) profile];
    [v8 setProperties:&__NSArray0__struct];
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
}

void sub_10002E7B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    uint64_t v4 = DiagnosticLogHandleForCategory();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_100101E8C(a1, v4);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10002F4AC(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  id v3 = *(void **)(a1 + 32);
  CFStringRef v13 = @"DADeviceAirPodsDeviceKey";
  uint64_t v4 = [v3 airpodsDevice];
  long long v14 = v4;
  id v5 = +[NSDictionary dictionaryWithObjects:&v14 forKeys:&v13 count:1];
  [v2 postNotificationName:@"com.apple.Diagnostics.airPodsSessionWillStart" object:v3 userInfo:v5];

  id v6 = [*(id *)(a1 + 32) airpodsDevice];
  LOBYTE(v3) = [v6 connected];

  if ((v3 & 1) == 0) {
    [*(id *)(a1 + 32) connect];
  }
  id v7 = [*(id *)(a1 + 32) airpodsDevice];
  unsigned int v8 = [v7 connected];

  if (v8)
  {
    v12.receiver = *(id *)(a1 + 32);
    v12.super_class = (Class)DADeviceConnectionAirPods;
    [super start];
  }
  else
  {
    uint64_t v9 = [*(id *)(a1 + 32) state];
    [v9 setPhase:0];

    int v10 = [*(id *)(a1 + 32) state];
    [v10 addErrorCode:11 userInfo:0];

    id v11 = [*(id *)(a1 + 32) state];
    [v11 removeErrorCode:11];
  }
}

id sub_10002F6D4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) airpodsDevice];
  unsigned int v3 = [v2 connected];

  if (v3) {
    [*(id *)(a1 + 32) disconnect];
  }
  v5.receiver = *(id *)(a1 + 32);
  v5.super_class = (Class)DADeviceConnectionAirPods;
  return [super end];
}

void sub_10002F828(uint64_t a1)
{
  [*(id *)(a1 + 32) end];
  dispatch_time_t v2 = dispatch_time(0, 2000000000);
  unsigned int v3 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10002F8E8;
  block[3] = &unk_10014B0D8;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v2, v3, block);
}

id sub_10002F8E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) unpair];
}

void sub_10002FA9C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 24));
  _Unwind_Resume(a1);
}

void sub_10002FAB0(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v3 = [WeakRetained btManager];
  [v3 setDevicePairingEnabled:1];

  uint64_t v4 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = objc_loadWeakRetained(v1);
    id v6 = [v5 airpodsDevice];
    int v11 = 138412290;
    objc_super v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Requesting unpair of AirPods %@...", (uint8_t *)&v11, 0xCu);
  }
  id v7 = objc_loadWeakRetained(v1);
  unsigned int v8 = [v7 airpodsDevice];
  [v8 unpair];

  id v9 = objc_loadWeakRetained(v1);
  int v10 = [v9 btManager];
  [v10 setDevicePairingEnabled:0];
}

void sub_1000306F8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

id sub_10003104C(uint64_t a1)
{
  dispatch_time_t v2 = [*(id *)(a1 + 32) original];
  [v2 end];

  unsigned int v3 = *(void **)(a1 + 32);

  return [v3 _reset];
}

void sub_1000313C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000313EC(uint64_t a1, int a2)
{
  uint64_t v4 = (id *)(a1 + 64);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (a2)
  {
    BKSDisplayBrightnessGetCurrent();
    [*(id *)(a1 + 32) setOriginalScreenBrightness:];
    [WeakRetained setIgnoreButtonEvents:[*(id *)(a1 + 40) isHeadless]];
    id v6 = +[NSNotificationCenter defaultCenter];
    [v6 addObserver:WeakRetained selector:"testViewPresented:" name:@"com.apple.Diagnostics.DKViewControllerPresented" object:0];

    id v7 = [*(id *)(a1 + 32) buttonEventMonitor];
    unsigned __int8 v8 = [v7 hasTarget:*(void *)(a1 + 32)];

    if ((v8 & 1) == 0) {
      [*(id *)(a1 + 32) _startInterceptingButtonEvents];
    }
    id v9 = [WeakRetained original];
    uint64_t v10 = *(void *)(a1 + 40);
    uint64_t v11 = *(void *)(a1 + 48);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1000315CC;
    v14[3] = &unk_10014BEA0;
    objc_copyWeak(&v16, v4);
    id v15 = *(id *)(a1 + 56);
    [v9 executeTestWithTestAttributes:v10 parameters:v11 completion:v14];

    objc_destroyWeak(&v16);
  }
  else
  {
    uint64_t v12 = *(void *)(a1 + 56);
    CFStringRef v13 = +[NSError errorWithDomain:DKErrorDomain code:-1003 userInfo:0];
    (*(void (**)(uint64_t, void, void *))(v12 + 16))(v12, 0, v13);

    [WeakRetained idle];
  }
}

void sub_1000315B8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000315CC(uint64_t a1, void *a2, void *a3)
{
  id v5 = (id *)(a1 + 40);
  id v6 = a3;
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained(v5);
  [WeakRetained _reset];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000317E8(uint64_t a1)
{
  dispatch_time_t v2 = [*(id *)(a1 + 32) original];
  unsigned int v3 = [v2 state];
  uint64_t v4 = [v3 suiteName];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000318DC;
  v5[3] = &unk_10014B1F0;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  +[DAUserInterruptAlertFactory activateAlertForSuiteName:v4 withHandler:v5];

  objc_destroyWeak(&v6);
}

void sub_1000318C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1000318DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained diagnosticsManager];
  [v1 cancelAllDiagnostics];
}

void sub_1000319F0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100031A14(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = [WeakRetained buttonEventMonitor];
  id v3 = objc_loadWeakRetained(v1);
  [v2 addTarget:v3 action:"handleButtonEvent:" forButtonEvents:0xFFFFFFFFLL propagate:0];
}

void sub_100031BB8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) buttonEventMonitor];
  [v2 removeTarget:*(void *)(a1 + 32)];
}

void sub_100031C0C(uint64_t a1)
{
  [*(id *)(a1 + 32) originalScreenBrightness];
  BKSDisplayBrightnessSet();
  uint64_t v1 = +[UIApplication sharedApplication];
  id v2 = [v1 connectedScenes];

  long long v11 = 0u;
  long long v12 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  id v3 = v2;
  id v4 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v10;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v10 != v6) {
          objc_enumerationMutation(v3);
        }
        id v8 = *(void **)(*((void *)&v9 + 1) + 8 * (void)v7);
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          [v8 _setSystemVolumeHUDEnabled:1 v9];
        }
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v5);
  }
}

void sub_10003285C(uint64_t a1)
{
  id v2 = DiagnosticLogHandleForCategory();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v7 = 138412290;
    uint64_t v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Syncing Device State: %@", (uint8_t *)&v7, 0xCu);
  }

  id v4 = [*(id *)(a1 + 40) messenger];
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = [*(id *)(a1 + 40) destination];
  [v4 sendMessage:@"deviceState" data:v5 toDestination:v6 forceLocalDelivery:1 expectsResponse:0 response:&stru_10014C450];
}

void sub_100032968(id a1, BOOL a2, NSError *a3, NSString *a4, DAIDSMessageObject *a5)
{
  BOOL v5 = a2;
  uint64_t v6 = DiagnosticLogHandleForCategory();
  int v7 = v6;
  if (v5)
  {
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Synced device state.", v8, 2u);
    }
  }
  else if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    sub_100102BCC(v7);
  }
}

void sub_100032D4C(id a1)
{
  qword_1001869C8 = objc_alloc_init(DAPlatform_iOS_Swift);

  _objc_release_x1();
}

void sub_100032EEC(uint64_t a1)
{
  id v2 = +[UIDevice currentDevice];
  BOOL v3 = [v2 userInterfaceIdiom] == (id)1;

  id v4 = +[UIAlertController alertControllerWithTitle:*(void *)(a1 + 32) message:*(void *)(a1 + 40) preferredStyle:v3];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  v11[2] = sub_1000330A0;
  v11[3] = &unk_10014C498;
  uint64_t v5 = *(void *)(a1 + 48);
  id v12 = *(id *)(a1 + 56);
  id v13 = *(id *)(a1 + 72);
  uint64_t v6 = +[UIAlertAction actionWithTitle:v5 style:2 handler:v11];
  [v4 addAction:v6];

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_1000330E4;
  v9[3] = &unk_10014C4C0;
  uint64_t v7 = *(void *)(a1 + 64);
  id v10 = *(id *)(a1 + 56);
  uint64_t v8 = +[UIAlertAction actionWithTitle:v7 style:1 handler:v9];
  [v4 addAction:v8];

  [v4 showOnTopWithAnimated:1 completion:0];
}

uint64_t sub_1000330A0(uint64_t a1)
{
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  id v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

intptr_t sub_1000330E4(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

int main(int argc, const char **argv, const char **envp)
{
  int v3 = static CommandLine.argc.getter();
  id v4 = (char **)static CommandLine.unsafeArgv.getter();
  type metadata accessor for AppDelegate();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v6 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  UIApplicationMain(v3, v4, 0, v6);

  return 0;
}

void type metadata accessor for ASTInstructionalPromptInstructionsStyle(uint64_t a1)
{
}

__n128 initializeWithTake for DeviceType(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
}

void type metadata accessor for Style(uint64_t a1)
{
}

void type metadata accessor for ASTSelfServiceDestinationEndpoint(uint64_t a1)
{
}

void type metadata accessor for SFAirDropDiscoverableMode(uint64_t a1)
{
}

uint64_t sub_1000331E8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100033208(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void sub_100033244(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_10003324C(void *a1@<X8>)
{
  *a1 = *v1;
}

NSNumber sub_100033258()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_100033260(uint64_t a1, uint64_t a2)
{
  uint64_t result = static Float._forceBridgeFromObjectiveC(_:result:)();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return result;
}

uint64_t sub_1000332B4(uint64_t a1, uint64_t a2)
{
  char v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)();
  *(_DWORD *)a2 = 0;
  *(unsigned char *)(a2 + 4) = 1;
  return v3 & 1;
}

uint64_t sub_10003330C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = static Float._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = v3;
  return result;
}

uint64_t sub_100033334()
{
  swift_getWitnessTable();

  return static _CFObject.== infix(_:_:)();
}

void *sub_1000333A0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1000333B4(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1000333E4(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1000333F8(void *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_10003340C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100033420()
{
  swift_getWitnessTable();

  return static _CFObject.== infix(_:_:)();
}

uint64_t sub_10003348C(uint64_t a1, uint64_t a2)
{
  return sub_100033598(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_1000334B0(uint64_t a1, uint64_t a2)
{
  return sub_100033598(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000334D0()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100033524()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100033598(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1000335DC(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_100033654(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1000336D4@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void *sub_100033718@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void *sub_100033724@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_100033738()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_100033784()
{
  return _CFObject.hash(into:)();
}

Swift::Int sub_1000337DC()
{
  return sub_100033A14();
}

uint64_t sub_1000337F4()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

_DWORD *sub_100033880@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

float sub_100033890@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_10003389C()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100033958()
{
  return _CFObject.hashValue.getter();
}

uint64_t sub_1000339A4()
{
  return _CFObject.hash(into:)();
}

Swift::Int sub_1000339FC()
{
  return sub_100033A14();
}

Swift::Int sub_100033A14()
{
  return Hasher._finalize()();
}

uint64_t sub_100033A7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100033AA8()
{
  sub_100033E68(&qword_100182B58, type metadata accessor for URLResourceKey);
  sub_100033E68(&qword_100182B60, type metadata accessor for URLResourceKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100033B64()
{
  sub_100033E68((unint64_t *)&qword_100182B68, type metadata accessor for Key);
  sub_100033E68(&qword_100182B70, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100033C20()
{
  sub_100033E68(&qword_100182BA0, type metadata accessor for OptionKey);
  sub_100033E68(&qword_100182BA8, type metadata accessor for OptionKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_100033CDC@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for ELSConsentOption(uint64_t a1)
{
}

void type metadata accessor for ELSStatus(uint64_t a1)
{
}

void type metadata accessor for DADiagnosticsRemoteViewControllerFinishReason(uint64_t a1)
{
}

uint64_t sub_100033DD8()
{
  return sub_100033E68(&qword_100182AB8, type metadata accessor for Key);
}

uint64_t sub_100033E20()
{
  return sub_100033E68(&qword_100182AC0, type metadata accessor for Key);
}

uint64_t sub_100033E68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100033EB0()
{
  return sub_100033E68(&qword_100182AC8, type metadata accessor for CGColor);
}

uint64_t sub_100033EF8()
{
  return sub_100033E68(&qword_100182AD0, type metadata accessor for URLResourceKey);
}

uint64_t sub_100033F40()
{
  return sub_100033E68(&qword_100182AD8, type metadata accessor for URLResourceKey);
}

uint64_t sub_100033F88()
{
  return sub_100033E68(&qword_100182AE0, type metadata accessor for URLResourceKey);
}

uint64_t sub_100033FD0()
{
  sub_100033E68((unint64_t *)&unk_100184210, type metadata accessor for FileAttributeKey);
  sub_100033E68(&qword_100182B50, type metadata accessor for FileAttributeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t sub_10003408C()
{
  return sub_100033E68(&qword_100182AE8, type metadata accessor for FileAttributeKey);
}

uint64_t sub_1000340D4()
{
  return sub_100033E68(&qword_100182AF0, type metadata accessor for FileAttributeKey);
}

uint64_t sub_10003411C()
{
  return sub_100033E68(&qword_100182AF8, type metadata accessor for CFString);
}

uint64_t sub_100034164()
{
  return sub_100033E68(&qword_100182B00, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1000341AC()
{
  return sub_100033E68(&qword_100182B08, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1000341F4()
{
  return Float.hashValue.getter(*v0);
}

void sub_1000341FC()
{
  if ((*v0 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v1 = *v0;
  }
  else {
    Swift::UInt32 v1 = 0;
  }
  Hasher._combine(_:)(v1);
}

uint64_t sub_100034230()
{
  return static Hasher._hash(seed:bytes:count:)();
}

BOOL sub_100034244(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100034258()
{
  return sub_100033E68(&qword_100182B10, type metadata accessor for UILayoutPriority);
}

uint64_t sub_1000342A0()
{
  return sub_100033E68(&qword_100182B18, type metadata accessor for CFString);
}

uint64_t sub_1000342E8()
{
  return sub_100033E68(&qword_100182B20, type metadata accessor for FileAttributeKey);
}

uint64_t sub_100034330()
{
  return sub_100033E68(&qword_100182B28, type metadata accessor for CGColor);
}

uint64_t sub_100034378()
{
  return sub_100033E68(&qword_100182B30, type metadata accessor for Key);
}

void type metadata accessor for OptionKey(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for Alert(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 initializeWithTake for SelfServiceSuiteResultsComponentView(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_100034414(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100034434(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_100034474()
{
  return sub_100033E68(&qword_100182B88, type metadata accessor for OptionKey);
}

uint64_t sub_1000344BC()
{
  return sub_100033E68(&qword_100182B90, type metadata accessor for OptionKey);
}

uint64_t sub_100034504()
{
  return sub_100033E68(&qword_100182B98, type metadata accessor for OptionKey);
}

void type metadata accessor for UIInterfaceOrientationMask(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_100034574(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

BOOL sub_1000345EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100034600()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100034648()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100034674()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

id sub_1000346B8()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for SetupViewController()) init];
  qword_10018A350 = (uint64_t)result;
  return result;
}

id sub_1000346E8()
{
  return sub_1000347BC(&OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___noSessionNavigationController, (void (*)(void))type metadata accessor for NoSessionNavigationController);
}

id sub_100034708()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController);
  }
  else
  {
    uint64_t v4 = v0;
    memset(v10, 0, sizeof(v10));
    char v11 = 2;
    id v5 = objc_allocWithZone((Class)type metadata accessor for FullscreenAlertViewController());
    id v6 = sub_1000646E8((uint64_t)v10);
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_10003479C()
{
  return sub_1000347BC(&OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___diagnosticsCompletedNavigationController, (void (*)(void))type metadata accessor for DiagnosticsCompletedNavigationController);
}

id sub_1000347BC(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    a2(0);
    id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_100034834()
{
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_transitionDuration] = 0x3FD8000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryInterval] = 0x4014000000000000;
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController;
  type metadata accessor for LoadingViewController();
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = v0;
  id v4 = [v2 init];
  *(void *)&v0[v1] = v4;
  uint64_t v5 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsViewController;
  id v6 = objc_allocWithZone((Class)type metadata accessor for TermsAndConditionsViewController());
  *(void *)&v3[v5] = sub_1000CBDB4();
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___noSessionNavigationController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___diagnosticsCompletedNavigationController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_onScreenErrors] = &_swiftEmptySetSingleton;
  v3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason] = 0;
  v3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsAccepted] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController] = v4;
  id v7 = v4;

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for SetupViewController();
  return [super initWithNibName:0 bundle:0];
}

void sub_1000349B8()
{
  [v0 setModalInPresentation:1];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_15;
  }
  id v2 = v1;
  id v3 = [self systemBackgroundColor];
  [v2 setBackgroundColor:v3];

  id v4 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController];
  id v5 = [v4 view];
  if (!v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v6 = v5;
  [v5 setAlpha:0.0];

  [v4 willMoveToParentViewController:v0];
  [v0 addChildViewController:v4];
  id v7 = [v4 view];
  if (!v7)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v8 = v7;
  id v9 = [v0 view];
  if (!v9)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v10 = v9;
  [v9 bounds];
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;

  [v8 setFrame:v12, v14, v16, v18];
  id v19 = [v4 view];
  if (!v19)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  long long v20 = v19;
  [v19 setAutoresizingMask:18];

  id v21 = [v0 view];
  if (!v21)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  long long v22 = v21;
  id v23 = [v4 view];
  if (!v23)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  long long v24 = v23;
  [v22 addSubview:v23];

  [v4 didMoveToParentViewController:v0];
  id v25 = [v4 view];
  if (!v25)
  {
LABEL_21:
    __break(1u);
    return;
  }
  id v31 = v25;
  [v25 alpha];
  if (v26 == 0.0)
  {
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v31;
    long long v28 = self;
    aBlock[4] = sub_10003C0D4;
    aBlock[5] = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000358AC;
    aBlock[3] = &unk_10014D0B0;
    long long v29 = _Block_copy(aBlock);
    id v30 = v31;
    swift_retain();
    swift_release();
    [v28 animateWithDuration:0x10000 delay:v29 options:0 animations:0.375 completion:0.0];
    _Block_release(v29);

    swift_release();
  }
  else
  {
  }
}

uint64_t sub_100034D58(char a1)
{
  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for SetupViewController();
  [super viewWillAppear:a1 & 1];
  id v3 = [v1 navigationController];
  if (v3)
  {
    id v4 = v3;
    [v3 setNavigationBarHidden:1];
  }
  switch(v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason])
  {
    case 1:
      id v5 = sub_10003479C();
      sub_100038A04(v5, 1, 0, 0);

      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v1;
      id v7 = (void *)swift_allocObject();
      v7[2] = &off_10014C608;
      v7[3] = sub_10003C76C;
      v7[4] = v6;
      v7[5] = v1;
      id v8 = v1;
      swift_retain();
      sub_10009A6C4((uint64_t)sub_10003C6F8, (uint64_t)v7);
      swift_release();
      return swift_release();
    case 3:
      double v11 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController];
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v1;
      double v13 = v1;
      sub_100038A04(v11, 0, (void (*)(uint64_t))sub_10003C698, v12);
      return swift_release();
    case 5:
      sub_100038A04(*(void **)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController], 1, 0, 0);
      if (qword_1001827A8 != -1) {
        swift_once();
      }
      *(void *)(qword_10018A3D0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate + 8) = &off_10014CE60;
      return swift_unknownObjectWeakAssign();
    default:
      sub_100038A04(*(void **)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController], 1, 0, 0);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v1;
      id v10 = v1;
      sub_1000A20C8((uint64_t)sub_10003C6F4, v9);
      return swift_release();
  }
}

uint64_t sub_10003504C(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a2;
  id v4 = (void *)swift_allocObject();
  v4[2] = &_swiftEmptyArrayStorage;
  v4[3] = sub_10003C75C;
  void v4[4] = v3;
  v4[5] = a2;
  id v5 = a2;
  swift_retain();
  sub_10009A6C4((uint64_t)sub_10003C6F8, (uint64_t)v4);
  swift_release();

  return swift_release();
}

id sub_100035164(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for SetupViewController();
  [super viewWillDisappear:a1 & 1];
  id v3 = [v1 navigationController];
  if (v3)
  {
    id v4 = v3;
    [v3 setNavigationBarHidden:0];
  }
  id result = [self isSSRBootIntentSet];
  if (result)
  {
    if (qword_1001827A8 != -1) {
      swift_once();
    }
    *(void *)(qword_10018A3D0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate + 8) = &off_10014CE60;
    return (id)swift_unknownObjectWeakAssign();
  }
  return result;
}

uint64_t sub_1000352A8(uint64_t result, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, char *a5)
{
  uint64_t v6 = *(void *)(a2 + 16);
  if (!v6) {
    goto LABEL_8;
  }
  if (*(unsigned __int8 *)(a2 + 32) == result) {
    return a3();
  }
  if (v6 == 1)
  {
LABEL_8:
    if (result - 1 < 2)
    {
      uint64_t v9 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer;
      id v10 = *(void **)&a5[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer];
      if (v10)
      {
        id v11 = v10;
        [v11 invalidate];
        uint64_t v12 = *(void **)&a5[v9];
        *(void *)&a5[v9] = 0;
      }
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = a5;
      double v14 = a5;
      sub_1000A20C8((uint64_t)sub_10003C200, v13);
      return swift_release();
    }
    if ((_BYTE)result) {
      return result;
    }
    return a3();
  }
  uint64_t v7 = 33;
  while (1)
  {
    uint64_t v8 = v7 - 31;
    if (__OFADD__(v7 - 32, 1)) {
      break;
    }
    if (*(unsigned __int8 *)(a2 + v7) == result) {
      return a3();
    }
    ++v7;
    if (v8 == v6) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

void sub_1000353CC(char a1, void *a2)
{
  if (a1)
  {
    sub_10003867C();
  }
  else
  {
    id v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a2;
    v7[4] = sub_10003C20C;
    v7[5] = v4;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_1000358F0;
    v7[3] = &unk_10014D330;
    id v5 = _Block_copy(v7);
    id v6 = a2;
    swift_release();
    [v3 prepareLocalizedStringsWithCompletionHandler:v5];
    _Block_release(v5);
  }
}

uint64_t sub_1000354C0(char a1, uint64_t a2, char *a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    if (qword_1001827C0 != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
  *(void *)(*(void *)&a3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsViewController]
            + OBJC_IVAR____TtC11Diagnostics32TermsAndConditionsViewController_delegate
            + 8) = &off_10014CE98;
  swift_unknownObjectWeakAssign();
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  aBlock[4] = sub_10003C214;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_10014D380;
  objc_super v15 = _Block_copy(aBlock);
  double v16 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1000357EC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsAccepted) == 1)
  {
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    sub_100035968();
  }
  else
  {
    sub_100038A04(*(void **)(a1 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsViewController), 1, 0, 0);
  }
}

uint64_t sub_1000358AC(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

void sub_1000358F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_100035968()
{
  if (v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsAccepted])
  {
    sub_100038A04(*(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController], 1, 0, 0);
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v0;
    uint64_t v2 = qword_1001827C8;
    uint64_t v8 = v0;
    if (v2 != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    char v3 = byte_100184CF8;
    if (byte_100184CF8 != 4) {
      goto LABEL_7;
    }
    static os_log_type_t.default.getter();
    char v3 = 2;
    os_log(_:dso:log:type:_:)();
    if ([self isSSRBootIntentSet])
    {
      byte_100184CF8 = 2;
LABEL_7:
      sub_100035CA4(v3);

      swift_release();

      return;
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    id v4 = [objc_allocWithZone((Class)DADiagnosticsSessionAvailability) init];
    if (qword_10018A3F8)
    {
      swift_bridgeObjectRetain();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v5 = 0;
    }
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = sub_10003C668;
    *(void *)(v6 + 24) = v1;
    aBlock[4] = sub_10003C82C;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000B2448;
    aBlock[3] = &unk_10014D790;
    uint64_t v7 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v4 checkAvailabilityWithTicketNumber:v5 timeout:0 exitWhenDone:v7 completion:30.0];
    _Block_release(v7);

    swift_release();
  }
  else
  {
    sub_1000A795C(1);
  }
}

uint64_t sub_100035CA4(char a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v1;
  aBlock[4] = sub_10003C28C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_10014D4E8;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_100035F38(char a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  id v42 = *(id *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
    case 3:
      id v15 = [self sharedInstance];
      [v15 overrideSessionModeWithMode:1];

      id v42 = [objc_allocWithZone((Class)type metadata accessor for DashboardViewController()) initWithStyle:1];
      uint64_t v16 = swift_dynamicCastClass();
      if (v16)
      {
        double v17 = *(unsigned char **)(v16 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager);
        v17[OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly] = 0;
        id v18 = v42;
        id v19 = v17;
        sub_1000F7604();

        uint64_t v20 = qword_100182748;
        id v21 = v18;
        id v42 = v21;
        if (v20 != -1)
        {
          swift_once();
          id v21 = v42;
        }
        sub_100053AE4(v21, 1, 0, 0);
      }
      else
      {
        if (qword_1001827C8 != -1) {
          swift_once();
        }
        static os_log_type_t.fault.getter();
        os_log(_:dso:log:type:_:)();
      }
      id v39 = v42;

      break;
    case 2:
      id v41 = a2;
      id v23 = [self sharedInstance];
      [v23 overrideSessionModeWithMode:2];

      if (qword_1001827A8 != -1) {
        swift_once();
      }
      long long v24 = (void *)qword_10018A3D0;
      *(void *)(qword_10018A3D0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate + 8) = &off_10014CE60;
      swift_unknownObjectWeakAssign();
      sub_10003C374(0, (unint64_t *)&qword_100182E40);
      (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchQoS.QoSClass.default(_:), v11);
      uint64_t v40 = static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v24;
      uint64_t v48 = sub_10003C298;
      uint64_t v49 = v25;
      aBlock = _NSConcreteStackBlock;
      uint64_t v45 = 1107296256;
      int v46 = sub_1000358AC;
      __int16 v47 = &unk_10014D538;
      double v26 = _Block_copy(&aBlock);
      id v27 = v24;
      static DispatchQoS.unspecified.getter();
      __int16 v43 = &_swiftEmptyArrayStorage;
      sub_10003AF78();
      sub_10003AFD0((uint64_t *)&unk_100182E50);
      sub_10003B014();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      long long v28 = (void *)v40;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v26);

      (*((void (**)(char *, uint64_t))v42 + 1))(v6, v4);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_release();
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = 0;
      id v30 = [self defaultCenter];
      id v31 = self;
      uint64_t v32 = @"com.apple.Diagnostics.deviceStateChangedNotification";
      id v33 = [v31 mainQueue];
      uint64_t v34 = swift_allocObject();
      __int16 v35 = v41;
      *(void *)(v34 + 16) = v29;
      *(void *)(v34 + 24) = v35;
      uint64_t v48 = sub_10003C318;
      uint64_t v49 = v34;
      aBlock = _NSConcreteStackBlock;
      uint64_t v45 = 1107296256;
      int v46 = sub_10004FC1C;
      __int16 v47 = &unk_10014D5B0;
      double v36 = _Block_copy(&aBlock);
      swift_retain();
      id v37 = v35;
      swift_release();
      id v38 = [v30 addObserverForName:v32 object:0 queue:v33 usingBlock:v36];
      _Block_release(v36);

      swift_beginAccess();
      *(void *)(v29 + 16) = v38;
      swift_release();
      swift_unknownObjectRelease();
      if (qword_1001827C8 != -1) {
        swift_once();
      }
      static os_log_type_t.error.getter();
      os_log(_:dso:log:type:_:)();
      break;
    default:
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      long long v22 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      sub_100037ED4();
      break;
  }
}

uint64_t sub_100036740(char *a1)
{
  objc_sync_enter(a1);
  uint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v2)
  {
    id v3 = [v2 serialNumber];
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    sub_1000B1FFC(v4, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    static os_log_type_t.error.getter();
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    uint64_t v7 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
  }

  return objc_sync_exit(a1);
}

void sub_100036838(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (unint64_t)&v97 - v9;
  uint64_t v11 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for DispatchWorkItemFlags();
  id v15 = *(void (***)(unint64_t, uint64_t))(v122 - 8);
  __chkstk_darwin(v122);
  v121 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  v119 = (char *)&v97 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = Notification.userInfo.getter();
  if (!v19)
  {
    long long v127 = 0u;
    long long aBlock = 0u;
LABEL_14:
    sub_10003C44C((uint64_t)&aBlock, &qword_100183E70);
    return;
  }
  uint64_t v20 = v19;
  v130[3] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v130[4] = v21;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v20 + 16) && (unint64_t v22 = sub_10007D88C((uint64_t)&v131), (v23 & 1) != 0))
  {
    sub_10003C5D8(*(void *)(v20 + 56) + 32 * v22, (uint64_t)&aBlock);
  }
  else
  {
    long long v127 = 0u;
    long long aBlock = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10003C320((uint64_t)&v131);
  if (!*((void *)&v127 + 1)) {
    goto LABEL_14;
  }
  sub_10003C374(0, &qword_100183A50);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v109 = v12;
  unint64_t v110 = v11;
  v106 = v8;
  unint64_t v24 = v131;
  id v25 = [(id)v131 snapshot];
  if ([v25 phase] != (id)1)
  {
    id v102 = v25;
    id v32 = [v25 errors];
    sub_10003AFD0(&qword_100185690);
    uint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v34 = sub_1000B1C94(v33);
    swift_bridgeObjectRelease();
    __int16 v35 = (uint64_t *)&a3[OBJC_IVAR____TtC11Diagnostics19SetupViewController_onScreenErrors];
    swift_beginAccess();
    v115 = v35;
    uint64_t v36 = *v35;
    if ((v36 & 0xC000000000000001) != 0)
    {
      if (v36 < 0) {
        uint64_t v37 = v36;
      }
      else {
        uint64_t v37 = v36 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v38 = __CocoaSet.count.getter();
      Swift::Int v39 = sub_1000B7758(v37, v38);
      swift_bridgeObjectRelease();
      uint64_t v36 = v39;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    id v103 = (id)v24;
    uint64_t v42 = (uint64_t)sub_1000B4E44((uint64_t)v34, v36);
    unint64_t v131 = (unint64_t)v34;
    uint64_t v43 = swift_bridgeObjectRetain();
    sub_1000CB18C(v43);
    unint64_t v123 = v131;
    if (v131 >> 62)
    {
LABEL_108:
      swift_bridgeObjectRetain();
      uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v44 = *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v45 = v115;
    if (!v44)
    {
LABEL_100:

      swift_bridgeObjectRelease();
      swift_release();

      return;
    }
    unint64_t v24 = 0;
    uint64_t v112 = 0;
    unint64_t v116 = v123 + 32;
    uint64_t v118 = v42 + 56;
    v100 = &v127;
    v99 = v15 + 1;
    v98 = (void (**)(char *, uint64_t))(v17 + 8);
    v105 = (void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v109 + 56);
    v104 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))(v109 + 48);
    v111 = v132;
    long long v117 = xmmword_100123B50;
    unint64_t v108 = v10;
    v107 = v14;
    id v14 = (char *)(v42 & 0xC000000000000001);
    id v15 = (void (**)(unint64_t, uint64_t))(v123 & 0xC000000000000001);
    uint64_t v124 = v42;
    unint64_t v114 = v123 & 0xC000000000000001;
    unint64_t v113 = v42 & 0xC000000000000001;
    uint64_t v125 = v44;
    while (1)
    {
      if (v15) {
        uint64_t v49 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v49 = (char *)*(id *)(v116 + 8 * v24);
      }
      id v31 = v49;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
        goto LABEL_108;
      }
      id v51 = [v49 code];
      if (v51 == (id)3)
      {
        sub_10003C374(0, (unint64_t *)&unk_100185900);
        if (v14)
        {
          uint64_t v52 = v31;
          uint64_t v17 = __CocoaSet.contains(_:)();

          if (v17) {
            goto LABEL_40;
          }
        }
        else if (*(void *)(v42 + 16))
        {
          Swift::Int v61 = NSObject._rawHashValue(seed:)(*(void *)(v42 + 40));
          uint64_t v62 = v42;
          uint64_t v42 = -1 << *(unsigned char *)(v42 + 32);
          unint64_t v10 = v61 & ~v42;
          if ((*(void *)(v118 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
          {
            uint64_t v17 = (uint64_t)*(id *)(*(void *)(v62 + 48) + 8 * v10);
            char v63 = static NSObject.== infix(_:_:)();

            if (v63)
            {
LABEL_40:
              if (qword_10018A3C8)
              {
                uint64_t v53 = qword_100182828;
                unint64_t v10 = (unint64_t)(id)qword_10018A3C8;
                if (v53 != -1) {
                  swift_once();
                }
                uint64_t v17 = type metadata accessor for ModalPresentationCoordinator(0);
                uint64_t v54 = sub_10003C3B0(v17, (uint64_t)qword_10018A440);
                swift_beginAccess();
                id v55 = (void *)qword_100183500;
                if (qword_100183500)
                {
                  type metadata accessor for SelfServiceDestinationPickerViewController();
                  if (!swift_dynamicCastClass())
                  {
                    id v77 = v55;
                    goto LABEL_81;
                  }
                }
                if (qword_100182750 != -1) {
                  swift_once();
                }
                id v56 = [(id)qword_10018A380 viewControllers];
                sub_10003C374(0, (unint64_t *)&qword_100183670);
                unint64_t v57 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

                if (v57 >> 62)
                {
                  swift_bridgeObjectRetain();
                  id v15 = (void (**)(unint64_t, uint64_t))_CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                  if (!v15) {
                    goto LABEL_78;
                  }
LABEL_49:
                  v58 = (char *)v15 - 1;
                  if (__OFSUB__(v15, 1)) {
                    goto LABEL_105;
                  }
                  if ((v57 & 0xC000000000000001) != 0)
                  {
                    id v59 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if (((unint64_t)v58 & 0x8000000000000000) != 0) {
                      goto LABEL_106;
                    }
                    if ((unint64_t)v58 >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                      goto LABEL_107;
                    }
                    id v59 = *(id *)(v57 + 8 * (void)v58 + 32);
                  }
                  v60 = v59;
                  swift_bridgeObjectRelease();
                }
                else
                {
                  id v15 = *(void (***)(unint64_t, uint64_t))((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  if (v15) {
                    goto LABEL_49;
                  }
LABEL_78:
                  swift_bridgeObjectRelease();
                  if (qword_100182748 != -1) {
                    swift_once();
                  }
                  id v77 = (id)qword_10018A370;
LABEL_81:
                  v60 = v77;
                }
                id v15 = (void (**)(unint64_t, uint64_t))[v60 presentedViewController];

                uint64_t v42 = v108;
                id v14 = v107;
                if (v15)
                {
                  sub_10003C374(0, &qword_100185910);
                  if (static NSObject.== infix(_:_:)())
                  {
                    sub_10003C374(0, (unint64_t *)&qword_100182E40);
                    v78 = (void *)static OS_dispatch_queue.main.getter();
                    uint64_t v79 = swift_allocObject();
                    *(void *)(v79 + 16) = 0;
                    *(unsigned char *)(v79 + 24) = 1;
                    *(void *)(v79 + 32) = v10;
                    *(unsigned char *)(v79 + 40) = 1;
                    *(void *)(v79 + 48) = 0;
                    *(void *)(v79 + 56) = 0;
                    v128 = sub_10003C5B0;
                    uint64_t v129 = v79;
                    *(void *)&long long aBlock = _NSConcreteStackBlock;
                    *((void *)&aBlock + 1) = 1107296256;
                    *(void *)&long long v127 = sub_1000358AC;
                    *((void *)&v127 + 1) = &unk_10014D600;
                    v80 = _Block_copy(&aBlock);
                    id v81 = (id)v10;
                    swift_release();
                    v82 = v119;
                    static DispatchQoS.unspecified.getter();
                    *(void *)&long long aBlock = &_swiftEmptyArrayStorage;
                    sub_10003AF78();
                    sub_10003AFD0((uint64_t *)&unk_100182E50);
                    sub_10003B014();
                    unint64_t v101 = v10;
                    unint64_t v10 = (unint64_t)v121;
                    uint64_t v83 = v122;
                    dispatch thunk of SetAlgebra.init<A>(_:)();
                    OS_dispatch_queue.async(group:qos:flags:execute:)();
                    _Block_release(v80);

                    uint64_t v45 = v115;
                    uint64_t v17 = v101;
                    (*v99)(v10, v83);
                    (*v98)(v82, v120);
                    goto LABEL_97;
                  }
                }
                uint64_t v29 = v54 + *(int *)(v17 + 24);
                uint64_t v17 = (uint64_t)(id)v10;
                uint64_t v84 = swift_bridgeObjectRetain();
                uint64_t v85 = v112;
                uint64_t v86 = sub_1000DC28C(v84, (void *)v17);
                uint64_t v112 = v85;

                uint64_t v87 = sub_1000DB64C(v86);
                if (v89)
                {
                  __break(1u);
                  return;
                }
                uint64_t v45 = v115;
                if (*(_DWORD *)(v86 + 36) != v88) {
                  goto LABEL_104;
                }
                uint64_t v90 = 1 << *(unsigned char *)(v86 + 32);
                if (v87 == v90)
                {
                  uint64_t v17 = v10;
                  uint64_t v91 = 1;
                }
                else
                {
                  if (v87 < 0 || v87 >= v90)
                  {
                    __break(1u);
LABEL_110:
                    __break(1u);
LABEL_111:
                    swift_once();
LABEL_22:
                    static os_log_type_t.default.getter();
                    os_log(_:dso:log:type:_:)();
                    id v40 = [objc_allocWithZone((Class)DADiagnosticsSessionAvailability) init];
                    if (qword_10018A3F8)
                    {
                      swift_bridgeObjectRetain();
                      NSString v41 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      NSString v41 = 0;
                    }
                    uint64_t v95 = swift_allocObject();
                    *(void *)(v95 + 16) = sub_10003C5C8;
                    *(void *)(v95 + 24) = v29;
                    v132[3] = sub_10003C5D0;
                    v132[4] = v95;
                    unint64_t v131 = (unint64_t)_NSConcreteStackBlock;
                    v132[0] = 1107296256;
                    v132[1] = sub_1000B2448;
                    v132[2] = &unk_10014D678;
                    v96 = _Block_copy(&v131);
                    swift_retain();
                    swift_release();
                    [v40 checkAvailabilityWithTicketNumber:v41 timeout:0 exitWhenDone:v96 completion:30.0];
                    _Block_release(v96);

                    swift_release();
                    return;
                  }
                  if (((*(void *)(v86 + 8 * ((unint64_t)v87 >> 6) + 56) >> v87) & 1) == 0) {
                    goto LABEL_110;
                  }
                  uint64_t v17 = v10;
                  sub_10003C3E8(*(void *)(v86 + 48) + *(void *)(v109 + 72) * v87, v42);
                  uint64_t v91 = 0;
                }
                unint64_t v10 = v110;
                (*v105)(v42, v91, 1, v110);
                swift_release();
                if ((*v104)(v42, 1, v10) == 1)
                {
                  sub_10003C44C(v42, (uint64_t *)&unk_100182FD0);
                }
                else
                {
                  sub_10003C4A8(v42, (uint64_t)v14);
                  uint64_t v92 = (uint64_t)v106;
                  sub_1000B7DBC((uint64_t)v14, (uint64_t)v106);
                  sub_10003C44C(v92, (uint64_t *)&unk_100182FD0);
                  sub_10003C50C((uint64_t)v14);
                }
LABEL_97:
                uint64_t v48 = (void *)v125;
                swift_endAccess();
                v93 = (void *)qword_10018A3C8;
                qword_10018A3C8 = 0;

                uint64_t v42 = v124;
                id v15 = (void (**)(unint64_t, uint64_t))v114;
                id v14 = (char *)v113;
              }
              else
              {
                uint64_t v42 = v124;
                uint64_t v48 = (void *)v125;
              }
              swift_beginAccess();
              v94 = (void *)sub_1000B8198(v31);
              swift_endAccess();

              goto LABEL_32;
            }
            uint64_t v42 = ~v42;
            while (1)
            {
              unint64_t v10 = (v10 + 1) & v42;
              if (((*(void *)(v118 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
                break;
              }
              uint64_t v17 = (uint64_t)*(id *)(*(void *)(v124 + 48) + 8 * v10);
              char v64 = static NSObject.== infix(_:_:)();

              if (v64) {
                goto LABEL_40;
              }
            }
          }
        }
        uint64_t v17 = *v45;
        if ((*v45 & 0xC000000000000001) != 0)
        {
          v65 = v31;
          swift_bridgeObjectRetain();
          char v66 = __CocoaSet.contains(_:)();
          swift_bridgeObjectRelease();

          uint64_t v42 = v124;
          if (v66)
          {

            goto LABEL_31;
          }
        }
        else if (*(void *)(v17 + 16))
        {
          Swift::Int v67 = *(void *)(v17 + 40);
          swift_bridgeObjectRetain();
          Swift::Int v68 = NSObject._rawHashValue(seed:)(v67);
          uint64_t v69 = -1 << *(unsigned char *)(v17 + 32);
          unint64_t v10 = v68 & ~v69;
          if ((*(void *)(v17 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
          {
            id v70 = *(id *)(*(void *)(v17 + 48) + 8 * v10);
            char v71 = static NSObject.== infix(_:_:)();

            if (v71)
            {
LABEL_71:

              swift_bridgeObjectRelease();
              uint64_t v42 = v124;
              uint64_t v48 = (void *)v125;
              id v15 = (void (**)(unint64_t, uint64_t))v114;
              id v14 = (char *)v113;
              goto LABEL_32;
            }
            uint64_t v72 = ~v69;
            while (1)
            {
              unint64_t v10 = (v10 + 1) & v72;
              if (((*(void *)(v17 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
                break;
              }
              id v73 = *(id *)(*(void *)(v17 + 48) + 8 * v10);
              char v74 = static NSObject.== infix(_:_:)();

              if (v74) {
                goto LABEL_71;
              }
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v42 = v124;
          id v15 = (void (**)(unint64_t, uint64_t))v114;
          id v14 = (char *)v113;
        }
        else
        {
          uint64_t v42 = v124;
        }
        swift_beginAccess();
        id v31 = v31;
        sub_1000B898C(v130, v31);
        v75 = (void *)v130[0];
        swift_endAccess();

        unint64_t v131 = 1;
        v76 = v111;
        _OWORD *v111 = 0u;
        v76[1] = 0u;
        *((void *)v76 + 4) = 0;
        char v133 = 2;
        sub_100070524(0);
      }
      else
      {
        id v46 = v51;
        static os_log_type_t.error.getter();
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = v117;
        *(void *)(v17 + 56) = &type metadata for Int;
        *(void *)(v17 + 64) = &protocol witness table for Int;
        *(void *)(v17 + 32) = v46;
        sub_10003C374(0, (unint64_t *)&qword_1001832C0);
        __int16 v47 = (void *)static OS_os_log.default.getter();
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
      }
LABEL_31:
      uint64_t v48 = (void *)v125;
LABEL_32:
      if ((void *)v24 == v48) {
        goto LABEL_100;
      }
    }
  }
  uint64_t v17 = (uint64_t)v25;
  swift_beginAccess();
  uint64_t v26 = *(void *)(a2 + 16);
  if (v26)
  {
    id v27 = self;
    swift_unknownObjectRetain();
    id v28 = [v27 defaultCenter];
    [v28 removeObserver:v26];
    swift_unknownObjectRelease();
  }
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a3;
  id v30 = self;
  id v31 = a3;
  if (![v30 isSSRBootIntentSet])
  {
    if (qword_1001827C8 != -1) {
      goto LABEL_111;
    }
    goto LABEL_22;
  }
  byte_100184CF8 = 2;
  sub_100037AAC(2, v31);

  swift_release();
}

uint64_t sub_100037AAC(char a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  aBlock[4] = sub_10003C634;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_10014D6C8;
  id v14 = _Block_copy(aBlock);
  id v15 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_100037D40(char a1)
{
  if (a1 == 1)
  {
    uint64_t v1 = sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001CLL, (void *)0x8000000100129640);
    uint64_t v3 = v2;
    uint64_t v4 = sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x8000000100129660);
    sub_10003AA00(v1, v3, v4, v5, (uint64_t)sub_100037E78, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100182748 != -1) {
      swift_once();
    }
    sub_100053E48(4, 1);
  }
}

void sub_100037E78()
{
  if (qword_100182748 != -1) {
    swift_once();
  }

  sub_100053E48(4, 1);
}

uint64_t sub_100037ED4()
{
  return sub_100038190((uint64_t)&unk_10014D3B8, (uint64_t)sub_10003C21C, (uint64_t)&unk_10014D3D0);
}

void sub_100037EFC(char *a1)
{
  id v2 = sub_1000346E8();
  sub_100038A04(v2, 1, 0, 0);

  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer;
  if (*(void *)&a1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer])
  {
    uint64_t v5 = a1;
    swift_release();
  }
  else
  {
    uint64_t v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_10003C224;
    *(void *)(v7 + 24) = v3;
    void v12[4] = sub_10003C6F0;
    v12[5] = v7;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100046950;
    v12[3] = &unk_10014D448;
    uint64_t v8 = _Block_copy(v12);
    uint64_t v9 = a1;
    swift_retain();
    swift_release();
    id v10 = [v6 scheduledTimerWithTimeInterval:1 repeats:v8 block:5.0];
    _Block_release(v8);
    uint64_t v11 = *(void **)&a1[v4];
    *(void *)&a1[v4] = v10;
    swift_release();
  }
}

uint64_t sub_1000380A4(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = &_swiftEmptyArrayStorage;
  v3[3] = sub_10003C22C;
  v3[4] = v2;
  void v3[5] = a1;
  id v4 = a1;
  swift_retain();
  sub_10009A6C4((uint64_t)sub_10003C6F8, (uint64_t)v3);
  swift_release();

  return swift_release();
}

uint64_t sub_100038168()
{
  return sub_100038190((uint64_t)&unk_10014D1D8, (uint64_t)sub_10003C14C, (uint64_t)&unk_10014D1F0);
}

uint64_t sub_100038190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v3;
  aBlock[4] = a2;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = v17;
  id v14 = _Block_copy(aBlock);
  id v15 = v3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

void sub_100038410(char *a1)
{
  id v2 = sub_10003479C();
  sub_100038A04(v2, 1, 0, 0);

  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer;
  if (*(void *)&a1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer])
  {
    uint64_t v5 = a1;
    swift_release();
  }
  else
  {
    uint64_t v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_10003C154;
    *(void *)(v7 + 24) = v3;
    void v12[4] = sub_10003C6F0;
    v12[5] = v7;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100046950;
    v12[3] = &unk_10014D268;
    uint64_t v8 = _Block_copy(v12);
    uint64_t v9 = a1;
    swift_retain();
    swift_release();
    id v10 = [v6 scheduledTimerWithTimeInterval:1 repeats:v8 block:5.0];
    _Block_release(v8);
    uint64_t v11 = *(void **)&a1[v4];
    *(void *)&a1[v4] = v10;
    swift_release();
  }
}

uint64_t sub_1000385B8(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = &off_10014C630;
  v3[3] = sub_10003C1CC;
  v3[4] = v2;
  void v3[5] = a1;
  id v4 = a1;
  swift_retain();
  sub_10009A6C4((uint64_t)sub_10003C1F4, (uint64_t)v3);
  swift_release();

  return swift_release();
}

uint64_t sub_10003867C()
{
  return sub_100038190((uint64_t)&unk_10014D188, (uint64_t)sub_10003C144, (uint64_t)&unk_10014D1A0);
}

void sub_1000386A4()
{
  id v0 = sub_100034708();
  sub_100038A04(v0, 1, 0, 0);
}

void sub_1000386F8()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for SetupViewController();
  [super applicationWillSuspend];
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer];
  if (v2)
  {
    id v3 = v2;
    [v3 invalidate];
    id v4 = *(void **)&v0[v1];
    *(void *)&v0[v1] = 0;
  }
}

void sub_1000387B8()
{
  uint64_t v1 = v0;
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for SetupViewController();
  [super applicationDidResume];
  sub_10003C374(0, &qword_100185910);
  uint64_t v2 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController;
  id v3 = *(id *)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController];
  id v4 = sub_1000346E8();
  char v5 = static NSObject.== infix(_:_:)();

  if ((v5 & 1) != 0
    || (id v6 = *(id *)&v1[v2],
        id v7 = sub_10003479C(),
        char v8 = static NSObject.== infix(_:_:)(),
        v6,
        v7,
        (v8 & 1) != 0))
  {
    uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController];
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v1;
    uint64_t v11 = v1;
    sub_100038A04(v9, 1, (void (*)(uint64_t))sub_10003C68C, v10);
    swift_release();
  }
}

uint64_t sub_1000388F8(uint64_t a1, void *a2)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a2;
  id v4 = (void *)swift_allocObject();
  v4[2] = &_swiftEmptyArrayStorage;
  v4[3] = sub_10003C75C;
  void v4[4] = v3;
  v4[5] = a2;
  id v5 = a2;
  swift_retain();
  sub_10009A6C4((uint64_t)sub_10003C6F8, (uint64_t)v4);
  swift_release();

  return swift_release();
}

void sub_100038A04(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4)
{
  id v5 = v4;
  uint64_t v10 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController;
  uint64_t v11 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics19SetupViewController_currentViewController];
  sub_10003C374(0, (unint64_t *)&qword_100183670);
  id v41 = v11;
  if ((static NSObject.== infix(_:_:)() & 1) == 0)
  {
    id v12 = [v41 parentViewController];
    if (!v12
      || (uint64_t v13 = v12,
          id v14 = v4,
          id v15 = v13,
          char v16 = static NSObject.== infix(_:_:)(),
          v15,
          v15,
          v14,
          (v16 & 1) == 0))
    {
      [v5 addChildViewController:v41];
    }
    id v17 = [a1 view];
    if (v17)
    {
      uint64_t v18 = v17;
      [v17 setAlpha:0.0];

      uint64_t v19 = *(void **)&v5[v10];
      *(void *)&v5[v10] = a1;
      id v20 = a1;

      [v41 willMoveToParentViewController:0];
      [v5 addChildViewController:v20];
      id v21 = [v20 view];
      if (v21)
      {
        unint64_t v22 = v21;
        id v23 = [v5 view];
        if (v23)
        {
          unint64_t v24 = v23;
          [v23 bounds];
          double v26 = v25;
          double v28 = v27;
          double v30 = v29;
          double v32 = v31;

          [v22 setFrame:v26, v28, v30, v32];
          id v33 = [v20 view];
          if (v33)
          {
            uint64_t v34 = v33;
            [v33 setAutoresizingMask:18];

            if (a2) {
              double v35 = 0.375;
            }
            else {
              double v35 = 0.0;
            }
            uint64_t v36 = (void *)swift_allocObject();
            v36[2] = v20;
            v36[3] = v41;
            v36[4] = v5;
            v36[5] = a3;
            v36[6] = a4;
            aBlock[4] = sub_10003C134;
            aBlock[5] = v36;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1000E7710;
            aBlock[3] = &unk_10014D100;
            uint64_t v37 = _Block_copy(aBlock);
            id v38 = v41;
            Swift::Int v39 = v5;
            id v40 = v20;
            sub_10003AF68((uint64_t)a3);
            swift_release();
            [v39 transitionFromViewController:v38 toViewController:v40 duration:5242880 options:0 animations:v37 completion:v35];
            _Block_release(v37);

            return;
          }
LABEL_21:
          __break(1u);
          return;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  if (a3) {
    a3(1);
  }
}

id sub_100038D84(char a1, id a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  id result = [a2 view];
  if (result)
  {
    id v11 = result;
    [result alpha];
    if (v12 == 0.0)
    {
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v11;
      aBlock[4] = sub_10003C7E8;
      aBlock[5] = v13;
      id v16 = self;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000358AC;
      aBlock[3] = &unk_10014D150;
      id v14 = _Block_copy(aBlock);
      id v15 = v11;
      swift_retain();
      swift_release();
      [v16 animateWithDuration:0x10000 delay:v14 options:0 animations:0.375 completion:0.0];
      _Block_release(v14);

      swift_release();
    }
    else
    {
    }
    [a3 removeFromParentViewController];
    id result = [a2 didMoveToParentViewController:a4];
    if (a5) {
      return (id)a5(a1 & 1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100038F88()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___noSessionNavigationController));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___diagnosticsCompletedNavigationController));
  swift_bridgeObjectRelease();

  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer);
}

id sub_100039028()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SetupViewController();
  [super dealloc];
}

uint64_t type metadata accessor for SetupViewController()
{
  return self;
}

unsigned char *initializeBufferWithCopyOfBuffer for ExitReason(unsigned char *result, unsigned char *a2)
{
  *id result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SetupViewController.EntryReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SetupViewController.EntryReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *id result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100039294);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_1000392BC(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1000392C8(unsigned char *result, char a2)
{
  *id result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SetupViewController.EntryReason()
{
  return &type metadata for SetupViewController.EntryReason;
}

unint64_t sub_1000392E4()
{
  unint64_t result = qword_100182CA8;
  if (!qword_100182CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100182CA8);
  }
  return result;
}

void sub_100039338(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  objc_allocWithZone((Class)type metadata accessor for SelfServiceSuiteInProgressViewController());
  uint64_t v10 = sub_10009D388(a1, a2);
  int v8 = (uint64_t *)&v10[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  uint64_t v9 = *(void *)&v10[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  *int v8 = a3;
  v8[1] = a4;
  sub_10003AF68(a3);
  sub_10003B0B8(v9);
  if (qword_100182748 != -1) {
    swift_once();
  }
  sub_100053AE4(v10, 1, 0, 0);
}

uint64_t sub_100039434(uint64_t a1)
{
  uint64_t v2 = sub_100045808(16, 0);
  uint64_t v3 = a1 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__presentationTransitionStyle;
  *(void *)uint64_t v3 = v2;
  *(unsigned char *)(v3 + 8) = v4 & 1;
  uint64_t result = sub_100045808(16, 0);
  uint64_t v6 = a1 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle;
  *(void *)uint64_t v6 = result;
  *(unsigned char *)(v6 + 8) = v7 & 1;
  return result;
}

void sub_10003949C(char a1, void *a2, char *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 && (a1 & 1) != 0)
  {
    id v14 = *(void **)&a3[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
    if (v14)
    {
      id v15 = &a3[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      uint64_t v16 = *((void *)v15 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v18 = (void *)swift_allocObject();
      void v18[2] = a3;
      v18[3] = v14;
      v18[4] = a2;
      uint64_t v19 = *(void (**)(char *, id, void (*)(), void *, uint64_t, uint64_t))(v16 + 48);
      id v20 = a2;
      id v21 = v14;
      id v22 = v20;
      id v30 = v21;
      v19(a3, v22, sub_10003B9D4, v18, ObjectType, v16);

      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      id v27 = a2;
      id v30 = (id)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
    }
    double v28 = v30;
  }
  else
  {
    sub_10003C374(0, (unint64_t *)&qword_100182E40);
    id v23 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = a3;
    aBlock[4] = sub_10003B984;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000358AC;
    aBlock[3] = &unk_10014D010;
    double v25 = _Block_copy(aBlock);
    double v26 = a3;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_10003AF78();
    sub_10003AFD0((uint64_t *)&unk_100182E50);
    sub_10003B014();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_1000398A4(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for SelfServiceSuitePickerViewController());
  uint64_t v5 = sub_10008EDC0(a1);
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_hidesBackButton;
  v5[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_hidesBackButton] = 1;
  id v4 = [v5 navigationItem];
  [v4 setHidesBackButton:v5[v3]];

  if (qword_100182748 != -1) {
    swift_once();
  }
  sub_100053AE4(v5, 1, 0, 0);
}

void sub_100039988(char a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_8;
  }
  uint64_t v13 = Strong;
  if (!a2 || (a1 & 1) == 0)
  {

LABEL_8:
    sub_10003C374(0, (unint64_t *)&qword_100182E40);
    uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v17 = swift_allocObject();
    swift_beginAccess();
    uint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    aBlock[4] = sub_10003B9E0;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000358AC;
    aBlock[3] = &unk_10014D060;
    uint64_t v19 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_10003AF78();
    sub_10003AFD0((uint64_t *)&unk_100182E50);
    sub_10003B014();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return;
  }
  uint64_t v14 = qword_1001827A8;
  id v15 = a2;
  if (v14 != -1) {
    swift_once();
  }
  sub_10007A134(v15);
}

void sub_100039CD0()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong navigationController];
    if (v2)
    {
      uint64_t v3 = v2;
      if (qword_1001827A8 != -1) {
        swift_once();
      }
      uint64_t v4 = (void *)qword_10018A3D0;
      id v5 = objc_allocWithZone((Class)type metadata accessor for SelfServiceSuitePickerViewController());
      id v6 = sub_10008EDC0(v4);
      id v7 = [v1 navigationController];
      if (v7)
      {
        uint64_t v8 = v7;
        [v7 pushViewController:v6 animated:1];
      }
      id v9 = v1;
      id v10 = [v3 viewControllers];
      sub_10003C374(0, (unint64_t *)&qword_100183670);
      uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v15 = v11;
      uint64_t v12 = sub_10003B9E8(&v15);

      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v13 >= v12) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v13 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v13 >= v12)
        {
LABEL_9:
          sub_10003BDB8(v12, v13);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v3 setViewControllers:isa];

          return;
        }
      }
      __break(1u);
    }
    else
    {
    }
  }
}

void sub_100039EF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_allocWithZone((Class)type metadata accessor for SelfServiceDestinationPickerViewController());
  id v8 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  id v9 = sub_1000E39A4(v8, a2, a3, a4);
  id v10 = v9;
  if (qword_100182748 != -1)
  {
    swift_once();
    id v9 = v10;
  }
  sub_100053AE4(v9, 1, 0, 0);
}

void sub_100039FD0(uint64_t a1, unint64_t a2, void (*a3)(uint64_t), unint64_t a4)
{
}

uint64_t sub_100039FE0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_10003AC0C(a2, a3, a4);
}

void *sub_100039FF4(void *a1)
{
  return sub_10009FD50(0, a1[2], 0, a1);
}

uint64_t sub_10003A008()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10003A01C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_10003A098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003A2DC(a1, a2, a3, (unint64_t *)&qword_1001831A0);
}

uint64_t sub_10003A0AC(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_10009FE60(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  unint64_t v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v17 = *(void *)(v15 + 72);
  unint64_t v18 = v16 + v17 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v5 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_33;
  }
  if (v20 < 0)
  {
LABEL_35:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v21 = v18 + v17;
  unint64_t v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v24 = *(void *)(v5 + 16);
  BOOL v25 = __OFADD__(v24, v9);
  uint64_t v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1) {
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  }
  return sub_10003C44C(a3, (uint64_t *)&unk_1001841E0);
}

uint64_t sub_10003A2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10003A2DC(a1, a2, a3, (unint64_t *)&qword_1001858F0);
}

uint64_t sub_10003A2DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    id v7 = a4;
    uint64_t v9 = a3;
    uint64_t v6 = a2;
    uint64_t v8 = a1;
    if (!(*v5 >> 62))
    {
      if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v24 < v6) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v10 = v6 - v8;
  if (__OFSUB__(v6, v8))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v4 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25 + v4;
    if (!__OFADD__(v25, v4)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v29 = v7;
  if (*v5 >> 62) {
    goto LABEL_32;
  }
  uint64_t v11 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v4;
  if (__OFADD__(v11, v4)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v13 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unint64_t v5 = v13;
  uint64_t v28 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v13 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *unint64_t v5 = v13;
      uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  unint64_t v16 = (void *)(v15 + 32 + 8 * v8);
  sub_10003C374(0, v29);
  swift_arrayDestroy();
  if (v4)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v26 - v6;
      if (!__OFSUB__(v26, v6))
      {
LABEL_17:
        if (v18 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v19 = (char *)(v16 + 1);
        uint64_t v20 = (char *)(v15 + 32 + 8 * v6);
        if (v16 + 1 != (void *)v20 || v19 >= &v20[8 * v18]) {
          memmove(v19, v20, 8 * v18);
        }
        if (!(v13 >> 62))
        {
          uint64_t v21 = *(void *)(v15 + 16);
          uint64_t v22 = v21 + v4;
          if (!__OFADD__(v21, v4))
          {
LABEL_23:
            *(void *)(v15 + 16) = v22;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v22 = v27 + v4;
        if (!__OFADD__(v27, v4)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v18 = v17 - v6;
      if (!__OFSUB__(v17, v6)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  void *v16 = v28;

  return specialized Array._endMutation()();
}

uint64_t sub_10003A5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t *v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      unint64_t *v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  type metadata accessor for CardState();
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v14 = v3;

  return specialized Array._endMutation()();
}

void sub_10003A8D0()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_transitionDuration] = 0x3FD8000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryInterval] = 0x4014000000000000;
  uint64_t v2 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_loadingViewController;
  type metadata accessor for LoadingViewController();
  *(void *)&v1[v2] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsViewController;
  id v4 = objc_allocWithZone((Class)type metadata accessor for TermsAndConditionsViewController());
  *(void *)&v1[v3] = sub_1000CBDB4();
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___noSessionNavigationController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___storageFullscreenAlertViewController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController____lazy_storage___diagnosticsCompletedNavigationController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_onScreenErrors] = &_swiftEmptySetSingleton;
  v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason] = 0;
  v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsAccepted] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics19SetupViewController_retryTimer] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10003AA00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [self alertControllerWithTitle:v8 message:v9 preferredStyle:1];

  sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0x5353494D534944, (void *)0xE700000000000000);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a6;
  swift_retain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v15[4] = sub_10003C640;
  v15[5] = v11;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100046950;
  v15[3] = &unk_10014D718;
  uint64_t v13 = _Block_copy(v15);
  swift_release();
  id v14 = [self actionWithTitle:v12 style:0 handler:v13];
  _Block_release(v13);

  [v10 addAction:v14];
  [v10 showOnTopWithAnimated:1 completion:0];
}

uint64_t sub_10003AC0C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v19 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001827A8 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_10018A3D0;
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  NSString v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v11;
  v13[3] = a1;
  void v13[4] = a2;
  v13[5] = a3;
  aBlock[4] = sub_10003AF44;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_10014CED0;
  id v14 = _Block_copy(aBlock);
  id v15 = v11;
  id v16 = a1;
  sub_10003AF68(a2);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v10, v21);
}

uint64_t sub_10003AEF4()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10003AF44()
{
  sub_100039338(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10003AF50(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10003AF60()
{
  return swift_release();
}

uint64_t sub_10003AF68(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_10003AF78()
{
  unint64_t result = qword_100183E90;
  if (!qword_100183E90)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183E90);
  }
  return result;
}

uint64_t sub_10003AFD0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_10003B014()
{
  unint64_t result = qword_100183EA0;
  if (!qword_100183EA0)
  {
    sub_10003B070((uint64_t *)&unk_100182E50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183EA0);
  }
  return result;
}

uint64_t sub_10003B070(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_10003B0B8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_10003B0C8(unint64_t a1, void (*a2)(uint64_t), unint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (char **)type metadata accessor for DispatchQoS();
  uint64_t v11 = *(v10 - 1);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001827A8 != -1) {
LABEL_41:
  }
    swift_once();
  id v14 = (char *)qword_10018A3D0;
  if ([self isSSRBootIntentSet])
  {
    id v38 = v13;
    uint64_t v39 = v7;
    uint64_t v42 = a2;
    uint64_t v43 = v11;
    uint64_t v40 = v6;
    unint64_t v41 = a3;
    uint64_t v44 = v10;
    uint64_t v45 = v14;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = (char *)_CocoaArrayWrapper.endIndex.getter();
      if (v13)
      {
LABEL_5:
        a3 = a1 & 0xC000000000000001;
        uint64_t v7 = 4;
        id v10 = &selRef_beginUpload;
        while (1)
        {
          if (a3) {
            id v15 = (void (*)(uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v15 = (void (*)(uint64_t))*(id *)(a1 + 8 * v7);
          }
          a2 = v15;
          uint64_t v6 = v7 - 3;
          if (__OFADD__(v7 - 4, 1))
          {
            __break(1u);
            goto LABEL_40;
          }
          id v16 = [v15 endpoint];

          if (v16 == (id)2) {
            break;
          }
          ++v7;
          if ((char *)v6 == v13) {
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        if (qword_100182758 != -1) {
          swift_once();
        }
        type metadata accessor for DKViewControllerDelegateResponder();
        uint64_t v27 = swift_dynamicCastClass();
        uint64_t v28 = v42;
        uint64_t v29 = v45;
        if (v27)
        {
          uint64_t v30 = v27;
          sub_10003C374(0, (unint64_t *)&qword_100182E40);
          swift_unknownObjectRetain();
          uint64_t v46 = static OS_dispatch_queue.main.getter();
          uint64_t v31 = swift_allocObject();
          *(void *)(v31 + 16) = v30;
          id v51 = sub_10003B97C;
          uint64_t v52 = (void *)v31;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v48 = 1107296256;
          uint64_t v49 = sub_1000358AC;
          char v50 = &unk_10014CFC0;
          double v32 = _Block_copy(&aBlock);
          swift_unknownObjectRetain();
          swift_release();
          id v33 = v38;
          static DispatchQoS.unspecified.getter();
          long long aBlock = (void **)&_swiftEmptyArrayStorage;
          sub_10003AF78();
          sub_10003AFD0((uint64_t *)&unk_100182E50);
          sub_10003B014();
          uint64_t v34 = v40;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          double v35 = (void *)v46;
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v32);
          swift_unknownObjectRelease();

          (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v34);
          (*((void (**)(char *, char **))v43 + 1))(v33, v44);
          uint64_t v28 = v42;
        }
        v28(2);
        *(void *)(swift_allocObject() + 16) = v29;
        id v36 = v29;
        sub_10007B0E0(2, (void (*)(uint64_t, id))sub_10003B974);
        swift_release();
        return;
      }
    }
    else
    {
      uint64_t v13 = *(char **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13) {
        goto LABEL_5;
      }
    }
LABEL_12:
    swift_bridgeObjectRelease();
    v42(0);
    uint64_t v17 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
    uint64_t v18 = v45;
    [*(id *)&v45[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState] resetState];
    uint64_t v19 = *(void **)&v18[v17];
    if (v19) {
      [v19 setPhase:0];
    }
    sub_100035968();
    return;
  }
  if (*(unsigned char *)(v46 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) != 5)
  {
    sub_10003C374(0, (unint64_t *)&qword_100182E40);
    uint64_t v43 = v11;
    uint64_t v22 = static OS_dispatch_queue.main.getter();
    uint64_t v44 = v10;
    uint64_t v23 = (void *)v22;
    uint64_t v24 = (void *)swift_allocObject();
    void v24[2] = v14;
    v24[3] = a1;
    void v24[4] = a2;
    v24[5] = a3;
    id v51 = sub_10003B928;
    uint64_t v52 = v24;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v48 = 1107296256;
    uint64_t v49 = sub_1000358AC;
    char v50 = &unk_10014CF20;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    uint64_t v26 = v14;
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)&_swiftEmptyArrayStorage;
    sub_10003AF78();
    sub_10003AFD0((uint64_t *)&unk_100182E50);
    sub_10003B014();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*((void (**)(char *, char **))v43 + 1))(v13, v44);
    return;
  }
  uint64_t v45 = v14;
  id v10 = (char **)a2;
  uint64_t v13 = (char *)a3;
  if (!(a1 >> 62))
  {
    uint64_t v9 = *(char **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_20;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    sub_100037ED4();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = (char *)_CocoaArrayWrapper.endIndex.getter();
  if (!v9) {
    goto LABEL_27;
  }
LABEL_20:
  a3 = a1 & 0xC000000000000001;
  uint64_t v6 = 4;
  uint64_t v7 = (uint64_t)&selRef_beginUpload;
  while (1)
  {
    if (a3) {
      uint64_t v20 = (void (*)(uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v20 = (void (*)(uint64_t))*(id *)(a1 + 8 * v6);
    }
    a2 = v20;
    uint64_t v11 = (char *)(v6 - 3);
    if (__OFADD__(v6 - 4, 1))
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    id v21 = [v20 endpoint];

    if (v21 == (id)1) {
      break;
    }
    ++v6;
    if (v11 == v9) {
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t))v10)(1);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10007B0E0(1, (void (*)(uint64_t, id))sub_10003B96C);

  swift_release();
}

uint64_t sub_10003B8E0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10003B928()
{
  sub_100039EF0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10003B934()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10003B96C(char a1, void *a2)
{
}

void sub_10003B974(char a1, void *a2)
{
  sub_10003949C(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_10003B97C()
{
  return sub_100039434(*(void *)(v0 + 16));
}

void sub_10003B984()
{
  sub_1000398A4(*(void **)(v0 + 16));
}

uint64_t sub_10003B98C()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10003B9D4()
{
  sub_10007A2C8(*(char **)(v0 + 16), *(id *)(v0 + 24), *(void *)(v0 + 32));
}

void sub_10003B9E0()
{
}

uint64_t sub_10003B9E8(unint64_t *a1)
{
  unint64_t v2 = *a1;
  if (*a1 >> 62) {
    goto LABEL_62;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
LABEL_3:
    sub_10003C374(0, &qword_100185910);
    unint64_t v4 = 0;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v2 + 8 * v4 + 32);
      uint64_t v6 = v5;
      char v7 = static NSObject.== infix(_:_:)();

      if (v7) {
        break;
      }
      unint64_t v8 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        if (!v3) {
          goto LABEL_10;
        }
        goto LABEL_3;
      }
      ++v4;
      if (v8 == v3) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else if (!(*a1 >> 62))
    {
      if (v10 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_16:
        for (unint64_t i = v4 + 5; ; ++i)
        {
          unint64_t v2 = i - 4;
          unint64_t v12 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_52;
            }
            if (v2 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_53;
            }
            id v13 = *(id *)(v12 + 8 * i);
          }
          id v14 = v13;
          char v15 = static NSObject.== infix(_:_:)();

          if (v15) {
            goto LABEL_42;
          }
          if (v2 != v4) {
            break;
          }
LABEL_41:
          if (__OFADD__(v4++, 1)) {
            goto LABEL_55;
          }
LABEL_42:
          unint64_t v26 = i - 3;
          if (__OFADD__(v2, 1)) {
            goto LABEL_54;
          }
          if (*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v27 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v26 == v27) {
            return v4;
          }
        }
        unint64_t v16 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v16 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_27:
            if ((v2 & 0x8000000000000000) != 0) {
              goto LABEL_58;
            }
            if (v2 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_59;
            }
            id v18 = *(id *)(v16 + 8 * i);
            goto LABEL_30;
          }
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0) {
            goto LABEL_56;
          }
          if (v4 >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_57;
          }
          id v17 = *(id *)(v16 + 8 * v4 + 32);
          if ((v16 & 0xC000000000000001) == 0) {
            goto LABEL_27;
          }
        }
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v16 = *a1;
LABEL_30:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v16;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v16 & 0x8000000000000000) != 0
          || (v16 & 0x4000000000000000) != 0)
        {
          unint64_t v16 = sub_10003A01C(v16);
          *a1 = v16;
        }
        uint64_t v20 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20);
        *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v18;

        specialized Array._endMutation()();
        unint64_t v21 = *a1;
        int v22 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v21;
        if (!v22 || (v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
        {
          unint64_t v21 = sub_10003A01C(v21);
          *a1 = v21;
        }
        if ((v2 & 0x8000000000000000) != 0) {
          goto LABEL_60;
        }
        uint64_t v23 = v21 & 0xFFFFFFFFFFFFFF8;
        if (v2 >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_61;
        }
        uint64_t v24 = *(void **)(v23 + 8 * i);
        *(void *)(v23 + 8 * i) = v17;

        specialized Array._endMutation()();
        goto LABEL_41;
      }
      return v4;
    }
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 != v29) {
      goto LABEL_16;
    }
    return v4;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if (!(*a1 >> 62)) {
    return *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_10003BDB8(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v21 + v5;
    if (!__OFADD__(v21, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      *uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v12 = v11 + 32;
  id v13 = (char *)(v11 + 32 + 8 * v4);
  sub_10003C374(0, (unint64_t *)&qword_100183670);
  swift_arrayDestroy();
  if (v5)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        unint64_t v16 = (char *)(v12 + 8 * v2);
        if (v4 != v2 || v13 >= &v16[8 * v15]) {
          memmove(v13, v16, 8 * v15);
        }
        if (!((unint64_t)*v3 >> 62))
        {
          uint64_t v17 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v18 = v17 + v5;
          if (!__OFADD__(v17, v5))
          {
LABEL_23:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v15 = v14 - v2;
      if (!__OFSUB__(v14, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

id sub_10003C0D4()
{
  return sub_1000571A8(*(void **)(v0 + 16));
}

uint64_t sub_10003C0DC()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

id sub_10003C134(char a1)
{
  return sub_100038D84(a1, *(id *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(uint64_t (**)(void))(v1 + 40));
}

void sub_10003C144()
{
}

void sub_10003C14C()
{
  sub_100038410(*(char **)(v0 + 16));
}

uint64_t sub_10003C154()
{
  return sub_1000385B8(*(void **)(v0 + 16));
}

uint64_t sub_10003C15C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003C194()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003C1CC()
{
  return sub_100038168();
}

uint64_t sub_10003C1F4(uint64_t a1)
{
  return sub_1000352A8(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(void *)(v1 + 32), *(char **)(v1 + 40));
}

void sub_10003C200(char a1)
{
  sub_1000353CC(a1 & 1, *(void **)(v1 + 16));
}

uint64_t sub_10003C20C(char a1, uint64_t a2)
{
  return sub_1000354C0(a1, a2, *(char **)(v2 + 16));
}

void sub_10003C214()
{
  sub_1000357EC(*(void *)(v0 + 16));
}

void sub_10003C21C()
{
  sub_100037EFC(*(char **)(v0 + 16));
}

uint64_t sub_10003C224()
{
  return sub_1000380A4(*(void **)(v0 + 16));
}

uint64_t sub_10003C22C()
{
  return sub_100037ED4();
}

uint64_t sub_10003C254()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10003C28C()
{
  sub_100035F38(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10003C298()
{
  return sub_100036740(*(char **)(v0 + 16));
}

uint64_t sub_10003C2A0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10003C2D8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10003C318(uint64_t a1)
{
  sub_100036838(a1, *(void *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_10003C320(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003C374(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_10003C3B0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10003C3E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003C44C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10003AFD0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10003C4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003C50C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003C568()
{
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10003C5B0()
{
  sub_1000DA54C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(id *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10003C5C8(char a1)
{
  return sub_100037AAC(a1, *(void **)(v1 + 16));
}

uint64_t sub_10003C5D0(char a1, char a2)
{
  return sub_10009AED0(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_10003C5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_10003C634()
{
  sub_100037D40(*(unsigned char *)(v0 + 16));
}

uint64_t sub_10003C640()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10003C668(char a1)
{
  return sub_100035CA4(a1);
}

uint64_t sub_10003C68C(uint64_t a1)
{
  return sub_1000388F8(a1, *(void **)(v1 + 16));
}

uint64_t sub_10003C698(uint64_t a1)
{
  return sub_10003504C(a1, *(void **)(v1 + 16));
}

uint64_t sub_10003C6A8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

BOOL sub_10003C830(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10003C844(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

void *sub_10003C858(void *result)
{
  *v1 &= ~*result;
  return result;
}

Swift::Int sub_10003C86C()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10003C8B4()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10003C8E0()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void *sub_10003C924@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

void sub_10003C9C4()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for DeviceInformationView();
  [super tintColorDidChange];
  id v1 = [v0 tintAdjustmentMode];
  BOOL v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton];
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  if (v1 == (id)2)
  {
    id v3 = sub_1000ADAE8((uint64_t)v9, 3uLL);
    [v2 setImage:v3 forState:0];

    uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton];
    unint64_t v5 = 1;
  }
  else
  {
    id v6 = sub_1000ADAE8((uint64_t)v9, 2uLL);
    [v2 setImage:v6 forState:0];

    uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton];
    unint64_t v5 = 0;
  }
  id v7 = sub_1000ADAE8((uint64_t)v9, v5);
  [v4 setImage:v7 forState:0];
}

void sub_10003CB30()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_state];
  if (!v1) {
    return;
  }
  BOOL v2 = v0;
  uint64_t v3 = swift_retain();
  sub_10005A3AC(v3, v2);

  id v4 = [*(id *)(v1 + 40) serialNumber];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  objc_super v8 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_serialNumber];
  *objc_super v8 = v5;
  v8[1] = v7;
  swift_bridgeObjectRelease();
  unint64_t v9 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel];
  if (v8[1])
  {
    swift_bridgeObjectRetain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  [v9 setText:v10];

  id v11 = [*(id *)(v1 + 40) attributes];
  sub_10003AFD0((uint64_t *)&unk_100182E10);
  uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v12 + 16))
  {
    sub_10007D7FC(v13, v14);
    if (v15)
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_15;
      }
      id v16 = [*(id *)(v1 + 40) attributes];
      uint64_t v17 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (*(void *)(v17 + 16))
      {
        sub_10007D7FC(v18, v19);
        if (v20)
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (swift_dynamicCast())
          {
            uint64_t v21 = sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)aBlock, (void *)v61);
            uint64_t v23 = v22;
            swift_bridgeObjectRelease();
            uint64_t v24 = sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)aBlock, (void *)v61);
            unint64_t v26 = v25;
            swift_bridgeObjectRelease();
            sub_100041E80(v21, v23, v24, v26);
            swift_bridgeObjectRelease();
          }
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
LABEL_14:
  swift_bridgeObjectRelease();
LABEL_15:
  id v27 = [*(id *)(v1 + 40) attributes];
  uint64_t v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v28 + 16) && (sub_10007D7FC(v29, v30), (v31 & 1) != 0))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v32 = swift_dynamicCast();
    id v33 = aBlock;
    uint64_t v34 = v61;
    if (!v32)
    {
      id v33 = 0;
      uint64_t v34 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v33 = 0;
    uint64_t v34 = 0;
  }
  double v35 = (void ***)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei];
  *double v35 = v33;
  v35[1] = (void **)v34;
  swift_bridgeObjectRelease();
  id v36 = [*(id *)(v1 + 40) attributes];
  uint64_t v37 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v37 + 16) && (sub_10007D7FC(v38, v39), (v40 & 1) != 0))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v41 = swift_dynamicCast();
    uint64_t v42 = aBlock;
    uint64_t v43 = v61;
    if (!v41)
    {
      uint64_t v42 = 0;
      uint64_t v43 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = 0;
    uint64_t v43 = 0;
  }
  uint64_t v44 = (void ***)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingName];
  uint64_t *v44 = v42;
  v44[1] = (void **)v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel];
  if (v44[1])
  {
    swift_bridgeObjectRetain();
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v46 = 0;
  }
  [v45 setText:v46];

  [v45 frame];
  [v45 setPreferredMaxLayoutWidth:v47];
  id v48 = [*(id *)(v1 + 40) sessionSettings];
  id v49 = [v48 deviceIdentifier];

  uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v51;

  sub_10003D328(v50, v52);
  id v53 = [*(id *)(v1 + 40) sessionSettings];
  LOBYTE(v49) = [v53 displayDeviceIdentifier];

  v2[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierVisible] = (char)v49;
  sub_10003D61C();
  sub_1000404E8();
  sub_10003DAB4(*(void *)(v1 + 24));
  uint64_t v54 = self;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v2;
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = sub_10004295C;
  *(void *)(v56 + 24) = v55;
  char v64 = sub_100042974;
  uint64_t v65 = v56;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  uint64_t v62 = sub_10004FD38;
  char v63 = &unk_10014D9F0;
  unint64_t v57 = _Block_copy(&aBlock);
  v58 = v2;
  swift_retain();
  swift_release();
  [v54 performWithoutAnimation:v57];
  swift_release();
  _Block_release(v57);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
}

void sub_10003D260(void *a1, uint64_t a2)
{
  BOOL v2 = *(void **)(a2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView);
  *(void *)(a2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView) = a1;
  id v3 = a1;

  sub_10003DB74();
}

uint64_t sub_10003D2C0(uint64_t result)
{
  uint64_t v1 = *(void (**)(uint64_t))(result
                                      + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    return sub_10003B0B8((uint64_t)v1);
  }
  return result;
}

uint64_t sub_10003D328(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &v3[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifier];
  *(void *)uint64_t v13 = a1;
  *((void *)v13 + 1) = a2;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v15 = *((void *)v13 + 1);
  if (v15)
  {
    uint64_t v16 = *(void *)v13;
    sub_10003C374(0, (unint64_t *)&qword_100182E40);
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v18 = (void *)swift_allocObject();
    void v18[2] = v3;
    v18[3] = v16;
    v18[4] = v15;
    aBlock[4] = sub_100042BAC;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000358AC;
    aBlock[3] = &unk_10014DEA0;
    uint64_t v19 = _Block_copy(aBlock);
    char v20 = v3;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_100042C14((unint64_t *)&qword_100183E90, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10003AFD0((uint64_t *)&unk_100182E50);
    sub_10003B014();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v22);
  }
  return result;
}

void sub_10003D61C()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierVisible);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel);
  [v2 alpha];
  if (v1 == 1)
  {
    if (v3 == 0.0)
    {
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v2;
      uint64_t v5 = self;
      uint64_t v25 = sub_10003C7E8;
      uint64_t v26 = v4;
      uint64_t v21 = _NSConcreteStackBlock;
      uint64_t v22 = 1107296256;
      uint64_t v23 = sub_1000358AC;
      uint64_t v24 = &unk_10014DB30;
      uint64_t v6 = _Block_copy(&v21);
      id v7 = v2;
      swift_retain();
      swift_release();
      [v5 animateWithDuration:0x10000 delay:v6 options:0 animations:0.375 completion:0.0];
      _Block_release(v6);
      swift_release();
    }
    id v8 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView);
    [v8 alpha];
    if (v9 == 1.0)
    {
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v8;
      uint64_t v11 = self;
      uint64_t v25 = sub_100042CF0;
      uint64_t v26 = v10;
      uint64_t v21 = _NSConcreteStackBlock;
      uint64_t v22 = 1107296256;
      uint64_t v23 = sub_1000358AC;
      uint64_t v24 = &unk_10014DAE0;
      uint64_t v12 = _Block_copy(&v21);
      id v13 = v8;
      swift_retain();
      swift_release();
      [v11 animateWithDuration:0x20000 delay:v12 options:0 animations:0.125 completion:0.0];
LABEL_10:
      _Block_release(v12);

      swift_release();
      return;
    }
  }
  else
  {
    if (v3 == 1.0)
    {
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v2;
      uint64_t v15 = self;
      uint64_t v25 = sub_100042994;
      uint64_t v26 = v14;
      uint64_t v21 = _NSConcreteStackBlock;
      uint64_t v22 = 1107296256;
      uint64_t v23 = sub_1000358AC;
      uint64_t v24 = &unk_10014DA90;
      uint64_t v16 = _Block_copy(&v21);
      id v17 = v2;
      swift_retain();
      swift_release();
      [v15 animateWithDuration:0x20000 delay:v16 options:0 animations:0.125 completion:0.0];
      _Block_release(v16);
      swift_release();
    }
    id v8 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView);
    [v8 alpha];
    if (v18 == 0.0)
    {
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v8;
      char v20 = self;
      uint64_t v25 = sub_10003C0D4;
      uint64_t v26 = v19;
      uint64_t v21 = _NSConcreteStackBlock;
      uint64_t v22 = 1107296256;
      uint64_t v23 = sub_1000358AC;
      uint64_t v24 = &unk_10014DA40;
      uint64_t v12 = _Block_copy(&v21);
      id v13 = v8;
      swift_retain();
      swift_release();
      [v20 animateWithDuration:0x10000 delay:v12 options:0 animations:0.375 completion:0.0];
      goto LABEL_10;
    }
  }
}

void sub_10003DAB4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelType) = a1;
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel);
  double v3 = &OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_serialNumber;
  if (a1) {
    double v3 = &OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei;
  }
  if (*(void *)(v1 + *v3 + 8))
  {
    swift_bridgeObjectRetain();
    id v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = 0;
  }
  [v2 setText:v4];
}

void sub_10003DB74()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView);
  if (!v1) {
    return;
  }
  id v2 = v1;
  [v2 setContentMode:2];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView), "subviews"));
  sub_10003C374(0, (unint64_t *)&qword_1001858F0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v6; ++i)
      {
        if ((v5 & 0xC000000000000001) != 0) {
          id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v8 = *(id *)(v5 + 8 * i + 32);
        }
        double v9 = v8;
        [v8 removeFromSuperview];
      }
    }
  }
  swift_bridgeObjectRelease_n();
  [*(id *)(v0 + v3) addSubview:v2];
  uint64_t v10 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100123C30;
  id v12 = [v2 centerYAnchor];
  id v13 = [*(id *)(v0 + v3) centerYAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v11 + 32) = v14;
  id v15 = [v2 leadingAnchor];
  id v16 = [*(id *)(v0 + v3) leadingAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v11 + 40) = v17;
  id v18 = [v2 trailingAnchor];
  id v19 = [*(id *)(v0 + v3) trailingAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v11 + 48) = v20;
  id v21 = [v2 heightAnchor];
  id v22 = [v21 constraintEqualToConstant:70.0];

  *(void *)(v11 + 56) = v22;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 activateConstraints:isa];
}

id sub_10003DF20(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for UIShape();
  uint64_t v65 = *(void *)(v9 - 8);
  uint64_t v66 = v9;
  __chkstk_darwin(v9);
  char v63 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003AFD0((uint64_t *)&unk_100182E60);
  __chkstk_darwin(v11 - 8);
  char v64 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10003AFD0((uint64_t *)&unk_1001864E0);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UIButton.Configuration();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  id v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)&v63 - v21;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeMarketingName] = 0x4034000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeDescription] = 0x4028000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeSerialNumber] = 0x402E000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeIDLabel] = 0x4049000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageMinimumWidth] = 0x4049000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageHeight] = 0x4051800000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonAndImageGap] = 0x4008000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_labelsVerticalPadding] = 0x4000000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_labelsHorizontalPadding] = 0x4024000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_buttonWidthHeight] = 0x4046000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonImageBorder] = 0x401C000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonMargin] = 0x4024000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthHeight] = 0x403C000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonHoverInset] = 0x4020000000000000;
  uint64_t v23 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
  id v24 = objc_allocWithZone((Class)UIView);
  uint64_t v25 = v4;
  *(void *)&v4[v23] = [v24 init];
  uint64_t v26 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel;
  *(void *)&v25[v26] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v27 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel;
  *(void *)&v25[v27] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v28 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel;
  *(void *)&v25[v28] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v29 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel;
  *(void *)&v25[v29] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v30 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator;
  *(void *)&v25[v30] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:101];
  *(void *)&v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_state] = 0;
  char v31 = &v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifier];
  *(void *)char v31 = 0;
  *((void *)v31 + 1) = 0;
  v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierVisible] = 0;
  *(void *)&v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelType] = 0;
  int v32 = &v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_serialNumber];
  *(void *)int v32 = 0;
  *((void *)v32 + 1) = 0;
  id v33 = &v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei];
  *(void *)id v33 = 0;
  *((void *)v33 + 1) = 0;
  uint64_t v34 = &v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingName];
  *(void *)uint64_t v34 = 0;
  *((void *)v34 + 1) = 0;
  *(void *)&v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView] = 0;
  double v35 = &v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate];
  *(_OWORD *)double v35 = 0u;
  *((_OWORD *)v35 + 1) = 0u;
  *((void *)v35 + 4) = 0;
  id v36 = &v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler];
  *(void *)id v36 = 0;
  *((void *)v36 + 1) = 0;
  v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_hasExplicitHeight] = 0;
  *(void *)&v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint] = 0;
  *(void *)&v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint] = 0;
  *(void *)&v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint] = 0;
  *(void *)&v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint] = 0;
  *(void *)&v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_contentDependentConstraints] = &_swiftEmptyArrayStorage;
  id v37 = [self defaultMetrics];
  uint64_t v38 = self;
  [v38 defaultFontSize];
  id v39 = [v38 systemFontOfSize:];
  id v40 = [v37 scaledFontForFont:v39];

  static UIButton.Configuration.plain()();
  *(void *)(swift_allocObject() + 16) = v40;
  id v41 = v40;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v42 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v15, 0, 1, v42);
  UIButton.Configuration.titleTextAttributesTransformer.setter();

  UIButton.Configuration.contentInsets.setter();
  sub_10003C374(0, &qword_100182E70);
  uint64_t v67 = v17;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v43(v20, v22, v16);
  uint64_t v44 = UIButton.init(configuration:primaryAction:)();
  uint64_t v45 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton;
  *(void *)&v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton] = v44;
  uint64_t v68 = v16;
  v43(v20, v22, v16);
  uint64_t v46 = UIButton.init(configuration:primaryAction:)();
  uint64_t v47 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton;
  *(void *)&v25[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton] = v46;
  id v48 = [self currentDevice];
  id v49 = [v48 userInterfaceIdiom];

  if (v49 == (id)6)
  {
    uint64_t v50 = *(void **)&v25[v45];
    sub_10003C374(0, &qword_100182E78);
    id v51 = v50;
    uint64_t v52 = v63;
    static UIShape.circle.getter();
    id v53 = v64;
    UIShape.inset(by:)();
    uint64_t v54 = v65;
    uint64_t v55 = v66;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v52, v66);
    uint64_t v56 = *(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56);
    v56(v53, 0, 1, v55);
    unint64_t v57 = (void *)UIHoverStyle.init(shape:)();
    [v51 setHoverStyle:v57];

    id v58 = *(id *)&v25[v47];
    static UIShape.circle.getter();
    v56(v53, 0, 1, v55);
    id v59 = (void *)UIHoverStyle.init(shape:)();
    [v58 setHoverStyle:v59];
  }
  v60 = (objc_class *)type metadata accessor for DeviceInformationView();
  v69.receiver = v25;
  v69.super_class = v60;
  id v61 = [super initWithFrame:a1, a2, a3, a4];
  (*(void (**)(char *, uint64_t))(v67 + 8))(v22, v68);
  return v61;
}

id sub_10003E734(void *a1)
{
  uint64_t v68 = a1;
  uint64_t v2 = type metadata accessor for UIShape();
  uint64_t v66 = *(void *)(v2 - 8);
  uint64_t v67 = v2;
  __chkstk_darwin(v2);
  char v64 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003AFD0((uint64_t *)&unk_100182E60);
  __chkstk_darwin(v4 - 8);
  uint64_t v65 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003AFD0((uint64_t *)&unk_1001864E0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  uint64_t v10 = *(char **)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v63 - v14;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeMarketingName] = 0x4034000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeDescription] = 0x4028000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeSerialNumber] = 0x402E000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_fontSizeIDLabel] = 0x4049000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageMinimumWidth] = 0x4049000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageHeight] = 0x4051800000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonAndImageGap] = 0x4008000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_labelsVerticalPadding] = 0x4000000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_labelsHorizontalPadding] = 0x4024000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_buttonWidthHeight] = 0x4046000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonImageBorder] = 0x401C000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonMargin] = 0x4024000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthHeight] = 0x403C000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonHoverInset] = 0x4020000000000000;
  uint64_t v16 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
  id v17 = objc_allocWithZone((Class)UIView);
  uint64_t v18 = v1;
  *(void *)&v1[v16] = [v17 init];
  uint64_t v19 = v9;
  id v20 = v10;
  uint64_t v21 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel;
  *(void *)&v18[v21] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v22 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel;
  *(void *)&v18[v22] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v23 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel;
  *(void *)&v18[v23] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v24 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel;
  *(void *)&v18[v24] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v25 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator;
  *(void *)&v18[v25] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:101];
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_state] = 0;
  uint64_t v26 = &v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifier];
  *(void *)uint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierVisible] = 0;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelType] = 0;
  uint64_t v27 = &v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_serialNumber];
  *(void *)uint64_t v27 = 0;
  *((void *)v27 + 1) = 0;
  uint64_t v28 = &v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei];
  *(void *)uint64_t v28 = 0;
  *((void *)v28 + 1) = 0;
  uint64_t v29 = &v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingName];
  *(void *)uint64_t v29 = 0;
  *((void *)v29 + 1) = 0;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView] = 0;
  uint64_t v30 = &v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate];
  *(_OWORD *)uint64_t v30 = 0u;
  *((_OWORD *)v30 + 1) = 0u;
  *((void *)v30 + 4) = 0;
  char v31 = &v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler];
  *(void *)char v31 = 0;
  *((void *)v31 + 1) = 0;
  v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_hasExplicitHeight] = 0;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint] = 0;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint] = 0;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint] = 0;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint] = 0;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_contentDependentConstraints] = &_swiftEmptyArrayStorage;
  id v32 = [self defaultMetrics];
  id v33 = self;
  [v33 defaultFontSize];
  id v34 = [v33 systemFontOfSize:];
  id v35 = [v32 scaledFontForFont:v34];

  static UIButton.Configuration.plain()();
  *(void *)(swift_allocObject() + 16) = v35;
  id v36 = v35;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v37 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v8, 0, 1, v37);
  UIButton.Configuration.titleTextAttributesTransformer.setter();

  UIButton.Configuration.contentInsets.setter();
  sub_10003C374(0, &qword_100182E70);
  uint64_t v38 = (void (*)(char *, char *, uint64_t))*((void *)v10 + 2);
  v38(v13, v15, v19);
  uint64_t v39 = UIButton.init(configuration:primaryAction:)();
  uint64_t v40 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton] = v39;
  v38(v13, v15, v19);
  uint64_t v41 = UIButton.init(configuration:primaryAction:)();
  uint64_t v42 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton] = v41;
  id v43 = [self currentDevice];
  id v44 = [v43 userInterfaceIdiom];

  if (v44 == (id)6)
  {
    uint64_t v45 = *(void **)&v18[v40];
    sub_10003C374(0, &qword_100182E78);
    id v46 = v45;
    uint64_t v47 = v64;
    static UIShape.circle.getter();
    id v48 = v65;
    UIShape.inset(by:)();
    char v63 = v15;
    char v64 = v20;
    uint64_t v49 = v66;
    uint64_t v50 = v67;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v47, v67);
    uint64_t v51 = v19;
    uint64_t v52 = *(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56);
    v52(v48, 0, 1, v50);
    id v53 = (void *)UIHoverStyle.init(shape:)();
    [v46 setHoverStyle:v53];

    id v54 = *(id *)&v18[v42];
    static UIShape.circle.getter();
    uint64_t v55 = v50;
    id v20 = v64;
    v52(v48, 0, 1, v55);
    id v15 = v63;
    uint64_t v19 = v51;
    uint64_t v56 = (void *)UIHoverStyle.init(shape:)();
    [v54 setHoverStyle:v56];
  }
  unint64_t v57 = (objc_class *)type metadata accessor for DeviceInformationView();
  v69.receiver = v18;
  v69.super_class = v57;
  id v58 = v68;
  [super initWithCoder:v68];

  v60 = (void (*)(char *, uint64_t))*((void *)v20 + 1);
  id v61 = v59;
  v60(v15, v19);
  if (v61) {

  }
  return v61;
}

id sub_10003EF54()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel);
  uint64_t v3 = self;
  id v4 = [v3 defaultMetrics];
  uint64_t v5 = self;
  id v6 = [v5 boldSystemFontOfSize:20.0];
  id v7 = [v4 scaledFontForFont:v6];

  id v8 = v2;
  [v2 setFont:v7];

  id v43 = v2;
  [v2 setNumberOfLines:0];
  uint64_t v9 = self;
  id v10 = [v9 labelColor];
  [v8 setTextColor:v10];

  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel);
  id v12 = [v3 defaultMetrics];
  id v13 = [v5 systemFontOfSize:12.0];
  id v14 = [v12 scaledFontForFont:v13];

  [v11 setFont:v14];
  [v11 setNumberOfLines:2];
  id v15 = [v9 labelColor];
  [v11 setTextColor:v15];

  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel);
  id v17 = [v3 defaultMetrics];
  id v18 = [v5 systemFontOfSize:15.0];
  id v19 = [v17 scaledFontForFont:v18];

  [v16 setFont:v19];
  [v16 setLineBreakMode:2];
  [v16 setAdjustsFontSizeToFitWidth:1];
  [v16 setUserInteractionEnabled:1];
  id v20 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"infoLabelTapped"];
  [v16 addGestureRecognizer:v20];

  id v21 = [v9 labelColor];
  [v16 setTextColor:v21];

  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v22 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
  [*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView) setContentMode:2];
  [*(id *)(v1 + v22) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v23 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel);
  [v23 setTextAlignment:1];
  id v24 = [v3 defaultMetrics];
  id v25 = [v5 boldSystemFontOfSize:50.0];
  id v26 = [v24 scaledFontForFont:v25];

  [v23 setFont:v26];
  [v23 setAdjustsFontSizeToFitWidth:1];
  [v23 setBaselineAdjustment:1];
  double v27 = 0.0;
  [v23 setAlpha:0.0];
  id v44 = v9;
  id v28 = [v9 labelColor];
  [v23 setTextColor:v28];

  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  type metadata accessor for UILayoutPriority(0);
  sub_100042C14(&qword_100182E38, type metadata accessor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v29) = v45[0];
  [v43 setContentHuggingPriority:0 forAxis:v29];
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v30) = v45[0];
  [v11 setContentHuggingPriority:0 forAxis:v30];
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v31) = v45[0];
  [v16 setContentHuggingPriority:0 forAxis:v31];
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v32) = v45[0];
  [v23 setContentHuggingPriority:0 forAxis:v32];
  id v33 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton);
  [v33 addTarget:v1 action:"addButtonPressedWithSender:" forControlEvents:64];
  uint64_t v46 = 0;
  memset(v45, 0, sizeof(v45));
  id v34 = sub_1000ADAE8((uint64_t)v45, 0);
  [v33 setImage:v34 forState:0];

  [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v35 = [self standardUserDefaults];
  NSString v36 = String._bridgeToObjectiveC()();
  LOBYTE(v25) = [v35 BOOLForKey:v36];

  if ((v25 & 1) == 0)
  {
    unsigned int v37 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive");
    swift_unknownObjectRelease();
    if (v37) {
      double v27 = 0.0;
    }
    else {
      double v27 = 1.0;
    }
  }
  [v33 setAlpha:v27];
  uint64_t v38 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton);
  [v38 addTarget:v1 action:"ellipsisButtonPressedWithSender:" forControlEvents:64];
  id v39 = sub_1000ADAE8((uint64_t)v45, 2uLL);
  [v38 setImage:v39 forState:0];

  [v38 setAlpha:0.0];
  [v38 setContentVerticalAlignment:0];
  [v38 setContentHorizontalAlignment:0];
  [v38 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v40 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator);
  id v41 = [v44 labelColor];
  [v40 setColor:v41];

  [v40 setAlpha:0.0];
  [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
  return [v40 startAnimating];
}

id sub_10003F78C()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel]];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel]];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel]];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView]];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel]];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton]];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton]];
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator];

  return [v0 addSubview:v1];
}

void sub_10003F878()
{
  uint64_t v1 = v0;
  id v2 = [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel] bottomAnchor];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel];
  id v4 = [v3 topAnchor];
  id v5 = [v2 constraintEqualToAnchor:v4 constant:-1.0];

  id v6 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint];
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint] = v5;
  id v7 = v5;

  id v8 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel];
  id v9 = [v8 topAnchor];
  id v10 = [v3 bottomAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10 constant:1.0];

  id v12 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint];
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint] = v11;
  id v100 = v11;

  id v101 = *(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton];
  id v13 = [v101 widthAnchor];
  id v14 = [v13 constraintEqualToConstant:44.0];

  id v15 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint];
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint] = v14;
  id v95 = v14;

  id v97 = *(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton];
  id v16 = [v97 widthAnchor];
  id v17 = [v16 constraintEqualToConstant:44.0];

  id v18 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint];
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint] = v17;
  id v98 = v17;

  uint64_t v19 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
  id v20 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView] widthAnchor];
  id v21 = [v20 constraintEqualToConstant:50.0];

  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_100123C40;
  *(void *)(v22 + 32) = v7;
  id v94 = v7;
  id v23 = [v8 bottomAnchor];
  id v24 = [v1 bottomAnchor];
  id v25 = [v23 constraintLessThanOrEqualToAnchor:v24 constant:-15.0];

  *(void *)(v22 + 40) = v25;
  id v26 = [v8 trailingAnchor];
  id v27 = [v1 trailingAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27 constant:-15.0];

  *(void *)(v22 + 48) = v28;
  id v29 = [v3 trailingAnchor];
  id v30 = [v1 trailingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30 constant:-15.0];

  *(void *)(v22 + 56) = v31;
  id v32 = [*(id *)&v1[v19] leadingAnchor];
  id v33 = [v101 trailingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v22 + 64) = v34;
  *(void *)(v22 + 72) = v21;
  id v35 = *(void **)&v1[v19];
  id v93 = v21;
  id v36 = [v35 heightAnchor];
  id v37 = [v36 constraintEqualToConstant:70.0];

  *(void *)(v22 + 80) = v37;
  uint64_t v38 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel];
  id v39 = [v38 topAnchor];
  id v40 = [*(id *)&v1[v19] topAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40];

  *(void *)(v22 + 88) = v41;
  id v42 = [v38 bottomAnchor];
  id v43 = [*(id *)&v1[v19] bottomAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43];

  *(void *)(v22 + 96) = v44;
  id v45 = [v38 leadingAnchor];
  id v46 = [*(id *)&v1[v19] leadingAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46];

  *(void *)(v22 + 104) = v47;
  id v48 = [v38 trailingAnchor];
  id v49 = [*(id *)&v1[v19] trailingAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49];

  *(void *)(v22 + 112) = v50;
  id v51 = [v101 centerYAnchor];
  id v52 = [*(id *)&v1[v19] centerYAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  *(void *)(v22 + 120) = v53;
  *(void *)(v22 + 128) = v95;
  id v96 = v95;
  id v54 = [v101 heightAnchor];
  id v55 = [v101 widthAnchor];
  id v56 = [v54 constraintEqualToAnchor:v55];

  *(void *)(v22 + 136) = v56;
  id v57 = [v97 topAnchor];
  id v58 = [v1 topAnchor];
  id v59 = [v57 constraintEqualToAnchor:v58 constant:10.0];

  *(void *)(v22 + 144) = v59;
  id v60 = [v97 trailingAnchor];
  id v61 = [v1 trailingAnchor];
  id v62 = [v60 constraintEqualToAnchor:v61 constant:-10.0];

  *(void *)(v22 + 152) = v62;
  *(void *)(v22 + 160) = v98;
  id v99 = v98;
  id v63 = [v97 heightAnchor];
  id v64 = [v97 widthAnchor];
  id v65 = [v63 constraintEqualToAnchor:v64];

  *(void *)(v22 + 168) = v65;
  uint64_t v66 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator];
  id v67 = [v66 centerXAnchor];
  id v68 = [v101 centerXAnchor];
  id v69 = [v67 constraintEqualToAnchor:v68 constant:1.0];

  *(void *)(v22 + 176) = v69;
  id v70 = [v66 centerYAnchor];
  id v71 = [v101 centerYAnchor];
  id v72 = [v70 constraintEqualToAnchor:v71 constant:1.0];

  *(void *)(v22 + 184) = v72;
  id v73 = [v66 widthAnchor];
  id v74 = [v101 widthAnchor];
  id v75 = [v73 constraintEqualToAnchor:v74];

  *(void *)(v22 + 192) = v75;
  specialized Array._endMutation()();
  unint64_t v76 = v22;
  id v77 = *(void **)&v1[v19];
  id v78 = v100;
  id v79 = [v77 bottomAnchor];
  id v80 = [v1 bottomAnchor];
  id v81 = [v79 constraintLessThanOrEqualToAnchor:v80 constant:-15.0];

  id v82 = [v101 leadingAnchor];
  id v83 = [v1 leadingAnchor];
  id v84 = [v82 constraintEqualToAnchor:v83 constant:8.0];

  LODWORD(v85) = 1148829696;
  [v78 setPriority:v85];
  LODWORD(v86) = 1148829696;
  [v81 setPriority:v86];
  LODWORD(v87) = 1148829696;
  [v84 setPriority:v87];
  if (v76 >> 62)
  {
    swift_bridgeObjectRetain();
    id v88 = (id)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v89 = (uint64_t)v88 + 3;
    if (!__OFADD__(v88, 3))
    {
LABEL_3:
      sub_1000CEF34(v89);
      specialized Array._endMutation()();
      id v88 = v78;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else
  {
    id v88 = *(id *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v89 = (uint64_t)v88 + 3;
    if (!__OFADD__(v88, 3)) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_14:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_4:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v90 = v81;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v91 = v84;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  uint64_t v92 = self;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  swift_bridgeObjectRelease();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v92 activateConstraints:isa];
}

void sub_1000404E8()
{
  uint64_t v1 = v0;
  id v2 = (unint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_contentDependentConstraints];
  swift_beginAccess();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 removeConstraints:isa];

  unint64_t *v2 = (unint64_t)&_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  id v4 = [self sharedApplication];
  id v5 = [v4 preferredContentSizeCategory];

  LOBYTE(v4) = UIContentSizeCategory.isAccessibilityCategory.getter();
  id v6 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel];
  id v7 = &selRef_setExportedInterface_;
  if (v4)
  {
    id v8 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel] topAnchor];
    uint64_t v9 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
    id v10 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView] bottomAnchor];
    id v73 = [v8 constraintEqualToAnchor:v10 constant:2.0];

    id v11 = [v6 leadingAnchor];
    id v12 = [v1 leadingAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12 constant:15.0];

    id v14 = [v6 trailingAnchor];
    id v15 = [v1 trailingAnchor];
    id v16 = [v14 constraintEqualToAnchor:v15 constant:-15.0];

    id v17 = [*(id *)&v1[v9] topAnchor];
    id v18 = [v1 topAnchor];
    id v19 = [v17 constraintEqualToAnchor:v18 constant:15.0];

    id v20 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel] leadingAnchor];
    id v21 = [v1 leadingAnchor];
    id v22 = [v20 constraintEqualToAnchor:v21 constant:15.0];

    id v23 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel] leadingAnchor];
    id v24 = [v1 leadingAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24 constant:15.0];

    swift_beginAccess();
    if (*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      id v26 = (id)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v27 = (uint64_t)v26 + 6;
      if (!__OFADD__(v26, 6))
      {
LABEL_4:
        sub_1000CEF34(v27);
        specialized Array._endMutation()();
        id v26 = v73;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_5:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v28 = v13;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v29 = v16;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v30 = v19;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v31 = v22;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v32 = v25;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();

LABEL_39:
          id v65 = self;
          swift_bridgeObjectRetain();
          Class v66 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v65 activateConstraints:v66];

          return;
        }
LABEL_43:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_5;
      }
    }
    else
    {
      id v26 = *(id *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v27 = (uint64_t)v26 + 6;
      if (!__OFADD__(v26, 6)) {
        goto LABEL_4;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
  [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabel] intrinsicContentSize];
  double v34 = v33;
  id v72 = *(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel];
  [v72 intrinsicContentSize];
  double v36 = v34 + v35;
  id v37 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabel];
  [v37 intrinsicContentSize];
  double v39 = v36 + v38 + 2.0;
  id v40 = [v6 topAnchor];
  unint64_t v41 = (unint64_t)[v1 topAnchor];
  if (v39 > 70.0)
  {
    id v42 = [v40 constraintEqualToAnchor:v41 constant:15.0];

    id v43 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView] topAnchor];
    id v44 = [v1 topAnchor];
    id v40 = [v43 constraintGreaterThanOrEqualToAnchor:v44 constant:15.0];

    swift_beginAccess();
    unint64_t v41 = *v2;
    if (*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      id v7 = (char **)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v45 = (uint64_t)v7 + 2;
      if (!__OFADD__(v7, 2)) {
        goto LABEL_23;
      }
    }
    else
    {
      id v7 = *(char ***)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v45 = (uint64_t)v7 + 2;
      if (!__OFADD__(v7, 2)) {
        goto LABEL_23;
      }
    }
    __break(1u);
  }
  id v42 = [v40 constraintGreaterThanOrEqualToAnchor:v41 constant:15.0];

  id v46 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView] v7[507]];
  id v47 = [v1 v7[507]];
  id v40 = [v46 constraintEqualToAnchor:v47 constant:15.0];

  swift_beginAccess();
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v45 = v68 + 2;
    if (__OFADD__(v68, 2)) {
      goto LABEL_53;
    }
LABEL_23:
    sub_1000CEF34(v45);
    specialized Array._endMutation()();
    id v49 = v42;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v50 = v40;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    id v51 = [v6 leadingAnchor];
    uint64_t v52 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView;
    id v53 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imageView] trailingAnchor];
    id v71 = [v51 constraintEqualToAnchor:v53 constant:10.0];

    id v54 = [v6 trailingAnchor];
    id v55 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton] leadingAnchor];
    id v70 = [v54 constraintEqualToAnchor:v55];

    id v56 = [v72 centerYAnchor];
    id v57 = [*(id *)&v1[v52] centerYAnchor];
    id v69 = [v56 constraintEqualToAnchor:v57];

    id v32 = [v72 leadingAnchor];
    id v58 = [*(id *)&v1[v52] trailingAnchor];
    id v59 = [v32 constraintEqualToAnchor:v58 constant:10.0];

    id v60 = [v37 leadingAnchor];
    id v61 = [*(id *)&v1[v52] trailingAnchor];
    id v62 = [v60 constraintEqualToAnchor:v61 constant:10.0];

    swift_beginAccess();
    if (*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v64 = v67 + 5;
      if (!__OFADD__(v67, 5))
      {
LABEL_29:
        sub_1000CEF34(v64);
        specialized Array._endMutation()();
        id v32 = v71;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_30:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v28 = v70;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v29 = v69;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v30 = v59;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v31 = v62;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          goto LABEL_39;
        }
LABEL_47:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v63 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v64 = v63 + 5;
      if (!__OFADD__(v63, 5)) {
        goto LABEL_29;
      }
    }
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v48 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v45 = v48 + 2;
  if (!__OFADD__(v48, 2)) {
    goto LABEL_23;
  }
LABEL_53:
  __break(1u);
}

id sub_1000411E4(id result, uint64_t a2)
{
  uint64_t v2 = (uint64_t)result;
  if (a2)
  {
    char v3 = a2;
    uint64_t result = (id)sub_100041348(a2, 0);
    if ((v3 & 5) != 0) {
      uint64_t result = sub_100041A98();
    }
    if ((v3 & 2) != 0) {
      uint64_t result = sub_100041D34();
    }
  }
  if (v2)
  {
    id v4 = [self standardUserDefaults];
    NSString v5 = String._bridgeToObjectiveC()();
    unsigned __int8 v6 = [v4 BOOLForKey:v5];

    if ((v6 & 1) != 0
      || (unsigned int v7 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive"), swift_unknownObjectRelease(), v7))
    {
      uint64_t v8 = v2 & 0xFFFFFFFFFFFFFFFELL;
      if ((v2 & 2) != 0) {
        uint64_t v8 = (v8 ^ 2) & v2;
      }
    }
    else
    {
      uint64_t v8 = v2;
    }
    uint64_t result = (id)sub_100041348(v8, 1);
    if ((v8 & 5) != 0) {
      uint64_t result = sub_100041940();
    }
    if ((v8 & 2) != 0)
    {
      return sub_100041BE4();
    }
  }
  return result;
}

uint64_t sub_100041348(uint64_t result, char a2)
{
  char v4 = result;
  if (result)
  {
    NSString v5 = *(void **)(v2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButton);
    uint64_t result = (uint64_t)[v5 alpha];
    if (a2)
    {
      if (v6 != 0.0) {
        goto LABEL_8;
      }
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v5;
      uint64_t v8 = self;
      id v37 = sub_10003C7E8;
      uint64_t v38 = v7;
      double v33 = _NSConcreteStackBlock;
      uint64_t v34 = 1107296256;
      double v35 = sub_1000358AC;
      double v36 = &unk_10014DE50;
      uint64_t v9 = _Block_copy(&v33);
      id v10 = v5;
      swift_retain();
      swift_release();
      [v8 animateWithDuration:0x10000 delay:v9 options:0 animations:0.375 completion:0.0];
    }
    else
    {
      if (v6 != 1.0) {
        goto LABEL_8;
      }
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v5;
      id v12 = self;
      id v37 = sub_100042CF0;
      uint64_t v38 = v11;
      double v33 = _NSConcreteStackBlock;
      uint64_t v34 = 1107296256;
      double v35 = sub_1000358AC;
      double v36 = &unk_10014DE00;
      uint64_t v9 = _Block_copy(&v33);
      id v13 = v5;
      swift_retain();
      swift_release();
      [v12 animateWithDuration:0x20000 delay:v9 options:0 animations:0.125 completion:0.0];
    }
    _Block_release(v9);
    uint64_t result = swift_release();
  }
LABEL_8:
  if ((v4 & 2) == 0) {
    goto LABEL_15;
  }
  id v14 = *(void **)(v2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButton);
  uint64_t result = (uint64_t)[v14 alpha];
  if (a2)
  {
    if (v15 != 0.0) {
      goto LABEL_15;
    }
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    id v17 = self;
    id v37 = sub_10003C7E8;
    uint64_t v38 = v16;
    double v33 = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    double v35 = sub_1000358AC;
    double v36 = &unk_10014DDB0;
    id v18 = _Block_copy(&v33);
    id v19 = v14;
    swift_retain();
    swift_release();
    [v17 animateWithDuration:0x10000 delay:v18 options:0 animations:0.375 completion:0.0];
  }
  else
  {
    if (v15 != 1.0) {
      goto LABEL_15;
    }
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v14;
    id v21 = self;
    id v37 = sub_100042CF0;
    uint64_t v38 = v20;
    double v33 = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    double v35 = sub_1000358AC;
    double v36 = &unk_10014DD60;
    id v18 = _Block_copy(&v33);
    id v22 = v14;
    swift_retain();
    swift_release();
    [v21 animateWithDuration:0x20000 delay:v18 options:0 animations:0.125 completion:0.0];
  }
  _Block_release(v18);
  uint64_t result = swift_release();
LABEL_15:
  if ((v4 & 4) != 0)
  {
    id v23 = *(void **)(v2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_activityIndicator);
    uint64_t result = (uint64_t)[v23 alpha];
    if (a2)
    {
      if (v24 == 0.0)
      {
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = v23;
        id v26 = self;
        id v37 = sub_10003C7E8;
        uint64_t v38 = v25;
        double v33 = _NSConcreteStackBlock;
        uint64_t v34 = 1107296256;
        double v35 = sub_1000358AC;
        double v36 = &unk_10014DD10;
        uint64_t v27 = _Block_copy(&v33);
        id v28 = v23;
        swift_retain();
        swift_release();
        [v26 animateWithDuration:0x10000 delay:v27 options:0 animations:0.375 completion:0.0];
        _Block_release(v27);
        swift_release();
      }
      return (uint64_t)[v23 startAnimating];
    }
    else if (v24 == 1.0)
    {
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v23;
      id v30 = self;
      id v37 = sub_100042CF0;
      uint64_t v38 = v29;
      double v33 = _NSConcreteStackBlock;
      uint64_t v34 = 1107296256;
      double v35 = sub_1000358AC;
      double v36 = &unk_10014DCC0;
      id v31 = _Block_copy(&v33);
      id v32 = v23;
      swift_retain();
      swift_release();
      [v30 animateWithDuration:0x20000 delay:v31 options:0 animations:0.125 completion:0.0];
      _Block_release(v31);
      return swift_release();
    }
  }
  return result;
}

id sub_100041940()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint];
  if (v2)
  {
    id result = [v2 constant];
    if (v4 == 44.0) {
      return result;
    }
    NSString v5 = *(void **)&v0[v1];
    if (v5) {
      [v5 setConstant:44.0];
    }
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  uint64_t v7 = self;
  v10[4] = sub_100042B5C;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _DWORD v10[2] = sub_1000358AC;
  _OWORD v10[3] = &unk_10014DC70;
  uint64_t v8 = _Block_copy(v10);
  uint64_t v9 = v0;
  swift_retain();
  swift_release();
  [v7 animateWithDuration:1 delay:v8 options:0 animations:0.25 completion:0.0];
  _Block_release(v8);
  return (id)swift_release();
}

id sub_100041A98()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_addButtonWidthConstraint];
  if (v2)
  {
    id result = [v2 constant];
    if (v4 == 0.0) {
      return result;
    }
    NSString v5 = *(void **)&v0[v1];
    if (v5) {
      [v5 setConstant:0.0];
    }
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  uint64_t v7 = self;
  v10[4] = sub_100042CE4;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _DWORD v10[2] = sub_1000358AC;
  _OWORD v10[3] = &unk_10014DC20;
  uint64_t v8 = _Block_copy(v10);
  uint64_t v9 = v0;
  swift_retain();
  swift_release();
  [v7 animateWithDuration:1 delay:v8 options:0 animations:0.25 completion:0.0];
  _Block_release(v8);
  return (id)swift_release();
}

id sub_100041BE4()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint];
  if (v2)
  {
    id result = [v2 constant];
    if (v4 == 28.0) {
      return result;
    }
    NSString v5 = *(void **)&v0[v1];
    if (v5) {
      [v5 setConstant:28.0];
    }
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  uint64_t v7 = self;
  v10[4] = sub_100042CE4;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _DWORD v10[2] = sub_1000358AC;
  _OWORD v10[3] = &unk_10014DBD0;
  uint64_t v8 = _Block_copy(v10);
  uint64_t v9 = v0;
  swift_retain();
  swift_release();
  [v7 animateWithDuration:1 delay:v8 options:0 animations:0.25 completion:0.0];
  _Block_release(v8);
  return (id)swift_release();
}

id sub_100041D34()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_ellipsisButtonImageWidthConstraint];
  if (v2)
  {
    id result = [v2 constant];
    if (v4 == 0.0) {
      return result;
    }
    NSString v5 = *(void **)&v0[v1];
    if (v5) {
      [v5 setConstant:0.0];
    }
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  uint64_t v7 = self;
  v10[4] = sub_100042CE4;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _DWORD v10[2] = sub_1000358AC;
  _OWORD v10[3] = &unk_10014DB80;
  uint64_t v8 = _Block_copy(v10);
  uint64_t v9 = v0;
  swift_retain();
  swift_release();
  [v7 animateWithDuration:1 delay:v8 options:0 animations:0.25 completion:0.0];
  _Block_release(v8);
  return (id)swift_release();
}

void sub_100041E80(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = 0x20A280E220;
  v7._object = (void *)0xA500000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = a3;
  double v33 = a4;
  v8._object = a4;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  if (!a1 && a2 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v9 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint];
    if (v9) {
      [v9 setConstant:1.0];
    }
    id v10 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint];
    if (v10)
    {
      double v11 = -1.0;
LABEL_12:
      [v10 setConstant:v11 a4];
    }
  }
  else
  {
    id v12 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelTopConstraint];
    if (v12) {
      [v12 setConstant:2.0];
    }
    id v10 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_marketingNameLabelBottomConstraint];
    if (v10)
    {
      double v11 = -2.0;
      goto LABEL_12;
    }
  }
  id v13 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_descriptionLabel];
  [v13 frame:v33];
  id v35 = [objc_allocWithZone((Class)UILabel) initWithFrame:v14, v15, v16, v17];
  [v35 setNumberOfLines:2];
  id v18 = [self systemFontOfSize:12.0];
  [v35 setFont:v18];

  NSString v19 = String._bridgeToObjectiveC()();
  [v35 setText:v19];

  [v35 frame];
  [v35 sizeThatFits:v20];
  float v22 = v21;
  uint64_t v23 = lroundf(v22);
  id v24 = [v35 font];
  if (!v24)
  {
LABEL_24:
    __break(1u);
    return;
  }
  uint64_t v25 = v24;
  [v24 lineHeight];
  double v27 = v26;

  float v28 = v27;
  uint64_t v29 = lroundf(v28);
  if (!v29)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v23 == 0x8000000000000000 && v29 == -1) {
    goto LABEL_23;
  }
  if (v23 / v29 >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v30._countAndFlagsBits = 10;
    v30._object = (void *)0xE100000000000000;
    String.append(_:)(v30);
    swift_bridgeObjectRetain();
    v31._countAndFlagsBits = a3;
    v31._object = v34;
    String.append(_:)(v31);
    swift_bridgeObjectRelease();
  }
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setText:v32];

  [v4 layoutIfNeeded];
}

uint64_t sub_1000421F0(uint64_t a1)
{
  return sub_100042268(a1, 0);
}

uint64_t sub_100042260(uint64_t a1)
{
  return sub_100042268(a1, 1);
}

uint64_t sub_100042268(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate;
  swift_beginAccess();
  sub_1000429FC(v5, (uint64_t)v12);
  if (!v13) {
    return sub_10004299C((uint64_t)v12);
  }
  sub_100042A64((uint64_t)v12, (uint64_t)v9);
  sub_10004299C((uint64_t)v12);
  uint64_t v6 = v10;
  uint64_t v7 = v11;
  sub_100042AC8(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v2, a1, a2, v6, v7);
  return sub_100042B0C((uint64_t)v9);
}

uint64_t sub_1000423A8()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_imei + 8))
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_infoLabelType);
    if (v1 == 1)
    {
      uint64_t v2 = 0;
    }
    else
    {
      if (v1)
      {
        uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        return result;
      }
      uint64_t v2 = 1;
    }
    sub_10003DAB4(v2);
    uint64_t v3 = v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate;
    swift_beginAccess();
    sub_1000429FC(v3, (uint64_t)v10);
    if (v10[3])
    {
      sub_100042A64((uint64_t)v10, (uint64_t)v7);
      sub_10004299C((uint64_t)v10);
      uint64_t v4 = v8;
      uint64_t v5 = v9;
      sub_100042AC8(v7, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v0, v2, v4, v5);
      return sub_100042B0C((uint64_t)v7);
    }
    else
    {
      return sub_10004299C((uint64_t)v10);
    }
  }
  return result;
}

uint64_t sub_100042518()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_10004299C(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate);
  sub_10003B0B8(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler));

  return swift_bridgeObjectRelease();
}

id sub_10004269C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeviceInformationView();
  [super dealloc];
}

uint64_t type metadata accessor for DeviceInformationView()
{
  return self;
}

ValueMetadata *type metadata accessor for DeviceInformationView.InfoLabelType()
{
  return &type metadata for DeviceInformationView.InfoLabelType;
}

unint64_t sub_100042898()
{
  unint64_t result = qword_100182E08;
  if (!qword_100182E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100182E08);
  }
  return result;
}

uint64_t sub_1000428EC()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_hasExplicitHeight);
}

uint64_t sub_100042900(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_containerLayoutUpdateHandler);
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_10003B0B8(v4);
}

uint64_t sub_100042924()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004295C()
{
  return sub_10003D2C0(*(void *)(v0 + 16));
}

uint64_t sub_100042964()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100042974()
{
  return sub_10004FD10(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10004297C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004298C()
{
  return swift_release();
}

id sub_100042994()
{
  return sub_1000571B8(*(void **)(v0 + 16));
}

uint64_t sub_10004299C(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0(&qword_100182E30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000429FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100182E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100042A64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_100042AC8(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100042B0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

id sub_100042B5C()
{
  return [*(id *)(v0 + 16) layoutIfNeeded];
}

uint64_t sub_100042B6C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100042BAC()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierLabel);
  id v2 = String._bridgeToObjectiveC()();
  [v1 setText:v2];
}

uint64_t sub_100042C14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100042C5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10005B1B0(a1, *(void **)(v2 + 16), a2);
}

id sub_100042D28(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_fontSizeForLabels] = 0x4032000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_fontSizeForTitle] = 0x4040000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_topViewPadding] = 0x4024000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_commonPadding] = 0x403E000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_commonNegtivePadding] = 0xC03E000000000000;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent] = 0;
  uint64_t v3 = &v2[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentHandle];
  *(void *)uint64_t v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for DetailedConsentNavigationController();
  return [super initWithNibName:0 bundle:0];
}

void sub_100042EEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_1001864E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for UIButton.Configuration();
  uint64_t v107 = *(void *)(v110 - 8);
  uint64_t v5 = __chkstk_darwin(v110);
  unint64_t v108 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v109 = (char *)&v103 - v7;
  id v8 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView;
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView];
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView] = v8;

  uint64_t v11 = *(void **)&v0[v9];
  if (!v11)
  {
    __break(1u);
    goto LABEL_34;
  }
  id v12 = self;
  id v13 = v11;
  id v14 = [v12 systemBackgroundColor];
  [v13 setBackgroundColor:v14];

  id v15 = [v1 view];
  if (!v15)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (!*(void *)&v1[v9])
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  double v16 = v15;
  [v15 addSubview:];

  id v17 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v18 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel;
  NSString v19 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel];
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel] = v17;

  double v20 = *(void **)&v1[v18];
  if (!v20)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v104 = v4;
  if (!*(void *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentHandle + 8])
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v106 = *(void *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentHandle];
  Swift::String v21 = String.uppercased()();
  unint64_t v105 = (unint64_t)"v16@?0@\"ELSSnapshot\"8";
  uint64_t v111 = 0xD000000000000013;
  uint64_t v112 = (void *)0x8000000100129E80;
  String.append(_:)(v21);
  uint64_t v22 = v111;
  uint64_t v23 = v112;
  id v24 = v20;
  swift_bridgeObjectRelease();
  uint64_t v111 = v22;
  uint64_t v112 = v23;
  swift_bridgeObjectRetain();
  v25._countAndFlagsBits = 0x454C5449545FLL;
  v25._object = (void *)0xE600000000000000;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v111, v112);
  swift_bridgeObjectRelease();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setText:v26];

  double v27 = *(void **)&v1[v18];
  if (!v27)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  [v27 setTextAlignment:1];
  float v28 = *(void **)&v1[v18];
  if (!v28)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  id v29 = v28;
  id v30 = [v12 systemBackgroundColor];
  [v29 setBackgroundColor:v30];

  Swift::String v31 = *(void **)&v1[v18];
  if (!v31)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  NSString v32 = self;
  id v33 = v31;
  id v34 = [v32 defaultMetrics];
  id v35 = self;
  id v36 = [v35 systemFontOfSize:32.0 weight:UIFontWeightBold];
  id v37 = [v34 scaledFontForFont:v36];

  [v33 setFont:v37];
  uint64_t v38 = *(void **)&v1[v18];
  if (!v38)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  [v38 sizeToFit];
  double v39 = *(void **)&v1[v18];
  if (!v39)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  [v39 setAdjustsFontSizeToFitWidth:1];
  id v40 = *(void **)&v1[v18];
  if (!v40)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  [v40 setNumberOfLines:2];
  unint64_t v41 = *(void **)&v1[v9];
  if (!v41)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (!*(void *)&v1[v18])
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  [v41 addSubview:];
  id v42 = [objc_allocWithZone((Class)UITextView) init];
  uint64_t v43 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent;
  id v44 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent];
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent] = v42;

  uint64_t v45 = *(void **)&v1[v43];
  if (!v45)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  id v46 = v45;
  id v47 = [v32 defaultMetrics];
  id v48 = [v35 systemFontOfSize:18.0 weight:UIFontWeightRegular];
  id v49 = [v47 scaledFontForFont:v48];

  [v46 setFont:v49];
  id v50 = *(void **)&v1[v43];
  if (!v50)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  Swift::String v51 = String.uppercased()();
  uint64_t v111 = 0xD000000000000013;
  uint64_t v112 = (void *)(v105 | 0x8000000000000000);
  String.append(_:)(v51);
  uint64_t v52 = v111;
  id v53 = v112;
  id v54 = v50;
  swift_bridgeObjectRelease();
  uint64_t v111 = v52;
  uint64_t v112 = v53;
  swift_bridgeObjectRetain();
  v55._countAndFlagsBits = 0x544E45544E4F435FLL;
  v55._object = (void *)0xE800000000000000;
  String.append(_:)(v55);
  swift_bridgeObjectRelease();
  sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, v111, v112);
  swift_bridgeObjectRelease();
  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v54 setText:v56];

  id v57 = *(void **)&v1[v43];
  if (!v57)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  [v57 setEditable:0];
  id v58 = *(void **)&v1[v43];
  if (!v58)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  [v58 setScrollEnabled:1];
  id v59 = [v1 view];
  if (!v59)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (!*(void *)&v1[v43])
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  id v60 = v59;
  [v59 addSubview:];

  id v61 = [v32 defaultMetrics];
  [v35 defaultFontSize];
  id v62 = [v35 systemFontOfSize:];
  id v63 = [v61 scaledFontForFont:v62];

  uint64_t v64 = v109;
  static UIButton.Configuration.plain()();
  *(void *)(swift_allocObject() + 16) = v63;
  id v65 = v63;
  Class v66 = v104;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v67 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v66, 0, 1, v67);
  UIButton.Configuration.titleTextAttributesTransformer.setter();

  sub_10003C374(0, &qword_100182E70);
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  v68(v108, v64, v110);
  uint64_t v69 = UIButton.init(configuration:primaryAction:)();
  uint64_t v70 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn;
  id v71 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn];
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn] = v69;

  id v72 = *(void **)&v1[v70];
  if (!v72)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  id v73 = v72;
  sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0x4545524741, (void *)0xE500000000000000);
  NSString v74 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v73 setTitle:v74 forState:0];

  id v75 = *(void **)&v1[v70];
  if (!v75)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  id v76 = objc_allocWithZone((Class)UIColor);
  id v77 = v75;
  id v78 = [v76 initWithRed:0.0 green:0.478431373 blue:1.0 alpha:1.0];
  [v77 setTitleColor:v78 forState:0];

  id v79 = *(void **)&v1[v70];
  if (!v79)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  id v80 = objc_allocWithZone((Class)UIColor);
  id v81 = v79;
  id v82 = [v80 initWithWhite:0.05 alpha:0.33];
  [v81 setTitleColor:v82 forState:1];

  id v83 = *(void **)&v1[v70];
  if (!v83)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  [v83 addTarget:v1 action:"agreeButtonClicked" forControlEvents:64];
  id v84 = [v1 view];
  if (!v84)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  if (!*(void *)&v1[v70])
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  double v85 = v84;
  [v84 addSubview:];

  v68(v108, v109, v110);
  uint64_t v86 = UIButton.init(configuration:primaryAction:)();
  uint64_t v87 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn;
  id v88 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn];
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn] = v86;

  uint64_t v89 = *(void **)&v1[v87];
  if (!v89)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  id v90 = v89;
  sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0x4545524741534944, (void *)0xE800000000000000);
  NSString v91 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v90 setTitle:v91 forState:0];

  uint64_t v92 = *(void **)&v1[v87];
  if (!v92)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  id v93 = objc_allocWithZone((Class)UIColor);
  id v94 = v92;
  id v95 = [v93 initWithRed:0.0 green:0.478431373 blue:1.0 alpha:1.0];
  [v94 setTitleColor:v95 forState:0];

  id v96 = *(void **)&v1[v87];
  if (!v96)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  id v97 = objc_allocWithZone((Class)UIColor);
  id v98 = v96;
  id v99 = [v97 initWithWhite:0.05 alpha:0.33];
  [v98 setTitleColor:v99 forState:1];

  id v100 = *(void **)&v1[v87];
  if (!v100)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  [v100 addTarget:v1 action:"disagreeButtonClicked" forControlEvents:64];
  id v101 = [v1 view];
  if (!v101)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (*(void *)&v1[v87])
  {
    id v102 = v101;
    [v101 addSubview:];

    (*(void (**)(char *, uint64_t))(v107 + 8))(v109, v110);
    return;
  }
LABEL_63:
  __break(1u);
}

void sub_100043AD0()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v3 = v0;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel;
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel];
  if (!v5)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent;
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent];
  if (!v7)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v108 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn;
  id v8 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn];
  if (!v8)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn;
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn];
  if (!v10)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100123C30;
  id v12 = *(void **)&v3[v1];
  if (!v12)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  id v13 = [v12 leadingAnchor];
  id v14 = [v3 view];
  if (!v14)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  id v15 = v14;
  id v16 = [v14 leadingAnchor];

  id v17 = [v13 constraintEqualToAnchor:v16];
  *(void *)(v11 + 32) = v17;
  uint64_t v18 = *(void **)&v3[v1];
  if (!v18)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  id v19 = [v18 topAnchor];
  id v20 = [v3 view];
  if (!v20)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  Swift::String v21 = v20;
  id v22 = [v20 topAnchor];

  id v23 = [v19 constraintEqualToAnchor:v22 constant:10.0];
  *(void *)(v11 + 40) = v23;
  id v24 = *(void **)&v3[v1];
  if (!v24)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v109 = v9;
  id v25 = [v24 widthAnchor];
  id v26 = [v3 view];
  if (!v26)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  double v27 = v26;
  id v28 = [v26 widthAnchor];

  id v29 = [v25 constraintEqualToAnchor:v28 multiplier:1.0];
  *(void *)(v11 + 48) = v29;
  id v30 = *(void **)&v3[v1];
  if (!v30)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v107 = v6;
  id v31 = [v30 heightAnchor];
  id v32 = [v3 view];
  if (!v32)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  id v33 = v32;
  id v34 = self;
  id v35 = [v33 heightAnchor];

  id v36 = [v31 constraintEqualToAnchor:v35 multiplier:0.1];
  *(void *)(v11 + 56) = v36;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v110 = v34;
  [v34 activateConstraints:isa];

  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_100123C30;
  double v39 = *(void **)&v3[v4];
  if (!v39)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  id v40 = [v39 centerXAnchor];
  unint64_t v41 = *(void **)&v3[v1];
  if (!v41)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  id v42 = [v41 centerXAnchor];
  id v43 = [v40 constraintEqualToAnchor:v42];

  *(void *)(v38 + 32) = v43;
  id v44 = *(void **)&v3[v4];
  if (!v44)
  {
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  id v45 = [v44 bottomAnchor];
  id v46 = *(void **)&v3[v1];
  if (!v46)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  id v47 = [v46 bottomAnchor];
  id v48 = [v45 constraintEqualToAnchor:v47];

  *(void *)(v38 + 40) = v48;
  id v49 = *(void **)&v3[v4];
  if (!v49)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  id v50 = [v49 heightAnchor];
  Swift::String v51 = *(void **)&v3[v1];
  if (!v51)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  id v52 = [v51 heightAnchor];
  id v53 = [v50 constraintEqualToAnchor:v52 multiplier:0.5];

  *(void *)(v38 + 48) = v53;
  id v54 = *(void **)&v3[v4];
  if (!v54)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  id v55 = [v54 widthAnchor];
  NSString v56 = *(void **)&v3[v1];
  if (!v56)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  id v57 = [v56 widthAnchor];
  id v58 = [v55 constraintEqualToAnchor:v57 multiplier:0.8];

  *(void *)(v38 + 56) = v58;
  specialized Array._endMutation()();
  Class v59 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 activateConstraints:v59];

  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_100123D80;
  id v61 = *(void **)&v3[v108];
  if (!v61)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  id v62 = [v61 leadingAnchor];
  id v63 = *(void **)&v3[v1];
  if (!v63)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  id v64 = [v63 leadingAnchor];
  id v65 = [v62 constraintEqualToAnchor:v64 constant:30.0];

  *(void *)(v60 + 32) = v65;
  Class v66 = *(void **)&v3[v108];
  if (!v66)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  id v67 = [v66 bottomAnchor];
  id v68 = [v3 view];
  if (!v68)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v69 = v68;
  id v70 = [v68 bottomAnchor];

  id v71 = [v67 constraintEqualToAnchor:v70 constant:-30.0];
  *(void *)(v60 + 40) = v71;
  specialized Array._endMutation()();
  Class v72 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 activateConstraints:v72];

  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_100123D80;
  NSString v74 = *(void **)&v3[v109];
  if (!v74)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  id v75 = [v74 trailingAnchor];
  id v76 = *(void **)&v3[v1];
  if (!v76)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  id v77 = [v76 trailingAnchor];
  id v78 = [v75 constraintEqualToAnchor:v77 constant:-30.0];

  *(void *)(v73 + 32) = v78;
  id v79 = *(void **)&v3[v109];
  if (!v79)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  id v80 = [v79 bottomAnchor];
  id v81 = [v3 view];
  if (!v81)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  id v82 = v81;
  id v83 = [v81 bottomAnchor];

  id v84 = [v80 constraintEqualToAnchor:v83 constant:-30.0];
  *(void *)(v73 + 40) = v84;
  specialized Array._endMutation()();
  Class v85 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v34 activateConstraints:v85];

  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_100123C30;
  uint64_t v87 = *(void **)&v3[v107];
  if (!v87)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  id v88 = [v87 leadingAnchor];
  uint64_t v89 = *(void **)&v3[v1];
  if (!v89)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  id v90 = [v89 leadingAnchor];
  id v91 = [v88 constraintEqualToAnchor:v90 constant:30.0];

  *(void *)(v86 + 32) = v91;
  uint64_t v92 = *(void **)&v3[v107];
  if (!v92)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  id v93 = [v92 topAnchor];
  id v94 = *(void **)&v3[v1];
  if (!v94)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  id v95 = [v94 bottomAnchor];
  id v96 = [v93 constraintEqualToAnchor:v95 constant:30.0];

  *(void *)(v86 + 40) = v96;
  id v97 = *(void **)&v3[v107];
  if (!v97)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  id v98 = [v97 trailingAnchor];
  id v99 = *(void **)&v3[v1];
  if (!v99)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  id v100 = [v99 trailingAnchor];
  id v101 = [v98 constraintEqualToAnchor:v100 constant:-30.0];

  *(void *)(v86 + 48) = v101;
  id v102 = *(void **)&v3[v107];
  if (!v102)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  id v103 = [v102 bottomAnchor];
  v104 = *(void **)&v3[v109];
  if (!v104)
  {
LABEL_77:
    __break(1u);
    return;
  }
  id v105 = [v104 topAnchor];
  id v106 = [v103 constraintEqualToAnchor:v105 constant:-30.0];

  *(void *)(v86 + 56) = v106;
  specialized Array._endMutation()();
  Class v111 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v110 activateConstraints:v111];
}

void sub_1000445D4()
{
  uint64_t v1 = v0;
  id v20 = [v0 parentViewController];
  if (!v20) {
    return;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2) {
    goto LABEL_15;
  }
  id v3 = [v2 viewControllers];

  sub_10003C374(0, (unint64_t *)&qword_100183670);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18)
    {
LABEL_5:
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_27;
        }
        id v5 = *(id *)(v4 + 32);
      }
      id v20 = v5;
      swift_bridgeObjectRelease();
      type metadata accessor for EnhancedLoggingConsentViewController();
      uint64_t v6 = swift_dynamicCastClass();
      if (!v6) {
        goto LABEL_15;
      }
      uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentHandle + 8];
      if (!v7)
      {
LABEL_29:
        __break(1u);
        return;
      }
      id v8 = (void *)v6;
      uint64_t v9 = *(void **)(v6 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_consentHandles);
      uint64_t v10 = sub_1000F6D1C(*(void *)&v1[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentHandle], v7, v9);
      if (v11)
      {
LABEL_15:
        id v17 = v20;
LABEL_16:

        return;
      }
      uint64_t v12 = v10 + 1;
      if (!__OFADD__(v10, 1))
      {
        if (v12 >= v9[2])
        {
          type metadata accessor for ConsentSignatureController();
          id v19 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
          [v8 showViewController:v19 sender:v1];

          id v17 = v19;
          goto LABEL_16;
        }
        if ((v12 & 0x8000000000000000) == 0)
        {
          id v13 = &v9[2 * v12];
          uint64_t v14 = v13[4];
          uint64_t v15 = v13[5];
          objc_allocWithZone((Class)type metadata accessor for DetailedConsentNavigationController());
          swift_bridgeObjectRetain();
          id v16 = sub_100042D28(v14, v15);
          [v8 showViewController:v16 sender:v1];

          goto LABEL_15;
        }
        goto LABEL_28;
      }
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
  }
  else if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_5;
  }

  swift_bridgeObjectRelease();
}

void sub_1000448B8()
{
  uint64_t v1 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  unint64_t v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v22[-v5];
  uint64_t v7 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v11 = [self sharedManager];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 6;
  *(unsigned char *)(v12 + 24) = 0;
  *(void *)(v12 + 32) = 0;
  *(unsigned char *)(v12 + 40) = 1;
  aBlock[4] = sub_100044D90;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046950;
  aBlock[3] = &unk_10014DF40;
  id v13 = _Block_copy(aBlock);
  swift_release();
  [v11 transactionWithBlock:v13];
  _Block_release(v13);

  id v14 = [v0 parentViewController];
  if (v14)
  {
    uint64_t v15 = v14;
    self;
    uint64_t v16 = swift_dynamicCastObjCClass();
    if (v16)
    {
      id v17 = (void *)v16;
      if (qword_100182828 != -1) {
        swift_once();
      }
      uint64_t v18 = type metadata accessor for ModalPresentationCoordinator(0);
      sub_10003C3B0(v18, (uint64_t)qword_10018A440);
      swift_beginAccess();
      if ((sub_1000D986C(v17, 1, 0, 1, 0, 0) & 1) == 0)
      {
        id v19 = v15;
        uint64_t v20 = swift_bridgeObjectRetain();
        uint64_t v21 = sub_1000DC28C(v20, v17);

        sub_1000D7D60(v21, (uint64_t)v6);
        swift_release();
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
        {
          sub_100044E28((uint64_t)v6);
        }
        else
        {
          sub_10003C4A8((uint64_t)v6, (uint64_t)v10);
          sub_1000B7DBC((uint64_t)v10, (uint64_t)v4);
          sub_100044E28((uint64_t)v4);
          sub_10003C50C((uint64_t)v10);
        }
      }
      swift_endAccess();
    }
  }
}

id sub_100044C98()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DetailedConsentNavigationController();
  return [super dealloc];
}

uint64_t type metadata accessor for DetailedConsentNavigationController()
{
  return self;
}

uint64_t sub_100044D80()
{
  return _swift_deallocObject(v0, 41, 7);
}

id sub_100044D90(id result)
{
  id v2 = result;
  uint64_t v3 = *(void *)(v1 + 32);
  char v4 = *(unsigned char *)(v1 + 40);
  if ((*(unsigned char *)(v1 + 24) & 1) == 0) {
    uint64_t result = [result setStatus:*(void *)(v1 + 16)];
  }
  if ((v4 & 1) == 0)
  {
    return [v2 setConsent:v3];
  }
  return result;
}

uint64_t sub_100044E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100044E20()
{
  return swift_release();
}

uint64_t sub_100044E28(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100044E88()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100044EC0()
{
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_fontSizeForLabels] = 0x4032000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_fontSizeForTitle] = 0x4040000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_topViewPadding] = 0x4024000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_commonPadding] = 0x403E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_commonNegtivePadding] = 0xC03E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_headerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_agreeBtn] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_disagreeBtn] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics35DetailedConsentNavigationController_consentContent] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100045050()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseVisualEffectView();
  [super dealloc];
}

uint64_t type metadata accessor for BaseVisualEffectView()
{
  return self;
}

NSString sub_1000450A8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100182F30 = (uint64_t)result;
  return result;
}

uint64_t sub_1000450E0(uint64_t (*a1)(void))
{
  id v2 = [self defaultCenter];
  if (qword_100182738 != -1) {
    swift_once();
  }
  [v2 postNotificationName:qword_100182F30 object:0];

  return a1();
}

uint64_t sub_1000451BC(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v8 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v25 = (uint64_t)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v26 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v13 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  [self reset];
  uint64_t v16 = a2 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle;
  uint64_t v17 = *(void *)(a2 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle);
  int v18 = *(unsigned __int8 *)(v16 + 8);
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v19, (uint64_t)qword_10018A440);
  swift_beginAccess();
  if ((sub_1000D986C(a1, 1, v17, v18, a3, a4) & 1) == 0)
  {
    id v20 = a1;
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = sub_1000DC28C(v21, v20);

    sub_1000D7D60(v22, (uint64_t)v12);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v26) == 1)
    {
      sub_100044E28((uint64_t)v12);
    }
    else
    {
      sub_10003C4A8((uint64_t)v12, (uint64_t)v15);
      uint64_t v23 = v25;
      sub_1000B7DBC((uint64_t)v15, v25);
      sub_100044E28(v23);
      sub_10003C50C((uint64_t)v15);
    }
  }
  return swift_endAccess();
}

uint64_t sub_100045478(void *a1, int a2, void *a3, void *a4, void *aBlock, uint64_t a6, uint64_t a7, void (*a8)(id, uint64_t, uint64_t))
{
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  id v15 = a3;
  id v16 = a4;
  id v17 = a1;
  a8(v16, a7, v14);

  return swift_release();
}

void sub_100045550(void *a1, uint64_t a2, SEL *a3)
{
  uint64_t v5 = self;
  id v7 = a1;
  unsigned int v6 = objc_msgSend(objc_msgSend(v5, "currentPlatform"), "isCheckerBoardActive");
  swift_unknownObjectRelease();
  if (v6)
  {
    objc_msgSend(objc_msgSend(v5, "currentPlatform"), *a3);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

id sub_1000457AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DKViewControllerDelegateResponder();
  return [super dealloc];
}

uint64_t type metadata accessor for DKViewControllerDelegateResponder()
{
  return self;
}

uint64_t sub_100045808(uint64_t a1, char a2)
{
  int v3 = a2 & 1;
  id v4 = [self sharedApplication];
  id v5 = [v4 userInterfaceLayoutDirection];

  uint64_t v6 = 15;
  uint64_t v7 = 16;
  if (a1 != 15) {
    uint64_t v7 = a1;
  }
  if (a1 != 16) {
    uint64_t v6 = v7;
  }
  if (v5 == (id)1 && v3 == 0) {
    return v6;
  }
  else {
    return a1;
  }
}

uint64_t sub_1000458B0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000458E8()
{
  return sub_1000D8010(*(void *)(v0 + 16));
}

uint64_t sub_1000458F0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (int *)type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__presentationTransitionStyle);
  char v11 = *(unsigned char *)(v3 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__presentationTransitionStyle + 8);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  uint64_t v13 = qword_100182828;
  swift_retain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v14, (uint64_t)qword_10018A440);
  swift_beginAccess();
  id v15 = &v9[v7[9]];
  *(void *)uint64_t v9 = a1;
  v9[8] = 0;
  *((void *)v9 + 2) = 0;
  id v16 = a1;
  swift_retain();
  Date.init()();
  v9[v7[8]] = 1;
  *(void *)id v15 = v10;
  v15[8] = v11;
  id v17 = [v16 popoverPresentationController];
  int v18 = v17;
  if (v17)
  {
    [v17 sourceRect];
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    uint64_t v26 = v25;
  }
  else
  {
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    uint64_t v24 = 0;
    uint64_t v26 = 0;
  }
  double v27 = (uint64_t (**)())&v9[v7[10]];
  id v28 = &v9[v7[11]];
  *(void *)id v28 = v20;
  *((void *)v28 + 1) = v22;
  *((void *)v28 + 2) = v24;
  *((void *)v28 + 3) = v26;
  v28[32] = v18 == 0;
  void *v27 = sub_100045FBC;
  v27[1] = (uint64_t (*)())v12;
  sub_1000D9BC8((void **)v9);
  sub_10003C50C((uint64_t)v9);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_100045B24(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v7 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = [a1 presentedViewController];

  if (v17)
  {
    int v18 = (void *)swift_allocObject();
    void v18[2] = a1;
    v18[3] = v3;
    v18[4] = a2;
    v18[5] = a3;
    aBlock[4] = sub_100045F60;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000358AC;
    aBlock[3] = &unk_10014DFE0;
    uint64_t v19 = _Block_copy(aBlock);
    id v20 = a1;
    uint64_t v21 = v3;
    swift_retain();
    swift_release();
    [v20 dismissViewControllerAnimated:1 completion:v19];
    _Block_release(v19);
  }
  else
  {
    uint64_t v22 = *(void *)&v3[OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle];
    uint64_t v32 = v14;
    uint64_t v33 = v22;
    int v23 = v3[OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle
                            + 8];
    if (qword_100182828 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for ModalPresentationCoordinator(0);
    sub_10003C3B0(v24, (uint64_t)qword_10018A440);
    swift_beginAccess();
    if ((sub_1000D986C(a1, 1, v33, v23, a2, a3) & 1) == 0)
    {
      id v25 = a1;
      uint64_t v26 = swift_bridgeObjectRetain();
      uint64_t v27 = sub_1000DC28C(v26, v25);

      sub_1000D7D60(v27, (uint64_t)v12);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v12, 1, v13) == 1)
      {
        sub_100044E28((uint64_t)v12);
      }
      else
      {
        sub_10003C4A8((uint64_t)v12, (uint64_t)v16);
        sub_1000B7DBC((uint64_t)v16, (uint64_t)v10);
        sub_100044E28((uint64_t)v10);
        sub_10003C50C((uint64_t)v16);
      }
    }
    swift_endAccess();
  }
  id v28 = self;
  unsigned int v29 = objc_msgSend(objc_msgSend(v28, "currentPlatform"), "isCheckerBoardActive");
  uint64_t result = swift_unknownObjectRelease();
  if (v29)
  {
    objc_msgSend(objc_msgSend(v28, "currentPlatform"), "showSceneStatusBar");
    swift_unknownObjectRelease();
    objc_msgSend(objc_msgSend(v28, "currentPlatform"), "sceneStatusBarStyle:", 0);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100045F18()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100045F60()
{
  return sub_1000451BC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100045F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100045F7C()
{
  return swift_release();
}

uint64_t sub_100045F84()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100045FBC()
{
  return sub_1000450E0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100045FCC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = self;
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 localizedStringForKey:v9];

  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  uint64_t v14 = self;
  id v15 = [v14 mainBundle];
  v34._object = (void *)0xE000000000000000;
  v16._countAndFlagsBits = v11;
  v16._object = v13;
  uint64_t v17 = a1;
  v18.value._countAndFlagsBits = a1;
  uint64_t v19 = a2;
  v18.value._object = a2;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v34._countAndFlagsBits = 0;
  Swift::String v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v18, (NSBundle)v15, v20, v34);
  swift_bridgeObjectRelease();

  BOOL v22 = v21._countAndFlagsBits == a4 && v21._object == a5;
  if (v22 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    id v23 = [v14 mainBundle];
    v35._object = (void *)0xE000000000000000;
    v24._countAndFlagsBits = a4;
    v24._object = a5;
    v25.value._countAndFlagsBits = v17;
    v25.value._object = v19;
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v35._countAndFlagsBits = 0;
    Swift::String v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v35);

    if (v27._countAndFlagsBits == a4 && v27._object == a5) {
      goto LABEL_9;
    }
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
LABEL_9:
      swift_bridgeObjectRelease();
      id v28 = [v14 mainBundle];
      v36._object = (void *)0xE000000000000000;
      v29._countAndFlagsBits = a4;
      v29._object = a5;
      v30._countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      v36._countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v36);
    }
  }
  uint64_t v31 = String.init(format:arguments:)();
  swift_bridgeObjectRelease();
  return v31;
}

id sub_10004622C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v2 = result;
    id v3 = (id)MobileGestalt_copy_deviceClass_obj();

    if (v3)
    {
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v5;

      if (v4 == 0x656E6F685069 && v6 == 0xE600000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v7 = 0x454E4F4850495FLL;
        unint64_t v8 = 0xE700000000000000;
LABEL_26:
        String.append(_:)(*(Swift::String *)&v7);
        return (id)a1;
      }
      if (v4 == 1684099177 && v6 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = 1095780703;
LABEL_15:
        unint64_t v7 = v9 & 0xFFFF0000FFFFFFFFLL | 0x4400000000;
        unint64_t v8 = 0xE500000000000000;
        goto LABEL_26;
      }
      if (v4 == 1685016681 && v6 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = 1330661727;
        goto LABEL_15;
      }
      if (v4 == 0x5654656C707041 && v6 == 0xE700000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v7 = 5657695;
        unint64_t v8 = 0xE300000000000000;
        goto LABEL_26;
      }
      if (v4 == 0x447974696C616552 && v6 == 0xED00006563697665)
      {
        swift_bridgeObjectRelease();
LABEL_24:
        unint64_t v7 = 0x4E4F495349565FLL;
        unint64_t v8 = 0xE700000000000000;
        goto LABEL_26;
      }
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v10) {
        goto LABEL_24;
      }
    }
    unint64_t v7 = 0x434952454E45475FLL;
    unint64_t v8 = 0xE800000000000000;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

void sub_100046500()
{
  unint64_t v1 = (unint64_t)[v0 connectedScenes];
  sub_10003C374(0, &qword_100183040);
  sub_1000468E0();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v2 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    Set.Iterator.init(_cocoa:)();
    uint64_t v2 = v25;
    uint64_t v23 = v26;
    uint64_t v3 = v27;
    int64_t v4 = (int64_t)v28;
    unint64_t v5 = v29;
  }
  else
  {
    int64_t v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
    uint64_t v23 = v2 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v2 + 56);
  }
  id v9 = (id)(v2 & 0x7FFFFFFFFFFFFFFFLL);
  int64_t v10 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!__CocoaSet.Iterator.next()()
    || (swift_unknownObjectRetain(),
        swift_dynamicCast(),
        id v11 = v24,
        swift_unknownObjectRelease(),
        unint64_t v1 = v4,
        uint64_t v12 = v5,
        !v24))
  {
LABEL_41:
    sub_100046948();
    return;
  }
  while (1)
  {
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    if (v17) {
      break;
    }

    int64_t v4 = v1;
    unint64_t v5 = v12;
    if (v2 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (v5)
    {
      uint64_t v12 = (v5 - 1) & v5;
      unint64_t v13 = __clz(__rbit64(v5)) | (v4 << 6);
      unint64_t v1 = v4;
    }
    else
    {
      int64_t v14 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v22) {
          goto LABEL_40;
        }
        goto LABEL_33;
      }
      if (v14 >= v10) {
        goto LABEL_41;
      }
      unint64_t v15 = *(void *)(v23 + 8 * v14);
      unint64_t v1 = v4 + 1;
      if (!v15)
      {
        unint64_t v1 = v4 + 2;
        if (v4 + 2 >= v10) {
          goto LABEL_41;
        }
        unint64_t v15 = *(void *)(v23 + 8 * v1);
        if (!v15)
        {
          unint64_t v1 = v4 + 3;
          if (v4 + 3 >= v10) {
            goto LABEL_41;
          }
          unint64_t v15 = *(void *)(v23 + 8 * v1);
          if (!v15)
          {
            unint64_t v1 = v4 + 4;
            if (v4 + 4 >= v10) {
              goto LABEL_41;
            }
            unint64_t v15 = *(void *)(v23 + 8 * v1);
            if (!v15)
            {
              Swift::String v16 = (char *)(v4 + 5);
              while ((char *)v10 != v16)
              {
                unint64_t v15 = *(void *)(v23 + 8 * (void)v16++);
                if (v15)
                {
                  unint64_t v1 = (unint64_t)(v16 - 1);
                  goto LABEL_26;
                }
              }
              goto LABEL_41;
            }
          }
        }
      }
LABEL_26:
      uint64_t v12 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v1 << 6);
    }
    id v11 = *(id *)(*(void *)(v2 + 48) + 8 * v13);
    if (!v11) {
      goto LABEL_41;
    }
  }
  Swift::String_optional v18 = (void *)v17;
  id v9 = v11;
  id v19 = [v18 windows];
  sub_10003C374(0, &qword_100183050);
  unint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v1 >> 62) {
    goto LABEL_39;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_40:
    swift_bridgeObjectRelease();

    goto LABEL_41;
  }
LABEL_33:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_36;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v20 = *(id *)(v1 + 32);
LABEL_36:
    Swift::String v21 = v20;
    swift_bridgeObjectRelease();

    sub_100046948();
    [v21 bounds];

    return;
  }
  __break(1u);
}

unint64_t sub_1000468E0()
{
  unint64_t result = qword_100183048;
  if (!qword_100183048)
  {
    sub_10003C374(255, &qword_100183040);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183048);
  }
  return result;
}

uint64_t sub_100046948()
{
  return swift_release();
}

void sub_100046950(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

id sub_1000469C8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_10003AFD0((uint64_t *)&unk_1001864E0);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UIButton.Configuration();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  Swift::String v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  Swift::String_optional v18 = (char *)&v37 - v17;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_fontSizeTestRunner] = 0x4034000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_fontSizeButton] = 0x4030000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_verticalPadding] = 0x4024000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_horizontalPadding] = 0x4020000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_bottomMarginWithoutButtons] = 0x4030000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconViewWidthHeight] = 0x4034000000000000;
  *(int64x2_t *)&v4[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonMinimumSize] = vdupq_n_s64(0x4046000000000000uLL);
  uint64_t v19 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_stackView;
  id v20 = objc_allocWithZone((Class)UIStackView);
  Swift::String v21 = v4;
  *(void *)&v4[v19] = [v20 init];
  uint64_t v22 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_runnerContainerView;
  *(void *)&v21[v22] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v23 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerView;
  *(void *)&v21[v23] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v24 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel;
  *(void *)&v21[v24] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v25 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconView;
  type metadata accessor for TestRunnerIconView();
  *(void *)&v21[v25] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v26 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView;
  *(void *)&v21[v26] = [objc_allocWithZone((Class)UIProgressView) init];
  uint64_t v27 = &v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_delegate];
  *(_OWORD *)uint64_t v27 = 0u;
  *((_OWORD *)v27 + 1) = 0u;
  *((void *)v27 + 4) = 0;
  id v28 = &v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler];
  *(void *)id v28 = 0;
  *((void *)v28 + 1) = 0;
  v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_hasExplicitHeight] = 0;
  *(void *)&v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_idleTimeoutTimer] = 0;
  *(void *)&v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint] = 0;
  *(void *)&v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint] = 0;
  id v29 = [self defaultMetrics];
  id v30 = [self systemFontOfSize:16.0];
  id v31 = [v29 scaledFontForFont:v30];

  static UIButton.Configuration.plain()();
  *(void *)(swift_allocObject() + 16) = v31;
  id v32 = v31;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v33 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v11, 0, 1, v33);
  UIButton.Configuration.titleTextAttributesTransformer.setter();

  sub_10003C374(0, &qword_100182E70);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  *(void *)&v21[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton] = UIButton.init(configuration:primaryAction:)();

  Swift::String v34 = (objc_class *)type metadata accessor for TestRunnerView();
  v37.receiver = v21;
  v37.super_class = v34;
  id v35 = [super initWithFrame:a1, a2, a3, a4];
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  return v35;
}

id sub_100046E78(void *a1)
{
  Swift::String v34 = a1;
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_1001864E0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIButton.Configuration();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v33 - v10;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_fontSizeTestRunner] = 0x4034000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_fontSizeButton] = 0x4030000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_verticalPadding] = 0x4024000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_horizontalPadding] = 0x4020000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_bottomMarginWithoutButtons] = 0x4030000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconViewWidthHeight] = 0x4034000000000000;
  *(int64x2_t *)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonMinimumSize] = vdupq_n_s64(0x4046000000000000uLL);
  uint64_t v12 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_stackView;
  id v13 = objc_allocWithZone((Class)UIStackView);
  uint64_t v14 = v1;
  *(void *)&v1[v12] = [v13 init];
  uint64_t v15 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_runnerContainerView;
  *(void *)&v14[v15] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v16 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerView;
  *(void *)&v14[v16] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v17 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel;
  *(void *)&v14[v17] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v18 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconView;
  type metadata accessor for TestRunnerIconView();
  *(void *)&v14[v18] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v19 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView;
  *(void *)&v14[v19] = [objc_allocWithZone((Class)UIProgressView) init];
  id v20 = &v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_delegate];
  *(_OWORD *)id v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((void *)v20 + 4) = 0;
  Swift::String v21 = &v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler];
  *(void *)Swift::String v21 = 0;
  *((void *)v21 + 1) = 0;
  v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_hasExplicitHeight] = 0;
  *(void *)&v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_idleTimeoutTimer] = 0;
  *(void *)&v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint] = 0;
  id v22 = [self defaultMetrics];
  id v23 = [self systemFontOfSize:16.0];
  id v24 = [v22 scaledFontForFont:v23];

  static UIButton.Configuration.plain()();
  *(void *)(swift_allocObject() + 16) = v24;
  id v25 = v24;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v26 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v4, 0, 1, v26);
  UIButton.Configuration.titleTextAttributesTransformer.setter();

  sub_10003C374(0, &qword_100182E70);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  *(void *)&v14[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton] = UIButton.init(configuration:primaryAction:)();

  uint64_t v27 = (objc_class *)type metadata accessor for TestRunnerView();
  v35.receiver = v14;
  v35.super_class = v27;
  id v28 = v34;
  id v29 = [super initWithCoder:v34];

  id v30 = *(void (**)(char *, uint64_t))(v6 + 8);
  id v31 = v29;
  v30(v11, v5);
  if (v31) {

  }
  return v31;
}

void sub_10004731C()
{
  uint64_t v1 = sub_10003AFD0((uint64_t *)&unk_100182E60);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_stackView);
  [v4 setAxis:1];
  [v4 setAlignment:0];
  [v4 setDistribution:0];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel);
  sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000013, (void *)0x800000010012A250);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v5 setText:v6];

  [v5 setNumberOfLines:0];
  id v7 = [self defaultMetrics];
  id v8 = [self boldSystemFontOfSize:20.0];
  id v9 = [v7 scaledFontForFont:v8];

  [v5 setFont:v9];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconView) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView);
  id v11 = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.478431373 blue:1.0 alpha:1.0];
  [v10 setTintColor:v11];

  id v12 = [self opaqueSeparatorColor];
  [v10 setTrackTintColor:v12];

  [v10 setAlpha:0.0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v13 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton);
  [v13 addTarget:v0 action:"skipPressed" forControlEvents:64];
  sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 1346980691, (void *)0xE400000000000000);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setTitle:v14 forState:0];

  id v15 = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.478431373 blue:1.0 alpha:1.0];
  [v13 setTitleColor:v15 forState:0];

  [v13 setContentHorizontalAlignment:0];
  [v13 setAlpha:0.0];
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = [self currentDevice];
  id v17 = [v16 userInterfaceIdiom];

  if (v17 == (id)6)
  {
    sub_10003C374(0, &qword_100182E78);
    static UIShape.capsule.getter();
    uint64_t v18 = type metadata accessor for UIShape();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v3, 0, 1, v18);
    uint64_t v19 = (void *)UIHoverStyle.init(shape:)();
    [v13 setHoverStyle:v19];
  }
}

void sub_100047798()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TestRunnerView();
  [super tintColorDidChange];
  id v1 = [v0 tintAdjustmentMode];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton];
  if (v1 == (id)2) {
    id v3 = [self grayColor];
  }
  else {
    id v3 = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.478431373 blue:1.0 alpha:1.0];
  }
  id v4 = v3;
  [v2 setTitleColor:v3 forState:0];
}

id sub_1000478AC()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_runnerContainerView];
  [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconView]];
  [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel]];
  [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView]];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerView];
  [v2 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton]];
  id v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_stackView];
  [v3 addArrangedSubview:v1];
  [v3 addArrangedSubview:v2];

  return [v0 addSubview:v3];
}

void sub_1000479A0()
{
  id v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerView];
  id v89 = v2;
  id v3 = [v2 heightAnchor];
  id v4 = [v3 constraintGreaterThanOrEqualToConstant:44.0];

  objc_super v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint];
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint] = v4;

  id v6 = [v2 heightAnchor];
  id v7 = [v6 constraintEqualToConstant:16.0];

  id v8 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint];
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint] = v7;

  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100123E40;
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_stackView];
  id v11 = [v10 topAnchor];
  id v12 = [v1 topAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v9 + 32) = v13;
  id v14 = [v10 bottomAnchor];
  id v15 = [v1 bottomAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v9 + 40) = v16;
  id v17 = [v10 leadingAnchor];
  id v18 = [v1 leadingAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18 constant:15.0];

  *(void *)(v9 + 48) = v19;
  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel];
  id v21 = [v20 bottomAnchor];
  id v22 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView];
  id v23 = [v22 topAnchor];
  id v24 = [v21 constraintEqualToAnchor:v23 constant:-10.0];

  *(void *)(v9 + 56) = v24;
  id v25 = [v20 leadingAnchor];
  id v26 = [v10 leadingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26 constant:28.0];

  *(void *)(v9 + 64) = v27;
  id v88 = v20;
  id v28 = [v20 trailingAnchor];
  id v29 = [v10 trailingAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29 constant:-28.0];

  *(void *)(v9 + 72) = v30;
  id v31 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_iconView];
  id v32 = [v31 centerYAnchor];
  id v33 = [v20 centerYAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v9 + 80) = v34;
  id v35 = [v31 leadingAnchor];
  Swift::String v36 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_runnerContainerView];
  id v37 = [v36 leadingAnchor];
  id v38 = [v35 constraintEqualToAnchor:v37];

  *(void *)(v9 + 88) = v38;
  id v39 = [v31 widthAnchor];
  id v40 = [v39 constraintEqualToConstant:20.0];

  *(void *)(v9 + 96) = v40;
  id v41 = [v31 heightAnchor];
  id v42 = [v41 constraintEqualToConstant:20.0];

  *(void *)(v9 + 104) = v42;
  id v43 = [v22 leadingAnchor];
  id v44 = [v10 leadingAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 constant:28.0];

  *(void *)(v9 + 112) = v45;
  id v46 = [v22 trailingAnchor];
  id v90 = v10;
  id v47 = [v10 trailingAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47 constant:-28.0];

  *(void *)(v9 + 120) = v48;
  id v49 = [v89 leadingAnchor];
  id v50 = [v36 leadingAnchor];
  id v51 = [v49 constraintEqualToAnchor:v50];

  *(void *)(v9 + 128) = v51;
  id v52 = [v89 trailingAnchor];
  id v53 = v36;
  id v54 = [v36 trailingAnchor];
  id v55 = [v52 constraintEqualToAnchor:v54];

  *(void *)(v9 + 136) = v55;
  id v56 = [v89 heightAnchor];
  id v57 = [v56 constraintEqualToConstant:44.0];

  *(void *)(v9 + 144) = v57;
  id v58 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton];
  id v59 = [v58 topAnchor];
  id v60 = [v89 topAnchor];
  id v61 = [v59 constraintEqualToAnchor:v60 constant:10.0];

  *(void *)(v9 + 152) = v61;
  id v62 = [v58 bottomAnchor];
  id v63 = [v89 bottomAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63 constant:-10.0];

  *(void *)(v9 + 160) = v64;
  id v65 = [v58 centerXAnchor];
  id v66 = [v89 centerXAnchor];
  id v67 = [v65 constraintEqualToAnchor:v66];

  *(void *)(v9 + 168) = v67;
  id v68 = [v58 widthAnchor];
  [v58 sizeThatFits:0.0, 0.0];
  id v69 = [v68 constraintEqualToConstant:];

  *(void *)(v9 + 176) = v69;
  unint64_t v92 = v9;
  specialized Array._endMutation()();
  id v70 = [v88 topAnchor];
  id v71 = [v36 topAnchor];
  id v72 = [v70 constraintEqualToAnchor:v71];

  id v73 = v72;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  id v74 = [v90 trailingAnchor];
  id v75 = [v1 trailingAnchor];
  id v76 = [v74 constraintEqualToAnchor:v75 constant:-15.0];

  id v77 = [v22 bottomAnchor];
  id v78 = [v53 bottomAnchor];
  id v79 = [v77 constraintEqualToAnchor:v78];

  LODWORD(v80) = 1148829696;
  [v76 setPriority:v80];
  LODWORD(v81) = 1148829696;
  [v79 setPriority:v81];
  if (v92 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v86 = _CocoaArrayWrapper.endIndex.getter();
    BOOL v87 = __OFADD__(v86, 2);
    uint64_t v83 = v86 + 2;
    if (!v87)
    {
LABEL_5:
      sub_1000CEF34(v83);
      specialized Array._endMutation()();
      id v76 = v76;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v82 = *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v83 = v82 + 2;
    if (!__OFADD__(v82, 2)) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_14:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_6:
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v84 = v79;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  Class v85 = self;
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();

  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v85 activateConstraints:isa];
}

id sub_100048538(char a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v8 = v7;
  if ((a4 & 1) == 0) {
    [*(id *)(v8 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel) setTextAlignment:];
  }
  switch(a1)
  {
    case 1:
      sub_10006C1C8(3, 0, a5 & 1, a6, a7);
      id v28 = *(void **)(v8 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView);
      id result = [v28 alpha];
      if (v29 == 0.0)
      {
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v28;
        id v31 = self;
        id v41 = sub_10003C7E8;
        uint64_t v42 = v30;
        id v37 = _NSConcreteStackBlock;
        uint64_t v38 = 1107296256;
        id v39 = sub_1000358AC;
        id v40 = &unk_10014E270;
        id v32 = _Block_copy(&v37);
        id v33 = v28;
        swift_retain();
        swift_release();
        [v31 animateWithDuration:0x10000 delay:v32 options:0 animations:0.375 completion:0.0];
        _Block_release(v32);
        id result = (id)swift_release();
      }
      if ((a2 & 0x100000000) == 0)
      {
        [v28 progress];
        BOOL v35 = v34 < *(float *)&a2;
        LODWORD(v36) = a2;
        id result = [v28 setProgress:v35 animated:v36];
      }
      break;
    case 2:
      sub_10006C1C8(1, 0, a5 & 1, a6, a7);
      id v14 = *(void **)(v8 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView);
      id result = [v14 alpha];
      if (v20 == 1.0)
      {
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = v14;
        id v18 = self;
        id v41 = sub_100042CF0;
        uint64_t v42 = v21;
        id v37 = _NSConcreteStackBlock;
        uint64_t v38 = 1107296256;
        id v19 = &unk_10014E1D0;
        goto LABEL_10;
      }
      break;
    case 3:
      sub_10003C374(0, &qword_100183128);
      v22._countAndFlagsBits = 0x7261576465646E65;
      v22._object = (void *)0xEC000000676E696ELL;
      Class isa = UIImage.init(imageLiteralResourceName:)(v22).super.isa;
      sub_10006C1C8(2, (uint64_t)isa, a5 & 1, a6, a7);

      id v14 = *(void **)(v8 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView);
      id result = [v14 alpha];
      if (v24 == 1.0)
      {
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = v14;
        id v18 = self;
        id v41 = sub_100042CF0;
        uint64_t v42 = v25;
        id v37 = _NSConcreteStackBlock;
        uint64_t v38 = 1107296256;
        id v19 = &unk_10014E180;
        goto LABEL_10;
      }
      break;
    default:
      sub_10006C1C8(0, 0, a5 & 1, a6, a7);
      id v14 = *(void **)(v8 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_progressIndicatorView);
      id result = [v14 alpha];
      if (v16 == 1.0)
      {
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v14;
        id v18 = self;
        id v41 = sub_100042CF0;
        uint64_t v42 = v17;
        id v37 = _NSConcreteStackBlock;
        uint64_t v38 = 1107296256;
        id v19 = &unk_10014E220;
LABEL_10:
        id v39 = sub_1000358AC;
        id v40 = v19;
        id v26 = _Block_copy(&v37);
        id v27 = v14;
        swift_retain();
        swift_release();
        [v18 animateWithDuration:0x20000 delay:v26 options:0.125 animations:0.0 completion:v37 v38];
        _Block_release(v26);
        id result = (id)swift_release();
      }
      break;
  }
  return result;
}

void sub_100048A50(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v7 = [self standardUserDefaults];
  NSString v8 = String._bridgeToObjectiveC()();
  unsigned __int8 v9 = [v7 BOOLForKey:v8];

  if ((v9 & 1) != 0
    || (unsigned int v10 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive"), swift_unknownObjectRelease(), v10))
  {
    uint64_t v11 = OBJC_IVAR____TtC11Diagnostics14TestRunnerView_idleTimeoutTimer;
    [*(id *)(v4 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_idleTimeoutTimer) invalidate];
    id v12 = *(void **)(v4 + v11);
    *(void *)(v4 + v11) = 0;

    switch(a1)
    {
      case 1:
        goto LABEL_12;
      case 2:
      case 5:
        goto LABEL_6;
      case 3:
        goto LABEL_18;
      case 4:
        goto LABEL_19;
      default:
        id v13 = self;
        v35[4] = sub_100048F38;
        v35[5] = 0;
        v35[0] = _NSConcreteStackBlock;
        v35[1] = 1107296256;
        v35[2] = sub_100046950;
        v35[3] = &unk_10014E130;
        id v14 = _Block_copy(v35);
        id v15 = [v13 scheduledTimerWithTimeInterval:0 repeats:v14 block:60.0];
        _Block_release(v14);
        double v16 = *(void **)(v4 + v11);
        *(void *)(v4 + v11) = v15;

        goto LABEL_9;
    }
  }
  switch(a1)
  {
    case 1:
LABEL_12:
      if (a3)
      {
        uint64_t v25 = *(void **)(v4 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel);
        NSString v26 = String._bridgeToObjectiveC()();
        [v25 setText:v26];

        id v27 = *(void (**)(uint64_t))(v4
                                             + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
        if (v27)
        {
          uint64_t v28 = swift_retain();
          v27(v28);
          sub_10003B0B8((uint64_t)v27);
        }
      }
      sub_100049108();
      return;
    case 2:
    case 5:
LABEL_6:
      if (a3)
      {
        uint64_t v17 = *(void **)(v4 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel);
        NSString v18 = String._bridgeToObjectiveC()();
        [v17 setText:v18];

        id v19 = *(void (**)(uint64_t))(v4
                                             + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
        if (v19)
        {
          uint64_t v20 = swift_retain();
          v19(v20);
          sub_10003B0B8((uint64_t)v19);
        }
      }
      goto LABEL_23;
    case 3:
LABEL_18:
      uint64_t v29 = 0xD000000000000012;
      uint64_t v30 = (void *)0x800000010012A270;
      goto LABEL_20;
    case 4:
LABEL_19:
      uint64_t v29 = 0x454E4E4F43534944;
      uint64_t v30 = (void *)0xED0000474E495443;
LABEL_20:
      sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v29, v30);
      id v31 = *(void **)(v4 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel);
      NSString v32 = String._bridgeToObjectiveC()();
      [v31 setText:v32];

      id v33 = *(void (**)(uint64_t))(v4
                                           + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
      if (v33)
      {
        uint64_t v34 = swift_retain();
        v33(v34);
        sub_10003B0B8((uint64_t)v33);
      }
      swift_bridgeObjectRelease();
LABEL_23:
      sub_100049354();
      break;
    default:
LABEL_9:
      sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000013, (void *)0x800000010012A250);
      uint64_t v21 = *(void **)(v4 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_titleLabel);
      NSString v22 = String._bridgeToObjectiveC()();
      [v21 setText:v22];

      id v23 = *(void (**)(uint64_t))(v4
                                           + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
      if (v23)
      {
        uint64_t v24 = swift_retain();
        v23(v24);
        sub_10003B0B8((uint64_t)v23);
      }
      swift_bridgeObjectRelease();
      sub_100049354();
      break;
  }
}

void sub_100048F38()
{
  static os_log_type_t.info.getter();
  sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  uint64_t v0 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();

  sub_1000A795C(14);
}

uint64_t sub_100048FC4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_delegate;
  swift_beginAccess();
  sub_100049810(v1, (uint64_t)v10);
  if (!v11) {
    return sub_100049760((uint64_t)v10);
  }
  sub_100042A64((uint64_t)v10, (uint64_t)v9);
  sub_100049760((uint64_t)v10);
  uint64_t v2 = *(void *)(*sub_100042AC8(v9, v9[3]) + OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState);
  if (v2 && (id v3 = [*(id *)(v2 + 40) suiteName]) != 0)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  sub_1000C9010(v5, v7);
  swift_bridgeObjectRelease();
  return sub_100042B0C((uint64_t)v9);
}

void sub_100049108()
{
  id v1 = [self standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  unsigned __int8 v3 = [v1 BOOLForKey:v2];

  if ((v3 & 1) == 0)
  {
    unsigned __int8 v4 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive");
    swift_unknownObjectRelease();
    if ((v4 & 1) == 0)
    {
      uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton);
      [v5 alpha];
      if (v6 == 0.0)
      {
        uint64_t v7 = swift_allocObject();
        *(void *)(v7 + 16) = v5;
        NSString v8 = self;
        v15[4] = sub_10003C0D4;
        v15[5] = v7;
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 1107296256;
        v15[2] = sub_1000358AC;
        v15[3] = &unk_10014E108;
        unsigned __int8 v9 = _Block_copy(v15);
        id v10 = v5;
        swift_retain();
        swift_release();
        [v8 animateWithDuration:0x10000 delay:v9 options:0 animations:0.375 completion:0.0];
        _Block_release(v9);
        swift_release();
      }
      uint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint);
      if (v11) {
        [v11 setActive:1];
      }
      id v12 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint);
      if (v12) {
        [v12 setActive:0];
      }
      id v13 = *(void (**)(uint64_t))(v0
                                           + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
      if (v13)
      {
        uint64_t v14 = swift_retain();
        v13(v14);
        sub_10003B0B8((uint64_t)v13);
      }
    }
  }
}

id sub_100049354()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_skipButton);
  [v1 alpha];
  if (v2 == 1.0)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    unsigned __int8 v4 = self;
    void v11[4] = sub_100042994;
    v11[5] = v3;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1000358AC;
    v11[3] = &unk_10014E0B8;
    uint64_t v5 = _Block_copy(v11);
    id v6 = v1;
    swift_retain();
    swift_release();
    [v4 animateWithDuration:0x20000 delay:v5 options:0 animations:0.125 completion:0.0];
    _Block_release(v5);
    swift_release();
  }
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerShowingHeightConstraint);
  if (v7) {
    [v7 setActive:0];
  }
  id result = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint);
  if (result) {
    id result = [result setActive:1];
  }
  unsigned __int8 v9 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
  if (v9)
  {
    uint64_t v10 = swift_retain();
    v9(v10);
    return (id)sub_10003B0B8((uint64_t)v9);
  }
  return result;
}

void sub_1000494FC()
{
  sub_100049760(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_delegate);
  sub_10003B0B8(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler));

  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_buttonContainerHidingHeightConstraint);
}

id sub_1000495E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TestRunnerView();
  return [super dealloc];
}

uint64_t type metadata accessor for TestRunnerView()
{
  return self;
}

uint64_t sub_100049728()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_hasExplicitHeight);
}

uint64_t sub_10004973C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_containerLayoutUpdateHandler);
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_10003B0B8(v4);
}

uint64_t sub_100049760(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0(&qword_100183120);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000497C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000497F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100049808()
{
  return swift_release();
}

uint64_t sub_100049810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100183120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1000498C4(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_tableView;
  id v4 = objc_allocWithZone((Class)type metadata accessor for IntrinsicSizeAdjustingTableView());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 initWithFrame:2 style:0.0, 0.0, 0.0, 0.0];
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_noContentView;
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x415441445F4F4ELL, (void *)0xE700000000000000);
  id v7 = objc_allocWithZone((Class)_UIContentUnavailableView);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithFrame:v8 title:0 style:0.0, 0.0, 0.0, 0.0];

  *(void *)&v5[v6] = v9;
  uint64_t v10 = OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton;
  *(void *)&v5[v10] = [self boldButton];
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_suiteManager] = a1;
  id v11 = a1;

  _StringGuts.grow(_:)(31);
  int DeviceClass = GestaltGetDeviceClass();
  uint64_t v13 = sub_1000AF310(DeviceClass);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v28 = v13;
  uint64_t v29 = v15;
  v16._object = (void *)0x800000010012A350;
  v16._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v16);
  NSString v17 = String._bridgeToObjectiveC()();
  NSString v18 = self;
  id v19 = [v18 _systemImageNamed:v17];

  if (v19)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v19 = [v18 imageNamed:v20];
  }
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x5F4E4F4953534553, (void *)0xEF59524F54534948);
  NSString v21 = String._bridgeToObjectiveC()();
  v27.receiver = v5;
  v27.super_class = (Class)type metadata accessor for SelfServiceSessionHistoryViewController();
  id v22 = [super initWithTitle:v21 detailText:0 icon:v19 contentLayout:3];

  id v23 = v22;
  id v24 = [v23 navigationItem];
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v24 setBackButtonTitle:v25];

  return v23;
}

void sub_100049C44()
{
  id v1 = v0;
  id v2 = [v0 navigationItem];
  [v2 setHidesBackButton:1];

  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_tableView];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v3 setDataSource:v1];
  [v3 setDelegate:v1];
  [v3 setShowsVerticalScrollIndicator:0];
  [v3 setScrollEnabled:0];
  id v4 = [self clearColor];
  [v3 setBackgroundColor:v4];

  [v3 setRowHeight:UITableViewAutomaticDimension];
  [v3 setEstimatedRowHeight:100.0];
  type metadata accessor for SelfServiceSessionHistoryCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v6 = String._bridgeToObjectiveC()();
  [v3 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v6];

  id v7 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton];
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 1162760004, (void *)0xE400000000000000);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setTitle:v8 forState:0];

  sub_10003C374(0, (unint64_t *)&qword_1001831A8);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v7 addAction:v10 forControlEvents:64];

  id v11 = [v1 scrollView];
  [v11 setShowsVerticalScrollIndicator:0];
}

void sub_100049F10()
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (id v1 = Strong,
        id v2 = [Strong navigationController],
        v1,
        v2))
  {
    id v3 = [v2 popViewControllerAnimated:1];
  }
  else
  {
    swift_beginAccess();
    id v4 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v4) {
      return;
    }
    id v3 = v4;
    [v4 dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_100049FE8()
{
  id v1 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_suiteManager]
                + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v1)
  {
    id v2 = [v1 history];
    sub_10003C374(0, &qword_100186210);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v4 = sub_10004B088(v3);
    if (!(v4 >> 62))
    {
LABEL_3:
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  else
  {
    unint64_t v4 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_4:
  swift_bridgeObjectRelease();
  if (v5 < 1)
  {
    id v7 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_noContentView];
    if (!v7) {
      goto LABEL_11;
    }
    id v8 = v7;
    [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v0 contentView];
    [v6 addSubview:v8];
  }
  else
  {
    id v6 = [v0 contentView];
    [v6 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_tableView]];
  }

LABEL_11:
  id v9 = [v0 buttonTray];
  [v9 addButton:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_doneButton]];
}

void sub_10004A1B8()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_tableView];
  id v2 = [v0 contentView];
  unsigned int v3 = [v1 isDescendantOfView:v2];

  if (v3)
  {
    unint64_t v4 = self;
    sub_10003AFD0((uint64_t *)&unk_100182E20);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100123C30;
    id v6 = [v1 leadingAnchor];
    id v7 = [v0 contentView];
    id v8 = [v7 leadingAnchor];

    id v9 = [v6 constraintEqualToAnchor:v8 constant:15.0];
    *(void *)(v5 + 32) = v9;
    id v10 = [v1 trailingAnchor];
    id v11 = [v0 contentView];
    id v12 = [v11 trailingAnchor];

    id v13 = [v10 constraintEqualToAnchor:v12 constant:-15.0];
    *(void *)(v5 + 40) = v13;
    id v14 = [v1 topAnchor];
    id v15 = [v0 contentView];
    id v16 = [v15 topAnchor];

    id v17 = [v14 constraintEqualToAnchor:v16];
    *(void *)(v5 + 48) = v17;
    id v18 = [v1 bottomAnchor];
    id v19 = [v0 contentView];
    id v20 = [v19 bottomAnchor];

    id v21 = [v18 constraintEqualToAnchor:v20];
    *(void *)(v5 + 56) = v21;
    specialized Array._endMutation()();
    sub_10003C374(0, (unint64_t *)&qword_1001831A0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 activateConstraints:isa];

    [v1 invalidateIntrinsicContentSize];
  }
  else
  {
    id v23 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_noContentView];
    if (v23)
    {
      id v46 = v23;
      id v24 = [v0 contentView];
      unsigned int v25 = [v46 isDescendantOfView:v24];

      if (v25)
      {
        NSString v26 = self;
        sub_10003AFD0((uint64_t *)&unk_100182E20);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_100123C30;
        id v28 = [v46 leadingAnchor];
        id v29 = [v0 contentView];
        id v30 = [v29 leadingAnchor];

        id v31 = [v28 constraintEqualToAnchor:v30 constant:15.0];
        *(void *)(v27 + 32) = v31;
        id v32 = [v46 trailingAnchor];
        id v33 = [v0 contentView];
        id v34 = [v33 trailingAnchor];

        id v35 = [v32 constraintEqualToAnchor:v34 constant:-15.0];
        *(void *)(v27 + 40) = v35;
        id v36 = [v46 topAnchor];
        id v37 = [v0 contentView];
        id v38 = [v37 topAnchor];

        id v39 = [v36 constraintEqualToAnchor:v38];
        *(void *)(v27 + 48) = v39;
        id v40 = [v46 bottomAnchor];
        id v41 = [v0 contentView];
        id v42 = [v41 bottomAnchor];

        id v43 = [v40 constraintEqualToAnchor:v42];
        *(void *)(v27 + 56) = v43;
        specialized Array._endMutation()();
        sub_10003C374(0, (unint64_t *)&qword_1001831A0);
        Class v45 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v26 activateConstraints:v45];

        Class v44 = v45;
      }
      else
      {
        Class v44 = (Class)v46;
      }
    }
  }
}

id sub_10004A850()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceSessionHistoryViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for SelfServiceSessionHistoryViewController()
{
  return self;
}

char *sub_10004AA24(void *a1, char *a2)
{
  uint64_t v5 = sub_10003AFD0((uint64_t *)&unk_100183190);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [a1 dequeueReusableCellWithIdentifier:v8];

  if (v9)
  {
    type metadata accessor for SelfServiceSessionHistoryCell();
    id v10 = (id)swift_dynamicCastClass();
    if (v10) {
      goto LABEL_5;
    }
  }
  type metadata accessor for SelfServiceSessionHistoryCell();
  id v10 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
LABEL_5:
  id v11 = self;
  id v12 = (char *)v10;
  id v13 = [v11 secondarySystemBackgroundColor];
  [v12 setBackgroundColor:v13];

  id v14 = *(void **)(*(void *)(v2 + OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_suiteManager)
                 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v14)
  {
    id v15 = [v14 history];
    sub_10003C374(0, &qword_100186210);
    unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v17 = sub_10004B088(v16);
  }
  else
  {
    unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage;
  }
  id v18 = a2;
  unint64_t v19 = IndexPath.row.getter();
  if ((v17 & 0xC000000000000001) == 0)
  {
    if ((v19 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v19 < *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v20 = (char *)*(id *)(v17 + 8 * v19 + 32);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_24;
  }
  id v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_12:
  a2 = v20;
  swift_bridgeObjectRelease();
  id v21 = [a2 testSuiteName];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  unsigned int v25 = (uint64_t *)&v12[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteName];
  uint64_t *v25 = v22;
  v25[1] = v24;
  swift_bridgeObjectRelease();
  if (v25[1])
  {
    NSString v26 = *(void **)&v12[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteNameLabel];
    swift_bridgeObjectRetain();
    id v27 = v26;
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v27 setText:v28];
  }
  id v29 = [a2 date];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v30 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v7, 0, 1, v30);
  uint64_t v31 = (uint64_t)&v12[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date];
  swift_beginAccess();
  sub_10004B560((uint64_t)v7, v31);
  swift_endAccess();
  sub_100064B68();
  sub_10004B5C8((uint64_t)v7);
  id v32 = (char *)[a2 results];
  if (v32)
  {
    id v18 = v32;
    id v33 = [v32 components];
    sub_10003C374(0, &qword_100183180);
    unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v34 >> 62))
    {
      uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_17:
      swift_bridgeObjectRelease();
      if (v35)
      {
        id v36 = v12;
        [v36 setAccessoryType:1];

        id v18 = v36;
      }

      goto LABEL_20;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_20:

  return v12;
}

unint64_t sub_10004B088(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  unint64_t v18 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    unint64_t v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1) {
      __break(1u);
    }
    unint64_t v4 = v17 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3) {
      return v2;
    }
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t v7 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        uint64_t v8 = v18;
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v9 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v9) {
            goto LABEL_34;
          }
          id v10 = *(id *)(v18 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v9) {
            goto LABEL_37;
          }
          uint64_t v11 = (uint64_t)v10;
          id v12 = *(id *)(v18 + 32 + 8 * v1);
        }
        id v13 = v12;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v18 & 0x8000000000000000) != 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v8 = sub_100039FF0(v18);
          unint64_t v18 = v8;
        }
        uint64_t v14 = (v8 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(void *)(v14 + 32) = v13;
        specialized Array._endMutation()();
        uint64_t v15 = v18;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || (v18 & 0x8000000000000000) != 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v15 = sub_100039FF0(v18);
          unint64_t v18 = v15;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v6 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(void *)(v6 + 32) = v11;
        specialized Array._endMutation()();
      }
      unint64_t v5 = v7;
      if (v4 == v7) {
        return v18;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_1000A0580(v1);
    unint64_t v18 = v2;
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

void sub_10004B2A4(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = *(void **)(*(void *)&v2[OBJC_IVAR____TtC11Diagnostics39SelfServiceSessionHistoryViewController_suiteManager]
                + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v4)
  {
    id v5 = [v4 history];
    sub_10003C374(0, &qword_100186210);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v7 = sub_10004B088(v6);
  }
  else
  {
    unint64_t v7 = (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v8 = IndexPath.row.getter();
  if ((v7 & 0xC000000000000001) == 0)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v9 = *(id *)(v7 + 8 * v8 + 32);
      goto LABEL_8;
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
  id v19 = v9;
  swift_bridgeObjectRelease();
  id v10 = [v19 results];
  if (!v10) {
    goto LABEL_16;
  }
  a1 = v10;
  id v11 = [v10 components];
  sub_10003C374(0, &qword_100183180);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62) {
    goto LABEL_22;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_11:
  swift_bridgeObjectRelease();
  if (v13)
  {
    [v2 navigationController];
    id v14 = [v19 testSuiteName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    objc_allocWithZone((Class)sub_10003AFD0(&qword_100183188));
    id v15 = a1;
    unint64_t v16 = (void *)UIHostingController.init(rootView:)();
    id v17 = [v2 navigationController];
    if (v17)
    {
      unint64_t v18 = v17;
      [v17 pushViewController:v16 animated:1];
    }
    return;
  }

LABEL_16:
}

uint64_t sub_10004B560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0((uint64_t *)&unk_100183190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004B5C8(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_100183190);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10004B628()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10004B660()
{
}

id sub_10004B668()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for Assertions()) init];
  qword_10018A358 = (uint64_t)result;
  return result;
}

void sub_10004B698(uint64_t a1)
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleAssertion;
  if (!*(void *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleAssertion) && (byte_10018A379 & 1) == 0)
  {
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_100123B50;
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    uint64_t v4 = (void *)qword_10018A3E8;
    *(void *)(v3 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    *(void *)(v3 + 64) = sub_10004D94C();
    *(void *)(v3 + 32) = v4;
    id v5 = v4;
    unint64_t v6 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    id v7 = [objc_allocWithZone((Class)SBSStatusBarStyleOverridesAssertion) initWithStatusBarStyleOverrides:0x8000 forPID:getpid() exclusive:0 showsWhenForeground:0];
    unint64_t v8 = *(void **)(a1 + v1);
    *(void *)(a1 + v1) = v7;

    id v9 = *(void **)(a1 + v1);
    if (v9)
    {
      id v10 = v9;
      sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000019, (void *)0x800000010012AA40);
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v10 setStatusString:v11];

      unint64_t v12 = *(void **)(a1 + v1);
      if (v12)
      {
        id v20 = sub_10004B95C;
        uint64_t v21 = 0;
        unint64_t v16 = _NSConcreteStackBlock;
        uint64_t v17 = 1107296256;
        unint64_t v18 = sub_1000E7710;
        id v19 = &unk_10014E310;
        uint64_t v13 = _Block_copy(&v16);
        id v20 = sub_10004BA50;
        uint64_t v21 = 0;
        unint64_t v16 = _NSConcreteStackBlock;
        uint64_t v17 = 1107296256;
        unint64_t v18 = sub_1000358AC;
        id v19 = &unk_10014E338;
        id v14 = _Block_copy(&v16);
        id v15 = v12;
        [v15 acquireWithHandler:v13 invalidationHandler:v14];
        _Block_release(v14);
        _Block_release(v13);
      }
    }
  }
}

uint64_t sub_10004B95C(char a1)
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123B50;
  unint64_t v3 = sub_10004D9B4();
  uint64_t v4 = 28277;
  if (a1) {
    uint64_t v4 = 0;
  }
  unint64_t v5 = 0xE200000000000000;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = v3;
  if (a1) {
    unint64_t v5 = 0xE000000000000000;
  }
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v5;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  return swift_bridgeObjectRelease();
}

void sub_10004BA50()
{
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100123B50;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_10018A3E8;
  *(void *)(v0 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  *(void *)(v0 + 64) = sub_10004D94C();
  *(void *)(v0 + 32) = v1;
  id v2 = v1;
  id v3 = (id)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
}

void sub_10004BB5C(uint64_t a1)
{
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123B50;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_10018A3E8;
  *(void *)(v2 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  *(void *)(v2 + 64) = sub_10004D94C();
  *(void *)(v2 + 32) = v3;
  id v4 = v3;
  unint64_t v5 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleAssertion;
  id v7 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleAssertion);
  if (v7)
  {
    [v7 invalidate];
    id v7 = *(void **)(a1 + v6);
  }
  *(void *)(a1 + v6) = 0;
}

void sub_10004BC88(uint64_t a1, uint64_t a2)
{
  id v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendAssertions);
  swift_beginAccess();
  if (!*(void *)(*v3 + 16) || (sub_10007D93C(a2), (v4 & 1) == 0))
  {
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100123B50;
    *(void *)(v5 + 56) = &type metadata for Int32;
    *(void *)(v5 + 64) = &protocol witness table for Int32;
    *(_DWORD *)(v5 + 32) = a2;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    id v6 = [self targetWithPid:a2];
    NSString v7 = String._bridgeToObjectiveC()();
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [self attributeWithDomain:v7 name:v8];

    sub_10003AFD0((uint64_t *)&unk_100182E20);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100123F00;
    *(void *)(v10 + 32) = v9;
    specialized Array._endMutation()();
    id v11 = objc_allocWithZone((Class)RBSAssertion);
    id v12 = v6;
    id v13 = v9;
    NSString v14 = String._bridgeToObjectiveC()();
    sub_10003C374(0, (unint64_t *)&unk_1001832E0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [v11 initWithExplanation:v14 target:v12 attributes:isa];

    v29[0] = 0;
    unsigned int v17 = [v16 acquireWithError:v29];
    id v18 = v29[0];
    if (v17)
    {
      swift_beginAccess();
      id v19 = v18;
      id v20 = v16;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v28 = *v3;
      *id v3 = 0x8000000000000000;
      sub_1000FEA60((uint64_t)v20, a2, isUniquelyReferenced_nonNull_native);
      *id v3 = v28;
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
    else
    {
      id v22 = v29[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v23 = static OS_os_log.default.getter();
      os_log_type_t v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        unsigned int v25 = (uint8_t *)swift_slowAlloc();
        v29[0] = (id)swift_slowAlloc();
        *(_DWORD *)unsigned int v25 = 136315138;
        swift_errorRetain();
        sub_10003AFD0(&qword_100185690);
        uint64_t v26 = String.init<A>(describing:)();
        sub_10004DAA8(v26, v27, (uint64_t *)v29);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unable to acquire Task Suspend Assertion, error: %s", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
}

void sub_10004C19C(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendAssertions);
  swift_beginAccess();
  uint64_t v21 = v1;
  uint64_t v2 = *v1;
  uint64_t v22 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v8 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    uint64_t v13 = qword_1001827C8;
    id v14 = *(id *)(*(void *)(v2 + 56) + 8 * i);
    if (v13 != -1) {
      swift_once();
    }
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_100123B50;
    id v16 = [v14 target];
    id v17 = [v16 description];

    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_10004D9B4();
    *(void *)(v15 + 32) = v18;
    *(void *)(v15 + 40) = v20;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    [v14 invalidate];

    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v6) {
      goto LABEL_25;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v6) {
        goto LABEL_25;
      }
      unint64_t v11 = *(void *)(v22 + 8 * v7);
      if (!v11)
      {
        int64_t v7 = v10 + 2;
        if (v10 + 2 >= v6) {
          goto LABEL_25;
        }
        unint64_t v11 = *(void *)(v22 + 8 * v7);
        if (!v11)
        {
          int64_t v7 = v10 + 3;
          if (v10 + 3 >= v6) {
            goto LABEL_25;
          }
          unint64_t v11 = *(void *)(v22 + 8 * v7);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v11 - 1) & v11;
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v6)
  {
LABEL_25:
    swift_release();
    *uint64_t v21 = _swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v11 = *(void *)(v22 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_25;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
}

void sub_10004C474(uint64_t a1)
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics10Assertions_sharingClient;
  if (!*(void *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_sharingClient))
  {
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_100123B50;
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    uint64_t v4 = (void *)qword_10018A3E8;
    *(void *)(v3 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    *(void *)(v3 + 64) = sub_10004D94C();
    *(void *)(v3 + 32) = v4;
    id v5 = v4;
    int64_t v6 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    id v7 = [objc_allocWithZone((Class)SFClient) init];
    unint64_t v8 = *(void **)(a1 + v1);
    *(void *)(a1 + v1) = v7;

    id v9 = *(void **)(a1 + v1);
    if (v9)
    {
      id v10 = v9;
      id v11 = String._bridgeToObjectiveC()();
      [v10 activateAssertionWithIdentifier:v11];
    }
  }
}

void sub_10004C624(uint64_t a1)
{
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123B50;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_10018A3E8;
  *(void *)(v2 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  *(void *)(v2 + 64) = sub_10004D94C();
  *(void *)(v2 + 32) = v3;
  id v4 = v3;
  id v5 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics10Assertions_sharingClient;
  [*(id *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_sharingClient) invalidate];
  id v7 = *(void **)(a1 + v6);
  *(void *)(a1 + v6) = 0;
}

void sub_10004C74C(uint64_t a1)
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics10Assertions_systemGesturesAssertion;
  if (!*(void *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_systemGesturesAssertion))
  {
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_100123B50;
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    id v4 = (void *)qword_10018A3E8;
    *(void *)(v3 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    *(void *)(v3 + 64) = sub_10004D94C();
    *(void *)(v3 + 32) = v4;
    id v5 = v4;
    uint64_t v6 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v7 = [self mainBundle];
    id v8 = [v7 bundleIdentifier];

    if (v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;
    }
    else
    {
      uint64_t v10 = 0;
    }
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (v10)
    {
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v12 = 0;
    }
    id v13 = [objc_allocWithZone((Class)AXAssertion) initWithType:v11 identifier:v12];

    id v14 = *(void **)(a1 + v1);
    *(void *)(a1 + v1) = v13;
  }
}

void sub_10004C978(uint64_t a1)
{
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123B50;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_10018A3E8;
  *(void *)(v2 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  *(void *)(v2 + 64) = sub_10004D94C();
  *(void *)(v2 + 32) = v3;
  id v4 = v3;
  id v5 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_systemGesturesAssertion);
  *(void *)(a1 + OBJC_IVAR____TtC11Diagnostics10Assertions_systemGesturesAssertion) = 0;
}

void sub_10004CA90()
{
  id v1 = (id)MobileGestalt_get_current_device();
  if (v1)
  {
    uint64_t v2 = v1;
    int deviceSupportsEnhancedMultitasking = MobileGestalt_get_deviceSupportsEnhancedMultitasking();

    if (deviceSupportsEnhancedMultitasking)
    {
      uint64_t v4 = OBJC_IVAR____TtC11Diagnostics10Assertions_isChamoisWindowingUIEnabledUserSetting;
      if (*(unsigned char *)(v0 + OBJC_IVAR____TtC11Diagnostics10Assertions_isChamoisWindowingUIEnabledUserSetting) == 2)
      {
        id v5 = [objc_allocWithZone((Class)SBSTestAutomationService) init];
        unsigned int v6 = [v5 isChamoisWindowingUIEnabled];

        *(unsigned char *)(v0 + v4) = v6;
        static os_log_type_t.default.getter();
        if (qword_1001827C8 != -1) {
          swift_once();
        }
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v7 = swift_allocObject();
        *(_OWORD *)(v7 + 16) = xmmword_100123B50;
        *(void *)(v7 + 56) = &type metadata for Bool;
        *(void *)(v7 + 64) = &protocol witness table for Bool;
        *(unsigned char *)(v7 + 32) = v6;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        if (v6)
        {
          static os_log_type_t.default.getter();
          os_log(_:dso:log:_:_:)();
          id v8 = [objc_allocWithZone((Class)SBSTestAutomationService) init];
          [v8 setChamoisWindowingUIEnabled:0];
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10004CC70()
{
  id v1 = (id)MobileGestalt_get_current_device();
  if (v1)
  {
    uint64_t v2 = v1;
    int deviceSupportsEnhancedMultitasking = MobileGestalt_get_deviceSupportsEnhancedMultitasking();

    if (deviceSupportsEnhancedMultitasking)
    {
      uint64_t v4 = OBJC_IVAR____TtC11Diagnostics10Assertions_isChamoisWindowingUIEnabledUserSetting;
      int v5 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11Diagnostics10Assertions_isChamoisWindowingUIEnabledUserSetting);
      if (v5 != 2)
      {
        uint64_t v6 = v5 & 1;
        static os_log_type_t.default.getter();
        if (qword_1001827C8 != -1) {
          swift_once();
        }
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v7 = swift_allocObject();
        *(_OWORD *)(v7 + 16) = xmmword_100123B50;
        *(void *)(v7 + 56) = &type metadata for Bool;
        *(void *)(v7 + 64) = &protocol witness table for Bool;
        *(unsigned char *)(v7 + 32) = v6;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        id v8 = [objc_allocWithZone((Class)SBSTestAutomationService) init];
        [v8 setChamoisWindowingUIEnabled:v6];

        *(unsigned char *)(v0 + v4) = 2;
      }
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_10004CDCC()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics10Assertions____lazy_storage___airDropDiscoveryController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10Assertions____lazy_storage___airDropDiscoveryController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics10Assertions____lazy_storage___airDropDiscoveryController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)SFAirDropDiscoveryController) init];
    unsigned __int8 v5 = [v4 isNearbySharingEnabled];
    *(unsigned char *)(v0 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState) = v5;
    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

void sub_10004CE5C()
{
  uint64_t v1 = v0;
  CFStringRef v2 = (const __CFString *)kSFOperationDiscoverableModeKey;
  if (!kSFOperationDiscoverableModeKey)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v3 = (__CFString *)String._bridgeToObjectiveC()();
  CFPropertyListRef v4 = CFPreferencesCopyAppValue(v2, v3);

  if (v4 && swift_dynamicCast()) {
    goto LABEL_6;
  }
  if (!kSFOperationDiscoverableModeOff)
  {
LABEL_16:
    __break(1u);
    return;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_6:
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)kSFOperationDiscoverableModeContactsOnly;
  if (kSFOperationDiscoverableModeContactsOnly)
  {
    type metadata accessor for CFString(0);
    sub_10004E198(&qword_1001832F8, type metadata accessor for CFString);
    id v7 = v5;
    id v8 = v6;
    char v9 = static _CFObject.== infix(_:_:)();

    if (v9)
    {

      uint64_t v10 = 1;
LABEL_12:
      *(void *)(v1 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting) = v10;
      id v16 = sub_10004CDCC();
      [v16 setDiscoverableMode:0];

      return;
    }
  }
  NSString v11 = (void *)kSFOperationDiscoverableModeEveryone;
  if (kSFOperationDiscoverableModeEveryone)
  {
    type metadata accessor for CFString(0);
    sub_10004E198(&qword_1001832F8, type metadata accessor for CFString);
    id v12 = v11;
    id v13 = v5;
    id v14 = v12;
    char v15 = static _CFObject.== infix(_:_:)();

    if (v15)
    {
      uint64_t v10 = 2;
      goto LABEL_12;
    }
  }
  else
  {
  }
  *(void *)(v1 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting) = 0;
}

void sub_10004D0A4()
{
  unsigned __int8 v1 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isCheckerBoardActive");
  swift_unknownObjectRelease();
  if ((v1 & 1) != 0
    || (uint64_t v2 = OBJC_IVAR____TtC11Diagnostics10Assertions_captureButtonAssertion,
        *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics10Assertions_captureButtonAssertion)))
  {
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    id v6 = (id)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    id v6 = [self sharedInstance];
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [v6 acquireCaptureButtonSuppressionAssertionWithOptions:0 reason:v3];

    *(void *)(v0 + v2) = v4;
    swift_unknownObjectRelease();
    if (!*(void *)(v0 + v2))
    {
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      NSString v5 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
    }
  }
}

id sub_10004D2B0()
{
  uint64_t v29 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  NSString v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  uint64_t v22 = OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleQueue;
  uint64_t v24 = sub_10003C374(0, (unint64_t *)&qword_100182E40);
  id v6 = v0;
  static DispatchQoS.unspecified.getter();
  uint64_t v31 = _swiftEmptyArrayStorage;
  uint64_t v26 = sub_10004E198((unint64_t *)&unk_100183A70, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  uint64_t v27 = sub_10003AFD0(&qword_100183300);
  unint64_t v25 = sub_10004E1E0();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v19 = *(void (**)(char *))(v1 + 104);
  uint64_t v20 = v1 + 104;
  uint64_t v23 = v3;
  id v7 = v3;
  uint64_t v8 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  unsigned int v28 = enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:);
  uint64_t v9 = v29;
  v19(v7);
  *(void *)(v21 + v22) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v22 = OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendQueue;
  static DispatchQoS.unspecified.getter();
  uint64_t v31 = _swiftEmptyArrayStorage;
  v18[1] = v4;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v10 = v8;
  NSString v11 = v19;
  ((void (*)(char *, uint64_t, uint64_t))v19)(v23, v10, v9);
  *(void *)&v6[v22] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v22 = OBJC_IVAR____TtC11Diagnostics10Assertions_preventProxCardsQueue;
  static DispatchQoS.unspecified.getter();
  uint64_t v31 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v12 = v23;
  uint64_t v13 = v29;
  ((void (*)(char *, void, uint64_t))v11)(v23, v28, v29);
  *(void *)&v6[v22] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v14 = OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue;
  static DispatchQoS.unspecified.getter();
  uint64_t v31 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  ((void (*)(char *, void, uint64_t))v11)(v12, v28, v13);
  *(void *)&v6[v14] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v6[OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleAssertion] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11Diagnostics10Assertions_captureButtonAssertion] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendAssertions] = _swiftEmptyDictionarySingleton;
  v6[OBJC_IVAR____TtC11Diagnostics10Assertions_isVoiceControlEnabled] = 1;
  *(void *)&v6[OBJC_IVAR____TtC11Diagnostics10Assertions_sharingClient] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11Diagnostics10Assertions_systemGesturesAssertion] = 0;
  v6[OBJC_IVAR____TtC11Diagnostics10Assertions_isChamoisWindowingUIEnabledUserSetting] = 2;
  v6[OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11Diagnostics10Assertions____lazy_storage___airDropDiscoveryController] = 0;
  v6[OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled] = 0;
  *(void *)&v6[OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting] = 0;
  char v15 = &v6[OBJC_IVAR____TtC11Diagnostics10Assertions_sharingdDomain];
  *char v15 = 0xD000000000000032;
  v15[1] = 0x800000010012ADC0;

  id v16 = (objc_class *)type metadata accessor for Assertions();
  v30.receiver = v6;
  v30.super_class = v16;
  return [super init];
}

id sub_10004D814()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Assertions();
  return [super dealloc];
}

uint64_t type metadata accessor for Assertions()
{
  return self;
}

unint64_t sub_10004D94C()
{
  unint64_t result = qword_100184FF0;
  if (!qword_100184FF0)
  {
    sub_10003C374(255, (unint64_t *)&qword_1001832C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184FF0);
  }
  return result;
}

unint64_t sub_10004D9B4()
{
  unint64_t result = qword_1001832D0;
  if (!qword_1001832D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001832D0);
  }
  return result;
}

uint64_t sub_10004DA08(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10004DA30(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_10004DAA8(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_10004DAA8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10004DB7C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10003C5D8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10003C5D8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100042B0C((uint64_t)v12);
  return v7;
}

uint64_t sub_10004DB7C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10004DD38(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10004DD38(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10004DDD0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10004E02C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10004E02C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10004DDD0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10004DF48(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10004DF48(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10003AFD0(&qword_1001832F0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10004DFB0(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = String.UTF16View.index(_:offsetBy:)();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = String.UTF8View._foreignIndex(_:offsetBy:)();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_10004E02C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003AFD0(&qword_1001832F0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10004E180(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004E190()
{
  return swift_release();
}

uint64_t sub_10004E198(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10004E1E0()
{
  unint64_t result = qword_100183A80;
  if (!qword_100183A80)
  {
    sub_10003B070(&qword_100183300);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183A80);
  }
  return result;
}

id sub_10004E410()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BaseViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for BaseViewController()
{
  return self;
}

void sub_10004E4F8(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FileBrowsingTableViewController();
  [super viewWillAppear:a1 & 1];
  id v3 = [v1 navigationController];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 navigationBar];

    [v5 setBackgroundImage:0 forBarMetrics:0];
  }
  id v6 = [v1 navigationController];
  if (v6)
  {
    int64_t v7 = v6;
    id v8 = [v6 navigationBar];

    [v8 setShadowImage:0];
  }
}

void sub_10004E648()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, (uint64_t)v1 + OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_directoryURL, v2);
  uint64_t v6 = URL.lastPathComponent.getter();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100075D10(v6, v8);
  swift_bridgeObjectRelease();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v9];
}

uint64_t sub_10004EA5C()
{
  sub_10003B0B8(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_completion));
  uint64_t v1 = v0 + OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_directoryURL;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_bridgeObjectRelease();
}

id sub_10004EAEC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FileBrowsingTableViewController();
  return [super dealloc];
}

uint64_t sub_10004EBB8()
{
  return type metadata accessor for FileBrowsingTableViewController();
}

uint64_t type metadata accessor for FileBrowsingTableViewController()
{
  uint64_t result = qword_100183420;
  if (!qword_100183420) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10004EC0C()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_10004ECB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)&v3[OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_completion];
  *uint64_t v7 = 0;
  v7[1] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_remoteFiles] = _swiftEmptyArrayStorage;
  uint64_t v8 = &v3[OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_directoryURL];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  uint64_t v11 = *v7;
  *uint64_t v7 = a2;
  v7[1] = a3;
  sub_10003AF68(a2);
  sub_10003B0B8(v11);
  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for FileBrowsingTableViewController();
  [super initWithStyle:0];
  id result = [v12 tableView];
  if (result)
  {
    uint64_t v14 = result;
    [result setDelegate:v12];

    id result = [v12 tableView];
    if (result)
    {
      char v15 = result;
      [result setDataSource:v12];

      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10004EE5C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = *((unsigned __int8 *)v0 + 16);
  uint64_t v4 = type metadata accessor for ImageLoader();
  unint64_t v5 = sub_10004FB30();

  return StateObject.wrappedValue.getter(v1, v2, v3, v4, v5);
}

uint64_t sub_10004EEBC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ImageLoader();
  uint64_t v4 = swift_allocObject();
  LOBYTE(v8) = 2;
  swift_bridgeObjectRetain();
  Published.init(initialValue:)();
  uint64_t v5 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
  *(void *)(v4 + v5) = [objc_allocWithZone((Class)NSLock) init:0 v8];
  *(unsigned char *)(v4 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
  uint64_t v6 = (void *)(v4 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  void *v6 = a1;
  v6[1] = a2;
  return v4;
}

uint64_t sub_10004EF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v23 = a1;
  uint64_t v24 = v4;
  __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v21 - v11;
  uint64_t v22 = (void (*)(void, void))*((void *)v2 + 3);
  sub_10004EE5C();
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v13 = (void *)v29;
  char v14 = BYTE8(v29);
  v22(v29, BYTE8(v29));
  sub_10004F7F4(v13, v14);
  long long v29 = *v2;
  char v30 = *((unsigned char *)v2 + 16);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = *(void *)(v23 + 24);
  *(void *)(v15 + 16) = v3;
  *(void *)(v15 + 24) = v16;
  long long v17 = v2[1];
  *(_OWORD *)(v15 + 32) = *v2;
  *(_OWORD *)(v15 + 48) = v17;
  *(void *)(v15 + 64) = *((void *)v2 + 4);
  sub_10004FAFC((uint64_t)&v29);
  swift_retain();
  View.onAppear(perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v3);
  uint64_t v27 = v16;
  unsigned int v28 = &protocol witness table for _AppearanceActionModifier;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1000D2DCC(v10, v7, WitnessTable);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v25 + 8);
  v19(v10, v7);
  sub_1000D2DCC(v12, v7, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v19)(v12, v7);
}

uint64_t sub_10004F2A0()
{
  type metadata accessor for AsyncImage();
  sub_10004EE5C();
  sub_10006E504();

  return swift_release();
}

uint64_t sub_10004F2F0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10004F30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10004EF80(a1, a2);
}

void sub_10004F348(void *a1, unsigned __int8 a2)
{
  int v3 = a2;
  uint64_t v4 = sub_10003AFD0(&qword_100183430);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003AFD0(&qword_100183438);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (v3)
  {
    ProgressView<>.init<>()();
    (*(void (**)(void *, char *, uint64_t))(v5 + 16))(v10, v7, v4);
    swift_storeEnumTagMultiPayload();
    sub_10003AFD0(&qword_100183440);
    sub_10004F6BC();
    sub_10004F7B0(qword_100183468, &qword_100183430);
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    id v11 = sub_10004F5DC((uint64_t)a1);
    id v12 = [self systemBlueColor];
    uint64_t v13 = Color.init(uiColor:)();
    void *v10 = v11;
    v10[1] = 0;
    _DWORD v10[2] = 0;
    _OWORD v10[3] = v13;
    swift_storeEnumTagMultiPayload();
    id v14 = v11;
    swift_retain();
    sub_10003AFD0(&qword_100183440);
    sub_10004F6BC();
    sub_10004F7B0(qword_100183468, &qword_100183430);
    _ConditionalContent<>.init(storage:)();
    sub_10004F7F4(a1, 0);
    swift_release();
  }
}

id sub_10004F5DC(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UIImageView) init];
  [v2 setImage:a1];
  [v2 setContentMode:1];
  [v2 setClipsToBounds:1];
  LODWORD(v3) = 1132068864;
  [v2 setContentHuggingPriority:1 forAxis:v3];
  LODWORD(v4) = 1132068864;
  [v2 setContentHuggingPriority:0 forAxis:v4];
  LODWORD(v5) = 1132068864;
  [v2 setContentCompressionResistancePriority:1 forAxis:v5];
  LODWORD(v6) = 1132068864;
  [v2 setContentCompressionResistancePriority:0 forAxis:v6];
  return v2;
}

unint64_t sub_10004F6BC()
{
  unint64_t result = qword_100183448;
  if (!qword_100183448)
  {
    sub_10003B070(&qword_100183440);
    sub_10004F75C();
    sub_10004F7B0((unint64_t *)&qword_100183458, &qword_100183460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183448);
  }
  return result;
}

unint64_t sub_10004F75C()
{
  unint64_t result = qword_100183450;
  if (!qword_100183450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183450);
  }
  return result;
}

uint64_t sub_10004F7B0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10003B070(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10004F7F4(id a1, char a2)
{
  if (a2 == 1)
  {
    swift_errorRelease();
  }
  else if (!a2)
  {
  }
}

uint64_t sub_10004F810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_10004F818()
{
  return swift_retain();
}

uint64_t sub_10004F820()
{
  sub_10004F864();

  return swift_release();
}

uint64_t sub_10004F864()
{
  return swift_release();
}

uint64_t sub_10004F86C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_10004F818();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  return a1;
}

uint64_t sub_10004F8D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  char v6 = *((unsigned char *)a2 + 16);
  sub_10004F818();
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  sub_10004F864();
  uint64_t v7 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for LaunchURL(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_10004F960(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v4;
  sub_10004F864();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_10004F9B8(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10004FA00(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AsyncImage()
{
  return sub_10004FB88();
}

uint64_t sub_10004FA60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10004FAAC()
{
  sub_10004F864();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10004FAF0()
{
  return sub_10004F2A0();
}

uint64_t sub_10004FAFC(uint64_t a1)
{
  return a1;
}

unint64_t sub_10004FB30()
{
  unint64_t result = qword_1001834F0;
  if (!qword_1001834F0)
  {
    type metadata accessor for ImageLoader();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001834F0);
  }
  return result;
}

uint64_t sub_10004FB88()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10004FBB8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10004FC1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10004FD10(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10004FD38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

id sub_10004FD60()
{
  type metadata accessor for RootViewController();
  id result = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  qword_10018A370 = (uint64_t)result;
  return result;
}

uint64_t sub_10004FD94(char *a1, char *a2)
{
  return sub_10008D970(*a1, *a2);
}

Swift::Int sub_10004FDA0()
{
  return Hasher._finalize()();
}

uint64_t sub_10004FE28()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10004FE9C()
{
  return Hasher._finalize()();
}

uint64_t sub_10004FF20@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10014C680, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_10004FF80(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746C756166654422;
  if (*v1) {
    uint64_t v2 = 0x2265746F6D655222;
  }
  unint64_t v3 = 0xE900000000000022;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_10004FFC4()
{
  if (qword_100182730 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_10018A350;
  id v1 = objc_allocWithZone((Class)UINavigationController);
  id v2 = v0;
  id v3 = [v1 initWithRootViewController:v2];

  qword_10018A380 = (uint64_t)v3;
}

id sub_100050054()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for DKViewControllerDelegateResponder()) init];
  qword_10018A388 = (uint64_t)result;
  return result;
}

char *sub_100050088()
{
  uint64_t v1 = OBJC_IVAR___DARootViewController____lazy_storage___enhancedLoggingCompletedNavigationController;
  id v2 = *(void **)(v0 + OBJC_IVAR___DARootViewController____lazy_storage___enhancedLoggingCompletedNavigationController);
  if (v2)
  {
    id v3 = *(char **)(v0 + OBJC_IVAR___DARootViewController____lazy_storage___enhancedLoggingCompletedNavigationController);
  }
  else
  {
    type metadata accessor for EnhancedLoggingCompletedNavigationController();
    uint64_t v4 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    *(void *)(*(void *)&v4[OBJC_IVAR____TtC11Diagnostics44EnhancedLoggingCompletedNavigationController_enhancedLoggingCompletedViewController]
              + OBJC_IVAR____TtC11Diagnostics38EnhancedLoggingCompletedViewController_delegate
              + 8) = &off_10014E4B8;
    swift_unknownObjectWeakAssign();
    char v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_100050138()
{
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    id v3 = [self systemBackgroundColor];
    [v2 setBackgroundColor:v3];
  }
  else
  {
    __break(1u);
  }
}

void sub_1000501D0()
{
  sub_10005081C(1, 0);
  if (qword_100182798 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10018A3B0;
  uint64_t v2 = v0 + OBJC_IVAR___DARootViewController_remoteCardFilter;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR___DARootViewController_remoteCardFilter);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR___DARootViewController_remoteCardFilter + 8);
  LOBYTE(v2) = *(unsigned char *)(v2 + 16);
  *(void *)(qword_10018A3B0 + 16) = v3;
  *(void *)(v1 + 24) = v4;
  *(unsigned char *)(v1 + 32) = v2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v5 = [self defaultCenter];
  if (qword_1001827A0 != -1) {
    swift_once();
  }
  [v5 postNotificationName:qword_10018A3B8 object:0];

  id v6 = (void *)qword_100183500;
  if (qword_100183500)
  {
    type metadata accessor for SelfServiceDestinationPickerViewController();
    if (!swift_dynamicCastClass())
    {
      id v12 = v6;
LABEL_21:
      id v22 = v12;
      goto LABEL_22;
    }
  }
  if (qword_100182750 != -1) {
    swift_once();
  }
  id v7 = [(id)qword_10018A380 viewControllers];
  sub_10003C374(0, (unint64_t *)&qword_100183670);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_11;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    if (qword_100182748 == -1)
    {
LABEL_20:
      id v12 = (id)qword_10018A370;
      goto LABEL_21;
    }
LABEL_43:
    swift_once();
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_19;
  }
LABEL_11:
  unint64_t v10 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_40:
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_16;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v10 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  id v11 = *(id *)(v8 + 8 * v10 + 32);
LABEL_16:
  id v22 = v11;
  swift_bridgeObjectRelease();
LABEL_22:
  type metadata accessor for DashboardViewController();
  uint64_t v13 = swift_dynamicCastClass();
  if (!v13
    || (uint64_t v14 = v13,
        uint64_t v15 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager,
        *(unsigned char *)(*(void *)(v13 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
                 + OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly) != 1))
  {
LABEL_32:

    return;
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  uint64_t v17 = qword_1001827C8;
  id v22 = v22;
  if (v17 != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  if (byte_100184CF8 != 4)
  {
    if (byte_100184CF8 == 1)
    {
      *(unsigned char *)(*(void *)(v14 + v15) + OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly) = 0;
      sub_1000F7604();
    }
    goto LABEL_31;
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  if ([self isSSRBootIntentSet])
  {
    byte_100184CF8 = 2;
LABEL_31:

    swift_release();
    goto LABEL_32;
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  id v18 = [objc_allocWithZone((Class)DADiagnosticsSessionAvailability) init];
  if (qword_10018A3F8)
  {
    swift_bridgeObjectRetain();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v19 = 0;
  }
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_100056044;
  *(void *)(v20 + 24) = v16;
  aBlock[4] = sub_10003C5D0;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000B2448;
  aBlock[3] = &unk_10014E7C0;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v18 checkAvailabilityWithTicketNumber:v19 timeout:0 exitWhenDone:v21 completion:30.0];
  _Block_release(v21);

  swift_release();
}

id sub_10005081C(char a1, uint64_t (*a2)(id))
{
  uint64_t v3 = v2;
  int v5 = a1 & 1;
  char v6 = byte_10018A378;
  byte_10018A378 = v5;
  sub_10005403C(v6);
  id v7 = (void *)qword_100183500;
  if (!qword_100183500
    || (type metadata accessor for SelfServiceDestinationPickerViewController(), swift_dynamicCastClass()))
  {
    if (qword_100182750 != -1) {
      swift_once();
    }
    id v8 = [(id)qword_10018A380 viewControllers];
    sub_10003C374(0, (unint64_t *)&qword_100183670);
    unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_7:
        unint64_t v11 = v10 - 1;
        if (__OFSUB__(v10, 1))
        {
          __break(1u);
        }
        else if ((v9 & 0xC000000000000001) == 0)
        {
          if ((v11 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v11 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v12 = *(id *)(v9 + 8 * v11 + 32);
LABEL_12:
            uint64_t v13 = v12;
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
          __break(1u);
          goto LABEL_35;
        }
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v10) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_100182748 == -1)
    {
LABEL_16:
      id v14 = (id)qword_10018A370;
      goto LABEL_17;
    }
LABEL_35:
    swift_once();
    goto LABEL_16;
  }
  id v14 = v7;
LABEL_17:
  uint64_t v13 = v14;
LABEL_18:
  type metadata accessor for DashboardViewController();
  if (swift_dynamicCastClass())
  {
    sub_100067E2C();
    if (qword_100182758 != -1) {
      swift_once();
    }
    type metadata accessor for DKViewControllerDelegateResponder();
    uint64_t v15 = swift_dynamicCastClass();
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = self;
      swift_unknownObjectRetain();
      id v18 = [v17 sharedApplication];
      [v18 userInterfaceLayoutDirection];

      uint64_t v19 = v16 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__presentationTransitionStyle;
      *(void *)uint64_t v19 = 0;
      *(unsigned char *)(v19 + 8) = 1;
      id v20 = [v17 sharedApplication];
      [v20 userInterfaceLayoutDirection];

      uint64_t v21 = v16 + OBJC_IVAR____TtC11Diagnostics33DKViewControllerDelegateResponder__dismissalTransitionStyle;
      *(void *)uint64_t v21 = 0;
      *(unsigned char *)(v21 + 8) = 1;
      swift_unknownObjectRelease();
    }
  }

  [v3 setNeedsStatusBarAppearanceUpdate];
  if (v5) {
    char v22 = 1;
  }
  else {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  byte_10018A379 = v22 & 1;
  if (qword_100182750 != -1) {
    swift_once();
  }
  uint64_t v23 = (void *)qword_10018A380;

  return sub_1000542DC(v23, v3, a2);
}

id sub_100050BE0(void *a1, char a2, uint64_t (*a3)(id))
{
  char v6 = (void *)qword_100183500;
  if (!qword_100183500
    || (type metadata accessor for SelfServiceDestinationPickerViewController(), swift_dynamicCastClass()))
  {
    if (qword_100182750 != -1) {
      swift_once();
    }
    id v7 = [(id)qword_10018A380 viewControllers];
    sub_10003C374(0, (unint64_t *)&qword_100183670);
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v9)
      {
LABEL_7:
        unint64_t v10 = v9 - 1;
        if (__OFSUB__(v9, 1))
        {
          __break(1u);
        }
        else if ((v8 & 0xC000000000000001) == 0)
        {
          if ((v10 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v10 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v11 = *(id *)(v8 + 8 * v10 + 32);
LABEL_12:
            id v12 = v11;
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
          __break(1u);
          goto LABEL_29;
        }
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_100182748 == -1)
    {
LABEL_16:
      id v13 = (id)qword_10018A370;
      goto LABEL_17;
    }
LABEL_29:
    swift_once();
    goto LABEL_16;
  }
  id v13 = v6;
LABEL_17:
  id v12 = v13;
LABEL_18:
  id v14 = [v12 navigationController];

  if (v14)
  {
    [v14 setNavigationBarHidden:0];
  }
  uint64_t v15 = (void *)qword_100183500;
  qword_100183500 = (uint64_t)a1;

  id v16 = a1;
  id v17 = [v16 navigationItem];
  [v17 setHidesBackButton:1 animated:0];

  if (qword_100182750 != -1) {
    swift_once();
  }
  id result = [(id)qword_10018A380 pushViewController:v16 animated:a2 & 1];
  if (a3) {
    return (id)a3(result);
  }
  return result;
}

id sub_100050E84(id result)
{
  char v2 = (char)result;
  if (byte_10018A379 == 1)
  {
    if (qword_10018A390)
    {
      id v3 = (id)qword_10018A390;
      if ([v3 _remoteViewControllerProxy])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v6, 0, sizeof(v6));
      }
      sub_10003AFD0(&qword_100183E70);
      int v5 = (void *)Optional._bridgeToObjectiveC()();
      sub_10003C44C((uint64_t)v6, &qword_100183E70);

      [v5 viewServiceDidEnableVolumeHUD:v2 & 1];
      return (id)swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR___DARootViewController_responder);
    return [v4 enableVolumeHUD:v2 & 1];
  }
  return result;
}

id sub_100050FE8(id result, float a2)
{
  char v3 = (char)result;
  if (byte_10018A379 == 1)
  {
    if (qword_10018A390)
    {
      id v5 = (id)qword_10018A390;
      if ([v5 _remoteViewControllerProxy])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v9, 0, sizeof(v9));
      }
      sub_10003AFD0(&qword_100183E70);
      id v7 = (void *)Optional._bridgeToObjectiveC()();
      sub_10003C44C((uint64_t)v9, &qword_100183E70);

      *(float *)&double v8 = a2;
      [v7 viewServiceDidSetScreenToBrightness:v3 & 1 animate:v8];
      return (id)swift_unknownObjectRelease();
    }
  }
  else
  {
    char v6 = *(void **)(v2 + OBJC_IVAR___DARootViewController_responder);
    return [v6 setScreenToBrightness:v3 & 1];
  }
  return result;
}

void sub_10005127C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

uint64_t sub_1000512EC(uint64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (qword_100182818 != -1) {
    swift_once();
  }
  id v17 = sub_1000B6ACC(a1);
  id v18 = *(void **)(a2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (!v18)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    goto LABEL_7;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v19 = [v18 suitesAvailable];
  sub_10003C374(0, (unint64_t *)&unk_100184320);
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v21 = a3;
  char v22 = sub_1000908F8(v20);
  swift_bridgeObjectRelease();

  if (!v22)
  {
LABEL_7:
    sub_100054DE0(0, a4, (uint64_t)v17, a5, a6, a7, a8, a9, a10, a11, a12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v28 = qword_10018A430;
  id v23 = [v22 primaryAssetLocator];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v26 = v25;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1000C0A10(v24, v26, v28, a4, (uint64_t)v17, a5, a6, a7, a8, a9, a10, a11, a12);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_release();
LABEL_8:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  return swift_release_n();
}

uint64_t sub_100051658(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_100054DE0(a1, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

void sub_10005168C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17 = a1;
  objc_allocWithZone((Class)type metadata accessor for SelfServiceInstructionsViewController());
  id v18 = a9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v23 = (char *)sub_1000E9214(a2, a3, v17, a4, a5, a6, a7, a8, a9, 3);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a10;
  *(void *)(v19 + 24) = a11;
  unint64_t v20 = (uint64_t (**)(uint64_t, uint64_t))&v23[OBJC_IVAR____TtC11Diagnostics37SelfServiceInstructionsViewController_onButtonPress];
  uint64_t v21 = *(void *)&v23[OBJC_IVAR____TtC11Diagnostics37SelfServiceInstructionsViewController_onButtonPress];
  void *v20 = sub_100056278;
  v20[1] = (uint64_t (*)(uint64_t, uint64_t))v19;
  swift_retain();
  sub_10003B0B8(v21);
  if (qword_100182750 != -1) {
    swift_once();
  }
  [(id)qword_10018A380 pushViewController:v23 animated:1];
}

void sub_1000519BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  if (a3) {
    uint64_t v7 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, NSString))(a4 + 16))(a4, v6);
}

id sub_100051A5C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = OBJC_IVAR___DARootViewController_responder;
  id v7 = objc_allocWithZone((Class)DADiagnosticResponder);
  id v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  uint64_t v9 = &v8[OBJC_IVAR___DARootViewController_remoteCardFilter];
  *(void *)uint64_t v9 = &_swiftEmptySetSingleton;
  *((void *)v9 + 1) = &_swiftEmptySetSingleton;
  v9[16] = 1;
  *(void *)&v8[OBJC_IVAR___DARootViewController____lazy_storage___enhancedLoggingCompletedNavigationController] = 0;

  if (a2)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for RootViewController();
  id v11 = [super initWithNibName:v10 bundle:a3];

  return v11;
}

id sub_100051BBC(void *a1)
{
  uint64_t v3 = OBJC_IVAR___DARootViewController_responder;
  id v4 = objc_allocWithZone((Class)DADiagnosticResponder);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = &v5[OBJC_IVAR___DARootViewController_remoteCardFilter];
  *(void *)uint64_t v6 = &_swiftEmptySetSingleton;
  *((void *)v6 + 1) = &_swiftEmptySetSingleton;
  v6[16] = 1;
  *(void *)&v5[OBJC_IVAR___DARootViewController____lazy_storage___enhancedLoggingCompletedNavigationController] = 0;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for RootViewController();
  [super initWithCoder:a1];

  return v7;
}

void sub_100051CA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___DARootViewController____lazy_storage___enhancedLoggingCompletedNavigationController);
}

id sub_100051D0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RootViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for RootViewController()
{
  return self;
}

NSString sub_100051DCC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10018A398 = (uint64_t)result;
  return result;
}

NSString sub_100051E04()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10018A3A0 = (uint64_t)result;
  return result;
}

void sub_100051E3C()
{
  uint64_t v1 = v0;
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123B50;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_10018A3E8;
  *(void *)(v2 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  *(void *)(v2 + 64) = sub_100055FF4((unint64_t *)&qword_100184FF0, (unint64_t *)&qword_1001832C0);
  *(void *)(v2 + 32) = v3;
  id v4 = v3;
  uint64_t v5 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for RootViewController();
  [super _willAppearInRemoteViewController];
  [v1 _hostAuditToken];
  uint64_t v6 = (void *)xpc_copy_entitlement_for_token();
  if (!v6) {
    goto LABEL_11;
  }
  if (!xpc_BOOL_get_value(v6))
  {
    swift_unknownObjectRelease();
LABEL_11:
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    sub_1000A795C(7);
    return;
  }
  id v7 = (void *)qword_10018A390;
  qword_10018A390 = (uint64_t)v1;

  id v8 = self;
  id v9 = v1;
  id v10 = [v8 defaultCenter];
  if (qword_100182760 != -1) {
    swift_once();
  }
  [v10 postNotificationName:qword_10018A398 object:0];

  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v11, (uint64_t)qword_10018A440);
  swift_beginAccess();
  sub_1000D815C(0, 0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  id v13 = v9;
  sub_1000D815C(sub_1000560D0, v12);
  swift_endAccess();
  swift_unknownObjectRelease();
  swift_release();
}

void sub_10005217C(uint64_t a1)
{
  sub_10005081C(1, 0);
  if (qword_100182798 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10018A3B0;
  uint64_t v3 = a1 + OBJC_IVAR___DARootViewController_remoteCardFilter;
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR___DARootViewController_remoteCardFilter);
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR___DARootViewController_remoteCardFilter + 8);
  LOBYTE(v3) = *(unsigned char *)(v3 + 16);
  *(void *)(qword_10018A3B0 + 16) = v4;
  *(void *)(v2 + 24) = v5;
  *(unsigned char *)(v2 + 32) = v3;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v6 = [self defaultCenter];
  id v7 = v6;
  if (qword_1001827A0 != -1)
  {
    swift_once();
    id v6 = v7;
  }
  [v6 postNotificationName:qword_10018A3B8 object:0];
}

void sub_10005230C()
{
  uint64_t v1 = v0;
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123B50;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_10018A3E8;
  *(void *)(v2 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  *(void *)(v2 + 64) = sub_100055FF4((unint64_t *)&qword_100184FF0, (unint64_t *)&qword_1001832C0);
  *(void *)(v2 + 32) = v3;
  id v4 = v3;
  uint64_t v5 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for RootViewController();
  [super _hostApplicationWillEnterForeground];
  id v6 = [self defaultCenter];
  if (qword_100182760 != -1) {
    swift_once();
  }
  [v6 postNotificationName:qword_10018A398 object:0];

  sub_1000501D0();
}

uint64_t sub_100052510(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = __chkstk_darwin(v10);
  objc_super v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (byte_10018A379 == 1)
  {
    sub_10003C374(0, (unint64_t *)&qword_100182E40);
    uint64_t v19 = v6;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for DispatchQoS.QoSClass.userInteractive(_:), v10);
    uint64_t v18 = static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = v20;
    aBlock[4] = sub_100053E14;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000358AC;
    aBlock[3] = &unk_10014E540;
    id v16 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter();
    uint64_t v21 = &_swiftEmptyArrayStorage;
    sub_10003AF78();
    sub_10003AFD0((uint64_t *)&unk_100182E50);
    sub_10003B014();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v17 = (void *)v18;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
    return swift_release();
  }
  return result;
}

uint64_t sub_100052870(char a1)
{
  uint64_t v1 = 2;
  switch(a1)
  {
    case 1:
      break;
    case 3:
      sub_1000552E8();
      uint64_t v1 = 0;
      break;
    case 4:
    case 12:
      uint64_t v1 = 1;
      break;
    case 5:
      uint64_t v1 = 3;
      break;
    case 8:
      uint64_t v1 = 5;
      break;
    case 9:
      uint64_t v1 = 6;
      break;
    case 10:
      uint64_t v1 = 7;
      break;
    case 11:
      uint64_t v1 = 8;
      break;
    default:
      uint64_t v1 = 4;
      break;
  }
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v2 = static OS_dispatch_queue.main.getter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_100053E30;
  *(void *)(v4 + 24) = v3;
  v7[4] = sub_10003C640;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_10004FD38;
  void v7[3] = &unk_10014E5B8;
  uint64_t v5 = _Block_copy(v7);
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v2, v5);

  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
    JUMPOUT(0x100052A50);
  }
  return result;
}

uint64_t sub_100052A80(uint64_t a1)
{
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v2, (uint64_t)qword_10018A440);
  swift_beginAccess();
  sub_1000D815C(0, 0);
  uint64_t result = swift_endAccess();
  if (qword_10018A390)
  {
    id v4 = (id)qword_10018A390;
    if ([v4 _remoteViewControllerProxy])
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v6, 0, sizeof(v6));
    }
    sub_10003AFD0(&qword_100183E70);
    Optional._bridgeToObjectiveC()();
    sub_10003C44C((uint64_t)v6, &qword_100183E70);

    uint64_t v5 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v5) {
      [v5 viewServiceDidFinishWithReason:a1];
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100052BCC(void *a1)
{
  id v1 = [a1 navigationItem];
  id v2 = [v1 leftBarButtonItem];

  if (v2)
  {
    [v2 setEnabled:0];
  }
}

uint64_t sub_100052C64()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v6 = 0u;
    long long v7 = 0u;
LABEL_11:
    sub_10003C44C((uint64_t)&v6, &qword_100183E70);
    return OS_dispatch_semaphore.signal()();
  }
  uint64_t v1 = v0;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10007D88C((uint64_t)v5), (v3 & 1) != 0))
  {
    sub_10003C5D8(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10003C320((uint64_t)v5);
  if (!*((void *)&v7 + 1)) {
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0 || v5[0] <= 0) {
    return OS_dispatch_semaphore.signal()();
  }
  return result;
}

id sub_100052D94(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = [self interfaceWithProtocol:*a3];

  return v3;
}

id sub_100052DE8()
{
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v0, (uint64_t)qword_10018A440);
  swift_beginAccess();
  sub_1000D815C(0, 0);
  swift_endAccess();
  sub_1000552E8();
  id result = (id)UIApp;
  if (UIApp) {
    return [UIApp terminateWithSuccess];
  }
  __break(1u);
  return result;
}

uint64_t sub_100052F04(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v1;
  aBlock[4] = sub_100055FEC;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_10014E720;
  uint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v13 = v1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
}

void sub_10005319C(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_10005FB48(0, v3, 0);
    uint64_t v5 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v5 - 1);
      uint64_t v6 = *v5;
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1) {
        sub_10005FB48(v9 > 1, v8 + 1, 1);
      }
      v5 += 2;
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[2 * v8];
      v10[4] = v7;
      void v10[5] = v6;
      --v3;
    }
    while (v3);
  }
  uint64_t v11 = sub_1000F6714((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  uint64_t v12 = a2 + OBJC_IVAR___DARootViewController_remoteCardFilter;
  *(void *)(v12 + 8) = v11;
  *(unsigned char *)(v12 + 16) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_100182798 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_10018A3B0;
  uint64_t v14 = *(void *)(v12 + 8);
  char v15 = *(unsigned char *)(v12 + 16);
  *(void *)(qword_10018A3B0 + 16) = *(void *)v12;
  *(void *)(v13 + 24) = v14;
  *(unsigned char *)(v13 + 32) = v15;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v16 = [self defaultCenter];
  id v17 = v16;
  if (qword_1001827A0 != -1)
  {
    swift_once();
    id v16 = v17;
  }
  [v16 postNotificationName:qword_10018A3B8 object:0 v17];
}

uint64_t sub_1000533C8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_100055B60;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_10014E6D0;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = v1;
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v16);
}

uint64_t sub_100053660(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + OBJC_IVAR___DARootViewController_remoteCardFilter;
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR___DARootViewController_remoteCardFilter + 8);
  int64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_10005FB48(0, v4, 0);
    uint64_t v6 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v9 >= v10 >> 1) {
        sub_10005FB48(v10 > 1, v9 + 1, 1);
      }
      v6 += 2;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v9];
      void v11[4] = v8;
      v11[5] = v7;
      --v4;
    }
    while (v4);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = sub_1000F6714((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  *(void *)uint64_t v2 = v12;
  *(void *)(v2 + 8) = v3;
  *(unsigned char *)(v2 + 16) = 1;
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000537B0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = a1;
  a4(v6);

  return swift_bridgeObjectRelease();
}

uint64_t getEnumTagSinglePayload for RootViewController.LaunchEnvironment(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for RootViewController.LaunchEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10005397CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000539A4(unsigned char *result, char a2)
{
  *id result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RootViewController.LaunchEnvironment()
{
  return &type metadata for RootViewController.LaunchEnvironment;
}

unint64_t sub_1000539C4()
{
  unint64_t result = qword_100183668;
  if (!qword_100183668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183668);
  }
  return result;
}

void sub_100053A18()
{
  if (byte_10018A379 == 1 && qword_10018A390)
  {
    id v0 = (id)qword_10018A390;
    if ([v0 _remoteViewControllerProxy])
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v2, 0, sizeof(v2));
    }
    sub_10003AFD0(&qword_100183E70);
    uint64_t v1 = (void *)Optional._bridgeToObjectiveC()();
    sub_10003C44C((uint64_t)v2, &qword_100183E70);

    [v1 viewServiceDidSuspend];
    swift_unknownObjectRelease();
  }
}

uint64_t sub_100053AE4(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(unsigned char *)(v15 + 24) = a2;
  *(void *)(v15 + 32) = a3;
  *(void *)(v15 + 40) = a4;
  aBlock[4] = sub_100053DDC;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_10014E4F0;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a1;
  sub_10003AF68(a3);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t sub_100053D94()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

id sub_100053DDC()
{
  return sub_100050BE0(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(uint64_t (**)(id))(v0 + 32));
}

uint64_t sub_100053DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100053DFC()
{
  return swift_release();
}

uint64_t sub_100053E04()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100053E14()
{
  return sub_100052870(*(unsigned char *)(v0 + 16));
}

uint64_t sub_100053E20()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100053E30()
{
  return sub_100052A80(*(void *)(v0 + 16));
}

uint64_t sub_100053E38()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100053E48(char a1, char a2)
{
  if (qword_100182750 != -1) {
    swift_once();
  }
  id v4 = [(id)qword_10018A380 topViewController];
  uint64_t v5 = v4;
  if (qword_100182730 == -1)
  {
    if (!v4) {
      goto LABEL_12;
    }
  }
  else
  {
    swift_once();
    if (!v5) {
      goto LABEL_12;
    }
  }
  unsigned int v6 = (void *)qword_10018A350;
  sub_10003C374(0, (unint64_t *)&qword_100183670);
  id v7 = v6;
  id v8 = v5;
  char v9 = static NSObject.== infix(_:_:)();

  if (v9)
  {
    static os_log_type_t.error.getter();
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    return;
  }
LABEL_12:
  unint64_t v10 = (void *)qword_100183500;
  qword_100183500 = 0;

  *(unsigned char *)(qword_10018A350 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) = a1;
  id v11 = [(id)qword_10018A380 popToRootViewControllerAnimated:a2 & 1];
}

uint64_t sub_10005403C(char a1)
{
  unint64_t v2 = 0xE900000000000022;
  if (byte_10018A378) {
    uint64_t v3 = 0x2265746F6D655222;
  }
  else {
    uint64_t v3 = 0x746C756166654422;
  }
  if (byte_10018A378) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000022;
  }
  if (a1) {
    uint64_t v5 = 0x2265746F6D655222;
  }
  else {
    uint64_t v5 = 0x746C756166654422;
  }
  if (a1) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000022;
  }
  if (v3 == v5 && v4 == v6) {
    return swift_bridgeObjectRelease_n();
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v10 = swift_allocObject();
    uint64_t v11 = v10;
    *(_OWORD *)(v10 + 16) = xmmword_100123B50;
    if (byte_10018A378) {
      uint64_t v12 = 0x2265746F6D655222;
    }
    else {
      uint64_t v12 = 0x746C756166654422;
    }
    if (byte_10018A378) {
      unint64_t v2 = 0xE800000000000000;
    }
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = sub_10004D9B4();
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = v2;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000541E4()
{
  if (byte_10018A379 != 1) {
    return 0;
  }
  uint64_t result = qword_10018A390;
  if (qword_10018A390)
  {
    uint64_t result = (uint64_t)[(id)qword_10018A390 _hostApplicationBundleIdentifier];
    if (result)
    {

      uint64_t result = qword_10018A390;
      if (qword_10018A390)
      {
        uint64_t result = (uint64_t)[(id)qword_10018A390 _hostApplicationBundleIdentifier];
        if (result)
        {
          uint64_t v1 = (void *)result;
          uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v4 = v3;

          if (v2 == 0xD000000000000015 && v4 == 0x800000010012B200)
          {
            swift_bridgeObjectRelease();
            return 1;
          }
          else
          {
            char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            return v5 & 1;
          }
        }
      }
    }
  }
  return result;
}

id sub_1000542DC(void *a1, void *a2, uint64_t (*a3)(id))
{
  id v6 = [a1 parentViewController];
  if (v6)
  {
    id v7 = v6;
    sub_10003C374(0, (unint64_t *)&qword_100183670);
    id v8 = a2;
    id v9 = v7;
    LOBYTE(v7) = static NSObject.== infix(_:_:)();

    if (v7) {
      goto LABEL_11;
    }
  }
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1001240D0;
  uint64_t v11 = sub_10003C374(0, (unint64_t *)&qword_100183670);
  *(void *)(v10 + 56) = v11;
  uint64_t v12 = sub_100055FF4((unint64_t *)&unk_1001836F0, (unint64_t *)&qword_100183670);
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 96) = v11;
  *(void *)(v10 + 104) = v12;
  *(void *)(v10 + 64) = v12;
  *(void *)(v10 + 72) = a2;
  id v13 = a2;
  id v14 = a1;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  [v14 willMoveToParentViewController:v13];
  [v13 addChildViewController:v14];
  id result = [v14 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16 = result;
  id result = [v13 view];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v17 = result;
  [result bounds];
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  double v25 = v24;

  [v16 setFrame:v19, v21, v23, v25];
  id result = [v14 view];
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v26 = result;
  [result setAutoresizingMask:18];

  id result = [v13 view];
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v27 = result;
  id result = [v14 view];
  if (!result)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v28 = result;
  [v27 addSubview:result];

  [v14 didMoveToParentViewController:v13];
LABEL_11:
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v29, (uint64_t)qword_10018A440);
  swift_beginAccess();
  sub_1000D801C();
  id result = (id)swift_endAccess();
  if (a3) {
    return (id)a3(result);
  }
  return result;
}

void sub_10005465C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [self alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  uint64_t v13 = *(void *)(a5 + 16);
  if (v13)
  {
    id v23 = self;
    swift_bridgeObjectRetain_n();
    uint64_t v14 = 0;
    uint64_t v15 = a5 + 40;
    do
    {
      uint64_t v16 = v14 + 1;
      id v17 = v12;
      double v18 = (void *)swift_allocObject();
      void v18[2] = a6;
      v18[3] = a7;
      v18[4] = v14;
      swift_bridgeObjectRetain();
      swift_retain();
      NSString v19 = String._bridgeToObjectiveC()();
      aBlock[4] = sub_1000562E4;
      aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100046950;
      aBlock[3] = &unk_10014E950;
      double v20 = _Block_copy(aBlock);
      swift_release();
      id v21 = [v23 actionWithTitle:v19 style:0 handler:v20];
      double v22 = v20;
      id v12 = v17;
      _Block_release(v22);

      [v17 addAction:v21];
      swift_bridgeObjectRelease();

      v15 += 16;
      uint64_t v14 = v16;
    }
    while (v13 != v16);
    swift_bridgeObjectRelease_n();
  }
  [v12 showOnTopWithAnimated:1 completion:0];
}

id sub_1000548BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v57 = a7;
  uint64_t v58 = a8;
  uint64_t v56 = a6;
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  uint64_t v59 = a3;
  uint64_t v60 = a1;
  int v55 = a2;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v62 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v61 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  NSString v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1001827A8 != -1) {
    swift_once();
  }
  double v20 = (char *)qword_10018A3D0;
  uint64_t v21 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  id result = *(id *)(qword_10018A3D0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (result)
  {
    id result = [result suiteID];
    if (result)
    {
      id v23 = result;
      id v49 = v15;
      uint64_t v50 = v13;
      uint64_t v51 = v11;
      uint64_t v52 = v10;
      uint64_t v48 = a10;
      uint64_t v47 = a9;
      double v24 = *(void **)&v20[v21];
      if (!v24) {
        goto LABEL_8;
      }
      id v25 = [v24 suitesAvailable];
      sub_10003C374(0, (unint64_t *)&unk_100184320);
      unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v27 = v23;
      uint64_t v28 = sub_1000908F8(v26);
      swift_bridgeObjectRelease();

      if (v28)
      {
        id v29 = [v28 suiteNameLocalizedString];
        uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v32 = v31;
      }
      else
      {
LABEL_8:
        uint64_t v32 = v54;
        swift_bridgeObjectRetain();
        uint64_t v30 = v53;
      }
      sub_10003C374(0, (unint64_t *)&qword_100182E40);
      (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchQoS.QoSClass.default(_:), v16);
      id v33 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = v60;
      *(void *)(v34 + 16) = v59;
      *(void *)(v34 + 24) = v20;
      *(void *)(v34 + 32) = v23;
      *(_DWORD *)(v34 + 40) = v55;
      *(void *)(v34 + 48) = v35;
      *(void *)(v34 + 56) = v30;
      uint64_t v36 = v56;
      uint64_t v37 = v57;
      *(void *)(v34 + 64) = v32;
      *(void *)(v34 + 72) = v36;
      uint64_t v38 = v58;
      *(void *)(v34 + 80) = v37;
      *(void *)(v34 + 88) = v38;
      uint64_t v39 = v48;
      *(void *)(v34 + 96) = v47;
      *(void *)(v34 + 104) = v39;
      aBlock[4] = sub_100056188;
      aBlock[5] = v34;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000358AC;
      aBlock[3] = &unk_10014E860;
      id v40 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      id v41 = v23;
      swift_bridgeObjectRetain();
      id v42 = v20;
      swift_bridgeObjectRetain();
      id v43 = v49;
      static DispatchQoS.unspecified.getter();
      id v63 = _swiftEmptyArrayStorage;
      sub_10003AF78();
      sub_10003AFD0((uint64_t *)&unk_100182E50);
      sub_10003B014();
      Class v44 = v62;
      uint64_t v45 = v52;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v40);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v45);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v50);
      return (id)swift_release();
    }
  }
  return result;
}

uint64_t sub_100054DE0(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v33 = a7;
  uint64_t v34 = a8;
  uint64_t v31 = a10;
  uint64_t v32 = a11;
  uint64_t v30 = a9;
  uint64_t v35 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v19 - 8);
  uint64_t v38 = v19;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v36 = static OS_dispatch_queue.main.getter();
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = a3;
  *(void *)(v22 + 32) = a4;
  *(void *)(v22 + 40) = a5;
  *(void *)(v22 + 48) = a6;
  uint64_t v23 = v34;
  *(void *)(v22 + 56) = v33;
  *(void *)(v22 + 64) = v23;
  *(void *)(v22 + 72) = a9;
  *(void *)(v22 + 80) = a1;
  uint64_t v24 = v32;
  *(void *)(v22 + 88) = v31;
  *(void *)(v22 + 96) = v24;
  aBlock[4] = sub_100056234;
  aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_10014E8B0;
  id v25 = _Block_copy(aBlock);
  id v26 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  uint64_t v27 = v35;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v28 = (void *)v36;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v21, v38);
}

void sub_1000552E8()
{
  uint64_t v0 = type metadata accessor for DispatchTime();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  id v6 = (char *)&v48 - v5;
  id v7 = (void *)qword_100183500;
  if (!qword_100183500
    || (type metadata accessor for SelfServiceDestinationPickerViewController(), swift_dynamicCastClass()))
  {
    if (qword_100182750 != -1) {
      swift_once();
    }
    id v8 = [(id)qword_10018A380 viewControllers];
    sub_10003C374(0, (unint64_t *)&qword_100183670);
    unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_7:
        unint64_t v11 = v10 - 1;
        if (__OFSUB__(v10, 1))
        {
          __break(1u);
        }
        else if ((v9 & 0xC000000000000001) == 0)
        {
          if ((v11 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v11 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v12 = *(id *)(v9 + 8 * v11 + 32);
LABEL_12:
            id v56 = v12;
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
          __break(1u);
          goto LABEL_41;
        }
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v10) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_100182748 == -1)
    {
LABEL_16:
      id v13 = (id)qword_10018A370;
      goto LABEL_17;
    }
LABEL_41:
    swift_once();
    goto LABEL_16;
  }
  id v13 = v7;
LABEL_17:
  id v56 = v13;
LABEL_18:
  type metadata accessor for DashboardViewController();
  uint64_t v14 = swift_dynamicCastClass();
  if (!v14)
  {
    id v29 = v56;

    return;
  }
  uint64_t v15 = (char *)v14;
  uint64_t v16 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager;
  uint64_t v17 = *(char **)(v14 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager);
  uint64_t v18 = &v17[OBJC_IVAR____TtC11Diagnostics11CardManager_cardsInView];
  swift_beginAccess();
  uint64_t v19 = *(void *)v18;
  if (!*(void *)(v19 + 16) || (unint64_t v20 = sub_10007D8D0(1u), (v21 & 1) == 0))
  {

    return;
  }
  unint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
  if (v22 >> 62)
  {
    uint64_t v46 = v17;
    swift_bridgeObjectRetain();
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_23;
    }
LABEL_43:

    return;
  }
  uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v24 = v17;
  if (!v23) {
    goto LABEL_43;
  }
LABEL_23:
  dispatch_semaphore_t v52 = dispatch_semaphore_create(0);
  unsigned int v25 = [self isMainThread];
  id v54 = v17;
  uint64_t v55 = v1;
  if (v25)
  {
    id v26 = [v15 navigationItem];
    id v27 = [v26 leftBarButtonItem];

    if (v27)
    {
      [v27 setEnabled:0];
    }
    uint64_t v53 = 0;
    uint64_t v28 = 0;
  }
  else
  {
    sub_10003C374(0, (unint64_t *)&qword_100182E40);
    uint64_t v30 = static OS_dispatch_queue.main.getter();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v15;
    uint64_t v31 = swift_allocObject();
    uint64_t v53 = sub_100055B00;
    *(void *)(v31 + 16) = sub_100055B00;
    *(void *)(v31 + 24) = v28;
    uint64_t v61 = sub_10003C6F0;
    uint64_t v62 = v31;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v58 = 1107296256;
    uint64_t v59 = sub_10004FD38;
    uint64_t v60 = &unk_10014E630;
    uint64_t v32 = _Block_copy(&aBlock);
    id v33 = v56;
    swift_retain();
    swift_release();
    dispatch_sync((dispatch_queue_t)v30, v32);

    _Block_release(v32);
    LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v30)
    {
      __break(1u);
      return;
    }
  }
  uint64_t v51 = v28;
  id v50 = self;
  id v34 = [v50 defaultCenter];
  if (qword_100182838 != -1) {
    swift_once();
  }
  uint64_t v49 = qword_10018A460;
  id v35 = [self mainQueue];
  uint64_t v36 = swift_allocObject();
  dispatch_semaphore_t v37 = v52;
  *(void *)(v36 + 16) = v52;
  uint64_t v61 = sub_100055B18;
  uint64_t v62 = v36;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v58 = 1107296256;
  uint64_t v59 = sub_10004FC1C;
  uint64_t v60 = &unk_10014E680;
  uint64_t v38 = _Block_copy(&aBlock);
  dispatch_semaphore_t v52 = v37;
  swift_release();
  id v39 = [v34 addObserverForName:v49 object:0 queue:v35 usingBlock:v38];
  _Block_release(v38);

  id v40 = *(id *)&v15[v16];
  sub_1000B4254();

  static DispatchTime.now()();
  + infix(_:_:)();
  id v41 = *(void (**)(char *, uint64_t))(v55 + 8);
  id v42 = v4;
  dispatch_semaphore_t v43 = v52;
  v41(v42, v0);
  OS_dispatch_semaphore.wait(timeout:)();
  v41(v6, v0);
  if (static DispatchTimeoutResult.== infix(_:_:)())
  {
    static os_log_type_t.error.getter();
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    Class v44 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  id v45 = [v50 defaultCenter];
  swift_unknownObjectRetain();
  [v45 removeObserver:v39];

  swift_unknownObjectRelease_n();
  sub_10003B0B8((uint64_t)v53);
}

uint64_t sub_100055AC8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100055B00()
{
  sub_100052BCC(*(void **)(v0 + 16));
}

uint64_t sub_100055B08()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100055B18()
{
  return sub_100052C64();
}

uint64_t sub_100055B20()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100055B60()
{
  return sub_100053660(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100055DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100185000);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10003C44C((uint64_t)v6, &qword_100185000);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    URL.host.getter();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (v12)
    {
      qword_10018A3F0 = URL.host.getter();
      qword_10018A3F8 = v13;
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  qword_10018A3F0 = a1;
  qword_10018A3F8 = a2;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100055FAC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100055FEC()
{
  sub_10005319C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100055FF4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10003C374(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100056044(uint64_t result)
{
  if (result == 1)
  {
    *(unsigned char *)(*(void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
             + OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly) = 0;
    return sub_1000F7604();
  }
  return result;
}

uint64_t sub_100056098()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000560D0()
{
  sub_10005217C(*(void *)(v0 + 16));
}

uint64_t sub_1000560D8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100056110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000519BC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_100056118()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100056188()
{
  return sub_1000512EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(_DWORD *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
}

uint64_t sub_1000561CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

void sub_100056234()
{
  sub_10005168C(*(_DWORD *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96));
}

uint64_t sub_100056278(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v2 + 16))(a1, a2, 0);
}

void sub_1000562A4(uint64_t a1, uint64_t a2)
{
  sub_10005127C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1000562AC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000562E4()
{
  uint64_t v1 = *(void (**)(Class, void))(v0 + 16);
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  v1(isa, 0);
}

void *sub_1000563B0()
{
  return &protocol witness table for Int;
}

uint64_t sub_1000563BC(double a1)
{
  if (a1 <= 0.0) {
    return 0;
  }
  if (qword_100182770 != -1) {
    swift_once();
  }
  double v2 = 60.0;
  double v3 = round(a1 / 60.0);
  if (a1 >= 60.0) {
    double v2 = v3 * 60.0;
  }
  double v4 = round(a1 / 3600.0);
  double v5 = a1 >= 3600.0 ? v4 * 3600.0 : v2;
  id v6 = [(id)qword_100183708 stringFromTimeInterval:v5];
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v8;
}

uint64_t sub_1000564B8(double a1)
{
  if (a1 <= 0.0) {
    return 4;
  }
  double v1 = 3600.0;
  if (a1 < 3600.0)
  {
    double v1 = 60.0;
    if (a1 < 60.0) {
      return v1 >= 120.0;
    }
  }
  double v1 = round(a1 / v1) * v1;
  if (v1 >= 7200.0) {
    return 3;
  }
  if (v1 < 3600.0) {
    return v1 >= 120.0;
  }
  return 2;
}

id sub_100056544()
{
  id v0 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  [v0 setUnitsStyle:3];
  [v0 setAllowedUnits:96];
  [v0 setMaximumUnitCount:1];
  id result = [v0 setCollapsesLargestUnit:0];
  qword_100183708 = (uint64_t)v0;
  return result;
}

id sub_1000565D0()
{
  uint64_t v1 = sub_10003AFD0((uint64_t *)&unk_100183190);
  __chkstk_darwin(v1 - 8);
  double v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v38 - v8;
  id v39 = v0;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics38EnhancedLoggingCompletedViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = self;
  id v11 = [v10 sharedManager];
  id v12 = [v11 snapshot];

  id v13 = [v12 status];
  if (v13 == (id)8)
  {
    uint64_t v14 = 0xD000000000000027;
    uint64_t v15 = "ENHANCED_LOGGING_UPLOAD_FAILED_SUBTITLE";
LABEL_8:
    sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v14, (void *)((unint64_t)(v15 - 32) | 0x8000000000000000));
    goto LABEL_9;
  }
  uint64_t v16 = v38;
  uint64_t v17 = v9;
  id v18 = [v10 sharedManager];
  id v19 = [v18 snapshot];

  id v20 = [v19 endDate];
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v3, 1, 1, v4);
    goto LABEL_7;
  }
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v21 = v16;
  unint64_t v22 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  uint64_t v23 = v7;
  uint64_t v24 = v4;
  v22(v3, v23, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v3, 1, v4) == 1)
  {
LABEL_7:
    sub_10004B5C8((uint64_t)v3);
    uint64_t v14 = 0xD000000000000028;
    uint64_t v15 = "ENHANCED_LOGGING_COMPLETE_SUBTITLE_ERROR";
    goto LABEL_8;
  }
  v22(v17, v3, v4);
  id v25 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v25 setDateStyle:3];
  [v25 setTimeStyle:0];
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_100123B50;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v28 = [v25 stringFromDate:isa];

  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  *(void *)(v26 + 56) = &type metadata for String;
  *(void *)(v26 + 64) = sub_10004D9B4();
  *(void *)(v26 + 32) = v29;
  *(void *)(v26 + 40) = v31;
  sub_100045FCC(0, 0, v26, 0xD000000000000022, (void *)0x800000010012B420);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v24);
LABEL_9:
  uint64_t v32 = v39;
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x800000010012B400);
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v35 = (objc_class *)type metadata accessor for EnhancedLoggingCompletedViewController();
  v40.receiver = v32;
  v40.super_class = v35;
  id v36 = [super initWithTitle:v33 detailText:v34 icon:0 contentLayout:2];

  return v36;
}

void sub_100056A98()
{
  uint64_t v1 = v0;
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedViewController();
  [super viewDidLoad];
  id v2 = [self boldButton];
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 19279, (void *)0xE200000000000000);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setTitle:v3 forState:0];

  sub_100056F34();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v2 addAction:v5 forControlEvents:64];

  id v6 = [v1 buttonTray];
  [v6 addButton:v2];
}

void sub_100056C14()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      swift_beginAccess();
      uint64_t v3 = swift_unknownObjectWeakLoadStrong();
      if (v3)
      {
        uint64_t v4 = (void *)v3;
        if (qword_100182730 != -1) {
          swift_once();
        }
        *(unsigned char *)(qword_10018A350 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_entryReason) = 3;
        uint64_t v5 = sub_100050088();
        [v5 dismissViewControllerAnimated:1 completion:0];

        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
  }
}

id sub_100056ECC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for EnhancedLoggingCompletedViewController()
{
  return self;
}

unint64_t sub_100056F34()
{
  unint64_t result = qword_1001831A8;
  if (!qword_1001831A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001831A8);
  }
  return result;
}

uint64_t sub_100056F74()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100056FAC()
{
}

uint64_t sub_100056FB4(uint64_t a1)
{
  return a1;
}

void sub_100056FDC()
{
  xmmword_100183740 = 0uLL;
}

double sub_100056FEC@<D0>(_OWORD *a1@<X8>)
{
  if (qword_100182778 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_100183740;
  *a1 = xmmword_100183740;
  return result;
}

uint64_t sub_10005704C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_100057150();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

double sub_1000570B0()
{
  sub_1000570EC();
  EnvironmentValues.subscript.getter();
  return v1;
}

unint64_t sub_1000570EC()
{
  unint64_t result = qword_100183750;
  if (!qword_100183750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183750);
  }
  return result;
}

ValueMetadata *type metadata accessor for WindowSizeKey()
{
  return &type metadata for WindowSizeKey;
}

unint64_t sub_100057150()
{
  unint64_t result = qword_100183758;
  if (!qword_100183758)
  {
    type metadata accessor for CGSize(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183758);
  }
  return result;
}

id sub_1000571A8(void *a1)
{
  return [a1 setAlpha:1.0];
}

id sub_1000571B8(void *a1)
{
  return [a1 setAlpha:0.0];
}

id sub_1000571C8(void *a1, id (*a2)(), uint64_t a3)
{
  id result = [a1 alpha];
  if (v7 == 0.0)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    uint64_t v15 = sub_10005739C;
    uint64_t v16 = v8;
    id v11 = _NSConcreteStackBlock;
    uint64_t v12 = 1107296256;
    id v13 = sub_1000358AC;
    uint64_t v14 = &unk_10014E9E8;
    uint64_t v9 = _Block_copy(&v11);
    id v10 = a1;
    swift_retain();
    swift_release();
    if (a2)
    {
      uint64_t v15 = a2;
      uint64_t v16 = a3;
      id v11 = _NSConcreteStackBlock;
      uint64_t v12 = 1107296256;
      id v13 = sub_1000E7710;
      uint64_t v14 = &unk_10014EA10;
      a2 = (id (*)())_Block_copy(&v11);
      swift_retain();
      swift_release();
    }
    [self animateWithDuration:0x10000 delay:v9 options:a2 animations:0.375 completion:0.0];
    _Block_release(a2);
    _Block_release(v9);
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_100057364()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10005739C()
{
  return [*(id *)(v0 + 16) setAlpha:1.0];
}

uint64_t sub_1000573B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000573C0()
{
  return swift_release();
}

id sub_1000573C8(void *a1, id (*a2)(), uint64_t a3)
{
  id result = [a1 alpha];
  if (v7 == 1.0)
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    uint64_t v15 = sub_100057568;
    uint64_t v16 = v8;
    id v11 = _NSConcreteStackBlock;
    uint64_t v12 = 1107296256;
    id v13 = sub_1000358AC;
    uint64_t v14 = &unk_10014EA60;
    uint64_t v9 = _Block_copy(&v11);
    id v10 = a1;
    swift_retain();
    swift_release();
    if (a2)
    {
      uint64_t v15 = a2;
      uint64_t v16 = a3;
      id v11 = _NSConcreteStackBlock;
      uint64_t v12 = 1107296256;
      id v13 = sub_1000E7710;
      uint64_t v14 = &unk_10014EA88;
      a2 = (id (*)())_Block_copy(&v11);
      swift_retain();
      swift_release();
    }
    [self animateWithDuration:0x20000 delay:v9 options:a2 animations:0.125 completion:0.0];
    _Block_release(a2);
    _Block_release(v9);
    return (id)swift_release();
  }
  return result;
}

id sub_100057568()
{
  return [*(id *)(v0 + 16) setAlpha:0.0];
}

void sub_100057604()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_100182E60);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics10TextButton_button);
  uint64_t v6 = v1 + OBJC_IVAR____TtC11Diagnostics10TextButton_action;
  NSString v7 = String._bridgeToObjectiveC()();
  [v5 setTitle:v7 forState:0];

  id v8 = [v5 titleLabel];
  if (v8)
  {
    uint64_t v9 = v8;
    [v8 setFont:*(void *)(v6 + 16)];
  }
  [v5 setContentHorizontalAlignment:0];
  [v5 addTarget:v1 action:"buttonActionWithSender:" forControlEvents:64];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v10 = [self currentDevice];
  id v11 = [v10 userInterfaceIdiom];

  if (v11 == (id)6)
  {
    sub_10003C374(0, &qword_100182E78);
    static UIShape.capsule.getter();
    uint64_t v12 = type metadata accessor for UIShape();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 0, 1, v12);
    id v13 = (void *)UIHoverStyle.init(shape:)();
    [v5 setHoverStyle:v13];
  }
}

id sub_100057808()
{
  return [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics10TextButton_button]];
}

void sub_100057824()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100123C30;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics10TextButton_button];
  id v5 = [v4 topAnchor];
  id v6 = [v1 topAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = [v4 bottomAnchor];
  id v9 = [v1 bottomAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v3 + 40) = v10;
  id v11 = [v4 leadingAnchor];
  id v12 = [v1 leadingAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v3 + 48) = v13;
  id v14 = [v4 trailingAnchor];
  id v15 = [v1 trailingAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v3 + 56) = v16;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_100057B00()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = self;
  void v6[4] = sub_100058140;
  v6[5] = v1;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_1000358AC;
  v6[3] = &unk_10014EB18;
  uint64_t v3 = _Block_copy(v6);
  uint64_t v4 = v0;
  swift_retain();
  swift_release();
  [v2 animateWithDuration:0x20000 delay:v3 options:0 animations:0.125 completion:0.0];
  _Block_release(v3);
  swift_release();
  return [*(id *)&v4[OBJC_IVAR____TtC11Diagnostics10TextButton_button] setUserInteractionEnabled:0];
}

void sub_100057C60()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10TextButton_action + 16);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10TextButton_button);
}

id sub_100057CC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextButton();
  return [super dealloc];
}

uint64_t type metadata accessor for TextButton()
{
  return self;
}

id sub_100057D84()
{
  return sub_100057B00();
}

id sub_100057DA8(_OWORD *a1)
{
  uint64_t v3 = sub_10003AFD0((uint64_t *)&unk_1001864E0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIButton.Configuration();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v29 - v11;
  id v13 = self;
  id v14 = v1;
  id v15 = [v13 defaultMetrics];
  id v16 = self;
  [v16 defaultFontSize];
  id v17 = [v16 systemFontOfSize:];
  id v18 = [v15 scaledFontForFont:v17];

  static UIButton.Configuration.plain()();
  *(void *)(swift_allocObject() + 16) = v18;
  id v19 = v18;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v20 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 0, 1, v20);
  UIButton.Configuration.titleTextAttributesTransformer.setter();

  sub_10003C374(0, &qword_100182E70);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  *(void *)&v14[OBJC_IVAR____TtC11Diagnostics10TextButton_button] = UIButton.init(configuration:primaryAction:)();
  long long v21 = a1[1];
  long long v30 = *a1;
  unint64_t v22 = &v14[OBJC_IVAR____TtC11Diagnostics10TextButton_action];
  long long v23 = a1[2];
  *(_OWORD *)unint64_t v22 = v30;
  *((_OWORD *)v22 + 1) = v21;
  uint64_t v24 = (void *)*((void *)a1 + 2);
  *((_OWORD *)v22 + 2) = v23;
  sub_100058114((uint64_t)&v30);
  id v25 = v24;
  swift_retain();

  uint64_t v26 = (objc_class *)type metadata accessor for TextButton();
  v29.receiver = v14;
  v29.super_class = v26;
  id v27 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  return v27;
}

uint64_t sub_1000580DC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100058114(uint64_t a1)
{
  return a1;
}

id sub_100058140()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11Diagnostics10TextButton_button) setAlpha:0.5];
}

uint64_t sub_100058160(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100058170()
{
  return swift_release();
}

id sub_100058348()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlertContentViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for AlertContentViewController()
{
  return self;
}

void *sub_1000583A4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1000583B8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_1000583CC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1000583F8@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_10005841C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_100058430@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100058444(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_100058458()
{
  return *v0 == 0;
}

uint64_t sub_100058468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

uint64_t sub_100058480@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10005A180(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

NSString sub_1000584C0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10018A3A8 = (uint64_t)result;
  return result;
}

uint64_t sub_1000584F8()
{
  if (qword_100182788 != -1) {
LABEL_45:
  }
    swift_once();
  swift_beginAccess();
  unint64_t v0 = (unint64_t)off_1001837C8;
  if (((unint64_t)off_1001837C8 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CardState();
    sub_10005A850((unint64_t *)&qword_100183A58, v1, (void (*)(uint64_t))type metadata accessor for CardState);
    Set.Iterator.init(_cocoa:)();
    unint64_t v0 = v37;
    objc_super v2 = v38;
    uint64_t v3 = v39;
    uint64_t v4 = v40;
    unint64_t v5 = v41;
  }
  else
  {
    uint64_t v6 = -1 << *((unsigned char *)off_1001837C8 + 32);
    objc_super v2 = (char *)off_1001837C8 + 56;
    uint64_t v7 = ~v6;
    uint64_t v8 = -v6;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v5 = v9 & *((void *)off_1001837C8 + 7);
    swift_bridgeObjectRetain();
    uint64_t v3 = v7;
    uint64_t v4 = 0;
  }
  int64_t v31 = (unint64_t)(v3 + 64) >> 6;
  p_class_meths = &OBJC_PROTOCOL___DKStatusBarResponder.class_meths;
  while ((v0 & 0x8000000000000000) != 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_43;
    }
    type metadata accessor for CardState();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v14 = aBlock;
    swift_unknownObjectRelease();
    uint64_t v13 = v4;
    uint64_t v11 = v5;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_31:
    if (*(unsigned char *)(v14 + 88)) {
      goto LABEL_37;
    }
    if (((_BYTE)p_class_meths[248] & 1) == 0)
    {
      if (!*(void *)(v14 + 80)) {
        goto LABEL_9;
      }
      id v18 = v2;
      type metadata accessor for CardState();
      uint64_t v19 = swift_allocObject();
      uint64_t v20 = swift_retain();
      sub_100058D58(v20);
      uint64_t v21 = *(void *)(v14 + 80);
      *(void *)(v14 + 80) = 0;
      id v22 = [self defaultCenter];
      if (qword_100182780 != -1) {
        swift_once();
      }
      uint64_t v23 = qword_10018A3A8;
      sub_10003AFD0((uint64_t *)&unk_100183A60);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100123B50;
      strcpy((char *)&aBlock, "changeInfoKey");
      HIWORD(aBlock) = -4864;
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
      *(void *)(inited + 72) = v19;
      *(void *)(inited + 80) = v21;
      swift_retain();
      sub_1000783F4(inited);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v22 postNotificationName:v23 object:v14 userInfo:isa];
      swift_release();

      objc_super v2 = v18;
      p_class_meths = &OBJC_PROTOCOL___DKStatusBarResponder.class_meths;
LABEL_37:
      if (*((unsigned char *)p_class_meths + 1984) != 1) {
        goto LABEL_9;
      }
    }
    if (*(void *)(v14 + 80))
    {
      if (qword_100182790 != -1) {
        swift_once();
      }
      uint64_t v26 = qword_1001837D0;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = sub_10005A838;
      *(void *)(v27 + 24) = v14;
      id v35 = sub_100042974;
      uint64_t v36 = v27;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      NSString v33 = sub_10004FD38;
      NSString v34 = &unk_10014ECC0;
      id v28 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v26, v28);
      _Block_release(v28);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release_n();
      swift_release();
      uint64_t v4 = v13;
      unint64_t v5 = v11;
      p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___DKStatusBarResponder + 32);
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
    }
    else
    {
LABEL_9:
      swift_release();
      uint64_t v4 = v13;
      unint64_t v5 = v11;
    }
  }
  if (v5)
  {
    uint64_t v11 = (v5 - 1) & v5;
    unint64_t v12 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v13 = v4;
    goto LABEL_30;
  }
  int64_t v15 = v4 + 1;
  if (__OFADD__(v4, 1)) {
    goto LABEL_44;
  }
  if (v15 >= v31) {
    goto LABEL_43;
  }
  unint64_t v16 = *(void *)&v2[8 * v15];
  uint64_t v13 = v4 + 1;
  if (v16) {
    goto LABEL_29;
  }
  uint64_t v13 = v4 + 2;
  if (v4 + 2 >= v31) {
    goto LABEL_43;
  }
  unint64_t v16 = *(void *)&v2[8 * v13];
  if (v16) {
    goto LABEL_29;
  }
  uint64_t v13 = v4 + 3;
  if (v4 + 3 >= v31) {
    goto LABEL_43;
  }
  unint64_t v16 = *(void *)&v2[8 * v13];
  if (v16) {
    goto LABEL_29;
  }
  uint64_t v13 = v4 + 4;
  if (v4 + 4 >= v31) {
    goto LABEL_43;
  }
  unint64_t v16 = *(void *)&v2[8 * v13];
  if (v16)
  {
LABEL_29:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
LABEL_30:
    uint64_t v14 = *(void *)(*(void *)(v0 + 48) + 8 * v12);
    swift_retain();
    if (!v14) {
      goto LABEL_43;
    }
    goto LABEL_31;
  }
  uint64_t v17 = v4 + 5;
  while (v31 != v17)
  {
    unint64_t v16 = *(void *)&v2[8 * v17++];
    if (v16)
    {
      uint64_t v13 = v17 - 1;
      goto LABEL_29;
    }
  }
LABEL_43:
  sub_100046948();
  off_1001837C8 = &_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease();
}

void sub_100058B00()
{
  off_1001837C8 = &_swiftEmptySetSingleton;
}

uint64_t sub_100058B14()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  static DispatchQoS.unspecified.getter();
  v7[1] = &_swiftEmptyArrayStorage;
  sub_10005A850((unint64_t *)&unk_100183A70, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10003AFD0(&qword_100183300);
  sub_10004E1E0();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_1001837D0 = result;
  return result;
}

uint64_t sub_100058D58(uint64_t a1)
{
  *(_DWORD *)(v1 + 16) = 65792;
  *(void *)(v1 + 24) = 0;
  *(unsigned char *)(v1 + 32) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 72) = &_swiftEmptySetSingleton;
  *(void *)(v1 + 80) = 0;
  *(unsigned char *)(v1 + 88) = 0;
  uint64_t v3 = *(void **)(a1 + 40);
  *(void *)(v1 + 40) = v3;
  *(void *)(v1 + 48) = *(void *)(a1 + 48);
  *(unsigned char *)(v1 + 16) = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(v1 + 17) = *(unsigned char *)(a1 + 17);
  *(unsigned char *)(v1 + 18) = *(unsigned char *)(a1 + 18);
  *(unsigned char *)(v1 + 19) = *(unsigned char *)(a1 + 19);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  *(void *)(v1 + 56) = v4;
  *(void *)(v1 + 64) = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  sub_10003AF68(v4);
  sub_10003B0B8(0);
  *(unsigned char *)(v1 + 32) = *(unsigned char *)(a1 + 32);
  *(void *)(v1 + 24) = *(void *)(a1 + 24);
  id v7 = [self defaultCenter];
  uint64_t v8 = *(void **)(v1 + 40);
  uint64_t v9 = self;
  id v10 = @"com.apple.Diagnostics.deviceStateChangedNotification";
  id v11 = v8;
  id v12 = [v9 mainQueue];
  v16[4] = sub_10005A7BC;
  uint64_t v17 = v1;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_10004FC1C;
  v16[3] = &unk_10014EC48;
  uint64_t v13 = _Block_copy(v16);
  swift_retain();
  swift_release();
  id v14 = [v7 addObserverForName:v10 object:v11 queue:v12 usingBlock:v13];
  swift_release();
  _Block_release(v13);
  swift_unknownObjectRelease();

  return v1;
}

void sub_100058F6C()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    id v6 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10007D88C((uint64_t)v7), (v3 & 1) != 0))
    {
      sub_10003C5D8(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v8);
    }
    else
    {
      long long v8 = 0u;
      long long v9 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10003C320((uint64_t)v7);
    if (*((void *)&v9 + 1))
    {
      sub_10003C374(0, &qword_100183A50);
      if (swift_dynamicCast())
      {
        if ([v6 changedProperties])
        {
          id v4 = [v6 snapshot];
          id v5 = [v4 phase];

          sub_1000591E0((uint64_t)v5);
        }
      }
    }
    else
    {
      sub_10005A7D8((uint64_t)&v8);
    }
  }
}

uint64_t sub_1000590C4()
{
  id v1 = [*(id *)(v0 + 40) attributes];
  sub_10003AFD0((uint64_t *)&unk_100182E10);
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v2 + 16) && (sub_10007D7FC(v3, v4), (v5 & 1) != 0))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (swift_dynamicCast()) {
      return v8;
    }
    else {
      return 4407891;
    }
  }
  else
  {
    uint64_t v6 = 4407891;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_1000591E0(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      int v5 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 4;
      if (v5 != 4) {
        goto LABEL_5;
      }
      break;
    case 2:
      int v6 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 1;
      if (v6 != 1) {
        goto LABEL_5;
      }
      break;
    case 3:
    case 4:
      int v2 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 2;
      if (v2 != 2) {
        goto LABEL_5;
      }
      break;
    case 5:
      int v7 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 3;
      if (v7 != 3) {
        goto LABEL_5;
      }
      break;
    case 6:
      int v8 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 5;
      if (v8 != 5) {
        goto LABEL_5;
      }
      break;
    case 7:
      int v9 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 6;
      if (v9 != 6) {
        goto LABEL_5;
      }
      break;
    case 8:
      int v10 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 7;
      if (v10 != 7) {
        goto LABEL_5;
      }
      break;
    case 9:
      int v11 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 8;
      if (v11 != 8) {
        goto LABEL_5;
      }
      break;
    case 10:
      int v12 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 9;
      if (v12 != 9) {
        goto LABEL_5;
      }
      break;
    case 11:
      int v13 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 10;
      if (v13 != 10) {
        goto LABEL_5;
      }
      break;
    case 12:
      int v14 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 11;
      if (v14 != 11) {
        goto LABEL_5;
      }
      break;
    case 13:
      int v15 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 12;
      if (v15 != 12) {
        goto LABEL_5;
      }
      break;
    default:
      int v3 = *(unsigned __int8 *)(v1 + 32);
      *(unsigned char *)(v1 + 32) = 0;
      if (v3)
      {
LABEL_5:
        uint64_t v4 = *(void *)(v1 + 80);
        if ((v4 & 0x20) == 0) {
          *(void *)(v1 + 80) = v4 | 0x20;
        }
        sub_100059388();
      }
      break;
  }
}

void sub_100059388()
{
  uint64_t v2 = v0;
  if (*(unsigned char *)(v0 + 88)) {
    goto LABEL_6;
  }
  if (byte_1001837C0) {
    goto LABEL_7;
  }
  if (*(void *)(v0 + 80))
  {
    type metadata accessor for CardState();
    uint64_t v3 = swift_allocObject();
    uint64_t v4 = swift_retain();
    sub_100058D58(v4);
    Class isa = *(Class *)(v2 + 80);
    *(void *)(v2 + 80) = 0;
    uint64_t isEscapingClosureAtFileLocation = (uint64_t)[self defaultCenter];
    if (qword_100182780 != -1) {
      goto LABEL_13;
    }
    while (1)
    {
      uint64_t v6 = qword_10018A3A8;
      sub_10003AFD0((uint64_t *)&unk_100183A60);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100123B50;
      strcpy((char *)&aBlock, "changeInfoKey");
      HIWORD(aBlock) = -4864;
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
      *(void *)(inited + 72) = v3;
      *(void *)(inited + 80) = isa;
      swift_retain();
      sub_1000783F4(inited);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [(id)isEscapingClosureAtFileLocation postNotificationName:v6 object:v2 userInfo:isa];
      swift_release();

LABEL_6:
      if (byte_1001837C0 != 1) {
        break;
      }
LABEL_7:
      if (!*(void *)(v2 + 80)) {
        return;
      }
      if (qword_100182790 != -1) {
        swift_once();
      }
      int v8 = qword_1001837D0;
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = sub_10005A838;
      *(void *)(v3 + 24) = v2;
      int v13 = sub_10005B17C;
      uint64_t v14 = v3;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      int v11 = sub_10004FD38;
      int v12 = &unk_10014ED38;
      int v9 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v8, v9);
      _Block_release(v9);
      uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return;
      }
      __break(1u);
LABEL_13:
      swift_once();
    }
  }
}

uint64_t sub_100059690(uint64_t a1)
{
  if (qword_100182788 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  sub_1000B9570(&v3, a1);
  swift_endAccess();
  return swift_release();
}

void sub_100059728(uint64_t a1)
{
  char v3 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(v1 + 88) = 1;
  int v4 = *(unsigned __int8 *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(v1 + 16);
  *(unsigned char *)(v1 + 16) = v4;
  if (v4 != v5)
  {
    uint64_t v6 = *(void *)(v1 + 80);
    if ((v6 & 1) == 0) {
      *(void *)(v1 + 80) = v6 | 1;
    }
    sub_100059388();
  }
  int v7 = *(unsigned __int8 *)(a1 + 17);
  int v8 = *(unsigned __int8 *)(v1 + 17);
  *(unsigned char *)(v1 + 17) = v7;
  if (v7 != v8)
  {
    uint64_t v9 = *(void *)(v1 + 80);
    if ((v9 & 4) == 0) {
      *(void *)(v1 + 80) = v9 | 4;
    }
    sub_100059388();
  }
  int v10 = *(unsigned __int8 *)(a1 + 18);
  int v11 = *(unsigned __int8 *)(v1 + 18);
  *(unsigned char *)(v1 + 18) = v10;
  if (v10 != v11)
  {
    uint64_t v12 = *(void *)(v1 + 80);
    if ((v12 & 2) == 0) {
      *(void *)(v1 + 80) = v12 | 2;
    }
    sub_100059388();
  }
  int v13 = *(unsigned __int8 *)(a1 + 19);
  int v14 = *(unsigned __int8 *)(v1 + 19);
  *(unsigned char *)(v1 + 19) = v13;
  if (v13 != v14)
  {
    uint64_t v15 = *(void *)(v1 + 80);
    if ((v15 & 8) == 0) {
      *(void *)(v1 + 80) = v15 | 8;
    }
    sub_100059388();
  }
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(v1 + 56);
  *(void *)(v1 + 56) = v16;
  *(void *)(v1 + 64) = v17;
  sub_10003AF68(v16);
  sub_10003B0B8(v18);
  int v19 = *(unsigned __int8 *)(a1 + 32);
  int v20 = *(unsigned __int8 *)(v1 + 32);
  *(unsigned char *)(v1 + 32) = v19;
  if (v19 != v20)
  {
    uint64_t v21 = *(void *)(v1 + 80);
    if ((v21 & 0x20) == 0) {
      *(void *)(v1 + 80) = v21 | 0x20;
    }
    sub_100059388();
  }
  uint64_t v22 = *(void *)(a1 + 24);
  uint64_t v23 = *(void *)(v1 + 24);
  *(void *)(v1 + 24) = v22;
  if (v22 != v23)
  {
    uint64_t v24 = *(void *)(v1 + 80);
    if ((v24 & 0x10) == 0) {
      *(void *)(v1 + 80) = v24 | 0x10;
    }
    sub_100059388();
  }
  int v25 = *(unsigned __int8 *)(v1 + 88);
  *(unsigned char *)(v1 + 88) = v3;
  if ((v3 & 1) == 0 && v25)
  {
    sub_100059388();
  }
}

uint64_t sub_1000598A4()
{
  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease();
  strcpy((char *)&v28, "isRequired: ");
  BYTE5(v28._object) = 0;
  HIWORD(v28._object) = -5120;
  if (*(unsigned char *)(v0 + 16)) {
    uint64_t v1 = 1702195828;
  }
  else {
    uint64_t v1 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 16)) {
    unint64_t v2 = 0xE400000000000000;
  }
  else {
    unint64_t v2 = 0xE500000000000000;
  }
  unint64_t v3 = v2;
  String.append(_:)(*(Swift::String *)&v1);
  swift_bridgeObjectRelease();
  v4._object = (void *)0xEC000000203A6E65;
  v4._uint64_t countAndFlagsBits = 0x646469487369203BLL;
  String.append(_:)(v4);
  if (*(unsigned char *)(v0 + 17)) {
    uint64_t v5 = 1702195828;
  }
  else {
    uint64_t v5 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 17)) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  v8._object = (void *)0x800000010012B770;
  v8._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v8);
  if (*(unsigned char *)(v0 + 18)) {
    uint64_t v9 = 1702195828;
  }
  else {
    uint64_t v9 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 18)) {
    unint64_t v10 = 0xE400000000000000;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 59;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  uint64_t countAndFlagsBits = v28._countAndFlagsBits;
  v28._uint64_t countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(80);
  v14._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v14._object = (void *)0x800000010012B790;
  String.append(_:)(v14);
  if (*(unsigned char *)(v0 + 19)) {
    uint64_t v15 = 1702195828;
  }
  else {
    uint64_t v15 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 19)) {
    unint64_t v16 = 0xE400000000000000;
  }
  else {
    unint64_t v16 = 0xE500000000000000;
  }
  unint64_t v17 = v16;
  String.append(_:)(*(Swift::String *)&v15);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 0x685064726163203BLL;
  v18._object = (void *)0xED0000203A657361;
  String.append(_:)(v18);
  _print_unlocked<A, B>(_:_:)();
  v19._uint64_t countAndFlagsBits = 0xD000000000000011;
  v19._object = (void *)0x800000010012B7B0;
  String.append(_:)(v19);
  _print_unlocked<A, B>(_:_:)();
  v20._uint64_t countAndFlagsBits = 0x656369766564203BLL;
  v20._object = (void *)0xEF203A6574617453;
  String.append(_:)(v20);
  id v21 = *(id *)(v0 + 40);
  id v22 = [v21 description];
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  int v25 = v24;

  v26._uint64_t countAndFlagsBits = v23;
  v26._object = v25;
  String.append(_:)(v26);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return countAndFlagsBits;
}

uint64_t sub_100059BB0()
{
  swift_bridgeObjectRelease();
  sub_10003B0B8(*(void *)(v0 + 56));
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 89, 7);
}

uint64_t type metadata accessor for CardState()
{
  return self;
}

ValueMetadata *type metadata accessor for CardState.ChangedPropertyOptions()
{
  return &type metadata for CardState.ChangedPropertyOptions;
}

uint64_t getEnumTagSinglePayload for CardState.Phase(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CardState.Phase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100059D90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardState.Phase()
{
  return &type metadata for CardState.Phase;
}

unint64_t sub_100059DCC()
{
  unint64_t result = qword_100183A20;
  if (!qword_100183A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183A20);
  }
  return result;
}

unint64_t sub_100059E24()
{
  unint64_t result = qword_100183A28;
  if (!qword_100183A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183A28);
  }
  return result;
}

unint64_t sub_100059E7C()
{
  unint64_t result = qword_100183A30;
  if (!qword_100183A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183A30);
  }
  return result;
}

unint64_t sub_100059ED4()
{
  unint64_t result = qword_100183A38;
  if (!qword_100183A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183A38);
  }
  return result;
}

unint64_t sub_100059F2C()
{
  unint64_t result = qword_100183A40;
  if (!qword_100183A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183A40);
  }
  return result;
}

uint64_t sub_100059F80()
{
  return sub_1000598A4();
}

Swift::Int sub_100059FA4()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  id v2 = [*(id *)(v1 + 40) serialNumber];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10005A02C()
{
  id v1 = [*(id *)(*(void *)v0 + 40) serialNumber];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10005A0A8()
{
  Hasher.init(_seed:)();
  id v1 = [*(id *)(*(void *)v0 + 40) serialNumber];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10005A12C(uint64_t *a1, uint64_t *a2)
{
  return sub_10005A1B8(*a1, *a2);
}

uint64_t sub_10005A138(uint64_t a1, uint64_t a2)
{
  return sub_10005A850(&qword_100183A48, a2, (void (*)(uint64_t))type metadata accessor for CardState);
}

uint64_t sub_10005A180(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  unsigned int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_10005A1B8(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 40) serialNumber];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  id v7 = [*(id *)(a2 + 40) serialNumber];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  if (v4 == v8 && v6 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_10005A284(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t *a5)
{
  char v5 = byte_1001837C0;
  byte_1001837C0 = 1;
  uint64_t result = sub_10005C734(a1, a2, a3, a4, a5);
  int v7 = byte_1001837C0;
  byte_1001837C0 = v5;
  if ((v5 & 1) == 0 && v7)
  {
    if (qword_100182790 != -1) {
      swift_once();
    }
    uint64_t v8 = qword_1001837D0;
    v10[4] = sub_1000583A0;
    void v10[5] = 0;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    _DWORD v10[2] = sub_10004FD38;
    _OWORD v10[3] = &unk_10014EC70;
    uint64_t v9 = _Block_copy(v10);
    swift_release();
    dispatch_sync(v8, v9);
    _Block_release(v9);
    uint64_t result = swift_isEscapingClosureAtFileLocation();
    if (result) {
      __break(1u);
    }
  }
  return result;
}

void sub_10005A3AC(uint64_t a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  char v5 = *(void **)(a1 + 40);
  uint64_t v6 = a2;
  id v7 = [v5 attributes];
  sub_10003AFD0((uint64_t *)&unk_100182E10);
  uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v8 + 16) && (sub_10007D7FC(v9, v10), (v11 & 1) != 0))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_9;
    }
    if ((void **)static String._unconditionallyBridgeFromObjectiveC(_:)() == aBlock && v12 == v26)
    {
      swift_bridgeObjectRelease();
LABEL_13:
      sub_1000590C4();
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v22 = [self imageNamed:v21];

      id v23 = [objc_allocWithZone((Class)UIImageView) initWithImage:v22];
      uint64_t v24 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView];
      *(void *)&v6[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView] = v23;
      id v17 = v23;

      sub_10003DB74();
      swift_release();
      swift_bridgeObjectRelease();
      id v18 = v17;
      goto LABEL_11;
    }
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_13;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_9:
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [self imageNamed:v13];

  if (v14)
  {
    id v15 = [objc_allocWithZone((Class)UIImageView) initWithImage:v14];

    unint64_t v16 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView];
    *(void *)&v6[OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceImageView] = v15;
    id v17 = v15;

    sub_10003DB74();
    id v18 = [self sharedInstance];
    objc_super v29 = sub_10005A79C;
    uint64_t v30 = v4;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v26 = 1107296256;
    uint64_t v27 = sub_100046950;
    Swift::String v28 = &unk_10014EC20;
    Swift::String v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v18 deviceImageViewForDeviceState:v5 completion:v19];
    _Block_release(v19);
    swift_release();
LABEL_11:

    return;
  }

  __break(1u);
}

uint64_t sub_10005A764()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10005A79C(void *a1)
{
  sub_10003D260(a1, *(void *)(v1 + 16));
}

uint64_t sub_10005A7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005A7B4()
{
  return swift_release();
}

void sub_10005A7BC()
{
}

uint64_t sub_10005A7D8(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0(&qword_100183E70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005A838()
{
  return sub_100059690(v0);
}

uint64_t sub_10005A840()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005A850(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005A898(void *a1)
{
  uint64_t v2 = v1;
  *(_DWORD *)(v2 + 16) = 65792;
  *(void *)(v2 + 24) = 0;
  *(unsigned char *)(v2 + 32) = 0;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = &_swiftEmptySetSingleton;
  *(void *)(v2 + 80) = 0;
  *(unsigned char *)(v2 + 88) = 0;
  *(void *)(v2 + 40) = a1;
  sub_10003AFD0(&qword_100183A88);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100123B50;
  id v5 = a1;
  id v6 = [v5 serialNumber];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  *(void *)(v4 + 32) = v7;
  *(void *)(v4 + 40) = v9;
  id v10 = [v5 attributes];
  sub_10003AFD0((uint64_t *)&unk_100182E10);
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v11 + 16) && (sub_10007D7FC(v12, v13), (v14 & 1) != 0))
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (swift_dynamicCast())
    {
      if (aBlock == (void **)0x656E6F685069 && v42 == 0xE600000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v24 = *(void *)(v4 + 16);
        unint64_t v23 = *(void *)(v4 + 24);
        if (v24 >= v23 >> 1) {
          uint64_t v4 = (uint64_t)sub_10009FE84((void *)(v23 > 1), v24 + 1, 1, (void *)v4);
        }
        *(void *)(v4 + 16) = v24 + 1;
        uint64_t v25 = v4 + 16 * v24;
        *(void *)(v25 + 32) = 0;
        *(void *)(v25 + 40) = 0;
      }
      else
      {
        if (aBlock == (void **)1684099177 && v42 == 0xE400000000000000
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          unint64_t v27 = *(void *)(v4 + 16);
          unint64_t v26 = *(void *)(v4 + 24);
          if (v27 >= v26 >> 1) {
            uint64_t v4 = (uint64_t)sub_10009FE84((void *)(v26 > 1), v27 + 1, 1, (void *)v4);
          }
          *(void *)(v4 + 16) = v27 + 1;
          uint64_t v28 = v4 + 16 * v27;
          long long v29 = xmmword_100124390;
        }
        else if (aBlock == (void **)0x756F7420646F5069 && v42 == 0xEA00000000006863 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          unint64_t v31 = *(void *)(v4 + 16);
          unint64_t v30 = *(void *)(v4 + 24);
          if (v31 >= v30 >> 1) {
            uint64_t v4 = (uint64_t)sub_10009FE84((void *)(v30 > 1), v31 + 1, 1, (void *)v4);
          }
          *(void *)(v4 + 16) = v31 + 1;
          uint64_t v28 = v4 + 16 * v31;
          long long v29 = xmmword_100124380;
        }
        else if (aBlock == (void **)0x565420656C707041 && v42 == 0xE800000000000000 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          unint64_t v33 = *(void *)(v4 + 16);
          unint64_t v32 = *(void *)(v4 + 24);
          if (v33 >= v32 >> 1) {
            uint64_t v4 = (uint64_t)sub_10009FE84((void *)(v32 > 1), v33 + 1, 1, (void *)v4);
          }
          *(void *)(v4 + 16) = v33 + 1;
          uint64_t v28 = v4 + 16 * v33;
          long long v29 = xmmword_100124370;
        }
        else if (aBlock == (void **)0x615720656C707041 && v42 == 0xEB00000000686374 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          unint64_t v35 = *(void *)(v4 + 16);
          unint64_t v34 = *(void *)(v4 + 24);
          if (v35 >= v34 >> 1) {
            uint64_t v4 = (uint64_t)sub_10009FE84((void *)(v34 > 1), v35 + 1, 1, (void *)v4);
          }
          *(void *)(v4 + 16) = v35 + 1;
          uint64_t v28 = v4 + 16 * v35;
          long long v29 = xmmword_100124360;
        }
        else if (aBlock == (void **)0x726F737365636341 && v42 == 0xEB00000000736569 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          unint64_t v37 = *(void *)(v4 + 16);
          unint64_t v36 = *(void *)(v4 + 24);
          if (v37 >= v36 >> 1) {
            uint64_t v4 = (uint64_t)sub_10009FE84((void *)(v36 > 1), v37 + 1, 1, (void *)v4);
          }
          *(void *)(v4 + 16) = v37 + 1;
          uint64_t v28 = v4 + 16 * v37;
          long long v29 = xmmword_100124350;
        }
        else
        {
          if (aBlock == (void **)0x73646F70726941 && v42 == 0xE700000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v38 & 1) == 0) {
              goto LABEL_8;
            }
          }
          unint64_t v40 = *(void *)(v4 + 16);
          unint64_t v39 = *(void *)(v4 + 24);
          if (v40 >= v39 >> 1) {
            uint64_t v4 = (uint64_t)sub_10009FE84((void *)(v39 > 1), v40 + 1, 1, (void *)v4);
          }
          *(void *)(v4 + 16) = v40 + 1;
          uint64_t v28 = v4 + 16 * v40;
          long long v29 = xmmword_100124340;
        }
        *(_OWORD *)(v28 + 32) = v29;
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_8:
  *(void *)(v2 + 48) = v4;
  id v15 = [self defaultCenter];
  unint64_t v16 = self;
  id v17 = v5;
  id v18 = @"com.apple.Diagnostics.deviceStateChangedNotification";
  id v19 = [v16 mainQueue];
  id v45 = sub_10005A7BC;
  uint64_t v46 = v2;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v42 = 1107296256;
  dispatch_semaphore_t v43 = sub_10004FC1C;
  Class v44 = &unk_10014ECE8;
  char v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v21 = [v15 addObserverForName:v18 object:v17 queue:v19 usingBlock:v20];
  _Block_release(v20);
  swift_unknownObjectRelease();

  sub_1000591E0((uint64_t)[v17 phase]);
  return v2;
}

uint64_t sub_10005B010()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *initializeBufferWithCopyOfBuffer for CardState.ChangedPropertyNotificationInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for CardState.ChangedPropertyNotificationInfo()
{
  return swift_release();
}

void *assignWithCopy for CardState.ChangedPropertyNotificationInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for CardState.ChangedPropertyNotificationInfo(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for CardState.ChangedPropertyNotificationInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardState.ChangedPropertyNotificationInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardState.ChangedPropertyNotificationInfo()
{
  return &type metadata for CardState.ChangedPropertyNotificationInfo;
}

uint64_t sub_10005B1B0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a3, a1, v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10005B2E8();
  id v7 = a2;
  return AttributeContainer.subscript.setter();
}

uint64_t sub_10005B26C()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void sub_10005B2C8()
{
}

unint64_t sub_10005B2E8()
{
  unint64_t result = qword_100183A90;
  if (!qword_100183A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183A90);
  }
  return result;
}

void sub_10005B33C()
{
}

uint64_t sub_10005B364()
{
  return 8;
}

uint64_t sub_10005B370()
{
  return swift_release();
}

uint64_t sub_10005B378(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_10005B388()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void *sub_10005B3D0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_10005B3DC(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for EnhancedLoggingDiagnosticInfoViewController();
  [super viewWillAppear:a1 & 1];
  id v3 = [v1 navigationController];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 navigationBar];

    [v5 setBackgroundImage:0 forBarMetrics:0];
  }
  id v6 = [v1 navigationController];
  if (v6)
  {
    id v7 = v6;
    id v8 = [v6 navigationBar];

    [v8 setShadowImage:0];
  }
}

void sub_10005B528()
{
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = self;
    id v4 = [v3 systemBackgroundColor];
    [v2 setBackgroundColor:v4];

    id v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView];
    id v6 = [self preferredFontForTextStyle:UIFontTextStyleBody];
    [v5 setFont:v6];

    [v5 setTextAlignment:0];
    [v5 setEditable:0];
    [v5 setSelectable:0];
    id v7 = [v3 systemBackgroundColor];
    [v5 setBackgroundColor:v7];

    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v5 setScrollEnabled:0];
    [v5 setScrollEnabled:1];
    id v8 = self;
    swift_bridgeObjectRetain();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v10 = [v8 findEntryForParameterName:v9];

    if (v10)
    {
      id v11 = [v10 descriptionLocalizationKey];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      char v14 = v13;

      sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v12, v14);
      swift_bridgeObjectRelease();
      id v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 setText:v15];
    }
    else
    {
      sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000024, (void *)0x800000010012B8A0);
      id v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v5 setText:v15];
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10005B814()
{
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView]];
  }
  else
  {
    __break(1u);
  }
}

void sub_10005B880()
{
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100124770;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView];
  id v3 = [v2 topAnchor];
  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v5 = v4;
  id v6 = [v4 safeAreaLayoutGuide];

  id v7 = [v6 topAnchor];
  id v8 = [v3 constraintEqualToAnchor:v7 constant:5.0];

  *(void *)(v1 + 32) = v8;
  id v9 = [v2 leadingAnchor];
  id v10 = [v0 view];
  if (!v10)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v11 = v10;
  id v12 = [v10 safeAreaLayoutGuide];

  id v13 = [v12 leadingAnchor];
  id v14 = [v9 constraintEqualToAnchor:v13 constant:10.0];

  *(void *)(v1 + 40) = v14;
  id v15 = [v2 trailingAnchor];
  id v16 = [v0 view];
  if (!v16)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v17 = v16;
  id v18 = [v16 safeAreaLayoutGuide];

  id v19 = [v18 trailingAnchor];
  id v20 = [v15 constraintEqualToAnchor:v19 constant:-10.0];

  *(void *)(v1 + 48) = v20;
  id v21 = [v2 centerXAnchor];
  id v22 = [v0 view];
  if (!v22)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v23 = v22;
  id v24 = [v22 safeAreaLayoutGuide];

  id v25 = [v24 centerXAnchor];
  id v26 = [v21 constraintEqualToAnchor:v25];

  *(void *)(v1 + 56) = v26;
  id v27 = [v2 bottomAnchor];
  id v28 = [v0 view];
  if (!v28)
  {
LABEL_13:
    __break(1u);
    return;
  }
  long long v29 = v28;
  unint64_t v30 = self;
  id v31 = [v29 safeAreaLayoutGuide];

  id v32 = [v31 bottomAnchor];
  id v33 = [v27 constraintEqualToAnchor:v32 constant:-5.0];

  *(void *)(v1 + 64) = v33;
  specialized Array._endMutation()();
  sub_10005C04C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v30 activateConstraints:isa];
}

id sub_10005BC7C(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = &v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logType];
  *(void *)id v6 = 0;
  *((void *)v6 + 1) = 0xE000000000000000;
  id v7 = &v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logName];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0xE000000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_fontSizeTitle] = 0x403E000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_titlePadding] = 0x4044000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_sidePadding] = 0x4024000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_topBottomPadding] = 0x4014000000000000;
  uint64_t v8 = OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView;
  id v9 = objc_allocWithZone((Class)UITextView);
  id v10 = v3;
  *(void *)&v3[v8] = [v9 init];

  if (a2)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v14.receiver = v10;
  v14.super_class = (Class)type metadata accessor for EnhancedLoggingDiagnosticInfoViewController();
  id v12 = [super initWithNibName:v11 bundle:a3];

  return v12;
}

id sub_10005BE14(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logType];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0xE000000000000000;
  id v4 = &v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logName];
  *(void *)id v4 = 0;
  *((void *)v4 + 1) = 0xE000000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_fontSizeTitle] = 0x403E000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_titlePadding] = 0x4044000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_sidePadding] = 0x4024000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_topBottomPadding] = 0x4014000000000000;
  uint64_t v5 = OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView;
  id v6 = objc_allocWithZone((Class)UITextView);
  id v7 = v1;
  *(void *)&v1[v5] = [v6 init];

  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for EnhancedLoggingDiagnosticInfoViewController();
  [super initWithCoder:a1];

  return v8;
}

void sub_10005BF38()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_descriptionTextView);
}

id sub_10005BF90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedLoggingDiagnosticInfoViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for EnhancedLoggingDiagnosticInfoViewController()
{
  return self;
}

unint64_t sub_10005C04C()
{
  unint64_t result = qword_1001831A0;
  if (!qword_1001831A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001831A0);
  }
  return result;
}

void sub_10005C08C()
{
  uint64_t v1 = v0;
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for DiagnosticsCompletedNavigationController();
  [super viewDidLoad];
  [v0 setModalPresentationStyle:2];
  id v2 = [v0 navigationBar];
  id v3 = [objc_allocWithZone((Class)UIImage) init];
  [v2 setBackgroundImage:v3 forBarMetrics:0];

  id v4 = [v1 navigationBar];
  id v5 = [objc_allocWithZone((Class)UIImage) init];
  [v4 setShadowImage:v5];

  id v6 = [v1 navigationBar];
  [v6 setAlpha:0.0];

  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100123F00;
  id v8 = objc_allocWithZone((Class)type metadata accessor for DiagnosticsCompletedViewController());
  *(void *)(v7 + 32) = sub_1000E300C();
  specialized Array._endMutation()();
  sub_10005C46C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setViewControllers:isa];
}

id sub_10005C414()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DiagnosticsCompletedNavigationController();
  [super dealloc];
}

uint64_t type metadata accessor for DiagnosticsCompletedNavigationController()
{
  return self;
}

unint64_t sub_10005C46C()
{
  unint64_t result = qword_100183670;
  if (!qword_100183670)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100183670);
  }
  return result;
}

uint64_t sub_10005C4AC()
{
  type metadata accessor for CardFilterUpdateManager();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = &_swiftEmptySetSingleton;
  *(void *)(result + 24) = &_swiftEmptySetSingleton;
  *(unsigned char *)(result + 32) = 1;
  qword_10018A3B0 = result;
  return result;
}

uint64_t sub_10005C4EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 33, 7);
}

uint64_t type metadata accessor for CardFilterUpdateManager()
{
  return self;
}

uint64_t destroy for CardFilter()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s11Diagnostics10CardFilterVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CardFilter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for CardFilter(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CardFilter(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CardFilter(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CardFilter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CardFilter()
{
  return &type metadata for CardFilter;
}

uint64_t sub_10005C734(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t *a5)
{
  unint64_t v259 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CardState();
    sub_10005FA34();
    Set.Iterator.init(_cocoa:)();
    uint64_t v6 = v273;
    uint64_t v262 = v274;
    uint64_t v7 = v275;
    unint64_t v8 = v276;
    unint64_t v9 = v277;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v262 = a1 + 56;
    uint64_t v7 = ~v10;
    uint64_t v11 = -v10;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v9 = v12 & *(void *)(a1 + 56);
    unint64_t v8 = 0;
    uint64_t v6 = swift_bridgeObjectRetain();
  }
  int64_t v261 = (unint64_t)(v7 + 64) >> 6;
  p_class_meths = &OBJC_PROTOCOL___DKStatusBarResponder.class_meths;
  uint64_t v265 = v6;
  while (1)
  {
    unint64_t v14 = v8;
    if (v6 < 0) {
      break;
    }
    if (v9)
    {
      unint64_t v15 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v16 = v15 | (v8 << 6);
    }
    else
    {
      int64_t v19 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
LABEL_291:
        __break(1u);
LABEL_292:
        __break(1u);
LABEL_293:
        __break(1u);
LABEL_294:
        __break(1u);
LABEL_295:
        __break(1u);
LABEL_296:
        __break(1u);
LABEL_297:
        __break(1u);
LABEL_298:
        __break(1u);
        goto LABEL_299;
      }
      if (v19 >= v261) {
        goto LABEL_265;
      }
      unint64_t v20 = *(void *)(v262 + 8 * v19);
      ++v8;
      if (!v20)
      {
        unint64_t v8 = v14 + 2;
        if ((uint64_t)(v14 + 2) >= v261) {
          goto LABEL_265;
        }
        unint64_t v20 = *(void *)(v262 + 8 * v8);
        if (!v20)
        {
          unint64_t v8 = v14 + 3;
          if ((uint64_t)(v14 + 3) >= v261) {
            goto LABEL_265;
          }
          unint64_t v20 = *(void *)(v262 + 8 * v8);
          if (!v20)
          {
            unint64_t v8 = v14 + 4;
            if ((uint64_t)(v14 + 4) >= v261) {
              goto LABEL_265;
            }
            unint64_t v20 = *(void *)(v262 + 8 * v8);
            if (!v20)
            {
              unint64_t v21 = v14 + 5;
              do
              {
                if (v261 == v21) {
                  goto LABEL_265;
                }
                unint64_t v20 = *(void *)(v262 + 8 * v21++);
              }
              while (!v20);
              unint64_t v8 = v21 - 1;
            }
          }
        }
      }
      unint64_t v9 = (v20 - 1) & v20;
      unint64_t v16 = __clz(__rbit64(v20)) + (v8 << 6);
    }
    uint64_t v5 = *(void *)(*(void *)(v6 + 48) + 8 * v16);
    swift_retain();
    if (!v5) {
      goto LABEL_265;
    }
LABEL_37:
    if (a4)
    {
      int v22 = *(unsigned __int8 *)(v5 + 16);
      *(unsigned char *)(v5 + 16) = 0;
      if (v22 != 1) {
        goto LABEL_51;
      }
      uint64_t v23 = *(void *)(v5 + 80);
      if ((v23 & 1) == 0) {
        *(void *)(v5 + 80) = v23 | 1;
      }
      if ((*(unsigned char *)(v5 + 88) & 1) == 0)
      {
        if (byte_1001837C0)
        {
LABEL_48:
          if (qword_100182790 != -1) {
            swift_once();
          }
          id v31 = qword_1001837D0;
          unint64_t v14 = swift_allocObject();
          *(void *)(v14 + 16) = sub_10005A838;
          *(void *)(v14 + 24) = v5;
          v271 = sub_10005B17C;
          unint64_t v272 = v14;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          v269 = sub_10004FD38;
          v270 = &unk_10014F2C0;
          id v32 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          swift_release();
          dispatch_sync(v31, v32);
          _Block_release(v32);
          LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if (v31) {
            goto LABEL_292;
          }
LABEL_51:
          char v33 = *(unsigned char *)(v5 + 18);
          *(unsigned char *)(v5 + 18) = 0;
          if ((v33 & 1) == 0) {
            goto LABEL_90;
          }
          uint64_t v34 = *(void *)(v5 + 80);
          if ((v34 & 2) == 0) {
            *(void *)(v5 + 80) = v34 | 2;
          }
          if (*(unsigned char *)(v5 + 88))
          {
            if (!byte_1001837C0) {
              goto LABEL_90;
            }
          }
          else
          {
            if (byte_1001837C0)
            {
LABEL_87:
              if (qword_100182790 != -1) {
                swift_once();
              }
              id v64 = qword_1001837D0;
              unint64_t v14 = swift_allocObject();
              *(void *)(v14 + 16) = sub_10005A838;
              *(void *)(v14 + 24) = v5;
              v271 = sub_10005B17C;
              unint64_t v272 = v14;
              *(void *)&long long aBlock = _NSConcreteStackBlock;
              *((void *)&aBlock + 1) = 1107296256;
              v269 = sub_10004FD38;
              v270 = &unk_10014F270;
              id v65 = _Block_copy(&aBlock);
              swift_retain();
              swift_retain();
              swift_release();
              dispatch_sync(v64, v65);
              _Block_release(v65);
              LOBYTE(v64) = swift_isEscapingClosureAtFileLocation();
              swift_release();
              swift_release();
              if (v64) {
                goto LABEL_293;
              }
LABEL_90:
              char v66 = *(unsigned char *)(v5 + 17);
              *(unsigned char *)(v5 + 17) = 1;
              if (v66) {
                goto LABEL_8;
              }
              uint64_t v67 = *(void *)(v5 + 80);
              if ((v67 & 4) == 0)
              {
                *(void *)(v5 + 80) = v67 | 4;
                uint64_t v67 = 1;
              }
              if (*(unsigned char *)(v5 + 88))
              {
                if ((byte_1001837C0 & 1) == 0) {
                  goto LABEL_8;
                }
              }
              else
              {
                if (v67) {
                  char v68 = byte_1001837C0;
                }
                else {
                  char v68 = 1;
                }
                if (v68)
                {
                  if ((byte_1001837C0 & 1) == 0) {
                    goto LABEL_8;
                  }
LABEL_203:
                  if (qword_100182790 != -1) {
                    swift_once();
                  }
                  v137 = qword_1001837D0;
                  unint64_t v14 = swift_allocObject();
                  *(void *)(v14 + 16) = sub_10005A838;
                  *(void *)(v14 + 24) = v5;
                  v271 = sub_10005B17C;
                  unint64_t v272 = v14;
                  *(void *)&long long aBlock = _NSConcreteStackBlock;
                  *((void *)&aBlock + 1) = 1107296256;
                  v269 = sub_10004FD38;
                  v270 = &unk_10014F220;
                  v138 = _Block_copy(&aBlock);
                  swift_retain();
                  swift_retain();
                  swift_release();
                  dispatch_sync(v137, v138);
                  _Block_release(v138);
                  LOBYTE(v137) = swift_isEscapingClosureAtFileLocation();
                  swift_release();
                  swift_release();
                  if (v137) {
                    goto LABEL_294;
                  }
                  goto LABEL_8;
                }
                type metadata accessor for CardState();
                swift_allocObject();
                uint64_t v130 = swift_retain();
                uint64_t v131 = sub_100058D58(v130);
                uint64_t v132 = *(void *)(v5 + 80);
                *(void *)(v5 + 80) = 0;
                id v133 = [self defaultCenter];
                if (qword_100182780 != -1) {
                  swift_once();
                }
                uint64_t v134 = qword_10018A3A8;
                sub_10003AFD0((uint64_t *)&unk_100183A60);
                uint64_t v135 = swift_allocObject();
                *(_OWORD *)(v135 + 16) = xmmword_100123B50;
                strcpy((char *)&aBlock, "changeInfoKey");
                HIWORD(aBlock) = -4864;
                AnyHashable.init<A>(_:)();
                *(void *)(v135 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
                *(void *)(v135 + 72) = v131;
                *(void *)(v135 + 80) = v132;
                swift_retain();
                sub_1000783F4(v135);
                Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v133 postNotificationName:v134 object:v5 userInfo:isa];
                swift_release();

                uint64_t v6 = v265;
                if ((byte_1001837C0 & 1) == 0) {
                  goto LABEL_8;
                }
              }
              if (!*(void *)(v5 + 80)) {
                goto LABEL_8;
              }
              goto LABEL_203;
            }
            type metadata accessor for CardState();
            swift_allocObject();
            uint64_t v57 = swift_retain();
            uint64_t v58 = sub_100058D58(v57);
            uint64_t v59 = *(void *)(v5 + 80);
            *(void *)(v5 + 80) = 0;
            id v60 = [self defaultCenter];
            if (qword_100182780 != -1) {
              swift_once();
            }
            uint64_t v61 = qword_10018A3A8;
            sub_10003AFD0((uint64_t *)&unk_100183A60);
            uint64_t v62 = swift_allocObject();
            *(_OWORD *)(v62 + 16) = xmmword_100123B50;
            strcpy((char *)&aBlock, "changeInfoKey");
            HIWORD(aBlock) = -4864;
            AnyHashable.init<A>(_:)();
            *(void *)(v62 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
            *(void *)(v62 + 72) = v58;
            *(void *)(v62 + 80) = v59;
            swift_retain();
            sub_1000783F4(v62);
            Class v63 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v60 postNotificationName:v61 object:v5 userInfo:v63];
            swift_release();

            uint64_t v6 = v265;
            if ((byte_1001837C0 & 1) == 0) {
              goto LABEL_90;
            }
          }
          if (!*(void *)(v5 + 80)) {
            goto LABEL_90;
          }
          goto LABEL_87;
        }
        type metadata accessor for CardState();
        swift_allocObject();
        uint64_t v24 = swift_retain();
        uint64_t v25 = sub_100058D58(v24);
        uint64_t v26 = *(void *)(v5 + 80);
        *(void *)(v5 + 80) = 0;
        id v27 = [self defaultCenter];
        if (qword_100182780 != -1) {
          swift_once();
        }
        uint64_t v28 = qword_10018A3A8;
        sub_10003AFD0((uint64_t *)&unk_100183A60);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_100123B50;
        strcpy((char *)&aBlock, "changeInfoKey");
        HIWORD(aBlock) = -4864;
        AnyHashable.init<A>(_:)();
        *(void *)(v29 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
        *(void *)(v29 + 72) = v25;
        *(void *)(v29 + 80) = v26;
        swift_retain();
        sub_1000783F4(v29);
        Class v30 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v27 postNotificationName:v28 object:v5 userInfo:v30];
        swift_release();

        uint64_t v6 = v265;
      }
      if (byte_1001837C0 != 1 || !*(void *)(v5 + 80)) {
        goto LABEL_51;
      }
      goto LABEL_48;
    }
    if (!*(void *)(a2 + 16) && !*(void *)(a3 + 16))
    {
      int v117 = *(unsigned __int8 *)(v5 + 16);
      *(unsigned char *)(v5 + 16) = 0;
      if (v117 == 1)
      {
        uint64_t v118 = *(void *)(v5 + 80);
        if ((v118 & 1) == 0) {
          *(void *)(v5 + 80) = v118 | 1;
        }
        if (*(unsigned char *)(v5 + 88))
        {
LABEL_188:
          if (byte_1001837C0 == 1 && *(void *)(v5 + 80)) {
            goto LABEL_190;
          }
        }
        else
        {
          if ((byte_1001837C0 & 1) == 0)
          {
            type metadata accessor for CardState();
            swift_allocObject();
            uint64_t v119 = swift_retain();
            uint64_t v120 = sub_100058D58(v119);
            uint64_t v121 = *(void *)(v5 + 80);
            *(void *)(v5 + 80) = 0;
            id v122 = [self defaultCenter];
            if (qword_100182780 != -1) {
              swift_once();
            }
            uint64_t v123 = qword_10018A3A8;
            sub_10003AFD0((uint64_t *)&unk_100183A60);
            uint64_t v124 = swift_allocObject();
            *(_OWORD *)(v124 + 16) = xmmword_100123B50;
            strcpy((char *)&aBlock, "changeInfoKey");
            HIWORD(aBlock) = -4864;
            AnyHashable.init<A>(_:)();
            *(void *)(v124 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
            *(void *)(v124 + 72) = v120;
            *(void *)(v124 + 80) = v121;
            swift_retain();
            sub_1000783F4(v124);
            Class v125 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v122 postNotificationName:v123 object:v5 userInfo:v125];
            swift_release();

            uint64_t v6 = v265;
            goto LABEL_188;
          }
LABEL_190:
          if (qword_100182790 != -1) {
            swift_once();
          }
          v126 = qword_1001837D0;
          unint64_t v14 = swift_allocObject();
          *(void *)(v14 + 16) = sub_10005A838;
          *(void *)(v14 + 24) = v5;
          v271 = sub_10005B17C;
          unint64_t v272 = v14;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          v269 = sub_10004FD38;
          v270 = &unk_10014F1D0;
          long long v127 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          swift_release();
          dispatch_sync(v126, v127);
          _Block_release(v127);
          LOBYTE(v126) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if (v126) {
            goto LABEL_335;
          }
        }
      }
      char v128 = *(unsigned char *)(v5 + 18);
      *(unsigned char *)(v5 + 18) = 1;
      if ((v128 & 1) == 0)
      {
        uint64_t v129 = *(void *)(v5 + 80);
        if ((v129 & 2) == 0) {
          *(void *)(v5 + 80) = v129 | 2;
        }
        if (*(unsigned char *)(v5 + 88))
        {
          if (!byte_1001837C0) {
            goto LABEL_237;
          }
LABEL_233:
          if (!*(void *)(v5 + 80)) {
            goto LABEL_237;
          }
LABEL_234:
          if (qword_100182790 != -1) {
            swift_once();
          }
          v178 = qword_1001837D0;
          unint64_t v14 = swift_allocObject();
          *(void *)(v14 + 16) = sub_10005A838;
          *(void *)(v14 + 24) = v5;
          v271 = sub_10005B17C;
          unint64_t v272 = v14;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          v269 = sub_10004FD38;
          v270 = &unk_10014F180;
          v179 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          swift_release();
          dispatch_sync(v178, v179);
          _Block_release(v179);
          LOBYTE(v178) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if (v178) {
            goto LABEL_336;
          }
        }
        else
        {
          if (byte_1001837C0) {
            goto LABEL_234;
          }
          type metadata accessor for CardState();
          swift_allocObject();
          uint64_t v167 = swift_retain();
          uint64_t v168 = sub_100058D58(v167);
          uint64_t v169 = *(void *)(v5 + 80);
          *(void *)(v5 + 80) = 0;
          id v170 = [self defaultCenter];
          if (qword_100182780 != -1) {
            swift_once();
          }
          uint64_t v171 = qword_10018A3A8;
          sub_10003AFD0((uint64_t *)&unk_100183A60);
          uint64_t v172 = swift_allocObject();
          uint64_t v173 = sub_1000FC6F0(v172, 1);
          v175 = v174;
          strcpy((char *)&aBlock, "changeInfoKey");
          HIWORD(aBlock) = -4864;
          AnyHashable.init<A>(_:)();
          v175[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
          v175[5] = v168;
          v175[6] = v169;
          uint64_t v176 = Int.id.getter(v173);
          swift_retain();
          sub_1000783F4(v176);
          Class v177 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v170 postNotificationName:v171 object:v5 userInfo:v177];
          swift_release();

          uint64_t v6 = v265;
          if (byte_1001837C0) {
            goto LABEL_233;
          }
        }
      }
LABEL_237:
      char v180 = *(unsigned char *)(v5 + 17);
      *(unsigned char *)(v5 + 17) = 0;
      if ((v180 & 1) == 0) {
        goto LABEL_8;
      }
      uint64_t v181 = *(void *)(v5 + 80);
      if ((v181 & 4) == 0)
      {
        *(void *)(v5 + 80) = v181 | 4;
        uint64_t v181 = 1;
      }
      if (*(unsigned char *)(v5 + 88))
      {
        if ((byte_1001837C0 & 1) == 0) {
          goto LABEL_8;
        }
        goto LABEL_260;
      }
      if (v181) {
        char v182 = byte_1001837C0;
      }
      else {
        char v182 = 1;
      }
      if (v182)
      {
        if ((byte_1001837C0 & 1) == 0) {
          goto LABEL_8;
        }
      }
      else
      {
        type metadata accessor for CardState();
        swift_allocObject();
        uint64_t v196 = swift_retain();
        uint64_t v197 = sub_100058D58(v196);
        uint64_t v198 = *(void *)(v5 + 80);
        *(void *)(v5 + 80) = 0;
        id v199 = [self defaultCenter];
        if (qword_100182780 != -1) {
          swift_once();
        }
        uint64_t v200 = qword_10018A3A8;
        sub_10003AFD0((uint64_t *)&unk_100183A60);
        uint64_t v201 = swift_allocObject();
        uint64_t v202 = sub_1000FC6F0(v201, 1);
        v204 = v203;
        strcpy((char *)&aBlock, "changeInfoKey");
        HIWORD(aBlock) = -4864;
        AnyHashable.init<A>(_:)();
        v204[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
        v204[5] = v197;
        v204[6] = v198;
        uint64_t v205 = Int.id.getter(v202);
        swift_retain();
        sub_1000783F4(v205);
        Class v206 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v199 postNotificationName:v200 object:v5 userInfo:v206];
        swift_release();

        uint64_t v6 = v265;
        if ((byte_1001837C0 & 1) == 0) {
          goto LABEL_8;
        }
LABEL_260:
        if (!*(void *)(v5 + 80)) {
          goto LABEL_8;
        }
      }
      if (qword_100182790 != -1) {
        swift_once();
      }
      v207 = qword_1001837D0;
      unint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_10005A838;
      *(void *)(v14 + 24) = v5;
      v271 = sub_10005B17C;
      unint64_t v272 = v14;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      v269 = sub_10004FD38;
      v270 = &unk_10014F130;
      v208 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v207, v208);
      _Block_release(v208);
      LOBYTE(v207) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (v207) {
        goto LABEL_337;
      }
      goto LABEL_8;
    }
    swift_bridgeObjectRetain();
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v36 = sub_1000603F4(v35, a3);
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void *)(v36 + 16);
    swift_release();
    if (v37)
    {
      uint64_t v38 = *(void *)(v5 + 48);
      uint64_t v39 = *(void *)(v38 + 16);
      if (v39)
      {
        swift_bridgeObjectRetain();
        unint64_t v40 = (unint64_t *)(v38 + 40);
        while (1)
        {
          uint64_t v41 = *(v40 - 1);
          unint64_t v42 = *v40;
          Hasher.init(_seed:)();
          if (v42 >= 9)
          {
            swift_bridgeObjectRetain();
            String.hash(into:)();
          }
          else
          {
            Hasher._combine(_:)(qword_100124848[v42]);
            sub_100060C08(v41, v42);
          }
          Swift::Int v43 = Hasher._finalize()();
          Hasher.init(_seed:)();
          Hasher._combine(_:)(0x10uLL);
          Swift::Int v44 = Hasher._finalize()();
          sub_100060B6C(v41, v42);
          if (v43 == v44) {
            break;
          }
          v40 += 2;
          if (!--v39)
          {
            swift_bridgeObjectRelease();
            goto LABEL_105;
          }
        }
        swift_bridgeObjectRelease();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
LABEL_105:
        p_class_meths = &OBJC_PROTOCOL___DKStatusBarResponder.class_meths;
      }
      char v69 = *(unsigned char *)(v5 + 16);
      *(unsigned char *)(v5 + 16) = 1;
      uint64_t v6 = v265;
      if (v69) {
        goto LABEL_119;
      }
      uint64_t v70 = *(void *)(v5 + 80);
      if ((v70 & 1) == 0) {
        *(void *)(v5 + 80) = v70 | 1;
      }
      if (*(unsigned char *)(v5 + 88))
      {
LABEL_114:
        if (byte_1001837C0 != 1 || !*(void *)(v5 + 80)) {
          goto LABEL_119;
        }
      }
      else if ((byte_1001837C0 & 1) == 0)
      {
        type metadata accessor for CardState();
        swift_allocObject();
        uint64_t v71 = swift_retain();
        uint64_t v72 = sub_100058D58(v71);
        uint64_t v73 = *(void *)(v5 + 80);
        *(void *)(v5 + 80) = 0;
        id v74 = [self defaultCenter];
        if (qword_100182780 != -1) {
          swift_once();
        }
        uint64_t v75 = qword_10018A3A8;
        sub_10003AFD0((uint64_t *)&unk_100183A60);
        uint64_t v76 = swift_allocObject();
        *(_OWORD *)(v76 + 16) = xmmword_100123B50;
        strcpy((char *)&aBlock, "changeInfoKey");
        HIWORD(aBlock) = -4864;
        AnyHashable.init<A>(_:)();
        *(void *)(v76 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
        *(void *)(v76 + 72) = v72;
        *(void *)(v76 + 80) = v73;
        swift_retain();
        sub_1000783F4(v76);
        Class v77 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v74 postNotificationName:v75 object:v5 userInfo:v77];
        swift_release();

        uint64_t v6 = v265;
        goto LABEL_114;
      }
      if (qword_100182790 != -1) {
        swift_once();
      }
      id v78 = qword_1001837D0;
      unint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_10005A838;
      *(void *)(v14 + 24) = v5;
      v271 = sub_10005B17C;
      unint64_t v272 = v14;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      v269 = sub_10004FD38;
      v270 = &unk_10014F0E0;
      id v79 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v78, v79);
      _Block_release(v79);
      LOBYTE(v78) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (v78) {
        goto LABEL_297;
      }
      goto LABEL_119;
    }
    int v45 = *(unsigned __int8 *)(v5 + 16);
    *(unsigned char *)(v5 + 16) = 0;
    if (v45 != 1) {
      goto LABEL_119;
    }
    uint64_t v46 = *(void *)(v5 + 80);
    if ((v46 & 1) == 0) {
      *(void *)(v5 + 80) = v46 | 1;
    }
    if (*(unsigned char *)(v5 + 88)) {
      goto LABEL_76;
    }
    if ((byte_1001837C0 & 1) == 0)
    {
      type metadata accessor for CardState();
      swift_allocObject();
      uint64_t v47 = swift_retain();
      uint64_t v48 = sub_100058D58(v47);
      uint64_t v49 = *(void *)(v5 + 80);
      *(void *)(v5 + 80) = 0;
      id v50 = [self defaultCenter];
      if (qword_100182780 != -1) {
        swift_once();
      }
      uint64_t v51 = qword_10018A3A8;
      sub_10003AFD0((uint64_t *)&unk_100183A60);
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_100123B50;
      strcpy((char *)&aBlock, "changeInfoKey");
      HIWORD(aBlock) = -4864;
      AnyHashable.init<A>(_:)();
      *(void *)(v52 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
      *(void *)(v52 + 72) = v48;
      *(void *)(v52 + 80) = v49;
      swift_retain();
      sub_1000783F4(v52);
      Class v53 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v50 postNotificationName:v51 object:v5 userInfo:v53];
      swift_release();

      uint64_t v6 = v265;
LABEL_76:
      if (byte_1001837C0 != 1 || !*(void *)(v5 + 80)) {
        goto LABEL_119;
      }
    }
    if (qword_100182790 != -1) {
      swift_once();
    }
    id v54 = qword_1001837D0;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_10005A838;
    *(void *)(v55 + 24) = v5;
    v271 = sub_10005B17C;
    unint64_t v272 = v55;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    v269 = sub_10004FD38;
    v270 = &unk_10014F090;
    id v56 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v54, v56);
    _Block_release(v56);
    LOBYTE(v54) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v54) {
      goto LABEL_301;
    }
LABEL_119:
    if ((*(unsigned char *)(v5 + 16) & 1) == 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v80 = swift_bridgeObjectRetain();
      uint64_t v81 = sub_1000603F4(v80, a2);
      swift_bridgeObjectRelease();
      uint64_t v82 = *(void *)(v81 + 16);
      swift_release();
      if (!v82)
      {
        int v110 = *(unsigned __int8 *)(v5 + 18);
        *(unsigned char *)(v5 + 18) = 0;
        if (v110 == 1)
        {
          uint64_t v111 = *(void *)(v5 + 80);
          if ((v111 & 2) == 0) {
            *(void *)(v5 + 80) = v111 | 2;
          }
          sub_100059388();
        }
        goto LABEL_160;
      }
    }
    char v83 = *(unsigned char *)(v5 + 18);
    *(unsigned char *)(v5 + 18) = 1;
    if (v83) {
      goto LABEL_160;
    }
    uint64_t v84 = *(void *)(v5 + 80);
    if ((v84 & 2) == 0) {
      *(void *)(v5 + 80) = v84 | 2;
    }
    if (*(unsigned char *)(v5 + 88))
    {
      if (!byte_1001837C0) {
        goto LABEL_160;
      }
LABEL_131:
      if (!*(void *)(v5 + 80)) {
        goto LABEL_160;
      }
      goto LABEL_132;
    }
    if ((byte_1001837C0 & 1) == 0)
    {
      type metadata accessor for CardState();
      swift_allocObject();
      uint64_t v85 = swift_retain();
      uint64_t v86 = sub_100058D58(v85);
      uint64_t v87 = *(void *)(v5 + 80);
      *(void *)(v5 + 80) = 0;
      id v88 = [self defaultCenter];
      if (qword_100182780 != -1) {
        swift_once();
      }
      uint64_t v89 = qword_10018A3A8;
      sub_10003AFD0((uint64_t *)&unk_100183A60);
      uint64_t v90 = swift_allocObject();
      uint64_t v91 = sub_1000FC6F0(v90, 1);
      id v93 = v92;
      strcpy((char *)&aBlock, "changeInfoKey");
      HIWORD(aBlock) = -4864;
      AnyHashable.init<A>(_:)();
      v93[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
      v93[5] = v86;
      v93[6] = v87;
      uint64_t v94 = Int.id.getter(v91);
      swift_retain();
      sub_1000783F4(v94);
      Class v95 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v88 postNotificationName:v89 object:v5 userInfo:v95];
      swift_release();

      uint64_t v6 = v265;
      if ((byte_1001837C0 & 1) == 0) {
        goto LABEL_160;
      }
      goto LABEL_131;
    }
LABEL_132:
    if (qword_100182790 != -1) {
      swift_once();
    }
    id v96 = qword_1001837D0;
    unint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_10005A838;
    *(void *)(v14 + 24) = v5;
    v271 = sub_10005B17C;
    unint64_t v272 = v14;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    v269 = sub_10004FD38;
    v270 = &unk_10014F040;
    id v97 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v96, v97);
    _Block_release(v97);
    LOBYTE(v96) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v96) {
      goto LABEL_295;
    }
LABEL_160:
    if ((*(unsigned char *)(v5 + 16) & 1) == 0 && (*(unsigned char *)(v5 + 18) & 1) == 0)
    {
      char v114 = *(unsigned char *)(v5 + 17);
      *(unsigned char *)(v5 + 17) = 1;
      if (v114) {
        goto LABEL_8;
      }
      uint64_t v115 = *(void *)(v5 + 80);
      if ((v115 & 4) == 0)
      {
        *(void *)(v5 + 80) = v115 | 4;
        uint64_t v115 = 1;
      }
      if (*(unsigned char *)(v5 + 88))
      {
        if ((byte_1001837C0 & 1) == 0) {
          goto LABEL_8;
        }
      }
      else
      {
        if (v115) {
          char v166 = byte_1001837C0;
        }
        else {
          char v166 = 1;
        }
        if (v166)
        {
          if ((byte_1001837C0 & 1) == 0) {
            goto LABEL_8;
          }
LABEL_253:
          if (qword_100182790 != -1) {
            swift_once();
          }
          v194 = qword_1001837D0;
          unint64_t v14 = swift_allocObject();
          *(void *)(v14 + 16) = sub_10005A838;
          *(void *)(v14 + 24) = v5;
          v271 = sub_10005B17C;
          unint64_t v272 = v14;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          v269 = sub_10004FD38;
          v270 = &unk_10014EFA0;
          v195 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          swift_release();
          dispatch_sync(v194, v195);
          _Block_release(v195);
          LOBYTE(v194) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if (v194)
          {
            __break(1u);
            goto LABEL_333;
          }
          goto LABEL_8;
        }
        type metadata accessor for CardState();
        swift_allocObject();
        uint64_t v183 = swift_retain();
        uint64_t v184 = sub_100058D58(v183);
        uint64_t v185 = *(void *)(v5 + 80);
        *(void *)(v5 + 80) = 0;
        id v186 = [self defaultCenter];
        if (qword_100182780 != -1) {
          swift_once();
        }
        uint64_t v187 = qword_10018A3A8;
        sub_10003AFD0((uint64_t *)&unk_100183A60);
        uint64_t v188 = swift_allocObject();
        uint64_t v189 = sub_1000FC6F0(v188, 1);
        v191 = v190;
        strcpy((char *)&aBlock, "changeInfoKey");
        HIWORD(aBlock) = -4864;
        AnyHashable.init<A>(_:)();
        v191[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
        v191[5] = v184;
        v191[6] = v185;
        uint64_t v192 = Int.id.getter(v189);
        swift_retain();
        sub_1000783F4(v192);
        Class v193 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v186 postNotificationName:v187 object:v5 userInfo:v193];
        swift_release();

        uint64_t v6 = v265;
        if ((byte_1001837C0 & 1) == 0) {
          goto LABEL_8;
        }
      }
      if (!*(void *)(v5 + 80)) {
        goto LABEL_8;
      }
      goto LABEL_253;
    }
    int v112 = *(unsigned __int8 *)(v5 + 17);
    *(unsigned char *)(v5 + 17) = 0;
    if (v112 != 1) {
      goto LABEL_8;
    }
    uint64_t v113 = *(void *)(v5 + 80);
    if ((v113 & 4) == 0)
    {
      *(void *)(v5 + 80) = v113 | 4;
      uint64_t v113 = 1;
    }
    if (*(unsigned char *)(v5 + 88))
    {
      if ((byte_1001837C0 & 1) == 0) {
        goto LABEL_8;
      }
LABEL_218:
      if (!*(void *)(v5 + 80)) {
        goto LABEL_8;
      }
LABEL_219:
      if (qword_100182790 != -1) {
        swift_once();
      }
      v163 = qword_1001837D0;
      uint64_t v164 = swift_allocObject();
      *(void *)(v164 + 16) = sub_10005A838;
      *(void *)(v164 + 24) = v5;
      v271 = sub_10005B17C;
      unint64_t v272 = v164;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      v269 = sub_10004FD38;
      v270 = &unk_10014EFF0;
      v165 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v163, v165);
      _Block_release(v165);
      LOBYTE(v163) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((v163 & 1) == 0) {
        goto LABEL_8;
      }
      __break(1u);
LABEL_301:
      __break(1u);
LABEL_302:
      if (v5 < 0) {
        unint64_t v14 = v5;
      }
      else {
        unint64_t v14 = v5 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v209 = _CocoaArrayWrapper.endIndex.getter();
      if (!v209) {
        goto LABEL_306;
      }
LABEL_269:
      if (v209 >= 1)
      {
        uint64_t v210 = 0;
        unint64_t v14 = v5 & 0xC000000000000001;
        while (1)
        {
          if (v14)
          {
            uint64_t v211 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v211 = *(void *)(v5 + 8 * v210 + 32);
            swift_retain();
          }
          char v212 = *(unsigned char *)(v211 + 16);
          *(unsigned char *)(v211 + 16) = 0;
          if ((v212 & 1) == 0)
          {
LABEL_271:
            swift_release();
            goto LABEL_272;
          }
          uint64_t v213 = *(void *)(v211 + 80);
          if ((v213 & 1) == 0) {
            *(void *)(v211 + 80) = v213 | 1;
          }
          if ((*(unsigned char *)(v211 + 88) & 1) == 0)
          {
            if ((_BYTE)p_class_meths[248]) {
              goto LABEL_286;
            }
            type metadata accessor for CardState();
            swift_allocObject();
            uint64_t v214 = swift_retain();
            uint64_t v215 = sub_100058D58(v214);
            uint64_t v266 = *(void *)(v211 + 80);
            *(void *)(v211 + 80) = 0;
            id v216 = [self defaultCenter];
            if (qword_100182780 != -1) {
              swift_once();
            }
            uint64_t v217 = qword_10018A3A8;
            sub_10003AFD0((uint64_t *)&unk_100183A60);
            uint64_t v218 = swift_allocObject();
            uint64_t v219 = sub_1000FC6F0(v218, 1);
            v221 = v220;
            strcpy((char *)&aBlock, "changeInfoKey");
            HIWORD(aBlock) = -4864;
            AnyHashable.init<A>(_:)();
            v221[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
            v221[5] = v215;
            v221[6] = v266;
            uint64_t v222 = Int.id.getter(v219);
            swift_retain();
            sub_1000783F4(v222);
            Class v223 = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v216 postNotificationName:v217 object:v211 userInfo:v223];
            swift_release();

            p_class_meths = &OBJC_PROTOCOL___DKStatusBarResponder.class_meths;
          }
          if (*((unsigned char *)p_class_meths + 1984) != 1 || !*(void *)(v211 + 80)) {
            goto LABEL_271;
          }
LABEL_286:
          if (qword_100182790 != -1) {
            swift_once();
          }
          v224 = qword_1001837D0;
          uint64_t v225 = swift_allocObject();
          *(void *)(v225 + 16) = sub_10005A838;
          *(void *)(v225 + 24) = v211;
          v271 = sub_100042974;
          unint64_t v272 = v225;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          v269 = sub_10004FD38;
          v270 = &unk_10014EEB0;
          v226 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          swift_release();
          dispatch_sync(v224, v226);
          _Block_release(v226);
          LOBYTE(v224) = swift_isEscapingClosureAtFileLocation();
          swift_release_n();
          swift_release();
          p_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___DKStatusBarResponder + 32);
          if (v224) {
            goto LABEL_291;
          }
LABEL_272:
          if (v209 == ++v210) {
            goto LABEL_306;
          }
        }
      }
LABEL_333:
      __break(1u);
LABEL_334:
      __break(1u);
LABEL_335:
      __break(1u);
LABEL_336:
      __break(1u);
LABEL_337:
      __break(1u);
LABEL_338:
      if (!_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_339;
      }
LABEL_323:
      BOOL v245 = sub_1000FC700(v14);
      sub_1000FC70C(0, v245, v14);
      if (v245)
      {
        uint64_t v246 = *(void *)(v14 + 32);
        swift_retain();
      }
      else
      {
        uint64_t v246 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      swift_bridgeObjectRelease();
      int v247 = *(unsigned __int8 *)(v246 + 16);
      *(unsigned char *)(v246 + 16) = 1;
      if (v247 != 1)
      {
        uint64_t v249 = *(void *)(v246 + 80);
        if ((v249 & 1) == 0) {
          *(void *)(v246 + 80) = v249 | 1;
        }
        sub_100059388();
      }
LABEL_326:
      swift_release();
      goto LABEL_327;
    }
    if (v113) {
      char v116 = byte_1001837C0;
    }
    else {
      char v116 = 1;
    }
    if (v116)
    {
      if ((byte_1001837C0 & 1) == 0) {
        goto LABEL_8;
      }
      goto LABEL_219;
    }
    type metadata accessor for CardState();
    swift_allocObject();
    uint64_t v152 = swift_retain();
    uint64_t v153 = sub_100058D58(v152);
    uint64_t v154 = *(void *)(v5 + 80);
    *(void *)(v5 + 80) = 0;
    id v155 = [self defaultCenter];
    if (qword_100182780 != -1) {
      swift_once();
    }
    uint64_t v156 = qword_10018A3A8;
    sub_10003AFD0((uint64_t *)&unk_100183A60);
    uint64_t v157 = swift_allocObject();
    uint64_t v158 = sub_1000FC6F0(v157, 1);
    v160 = v159;
    strcpy((char *)&aBlock, "changeInfoKey");
    HIWORD(aBlock) = -4864;
    AnyHashable.init<A>(_:)();
    v160[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
    v160[5] = v153;
    v160[6] = v154;
    uint64_t v161 = Int.id.getter(v158);
    swift_retain();
    sub_1000783F4(v161);
    Class v162 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v155 postNotificationName:v156 object:v5 userInfo:v162];
    swift_release();

    uint64_t v6 = v265;
    if (byte_1001837C0) {
      goto LABEL_218;
    }
LABEL_8:
    if ((*(unsigned __int8 *)(v5 + 32) | 4) == 4) {
      goto LABEL_9;
    }
    char v17 = *(unsigned char *)(v5 + 18);
    *(unsigned char *)(v5 + 18) = 1;
    if (v17) {
      goto LABEL_144;
    }
    uint64_t v18 = *(void *)(v5 + 80);
    if ((v18 & 2) == 0) {
      *(void *)(v5 + 80) = v18 | 2;
    }
    if (*(unsigned char *)(v5 + 88))
    {
      if (!byte_1001837C0) {
        goto LABEL_144;
      }
LABEL_140:
      if (*(void *)(v5 + 80))
      {
LABEL_141:
        if (qword_100182790 != -1) {
          swift_once();
        }
        id v105 = qword_1001837D0;
        unint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = sub_10005A838;
        *(void *)(v14 + 24) = v5;
        v271 = sub_10005B17C;
        unint64_t v272 = v14;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        v269 = sub_10004FD38;
        v270 = &unk_10014EF50;
        id v106 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        dispatch_sync(v105, v106);
        _Block_release(v106);
        LOBYTE(v105) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if (v105) {
          goto LABEL_296;
        }
        goto LABEL_144;
      }
      goto LABEL_144;
    }
    if (byte_1001837C0) {
      goto LABEL_141;
    }
    type metadata accessor for CardState();
    swift_allocObject();
    uint64_t v98 = swift_retain();
    uint64_t v99 = sub_100058D58(v98);
    uint64_t v100 = *(void *)(v5 + 80);
    *(void *)(v5 + 80) = 0;
    id v101 = [self defaultCenter];
    if (qword_100182780 != -1) {
      swift_once();
    }
    uint64_t v102 = qword_10018A3A8;
    sub_10003AFD0((uint64_t *)&unk_100183A60);
    uint64_t v103 = swift_allocObject();
    *(_OWORD *)(v103 + 16) = xmmword_100123B50;
    strcpy((char *)&aBlock, "changeInfoKey");
    HIWORD(aBlock) = -4864;
    AnyHashable.init<A>(_:)();
    *(void *)(v103 + 96) = &type metadata for CardState.ChangedPropertyNotificationInfo;
    *(void *)(v103 + 72) = v99;
    *(void *)(v103 + 80) = v100;
    swift_retain();
    sub_1000783F4(v103);
    Class v104 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v101 postNotificationName:v102 object:v5 userInfo:v104];
    swift_release();

    uint64_t v6 = v265;
    if (byte_1001837C0) {
      goto LABEL_140;
    }
LABEL_144:
    char v107 = *(unsigned char *)(v5 + 17);
    *(unsigned char *)(v5 + 17) = 0;
    if ((v107 & 1) == 0) {
      goto LABEL_9;
    }
    uint64_t v108 = *(void *)(v5 + 80);
    if ((v108 & 4) == 0)
    {
      *(void *)(v5 + 80) = v108 | 4;
      uint64_t v108 = 1;
    }
    if (*(unsigned char *)(v5 + 88))
    {
      if ((byte_1001837C0 & 1) == 0) {
        goto LABEL_9;
      }
LABEL_210:
      if (!*(void *)(v5 + 80)) {
        goto LABEL_9;
      }
LABEL_211:
      if (qword_100182790 != -1) {
        swift_once();
      }
      v150 = qword_1001837D0;
      unint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_10005A838;
      *(void *)(v14 + 24) = v5;
      v271 = sub_10005B17C;
      unint64_t v272 = v14;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      v269 = sub_10004FD38;
      v270 = &unk_10014EF00;
      v151 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v150, v151);
      _Block_release(v151);
      LOBYTE(v150) = swift_isEscapingClosureAtFileLocation();
      swift_release_n();
      swift_release();
      if (v150) {
        goto LABEL_298;
      }
    }
    else
    {
      if (v108) {
        char v109 = byte_1001837C0;
      }
      else {
        char v109 = 1;
      }
      if (v109)
      {
        if (byte_1001837C0) {
          goto LABEL_211;
        }
      }
      else
      {
        type metadata accessor for CardState();
        swift_allocObject();
        uint64_t v139 = swift_retain();
        uint64_t v140 = sub_100058D58(v139);
        uint64_t v141 = *(void *)(v5 + 80);
        *(void *)(v5 + 80) = 0;
        id v142 = [self defaultCenter];
        if (qword_100182780 != -1) {
          swift_once();
        }
        uint64_t v143 = qword_10018A3A8;
        sub_10003AFD0((uint64_t *)&unk_100183A60);
        uint64_t v144 = swift_allocObject();
        uint64_t v145 = sub_1000FC6F0(v144, 1);
        v147 = v146;
        strcpy((char *)&aBlock, "changeInfoKey");
        HIWORD(aBlock) = -4864;
        AnyHashable.init<A>(_:)();
        v147[8] = &type metadata for CardState.ChangedPropertyNotificationInfo;
        v147[5] = v140;
        v147[6] = v141;
        uint64_t v148 = Int.id.getter(v145);
        swift_retain();
        sub_1000783F4(v148);
        Class v149 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v142 postNotificationName:v143 object:v5 userInfo:v149];
        swift_release();

        uint64_t v6 = v265;
        if (byte_1001837C0) {
          goto LABEL_210;
        }
      }
LABEL_9:
      swift_release();
    }
  }
  if (__CocoaSet.Iterator.next()())
  {
    type metadata accessor for CardState();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v5 = aBlock;
    swift_unknownObjectRelease();
    if (v5) {
      goto LABEL_37;
    }
  }
LABEL_265:
  sub_100046948();
  uint64_t v5 = (uint64_t)a5;
  unint64_t v14 = *a5;
  if (!(*a5 >> 62))
  {
    if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 1) {
      goto LABEL_327;
    }
    goto LABEL_267;
  }
LABEL_299:
  swift_bridgeObjectRetain();
  uint64_t v227 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v227 <= 1) {
    goto LABEL_327;
  }
LABEL_267:
  uint64_t v5 = *(void *)v5;
  if ((unint64_t)v5 >> 62) {
    goto LABEL_302;
  }
  uint64_t v209 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v209) {
    goto LABEL_269;
  }
LABEL_306:
  swift_bridgeObjectRelease();
  unint64_t v14 = *a5;
  if (*a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v228 = _CocoaArrayWrapper.endIndex.getter();
    if (!v228) {
      goto LABEL_318;
    }
LABEL_308:
    *(void *)&long long aBlock = &_swiftEmptyArrayStorage;
    sub_10005FB48(0, v228 & ~(v228 >> 63), 0);
    if (v228 < 0) {
      goto LABEL_334;
    }
    BOOL v229 = sub_1000FC700(v14);
    uint64_t v230 = 0;
    do
    {
      if (v229)
      {
        uint64_t v231 = *(void *)(v14 + 8 * v230 + 32);
        swift_retain();
      }
      else
      {
        uint64_t v231 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      id v232 = [*(id *)(v231 + 40) serialNumber];
      uint64_t v233 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v235 = v234;
      swift_release();

      sub_10005FA8C();
      v236 = (void *)aBlock;
      unint64_t v238 = *(void *)(aBlock + 16);
      unint64_t v237 = *(void *)(aBlock + 24);
      if (v238 >= v237 >> 1)
      {
        sub_10005FB48(v237 > 1, v238 + 1, 1);
        v236 = (void *)aBlock;
      }
      ++v230;
      v236[2] = v238 + 1;
      v239 = (char *)&v236[2 * v238];
      *((void *)v239 + 4) = v233;
      *((void *)v239 + 5) = v235;
    }
    while (v228 != v230);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v228 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v228) {
      goto LABEL_308;
    }
LABEL_318:
    swift_bridgeObjectRelease();
    v236 = &_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v240 = sub_1000603F4((uint64_t)v236, a3);
  swift_bridgeObjectRelease();
  if (*(void *)(v240 + 16) != 1) {
    goto LABEL_326;
  }
  uint64_t v241 = sub_1000D7E44(v240);
  unint64_t v243 = v242;
  swift_release();
  if (v243 == 9)
  {
LABEL_327:
    if (!v259) {
      goto LABEL_340;
    }
LABEL_328:
    uint64_t result = __CocoaSet.count.getter();
    if (result != 1) {
      return result;
    }
    goto LABEL_341;
  }
  unint64_t v244 = swift_bridgeObjectRetain();
  unint64_t v14 = (unint64_t)sub_100060914(v244, v241, v243);
  sub_100060B5C(v241, v243);
  swift_bridgeObjectRelease();
  if (v14 >> 62) {
    goto LABEL_338;
  }
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_323;
  }
LABEL_339:
  swift_bridgeObjectRelease();
  if (v259) {
    goto LABEL_328;
  }
LABEL_340:
  uint64_t result = *(void *)(a1 + 16);
  if (result != 1) {
    return result;
  }
LABEL_341:
  if ((a4 & 1) == 0)
  {
    uint64_t v250 = swift_bridgeObjectRetain();
    uint64_t v251 = sub_1000D7EC0(v250);
    uint64_t result = swift_bridgeObjectRelease();
    if (v251)
    {
      char v252 = *(unsigned char *)(v251 + 16);
      *(unsigned char *)(v251 + 16) = 1;
      if ((v252 & 1) == 0)
      {
        uint64_t v253 = *(void *)(v251 + 80);
        if ((v253 & 1) == 0) {
          *(void *)(v251 + 80) = v253 | 1;
        }
        sub_100059388();
      }
      char v254 = *(unsigned char *)(v251 + 18);
      *(unsigned char *)(v251 + 18) = 1;
      if ((v254 & 1) == 0)
      {
        uint64_t v255 = *(void *)(v251 + 80);
        if ((v255 & 2) == 0) {
          *(void *)(v251 + 80) = v255 | 2;
        }
        sub_100059388();
      }
      char v256 = *(unsigned char *)(v251 + 17);
      *(unsigned char *)(v251 + 17) = 0;
      if (v256)
      {
        uint64_t v257 = *(void *)(v251 + 80);
        if ((v257 & 4) == 0) {
          *(void *)(v251 + 80) = v257 | 4;
        }
        sub_100059388();
      }
      return swift_release();
    }
  }
  return result;
}

NSString sub_10005F9FC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10018A3B8 = (uint64_t)result;
  return result;
}

unint64_t sub_10005FA34()
{
  unint64_t result = qword_100183A58;
  if (!qword_100183A58)
  {
    type metadata accessor for CardState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183A58);
  }
  return result;
}

uint64_t sub_10005FA8C()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0)
  {
    int64_t v3 = *(void *)(v1 + 16) + 1;
    return sub_10005FB48(0, v3, 1);
  }
  return result;
}

uint64_t sub_10005FAE8(uint64_t result)
{
  unint64_t v2 = *(void *)(*(void *)v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1)) {
    return sub_10005FB48(v2 > 1, result + 1, 1);
  }
  return result;
}

uint64_t sub_10005FB10(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_10005FB28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10005FBC8(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10005FB48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10005FE08(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10005FB68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10005FF74(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10005FB88(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000600E0(a1, a2, a3, *v3);
  *int64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10005FBA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100060250(a1, a2, a3, (void *)*v3);
  *int64_t v3 = result;
  return result;
}

uint64_t sub_10005FBC8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10003AFD0(&qword_100183BF8);
  uint64_t v10 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  int64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  unint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10005FE08(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003AFD0(&qword_100183A88);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10005FF74(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003AFD0(&qword_100185010);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000600E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003AFD0(&qword_100183BE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100060250(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003AFD0(&qword_100183BE8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _DWORD v10[2] = v8;
    _OWORD v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_10003AFD0(&qword_100183BF0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000603F4(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_10006057C((unint64_t *)((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_10006057C((unint64_t *)v8, v5, v3, a2);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_10006057C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a2;
  uint64_t v30 = *(void *)(a3 + 16);
  if (!v30)
  {
    uint64_t v24 = 0;
    goto LABEL_26;
  }
  uint64_t v32 = a4 + 56;
  uint64_t v29 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v27 = 0;
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v8 = (uint64_t *)(v29 + 16 * v6);
    uint64_t v9 = *v8;
    unint64_t v10 = v8[1];
    Hasher.init(_seed:)();
    uint64_t v31 = v6;
    if (v10 >= 9)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = v9;
      String.hash(into:)();
    }
    else
    {
      Hasher._combine(_:)(qword_100124848[v10]);
      uint64_t v11 = v9;
      sub_100060C08(v9, v10);
    }
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v32 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
      break;
    }
LABEL_3:
    sub_100060B6C(v11, v10);
LABEL_4:
    uint64_t v7 = v31;
LABEL_5:
    uint64_t v6 = v7 + 1;
    if (v6 == v30) {
      goto LABEL_24;
    }
  }
  uint64_t v15 = ~v13;
  while (1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    unint64_t v18 = v16[1];
    Hasher.init(_seed:)();
    if (v18 >= 9)
    {
      swift_bridgeObjectRetain();
      String.hash(into:)();
    }
    else
    {
      Hasher._combine(_:)(qword_100124848[v18]);
      sub_100060C08(v17, v18);
    }
    Swift::Int v19 = Hasher._finalize()();
    Hasher.init(_seed:)();
    if (v10 >= 9) {
      String.hash(into:)();
    }
    else {
      Hasher._combine(_:)(qword_100124848[v10]);
    }
    Swift::Int v20 = Hasher._finalize()();
    sub_100060B6C(v17, v18);
    if (v19 == v20) {
      break;
    }
    unint64_t v14 = (v14 + 1) & v15;
    if (((*(void *)(v32 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
      goto LABEL_3;
    }
  }
  sub_100060B6C(v11, v10);
  uint64_t v21 = (v14 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v22 = *(unint64_t *)((char *)a1 + v21);
  *(unint64_t *)((char *)a1 + v21) = v22 | (1 << v14);
  if ((v22 & (1 << v14)) != 0) {
    goto LABEL_4;
  }
  BOOL v23 = __OFADD__(v27++, 1);
  uint64_t v7 = v31;
  if (!v23) {
    goto LABEL_5;
  }
  __break(1u);
LABEL_24:
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v24 = v27;
LABEL_26:
  swift_retain();
  return sub_1000DAE6C(a1, v5, v24, a4);
}

int64_t sub_100060830(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void *sub_100060914(unint64_t a1, uint64_t a2, unint64_t a3)
{
  Swift::Int v4 = a1;
  Swift::Int v19 = &_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_27:
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      unint64_t v6 = 0;
      uint64_t v17 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v18 = v4 & 0xC000000000000001;
      uint64_t v16 = v5;
      while (1)
      {
        if (v18)
        {
          uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v8 = __OFADD__(v6++, 1);
          if (v8)
          {
LABEL_24:
            __break(1u);
            return v19;
          }
        }
        else
        {
          if (v6 >= *(void *)(v17 + 16))
          {
            __break(1u);
            goto LABEL_27;
          }
          uint64_t v7 = swift_retain();
          BOOL v8 = __OFADD__(v6++, 1);
          if (v8) {
            goto LABEL_24;
          }
        }
        uint64_t v9 = *(void *)(v7 + 48);
        uint64_t v10 = *(void *)(v9 + 16);
        if (v10)
        {
          swift_bridgeObjectRetain();
          unint64_t v11 = (unint64_t *)(v9 + 40);
          while (1)
          {
            uint64_t v12 = *(v11 - 1);
            unint64_t v13 = *v11;
            Hasher.init(_seed:)();
            if (v13 >= 9)
            {
              swift_bridgeObjectRetain();
              String.hash(into:)();
            }
            else
            {
              Hasher._combine(_:)(qword_100124848[v13]);
              sub_100060C08(v12, v13);
            }
            Swift::Int v14 = Hasher._finalize()();
            Hasher.init(_seed:)();
            if (a3 >= 9) {
              String.hash(into:)();
            }
            else {
              Hasher._combine(_:)(qword_100124848[a3]);
            }
            Swift::Int v4 = Hasher._finalize()();
            sub_100060B6C(v12, v13);
            if (v14 == v4) {
              break;
            }
            v11 += 2;
            if (!--v10)
            {
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_21;
            }
          }
          swift_bridgeObjectRelease();
          Swift::Int v4 = (Swift::Int)&v19;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
LABEL_21:
          uint64_t v5 = v16;
        }
        else
        {
          swift_release();
        }
        if (v6 == v5) {
          return v19;
        }
      }
    }
  }
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_100060B5C(uint64_t a1, unint64_t a2)
{
  if (a2 != 9) {
    return sub_100060B6C(a1, a2);
  }
  return a1;
}

uint64_t sub_100060B6C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 9) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100060B80()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060B90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100060BA0()
{
  return swift_release();
}

uint64_t sub_100060BA8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060BB8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060BC8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060BD8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060BE8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060BF8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060C08(uint64_t a1, unint64_t a2)
{
  if (a2 >= 9) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100060C1C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060C2C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060C3C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060C4C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060C5C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060C6C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100060C7C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_100060C8C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_10005FB48(0, v2, 0);
    uint64_t result = (void *)sub_1000DB64C(a1);
    int64_t v4 = (int64_t)result;
    int v6 = v5;
    char v8 = v7 & 1;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_14;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_15;
      }
      char v17 = v8;
      uint64_t v9 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v4);
      uint64_t v11 = *v9;
      uint64_t v10 = v9[1];
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v13 >= v12 >> 1) {
        sub_10005FB48(v12 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      Swift::Int v14 = &_swiftEmptyArrayStorage[2 * v13];
      void v14[4] = v11;
      v14[5] = v10;
      uint64_t result = (void *)sub_100060830(v4, v6, v17 & 1, a1);
      int64_t v4 = (int64_t)result;
      int v6 = v15;
      char v8 = v16 & 1;
      if (!--v2)
      {
        sub_100060E38((uint64_t)result, v15, v8);
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_12:
    sub_1000F6714((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_100060E38(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100060EEC()
{
  id v1 = [v0 view];
  if (v1)
  {
    int64_t v2 = v1;
    uint64_t v3 = self;
    id v4 = [v3 systemBackgroundColor];
    [v2 setBackgroundColor:v4];

    int v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicator];
    id v6 = [v3 labelColor];
    [v5 setColor:v6];

    [v5 startAnimating];
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    char v7 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel];
    if (v7)
    {
      id v8 = v7;
      uint64_t v15 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001BLL, (void *)0x800000010012BA50);
      uint64_t v16 = v9;
      sub_100061B00();
      StringProtocol.localizedUppercase.getter();
      swift_bridgeObjectRelease();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v8 setText:v10, v15, v16];

      [v8 setNumberOfLines:0];
      id v11 = [v3 secondaryLabelColor];
      [v8 setTextColor:v11];

      id v12 = [self defaultMetrics];
      id v13 = [self systemFontOfSize:12.0];
      id v14 = [v12 scaledFontForFont:v13];

      [v8 setFont:v14];
      [v8 setTextAlignment:1];
      [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10006118C()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  int64_t v2 = v1;
  [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicator]];

  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel];
  if (!v3) {
    return;
  }
  id v4 = v3;
  id v5 = [v0 view];
  if (!v5)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v6 = v5;
  [v5 addSubview:v4];
}

void sub_100061268()
{
  id v1 = v0;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123D80;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicator];
  id v4 = [v3 centerXAnchor];
  id v5 = [v1 view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v6 = v5;
  id v7 = [v5 centerXAnchor];

  id v8 = [v4 constraintEqualToAnchor:v7];
  *(void *)(v2 + 32) = v8;
  id v9 = [v3 bottomAnchor];
  id v10 = [v1 view];
  if (!v10)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v11 = v10;
  id v12 = self;
  id v13 = [v11 centerYAnchor];

  id v14 = [v9 constraintEqualToAnchor:v13 constant:-5.0];
  *(void *)(v2 + 40) = v14;
  specialized Array._endMutation()();
  sub_10005C04C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 activateConstraints:isa];

  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel];
  if (!v16) {
    return;
  }
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100123C30;
  id v18 = v16;
  id v19 = [v18 centerXAnchor];
  id v20 = [v1 view];
  if (!v20) {
    goto LABEL_14;
  }
  uint64_t v21 = v20;
  id v22 = [v20 centerXAnchor];

  id v23 = [v19 constraintEqualToAnchor:v22];
  *(void *)(v17 + 32) = v23;
  id v24 = [v18 topAnchor];
  id v25 = [v1 view];
  if (!v25)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v26 = v25;
  id v27 = [v25 centerYAnchor];

  id v28 = [v24 constraintEqualToAnchor:v27 constant:5.0];
  *(void *)(v17 + 40) = v28;
  id v29 = [v18 leadingAnchor];
  id v30 = [v1 view];
  if (!v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v31 = v30;
  id v32 = [v30 leadingAnchor];

  id v33 = [v29 constraintEqualToAnchor:v32 constant:25.0];
  *(void *)(v17 + 48) = v33;
  id v34 = [v18 trailingAnchor];
  id v35 = [v1 view];
  if (!v35)
  {
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v36 = v35;
  id v37 = [v35 trailingAnchor];

  id v38 = [v34 constraintEqualToAnchor:v37 constant:-25.0];
  *(void *)(v17 + 56) = v38;
  specialized Array._endMutation()();
  Class v39 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 activateConstraints:v39];
}

id sub_1000616FC(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicatorAppearDelay] = 0x3FB999999999999ALL;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_centerDisplacement] = 0x4014000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_fontSizeLoadingLabel] = 0x4028000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_margin] = 0x4039000000000000;
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicator;
  id v7 = objc_allocWithZone((Class)UIActivityIndicatorView);
  id v8 = v3;
  *(void *)&v3[v6] = [v7 initWithActivityIndicatorStyle:100];
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel;
  if (([self isSSRBootIntentSet] & 1) == 0)
  {
    *(void *)&v8[v9] = [objc_allocWithZone((Class)UILabel) init];

    if (a2) {
      goto LABEL_3;
    }
LABEL_5:
    NSString v10 = 0;
    goto LABEL_6;
  }
  *(void *)&v8[v9] = 0;

  if (!a2) {
    goto LABEL_5;
  }
LABEL_3:
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_6:
  v13.receiver = v8;
  v13.super_class = (Class)type metadata accessor for LoadingViewController();
  id v11 = [super initWithNibName:v10 bundle:a3];

  return v11;
}

id sub_1000618C8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicatorAppearDelay] = 0x3FB999999999999ALL;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_centerDisplacement] = 0x4014000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_fontSizeLoadingLabel] = 0x4028000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_margin] = 0x4039000000000000;
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingIndicator;
  id v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 initWithActivityIndicatorStyle:100];
  if ([self isSSRBootIntentSet]) {
    id v6 = 0;
  }
  else {
    id v6 = [objc_allocWithZone((Class)UILabel) init];
  }
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel] = v6;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for LoadingViewController();
  [super initWithCoder:a1];

  return v7;
}

void sub_100061A1C()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics21LoadingViewController_loadingLabel);
}

id sub_100061A5C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LoadingViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for LoadingViewController()
{
  return self;
}

unint64_t sub_100061B00()
{
  unint64_t result = qword_100183C58;
  if (!qword_100183C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183C58);
  }
  return result;
}

id sub_100061C78()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IntrinsicSizeAdjustingTableView();
  return [super dealloc];
}

uint64_t type metadata accessor for IntrinsicSizeAdjustingTableView()
{
  return self;
}

void _s23UIKitViewSwiftUIWrapperVwxx(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_release();
  }
}

void *_s23UIKitViewSwiftUIWrapperVwCP_0(void *a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  *a1 = *(void *)a2;
  id v5 = a1 + 1;
  id v7 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 8);
  id v8 = v4;
  if (v6)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    a1[1] = v6;
    a1[2] = v9;
    swift_retain();
  }
  else
  {
    *id v5 = *v7;
  }
  return a1;
}

uint64_t _s23UIKitViewSwiftUIWrapperVwca(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = v9;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  swift_retain();
  swift_release();
  return a1;
}

__n128 _s23UIKitViewSwiftUIWrapperVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s23UIKitViewSwiftUIWrapperVwta(uint64_t a1, void *a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[1];
  if (!*(void *)(a1 + 8))
  {
    if (v5)
    {
      uint64_t v7 = a2[2];
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = a2[2];
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  swift_release();
  return a1;
}

uint64_t _s23UIKitViewSwiftUIWrapperVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s23UIKitViewSwiftUIWrapperVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s23UIKitViewSwiftUIWrapperVMa()
{
  return &_s23UIKitViewSwiftUIWrapperVN;
}

id sub_100061F68()
{
  return *v0;
}

uint64_t sub_100061F70()
{
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_100061FB0()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

void *sub_100061FF4()
{
  return &protocol witness table for Never;
}

uint64_t sub_100062000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000620F0();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100062064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1000620F0();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1000620C8()
{
}

unint64_t sub_1000620F0()
{
  unint64_t result = qword_100183C88;
  if (!qword_100183C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183C88);
  }
  return result;
}

void *sub_100062144(SEL *a1)
{
  id v2 = [self sharedManager];
  id v3 = [v2 snapshot];

  id v4 = [v3 queue];
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  sub_100063AEC();
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_1000F67B0((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    id v19 = sub_1000A0678(v18);
    swift_bridgeObjectRelease();
    return v19;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  unint64_t result = (void *)sub_10005FB68(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v5 + 8 * v8 + 32);
      }
      NSString v10 = v9;
      id v11 = [v9 *a1];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        sub_10005FB68(v15 > 1, v16 + 1, 1);
      }
      ++v8;
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
      void v17[4] = v12;
      v17[5] = v14;
    }
    while (v6 != v8);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

void *sub_100062370()
{
  id v0 = [self sharedManager];
  id v1 = [v0 snapshot];

  id v2 = [v1 consentHandles];
  id v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_10003AFD0(&qword_100183CF0);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    int64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      id v19 = _swiftEmptyArrayStorage;
      sub_10005FB68(0, v5, 0);
      uint64_t v6 = 0;
      while (1)
      {
        uint64_t v7 = *(void *)(v4 + 8 * v6 + 32);
        swift_bridgeObjectRetain();
        AnyHashable.init<A>(_:)();
        if (*(void *)(v7 + 16) && (unint64_t v8 = sub_10007D88C((uint64_t)v16), (v9 & 1) != 0))
        {
          sub_10003C5D8(*(void *)(v7 + 56) + 32 * v8, (uint64_t)&v17);
        }
        else
        {
          long long v17 = 0u;
          long long v18 = 0u;
        }
        sub_10003C320((uint64_t)v16);
        if (!*((void *)&v18 + 1)) {
          break;
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_12;
        }
        uint64_t v11 = 0x656C646E6168;
        unint64_t v10 = 0xE600000000000000;
        swift_bridgeObjectRelease();
LABEL_13:
        id v3 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10005FB68(0, v3[2] + 1, 1);
          id v3 = v19;
        }
        unint64_t v13 = v3[2];
        unint64_t v12 = v3[3];
        if (v13 >= v12 >> 1)
        {
          sub_10005FB68(v12 > 1, v13 + 1, 1);
          id v3 = v19;
        }
        ++v6;
        v3[2] = v13 + 1;
        uint64_t v14 = &v3[2 * v13];
        void v14[4] = v11;
        v14[5] = v10;
        if (v5 == v6) {
          goto LABEL_18;
        }
      }
      sub_10003C44C((uint64_t)&v17, &qword_100183E70);
LABEL_12:
      swift_bridgeObjectRelease();
      uint64_t v11 = 0;
      unint64_t v10 = 0xE000000000000000;
      goto LABEL_13;
    }
LABEL_18:
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1000625C8()
{
  sub_1000AFD88();
  [v0 setModalPresentationStyle:2];
  [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView] setDataSource:v0];
  id v1 = [v0 navigationItem];
  id v2 = [v1 navigationBar];

  if (!v2)
  {
    __break(1u);
    goto LABEL_35;
  }
  id v3 = [objc_allocWithZone((Class)UIImage) init];
  [v2 setBackgroundImage:v3 forBarMetrics:0];

  id v4 = [v0 navigationItem];
  id v5 = [v4 navigationBar];

  if (!v5)
  {
LABEL_35:
    __break(1u);
    JUMPOUT(0x100062DC4);
  }
  id v6 = [objc_allocWithZone((Class)UIImage) init];
  [v5 setShadowImage:v6];

  uint64_t v7 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000016, (void *)0x800000010012BC00);
  unint64_t v8 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText];
  *unint64_t v8 = v7;
  v8[1] = v9;
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel];
  if (v8[1])
  {
    swift_bridgeObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  [v10 setText:v11];

  id v12 = [self sharedManager];
  id v13 = [v12 snapshot];

  [v13 totalDuration];
  double v15 = v14;

  if (sub_1000564B8(v15) == 4 || (uint64_t v16 = sub_1000563BC(v15), !v17))
  {
    uint64_t v22 = 0xD00000000000001FLL;
    id v23 = "ENHANCED_LOGGING_BODY_IMMEDIATE";
LABEL_11:
    uint64_t v21 = (void *)((unint64_t)(v23 - 32) | 0x8000000000000000);
LABEL_12:
    uint64_t v24 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v22, v21);
    id v25 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
    uint64_t *v25 = v24;
    v25[1] = v26;
    swift_bridgeObjectRelease();
    id v27 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
  }
  else
  {
    uint64_t v19 = v16;
    uint64_t v20 = v17;
    switch(v18)
    {
      case 1:
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_100123B50;
        *(void *)(v28 + 56) = &type metadata for String;
        *(void *)(v28 + 64) = sub_10004D9B4();
        *(void *)(v28 + 32) = v19;
        *(void *)(v28 + 40) = v20;
        uint64_t v29 = 0xD00000000000001DLL;
        id v30 = "ENHANCED_LOGGING_BODY_MINUTES";
        break;
      case 2:
        swift_bridgeObjectRelease();
        uint64_t v22 = 0xD00000000000001ALL;
        id v23 = "ENHANCED_LOGGING_BODY_HOUR";
        goto LABEL_11;
      case 3:
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_100123B50;
        *(void *)(v28 + 56) = &type metadata for String;
        *(void *)(v28 + 64) = sub_10004D9B4();
        *(void *)(v28 + 32) = v19;
        *(void *)(v28 + 40) = v20;
        uint64_t v29 = 0xD00000000000001BLL;
        id v30 = "ENHANCED_LOGGING_BODY_HOURS";
        break;
      default:
        swift_bridgeObjectRelease();
        uint64_t v21 = (void *)0x800000010012BCF0;
        uint64_t v22 = 0xD00000000000001CLL;
        goto LABEL_12;
    }
    uint64_t v31 = sub_100045FCC(0, 0, v28, v29, (void *)((unint64_t)(v30 - 32) | 0x8000000000000000));
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    id v34 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
    *id v34 = v31;
    v34[1] = v33;
    swift_bridgeObjectRelease();
    id v27 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
  }
  swift_bridgeObjectRetain();
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v27 setText:v35];

  if (v0[OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_willAllowExpressFlow] == 1)
  {
    uint64_t v36 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000023, (void *)0x800000010012BC40);
    id v37 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
    uint64_t *v37 = v36;
    v37[1] = v38;
    swift_bridgeObjectRelease();
    Class v39 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton];
    if (v37[1])
    {
      swift_bridgeObjectRetain();
      NSString v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v40 = 0;
    }
    [v39 setTitle:v40 forState:0];

    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v0;
    uint64_t v47 = (uint64_t (**)())&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
    uint64_t v48 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
    *uint64_t v47 = sub_100063A3C;
    v47[1] = (uint64_t (*)())v46;
    uint64_t v49 = v0;
    sub_10003B0B8(v48);
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = v49;
    uint64_t v51 = (uint64_t (**)())&v49[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    uint64_t v52 = *(void *)&v49[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    *uint64_t v51 = sub_100063A5C;
    v51[1] = (uint64_t (*)())v50;
    Class v53 = v49;
    sub_10003B0B8(v52);
    uint64_t v54 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001CLL, (void *)0x800000010012BC70);
    uint64_t v55 = (uint64_t *)&v53[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle];
    *uint64_t v55 = v54;
    v55[1] = v56;
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void **)&v53[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton];
    if (v57)
    {
      if (v55[1])
      {
        id v58 = v57;
        swift_bridgeObjectRetain();
        NSString v59 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v64 = v57;
        NSString v59 = 0;
      }
      [v57 setTitle:v59 forState:0];
    }
  }
  else
  {
    uint64_t v41 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x45554E49544E4F43, (void *)0xE800000000000000);
    unint64_t v42 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
    uint64_t *v42 = v41;
    v42[1] = v43;
    swift_bridgeObjectRelease();
    Swift::Int v44 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton];
    if (v42[1])
    {
      swift_bridgeObjectRetain();
      NSString v45 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v45 = 0;
    }
    [v44 setTitle:v45 forState:0];

    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = v0;
    uint64_t v61 = (uint64_t (**)())&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
    uint64_t v62 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
    *uint64_t v61 = sub_100063B3C;
    v61[1] = (uint64_t (*)())v60;
    Class v63 = v0;
    sub_10003B0B8(v62);
  }
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v0;
  char v66 = v0;
  sub_100095068((uint64_t)sub_100063A34, v65);

  return swift_release();
}

uint64_t sub_100062DD4(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate;
  swift_beginAccess();
  sub_100063A7C(v4, (uint64_t)v7);
  if (!v8) {
    return sub_10003C44C((uint64_t)v7, &qword_100183CE8);
  }
  sub_100042A64((uint64_t)v7, (uint64_t)v6);
  sub_10003C44C((uint64_t)v7, &qword_100183CE8);
  sub_100042AC8(v6, v6[3]);
  sub_10008AA48(a1, a2);
  return sub_100042B0C((uint64_t)v6);
}

void sub_100062E90(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  id v3 = a1;
  id v4 = sub_100095158((uint64_t)sub_100063AE4, v2, 0, 0);
  swift_release();
  [v3 presentViewController:v4 animated:1 completion:0];
}

uint64_t sub_100062F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate;
  swift_beginAccess();
  sub_100063A7C(v3, (uint64_t)v6);
  if (!v7) {
    return sub_10003C44C((uint64_t)v6, &qword_100183CE8);
  }
  sub_100042A64((uint64_t)v6, (uint64_t)v5);
  sub_10003C44C((uint64_t)v6, &qword_100183CE8);
  sub_100042AC8(v5, v5[3]);
  sub_10008AA48(a2, 0);
  return sub_100042B0C((uint64_t)v5);
}

uint64_t sub_10006309C()
{
  return 1;
}

uint64_t sub_1000630A4()
{
  return *(void *)(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_bundleQueue)
                   + 16);
}

void sub_1000630B8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_bundleQueue];
  unint64_t v5 = IndexPath.row.getter();
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v5 >= *(void *)(v4 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v6 = v4 + 16 * v5;
  uint64_t v8 = *(void *)(v6 + 32);
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_typeQueue];
  swift_bridgeObjectRetain();
  unint64_t v10 = IndexPath.row.getter();
  if ((v10 & 0x8000000000000000) != 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v10 >= *(void *)(v9 + 16))
  {
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v11 = v9 + 16 * v10;
  uint64_t v12 = *(void *)(v11 + 32);
  uint64_t v13 = *(void *)(v11 + 40);
  swift_bridgeObjectRetain();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [a1 deselectRowAtIndexPath:isa animated:1];

  type metadata accessor for EnhancedLoggingDiagnosticInfoViewController();
  id v27 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  double v15 = self;
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 findEntryForParameterName:v16];

  if (v17)
  {
    int v18 = v27;
    id v19 = [v17 displayNameLocalizationKey];
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;

    sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v20, v22);
    swift_bridgeObjectRelease();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v18 setTitle:v23];
  }
  uint64_t v24 = &v27[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logType];
  *(void *)uint64_t v24 = v8;
  *((void *)v24 + 1) = v7;
  swift_bridgeObjectRelease();
  id v25 = &v27[OBJC_IVAR____TtC11Diagnostics43EnhancedLoggingDiagnosticInfoViewController_logName];
  *(void *)id v25 = v12;
  *((void *)v25 + 1) = v13;
  swift_bridgeObjectRelease();
  id v26 = [v2 navigationController];
  [v26 pushViewController:v27 animated:1];
}

unint64_t sub_100063328()
{
  id v1 = sub_1000B1A0C();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_typeQueue);
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (result >= *(void *)(v2 + 16))
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v4 = self;
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 findEntryForParameterName:v5];

  if (v6)
  {
    id v7 = [v1 textLabel];
    if (v7)
    {
      uint64_t v8 = v7;
      id v9 = [v6 displayNameLocalizationKey];
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v10, v12);
      swift_bridgeObjectRelease();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v8 setText:v13];
    }
    id v14 = [v1 detailTextLabel];
    if (v14)
    {
      double v15 = v14;
      id v16 = [v6 sensitiveInformationLocalizationKey];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v19 = v18;

      sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v17, v19);
      swift_bridgeObjectRelease();
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v15 setText:v20];
    }
  }
  id v21 = [v1 detailTextLabel];
  if (v21)
  {
    uint64_t v22 = v21;
    [v21 setNumberOfLines:2];
  }
  [v1 setAccessoryType:1];
  return (unint64_t)v1;
}

id sub_100063598()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_willAllowExpressFlow;
  uint64_t v2 = self;
  uint64_t v3 = v0;
  id v4 = [v2 sharedManager];
  id v5 = [v4 snapshot];

  LOBYTE(v4) = [v5 needsFollowup];
  *((unsigned char *)v0 + v1) = v4 ^ 1;
  id v6 = &v3[OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate];
  *(_OWORD *)id v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  uint64_t v7 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_bundleQueue;
  *(void *)&v3[v7] = sub_100062144((SEL *)&selRef_type);
  uint64_t v8 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_typeQueue;
  *(void *)&v3[v8] = sub_100062144((SEL *)&selRef_typeName);
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_consentHandles;
  *(void *)&v3[v9] = sub_100062370();
  uint64_t v10 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_diagnosticsTable;
  *(void *)&v3[v10] = [objc_allocWithZone((Class)UITableView) initWithFrame:1 style:0.0];

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for EnhancedLoggingConsentViewController();
  return [super init];
}

id sub_100063714(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_willAllowExpressFlow;
  id v4 = self;
  id v5 = v1;
  id v6 = [v4 sharedManager];
  id v7 = [v6 snapshot];

  LOBYTE(v6) = [v7 needsFollowup];
  *((unsigned char *)v1 + v3) = v6 ^ 1;
  uint64_t v8 = &v5[OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((void *)v8 + 4) = 0;
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_bundleQueue;
  *(void *)&v5[v9] = sub_100062144((SEL *)&selRef_type);
  uint64_t v10 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_typeQueue;
  *(void *)&v5[v10] = sub_100062144((SEL *)&selRef_typeName);
  uint64_t v11 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_consentHandles;
  *(void *)&v5[v11] = sub_100062370();
  uint64_t v12 = OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_diagnosticsTable;
  *(void *)&v5[v12] = [objc_allocWithZone((Class)UITableView) initWithFrame:1 style:0.0];

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for EnhancedLoggingConsentViewController();
  [super initWithCoder:a1];

  return v13;
}

void sub_1000638A8()
{
  sub_10003C44C(v0 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate, &qword_100183CE8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_diagnosticsTable);
}

id sub_100063920()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedLoggingConsentViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for EnhancedLoggingConsentViewController()
{
  return self;
}

uint64_t sub_1000639FC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100063A34()
{
  sub_100062E90(*(void **)(v0 + 16));
}

uint64_t sub_100063A3C()
{
  return sub_100062DD4(*(void *)(v0 + 16), 1u);
}

uint64_t sub_100063A5C()
{
  return sub_100062DD4(*(void *)(v0 + 16), 2u);
}

uint64_t sub_100063A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100183CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100063AE4(uint64_t a1)
{
  return sub_100062F3C(a1, *(void *)(v1 + 16));
}

unint64_t sub_100063AEC()
{
  unint64_t result = qword_1001864C0;
  if (!qword_1001864C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001864C0);
  }
  return result;
}

void sub_100063C00()
{
  objc_super v2 = v0;
  id v3 = [v0 view];
  if (!v3)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v4 = v3;
  id v5 = [self systemBackgroundColor];
  [v4 setBackgroundColor:v5];

  [v2 setModalInPresentation:1];
  id v6 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_contentUnavailableView];
  id v7 = [v2 view];
  if (!v7)
  {
LABEL_41:
    __break(1u);
    return;
  }
  uint64_t v8 = v7;
  [v7 bounds];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;

  [v6 setFrame:v10, v12, v14, v16];
  uint64_t v17 = (uint64_t)&v2[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert];
  sub_1000647D4((uint64_t)&v2[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert], (uint64_t)v58);
  sub_100064968((uint64_t)v58, (void (*)(void, void, void, void, void, void, void))sub_100064830);
  id v18 = sub_100070B14(0);
  NSString v20 = v19;
  sub_100064968((uint64_t)v58, (void (*)(void, void, void, void, void, void, void))sub_1000648CC);
  if (v20)
  {
    sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v18, v20);
    uint64_t v1 = v21;
    swift_bridgeObjectRelease();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v6 setTitle:v20];

  sub_1000647D4(v17, (uint64_t)v56);
  sub_1000647D4((uint64_t)v56, (uint64_t)v59);
  if (v60 < 2u || v59[4] | v59[5] | v59[0] | v59[3] | v59[2] | v59[1])
  {
    sub_100064968((uint64_t)v56, (void (*)(void, void, void, void, void, void, void))sub_100064830);
    id v22 = sub_100070B14(1);
    NSString v24 = v23;
    sub_100064968((uint64_t)v56, (void (*)(void, void, void, void, void, void, void))sub_1000648CC);
    if (v24)
    {
      sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v22, v24);
      swift_bridgeObjectRelease();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v6 setMessage:v24];
  }
  else
  {
    id v40 = [objc_allocWithZone((Class)NSByteCountFormatter) init];
    [v40 setAllowedUnits:6];
    if (qword_1001827E0 != -1) {
      swift_once();
    }
    uint64_t v41 = sub_1000A3180((const __CFString *)qword_100184DF8);
    if (v41 < 0)
    {
      __break(1u);
      goto LABEL_36;
    }
    id v42 = [v40 stringFromByteCount:v41];
    uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v45 = v44;

    sub_1000647D4(v17, (uint64_t)v57);
    sub_100064968((uint64_t)v57, (void (*)(void, void, void, void, void, void, void))sub_100064830);
    id v46 = sub_100070B14(1);
    NSString v24 = v47;
    sub_100064968((uint64_t)v57, (void (*)(void, void, void, void, void, void, void))sub_1000648CC);
    if (v24)
    {
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_100123B50;
      *(void *)(v48 + 56) = &type metadata for String;
      *(void *)(v48 + 64) = sub_10004D9B4();
      *(void *)(v48 + 32) = v43;
      *(void *)(v48 + 40) = v45;
      sub_100045FCC(0, 0, v48, (uint64_t)v46, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSString v24 = String._bridgeToObjectiveC()();
    }
    swift_bridgeObjectRelease();
    [v6 setMessage:v24];
  }
  unsigned int v25 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isCheckerBoardActive");
  swift_unknownObjectRelease();
  if (v25)
  {
    sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000017, (void *)0x800000010012BDB0);
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setButtonTitle:v26];

    uint64_t v54 = sub_10006447C;
    uint64_t v55 = 0;
    uint64_t v50 = _NSConcreteStackBlock;
    uint64_t v51 = 1107296256;
    uint64_t v52 = sub_1000358AC;
    Class v53 = &unk_10014F4A8;
    id v27 = _Block_copy(&v50);
LABEL_25:
    [v6 setButtonAction:v27];
    _Block_release(v27);
    return;
  }
  if (byte_10018A379 == 1)
  {
    sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000017, (void *)0x800000010012BDB0);
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 setButtonTitle:v28];

    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v2;
    uint64_t v54 = sub_1000649FC;
    uint64_t v55 = v29;
    uint64_t v50 = _NSConcreteStackBlock;
    uint64_t v51 = 1107296256;
    uint64_t v52 = sub_1000358AC;
    Class v53 = &unk_10014F480;
    id v27 = _Block_copy(&v50);
    id v30 = v2;
    goto LABEL_24;
  }
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_privateAlertAction;
  unint64_t v31 = *(void *)&v2[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_privateAlertAction];
  if (!(v31 >> 62))
  {
    if (*(uint64_t *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
      return;
    }
LABEL_16:
    uint64_t v32 = *(void *)&v2[v1];
    if ((v32 & 0xC000000000000001) == 0)
    {
      if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v33 = *(void *)(v32 + 32);
      swift_retain();
LABEL_19:
      uint64_t v34 = *(void *)(v33 + 16);
      NSString v35 = *(void **)(v33 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v34, v35);
      swift_bridgeObjectRelease();
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v6 setButtonTitle:v36];

      uint64_t v37 = *(void *)&v2[v1];
      if ((v37 & 0xC000000000000001) == 0)
      {
        if (*(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v38 = *(void *)(v37 + 32);
          swift_retain();
LABEL_22:
          id v27 = *(void **)(v38 + 40);
          uint64_t v39 = *(void *)(v38 + 48);
          sub_10003AF68((uint64_t)v27);
          swift_release();
          if (!v27) {
            goto LABEL_25;
          }
          uint64_t v54 = (void (*)())v27;
          uint64_t v55 = v39;
          uint64_t v50 = _NSConcreteStackBlock;
          uint64_t v51 = 1107296256;
          uint64_t v52 = sub_1000358AC;
          Class v53 = &unk_10014F430;
          id v27 = _Block_copy(&v50);
LABEL_24:
          swift_release();
          goto LABEL_25;
        }
        __break(1u);
        goto LABEL_40;
      }
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v38 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v33 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v49 >= 1) {
    goto LABEL_16;
  }
}

void sub_10006447C()
{
}

void sub_1000644C0(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert);
  if (*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 48) >= 2u)
  {
    uint64_t v3 = v1[2];
    uint64_t v2 = v1[3];
    uint64_t v4 = *v1;
    uint64_t v5 = v1[1];
    uint64_t v6 = v1[4] | v1[5];
    if (v6 | v4 | v2 | v3 | v5)
    {
      uint64_t v7 = v6 | v2 | v3 | v5;
      if (v4 == 1 && v7 == 0) {
        sub_1000A795C(11);
      }
    }
    else
    {
      sub_1000A795C(10);
    }
  }
}

void sub_100064524()
{
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_contentUnavailableView]];
  }
  else
  {
    __break(1u);
  }
}

void sub_1000645C4()
{
  sub_1000648CC(*(void **)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert), *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 8), *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 16), *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 24), *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 32), *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 40), *(unsigned char *)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert + 48));
  swift_bridgeObjectRelease();
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_contentUnavailableView);
}

id sub_100064624()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullscreenAlertViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FullscreenAlertViewController()
{
  return self;
}

id sub_1000646E8(uint64_t a1)
{
  id v3 = objc_allocWithZone((Class)_UIContentUnavailableView);
  uint64_t v4 = v1;
  id result = [v3 initWithFrame:0 title:0 style:0.0 0.0 0.0 0.0];
  if (result)
  {
    *(void *)&v4[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_contentUnavailableView] = result;
    sub_1000647D4(a1, (uint64_t)&v4[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_alert]);
    sub_100064968(a1, (void (*)(void, void, void, void, void, void, void))sub_100064830);
    *(void *)&v4[OBJC_IVAR____TtC11Diagnostics29FullscreenAlertViewController_privateAlertAction] = sub_100098E8C(a1);

    v6.receiver = v4;
    v6.super_class = (Class)type metadata accessor for FullscreenAlertViewController();
    return [super initWithNibName:0 bundle:0];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000647D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100064830(uint64_t result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    if (a7 != 1) {
      return result;
    }
    double v9 = (void *)result;
    swift_retain();
  }
  else
  {
    double v9 = a2;
  }
  id v10 = v9;
  sub_10003AF68(a3);

  return sub_10003AF68(a5);
}

void *sub_1000648CC(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 == 1)
  {

    swift_release();
  }
  else
  {
    if (a7) {
      return result;
    }
  }
  sub_10003B0B8(a3);

  return (void *)sub_10003B0B8(a5);
}

uint64_t sub_100064968(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1000649AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000649BC()
{
  return swift_release();
}

uint64_t sub_1000649C4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000649FC()
{
  sub_1000644C0(*(void *)(v0 + 16));
}

id sub_100064A14()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v0 setFont:v1];

  [v0 setNumberOfLines:0];
  id v2 = [self sharedApplication];
  BOOL v3 = [v2 userInterfaceLayoutDirection] != (id)1;

  [v0 setTextAlignment:2 * v3];
  id v4 = [self secondaryLabelColor];
  [v0 setTextColor:v4];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setAdjustsFontForContentSizeCategory:1];
  return v0;
}

uint64_t sub_100064B68()
{
  uint64_t v1 = sub_10003AFD0((uint64_t *)&unk_100183190);
  __chkstk_darwin(v1 - 8);
  BOOL v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date;
  swift_beginAccess();
  sub_1000658DC(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_10004B5C8((uint64_t)v3);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  id v10 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v10 setDateStyle:1];
  [v10 setTimeStyle:1];
  [v10 setDoesRelativeDateFormatting:1];
  id v11 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_dateLabel);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  NSString v13 = [v10 stringFromDate:isa];

  if (!v13)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v11 setText:v13];

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_100064DD4()
{
  [v0 setSelectionStyle:0];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_rootStackView];
  [v1 setAxis:0];
  [v1 setDistribution:1];
  [v1 setDirectionalLayoutMargins:16.0, 16.0, 16.0, 16.0];
  [v1 setLayoutMarginsRelativeArrangement:1];

  return [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
}

void sub_100064E8C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_rootStackView];
  [v1 addArrangedSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteNameLabel]];
  [v1 addArrangedSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_dateLabel]];
  id v2 = [v0 contentView];
  [v2 addSubview:v1];
}

void sub_100064F38()
{
  uint64_t v1 = v0;
  id v2 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100123C30;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_rootStackView];
  id v5 = [v4 bottomAnchor];
  id v6 = [v1 contentView];
  id v7 = [v6 bottomAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7];
  *(void *)(v3 + 32) = v8;
  id v9 = [v4 topAnchor];
  id v10 = [v1 contentView];
  id v11 = [v10 topAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11];
  *(void *)(v3 + 40) = v12;
  id v13 = [v4 trailingAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 trailingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15];
  *(void *)(v3 + 48) = v16;
  id v17 = [v4 leadingAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 leadingAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19];
  *(void *)(v3 + 56) = v20;
  specialized Array._endMutation()();
  sub_10005C04C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_1000651F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_rootStackView;
  id v7 = objc_allocWithZone((Class)UIStackView);
  id v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  *(void *)&v8[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_defaultSpacing] = 0x4030000000000000;
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteNameLabel;
  id v10 = [objc_allocWithZone((Class)UILabel) init];
  id v11 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v10 setFont:v11];

  [v10 setNumberOfLines:0];
  [v10 setTextAlignment:4];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v8[v9] = v10;
  id v12 = &v8[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteName];
  *(void *)id v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_dateLabel;
  *(void *)&v8[v13] = sub_100064A14();
  id v14 = &v8[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date];
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);

  if (a3)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  v19.receiver = v8;
  v19.super_class = (Class)type metadata accessor for SelfServiceSessionHistoryCell();
  [super initWithStyle:a1 reuseIdentifier:v16];

  return v17;
}

id sub_10006544C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_rootStackView;
  id v4 = objc_allocWithZone((Class)UIStackView);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_defaultSpacing] = 0x4030000000000000;
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteNameLabel;
  id v7 = [objc_allocWithZone((Class)UILabel) init];
  id v8 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v7 setFont:v8];

  [v7 setNumberOfLines:0];
  [v7 setTextAlignment:4];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v5[v6] = v7;
  uint64_t v9 = &v5[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_suiteName];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_dateLabel;
  *(void *)&v5[v10] = sub_100064A14();
  id v11 = &v5[OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date];
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for SelfServiceSessionHistoryCell();
  id v13 = [super initWithCoder:a1];

  return v13;
}

uint64_t sub_100065648()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC11Diagnostics29SelfServiceSessionHistoryCell_date;

  return sub_10004B5C8(v1);
}

id sub_1000656BC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceSessionHistoryCell();
  return [super dealloc];
}

uint64_t sub_100065774()
{
  return type metadata accessor for SelfServiceSessionHistoryCell();
}

uint64_t type metadata accessor for SelfServiceSessionHistoryCell()
{
  uint64_t result = qword_100183D88;
  if (!qword_100183D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000657C8()
{
  sub_100065884();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100065884()
{
  if (!qword_100183D98)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100183D98);
    }
  }
}

uint64_t sub_1000658DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0((uint64_t *)&unk_100183190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100065944(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount;
  if (*(void *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount] != a1)
  {
    uint64_t v3 = v1;
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v5 = swift_allocObject();
    uint64_t v6 = *(void *)&v1[v2];
    *(_OWORD *)(v5 + 16) = xmmword_100123B50;
    *(void *)(v5 + 56) = &type metadata for Int;
    *(void *)(v5 + 64) = &protocol witness table for Int;
    *(void *)(v5 + 32) = v6;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    if (*(uint64_t *)&v1[v2] <= 0)
    {
      id v7 = [v1 presentedViewController];
      id v8 = v7;
      if (qword_100182730 == -1)
      {
        if (v7) {
          goto LABEL_8;
        }
      }
      else
      {
        swift_once();
        if (v8)
        {
LABEL_8:
          uint64_t v9 = (void *)qword_10018A350;
          sub_10003C374(0, (unint64_t *)&qword_100183670);
          id v10 = v9;
          id v11 = v8;
          char v12 = static NSObject.== infix(_:_:)();

          if (v12) {
            return;
          }
        }
      }
      if ((*(void *)&v3[v2] & 0x8000000000000000) != 0)
      {
        static os_log_type_t.fault.getter();
        uint64_t v13 = swift_allocObject();
        *(_OWORD *)(v13 + 16) = xmmword_1001240D0;
        *(void *)(v13 + 56) = &type metadata for Int;
        *(void *)(v13 + 64) = &protocol witness table for Int;
        *(void *)(v13 + 32) = a1;
        uint64_t v14 = *(void *)&v3[v2];
        *(void *)(v13 + 96) = &type metadata for Int;
        *(void *)(v13 + 104) = &protocol witness table for Int;
        *(void *)(v13 + 72) = v14;
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
      }
      if (qword_100182748 != -1) {
        swift_once();
      }
      sub_100053E48(1, 1);
    }
  }
}

void sub_100065BE4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  __chkstk_darwin(v8);
  id v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v17 = (char *)&v33 - v16;
  uint64_t v18 = *(void *)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount];
  if (v18 != a1)
  {
    uint64_t v35 = v15;
    uint64_t v36 = v5;
    id v19 = objc_allocWithZone((Class)UIBarButtonItem);
    if (v18 < 1)
    {
      id v26 = [v19 initWithBarButtonSystemItem:0 target:v2 action:"barButtonItemTappedWithSender:"];
      id v27 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
      *(void *)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = v26;

      if (a1 >= 1)
      {
        char v28 = sub_100069308();
        if (v28 != 20)
        {
          char v29 = v28;
          sub_10003C374(0, (unint64_t *)&qword_100182E40);
          uint64_t v34 = static OS_dispatch_queue.main.getter();
          static DispatchTime.now()();
          + infix(_:_:)();
          uint64_t v35 = *(void *)(v35 + 8);
          ((void (*)(char *, uint64_t))v35)(v14, v11);
          uint64_t v30 = swift_allocObject();
          *(unsigned char *)(v30 + 16) = v29;
          aBlock[4] = sub_1000695E0;
          aBlock[5] = v30;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000358AC;
          aBlock[3] = &unk_10014F7A0;
          unint64_t v31 = _Block_copy(aBlock);
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_10003AF78();
          sub_10003AFD0((uint64_t *)&unk_100182E50);
          sub_10003B014();
          dispatch thunk of SetAlgebra.init<A>(_:)();
          uint64_t v32 = (void *)v34;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
          _Block_release(v31);

          (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v4);
          (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v38);
          ((void (*)(char *, uint64_t))v35)(v17, v11);
        }
      }
    }
    else
    {
      id v20 = [v19 initWithBarButtonSystemItem:1 target:v2 action:"barButtonItemTappedWithSender:"];
      uint64_t v21 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
      *(void *)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = v20;
    }
    char v22 = byte_10018A378;
    id v23 = [v2 navigationItem];
    NSString v24 = v23;
    if (v22)
    {
      id v25 = *(id *)&v2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
      [v24 setLeftBarButtonItem:v25];
    }
    else
    {
      [v23 setLeftBarButtonItem:0];
    }
  }
}

void sub_1000661A4()
{
  uint64_t v1 = v0;
  unsigned int v2 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isCheckerBoardActive");
  swift_unknownObjectRelease();
  if (v2)
  {
    v3._uint64_t countAndFlagsBits = 4342623;
    v3._object = (void *)0xE300000000000000;
    String.append(_:)(v3);
  }
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x54534F4E47414944, (void *)0xEB00000000534349);
  swift_bridgeObjectRelease();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v4];

  id v5 = [v1 navigationController];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = [v5 navigationBar];

    [v7 setPrefersLargeTitles:1];
  }
  id v8 = [v1 navigationController];
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 navigationBar];

    id v11 = [self systemBackgroundColor];
    [v10 setBarTintColor:v11];
  }
  id v12 = [v1 navigationController];
  if (v12)
  {
    uint64_t v13 = v12;
    id v14 = [v12 navigationBar];

    id v15 = [objc_allocWithZone((Class)UIImage) init];
    [v14 setShadowImage:v15];
  }
  id v16 = [v1 view];
  if (!v16)
  {
    __break(1u);
    goto LABEL_36;
  }
  id v17 = v16;
  uint64_t v18 = self;
  id v19 = [v17 semanticContentAttribute];

  id v20 = [v18 userInterfaceLayoutDirectionForSemanticContentAttribute:v19];
  id v21 = [v1 navigationController];
  char v22 = v21;
  if (v20)
  {
    if (!v21) {
      goto LABEL_16;
    }
    id v23 = [v21 navigationBar];

    id v24 = [self sharedApplication];
    sub_100046500();
    double v26 = v25;

    sub_100086DB4();
    [v23 setLayoutMargins:0.0, 0.0, 0.0, (v26 - v27) * 0.5 + -2.0];
  }
  else
  {
    if (!v21) {
      goto LABEL_16;
    }
    id v23 = [v21 navigationBar];

    id v28 = [self sharedApplication];
    sub_100046500();
    double v30 = v29;

    sub_100086DB4();
    [v23 setLayoutMargins:0.0, (v30 - v31) * 0.5 + -2.0, 0.0, 0.0];
  }

LABEL_16:
  id v32 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:1 target:v1 action:"barButtonItemTappedWithSender:"];
  uint64_t v33 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = v32;

  id v34 = [v1 tableView];
  if (!v34)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v35 = v34;
  type metadata accessor for CardViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v37 = String._bridgeToObjectiveC()();
  [v35 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v37];

  id v38 = [v1 tableView];
  if (!v38)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v39 = v38;
  type metadata accessor for CardViewSessionCell();
  uint64_t v40 = swift_getObjCClassFromMetadata();
  NSString v41 = String._bridgeToObjectiveC()();
  [v39 registerClass:v40 forCellReuseIdentifier:v41];

  id v42 = [v1 tableView];
  if (!v42)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v43 = v42;
  type metadata accessor for CardViewPersistentCell();
  uint64_t v44 = swift_getObjCClassFromMetadata();
  NSString v45 = String._bridgeToObjectiveC()();
  [v43 registerClass:v44 forCellReuseIdentifier:v45];

  id v46 = [v1 tableView];
  if (!v46)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v47 = v46;
  [v46 setSeparatorStyle:0];

  id v48 = [v1 tableView];
  if (!v48)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v49 = v48;
  [v48 setAllowsSelection:0];

  id v50 = [v1 tableView];
  if (!v50)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v51 = v50;
  [v50 setAlwaysBounceVertical:1];

  id v52 = [v1 tableView];
  if (!v52)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  Class v53 = v52;
  [v52 setShowsVerticalScrollIndicator:0];

  id v54 = [v1 tableView];
  if (!v54)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v55 = v54;
  [v54 setDelegate:v1];

  id v56 = [v1 tableView];
  if (!v56)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v57 = v56;
  [v56 setDataSource:*(void *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager]];

  id v58 = [v1 tableView];
  if (!v58)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  NSString v59 = v58;
  [v58 setRowHeight:UITableViewAutomaticDimension];

  id v60 = [v1 tableView];
  if (!v60)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v61 = v60;
  [v60 setEstimatedRowHeight:500.0];

  id v62 = [v1 tableView];
  if (!v62)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  Class v63 = v62;
  [v62 setEstimatedSectionFooterHeight:0.0];

  id v64 = [v1 tableView];
  if (!v64)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  uint64_t v65 = v64;
  [v64 setContentInsetAdjustmentBehavior:0];

  id v66 = [v1 tableView];
  if (!v66)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  uint64_t v67 = v66;
  id v68 = [v1 tableView];
  if (!v68)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  char v69 = v68;
  [v68 bounds];
  double v71 = v70;

  id v72 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, v71, 15.0];
  [v67 setTableHeaderView:v72];

  id v73 = [v1 tableView];
  if (!v73)
  {
LABEL_51:
    __break(1u);
    return;
  }
  id v74 = v73;
  id v75 = [self systemBackgroundColor];
  [v74 setBackgroundColor:v75];
}

void sub_100066A38()
{
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  if (qword_100182838 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_10018A460;
  id v29 = self;
  id v4 = [v29 mainQueue];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  id v34 = sub_100069498;
  uint64_t v35 = v5;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v31 = 1107296256;
  id v32 = sub_10004FC1C;
  uint64_t v33 = &unk_10014F610;
  uint64_t v6 = _Block_copy(&aBlock);
  id v7 = v0;
  swift_release();
  id v8 = [v2 addObserverForName:v3 object:0 queue:v4 usingBlock:v6];
  _Block_release(v6);
  swift_unknownObjectRelease();

  id v9 = [v1 defaultCenter];
  if (qword_100182848 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_10018A470;
  id v11 = [v7 tableView];
  if (v11)
  {
    id v12 = v11;
    id v13 = [v11 dataSource];

    id v14 = [v29 mainQueue];
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v7;
    id v34 = sub_1000694A0;
    uint64_t v35 = v15;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v31 = 1107296256;
    id v32 = sub_10004FC1C;
    uint64_t v33 = &unk_10014F660;
    id v16 = _Block_copy(&aBlock);
    id v17 = v7;
    swift_release();
    id v18 = [v9 addObserverForName:v10 object:v13 queue:v14 usingBlock:v16];
    _Block_release(v16);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    id v19 = [v1 defaultCenter];
    if (qword_100182840 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_10018A468;
    id v21 = [v17 tableView];
    if (v21)
    {
      char v22 = v21;
      id v23 = [v21 dataSource];

      id v24 = [v29 mainQueue];
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v17;
      id v34 = sub_1000694A8;
      uint64_t v35 = v25;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v31 = 1107296256;
      id v32 = sub_10004FC1C;
      uint64_t v33 = &unk_10014F6B0;
      double v26 = _Block_copy(&aBlock);
      id v27 = v17;
      swift_release();
      id v28 = [v19 addObserverForName:v20 object:v23 queue:v24 usingBlock:v26];
      _Block_release(v26);
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100066ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Notification.userInfo.getter();
  if (!v3)
  {
    long long v10 = 0u;
    long long v11 = 0u;
LABEL_10:
    sub_10003C44C((uint64_t)&v10, &qword_100183E70);
    goto LABEL_11;
  }
  uint64_t v4 = v3;
  *(void *)&long long v10 = 0xD000000000000012;
  *((void *)&v10 + 1) = 0x800000010012B130;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10007D88C((uint64_t)v9), (v6 & 1) != 0))
  {
    sub_10003C5D8(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10003C320((uint64_t)v9);
  if (!*((void *)&v11 + 1)) {
    goto LABEL_10;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    uint64_t v7 = 0;
    goto LABEL_12;
  }
  uint64_t v7 = v9[0];
LABEL_12:
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount);
  *(void *)(a2 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount) = v7;
  sub_100065BE4(v8);
}

void sub_100066FF0(uint64_t a1, void *a2)
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  id v3 = [a2 tableView];
  if (v3)
  {
    id v4 = v3;
    [v3 reloadData];
  }
  else
  {
    __break(1u);
  }
}

void sub_1000670C4(uint64_t a1, char *a2)
{
  uint64_t v3 = Notification.userInfo.getter();
  if (v3)
  {
    uint64_t v4 = v3;
    strcpy((char *)v23, "cardActionsKey");
    HIBYTE(v23[1]) = -18;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10007D88C((uint64_t)&v17), (v6 & 1) != 0))
    {
      sub_10003C5D8(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v24);
    }
    else
    {
      long long v24 = 0u;
      long long v25 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10003C320((uint64_t)&v17);
    if (*((void *)&v25 + 1))
    {
      sub_10003AFD0(&qword_100183E78);
      if (swift_dynamicCast())
      {
        uint64_t v7 = v23[0];
        if (qword_1001827C8 != -1) {
          swift_once();
        }
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        uint64_t v8 = sub_1000F7938();
        uint64_t v9 = *(void *)&a2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount];
        *(void *)&a2[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount] = v8;
        sub_100065944(v9);
        id v10 = [a2 tableView];
        if (v10)
        {
          long long v11 = v10;
          uint64_t v12 = swift_allocObject();
          *(void *)(v12 + 16) = v7;
          *(void *)(v12 + 24) = a2;
          uint64_t v13 = swift_allocObject();
          *(void *)(v13 + 16) = sub_1000694F0;
          *(void *)(v13 + 24) = v12;
          id v21 = sub_100042974;
          uint64_t v22 = v13;
          id v17 = _NSConcreteStackBlock;
          uint64_t v18 = 1107296256;
          id v19 = sub_10004FD38;
          uint64_t v20 = &unk_10014F728;
          id v14 = _Block_copy(&v17);
          uint64_t v15 = a2;
          swift_release();
          id v21 = sub_100067C80;
          uint64_t v22 = 0;
          id v17 = _NSConcreteStackBlock;
          uint64_t v18 = 1107296256;
          id v19 = sub_1000E7710;
          uint64_t v20 = &unk_10014F750;
          id v16 = _Block_copy(&v17);
          [v11 performBatchUpdates:v14 completion:v16];
          _Block_release(v16);
          _Block_release(v14);
          swift_release();
        }
        else
        {
          __break(1u);
        }
      }
    }
    else
    {
      sub_10003C44C((uint64_t)&v24, &qword_100183E70);
    }
  }
}

id sub_1000673E4(uint64_t a1, void *a2)
{
  id v67 = a2;
  uint64_t v62 = type metadata accessor for Move(0);
  uint64_t v3 = __chkstk_darwin(v62);
  uint64_t v57 = (void *)((char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v61 = (uint64_t)v55 - v5;
  uint64_t v65 = type metadata accessor for Remove(0);
  uint64_t v6 = __chkstk_darwin(v65);
  NSString v59 = (void *)((char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v55 - v8;
  uint64_t v68 = type metadata accessor for Add(0);
  uint64_t v10 = __chkstk_darwin(v68);
  uint64_t v12 = (void *)((char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  id result = (id)__chkstk_darwin(v10);
  uint64_t v15 = (char *)v55 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return result;
  }
  uint64_t v17 = a1 + 32;
  v55[1] = a1;
  swift_bridgeObjectRetain();
  long long v64 = xmmword_100124AF0;
  long long v63 = xmmword_100123B50;
  long long v56 = xmmword_100124AE0;
  id v66 = v15;
  id v60 = v9;
  while (1)
  {
    sub_100042A64(v17, (uint64_t)v69);
    sub_10003AFD0(&qword_100183E80);
    if (swift_dynamicCast()) {
      break;
    }
    if (swift_dynamicCast())
    {
      uint64_t v30 = (uint64_t)v9;
      uint64_t v31 = v59;
      sub_100069508(v30, (uint64_t)v59, type metadata accessor for Remove);
      if (qword_1001827C8 != -1) {
        swift_once();
      }
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v64;
      uint64_t v33 = *v31;
      uint64_t v34 = v31[1];
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 64) = sub_10004D9B4();
      *(void *)(v32 + 32) = v33;
      *(void *)(v32 + 40) = v34;
      uint64_t v35 = (char *)v31 + *(int *)(v65 + 20);
      swift_bridgeObjectRetain();
      uint64_t v36 = IndexPath.section.getter();
      *(void *)(v32 + 96) = &type metadata for Int;
      *(void *)(v32 + 104) = &protocol witness table for Int;
      *(void *)(v32 + 72) = v36;
      uint64_t v37 = IndexPath.row.getter();
      *(void *)(v32 + 136) = &type metadata for Int;
      *(void *)(v32 + 144) = &protocol witness table for Int;
      *(void *)(v32 + 112) = v37;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      id result = [v67 tableView];
      if (!result) {
        goto LABEL_23;
      }
      id v38 = result;
      sub_10003AFD0(&qword_100183E88);
      uint64_t v39 = type metadata accessor for IndexPath();
      uint64_t v40 = *(void *)(v39 - 8);
      unint64_t v41 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = v63;
      (*(void (**)(unint64_t, char *, uint64_t))(v40 + 16))(v42 + v41, v35, v39);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v38 deleteRowsAtIndexPaths:isa withRowAnimation:100];

      sub_100069570((uint64_t)v31, type metadata accessor for Remove);
      uint64_t v9 = v60;
      goto LABEL_3;
    }
    if (swift_dynamicCast())
    {
      uint64_t v44 = v57;
      sub_100069508(v61, (uint64_t)v57, type metadata accessor for Move);
      if (qword_1001827C8 != -1) {
        swift_once();
      }
      uint64_t v58 = qword_10018A3E8;
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = v56;
      uint64_t v47 = *v44;
      uint64_t v46 = v44[1];
      *(void *)(v45 + 56) = &type metadata for String;
      *(void *)(v45 + 64) = sub_10004D9B4();
      *(void *)(v45 + 32) = v47;
      *(void *)(v45 + 40) = v46;
      swift_bridgeObjectRetain();
      uint64_t v48 = IndexPath.section.getter();
      *(void *)(v45 + 96) = &type metadata for Int;
      *(void *)(v45 + 104) = &protocol witness table for Int;
      *(void *)(v45 + 72) = v48;
      uint64_t v49 = IndexPath.row.getter();
      *(void *)(v45 + 136) = &type metadata for Int;
      *(void *)(v45 + 144) = &protocol witness table for Int;
      *(void *)(v45 + 112) = v49;
      uint64_t v50 = IndexPath.section.getter();
      *(void *)(v45 + 176) = &type metadata for Int;
      *(void *)(v45 + 184) = &protocol witness table for Int;
      *(void *)(v45 + 152) = v50;
      uint64_t v51 = IndexPath.row.getter();
      *(void *)(v45 + 216) = &type metadata for Int;
      *(void *)(v45 + 224) = &protocol witness table for Int;
      *(void *)(v45 + 192) = v51;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      id result = [v67 tableView];
      if (!result) {
        goto LABEL_24;
      }
      id v52 = result;
      Class v53 = IndexPath._bridgeToObjectiveC()().super.isa;
      Class v54 = IndexPath._bridgeToObjectiveC()().super.isa;
      [v52 moveRowAtIndexPath:v53 toIndexPath:v54];

      sub_100069570((uint64_t)v44, type metadata accessor for Move);
      uint64_t v15 = v66;
      uint64_t v9 = v60;
    }
LABEL_4:
    sub_100042B0C((uint64_t)v69);
    v17 += 40;
    if (!--v16) {
      return (id)swift_bridgeObjectRelease();
    }
  }
  sub_100069508((uint64_t)v15, (uint64_t)v12, type metadata accessor for Add);
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v64;
  uint64_t v19 = *v12;
  uint64_t v20 = v12[1];
  *(void *)(v18 + 56) = &type metadata for String;
  *(void *)(v18 + 64) = sub_10004D9B4();
  *(void *)(v18 + 32) = v19;
  *(void *)(v18 + 40) = v20;
  id v21 = (char *)v12 + *(int *)(v68 + 20);
  swift_bridgeObjectRetain();
  uint64_t v22 = IndexPath.section.getter();
  *(void *)(v18 + 96) = &type metadata for Int;
  *(void *)(v18 + 104) = &protocol witness table for Int;
  *(void *)(v18 + 72) = v22;
  uint64_t v23 = IndexPath.row.getter();
  *(void *)(v18 + 136) = &type metadata for Int;
  *(void *)(v18 + 144) = &protocol witness table for Int;
  *(void *)(v18 + 112) = v23;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id result = [v67 tableView];
  if (result)
  {
    long long v24 = result;
    sub_10003AFD0(&qword_100183E88);
    uint64_t v25 = type metadata accessor for IndexPath();
    uint64_t v26 = *(void *)(v25 - 8);
    unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = v63;
    (*(void (**)(unint64_t, char *, uint64_t))(v26 + 16))(v28 + v27, v21, v25);
    Class v29 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v24 insertRowsAtIndexPaths:v29 withRowAnimation:100];

    sub_100069570((uint64_t)v12, type metadata accessor for Add);
LABEL_3:
    uint64_t v15 = v66;
    goto LABEL_4;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_100067C80()
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();

  return os_log(_:dso:log:type:_:)();
}

void sub_100067D10(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for DashboardViewController();
  [super viewWillAppear:a1 & 1];
  char v3 = byte_10018A378;
  v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment] = byte_10018A378;
  id v4 = [v1 navigationItem];
  uint64_t v5 = v4;
  if (v3)
  {
    id v6 = *(id *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
    [v5 setLeftBarButtonItem:v6];
  }
  else
  {
    [v4 setLeftBarButtonItem:0];
  }
}

void sub_100067E2C()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment;
  int v2 = v0[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment];
  if (v2 != 2)
  {
    if (v2) {
      uint64_t v3 = 0x2265746F6D655222;
    }
    else {
      uint64_t v3 = 0x746C756166654422;
    }
    if (v2) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xE900000000000022;
    }
    if (byte_10018A378) {
      uint64_t v5 = 0x2265746F6D655222;
    }
    else {
      uint64_t v5 = 0x746C756166654422;
    }
    if (byte_10018A378) {
      unint64_t v6 = 0xE800000000000000;
    }
    else {
      unint64_t v6 = 0xE900000000000022;
    }
    if (v3 == v5 && v4 == v6)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
        char v9 = byte_10018A378;
        v0[v1] = byte_10018A378;
        id v10 = [v0 navigationItem];
        id v12 = v10;
        if (v9)
        {
          id v11 = *(id *)&v0[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem];
          [v12 setLeftBarButtonItem:v11];
        }
        else
        {
          [v10 setLeftBarButtonItem:0];
        }
      }
    }
  }
}

uint64_t sub_100067F94(unint64_t a1)
{
  if (a1 > 2) {
    return 0;
  }
  unsigned __int8 v2 = a1;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
     + OBJC_IVAR____TtC11Diagnostics11CardManager_cardsInView;
  swift_beginAccess();
  uint64_t v4 = *(void *)v3;
  if (!*(void *)(*(void *)v3 + 16)) {
    return 0;
  }
  unint64_t v5 = sub_10007D8D0(v2);
  if ((v6 & 1) == 0) {
    return 0;
  }
  unint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    int v9 = v2;
    if (v2) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  int v9 = v2;
  if (!v2)
  {
LABEL_17:
    if (v8 >= 1)
    {
      uint64_t v17 = (void *)0x800000010012C050;
      uint64_t v16 = 0xD000000000000010;
      goto LABEL_19;
    }
    return 0;
  }
LABEL_6:
  if (v9 != 1) {
    return 0;
  }
  uint64_t v10 = *(void *)v3;
  if (!*(void *)(*(void *)v3 + 16)) {
    return 0;
  }
  unint64_t v11 = sub_10007D8D0(2u);
  if ((v12 & 1) == 0) {
    return 0;
  }
  unint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= 0 && v14 < 1) {
    return 0;
  }
  uint64_t v16 = 0x55535F454C505041;
  uint64_t v17 = (void *)0xED000054524F5050;
LABEL_19:
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v16, v17);
  sub_100061B00();
  uint64_t v18 = StringProtocol.localizedUppercase.getter();
  swift_bridgeObjectRelease();
  return v18;
}

unsigned char *sub_100068180(unint64_t a1)
{
  type metadata accessor for DashboardSectionHeaderView();
  uint64_t v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v4 = sub_100067F94(a1);
  unint64_t v5 = (uint64_t *)&v3[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_text];
  *unint64_t v5 = v4;
  v5[1] = v6;
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void **)&v3[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_label];
  if (v5[1])
  {
    String.uppercased()();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  [v7 setText:v8];

  if (!a1)
  {
    v3[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_showsButton] = 1;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v1;
    uint64_t v10 = (void (**)())&v3[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_buttonAction];
    uint64_t v11 = *(void *)&v3[OBJC_IVAR____TtC11Diagnostics26DashboardSectionHeaderView_buttonAction];
    char *v10 = sub_100069448;
    v10[1] = (void (*)())v9;
    id v12 = v1;
    sub_10003B0B8(v11);
  }
  return v3;
}

void sub_1000682B4(void *a1)
{
  id v2 = [self sharedManager];
  id v3 = [v2 snapshot];

  id v4 = [v3 status];
  if (v4 == (id)5)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = a1;
    id v6 = a1;
    id v7 = sub_100095518((uint64_t)sub_100069474, v5, (uint64_t)sub_10006842C, 0);
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    id v9 = a1;
    id v7 = sub_100095158((uint64_t)sub_100069450, v8, (uint64_t)sub_10006842C, 0);
  }
  id v10 = v7;
  swift_release();
  [v10 scheduleModalPresentationWithPriority:0 animated:1 presentationCompletion:0];
}

uint64_t sub_100068430(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  id v10 = &v22[-v9];
  uint64_t v11 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v15 = [self sharedManager];
  aBlock[4] = sub_1000689F8;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046950;
  aBlock[3] = a3;
  uint64_t v16 = _Block_copy(aBlock);
  [v15 transactionWithBlock:v16];
  _Block_release(v16);

  [self createLoggingEventWith:ELSEventTypeCancelledByUser];
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v17, (uint64_t)qword_10018A440);
  swift_beginAccess();
  if ((sub_1000D986C(a1, 1, 0, 1, 0, 0) & 1) == 0)
  {
    id v18 = a1;
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = sub_1000DC28C(v19, v18);

    sub_1000D7D60(v20, (uint64_t)v10);
    swift_release();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_10003C44C((uint64_t)v10, (uint64_t *)&unk_100182FD0);
    }
    else
    {
      sub_100069508((uint64_t)v10, (uint64_t)v14, type metadata accessor for ModalPresentationCoordinator.QueueEntry);
      sub_1000B7DBC((uint64_t)v14, (uint64_t)v8);
      sub_10003C44C((uint64_t)v8, (uint64_t *)&unk_100182FD0);
      sub_100069570((uint64_t)v14, type metadata accessor for ModalPresentationCoordinator.QueueEntry);
    }
  }
  sub_1000D8460();
  return swift_endAccess();
}

uint64_t sub_100068778(void *a1)
{
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - v6;
  uint64_t v8 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v12, (uint64_t)qword_10018A440);
  swift_beginAccess();
  if ((sub_1000D986C(a1, 1, 0, 1, 0, 0) & 1) == 0)
  {
    id v13 = a1;
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1000DC28C(v14, v13);

    sub_1000D7D60(v15, (uint64_t)v7);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10003C44C((uint64_t)v7, (uint64_t *)&unk_100182FD0);
    }
    else
    {
      sub_100069508((uint64_t)v7, (uint64_t)v11, type metadata accessor for ModalPresentationCoordinator.QueueEntry);
      sub_1000B7DBC((uint64_t)v11, (uint64_t)v5);
      sub_10003C44C((uint64_t)v5, (uint64_t *)&unk_100182FD0);
      sub_100069570((uint64_t)v11, type metadata accessor for ModalPresentationCoordinator.QueueEntry);
    }
  }
  sub_1000D8460();
  return swift_endAccess();
}

id sub_1000689F8(void *a1)
{
  return [a1 setStatus:6];
}

void sub_100068BE0()
{
  id v1 = [v0 navigationController];
  if (v1)
  {
    uint64_t v2 = v1;
    id v8 = [v1 view];

    if (v8)
    {
      [v8 alpha];
      if (v3 == 0.0)
      {
        uint64_t v4 = swift_allocObject();
        *(void *)(v4 + 16) = v8;
        uint64_t v5 = self;
        aBlock[4] = sub_10003C0D4;
        aBlock[5] = v4;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000358AC;
        aBlock[3] = &unk_10014F4F8;
        uint64_t v6 = _Block_copy(aBlock);
        id v7 = v8;
        swift_retain();
        swift_release();
        [v5 animateWithDuration:0x10000 delay:v6 options:0 animations:0.375 completion:0.0];
        _Block_release(v6);

        swift_release();
      }
      else
      {
      }
    }
  }
}

id sub_100068E20(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_sectionPadding] = 0x4034000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardCellEstimatedHeight] = 0x407F400000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_largeTitleToTableViewSpacing] = 0x402E000000000000;
  v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_viewWasEverPresented] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager;
  id v4 = objc_allocWithZone((Class)type metadata accessor for CardManager());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment] = 2;
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = 0;

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for DashboardViewController();
  return [super initWithStyle:a1];
}

id sub_100068F48(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_sectionPadding] = 0x4034000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardCellEstimatedHeight] = 0x407F400000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_largeTitleToTableViewSpacing] = 0x402E000000000000;
  v3[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_viewWasEverPresented] = 0;
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager;
  id v7 = objc_allocWithZone((Class)type metadata accessor for CardManager());
  id v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  v8[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment] = 2;
  *(void *)&v8[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount] = 0;
  *(void *)&v8[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = 0;

  if (a2)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for DashboardViewController();
  [super initWithNibName:v9 bundle:a3];

  return v10;
}

id sub_1000690F0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_sectionPadding] = 0x4034000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardCellEstimatedHeight] = 0x407F400000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_largeTitleToTableViewSpacing] = 0x402E000000000000;
  v1[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_viewWasEverPresented] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager;
  id v4 = objc_allocWithZone((Class)type metadata accessor for CardManager());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_currentLaunchEnvironment] = 2;
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_totalCardCount] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_activeCardCount] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for DashboardViewController();
  id v6 = [super initWithCoder:a1];

  return v6;
}

void sub_100069224()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_leftBarButtonItem);
}

id sub_100069264()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DashboardViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for DashboardViewController()
{
  return self;
}

uint64_t sub_100069308()
{
  if (byte_10018A379) {
    return 12;
  }
  id v1 = [self standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  unsigned __int8 v3 = [v1 BOOLForKey:v2];

  uint64_t v0 = 13;
  if ((v3 & 1) == 0)
  {
    unsigned int v4 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive");
    swift_unknownObjectRelease();
    if (v4) {
      return 13;
    }
    else {
      return 20;
    }
  }
  return v0;
}

uint64_t sub_1000693F8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100069430(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100069440()
{
  return swift_release();
}

void sub_100069448()
{
  sub_1000682B4(*(void **)(v0 + 16));
}

uint64_t sub_100069450(void *a1)
{
  return sub_100068430(a1, *(void *)(v1 + 16), (uint64_t)&unk_10014F5C0);
}

uint64_t sub_100069474(void *a1)
{
  return sub_100068430(a1, *(void *)(v1 + 16), (uint64_t)&unk_10014F598);
}

void sub_100069498(uint64_t a1)
{
  sub_100066ED4(a1, *(void *)(v1 + 16));
}

void sub_1000694A0(uint64_t a1)
{
  sub_100066FF0(a1, *(void **)(v1 + 16));
}

void sub_1000694A8(uint64_t a1)
{
  sub_1000670C4(a1, *(char **)(v1 + 16));
}

uint64_t sub_1000694B0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000694F0()
{
  return sub_1000673E4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000694F8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100069508(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100069570(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000695D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_1000695E0()
{
  sub_1000A795C(*(unsigned char *)(v0 + 16));
}

void sub_1000695E8(uint64_t a1)
{
  id v3 = [v1 tableView];
  if (!v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  unsigned int v4 = v3;
  id v5 = [v3 dataSource];

  if (v5)
  {
    id v6 = [v1 tableView];
    if (v6)
    {
      id v7 = v6;
      [v5 tableView:v6 numberOfRowsInSection:a1];
      swift_unknownObjectRelease();

      return;
    }
    goto LABEL_7;
  }
}

uint64_t sub_1000696C0(void *a1)
{
  type metadata accessor for DashboardSectionHeaderView();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    id v5 = self;
    void v8[4] = sub_1000697FC;
    v8[5] = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_1000358AC;
    v8[3] = &unk_10014F7F0;
    id v6 = _Block_copy(v8);
    id v7 = a1;
    swift_retain();
    swift_release();
    [v5 animateWithDuration:0x10000 delay:v6 options:0 animations:0.375 completion:0.0];
    _Block_release(v6);

    return swift_release();
  }
  return result;
}

id sub_1000697FC()
{
  return sub_1000EFFC0(*(void *)(v0 + 16));
}

char *sub_100069868(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultOuterPadding] = 0x4034000000000000;
  *(void *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultInnerPadding] = 0x4028000000000000;
  *(void *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultHorizontalPadding] = 0x4042000000000000;
  *(void *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButtonPointSize] = 0x403E000000000000;
  *(void *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_glyphPointSize] = 0x4051800000000000;
  *(void *)&v9[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageScreenSpaceRatio] = 0x3FD6666666666666;
  uint64_t v12 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButton;
  id v13 = self;
  uint64_t v14 = v9;
  *(void *)&v9[v12] = [v13 buttonWithType:0];
  uint64_t v15 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton;
  *(void *)&v14[v15] = [self boldButton];
  uint64_t v16 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView;
  *(void *)&v14[v16] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v17 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_scrollView;
  *(void *)&v14[v17] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v18 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_titleLabel;
  id v19 = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v14[v18] = v19;
  uint64_t v20 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_subtitleLabel;
  *(void *)&v14[v20] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v21 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_detailsLabel;
  *(void *)&v14[v21] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v22 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView;
  *(void *)&v14[v22] = [objc_allocWithZone((Class)UIView) init];
  v14[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_isShowingGlyph] = 0;
  id v23 = v19;
  NSString v24 = String._bridgeToObjectiveC()();
  [v23 setText:v24];

  uint64_t v25 = *(void **)&v14[v20];
  id v26 = v25;
  if (a5)
  {
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v27 = 0;
  }
  [v25 setText:v27 a4];

  uint64_t v28 = *(void **)&v14[v21];
  id v29 = v28;
  if (a7)
  {
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v30 = 0;
  }
  [v28 setText:v30];

  uint64_t v31 = &v14[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticHandler];
  *(void *)uint64_t v31 = a8;
  *((void *)v31 + 1) = a9;
  swift_retain();

  v41.receiver = v14;
  v41.super_class = (Class)type metadata accessor for SelfServiceSuiteDescriptionViewController();
  uint64_t v32 = (char *)[v41 initWithNibName:0 bundle:0];
  uint64_t v33 = *(void **)&v32[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView];
  uint64_t v34 = v32;
  [v33 setImage:a1];
  uint64_t v35 = v34;
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v35 setTitle:v36];

  swift_release();
  return v35;
}

void sub_100069C18()
{
  uint64_t v1 = v0;
  id v2 = [v0 view];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = self;
    id v5 = [v4 systemBackgroundColor];
    [v3 setBackgroundColor:v5];

    [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView] setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView];
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v6 setContentMode:2];
    [v6 setClipsToBounds:1];
    id v7 = self;
    id v8 = [v7 configurationWithPointSize:30.0];
    id v37 = v4;
    id v9 = [v4 systemGrayColor];
    id v10 = [v7 configurationWithHierarchicalColor:v9];

    NSString v36 = v8;
    id v11 = [v10 configurationByApplyingConfiguration:v8];

    id v12 = v11;
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [self systemImageNamed:v13 withConfiguration:v12];

    uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButton];
    [v15 setClipsToBounds:1];
    uint64_t v35 = v14;
    [v15 setImage:v14 forState:0];
    [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
    sub_10003C374(0, (unint64_t *)&qword_1001831A8);
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v34 = v16;
    uint64_t v17 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    [v15 addAction:v17 forControlEvents:64];

    uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton];
    sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000010, (void *)0x800000010012C380);
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v18 setTitle:v19 forState:0];

    [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v21 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    [v18 addAction:v21 forControlEvents:64];

    uint64_t v22 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_scrollView];
    [v22 setShowsVerticalScrollIndicator:0];
    [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v23 = self;
    id v38 = [v23 preferredFontForTextStyle:UIFontTextStyleLargeTitle];
    id v24 = [v38 fontDescriptor];
    id v25 = [v24 fontDescriptorWithSymbolicTraits:2];

    if (v25)
    {
      id v26 = [v23 fontWithDescriptor:v25 size:0.0];

      id v27 = v26;
    }
    else
    {
      id v27 = v38;
    }
    uint64_t v28 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_titleLabel];
    id v39 = v27;
    [v28 setFont:];
    [v28 setNumberOfLines:0];
    [v28 setTextAlignment:1];
    [v28 setAdjustsFontForContentSizeCategory:1];
    [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_subtitleLabel];
    id v30 = [v23 preferredFontForTextStyle:UIFontTextStyleCallout];
    [v29 setFont:v30];

    [v29 setNumberOfLines:0];
    [v29 setTextAlignment:1];
    [v29 setAdjustsFontForContentSizeCategory:1];
    [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_detailsLabel];
    id v32 = [v23 preferredFontForTextStyle:UIFontTextStyleCallout];
    [v31 setFont:v32];

    id v33 = [v37 systemGrayColor];
    [v31 setTextColor:v33];

    [v31 setNumberOfLines:0];
    [v31 setTextAlignment:1];
    [v31 setAdjustsFontForContentSizeCategory:1];
    [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
  }
  else
  {
    __break(1u);
  }
}

void sub_10006A2BC()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

uint64_t sub_10006A320()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = *(void (**)(void))(result
                          + OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticHandler);
    swift_retain();

    v4();
    return swift_release();
  }
  return result;
}

void sub_10006A3DC()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView];
  [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView]];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = v2;
  [v2 addSubview:v1];

  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_scrollView];
  [v4 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_titleLabel]];
  [v4 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_subtitleLabel]];
  id v5 = [v0 view];
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v6 = v5;
  [v5 addSubview:v4];

  id v7 = [v0 view];
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v8 = v7;
  [v7 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_detailsLabel]];

  id v9 = [v0 view];
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v10 = v9;
  [v9 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton]];

  id v11 = [v0 view];
  if (!v11)
  {
LABEL_13:
    __break(1u);
    return;
  }
  id v12 = v11;
  [v11 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButton]];
}

void sub_10006A590()
{
  uint64_t v1 = v0;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100124B30;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView];
  id v4 = [v3 topAnchor];
  id v5 = [v1 view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_23;
  }
  id v6 = v5;
  id v7 = [v5 topAnchor];

  id v8 = [v4 constraintEqualToAnchor:v7];
  *(void *)(v2 + 32) = v8;
  id v9 = [v3 leadingAnchor];
  id v10 = [v1 view];
  if (!v10)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v11 = v10;
  id v12 = [v10 leadingAnchor];

  id v13 = [v9 constraintEqualToAnchor:v12];
  *(void *)(v2 + 40) = v13;
  id v14 = [v3 trailingAnchor];
  id v15 = [v1 view];
  if (!v15)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v16 = v15;
  id v17 = [v15 trailingAnchor];

  id v18 = [v14 constraintEqualToAnchor:v17];
  *(void *)(v2 + 48) = v18;
  id v19 = [v3 heightAnchor];
  id v20 = [v1 view];
  if (!v20)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v21 = v20;
  id v22 = [v20 heightAnchor];

  id v23 = [v19 constraintEqualToAnchor:v22 multiplier:0.35];
  *(void *)(v2 + 56) = v23;
  id v24 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButton];
  id v25 = [v24 topAnchor];
  id v26 = [v1 view];
  if (!v26)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v27 = v26;
  id v28 = [v26 topAnchor];

  id v29 = [v25 constraintEqualToAnchor:v28 constant:20.0];
  *(void *)(v2 + 64) = v29;
  id v30 = [v24 trailingAnchor];
  id v31 = [v1 view];
  if (!v31)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v32 = v31;
  id v33 = [v31 trailingAnchor];

  id v34 = [v30 constraintEqualToAnchor:v33 constant:-20.0];
  *(void *)(v2 + 72) = v34;
  uint64_t v35 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_scrollView];
  id v36 = [v35 topAnchor];
  id v37 = [v3 bottomAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37 constant:20.0];

  *(void *)(v2 + 80) = v38;
  id v39 = [v35 leadingAnchor];
  id v40 = [v1 view];
  if (!v40)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_super v41 = v40;
  id v146 = v3;
  id v42 = [v40 leadingAnchor];

  id v43 = [v39 constraintEqualToAnchor:v42 constant:36.0];
  *(void *)(v2 + 88) = v43;
  id v44 = [v35 trailingAnchor];
  id v45 = [v1 view];
  if (!v45)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v46 = v45;
  id v47 = [v45 trailingAnchor];

  id v48 = [v44 constraintEqualToAnchor:v47 constant:-36.0];
  *(void *)(v2 + 96) = v48;
  id v49 = [v35 bottomAnchor];
  id v147 = *(id *)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton];
  id v50 = [v147 topAnchor];
  id v51 = [v49 constraintEqualToAnchor:v50 constant:-20.0];

  *(void *)(v2 + 104) = v51;
  id v52 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_titleLabel];
  id v53 = [v52 topAnchor];
  id v54 = [v35 topAnchor];
  id v55 = [v53 constraintEqualToAnchor:v54];

  *(void *)(v2 + 112) = v55;
  id v56 = [v52 leadingAnchor];
  id v57 = [v35 leadingAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57];

  *(void *)(v2 + 120) = v58;
  id v59 = [v52 trailingAnchor];
  id v60 = [v35 trailingAnchor];
  id v61 = [v59 constraintEqualToAnchor:v60];

  *(void *)(v2 + 128) = v61;
  id v62 = [v52 widthAnchor];
  id v63 = [v35 widthAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63];

  *(void *)(v2 + 136) = v64;
  uint64_t v65 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_subtitleLabel];
  id v66 = [v65 topAnchor];
  id v67 = [v52 bottomAnchor];
  id v68 = [v66 constraintEqualToAnchor:v67 constant:12.0];

  *(void *)(v2 + 144) = v68;
  id v69 = [v65 leadingAnchor];
  id v70 = [v35 leadingAnchor];
  id v71 = [v69 constraintEqualToAnchor:v70];

  *(void *)(v2 + 152) = v71;
  id v72 = [v65 trailingAnchor];
  id v73 = [v35 trailingAnchor];
  id v74 = [v72 constraintEqualToAnchor:v73];

  *(void *)(v2 + 160) = v74;
  id v75 = [v65 bottomAnchor];
  id v76 = [v35 bottomAnchor];
  id v77 = [v75 constraintEqualToAnchor:v76];

  *(void *)(v2 + 168) = v77;
  id v78 = [v65 widthAnchor];
  id v79 = [v35 widthAnchor];
  id v80 = [v78 constraintEqualToAnchor:v79];

  *(void *)(v2 + 176) = v80;
  uint64_t v81 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_detailsLabel];
  id v82 = [v81 leadingAnchor];
  id v83 = [v1 view];
  if (!v83)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v84 = v83;
  id v85 = [v83 leadingAnchor];

  id v86 = [v82 constraintEqualToAnchor:v85 constant:36.0];
  *(void *)(v2 + 184) = v86;
  id v87 = [v81 trailingAnchor];
  id v88 = [v1 view];
  if (!v88)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v89 = v88;
  id v90 = [v88 trailingAnchor];

  id v91 = [v87 constraintEqualToAnchor:v90 constant:-36.0];
  *(void *)(v2 + 192) = v91;
  id v92 = [v147 bottomAnchor];
  id v93 = [v81 topAnchor];
  id v94 = [v92 constraintEqualToAnchor:v93 constant:-20.0];

  *(void *)(v2 + 200) = v94;
  id v95 = [v147 leadingAnchor];
  id v96 = [v1 view];
  if (!v96)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id v97 = v96;
  id v98 = [v96 leadingAnchor];

  id v99 = [v95 constraintEqualToAnchor:v98 constant:36.0];
  *(void *)(v2 + 208) = v99;
  id v100 = [v147 trailingAnchor];
  id v101 = [v1 view];
  if (!v101)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v102 = v101;
  id v103 = [v101 trailingAnchor];

  id v104 = [v100 constraintEqualToAnchor:v103 constant:-36.0];
  *(void *)(v2 + 216) = v104;
  id v105 = [v81 bottomAnchor];
  id v106 = [v1 view];
  if (!v106)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  char v107 = v106;
  id v108 = [v106 safeAreaLayoutGuide];

  id v109 = [v108 bottomAnchor];
  id v110 = [v105 constraintEqualToAnchor:v109 constant:-12.0];

  *(void *)(v2 + 224) = v110;
  id v111 = [v81 leadingAnchor];
  id v112 = [v1 view];
  if (!v112)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v113 = v112;
  id v114 = [v112 leadingAnchor];

  id v115 = [v111 constraintEqualToAnchor:v114 constant:36.0];
  *(void *)(v2 + 232) = v115;
  id v116 = [v81 trailingAnchor];
  id v117 = [v1 view];
  if (!v117)
  {
LABEL_36:
    __break(1u);
    return;
  }
  uint64_t v118 = v117;
  uint64_t v119 = self;
  id v120 = [v118 trailingAnchor];

  id v121 = [v116 constraintEqualToAnchor:v120 constant:-36.0];
  *(void *)(v2 + 240) = v121;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v119 activateConstraints:isa];

  int v123 = v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_isShowingGlyph];
  uint64_t v124 = swift_allocObject();
  *(_OWORD *)(v124 + 16) = xmmword_100123C30;
  Class v125 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView];
  if (v123 == 1)
  {
    id v126 = [v125 heightAnchor];
    id v127 = [v126 constraintEqualToConstant:70.0];

    *(void *)(v124 + 32) = v127;
    id v128 = [v125 widthAnchor];
    id v129 = [v125 heightAnchor];
    id v130 = [v128 constraintEqualToAnchor:v129];

    *(void *)(v124 + 40) = v130;
    id v131 = [v125 centerXAnchor];
    id v132 = [v146 centerXAnchor];
    id v133 = [v131 constraintEqualToAnchor:v132];

    *(void *)(v124 + 48) = v133;
    id v134 = [v125 centerYAnchor];
    id v135 = [v146 centerYAnchor];
  }
  else
  {
    id v136 = [v125 topAnchor];
    id v137 = [v146 topAnchor];
    id v138 = [v136 constraintEqualToAnchor:v137];

    *(void *)(v124 + 32) = v138;
    id v139 = [v125 leadingAnchor];
    id v140 = [v146 leadingAnchor];
    id v141 = [v139 constraintEqualToAnchor:v140];

    *(void *)(v124 + 40) = v141;
    id v142 = [v125 trailingAnchor];
    id v143 = [v146 trailingAnchor];
    id v144 = [v142 constraintEqualToAnchor:v143];

    *(void *)(v124 + 48) = v144;
    id v134 = [v125 bottomAnchor];
    id v135 = [v146 bottomAnchor];
  }
  id v145 = [v134 constraintEqualToAnchor:v135];

  *(void *)(v124 + 56) = v145;
  specialized Array._endMutation()();
  Class v148 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v119 activateConstraints:v148];
}

uint64_t sub_10006B6E4()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView));

  return swift_release();
}

id sub_10006B798()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SelfServiceSuiteDescriptionViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for SelfServiceSuiteDescriptionViewController()
{
  return self;
}

uint64_t sub_10006B8B0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10006B8E8()
{
}

uint64_t sub_10006B8F0()
{
  return sub_10006A320();
}

void sub_10006B8F8()
{
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultOuterPadding] = 0x4034000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultInnerPadding] = 0x4028000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_defaultHorizontalPadding] = 0x4042000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButtonPointSize] = 0x403E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_glyphPointSize] = 0x4051800000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageScreenSpaceRatio] = 0x3FD6666666666666;
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_closeButton;
  *(void *)&v0[v1] = [self buttonWithType:0];
  uint64_t v2 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_startDiagnosticButton;
  *(void *)&v0[v2] = [self boldButton];
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_scrollView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIScrollView) init];
  uint64_t v5 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_titleLabel;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_subtitleLabel;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_detailsLabel;
  *(void *)&v0[v7] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v8 = OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_imageViewContainerView;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)UIView) init];
  v0[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_isShowingGlyph] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_10006BAEC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView);
  [v1 setHidesWhenStopped:0];
  id v2 = [self labelColor];
  [v1 setColor:v2];

  [v1 startAnimating];
  [v1 setAlpha:0.0];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView);
  [v3 setAlpha:0.0];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView);
  [v4 setContentMode:1];
  [v4 setAlpha:0.0];

  return [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
}

id sub_10006BC1C()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView]];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView]];
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView];

  return [v0 addSubview:v1];
}

void sub_10006BC90()
{
  uint64_t v1 = v0;
  id v42 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100124B80;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView];
  id v4 = [v3 topAnchor];
  id v5 = [v1 topAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  *(void *)(v2 + 32) = v6;
  id v7 = [v3 bottomAnchor];
  id v8 = [v1 bottomAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v2 + 40) = v9;
  id v10 = [v3 leadingAnchor];
  id v11 = [v1 leadingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v2 + 48) = v12;
  id v13 = [v3 trailingAnchor];
  id v14 = [v1 trailingAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v2 + 56) = v15;
  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
  id v17 = [v16 topAnchor];
  id v18 = [v1 topAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v2 + 64) = v19;
  id v20 = [v16 bottomAnchor];
  id v21 = [v1 bottomAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v2 + 72) = v22;
  id v23 = [v16 leadingAnchor];
  id v24 = [v1 leadingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v2 + 80) = v25;
  id v26 = [v16 trailingAnchor];
  id v27 = [v1 trailingAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v2 + 88) = v28;
  id v29 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView];
  id v30 = [v29 topAnchor];
  id v31 = [v1 topAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v2 + 96) = v32;
  id v33 = [v29 bottomAnchor];
  id v34 = [v1 bottomAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v2 + 104) = v35;
  id v36 = [v29 leadingAnchor];
  id v37 = [v1 leadingAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v2 + 112) = v38;
  id v39 = [v29 trailingAnchor];
  id v40 = [v1 trailingAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40];

  *(void *)(v2 + 120) = v41;
  specialized Array._endMutation()();
  sub_10005C04C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v42 activateConstraints:isa];
}

id sub_10006C1C8(char a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  id v6 = v5;
  switch(a1)
  {
    case 1:
      id v12 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView];
      [v12 alpha];
      if (v13 == 1.0)
      {
        if (a3)
        {
          [v12 alpha];
          if (v14 == 1.0)
          {
            uint64_t v15 = swift_allocObject();
            *(void *)(v15 + 16) = v12;
            uint64_t v16 = self;
            id v69 = sub_100042CF0;
            uint64_t v70 = v15;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v66 = 1107296256;
            id v67 = sub_1000358AC;
            id v68 = &unk_10014F9F8;
            id v17 = _Block_copy(&aBlock);
            id v18 = v12;
            swift_retain();
            swift_release();
            [v16 animateWithDuration:0x20000 delay:v17 options:0 animations:0.125 completion:0.0];
            _Block_release(v17);
            swift_release();
          }
        }
        else
        {
          [v12 setAlpha:0.0];
        }
      }
      sub_10006CB74(a3 & 1, a4, a5);
      id v50 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView];
      id result = [v50 alpha];
      if (v52 == 1.0)
      {
        if (a3)
        {
          id result = [v50 alpha];
          if (v53 == 1.0)
          {
            uint64_t v54 = swift_allocObject();
            *(void *)(v54 + 16) = v50;
            id v55 = self;
            id v69 = sub_100042CF0;
            uint64_t v70 = v54;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v66 = 1107296256;
            id v67 = sub_1000358AC;
            id v68 = &unk_10014F9A8;
            id v56 = _Block_copy(&aBlock);
            id v57 = v50;
            swift_retain();
            swift_release();
            [v55 animateWithDuration:0x20000 delay:v56 options:0 animations:0.125 completion:0.0];
            _Block_release(v56);
            return (id)swift_release();
          }
        }
        else
        {
          return [v50 setAlpha:0.0];
        }
      }
      return result;
    case 2:
      id v20 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView];
      [v20 alpha];
      if (v21 == 1.0)
      {
        if (a3)
        {
          [v20 alpha];
          if (v22 == 1.0)
          {
            uint64_t v23 = swift_allocObject();
            *(void *)(v23 + 16) = v20;
            id v69 = sub_100042CF0;
            uint64_t v70 = v23;
            id v64 = self;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v66 = 1107296256;
            id v67 = sub_1000358AC;
            id v68 = &unk_10014F958;
            id v24 = _Block_copy(&aBlock);
            id v25 = v20;
            swift_retain();
            swift_release();
            [v64 animateWithDuration:0x20000 delay:v24 options:0 animations:0.125 completion:0.0];
            _Block_release(v24);
            swift_release();
          }
          goto LABEL_20;
        }
        [v20 setAlpha:0.0];
      }
      else if (a3)
      {
LABEL_20:
        id v36 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = v6;
        id v38 = v6;
        sub_1000573C8(v36, sub_10006D1E4, v37);
        swift_release();
        goto LABEL_37;
      }
      id v58 = *(char **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
      [v58 setAlpha:0.0];
      [*(id *)&v58[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView] hideCheck];
LABEL_37:
      id v59 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView];
      [v59 setImage:a2];
      id result = [v59 alpha];
      if (v60 == 0.0)
      {
        if ((a3 & 1) == 0)
        {
          id result = [v59 setAlpha:1.0];
          goto LABEL_50;
        }
        return sub_1000571C8(v59, (id (*)())a4, a5);
      }
      return result;
    case 3:
      id v26 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView];
      [v26 alpha];
      if (v27 == 1.0)
      {
        if (a3)
        {
          [v26 alpha];
          if (v28 == 1.0)
          {
            uint64_t v29 = swift_allocObject();
            *(void *)(v29 + 16) = v26;
            id v30 = self;
            id v69 = sub_100042994;
            uint64_t v70 = v29;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v66 = 1107296256;
            id v67 = sub_1000358AC;
            id v68 = &unk_10014F8E0;
            id v31 = _Block_copy(&aBlock);
            id v32 = v26;
            swift_retain();
            swift_release();
            [v30 animateWithDuration:0x20000 delay:v31 options:0 animations:0.125 completion:0.0];
            _Block_release(v31);
            swift_release();
          }
          goto LABEL_22;
        }
        [v26 setAlpha:0.0];
      }
      else if (a3)
      {
LABEL_22:
        id v39 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = v6;
        id v41 = v6;
        sub_1000573C8(v39, sub_10006D1E4, v40);
        swift_release();
        goto LABEL_42;
      }
      id v61 = *(char **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
      [v61 setAlpha:0.0];
      [*(id *)&v61[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView] hideCheck];
LABEL_42:
      id v62 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView];
      id result = [v62 alpha];
      if (v63 == 1.0)
      {
        if (a3)
        {
          return sub_1000573C8(v62, (id (*)())a4, a5);
        }
        else
        {
          id result = [v62 setAlpha:0.0];
LABEL_50:
          if (a4) {
            return (id)a4(1);
          }
        }
      }
      return result;
    default:
      id v10 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView];
      [v10 alpha];
      if (v11 == 0.0)
      {
        if (a3)
        {
          sub_1000571C8(v10, (id (*)())a4, a5);
LABEL_18:
          id v33 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
          uint64_t v34 = swift_allocObject();
          *(void *)(v34 + 16) = v6;
          id v35 = v6;
          sub_1000573C8(v33, sub_10006D1E4, v34);
          swift_release();
          goto LABEL_26;
        }
        [v10 setAlpha:1.0];
        if (a4) {
          a4(1);
        }
      }
      else if (a3)
      {
        goto LABEL_18;
      }
      id v42 = *(char **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
      [v42 setAlpha:0.0];
      [*(id *)&v42[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView] hideCheck];
LABEL_26:
      id v43 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView];
      [v43 alpha];
      if (v44 == 1.0)
      {
        if (a3)
        {
          [v43 alpha];
          if (v45 == 1.0)
          {
            uint64_t v46 = swift_allocObject();
            *(void *)(v46 + 16) = v43;
            id v47 = self;
            id v69 = sub_100042CF0;
            uint64_t v70 = v46;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v66 = 1107296256;
            id v67 = sub_1000358AC;
            id v68 = &unk_10014FA48;
            id v48 = _Block_copy(&aBlock);
            id v49 = v43;
            swift_retain();
            swift_release();
            [v47 animateWithDuration:0x20000 delay:v48 options:0 animations:0.125 completion:0.0];
            _Block_release(v48);
            swift_release();
          }
        }
        else
        {
          [v43 setAlpha:0.0];
        }
      }
      return [v10 startAnimating];
  }
}

id sub_10006CB74(char a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  id v4 = v3;
  id v8 = *(char **)&v4[OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView];
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView;
  id v10 = [*(id *)&v8[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView] layer];
  [v10 cornerRadius];
  double v12 = v11;

  [v4 bounds];
  if (v12 == CGRectGetWidth(v18) * 0.5)
  {
    if (a1)
    {
LABEL_3:
      double v13 = (void *)swift_allocObject();
      v13[2] = v4;
      v13[3] = a2;
      void v13[4] = a3;
      double v14 = v4;
      sub_10003AF68((uint64_t)a2);
      sub_1000571C8(v8, (id (*)())sub_10006D1C0, (uint64_t)v13);
      return (id)swift_release();
    }
  }
  else
  {
    id v16 = [*(id *)&v8[v9] layer];
    [v4 bounds];
    [v16 setCornerRadius:CGRectGetWidth(v19) * 0.5];

    if (a1) {
      goto LABEL_3;
    }
  }
  [v8 setAlpha:1.0];
  id result = [*(id *)&v8[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView] showCheck];
  if (a2) {
    return (id)a2(1);
  }
  return result;
}

void sub_10006CD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = *(char **)(a2 + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView);
  [v6 setAlpha:1.0];
  id v7 = *(void **)&v6[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView];
  if (a3)
  {
    void v11[4] = a3;
    v11[5] = a4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1000E7710;
    v11[3] = &unk_10014F868;
    id v8 = _Block_copy(v11);
    id v9 = v7;
    sub_10003AF68(a3);
    swift_release();
  }
  else
  {
    id v10 = v7;
    id v8 = 0;
  }
  [v7 playCheckAnimationWithCompletion:v8];
  _Block_release(v8);
}

id sub_10006CE4C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView;
  id v10 = objc_allocWithZone((Class)UIActivityIndicatorView);
  double v11 = v4;
  *(void *)&v4[v9] = [v10 initWithActivityIndicatorStyle:100];
  uint64_t v12 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView;
  type metadata accessor for CheckmarkView();
  *(void *)&v11[v12] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v13 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIImageView) init];

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for TestRunnerIconView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_10006CF68(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_activityIndicatorView;
  id v4 = objc_allocWithZone((Class)UIActivityIndicatorView);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 initWithActivityIndicatorStyle:100];
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView;
  type metadata accessor for CheckmarkView();
  *(void *)&v5[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v7 = OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIImageView) init];

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for TestRunnerIconView();
  [super initWithCoder:a1];

  return v8;
}

void sub_10006D074()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_imageView);
}

id sub_10006D0C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TestRunnerIconView();
  return [super dealloc];
}

uint64_t type metadata accessor for TestRunnerIconView()
{
  return self;
}

uint64_t sub_10006D178()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10006D1C0(uint64_t a1)
{
  sub_10006CD40(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10006D1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006D1DC()
{
  return swift_release();
}

uint64_t sub_10006D1E8()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10006D220()
{
  uint64_t v1 = *(char **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11Diagnostics18TestRunnerIconView_checkmarkView);
  [v1 setAlpha:0.0];
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView];

  return [v2 hideCheck];
}

id sub_10006D304()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_100182E60);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics11GlyphButton_button];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel];
  [v6 setTextColor:*(void *)&v1[OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonLabelColor]];
  [v6 setTextAlignment:1];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v7 = &v1[OBJC_IVAR____TtC11Diagnostics11GlyphButton_action];
  unint64_t v8 = v1[OBJC_IVAR____TtC11Diagnostics11GlyphButton_action + 24];
  if (v8 != 7)
  {
    uint64_t v21 = 0;
    memset(v20, 0, sizeof(v20));
    id v9 = sub_1000ADAE8((uint64_t)v20, v8);
    [v5 setImage:v9 forState:0];

    id v10 = [v5 imageView];
    if (v10)
    {
      double v11 = v10;
      [v10 setContentMode:4];
    }
    id v12 = [v5 imageView];
    if (v12)
    {
      uint64_t v13 = v12;
      [v12 setClipsToBounds:0];
    }
    [v5 setClipsToBounds:0];
  }
  swift_bridgeObjectRetain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setText:v14];

  [v6 setFont:*((void *)v7 + 2)];
  id v15 = [self currentDevice];
  id v16 = [v15 userInterfaceIdiom];

  if (v16 == (id)6)
  {
    sub_10003C374(0, &qword_100182E78);
    static UIShape.circle.getter();
    uint64_t v17 = type metadata accessor for UIShape();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 0, 1, v17);
    CGRect v18 = (void *)UIHoverStyle.init(shape:)();
    [v5 setHoverStyle:v18];
  }
  [v5 addTarget:v1 action:"handleTouchUpInside" forControlEvents:64];
  return [v1 addTarget:v1 action:"handleTouchUpInside" forControlEvents:64];
}

id sub_10006D610()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics11GlyphButton_button]];
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel];

  return [v0 addSubview:v1];
}

void sub_10006D66C()
{
  uint64_t v1 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_button);
  id v2 = [v1 widthAnchor];
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonSize;
  id v4 = [v2 constraintEqualToConstant:*(double *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonSize)];

  uint64_t v5 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonWidthConstraint;
  uint64_t v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonWidthConstraint);
  *(void *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonWidthConstraint) = v4;
  uint64_t v7 = v5;
  id v48 = (char *)v5;

  id v8 = [v1 heightAnchor];
  id v9 = [v8 constraintEqualToConstant:*(double *)((char *)v0 + v3)];

  uint64_t v10 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonHeightConstraint;
  double v11 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonHeightConstraint);
  *(void *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonHeightConstraint) = v9;

  LODWORD(v12) = 1148829696;
  [*(id *)((char *)v0 + v7) setPriority:v12];
  LODWORD(v13) = 1148829696;
  [*(id *)((char *)v0 + v10) setPriority:v13];
  id v14 = [v1 topAnchor];
  id v15 = [v0 topAnchor];
  uint64_t v16 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGap;
  id v17 = [v14 constraintEqualToAnchor:v15 constant:*(double *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGap)];

  uint64_t v18 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTopMarginConstraint;
  CGRect v19 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTopMarginConstraint);
  *(void *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTopMarginConstraint) = v17;

  id v20 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel);
  id v21 = [v20 topAnchor];
  id v22 = [v1 bottomAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22 constant:*(double *)((char *)v0 + v16)];

  uint64_t v24 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGapConstraint;
  id v25 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGapConstraint);
  *(void *)((char *)v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGapConstraint) = v23;

  id v26 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100124BC0;
  double v28 = *(void **)((char *)v0 + v18);
  *(void *)(v27 + 32) = v28;
  id v29 = v28;
  id v30 = [v1 centerXAnchor];
  id v31 = [v0 centerXAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  id v33 = *(void **)((char *)v0 + v10);
  *(void *)(v27 + 40) = v32;
  *(void *)(v27 + 48) = v33;
  uint64_t v34 = *(void **)&v48[(void)v0];
  id v35 = *(void **)((char *)v0 + v24);
  *(void *)(v27 + 56) = v34;
  *(void *)(v27 + 64) = v35;
  id v36 = v33;
  id v37 = v34;
  id v38 = v35;
  id v39 = [v20 bottomAnchor];
  id v40 = [v0 bottomAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40];

  *(void *)(v27 + 72) = v41;
  id v42 = [v20 leadingAnchor];
  id v43 = [v0 leadingAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43];

  *(void *)(v27 + 80) = v44;
  id v45 = [v20 trailingAnchor];
  id v46 = [v0 trailingAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46];

  *(void *)(v27 + 88) = v47;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 activateConstraints:isa];
}

void sub_10006DB74()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_action + 16);
  swift_release();

  swift_bridgeObjectRelease();
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel);
}

id sub_10006DC38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GlyphButton();
  return [super dealloc];
}

uint64_t type metadata accessor for GlyphButton()
{
  return self;
}

id sub_10006DD58()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = self;
  v7[4] = sub_10006DEBC;
  v7[5] = v2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  void v7[2] = sub_1000358AC;
  void v7[3] = &unk_10014FAD8;
  id v4 = _Block_copy(v7);
  id v5 = v1;
  swift_retain();
  swift_release();
  [v3 animateWithDuration:0x20000 delay:v4 options:0 animations:0.125 completion:0.0];
  _Block_release(v4);
  swift_release();
  return [v5 setUserInteractionEnabled:0];
}

uint64_t sub_10006DE84()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10006DEBC()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel) setAlpha:0.5];
}

uint64_t sub_10006DEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006DEEC()
{
  return swift_release();
}

id sub_10006DEF4(_OWORD *a1)
{
  uint64_t v3 = sub_10003AFD0((uint64_t *)&unk_1001864E0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for UIButton.Configuration();
  uint64_t v6 = *(void *)(v35 - 8);
  uint64_t v7 = __chkstk_darwin(v35);
  uint64_t v34 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t v11 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonWidthConstraint;
  id v12 = objc_allocWithZone((Class)NSLayoutConstraint);
  double v13 = v1;
  *(void *)&v1[v11] = [v12 init];
  uint64_t v14 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonHeightConstraint;
  *(void *)&v13[v14] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v15 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTopMarginConstraint;
  *(void *)&v13[v15] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v16 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGapConstraint;
  *(void *)&v13[v16] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  *(void *)&v13[OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGap] = 0x4024000000000000;
  v13[OBJC_IVAR____TtC11Diagnostics11GlyphButton_topImageGapEnabled] = 1;
  *(void *)&v13[OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonSize] = 0x4046800000000000;
  uint64_t v17 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonLabelColor;
  *(void *)&v13[v17] = [self labelColor];
  uint64_t v18 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel;
  *(void *)&v13[v18] = [objc_allocWithZone((Class)UILabel) init];
  id v19 = [self defaultMetrics];
  id v20 = self;
  [v20 defaultFontSize];
  id v21 = [v20 systemFontOfSize:];
  id v22 = [v19 scaledFontForFont:v21];

  static UIButton.Configuration.plain()();
  *(void *)(swift_allocObject() + 16) = v22;
  id v23 = v22;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v24 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 0, 1, v24);
  UIButton.Configuration.titleTextAttributesTransformer.setter();

  sub_10003C374(0, &qword_100182E70);
  uint64_t v25 = v35;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v34, v10, v35);
  *(void *)&v13[OBJC_IVAR____TtC11Diagnostics11GlyphButton_button] = UIButton.init(configuration:primaryAction:)();
  long long v26 = a1[1];
  long long v37 = *a1;
  uint64_t v27 = &v13[OBJC_IVAR____TtC11Diagnostics11GlyphButton_action];
  long long v28 = a1[2];
  *(_OWORD *)uint64_t v27 = v37;
  *((_OWORD *)v27 + 1) = v26;
  id v29 = (void *)*((void *)a1 + 2);
  *((_OWORD *)v27 + 2) = v28;
  sub_100058114((uint64_t)&v37);
  id v30 = v29;
  swift_retain();

  id v31 = (objc_class *)type metadata accessor for GlyphButton();
  v36.receiver = v13;
  v36.super_class = v31;
  id v32 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v25);
  return v32;
}

void sub_10006E328()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonWidthConstraint;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v2 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonHeightConstraint;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTopMarginConstraint;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGapConstraint;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics11GlyphButton_imageAndLabelGap] = 0x4024000000000000;
  v0[OBJC_IVAR____TtC11Diagnostics11GlyphButton_topImageGapEnabled] = 1;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonSize] = 0x4046800000000000;
  uint64_t v5 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonLabelColor;
  *(void *)&v0[v5] = [self labelColor];
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics11GlyphButton_buttonTitleLabel;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UILabel) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10006E48C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id sub_10006E504()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v47 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock);
  [v13 lock];
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) & 1) == 0)
  {
    id v44 = v12;
    uint64_t v45 = v10;
    id v39 = v8;
    uint64_t v40 = v6;
    id v41 = v4;
    uint64_t v42 = v5;
    uint64_t v43 = v2;
    id v46 = v13;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 1;
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [v15 lastPathComponent];

    NSString v17 = v16;
    NSString v18 = v16;
    uint64_t v19 = v1;
    if (!v16)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRetain();
    id v20 = v16;
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v22 = self;
    id v23 = (void **)[v22 _systemImageNamed:v21];

    if (v23)
    {
      swift_bridgeObjectRelease();

      swift_getKeyPath();
      swift_getKeyPath();
      long long aBlock = v23;
      LOBYTE(v50) = 0;
      swift_retain();
    }
    else
    {
      id v24 = [v18 stringByDeletingLastPathComponent];

      uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v27 = v26;

      swift_bridgeObjectRelease();
      uint64_t v28 = HIBYTE(v27) & 0xF;
      if ((v27 & 0x2000000000000000) == 0) {
        uint64_t v28 = v25 & 0xFFFFFFFFFFFFLL;
      }
      if (v28)
      {
        swift_bridgeObjectRelease();
        id v29 = [v17 stringByDeletingLastPathComponent];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
      }
      uint64_t v30 = v45;
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v32 = (void **)[v22 imageNamed:v31];

      id v33 = v44;
      if (!v32)
      {
        sub_10003C374(0, (unint64_t *)&qword_100182E40);
        (*(void (**)(char *, void, uint64_t))(v30 + 104))(v33, enum case for DispatchQoS.QoSClass.default(_:), v9);
        uint64_t v34 = (void *)static OS_dispatch_queue.global(qos:)();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v9);
        double v53 = sub_10006F8D0;
        uint64_t v54 = v19;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v50 = 1107296256;
        id v51 = sub_1000358AC;
        double v52 = &unk_10014FBB8;
        uint64_t v35 = _Block_copy(&aBlock);
        swift_retain();
        objc_super v36 = v39;
        static DispatchQoS.unspecified.getter();
        id v48 = _swiftEmptyArrayStorage;
        sub_10006F8F0((unint64_t *)&qword_100183E90, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10003AFD0((uint64_t *)&unk_100182E50);
        sub_10003B014();
        long long v37 = v41;
        uint64_t v38 = v43;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v38);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v42);
        swift_release();
        return [v46 unlock];
      }
      swift_getKeyPath();
      swift_getKeyPath();
      long long aBlock = v32;
      LOBYTE(v50) = 0;
      swift_retain();
    }
    static Published.subscript.setter();
    return [v46 unlock];
  }

  return [v13 unlock];
}

void sub_10006EB64(uint64_t a1)
{
  if (qword_1001827A8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10018A3D0;
  uint64_t v3 = *(void **)(qword_10018A3D0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v3)
  {
    uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8);
    swift_retain_n();
    id v6 = [v3 serialNumber];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v9 = v8;

    uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager);
    swift_retain();
    sub_1000B6454(v7, v9, v5, v4, v10, a1);
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {
    swift_retain_n();
    static os_log_type_t.error.getter();
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    id v11 = (id)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
    swift_release_n();
  }
}

uint64_t sub_10006ED18(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v17 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  id v12 = (void *)static OS_dispatch_queue.main.getter();
  double v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  void v13[4] = a3;
  aBlock[4] = sub_10006FB00;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_10014FC08;
  uint64_t v14 = _Block_copy(aBlock);
  sub_10006FB0C(a1, a2);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10006F8F0((unint64_t *)&qword_100183E90, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v16);
}

void sub_10006EFF4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15)
  {
    sub_10006FB78();
    swift_allocError();
    void *v2 = 0xD00000000000001DLL;
    v2[1] = 0x800000010012C6A0;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
  }
  else
  {
    id v5 = objc_allocWithZone((Class)UIImage);
    sub_10006FB20(a1, a2);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v7 = [v5 initWithData:isa];

    if (v7)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      id v8 = v7;
      static Published.subscript.setter();
      sub_10006FBCC(a1, a2);
    }
    else
    {
      Class v9 = Data._bridgeToObjectiveC()().super.isa;
      uint64_t v10 = (void *)CGSVGDocumentCreateFromData();

      if (v10
        && (id v11 = [self _imageWithCGSVGDocument:v10],
            v10,
            v11))
      {
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        id v12 = v11;
        static Published.subscript.setter();
        sub_10006FBCC(a1, a2);
      }
      else
      {
        sub_10006FB78();
        swift_allocError();
        *double v13 = 0xD00000000000001BLL;
        v13[1] = 0x800000010012C6C0;
        swift_getKeyPath();
        swift_getKeyPath();
        swift_retain();
        static Published.subscript.setter();
        sub_10006FBCC(a1, a2);
      }
    }
  }
}

uint64_t sub_10006F2B8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11Diagnostics11ImageLoader__phase;
  uint64_t v2 = sub_10003AFD0(&qword_100184168);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_10006F380()
{
  return type metadata accessor for ImageLoader();
}

uint64_t type metadata accessor for ImageLoader()
{
  uint64_t result = qword_100184060;
  if (!qword_100184060) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006F3D4()
{
  sub_10006F484();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10006F484()
{
  if (!qword_100184070)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100184070);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for AsyncImagePhase(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10006F524(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_10006F524(id result, char a2)
{
  if (a2 == 1) {
    return (id)swift_errorRetain();
  }
  if (!a2) {
    return result;
  }
  return result;
}

void destroy for AsyncImagePhase(uint64_t a1)
{
}

uint64_t assignWithCopy for AsyncImagePhase(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10006F524(*(id *)a2, v4);
  id v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_10004F7F4(v5, v6);
  return a1;
}

uint64_t initializeWithTake for AsyncImagePhase(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for AsyncImagePhase(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_10004F7F4(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for AsyncImagePhase(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AsyncImagePhase(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10006F684(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_10006F69C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AsyncImagePhase()
{
  return &type metadata for AsyncImagePhase;
}

uint64_t sub_10006F6C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ImageLoader();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

Swift::Int sub_10006F704()
{
  return Hasher._finalize()();
}

uint64_t sub_10006F770()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10006F7D8()
{
  return Hasher._finalize()();
}

uint64_t sub_10006F840(void *a1, void *a2)
{
  uint64_t v2 = (void *)(*a1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  if (*v2 == *(void *)(*a2 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator)
    && v2[1] == *(void *)(*a2 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8))
  {
    return 1;
  }
  else
  {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t sub_10006F87C()
{
  return sub_10006F8F0(&qword_100184158, (void (*)(uint64_t))type metadata accessor for ImageLoader);
}

void *sub_10006F8C4()
{
  return &protocol witness table for ObservableObjectPublisher;
}

void sub_10006F8D0()
{
  sub_10006EB64(v0);
}

uint64_t sub_10006F8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006F8E8()
{
  return swift_release();
}

uint64_t sub_10006F8F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10006F938@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10006F9C4(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10006F524(v1, v2);
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t sub_10006FA58()
{
  unint64_t v1 = *(void *)(v0 + 24);
  if (v1 >> 60 != 15) {
    sub_10006FAA8(*(void *)(v0 + 16), v1);
  }
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10006FAA8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void sub_10006FB00()
{
  sub_10006EFF4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10006FB0C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10006FB20(a1, a2);
  }
  return a1;
}

uint64_t sub_10006FB20(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

unint64_t sub_10006FB78()
{
  unint64_t result = qword_100184160;
  if (!qword_100184160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184160);
  }
  return result;
}

uint64_t sub_10006FBCC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10006FAA8(a1, a2);
  }
  return a1;
}

uint64_t sub_10006FBEC(char a1, int a2, uint64_t a3, uint64_t a4)
{
  int v20 = a2;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  double v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = v4;
  *(unsigned char *)(v15 + 32) = v20;
  *(void *)(v15 + 40) = a3;
  *(void *)(v15 + 48) = a4;
  aBlock[4] = sub_100070268;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_10014FC80;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v4;
  sub_10003AF68(a3);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v10, v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v21);
}

void sub_10006FF68(char a1, void *a2, char a3, void *a4, uint64_t a5)
{
  id v10 = [self _applicationKeyWindow];
  if (v10)
  {
    uint64_t v11 = v10;
    sub_10003C374(0, (unint64_t *)&unk_100184170);
    id v12 = [v11 rootViewController];

    sub_1000CADAC(v12);
    uint64_t v14 = v13;

    if (a1)
    {
      id v15 = [a2 popoverPresentationController];
      if (v15)
      {
        uint64_t v16 = v15;
        id v17 = [v14 view];
        [v16 setSourceView:v17];
      }
    }
    if (v14)
    {
      if (a4)
      {
        v18[4] = a4;
        v18[5] = a5;
        v18[0] = _NSConcreteStackBlock;
        v18[1] = 1107296256;
        void v18[2] = sub_1000358AC;
        v18[3] = &unk_10014FCA8;
        a4 = _Block_copy(v18);
        swift_retain();
        swift_release();
      }
      [v14 presentViewController:a2 animated:a3 & 1 completion:a4];
      _Block_release(a4);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000701E8()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100070220()
{
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100070268()
{
  sub_10006FF68(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10007027C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007028C()
{
  return swift_release();
}

void *destroy for Alert(uint64_t a1)
{
  return sub_1000648CC(*(void **)a1, *(void **)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t initializeWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_100064830(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_100064830(*(void *)a2, v4, v5, v6, v7, v8, v9);
  id v10 = *(void **)a1;
  uint64_t v11 = *(void **)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_1000648CC(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 initializeWithTake for Alert(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Alert(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  long long v4 = *(void **)a1;
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_1000648CC(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for Alert(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Alert(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1000704D4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 48) <= 1u) {
    return *(unsigned __int8 *)(a1 + 48);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1000704EC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Alert()
{
  return &type metadata for Alert;
}

void sub_100070524(int a1)
{
  uint64_t v31 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  unsigned int v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  long long v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v28 - v11;
  id v13 = [self standardUserDefaults];
  NSString v14 = String._bridgeToObjectiveC()();
  unsigned __int8 v15 = [v13 BOOLForKey:v14];

  if ((v15 & 1) != 0
    || (unsigned int v16 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive"), swift_unknownObjectRelease(), v16))
  {
    sub_1000711E0();
    id v17 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    int v30 = a1;
    id v29 = *(void (**)(char *, uint64_t))(v7 + 8);
    v29(v10, v6);
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = v35;
    sub_1000647D4(v35, v18 + 16);
    uint64_t v40 = sub_100071264;
    uint64_t v41 = v18;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v37 = 1107296256;
    uint64_t v38 = sub_1000358AC;
    unint64_t v39 = (unint64_t)&unk_10014FDB0;
    int v20 = _Block_copy(&aBlock);
    sub_100064968(v19, (void (*)(void, void, void, void, void, void, void))sub_100064830);
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)&_swiftEmptyArrayStorage;
    sub_10003AF78();
    sub_10003AFD0((uint64_t *)&unk_100182E50);
    sub_10003B014();
    uint64_t v21 = v31;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v20);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v3, v21);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
    v29(v12, v6);
    LOBYTE(a1) = v30;
  }
  uint64_t v22 = v35;
  sub_1000647D4(v35, (uint64_t)&aBlock);
  if (v42 < 2u
    || (unint64_t)v40 | v41 | (unint64_t)aBlock | v39 | (unint64_t)v38 | v37
    && (aBlock != (void **)1 || (unint64_t)v40 | v41 | v39 | (unint64_t)v38 | v37))
  {
    type metadata accessor for ManagedAlertController();
    swift_initStackObject();
    sub_100064968(v22, (void (*)(void, void, void, void, void, void, void))sub_100064830);
    sub_1000E17E0(v22);
    if (a1) {
      [*(id *)(v23 + 16) showOnTopWithAnimated:1 completion:0];
    }
    else {
      sub_1000E27C0();
    }
    swift_release();
  }
  else if (!qword_10018A3C8)
  {
    id v24 = objc_allocWithZone((Class)type metadata accessor for FullscreenAlertViewController());
    sub_100064968(v22, (void (*)(void, void, void, void, void, void, void))sub_100064830);
    id v25 = sub_1000646E8(v22);
    sub_100064968(v22, (void (*)(void, void, void, void, void, void, void))sub_1000648CC);
    unint64_t v26 = (void *)qword_10018A3C8;
    qword_10018A3C8 = (uint64_t)v25;
    id v27 = v25;

    if (a1) {
      [v27 showOnTopWithAnimated:1 completion:0];
    }
    else {
      [v27 scheduleModalPresentationWithPriority:2 animated:1 presentationCompletion:0];
    }
  }
}

id sub_100070B14(char a1)
{
  sub_1000647D4(v1, (uint64_t)&v25);
  char v3 = v25;
  if (v31)
  {
    if (v31 == 1)
    {
      unint64_t v4 = 0;
      unint64_t v5 = 0;
    }
    else
    {
      unint64_t v4 = 0xD000000000000020;
      unint64_t v5 = 0xD000000000000015;
      if (v29 | v30 | v25 | v28 | v27 | v26)
      {
        unint64_t v13 = v29 | v30 | v28 | v27 | v26;
        if (v25 != 1 || v13)
        {
          if (v25 != 2 || v13)
          {
            unint64_t v5 = 0xD00000000000001ELL;
            if (v25 != 3 || v13)
            {
              if ((v25 != 4 || v13) && v25 == 5 && !v13)
              {
                unint64_t v5 = 0xD00000000000001ALL;
                unint64_t v4 = 0xD00000000000001CLL;
              }
            }
            else
            {
              unint64_t v4 = 0xD00000000000001ELL;
              unint64_t v5 = 0xD00000000000001CLL;
            }
          }
          else
          {
            unint64_t v4 = 0xD000000000000017;
          }
        }
        else
        {
          id result = (id)MobileGestalt_get_current_device();
          if (!result)
          {
            __break(1u);
            return result;
          }
          unsigned __int8 v15 = result;
          MobileGestalt_get_wapiCapability();

          unsigned int v16 = self;
          swift_bridgeObjectRetain();
          unsigned int v17 = objc_msgSend(objc_msgSend(v16, "currentPlatform"), "isCheckerBoardActive");
          swift_unknownObjectRelease();
          if (v17)
          {
            v18._uint64_t countAndFlagsBits = 4342623;
            v18._object = (void *)0xE300000000000000;
            String.append(_:)(v18);
          }
          swift_bridgeObjectRelease();
          unint64_t v5 = 0xD000000000000019;
          unint64_t v4 = 0xD000000000000020;
        }
      }
      else
      {
        unint64_t v4 = 0x535F464F5F54554FLL;
      }
    }
  }
  else
  {
    uint64_t v6 = (void *)v26;
    uint64_t v7 = self;
    id v8 = v6;
    id v9 = [v7 currentDevice];
    id v10 = [v9 userInterfaceIdiom];

    if (v10 == (id)1 && v6 == 0)
    {
      unint64_t v4 = 0xD000000000000020;
      unint64_t v5 = 0xD000000000000016;
      unsigned int v19 = [self currentPlatform].isCheckerBoardActive;
      swift_unknownObjectRelease();
      if (v19)
      {
        v20._uint64_t countAndFlagsBits = 4342623;
        v20._object = (void *)0xE300000000000000;
        String.append(_:)(v20);
        unint64_t v5 = 0xD000000000000016;
      }
      goto LABEL_40;
    }
    unint64_t v5 = 0xD000000000000020;
    if (sub_1000A384C(v3) == 0x22656D6F4822 && v12 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        unint64_t v5 = 0xD00000000000001FLL;
        unsigned int v22 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isCheckerBoardActive");
        swift_unknownObjectRelease();
        if (v22)
        {
          v23._uint64_t countAndFlagsBits = 4342623;
          v23._object = (void *)0xE300000000000000;
          String.append(_:)(v23);

          unint64_t v5 = 0xD00000000000001FLL;
        }
        else
        {
        }
        unint64_t v4 = 0;
        goto LABEL_40;
      }
    }

    unint64_t v4 = 0;
  }
LABEL_40:
  if (a1) {
    unint64_t v24 = v4;
  }
  else {
    unint64_t v24 = v5;
  }
  swift_bridgeObjectRelease();
  return (id)v24;
}

void sub_100070FDC(uint64_t a1)
{
  sub_1000647D4(a1, (uint64_t)&v5);
  if (v11 >= 2u)
  {
    if (v9 | v10 | v5 | v8 | v7 | v6)
    {
      uint64_t v2 = v9 | v10 | v8 | v7 | v6;
      if (v5 != 1 || v2)
      {
        BOOL v3 = (v5 & 0xFFFFFFFFFFFFFFFELL) == 2 || v5 == 4;
        char v1 = 17;
        if (!v3 || v2)
        {
          if (v2) {
            BOOL v4 = 0;
          }
          else {
            BOOL v4 = v5 == 5;
          }
          if (v4) {
            char v1 = 18;
          }
          else {
            char v1 = 17;
          }
        }
      }
      else
      {
        char v1 = 15;
      }
    }
    else
    {
      char v1 = 16;
    }
  }
  else
  {
    char v1 = 18;
  }
  sub_1000A795C(v1);
}

BOOL sub_100071084(uint64_t *a1, uint64_t *a2)
{
  int v2 = *((unsigned __int8 *)a2 + 48);
  if (!*((unsigned char *)a1 + 48)) {
    return v2 == 0;
  }
  if (*((unsigned char *)a1 + 48) == 1) {
    return v2 == 1;
  }
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v10 = a1[3];
  uint64_t v11 = *a1;
  uint64_t v12 = a1[4] | a1[5];
  uint64_t v13 = a1[2] | a1[1];
  if (!(v12 | v11 | v10 | v13)) {
    return v2 == 2 && !(v7 | v4 | v5 | v6 | v9 | v8);
  }
  uint64_t v14 = v12 | v10 | v13;
  if (v11 != 1 || v14)
  {
    if (v11 != 2 || v14)
    {
      if (v11 != 3 || v14)
      {
        if (v11 != 4 || v14)
        {
          if (v11 != 5 || v14)
          {
            if (v2 != 2 || v5 != 6) {
              return 0;
            }
          }
          else if (v2 != 2 || v5 != 5)
          {
            return 0;
          }
        }
        else if (v2 != 2 || v5 != 4)
        {
          return 0;
        }
      }
      else if (v2 != 2 || v5 != 3)
      {
        return 0;
      }
    }
    else if (v2 != 2 || v5 != 2)
    {
      return 0;
    }
  }
  else if (v2 != 2 || v5 != 1)
  {
    return 0;
  }
  return !(v7 | v4 | v6 | v9 | v8);
}

unint64_t sub_1000711E0()
{
  unint64_t result = qword_100182E40;
  if (!qword_100182E40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100182E40);
  }
  return result;
}

uint64_t sub_100071220()
{
  sub_1000648CC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  return _swift_deallocObject(v0, 65, 7);
}

void sub_100071264()
{
  sub_100070FDC(v0 + 16);
}

uint64_t sub_10007126C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007127C()
{
  return swift_release();
}

id sub_100071284(void *a1)
{
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_100183190);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v90 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v88 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v86 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  id v87 = (char *)&v84 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  id v92 = (char *)&v84 - v14;
  __chkstk_darwin(v13);
  unsigned int v16 = (char *)&v84 - v15;
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [a1 dequeueReusableCellWithIdentifier:v17];

  if (!v18)
  {
    id v19 = objc_allocWithZone((Class)UITableViewCell);
    NSString v20 = String._bridgeToObjectiveC()();
    id v18 = [v19 initWithStyle:3 reuseIdentifier:v20];
  }
  uint64_t v89 = (char **)v5;
  [v18 setAccessoryType:0];
  char v21 = self;
  id v22 = v18;
  id v85 = v21;
  id v23 = [v21 systemBackgroundColor];
  [v22 setBackgroundColor:v23];

  id v24 = [v22 detailTextLabel];
  if (v24)
  {
    uint64_t v25 = v24;
    NSString v26 = String._bridgeToObjectiveC()();
    [v25 setText:v26];
  }
  uint64_t v27 = &selRef_setPriority_;
  id v28 = [v22 textLabel];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = self;
    [v30 defaultFontSize];
    id v31 = [v30 systemFontOfSize:];
    [v29 setFont:v31];
  }
  id v94 = [objc_allocWithZone((Class)NSFileManager) init];
  uint64_t v32 = sub_100074AD0();
  unint64_t v33 = IndexPath.row.getter();
  if ((v33 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v33 >= *(void *)(v32 + 16))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v93 = v8;
  unint64_t v34 = v32
      + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
      + *(void *)(v8 + 72) * v33;
  id v91 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  v91(v16, v34, v7);
  swift_bridgeObjectRelease();
  id v35 = [v22 textLabel];
  id v36 = v94;
  if (v35)
  {
    uint64_t v37 = v35;
    URL.path.getter();
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v39 = [v36 displayNameAtPath:v38];

    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    sub_100075D14(v40, v42);
    swift_bridgeObjectRelease();
    NSString v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v37 setText:v43];
  }
  URL.path.getter();
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)&long long v95 = 0;
  id v45 = [v36 attributesOfItemAtPath:v44 error:&v95];

  id v46 = (void *)v95;
  if (!v45)
  {
    id v52 = (id)v95;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_100123B50;
    uint64_t v54 = URL.path.getter();
    uint64_t v56 = v55;
    *(void *)(v53 + 56) = &type metadata for String;
    *(void *)(v53 + 64) = sub_10004D9B4();
    *(void *)(v53 + 32) = v54;
    *(void *)(v53 + 40) = v56;
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    id v57 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    swift_errorRelease();
    uint64_t v32 = (uint64_t)v92;
    goto LABEL_29;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_100077CFC((unint64_t *)&unk_100184210, type metadata accessor for FileAttributeKey);
  uint64_t v47 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v48 = v46;

  if (*(void *)(v47 + 16))
  {
    id v49 = NSFileModificationDate;
    uint64_t v50 = sub_10007D984();
    uint64_t v32 = (uint64_t)v92;
    uint64_t v27 = v89;
    if (v51)
    {
      sub_10003C5D8(*(void *)(v47 + 56) + 32 * v50, (uint64_t)&v95);
    }
    else
    {
      long long v95 = 0u;
      long long v96 = 0u;
    }
  }
  else
  {
    long long v95 = 0u;
    long long v96 = 0u;
    uint64_t v32 = (uint64_t)v92;
    uint64_t v27 = v89;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v96 + 1))
  {
    int v58 = swift_dynamicCast();
    uint64_t v59 = v90;
    (*(void (**)(char *, void, uint64_t, char **))(v90 + 56))(v4, v58 ^ 1u, 1, v27);
    if ((*(unsigned int (**)(char *, uint64_t, char **))(v59 + 48))(v4, 1, v27) != 1)
    {
      (*(void (**)(char *, char *, char **))(v59 + 32))(v88, v4, v27);
      double v60 = (char *)[v22 detailTextLabel];
      if (!v60)
      {
LABEL_26:
        (*(void (**)(char *, char **))(v59 + 8))(v88, v27);
        goto LABEL_29;
      }
      uint64_t v4 = v60;
      if (qword_100182830 == -1)
      {
LABEL_23:
        id v61 = (void *)qword_100186070;
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        NSString v63 = [v61 stringFromDate:isa];

        if (!v63)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v63 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        [v4 setText:v63];

        uint64_t v59 = v90;
        goto LABEL_26;
      }
LABEL_43:
      swift_once();
      goto LABEL_23;
    }
  }
  else
  {
    sub_10003C44C((uint64_t)&v95, &qword_100183E70);
    (*(void (**)(char *, uint64_t, uint64_t, char **))(v90 + 56))(v4, 1, 1, v27);
  }
  sub_10003C44C((uint64_t)v4, (uint64_t *)&unk_100183190);
LABEL_29:
  URL.path.getter();
  NSString v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v65 = v94;
  unsigned int v66 = [v94 fileExistsAtPath:v64];

  v91((char *)v32, (unint64_t)v16, v7);
  if (v66)
  {
    id v67 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
    v67(v32, v7);
    id v68 = &selRef_setPriority_;
LABEL_36:
    [v22 v68[82] 1];
    goto LABEL_37;
  }
  uint64_t v69 = URL.absoluteString.getter();
  uint64_t v71 = v70;
  id v72 = [self defaultManager];
  id v73 = [v72 temporaryDirectory];

  id v74 = v86;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  id v75 = v87;
  URL.appendingPathComponent(_:)();
  id v67 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  v67((uint64_t)v74, v7);
  uint64_t v76 = URL.absoluteString.getter();
  uint64_t v78 = v77;
  v67((uint64_t)v75, v7);
  if (v69 == v76 && v71 == v78)
  {
    swift_bridgeObjectRelease_n();
    v67((uint64_t)v92, v7);
LABEL_35:
    id v68 = &selRef_setPriority_;
    id v65 = v94;
    goto LABEL_36;
  }
  char v79 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v67((uint64_t)v92, v7);
  if (v79) {
    goto LABEL_35;
  }
  [v22 setAccessoryType:0];
  id v81 = [v22 textLabel];
  if (v81)
  {
    id v82 = v81;
    id v83 = [v85 secondaryLabelColor];
    [v82 setTextColor:v83];
  }
  id v65 = v94;
LABEL_37:
  v67((uint64_t)v16, v7);

  return v22;
}

id sub_100071DDC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0((uint64_t *)&unk_100183190);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v96 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v93 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v101 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  id v94 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  long long v95 = (char *)&v93 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  id v99 = (char *)&v93 - v15;
  __chkstk_darwin(v14);
  NSString v17 = (char *)&v93 - v16;
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [a1 dequeueReusableCellWithIdentifier:v18];

  if (!v19)
  {
    id v20 = objc_allocWithZone((Class)UITableViewCell);
    NSString v21 = String._bridgeToObjectiveC()();
    id v19 = [v20 initWithStyle:3 reuseIdentifier:v21];
  }
  [v19 setAccessoryType:0];
  id v22 = self;
  id v23 = v19;
  id v98 = v22;
  id v24 = [v22 systemBackgroundColor];
  [v23 setBackgroundColor:v24];

  id v25 = [v23 detailTextLabel];
  if (v25)
  {
    NSString v26 = v25;
    NSString v27 = String._bridgeToObjectiveC()();
    [v26 setText:v27];
  }
  id v28 = [v23 textLabel];
  if (v28)
  {
    uint64_t v29 = v28;
    uint64_t v30 = self;
    [v30 defaultFontSize];
    id v31 = [v30 systemFontOfSize:];
    [v29 setFont:v31];
  }
  id v32 = [objc_allocWithZone((Class)NSFileManager) init];
  uint64_t v33 = sub_1000753F8();
  unint64_t v34 = IndexPath.row.getter();
  if ((v34 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v34 >= *(void *)(v33 + 16))
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  unint64_t v35 = v33
      + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))
      + *(void *)(v101 + 72) * v34;
  id v97 = *(void (**)(char *, unint64_t, uint64_t))(v101 + 16);
  v97(v17, v35, v9);
  swift_bridgeObjectRelease();
  id v36 = [v23 textLabel];
  id v100 = v32;
  if (v36)
  {
    uint64_t v37 = v36;
    URL.path.getter();
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v39 = [v32 displayNameAtPath:v38];

    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    sub_100075D14(v40, v42);
    id v32 = v100;
    swift_bridgeObjectRelease();
    NSString v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v37 setText:v43];
  }
  URL.path.getter();
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)&long long v102 = 0;
  id v45 = [v32 attributesOfItemAtPath:v44 error:&v102];

  id v46 = (void *)v102;
  if (!v45)
  {
    id v52 = (id)v102;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_100123B50;
    uint64_t v54 = URL.path.getter();
    uint64_t v56 = v55;
    *(void *)(v53 + 56) = &type metadata for String;
    *(void *)(v53 + 64) = sub_10004D9B4();
    *(void *)(v53 + 32) = v54;
    *(void *)(v53 + 40) = v56;
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    id v57 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    swift_errorRelease();
    goto LABEL_29;
  }
  type metadata accessor for FileAttributeKey(0);
  sub_100077CFC((unint64_t *)&unk_100184210, type metadata accessor for FileAttributeKey);
  uint64_t v47 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v48 = v46;

  if (*(void *)(v47 + 16))
  {
    id v49 = NSFileModificationDate;
    uint64_t v50 = sub_10007D984();
    a2 = v96;
    if (v51)
    {
      sub_10003C5D8(*(void *)(v47 + 56) + 32 * v50, (uint64_t)&v102);
    }
    else
    {
      long long v102 = 0u;
      long long v103 = 0u;
    }
  }
  else
  {
    long long v102 = 0u;
    long long v103 = 0u;
    a2 = v96;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v103 + 1))
  {
    int v58 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(a2 + 56))(v6, v58 ^ 1u, 1, v7);
    int v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a2 + 48))(v6, 1, v7);
    id v32 = v100;
    if (v59 != 1)
    {
      double v60 = v93;
      (*(void (**)(char *, char *, uint64_t))(a2 + 32))(v93, v6, v7);
      id v61 = (char *)[v23 detailTextLabel];
      if (!v61)
      {
LABEL_26:
        (*(void (**)(char *, uint64_t))(a2 + 8))(v60, v7);
        goto LABEL_29;
      }
      uint64_t v6 = v61;
      if (qword_100182830 == -1)
      {
LABEL_23:
        id v62 = (void *)qword_100186070;
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        NSString v64 = [v62 stringFromDate:isa];

        if (!v64)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v64 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        [v6 setText:v64];

        id v32 = v100;
        double v60 = v93;
        goto LABEL_26;
      }
LABEL_46:
      swift_once();
      goto LABEL_23;
    }
  }
  else
  {
    sub_10003C44C((uint64_t)&v102, &qword_100183E70);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(a2 + 56))(v6, 1, 1, v7);
    id v32 = v100;
  }
  sub_10003C44C((uint64_t)v6, (uint64_t *)&unk_100183190);
LABEL_29:
  URL.path.getter();
  NSString v65 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v66 = [v32 fileExistsAtPath:v65];

  id v67 = v99;
  v97(v99, (unint64_t)v17, v9);
  if (v66)
  {
    id v68 = *(void (**)(char *, uint64_t))(v101 + 8);
    v68(v67, v9);
    uint64_t v69 = &selRef_setPriority_;
    id v70 = v98;
  }
  else
  {
    uint64_t v71 = URL.absoluteString.getter();
    uint64_t v73 = v72;
    id v74 = [self defaultManager];
    id v75 = [v74 temporaryDirectory];

    uint64_t v76 = v94;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v77 = v95;
    URL.appendingPathComponent(_:)();
    id v68 = *(void (**)(char *, uint64_t))(v101 + 8);
    v68(v76, v9);
    uint64_t v78 = URL.absoluteString.getter();
    uint64_t v80 = v79;
    v68(v77, v9);
    if (v71 == v78 && v73 == v80)
    {
      swift_bridgeObjectRelease_n();
      v68(v99, v9);
    }
    else
    {
      char v81 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v68(v99, v9);
      if ((v81 & 1) == 0)
      {
        [v23 setAccessoryType:0];
        id v90 = [v23 textLabel];
        uint64_t v69 = &selRef_setPriority_;
        if (v90)
        {
          id v91 = v90;
          id v70 = v98;
          id v92 = [v98 secondaryLabelColor];
          [v91 setTextColor:v92];
        }
        else
        {
          id v70 = v98;
        }
        goto LABEL_37;
      }
    }
    uint64_t v69 = &selRef_setPriority_;
    id v70 = v98;
  }
  [v23 setAccessoryType:1];
LABEL_37:
  id v82 = v23;
  id v83 = [v70 clearColor];
  [v82 setBackgroundColor:v83];

  id v84 = [self defaultMetrics];
  id v85 = [self systemFontOfSize:17.0 weight:UIFontWeightBold];
  id v86 = [v84 scaledFontForFont:v85];

  id v87 = [v82 textLabel];
  if (v87)
  {
    id v88 = v87;
    [v87 v69[4] v86];

    v68(v17, v9);
  }
  else
  {
    v68(v17, v9);
  }
  return v82;
}

BOOL sub_100072A74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_100072A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10003AFD0(&qword_100185000);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(68);
  v5._object = (void *)0x800000010012CC30;
  v5._uint64_t countAndFlagsBits = 0xD000000000000041;
  String.append(_:)(v5);
  id v6 = [self sharedManager];
  id v7 = [v6 snapshot];

  id v8 = [v7 dedSessionIdentifier];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  v12._uint64_t countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._uint64_t countAndFlagsBits = 47;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v4, v14);
  }
  __break(1u);
  return result;
}

char *sub_100072C74(uint64_t a1, uint64_t a2)
{
  Swift::String v5 = (char *)[objc_allocWithZone(v2) init];
  id v6 = (uint64_t *)&v5[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  uint64_t v7 = *(void *)&v5[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  uint64_t *v6 = a1;
  v6[1] = a2;
  id v8 = v5;
  sub_10003AF68(a1);
  sub_10003B0B8(v7);
  id v9 = *(id *)&v8[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView];
  [v9 setDataSource:v8];
  sub_10003B0B8(a1);

  return v8;
}

void sub_100072D30(char a1)
{
  uint64_t v2 = v1;
  v36.receiver = v2;
  v36.super_class = (Class)type metadata accessor for FileReviewingTableViewController();
  [super viewWillAppear:a1 & 1];
  id v4 = (id)MobileGestalt_get_current_device();
  if (!v4) {
    goto LABEL_33;
  }
  Swift::String v5 = v4;
  int wapiCapability = MobileGestalt_get_wapiCapability();

  id v7 = [self sharedManager];
  id v8 = [v7 snapshot];

  id v9 = [v8 retriesRemaining];
  unint64_t v10 = 0xD000000000000029;
  if (wapiCapability) {
    unint64_t v10 = 0xD00000000000002ELL;
  }
  unint64_t v11 = 0x800000010012CD10;
  if (wapiCapability) {
    unint64_t v11 = 0x800000010012CD40;
  }
  unint64_t v12 = 0xD000000000000025;
  if (!wapiCapability) {
    unint64_t v12 = 0xD000000000000020;
  }
  unint64_t v13 = 0x800000010012CC80;
  if (wapiCapability) {
    unint64_t v13 = 0x800000010012CCE0;
  }
  BOOL v14 = v9 == 0;
  if (v9) {
    uint64_t v15 = v12;
  }
  else {
    uint64_t v15 = v10;
  }
  if (v14) {
    uint64_t v16 = (void *)v11;
  }
  else {
    uint64_t v16 = (void *)v13;
  }
  uint64_t v17 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000021, (void *)0x800000010012CCB0);
  NSString v18 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText];
  *NSString v18 = v17;
  v18[1] = v19;
  swift_bridgeObjectRelease();
  id v20 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel];
  if (v18[1])
  {
    swift_bridgeObjectRetain();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v21 = 0;
  }
  [v20 setText:v21];

  uint64_t v22 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v15, v16);
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  id v25 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
  uint64_t *v25 = v22;
  v25[1] = v24;
  swift_bridgeObjectRelease();
  NSString v26 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
  swift_bridgeObjectRetain();
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v26 setText:v27];

  id v28 = [v2 navigationController];
  if (!v28) {
    goto LABEL_29;
  }
  uint64_t v29 = v28;
  id v30 = [v28 viewControllers];

  sub_10003C374(0, (unint64_t *)&qword_100183670);
  unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_22;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_28;
  }
LABEL_22:
  if ((v31 & 0xC000000000000001) != 0)
  {
    uint64_t v32 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    if ((char *)v32 == v2)
    {
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v2;
      unint64_t v34 = v2;
      sub_100095068((uint64_t)sub_100077E10, v33);
      swift_release();
LABEL_30:
      [*(id *)&v2[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView] reloadData];
      sub_100073304();
      return;
    }
LABEL_29:
    sub_100095068(0, 0);
    goto LABEL_30;
  }
  if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v32 = *(void *)(v31 + 32);
    goto LABEL_25;
  }
  __break(1u);
LABEL_33:
  __break(1u);
}

void sub_10007313C(void *a1)
{
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  id v4 = a1;
  id v5 = sub_100095158((uint64_t)sub_100077E18, v2, (uint64_t)sub_100077E20, v3);
  swift_release();
  swift_release();
  [v4 presentViewController:v5 animated:1 completion:0];
}

id sub_100073228(int a1, char *a2)
{
  id result = [a2 dismissViewControllerAnimated:1 completion:0];
  id v4 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  if (v4)
  {
    swift_retain();
    v4(2);
    return (id)sub_10003B0B8((uint64_t)v4);
  }
  return result;
}

void sub_100073304()
{
  id v1 = [self sharedInstance];
  id v2 = [self sharedManager];
  id v3 = [v2 snapshot];

  NSString v4 = [v3 dedSessionIdentifier];
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v5 = [v1 sessionForIdentifier:v4];

  if (v5)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v0;
    v10[4] = sub_100077E08;
    void v10[5] = v6;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    _DWORD v10[2] = sub_100073C2C;
    _OWORD v10[3] = &unk_10014FFE8;
    id v7 = _Block_copy(v10);
    id v8 = v5;
    id v9 = v0;
    swift_release();
    [v8 getSessionStatusWithCompletion:v7];

    _Block_release(v7);
  }
}

id sub_1000734C0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  uint64_t v4 = sub_10003AFD0(&qword_100185000);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  id v62 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  id v67 = (char *)&v47 - v11;
  __chkstk_darwin(v10);
  uint64_t v73 = (char *)&v47 - v12;
  if (a1 >> 62) {
    goto LABEL_41;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = v13; i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v15 = 0;
    NSString v63 = (unint64_t *)(v47 + OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_remoteFiles);
    unint64_t v52 = a1 & 0xC000000000000001;
    uint64_t v49 = a1 & 0xFFFFFFFFFFFFFF8;
    unint64_t v48 = a1 + 32;
    unint64_t v16 = v61 + 56;
    id v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    uint64_t v69 = v61 + 16;
    uint64_t v71 = (void (**)(char *, char *, uint64_t))(v61 + 32);
    uint64_t v72 = (void (**)(char *, uint64_t))(v61 + 8);
    uint64_t v17 = &selRef_setPriority_;
    unint64_t v51 = a1;
    uint64_t v50 = i;
    while (1)
    {
      if (v52)
      {
        unint64_t v18 = v15;
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v15 >= *(void *)(v49 + 16)) {
          goto LABEL_40;
        }
        unint64_t v18 = v15;
        id v19 = *(id *)(v48 + 8 * v15);
      }
      id v54 = v19;
      BOOL v20 = __OFADD__(v18, 1);
      unint64_t v21 = v18 + 1;
      if (v20) {
        break;
      }
      unint64_t v53 = v21;
      id v22 = [v54 attachmentItems];
      sub_10003C374(0, &qword_100184240);
      a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v23)
        {
LABEL_12:
          unint64_t v24 = a1 & 0xC000000000000001;
          swift_beginAccess();
          unint64_t v25 = 0;
          uint64_t v56 = a1 & 0xFFFFFFFFFFFFFF8;
          unint64_t v55 = a1 + 32;
          uint64_t v59 = v23;
          unint64_t v60 = a1;
          unint64_t v58 = a1 & 0xC000000000000001;
          while (1)
          {
            if (v24)
            {
              id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v25 >= *(void *)(v56 + 16)) {
                goto LABEL_38;
              }
              id v26 = *(id *)(v55 + 8 * v25);
            }
            NSString v27 = v26;
            BOOL v20 = __OFADD__(v25++, 1);
            if (v20) {
              break;
            }
            if ([v26 v17[248]])
            {
            }
            else
            {
              unint64_t v64 = v25;
              unint64_t v28 = *v63;
              swift_bridgeObjectRetain();
              id v66 = v27;
              id v29 = [v27 attachedPath];
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v30 = *(void *)(v28 + 16);
              unint64_t v65 = v28;
              if (v30)
              {
                unint64_t v57 = v16 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
                unint64_t v31 = v28
                    + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
                uint64_t v70 = *(void *)(v61 + 72);
                uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v61 + 16);
                swift_bridgeObjectRetain();
                while (1)
                {
                  v32(v6, v31, v7);
                  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v16;
                  (*(void (**)(char *, void, uint64_t, uint64_t))v16)(v6, 0, 1, v7);
                  if ((*v68)(v6, 1, v7) == 1) {
                    break;
                  }
                  unint64_t v34 = (void (**)(char *, void, uint64_t, uint64_t))v16;
                  uint64_t v35 = v67;
                  objc_super v36 = v6;
                  (*v71)(v67, v6, v7);
                  sub_100077CFC(&qword_100184248, (void (*)(uint64_t))&type metadata accessor for URL);
                  char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
                  NSString v38 = *v72;
                  (*v72)(v35, v7);
                  if (v37)
                  {
                    swift_bridgeObjectRelease();
                    v38(v73, v7);

                    swift_bridgeObjectRelease();
                    unint64_t v16 = (unint64_t)v34;
                    uint64_t v6 = v36;
                    uint64_t v17 = &selRef_setPriority_;
                    uint64_t v23 = v59;
                    a1 = v60;
                    unint64_t v24 = v58;
                    unint64_t v25 = v64;
                    goto LABEL_14;
                  }
                  v31 += v70;
                  --v30;
                  unint64_t v16 = (unint64_t)v34;
                  uint64_t v6 = v36;
                  if (!v30) {
                    goto LABEL_28;
                  }
                }
              }
              else
              {
                uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v16;
                swift_bridgeObjectRetain();
LABEL_28:
                v33(v6, 1, 1, v7);
              }
              swift_bridgeObjectRelease();
              (*v72)(v73, v7);
              swift_bridgeObjectRelease();
              id v39 = v66;
              id v40 = [v66 attachedPath];
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v41 = v63;
              swift_beginAccess();
              unint64_t v42 = *v41;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t *v41 = v42;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v42 = sub_10009FE60(0, *(void *)(v42 + 16) + 1, 1, v42);
                *NSString v63 = v42;
              }
              uint64_t v17 = &selRef_setPriority_;
              unint64_t v24 = v58;
              unint64_t v25 = v64;
              unint64_t v45 = *(void *)(v42 + 16);
              unint64_t v44 = *(void *)(v42 + 24);
              if (v45 >= v44 >> 1)
              {
                unint64_t v42 = sub_10009FE60(v44 > 1, v45 + 1, 1, v42);
                *NSString v63 = v42;
              }
              *(void *)(v42 + 16) = v45 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v42+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v45, v62, v7);
              swift_endAccess();

              uint64_t v23 = v59;
              a1 = v60;
            }
LABEL_14:
            if (v25 == v23) {
              goto LABEL_4;
            }
          }
          __break(1u);
LABEL_38:
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v23) {
          goto LABEL_12;
        }
      }
LABEL_4:

      swift_bridgeObjectRelease();
      unint64_t v15 = v53;
      a1 = v51;
      if (v53 == v50) {
        goto LABEL_42;
      }
    }
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
  }
LABEL_42:
  swift_bridgeObjectRelease();
  return [*(id *)(v47 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView) reloadData];
}

uint64_t sub_100073C2C(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  sub_10003C374(0, &qword_100184230);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10003C374(0, &qword_100184238);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2, v3);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_100073CF4()
{
  sub_1000AFD88();
  uint64_t v1 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001ALL, (void *)0x800000010012CB10);
  uint64_t v2 = (uint64_t *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
  uint64_t *v2 = v1;
  v2[1] = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton];
  if (v2[1])
  {
    swift_bridgeObjectRetain();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  [v4 setTitle:v5 forState:0];

  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  uint64_t v7 = (id (**)())&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  *uint64_t v7 = sub_100077DD8;
  v7[1] = (id (*)())v6;
  uint64_t v9 = v0;
  sub_10003B0B8(v8);
  id v10 = (id)MobileGestalt_get_current_device();
  if (v10)
  {
    uint64_t v11 = v10;
    int containsCellularRadioCapability = MobileGestalt_get_containsCellularRadioCapability();

    if (containsCellularRadioCapability)
    {
      uint64_t v13 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001ELL, (void *)0x800000010012CB30);
      BOOL v14 = (uint64_t *)&v9[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle];
      *BOOL v14 = v13;
      v14[1] = v15;
      swift_bridgeObjectRelease();
      unint64_t v16 = *(void **)&v9[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton];
      if (v16)
      {
        if (v14[1])
        {
          id v17 = v16;
          swift_bridgeObjectRetain();
          NSString v18 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v19 = v16;
          NSString v18 = 0;
        }
        [v16 setTitle:v18 forState:0];
      }
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v9;
      unint64_t v21 = (void (**)())&v9[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
      uint64_t v22 = *(void *)&v9[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
      *unint64_t v21 = sub_100077DE0;
      v21[1] = (void (*)())v20;
      uint64_t v23 = v9;
      sub_10003B0B8(v22);
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_100073F70(unsigned char *a1)
{
  if (a1[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_activationReason]) {
    uint64_t v2 = &ELSEventTypeEndedWithIssueDidNotOccur;
  }
  else {
    uint64_t v2 = &ELSEventTypeEndedWithIssueDidOccur;
  }
  [self createLoggingEventWith:*v2];
  [a1 dismissViewControllerAnimated:1 completion:0];
  uint64_t v3 = *(void (**)(void))&a1[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  if (v3)
  {
    swift_retain();
    v3(0);
    sub_10003B0B8((uint64_t)v3);
  }
  uint64_t v4 = self;

  return [v4 sendAnalyticsWithEvent:15];
}

void sub_10007404C(void *a1)
{
  id v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    uint64_t v3 = v2;
    int wapiCapability = MobileGestalt_get_wapiCapability();

    if (wapiCapability) {
      uint64_t v5 = 0xD00000000000002BLL;
    }
    else {
      uint64_t v5 = 0xD000000000000026;
    }
    if (wapiCapability) {
      uint64_t v6 = (void *)0x800000010012CBE0;
    }
    else {
      uint64_t v6 = (void *)0x800000010012CB50;
    }
    sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000027, (void *)0x800000010012CB80);
    sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v5, v6);
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v9 = [self alertControllerWithTitle:v7 message:v8 preferredStyle:1];

    sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x4C45434E4143, (void *)0xE600000000000000);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v11 = self;
    id v12 = [v11 actionWithTitle:v10 style:0 handler:0];

    sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000025, (void *)0x800000010012CBB0);
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    id v14 = a1;
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v18[4] = sub_100077DE8;
    v18[5] = v13;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    void v18[2] = sub_100046950;
    v18[3] = &unk_10014FF98;
    unint64_t v16 = _Block_copy(v18);
    swift_release();
    id v17 = [v11 actionWithTitle:v15 style:0 handler:v16];
    _Block_release(v16);

    [v9 addAction:v12];
    [v9 addAction:v17];
    [v9 setPreferredAction:v17];
    [v14 presentViewController:v9 animated:1 completion:0];
  }
  else
  {
    __break(1u);
  }
}

id sub_100074380(uint64_t a1, unsigned char *a2)
{
  if (a2[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_activationReason]) {
    uint64_t v3 = &ELSEventTypeEndedWithIssueDidNotOccur;
  }
  else {
    uint64_t v3 = &ELSEventTypeEndedWithIssueDidOccur;
  }
  [self createLoggingEventWith:*v3];
  [a2 dismissViewControllerAnimated:1 completion:0];
  uint64_t v4 = *(void (**)(uint64_t))&a2[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion];
  if (v4)
  {
    swift_retain();
    v4(1);
    sub_10003B0B8((uint64_t)v4);
  }
  uint64_t v5 = self;

  return [v5 sendAnalyticsWithEvent:16];
}

id sub_10007445C()
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t containsCellularRadioCapability = MobileGestalt_get_containsCellularRadioCapability();

    return (id)containsCellularRadioCapability;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000744F8()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView);
  uint64_t v2 = *(void *)(sub_1000753F8() + 16);

  swift_bridgeObjectRelease();
  return v2;
}

id sub_100074550(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)(v2 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView);
  id v5 = sub_100071DDC(v4, a2);

  return v5;
}

void sub_1000745A4()
{
}

uint64_t sub_10007469C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_completion);

  return sub_10003B0B8(v1);
}

id sub_1000746E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FileReviewingTableViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for FileReviewingTableViewController()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DashboardSection(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FileReviewConsent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000748E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileReviewConsent()
{
  return &type metadata for FileReviewConsent;
}

unsigned char *storeEnumTagSinglePayload for FileReviewingTableViewController.ActivationReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000749E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FileReviewingTableViewController.ActivationReason()
{
  return &type metadata for FileReviewingTableViewController.ActivationReason;
}

unint64_t sub_100074A24()
{
  unint64_t result = qword_1001841C0;
  if (!qword_1001841C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001841C0);
  }
  return result;
}

unint64_t sub_100074A7C()
{
  unint64_t result = qword_1001841C8;
  if (!qword_1001841C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001841C8);
  }
  return result;
}

uint64_t sub_100074AD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_1001841E0);
  __chkstk_darwin(v2 - 8);
  id v68 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003AFD0(&qword_100185000);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  unint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v76 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v64 - v12;
  __chkstk_darwin(v11);
  NSString v15 = (char *)&v64 - v14;
  id v16 = [objc_allocWithZone((Class)NSFileManager) init];
  uint64_t v79 = _swiftEmptyArrayStorage;
  char v78 = 0;
  uint64_t v17 = v0 + OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_directoryURL;
  uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  unint64_t v73 = v8 + 16;
  v72(v15, v0 + OBJC_IVAR____TtC11Diagnostics31FileBrowsingTableViewController_directoryURL, v7);
  URL.absoluteString.getter();
  id v74 = *(void (**)(char *, uint64_t))(v8 + 8);
  unint64_t v75 = v8 + 8;
  v74(v15, v7);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v19 = [v16 fileExistsAtPath:v18 isDirectory:&v78];

  if (v19 && v78 == 1)
  {
    uint64_t v71 = v1;
    unint64_t v65 = v8;
    id v67 = v13;
    v72(v15, v17, v7);
    URL._bridgeToObjectiveC()(v20);
    uint64_t v22 = v21;
    uint64_t v69 = v15;
    v74(v15, v7);
    sub_10003AFD0((uint64_t *)&unk_1001841F0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_100124AF0;
    *(void *)(v23 + 32) = NSURLFileSizeKey;
    *(void *)(v23 + 40) = NSURLContentModificationDateKey;
    *(void *)(v23 + 48) = NSURLIsDirectoryKey;
    type metadata accessor for URLResourceKey(0);
    unint64_t v24 = NSURLFileSizeKey;
    unint64_t v25 = NSURLContentModificationDateKey;
    id v26 = NSURLIsDirectoryKey;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v77 = 0;
    id v28 = [v16 contentsOfDirectoryAtURL:v22 includingPropertiesForKeys:isa options:4 error:&v77];

    id v29 = v77;
    if (!v28)
    {
      uint64_t v32 = v29;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v33 = v69;
      swift_bridgeObjectRelease();
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_100123B50;
      v72(v33, v17, v7);
      URL._bridgeToObjectiveC()(v35);
      uint64_t v37 = v36;
      v74(v33, v7);
      *(void *)(v34 + 56) = sub_10003C374(0, &qword_100184200);
      *(void *)(v34 + 64) = sub_100077C94();
      *(void *)(v34 + 32) = v37;
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      NSString v38 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();

      swift_errorRelease();
      return swift_bridgeObjectRetain();
    }
    uint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v31 = v16;
    uint64_t v40 = sub_1000760E8(v30, v31);

    swift_bridgeObjectRelease();
    uint64_t v79 = (void *)v40;
    NSString v15 = v69;
    uint64_t v13 = v67;
    unint64_t v8 = v65;
  }
  uint64_t v41 = swift_bridgeObjectRetain();
  sub_1000CB78C(v41);
  id v42 = [self sharedManager];
  id v43 = [v42 snapshot];

  id v44 = [v43 consentData];
  if (v44)
  {
    id v66 = v16;
    id v67 = v13;
    uint64_t v69 = v15;
    uint64_t v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v47 = v46;

    sub_10006FBCC(v45, v47);
    sub_10006FBCC(0, 0xF000000000000000);
    uint64_t v70 = v79;
    uint64_t v48 = v79[2];
    if (v48)
    {
      uint64_t v49 = (char *)v70 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      uint64_t v71 = *(void *)(v8 + 72);
      unint64_t v50 = v8;
      unint64_t v51 = v8 + 56;
      unint64_t v52 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      unint64_t v53 = (void (**)(char *, char *, uint64_t))(v50 + 32);
      swift_bridgeObjectRetain_n();
      unint64_t v65 = v51 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      while (1)
      {
        v72(v6, (uint64_t)v49, v7);
        id v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v51;
        (*(void (**)(char *, void, uint64_t, uint64_t))v51)(v6, 0, 1, v7);
        if ((*v52)(v6, 1, v7) == 1) {
          break;
        }
        (*v53)(v76, v6, v7);
        if (URL.lastPathComponent.getter() == 0x2E746E65736E6F63 && v55 == 0xEB00000000666470)
        {
          swift_bridgeObjectRelease();
          v74(v76, v7);
LABEL_22:
          swift_bridgeObjectRelease_n();

          return (uint64_t)v79;
        }
        char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        v74(v76, v7);
        if (v56) {
          goto LABEL_22;
        }
        v49 += v71;
        if (!--v48) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      id v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain_n();
LABEL_17:
      v54(v6, 1, 1, v7);
    }
    swift_bridgeObjectRelease_n();
    id v57 = [self defaultManager];
    id v58 = [v57 temporaryDirectory];

    uint64_t v59 = v69;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v60 = v67;
    URL.appendingPathComponent(_:)();
    v74(v59, v7);
    URL.absoluteString.getter();
    NSString v61 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v62 = v66;
    LOBYTE(v59) = [v66 fileExistsAtPath:v61];

    if ((v59 & 1) == 0) {
      sub_100076EC0();
    }
    uint64_t v63 = (uint64_t)v68;
    v72(v68, (uint64_t)v60, v7);
    sub_10003A0AC(0, 0, v63);

    v74(v60, v7);
  }
  else
  {
  }
  return (uint64_t)v79;
}

uint64_t sub_1000753F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_1001841E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003AFD0(&qword_100185000);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v80 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)v68 - v13;
  __chkstk_darwin(v12);
  id v16 = (char *)v68 - v15;
  id v17 = [objc_allocWithZone((Class)NSFileManager) init];
  id v82 = _swiftEmptyArrayStorage;
  char v81 = 0;
  sub_100072A8C((uint64_t)v16);
  URL.absoluteString.getter();
  NSString v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v78 = v9 + 8;
  uint64_t v79 = v8;
  id v77 = v18;
  v18(v16, v8);
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v20 = [v17 fileExistsAtPath:v19 isDirectory:&v81];

  if (v20 && v81 == 1)
  {
    uint64_t v76 = v1;
    uint64_t v71 = v14;
    uint64_t v72 = v9;
    sub_100072A8C((uint64_t)v16);
    URL._bridgeToObjectiveC()(v21);
    uint64_t v23 = v22;
    unint64_t v73 = v16;
    v77(v16, v79);
    sub_10003AFD0((uint64_t *)&unk_1001841F0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_100124AF0;
    *(void *)(v24 + 32) = NSURLFileSizeKey;
    *(void *)(v24 + 40) = NSURLContentModificationDateKey;
    *(void *)(v24 + 48) = NSURLIsDirectoryKey;
    type metadata accessor for URLResourceKey(0);
    unint64_t v25 = NSURLFileSizeKey;
    id v26 = NSURLContentModificationDateKey;
    NSString v27 = NSURLIsDirectoryKey;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v83[0] = 0;
    id v29 = [v17 contentsOfDirectoryAtURL:v23 includingPropertiesForKeys:isa options:4 error:v83];

    id v30 = v83[0];
    if (!v29)
    {
      uint64_t v34 = v30;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_100123B50;
      uint64_t v36 = (uint64_t)v73;
      sub_100072A8C((uint64_t)v73);
      URL._bridgeToObjectiveC()(v37);
      uint64_t v39 = v38;
      v77((char *)v36, v79);
      *(void *)(v35 + 56) = sub_10003C374(0, &qword_100184200);
      *(void *)(v35 + 64) = sub_100077C94();
      *(void *)(v35 + 32) = v39;
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      uint64_t v40 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();

      swift_errorRelease();
      swift_beginAccess();
      return swift_bridgeObjectRetain();
    }
    id v31 = v7;
    uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v33 = v17;
    uint64_t v42 = sub_1000760E8(v32, v33);

    swift_bridgeObjectRelease();
    id v82 = (void *)v42;
    uint64_t v9 = v72;
    id v16 = v73;
    uint64_t v14 = v71;
    uint64_t v7 = v31;
  }
  swift_beginAccess();
  uint64_t v43 = swift_bridgeObjectRetain();
  sub_1000CB78C(v43);
  id v44 = [self sharedManager];
  id v45 = [v44 snapshot];

  id v46 = [v45 consentData];
  if (v46)
  {
    id v70 = v17;
    uint64_t v71 = v14;
    unint64_t v73 = v16;
    uint64_t v69 = v4;
    uint64_t v47 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v49 = v48;

    sub_10006FBCC(v47, v49);
    sub_10006FBCC(0, 0xF000000000000000);
    id v74 = v82;
    uint64_t v50 = v82[2];
    uint64_t v72 = v9;
    if (v50)
    {
      uint64_t v52 = v9 + 16;
      unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      unint64_t v53 = (char *)v74 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      uint64_t v75 = *(void *)(v9 + 72);
      uint64_t v76 = v51;
      id v54 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain_n();
      v68[1] = (unint64_t)v54 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v55 = v79;
      while (1)
      {
        v76(v7, v53, v55);
        char v56 = *v54;
        (*v54)(v7, 0, 1, v55);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 32))(v7, 1, v55) == 1) {
          break;
        }
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v80, v7, v55);
        if (URL.lastPathComponent.getter() == 0x2E746E65736E6F63 && v57 == 0xEB00000000666470)
        {
          swift_bridgeObjectRelease();
          v77(v80, v79);
LABEL_22:
          swift_bridgeObjectRelease_n();

          return (uint64_t)v82;
        }
        char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t v55 = v79;
        v77(v80, v79);
        if (v58) {
          goto LABEL_22;
        }
        v53 += v75;
        if (!--v50) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      char v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain_n();
      uint64_t v55 = v79;
LABEL_17:
      v56(v7, 1, 1, v55);
    }
    swift_bridgeObjectRelease_n();
    uint64_t v59 = v55;
    id v60 = [self defaultManager];
    id v61 = [v60 temporaryDirectory];

    uint64_t v62 = (uint64_t)v73;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v63 = v71;
    URL.appendingPathComponent(_:)();
    v77((char *)v62, v59);
    URL.absoluteString.getter();
    NSString v64 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v65 = v70;
    LOBYTE(v62) = [v70 fileExistsAtPath:v64];

    if ((v62 & 1) == 0) {
      sub_100076EC0();
    }
    uint64_t v66 = (uint64_t)v69;
    uint64_t v67 = v79;
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v63, v79);
    sub_10003A0AC(0, 0, v66);

    v77(v63, v67);
  }
  else
  {
  }
  return (uint64_t)v82;
}

uint64_t sub_100075D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self sharedManager];
  id v9 = [v8 snapshot];

  id v10 = [v9 dedSessionIdentifier];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if (v11 == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
    return sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x54534F4E47414944, (void *)0xEF53474F4C5F4349);
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v15) {
    return sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x54534F4E47414944, (void *)0xEF53474F4C5F4349);
  }
  uint64_t v32 = (void *)a1;
  uint64_t v33 = a2;
  v31[0] = 46;
  v31[1] = 0xE100000000000000;
  sub_100061B00();
  uint64_t v16 = StringProtocol.components<A>(separatedBy:)();
  id v17 = (void *)v16;
  uint64_t v18 = *(void *)(v16 + 16);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v19 = v16 + 16 * v18;
  uint64_t v20 = *(void *)(v19 + 24);
  uint64_t v32 = *(void **)(v19 + 16);
  uint64_t v33 = v20;
  swift_bridgeObjectRetain();
  static CharacterSet.decimalDigits.getter();
  StringProtocol.trimmingCharacters(in:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  uint64_t v21 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  if (!v17[2])
  {
    __break(1u);
LABEL_21:
    uint64_t result = (uint64_t)sub_100039FF4(v17);
    id v17 = (void *)result;
    uint64_t v23 = *(void *)(result + 16);
    if (v23) {
      goto LABEL_16;
    }
    goto LABEL_22;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v23 = v17[2];
  if (v23)
  {
LABEL_16:
    void v17[2] = v23 - 1;
    swift_bridgeObjectRelease();
    uint64_t v32 = v17;
    sub_10003AFD0(&qword_100184220);
    sub_100077D44();
    BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v24 = self;
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v26 = [v24 findEntryForBundleIdentifier:v25];

    if (v26)
    {
      id v27 = [v26 displayNameLocalizationKey];
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v30 = v29;

      a1 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v28, v30);
      swift_bridgeObjectRelease();
      return a1;
    }
LABEL_19:
    swift_bridgeObjectRetain();
    return a1;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1000760E8(uint64_t a1, void *a2)
{
  id v45 = a2;
  uint64_t v3 = sub_10003AFD0(&qword_100185000);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  char v56 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  id v54 = (char *)v42 - v11;
  __chkstk_darwin(v10);
  uint64_t v59 = (char *)v42 - v12;
  uint64_t v62 = (char *)_swiftEmptyArrayStorage;
  uint64_t v51 = *(void *)(a1 + 16);
  if (v51)
  {
    unint64_t v13 = 0;
    uint64_t v52 = v7 + 48;
    id v60 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v55 = (void (**)(char *, uint64_t))(v7 + 8);
    NSURLResourceKey v44 = NSURLIsDirectoryKey;
    uint64_t v53 = v7 + 56;
    v42[0] = (v7 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    long long v43 = xmmword_100123B50;
    unint64_t v49 = v5;
    uint64_t v50 = a1;
    uint64_t v47 = v7 + 16;
    uint64_t v48 = v7;
    while (1)
    {
      if (v13 >= *(void *)(a1 + 16)) {
        __break(1u);
      }
      unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v15 = *(void *)(v7 + 72);
      uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      v16(v5, a1 + v14 + v15 * v13, v6);
      id v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v46(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
        goto LABEL_18;
      }
      unint64_t v58 = v14;
      id v17 = v59;
      uint64_t v57 = *v60;
      v57(v59, v5, v6);
      char v18 = URL.hasDirectoryPath.getter();
      uint64_t v19 = v54;
      v16(v54, (unint64_t)v17, v6);
      if ((v18 & 1) == 0) {
        break;
      }
      URL._bridgeToObjectiveC()(v20);
      uint64_t v22 = v21;
      sub_10003AFD0((uint64_t *)&unk_1001841F0);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v43;
      NSURLResourceKey v24 = v44;
      *(void *)(v23 + 32) = v44;
      type metadata accessor for URLResourceKey(0);
      NSString v25 = v24;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v61 = 0;
      id v27 = [v45 contentsOfDirectoryAtURL:v22 includingPropertiesForKeys:isa options:4 error:&v61 v42[0]];

      id v28 = v61;
      if (!v27)
      {
        id v40 = v61;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v41 = *v55;
        (*v55)(v19, v6);
        v41(v59, v6);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      uint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      id v30 = v28;

      uint64_t v31 = *(void *)(v29 + 16);
      swift_bridgeObjectRelease();
      uint64_t v32 = *v55;
      (*v55)(v19, v6);
      if (v31) {
        goto LABEL_11;
      }
      v32(v59, v6);
      uint64_t v7 = v48;
LABEL_3:
      ++v13;
      a1 = v50;
      uint64_t v5 = v49;
      if (v51 == v13)
      {
        v46(v49, 1, 1, v6);
        goto LABEL_18;
      }
    }
    (*v55)(v19, v6);
LABEL_11:
    uint64_t v33 = v57;
    v57(v56, v59, v6);
    uint64_t v34 = v62;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = v48;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10005FB28(0, *((void *)v34 + 2) + 1, 1);
      uint64_t v34 = v62;
    }
    unint64_t v36 = v58;
    unint64_t v38 = *((void *)v34 + 2);
    unint64_t v37 = *((void *)v34 + 3);
    if (v38 >= v37 >> 1)
    {
      sub_10005FB28(v37 > 1, v38 + 1, 1);
      uint64_t v34 = v62;
    }
    *((void *)v34 + 2) = v38 + 1;
    v33(&v34[v36 + v38 * v15], v56, v6);
    uint64_t v62 = v34;
    goto LABEL_3;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_18:
  swift_bridgeObjectRelease();
  sub_10003C44C((uint64_t)v5, &qword_100185000);
  return (uint64_t)v62;
}

void sub_100076670()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v69 = (char *)&v66 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v66 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v66 - v11;
  id v13 = [objc_allocWithZone((Class)NSFileManager) init];
  id v70 = v0;
  uint64_t v14 = sub_100074AD0();
  unint64_t v15 = IndexPath.row.getter();
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_40:
    __break(1u);
  }
  if (v15 >= *(void *)(v14 + 16)) {
    goto LABEL_40;
  }
  id v68 = v5;
  uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
  v16(v12, v14+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v15, v1);
  swift_bridgeObjectRelease();
  URL.path.getter();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v18 = [v13 fileExistsAtPath:v17];

  if ((v18 & 1) == 0)
  {
    static os_log_type_t.debug.getter();
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    uint64_t v20 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();

LABEL_29:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v12, v1);
    return;
  }
  id v67 = v13;
  char v74 = 0;
  if (URL.pathExtension.getter() == 31335 && v19 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      goto LABEL_17;
    }
  }
  URL.deletingPathExtension()();
  uint64_t v22 = URL.pathExtension.getter();
  uint64_t v24 = v23;
  uint64_t v66 = *(void (**)(char *, uint64_t))(v2 + 8);
  v66(v10, v1);
  if (v22 == 7496052 && v24 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0)
  {
LABEL_17:
    if (URL.pathExtension.getter() == 0x6968637261676F6CLL && v43 == 0xEA00000000006576)
    {
      swift_bridgeObjectRelease();
      id v13 = v67;
      id v44 = v70;
    }
    else
    {
      char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      id v13 = v67;
      id v44 = v70;
      if ((v45 & 1) == 0)
      {
        NSString v46 = [v70 description];
        if (!v46)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v46 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        unsigned int v47 = [v13 fileExistsAtPath:v46 isDirectory:&v74];

        if (v47)
        {
          if (v74 == 1)
          {
            uint64_t v48 = (uint64_t)v69;
            v16(v69, (unint64_t)v12, v1);
            id v49 = objc_allocWithZone((Class)type metadata accessor for FileBrowsingTableViewController());
            id v50 = sub_10004ECB4(v48, 0, 0);
            id v51 = [v44 navigationController];
LABEL_27:
            id v56 = v51;
            if (!v56)
            {
              (*(void (**)(char *, uint64_t))(v2 + 8))(v12, v1);

              return;
            }
            uint64_t v57 = v56;
            [v56 pushViewController:v50 animated:1];

            goto LABEL_29;
          }
        }
      }
    }
    sub_10003AFD0((uint64_t *)&unk_100182E20);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_100123F00;
    URL._bridgeToObjectiveC()((NSURL *)&unk_100123000);
    *(void *)(v52 + 32) = v53;
    v73[0] = (id)v52;
    specialized Array._endMutation()();
    id v54 = objc_allocWithZone((Class)QLPreviewController);
    sub_10003AFD0((uint64_t *)&unk_1001841D0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v50 = [v54 initWithPreviewItems:isa];

    id v51 = [v44 navigationController];
    goto LABEL_27;
  }
LABEL_13:
  v73[0] = (id)URL.absoluteString.getter();
  v73[1] = v26;
  uint64_t v71 = 0x6863746157;
  unint64_t v72 = 0xE500000000000000;
  sub_100061B00();
  char v27 = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0) {
    goto LABEL_17;
  }
  id v28 = self;
  URL._bridgeToObjectiveC()(v29);
  uint64_t v31 = v30;
  uint64_t v32 = (uint64_t)v69;
  URL.deletingLastPathComponent()();
  URL._bridgeToObjectiveC()(v33);
  uint64_t v35 = v34;
  v66((char *)v32, v1);
  LODWORD(v28) = [v28 extractArchive:v31 toDirectory:v35];

  if (v28)
  {
    id v36 = [objc_allocWithZone((Class)NSFileManager) init];
    URL._bridgeToObjectiveC()(v37);
    uint64_t v39 = v38;
    v73[0] = 0;
    unsigned __int8 v40 = [v36 removeItemAtURL:v38 error:v73];

    uint64_t v41 = v67;
    if (v40)
    {
      id v42 = v73[0];
    }
    else
    {
      id v59 = v73[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      id v60 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      swift_errorRelease();
    }
    id v58 = v70;
    id v61 = v68;
    URL.deletingPathExtension()();
    URL.deletingPathExtension()();
    v66(v61, v1);
  }
  else
  {
    v16((char *)v32, (unint64_t)v12, v1);
    uint64_t v41 = v67;
    id v58 = v70;
  }
  id v62 = objc_allocWithZone((Class)type metadata accessor for FileBrowsingTableViewController());
  id v63 = sub_10004ECB4(v32, 0, 0);
  id v64 = [v58 navigationController];
  if (v64)
  {
    id v65 = v64;
    [v64 pushViewController:v63 animated:1];
  }
  else
  {
  }
  v66(v12, v1);
}

void sub_100076EC0()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v32 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v32 - v8;
  uint64_t v10 = self;
  id v11 = [v10 defaultManager];
  id v12 = [v10 defaultManager];
  id v13 = [v12 temporaryDirectory];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  URL.appendingPathComponent(_:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v7, v0);
  URL.path.getter();
  v14(v9, v0);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LOBYTE(v12) = [v11 fileExistsAtPath:v15];

  if ((v12 & 1) == 0)
  {
    uint64_t v16 = self;
    id v17 = [v16 sharedManager];
    id v18 = [v17 snapshot];

    id v19 = [v18 consentData];
    if (v19)
    {
      uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;

      sub_10006FBCC(v20, v22);
      sub_10006FBCC(0, 0xF000000000000000);
      id v23 = [v16 sharedManager];
      id v24 = [v23 snapshot];

      id v25 = [v24 consentData];
      if (v25)
      {
        uint64_t v26 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v28 = v27;

        id v29 = [v10 defaultManager];
        id v30 = [v29 temporaryDirectory];

        static URL._unconditionallyBridgeFromObjectiveC(_:)();
        URL.appendingPathComponent(_:)();
        v14(v9, v0);
        Data.write(to:options:)();
        v14(v4, v0);
        sub_10006FAA8(v26, v28);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      uint64_t v31 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
    }
  }
}

void sub_100077420()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v68 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  id v11 = (char *)&v68 - v10;
  __chkstk_darwin(v9);
  id v13 = (char *)&v68 - v12;
  id v14 = [objc_allocWithZone((Class)NSFileManager) init];
  id v72 = v0;
  uint64_t v15 = sub_1000753F8();
  unint64_t v16 = IndexPath.row.getter();
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_40:
    __break(1u);
  }
  if (v16 >= *(void *)(v15 + 16)) {
    goto LABEL_40;
  }
  id v70 = v5;
  unint64_t v17 = v15
      + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
      + *(void *)(v2 + 72) * v16;
  uint64_t v71 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
  v71(v13, v17, v1);
  swift_bridgeObjectRelease();
  URL.path.getter();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = v14;
  unsigned __int8 v20 = [v14 fileExistsAtPath:v18];

  if ((v20 & 1) == 0)
  {
    static os_log_type_t.debug.getter();
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    unint64_t v22 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();

LABEL_29:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v1);
    return;
  }
  sub_1000E6C68((uint64_t)v13, (uint64_t)v11);
  (*(void (**)(char *, char *, uint64_t))(v2 + 40))(v13, v11, v1);
  char v76 = 0;
  if (URL.pathExtension.getter() == 31335 && v21 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      goto LABEL_17;
    }
  }
  URL.deletingPathExtension()();
  uint64_t v24 = URL.pathExtension.getter();
  uint64_t v26 = v25;
  unint64_t v27 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v68 = v2 + 8;
  uint64_t v69 = v27;
  v27(v8, v1);
  if (v24 == 7496052 && v26 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    id v19 = v14;
    goto LABEL_13;
  }
  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  id v19 = v14;
  if ((v28 & 1) == 0)
  {
LABEL_17:
    if (URL.pathExtension.getter() == 0x6968637261676F6CLL && v45 == 0xEA00000000006576)
    {
      swift_bridgeObjectRelease();
      id v46 = v72;
    }
    else
    {
      char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      id v46 = v72;
      if ((v47 & 1) == 0)
      {
        NSString v48 = [v72 description];
        if (!v48)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v48 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        unsigned int v49 = [v19 fileExistsAtPath:v48 isDirectory:&v76];

        if (v49)
        {
          if (v76 == 1)
          {
            v71(v11, (unint64_t)v13, v1);
            id v50 = objc_allocWithZone((Class)type metadata accessor for FileBrowsingTableViewController());
            id v51 = sub_10004ECB4((uint64_t)v11, 0, 0);
            id v52 = [v46 navigationController];
LABEL_27:
            id v57 = v52;
            if (!v57)
            {
              (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v1);

              return;
            }
            id v58 = v57;
            [v57 pushViewController:v51 animated:1];

            goto LABEL_29;
          }
        }
      }
    }
    sub_10003AFD0((uint64_t *)&unk_100182E20);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_100123F00;
    URL._bridgeToObjectiveC()((NSURL *)&unk_100123000);
    *(void *)(v53 + 32) = v54;
    v75[0] = (id)v53;
    specialized Array._endMutation()();
    id v55 = objc_allocWithZone((Class)QLPreviewController);
    sub_10003AFD0((uint64_t *)&unk_1001841D0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v51 = [v55 initWithPreviewItems:isa];

    id v52 = [v46 navigationController];
    goto LABEL_27;
  }
LABEL_13:
  v75[0] = (id)URL.absoluteString.getter();
  v75[1] = v29;
  uint64_t v73 = 0x6863746157;
  unint64_t v74 = 0xE500000000000000;
  sub_100061B00();
  char v30 = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  if ((v30 & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v31 = self;
  URL._bridgeToObjectiveC()(v32);
  uint64_t v34 = v33;
  URL.deletingLastPathComponent()();
  URL._bridgeToObjectiveC()(v35);
  unint64_t v37 = v36;
  unint64_t v38 = v69;
  v69(v11, v1);
  LODWORD(v31) = [v31 extractArchive:v34 toDirectory:v37];

  if (v31)
  {
    id v39 = [objc_allocWithZone((Class)NSFileManager) init];
    URL._bridgeToObjectiveC()(v40);
    id v42 = v41;
    v75[0] = 0;
    unsigned __int8 v43 = [v39 removeItemAtURL:v41 error:v75];

    if (v43)
    {
      id v44 = v75[0];
    }
    else
    {
      id v60 = v75[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      id v61 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      swift_errorRelease();
    }
    id v59 = v72;
    id v62 = v70;
    URL.deletingPathExtension()();
    URL.deletingPathExtension()();
    id v63 = v62;
    unint64_t v38 = v69;
    v69(v63, v1);
  }
  else
  {
    v71(v11, (unint64_t)v13, v1);
    id v59 = v72;
  }
  id v64 = objc_allocWithZone((Class)type metadata accessor for FileBrowsingTableViewController());
  id v65 = sub_10004ECB4((uint64_t)v11, 0, 0);
  id v66 = [v59 navigationController];
  if (v66)
  {
    id v67 = v66;
    [v66 pushViewController:v65 animated:1];
  }
  else
  {
  }
  v38(v13, v1);
}

unint64_t sub_100077C94()
{
  unint64_t result = qword_100184208;
  if (!qword_100184208)
  {
    sub_10003C374(255, &qword_100184200);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184208);
  }
  return result;
}

uint64_t sub_100077CFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100077D44()
{
  unint64_t result = qword_100184228;
  if (!qword_100184228)
  {
    sub_10003B070(&qword_100184220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184228);
  }
  return result;
}

uint64_t sub_100077DA0()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100077DD8()
{
  return sub_100073F70(*(unsigned char **)(v0 + 16));
}

void sub_100077DE0()
{
  sub_10007404C(*(void **)(v0 + 16));
}

id sub_100077DE8(uint64_t a1)
{
  return sub_100074380(a1, *(unsigned char **)(v1 + 16));
}

uint64_t sub_100077DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100077E00()
{
  return swift_release();
}

id sub_100077E08(unint64_t a1, uint64_t a2)
{
  return sub_1000734C0(a1, a2, *(void *)(v2 + 16));
}

void sub_100077E10()
{
  sub_10007313C(*(void **)(v0 + 16));
}

id sub_100077E18(int a1)
{
  return sub_100073228(a1, *(char **)(v1 + 16));
}

id sub_100077E20()
{
  return [*(id *)(v0 + 16) dismissViewControllerAnimated:1 completion:0];
}

void sub_100077E58()
{
  uint64_t v1 = v0;
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedNavigationController();
  [super viewDidLoad];
  [v0 setModalPresentationStyle:2];
  id v2 = [v0 navigationBar];
  id v3 = [objc_allocWithZone((Class)UIImage) init];
  [v2 setBackgroundImage:v3 forBarMetrics:0];

  id v4 = [v1 navigationBar];
  id v5 = [objc_allocWithZone((Class)UIImage) init];
  [v4 setShadowImage:v5];

  id v6 = [v1 navigationBar];
  [v6 setAlpha:0.0];

  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100123F00;
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics44EnhancedLoggingCompletedNavigationController_enhancedLoggingCompletedViewController];
  *(void *)(v7 + 32) = v8;
  specialized Array._endMutation()();
  sub_10005C46C();
  id v9 = v8;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setViewControllers:isa];
}

id sub_100078054(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC11Diagnostics44EnhancedLoggingCompletedNavigationController_enhancedLoggingCompletedViewController;
  id v6 = objc_allocWithZone((Class)type metadata accessor for EnhancedLoggingCompletedViewController());
  uint64_t v7 = v2;
  *(void *)&v2[v5] = sub_1000565D0();

  if (!a1)
  {
    uint64_t ObjCClassFromMetadata = 0;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  if (a2) {
LABEL_3:
  }
    a2 = swift_getObjCClassFromMetadata();
LABEL_4:
  v10.receiver = v7;
  v10.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedNavigationController();
  return [super initWithNavigationBarClass:ObjCClassFromMetadata toolbarClass:a2];
}

id sub_10007838C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EnhancedLoggingCompletedNavigationController();
  return [super dealloc];
}

uint64_t type metadata accessor for EnhancedLoggingCompletedNavigationController()
{
  return self;
}

unint64_t sub_1000783F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003AFD0(&qword_100184290);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  id v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100078BD8(v6, (uint64_t)v15, &qword_100184298);
    unint64_t result = sub_10007D88C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100078AC4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100078538(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003AFD0(&qword_100184280);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  id v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100078BD8(v6, (uint64_t)&v15, &qword_100184288);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10007D7FC(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100078AC4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100078670(uint64_t a1)
{
  return sub_1000786C0(a1, (uint64_t *)&unk_100186620, &qword_100183BF0, (uint64_t (*)(uint64_t))sub_10007D988);
}

unint64_t sub_100078698(uint64_t a1)
{
  return sub_1000786C0(a1, &qword_1001842A0, &qword_1001842A8, (uint64_t (*)(uint64_t))sub_10007D984);
}

unint64_t sub_1000786C0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003AFD0(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100078BD8(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_100078AC4(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_1000787F0()
{
  uint64_t v0 = sub_10003AFD0(&qword_100185000);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return (id)sub_100078A64((uint64_t)v2);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v9 = result;
    URL._bridgeToObjectiveC()(v8);
    uint64_t v11 = v10;
    sub_100078538((uint64_t)&_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v9 openSensitiveURL:v11 withOptions:isa];

    return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100078A64(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0(&qword_100185000);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_100078AC4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_100078AD4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10003AFD0((uint64_t *)&unk_1001865F0);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_10007D8D0(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10007D8D0(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100078BD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10003AFD0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_100078C40()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for SuiteManager()) init];
  qword_10018A3D0 = (uint64_t)result;
  return result;
}

void *sub_100078C80()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  id v2 = v1;
  return v1;
}

void sub_100078D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10003AFD0(&qword_100184350);
  NSKeyValueObservedChange.newValue.getter();
  if ((unint64_t)v17 >= 2)
  {
    id v4 = v17;
    if (((unint64_t)[v4 integerValue] & 0x8000000000000000) == 0)
    {
      uint64_t v5 = *(void **)(a3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
      if (v5)
      {
        id v6 = [v5 suiteID];
        if (v6)
        {
          char v7 = v6;
          uint64_t v8 = a3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v9 = *(void *)(v8 + 8);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, id, void *, uint64_t, uint64_t))(v9 + 24))(a3, v4, v7, ObjectType, v9);
            swift_unknownObjectRelease();
          }
          sub_10003AFD0(&qword_100183BE0);
          uint64_t v11 = swift_allocObject();
          *(_OWORD *)(v11 + 16) = xmmword_100123B50;
          _StringGuts.grow(_:)(23);
          swift_bridgeObjectRelease();
          id v12 = [v4 description];
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;

          v16._uint64_t countAndFlagsBits = v13;
          v16._object = v15;
          String.append(_:)(v16);
          swift_bridgeObjectRelease();
          *(void *)(v11 + 56) = &type metadata for String;
          *(void *)(v11 + 32) = 0xD000000000000015;
          *(void *)(v11 + 40) = 0x800000010012D490;
          print(_:separator:terminator:)();

          swift_bridgeObjectRelease();
        }
      }
    }
    sub_10007F488(v17);
    sub_10007F488(v17);
  }
}

void **sub_100078EEC()
{
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager;
  type metadata accessor for DeviceManager();
  swift_allocObject();
  id v2 = v0;
  sub_1000B3610();
  *(void *)&v0[v1] = v3;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation] = 0;
  v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_suiteCancellationPending] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint] = 0;
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_accessoryViewSymbolPointSize] = 0x403E000000000000;
  id v4 = &v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_diagnosticEventID];
  *(void *)id v4 = 0;
  *((void *)v4 + 1) = 0;

  v39.receiver = v2;
  v39.Class super_class = (Class)type metadata accessor for SuiteManager();
  Class super_class = v39.super_class;
  id v5 = [super init];
  id v6 = self;
  char v7 = (void **)v5;
  id v8 = [v6 defaultCenter];
  if (qword_100182808 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_10018A420;
  uint64_t v10 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager;
  uint64_t v11 = *(uint64_t *)((char *)v7 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager);
  id v12 = self;
  swift_retain();
  id v13 = [v12 mainQueue];
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  unint64_t v37 = sub_10007F2D4;
  uint64_t v38 = v14;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  uint64_t v35 = sub_10004FC1C;
  Class v36 = (Class)&unk_100150510;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_release();
  id v16 = [v8 addObserverForName:v9 object:v11 queue:v13 usingBlock:v15];
  _Block_release(v15);
  swift_unknownObjectRelease();

  swift_release();
  id v17 = [v6 defaultCenter];
  if (qword_100182810 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_10018A428;
  uint64_t v19 = *(uint64_t *)((char *)v7 + v10);
  swift_retain();
  id v20 = [v12 mainQueue];
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  unint64_t v37 = sub_10007F2DC;
  uint64_t v38 = v21;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  uint64_t v35 = sub_10004FC1C;
  Class v36 = (Class)&unk_100150538;
  unint64_t v22 = _Block_copy(&aBlock);
  swift_release();
  id v23 = [v17 addObserverForName:v18 object:v19 queue:v20 usingBlock:v22];
  _Block_release(v22);
  swift_unknownObjectRelease();

  swift_release();
  uint64_t v24 = *(uint64_t *)((char *)v7 + v10);
  Class v36 = super_class;
  unint64_t v37 = (void (*)())&off_100150088;
  long long aBlock = v7;
  sub_10007F2E4((uint64_t)&aBlock, (uint64_t)v32);
  swift_beginAccess();
  uint64_t v25 = v7;
  swift_retain();
  sub_10007F34C((uint64_t)v32, v24 + 16);
  swift_endAccess();
  swift_release();
  LODWORD(v24) = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isCheckerBoardActive");
  swift_unknownObjectRelease();
  if (v24)
  {
    uint64_t v26 = self;
    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v37 = sub_10007F3B4;
    uint64_t v38 = v27;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    uint64_t v35 = sub_1000358AC;
    Class v36 = (Class)&unk_100150560;
    char v28 = _Block_copy(&aBlock);
    swift_release();
    NSString v29 = String._bridgeToObjectiveC()();
    [v26 addShutdownTask:v28 forReason:v29];

    _Block_release(v28);
  }
  else
  {
  }
  return v25;
}

void sub_10007945C()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0) {
    return;
  }
  uint64_t v1 = v0;
  strcpy((char *)v28, "deviceStateKey");
  HIBYTE(v28[1]) = -18;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10007D88C((uint64_t)v29), (v3 & 1) != 0))
  {
    sub_10003C5D8(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v30);
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  sub_10003C320((uint64_t)v29);
  if (!*((void *)&v31 + 1))
  {
    swift_bridgeObjectRelease();
LABEL_22:
    sub_10005A7D8((uint64_t)&v30);
    return;
  }
  sub_10003C374(0, &qword_100184340);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return;
  }
  id v4 = (void *)v28[0];
  strcpy((char *)v28, "deviceKey");
  WORD1(v28[1]) = 0;
  HIDWORD(v28[1]) = -385875968;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v5 = sub_10007D88C((uint64_t)v29), (v6 & 1) != 0))
  {
    sub_10003C5D8(*(void *)(v1 + 56) + 32 * v5, (uint64_t)&v30);
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10003C320((uint64_t)v29);
  if (!*((void *)&v31 + 1))
  {

    goto LABEL_22;
  }
  sub_10003AFD0(&qword_100184348);
  if (swift_dynamicCast())
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v7 = [v4 serialNumber];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      if (qword_1001827C8 != -1) {
        swift_once();
      }
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_100123B50;
      *(void *)(v11 + 56) = &type metadata for String;
      *(void *)(v11 + 64) = sub_10004D9B4();
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 40) = v10;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v13 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation;
      uint64_t v14 = *(void **)&Strong[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation];
      *(void *)&Strong[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation] = 0;
      id v15 = v4;

      id v16 = *(void **)&Strong[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
      *(void *)&Strong[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState] = v4;
      id v17 = v15;

      v29[0] = Strong;
      swift_getKeyPath();
      *(void *)(swift_allocObject() + 16) = Strong;
      uint64_t v18 = Strong;
      uint64_t v19 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
      swift_release();
      swift_release();
      id v20 = *(void **)&Strong[v13];
      *(void *)&Strong[v13] = v19;

      uint64_t v21 = (char *)swift_unknownObjectUnownedLoadStrong();
      objc_sync_enter(v21);
      unint64_t v22 = *(void **)&v21[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
      if (v22)
      {
        id v23 = [v22 serialNumber];
        uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v25;

        sub_1000B1FFC(v24, v26);
        swift_bridgeObjectRelease();
      }
      else
      {
        static os_log_type_t.error.getter();
        sub_10003C374(0, (unint64_t *)&qword_1001832C0);
        uint64_t v27 = (void *)static OS_os_log.default.getter();
        os_log(_:dso:log:_:_:)();
      }
      objc_sync_exit(v21);

      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
  else
  {
  }
}

void sub_100079904()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    strcpy((char *)v41, "deviceStateKey");
    HIBYTE(v41[1]) = -18;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10007D88C((uint64_t)v42), (v3 & 1) != 0))
    {
      sub_10003C5D8(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v43);
    }
    else
    {
      long long v43 = 0u;
      long long v44 = 0u;
    }
    sub_10003C320((uint64_t)v42);
    if (*((void *)&v44 + 1))
    {
      sub_10003C374(0, &qword_100184340);
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        return;
      }
      id v4 = (void *)v41[0];
      strcpy((char *)v41, "deviceKey");
      WORD1(v41[1]) = 0;
      HIDWORD(v41[1]) = -385875968;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v1 + 16) && (unint64_t v5 = sub_10007D88C((uint64_t)v42), (v6 & 1) != 0))
      {
        sub_10003C5D8(*(void *)(v1 + 56) + 32 * v5, (uint64_t)&v43);
      }
      else
      {
        long long v43 = 0u;
        long long v44 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10003C320((uint64_t)v42);
      if (*((void *)&v44 + 1))
      {
        sub_10003AFD0(&qword_100184348);
        if ((swift_dynamicCast() & 1) == 0)
        {

          return;
        }
        self;
        if (!swift_dynamicCastObjCClass()) {
          goto LABEL_32;
        }
        id v7 = [v4 serialNumber];
        uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v10 = v9;

        uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
        id v12 = *(void **)&Strong[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
        id v13 = v12;

        if (v12)
        {
          id v14 = [v13 serialNumber];

          uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v17 = v16;

          if (v8 == v15 && v10 == v17)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_27;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v18)
          {
LABEL_27:
            if (qword_1001827C8 != -1) {
              swift_once();
            }
            sub_10003AFD0((uint64_t *)&unk_1001836E0);
            uint64_t v19 = swift_allocObject();
            *(_OWORD *)(v19 + 16) = xmmword_100123B50;
            id v20 = [v4 serialNumber];
            uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v23 = v22;

            *(void *)(v19 + 56) = &type metadata for String;
            *(void *)(v19 + 64) = sub_10004D9B4();
            *(void *)(v19 + 32) = v21;
            *(void *)(v19 + 40) = v23;
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();
            swift_bridgeObjectRelease();
            uint64_t v24 = (char *)swift_unknownObjectUnownedLoadStrong();
            uint64_t v25 = *(void *)&v24[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager];
            swift_retain();

            id v26 = [v4 serialNumber];
            uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v29 = v28;

            swift_beginAccess();
            uint64_t v30 = *(void *)(v25 + 56);
            if (*(void *)(v30 + 16))
            {
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              unint64_t v31 = sub_10007D7FC(v27, v29);
              if (v32)
              {
                uint64_t v33 = *(void **)(*(void *)(v30 + 56) + 8 * v31);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                [v33 end];
                swift_release();
                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
LABEL_36:
                uint64_t v34 = (char *)swift_unknownObjectUnownedLoadStrong();
                uint64_t v35 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation;
                Class v36 = *(void **)&v34[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation];
                *(void *)&v34[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation] = 0;

                unint64_t v37 = *(void **)&v34[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
                *(void *)&v34[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState] = 0;

                *(void *)&long long v43 = v34;
                swift_getKeyPath();
                *(void *)(swift_allocObject() + 16) = v34;
                uint64_t v38 = v34;
                uint64_t v39 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
                swift_release();
                swift_release();
                unsigned __int8 v40 = *(void **)&v34[v35];
                *(void *)&v34[v35] = v39;

                swift_unknownObjectRelease();
                return;
              }
              swift_release();
              swift_bridgeObjectRelease_n();
            }
            else
            {
              swift_release();
            }
            swift_bridgeObjectRelease();
            goto LABEL_36;
          }
LABEL_32:

          swift_unknownObjectRelease();
          return;
        }

        swift_unknownObjectRelease();
        goto LABEL_24;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_10005A7D8((uint64_t)&v43);
  }
}

void sub_100079EA8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    unint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
    if (v2)
    {
      id v3 = [v2 serialNumber];
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v5;

      uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager];
      swift_beginAccess();
      if (*(void *)(*(void *)(v7 + 56) + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10007D7FC(v4, v6);
        if (v8)
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          self;
          uint64_t v9 = (void *)swift_dynamicCastObjCClass();
          if (v9) {
            [v9 archiveConnection];
          }
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_14;
        }
        swift_bridgeObjectRelease_n();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      static os_log_type_t.error.getter();
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      uint64_t v10 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)();
    }
LABEL_14:
    uint64_t v11 = self;
    NSString v12 = String._bridgeToObjectiveC()();
    [v11 removeShutdownTask:v12];
  }
}

void sub_10007A134(void *a1)
{
  unint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v2)
  {
    uint64_t v4 = &v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
    if (!swift_unknownObjectWeakLoadStrong()) {
      return;
    }
    uint64_t v5 = *((void *)v4 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (void *)swift_allocObject();
    void v7[2] = v1;
    void v7[3] = v2;
    v7[4] = a1;
    char v8 = *(void (**)(char *, void *, uint64_t (*)(), void *, uint64_t, uint64_t))(v5 + 48);
    id v9 = v2;
    v8(v1, a1, sub_10007F51C, v7, ObjectType, v5);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    id v9 = (id)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
}

void sub_10007A2C8(char *a1, id a2, uint64_t a3)
{
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v6 && (id v7 = [v6 suiteID]) != 0)
  {
  }
  else
  {
    uint64_t v8 = *(void *)&a1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager];
    id v9 = [a2 serialNumber];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v12 = v11;

    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a1;
    swift_beginAccess();
    uint64_t v14 = *(void *)(*(void *)(v8 + 56) + 16);
    uint64_t v15 = a1;
    if (v14)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10007D7FC(v10, (uint64_t)v12);
      if (v16)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        self;
        uint64_t v17 = swift_dynamicCastObjCClass();
        if (v17)
        {
          char v18 = (void *)v17;
          uint64_t v38 = sub_10007D4EC;
          uint64_t v39 = v13;
          long long aBlock = _NSConcreteStackBlock;
          unint64_t v35 = 1107296256;
          Class v36 = sub_10007D520;
          unint64_t v37 = &unk_1001500D8;
          uint64_t v19 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          [v18 requestSuiteStart:a3 completionHandler:v19];
          _Block_release(v19);
          swift_bridgeObjectRelease();

          swift_release();
          swift_unknownObjectRelease();
          return;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    long long aBlock = 0;
    unint64_t v35 = 0xE000000000000000;
    _StringGuts.grow(_:)(74);
    v20._object = (void *)0x800000010012CF50;
    v20._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    String.append(_:)(v20);
    v21._uint64_t countAndFlagsBits = v10;
    v21._object = v12;
    String.append(_:)(v21);
    v22._uint64_t countAndFlagsBits = 0xD000000000000029;
    v22._object = (void *)0x800000010012CF70;
    String.append(_:)(v22);
    sub_10006FB78();
    uint64_t v23 = swift_allocError();
    void *v24 = 0;
    v24[1] = 0xE000000000000000;
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_100123B50;
    swift_getErrorValue();
    swift_errorRetain();
    uint64_t v26 = Error.localizedDescription.getter();
    uint64_t v28 = v27;
    *(void *)(v25 + 56) = &type metadata for String;
    *(void *)(v25 + 64) = sub_10004D9B4();
    *(void *)(v25 + 32) = v26;
    *(void *)(v25 + 40) = v28;
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    uint64_t v29 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    uint64_t v30 = &v15[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v31 = *((void *)v30 + 1);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v33 = *(void (**)(char *, uint64_t, void, uint64_t, uint64_t, uint64_t))(v31 + 16);
      swift_errorRetain();
      v33(v15, a3, 0, v23, ObjectType, v31);
      swift_unknownObjectRelease();
      swift_errorRelease();
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_bridgeObjectRelease();

    swift_release();
  }
}

void sub_10007A71C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a6)
  {
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100123B50;
    swift_getErrorValue();
    swift_errorRetain();
    uint64_t v11 = Error.localizedDescription.getter();
    uint64_t v13 = v12;
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = sub_10004D9B4();
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v13;
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    uint64_t v14 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    uint64_t v15 = a7 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v16 = *(void *)(v15 + 8);
      uint64_t ObjectType = swift_getObjectType();
      char v18 = *(void (**)(uint64_t, void *, void, uint64_t, uint64_t, uint64_t))(v16 + 16);
      swift_errorRetain();
      v18(a7, a1, 0, a6, ObjectType, v16);
      swift_unknownObjectRelease();
      swift_errorRelease();
    }
    swift_errorRelease();
  }
  else
  {
    uint64_t v19 = (void *)(a7 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_diagnosticEventID);
    *uint64_t v19 = a2;
    v19[1] = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(a7 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_suiteCancellationPending))
    {
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      id v20 = a1;
      Swift::String v21 = static OS_os_log.default.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 138412290;
        id v25 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v24 = v20;

        _os_log_impl((void *)&_mh_execute_header, v21, v22, "[SuiteManager] Suite cancellation was pending at the time %@ was started. Cancelling now.", v23, 0xCu);
        sub_10003AFD0((uint64_t *)&unk_100186080);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      sub_10007AA1C(v20);
    }
  }
}

void sub_10007AA1C(void *a1)
{
  unint64_t v2 = v1;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v3)
  {
    id v5 = v3;
    id v6 = [v5 suiteID];
    if (v6)
    {

      uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager];
      id v8 = [v5 serialNumber];
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v2;
      *(void *)(v12 + 24) = a1;
      swift_beginAccess();
      uint64_t v13 = *(void *)(*(void *)(v7 + 56) + 16);
      uint64_t v14 = v2;
      id v15 = a1;
      uint64_t v16 = v14;
      id v17 = v15;
      if (v13)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10007D7FC(v9, (uint64_t)v11);
        if (v18)
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          self;
          uint64_t v19 = swift_dynamicCastObjCClass();
          if (v19)
          {
            id v20 = (void *)v19;
            uint64_t v41 = sub_10007F248;
            uint64_t v42 = v12;
            long long aBlock = _NSConcreteStackBlock;
            unint64_t v38 = 1107296256;
            uint64_t v39 = sub_10007D610;
            unsigned __int8 v40 = &unk_100150498;
            Swift::String v21 = _Block_copy(&aBlock);
            swift_retain();
            swift_release();
            [v20 requestSuiteFinishWithCompletionHandler:v21];
            _Block_release(v21);
            swift_bridgeObjectRelease();

            swift_release();
            swift_unknownObjectRelease();
            return;
          }
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      long long aBlock = 0;
      unint64_t v38 = 0xE000000000000000;
      _StringGuts.grow(_:)(74);
      v23._object = (void *)0x800000010012CF50;
      v23._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      String.append(_:)(v23);
      v24._uint64_t countAndFlagsBits = v9;
      v24._object = v11;
      String.append(_:)(v24);
      v25._uint64_t countAndFlagsBits = 0xD000000000000029;
      v25._object = (void *)0x800000010012CF70;
      String.append(_:)(v25);
      sub_10006FB78();
      uint64_t v26 = swift_allocError();
      void *v27 = 0;
      v27[1] = 0xE000000000000000;
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_100123B50;
      swift_getErrorValue();
      swift_errorRetain();
      uint64_t v29 = Error.localizedDescription.getter();
      uint64_t v31 = v30;
      *(void *)(v28 + 56) = &type metadata for String;
      *(void *)(v28 + 64) = sub_10004D9B4();
      *(void *)(v28 + 32) = v29;
      *(void *)(v28 + 40) = v31;
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      char v32 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();

      swift_errorRelease();
      uint64_t v33 = &v16[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v34 = *((void *)v33 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(char *, id, void, uint64_t, uint64_t, uint64_t))(v34 + 16))(v16, v17, 0, v26, ObjectType, v34);
        swift_unknownObjectRelease();
      }
      v16[OBJC_IVAR____TtC11Diagnostics12SuiteManager_suiteCancellationPending] = 0;
      swift_errorRelease();
      swift_bridgeObjectRelease();

      swift_release();
    }
    else
    {
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      os_log_type_t v22 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_suiteCancellationPending] = 1;
    }
  }
  else
  {
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    id v36 = (id)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
}

uint64_t sub_10007AF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_100123B50;
    swift_getErrorValue();
    swift_errorRetain();
    uint64_t v7 = Error.localizedDescription.getter();
    uint64_t v9 = v8;
    *(void *)(v6 + 56) = &type metadata for String;
    *(void *)(v6 + 64) = sub_10004D9B4();
    *(void *)(v6 + 32) = v7;
    *(void *)(v6 + 40) = v9;
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    uint64_t v10 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    swift_errorRelease();
  }
  uint64_t v11 = a2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v13 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v13 + 16))(a2, a3, 0, a1, ObjectType, v13);
    uint64_t result = swift_unknownObjectRelease();
  }
  *(unsigned char *)(a2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_suiteCancellationPending) = 0;
  return result;
}

void sub_10007B0E0(uint64_t a1, void (*a2)(uint64_t, id))
{
  if (*(void *)(v2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint) != a1) {
    goto LABEL_18;
  }
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (!v5) {
    goto LABEL_18;
  }
  id v6 = [v5 suitesAvailable];
  sub_10003C374(0, (unint64_t *)&unk_100184320);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v8 != 1) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void **)(v2 + v4);
  if (!v9) {
    goto LABEL_18;
  }
  id v10 = [v9 suitesAvailable];
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v11 >> 62))
  {
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_9;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_23;
  }
LABEL_9:
  if ((v11 & 0xC000000000000001) != 0)
  {
LABEL_24:
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    return;
  }
  id v12 = *(id *)(v11 + 32);
LABEL_12:
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  id v18 = [v13 suiteID];

  uint64_t v14 = v18;
  if (v18)
  {
    if (a2)
    {
      id v17 = v18;
      a2(1, v18);

      uint64_t v14 = v17;
    }

    return;
  }
LABEL_18:
  sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  id v15 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  if (a2) {
    a2(0, 0);
  }
}

id sub_10007B384()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SuiteManager();
  return [super dealloc];
}

uint64_t type metadata accessor for SuiteManager()
{
  return self;
}

void sub_10007B464(void *a1)
{
  objc_super v2 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [a1 dequeueReusableCellWithIdentifier:v4];

  if (v5)
  {
    type metadata accessor for SelfServiceViewCell();
    id v6 = (unsigned char *)swift_dynamicCastClass();
    if (v6) {
      goto LABEL_5;
    }
  }
  type metadata accessor for SelfServiceViewCell();
  id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
LABEL_5:
  v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleTruncated] = 1;
  unint64_t v7 = (void *)OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel;
  [*(id *)&v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel] setNumberOfLines:2];
  uint64_t v8 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (!v9) {
    return;
  }
  id v10 = v9;
  unint64_t v11 = IndexPath.section.getter();
  id v12 = (char *)[v10 suitesAvailable];

  sub_10003C374(0, (unint64_t *)&unk_100184320);
  uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v51 = v7;
  if ((v13 & 0xC000000000000001) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v14 = *(id *)(v13 + 8 * v11 + 32);
  }
  unint64_t v7 = v14;
  id v12 = v2;
  swift_bridgeObjectRelease();
  id v54 = [v7 suiteID];
  uint64_t v15 = qword_100182818;
  objc_super v2 = v6;
  if (v15 != -1) {
LABEL_28:
  }
    swift_once();
  uint64_t v16 = qword_10018A430;
  uint64_t v53 = v7;
  id v17 = [v7 primaryAssetLocator:v51];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v20 = v19;

  sub_1000C0E3C(v18, v20, v16, v2);
  swift_bridgeObjectRelease();

  Swift::String v21 = *(void **)&v12[v8];
  if (v21)
  {
    id v22 = [v21 suitesAvailable];
    unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v24 = v54;
    Swift::String v25 = sub_1000908F8(v23);
    swift_bridgeObjectRelease();

    if (v25)
    {
      id v26 = [v25 suiteNameLocalizedString];
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v29 = 0;
  }
  uint64_t v30 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleText];
  uint64_t *v30 = v27;
  v30[1] = v29;
  swift_bridgeObjectRelease();
  if (v30[1])
  {
    uint64_t v31 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleLabel];
    swift_bridgeObjectRetain();
    id v32 = v31;
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v32 setText:v33];
  }
  uint64_t v34 = *(void **)&v12[v8];
  if (v34
    && (id v35 = [v34 suitesAvailable],
        unint64_t v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v35,
        id v37 = v54,
        unint64_t v38 = sub_1000908F8(v36),
        swift_bridgeObjectRelease(),
        v37,
        v38))
  {
    id v39 = [v38 suiteDescriptionLocalizedString];
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v42 = 0;
  }
  long long v43 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleText];
  uint64_t *v43 = v40;
  v43[1] = v42;
  swift_bridgeObjectRelease();
  if (v43[1])
  {
    long long v44 = *(void **)&v6[v52];
    swift_bridgeObjectRetain();
    id v45 = v44;
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v45 setText:v46];
  }
  v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreEnabled] = 1;
  id v47 = *(id *)&v2[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel];
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x4F4D5F4E5241454CLL, (void *)0xEA00000000004552);
  NSString v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v47 setText:v48];

  unsigned int v49 = v2;
  id v50 = sub_10007BEB4((uint64_t)v12, v54);
  [v49 setAccessoryView:v50];
}

uint64_t sub_10007B9D8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = __chkstk_darwin(v10);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v27 = result;
    sub_10003C374(0, (unint64_t *)&qword_100182E40);
    id v15 = a1;
    uint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a3;
    *(void *)(v17 + 24) = v15;
    aBlock[4] = sub_10007F1F8;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000358AC;
    aBlock[3] = &unk_1001503F8;
    uint64_t v18 = _Block_copy(aBlock);
    id v19 = v15;
    id v20 = a3;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10003AF78();
    sub_10003AFD0((uint64_t *)&unk_100182E50);
    sub_10003B014();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v27);
  }
  else if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100123B50;
    swift_getErrorValue();
    uint64_t v22 = Error.localizedDescription.getter();
    uint64_t v24 = v23;
    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = sub_10004D9B4();
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v24;
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    Swift::String v25 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();

    return swift_errorRelease();
  }
  return result;
}

void sub_10007BD64(uint64_t a1, void *a2)
{
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImage;
  NSString v4 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImage);
  *(void *)(a1 + OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImage) = a2;
  id v5 = a2;

  uint64_t v6 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImageView);
  uint64_t v7 = *(void **)(a1 + v3);
  uint64_t v8 = self;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v7;
  void v13[4] = sub_10007F200;
  v13[5] = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1000358AC;
  v13[3] = &unk_100150448;
  uint64_t v10 = _Block_copy(v13);
  id v11 = v7;
  id v12 = v6;
  swift_release();
  [v8 transitionWithView:v12 duration:5242880 options:v10 animations:0 completion:0.1];
  _Block_release(v10);
}

id sub_10007BEB4(uint64_t a1, void *a2)
{
  double v3 = *(double *)(a1 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_accessoryViewSymbolPointSize);
  NSString v4 = self;
  id v5 = [v4 configurationWithPointSize:v3];
  id v6 = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.478431373 blue:1.0 alpha:1.0];
  id v7 = [v4 configurationWithHierarchicalColor:v6];

  id v8 = [v7 configurationByApplyingConfiguration:v5];
  id v9 = v8;
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [self systemImageNamed:v10 withConfiguration:v9];

  if (v11)
  {
    id v12 = [v11 imageFlippedForRightToLeftLayoutDirection];
  }
  else
  {
    id v12 = 0;
  }
  id v13 = [self buttonWithType:0];
  [v13 setFrame:0.0, 0.0, v3, v3];
  [v13 setClipsToBounds:1];
  [v13 setImage:v12 forState:0];
  sub_10003C374(0, (unint64_t *)&qword_1001831A8);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a2;
  id v16 = a2;
  uint64_t v17 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v13 addAction:v17 forControlEvents:64];

  return v13;
}

void sub_10007C17C(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    id v6 = *(void **)(Strong + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
    if (v6)
    {
      uint64_t v7 = Strong + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v8 = *(void *)(v7 + 8);
        uint64_t ObjectType = swift_getObjectType();
        NSString v10 = (void *)swift_allocObject();
        _DWORD v10[2] = v5;
        _OWORD v10[3] = v6;
        v10[4] = a3;
        id v11 = *(void (**)(id, void *, void (*)(), void *, uint64_t, uint64_t))(v8 + 48);
        id v12 = v6;
        id v13 = v5;
        v11(v13, a3, sub_10003B9D4, v10, ObjectType, v8);

        swift_release();
        swift_unknownObjectRelease();
        id v5 = v12;
      }
    }
    else
    {
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      uint64_t v14 = static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      id v5 = (void *)v14;
    }
  }
}

uint64_t sub_10007C640(id a1)
{
  if (qword_100182818 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10018A430;
  id v3 = [a1 primaryAssetLocator];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  sub_1000B6F98(v4, v6, v2);
  swift_bridgeObjectRelease();
  uint64_t v7 = qword_10018A430;
  id v8 = [a1 secondaryAssetLocator];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  sub_1000B72AC(v9, v11, v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10007C740(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  id v8 = &a2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = *((void *)v8 + 1);
    uint64_t ObjectType = swift_getObjectType();
    id v12 = (void *)swift_allocObject();
    v12[2] = a1;
    uint64_t v12[3] = a2;
    void v12[4] = a3;
    v12[5] = a4;
    id v13 = *(void (**)(char *, uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    uint64_t v14 = a2;
    swift_retain();
    v13(v14, a1, sub_10007F49C, v12, ObjectType, v10);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10007C860(id a1, unint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (a2 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v9 = 4;
      do
      {
        uint64_t v10 = v9 - 4;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = v9 - 3;
          if (v12) {
            goto LABEL_16;
          }
        }
        else
        {
          id v11 = *(id *)(a2 + 8 * v9);
          BOOL v12 = __OFADD__(v10, 1);
          uint64_t v13 = v9 - 3;
          if (v12)
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        id v15 = v11;
        if ([v11 endpoint] == a1)
        {
          swift_bridgeObjectRelease();
          id v14 = [v15 endpoint];
          *(void *)(a3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint) = v14;
          a4(a1);
          goto LABEL_13;
        }

        ++v9;
      }
      while (v13 != v8);
    }
  }
  swift_bridgeObjectRelease();
  sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  id v15 = (id)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
LABEL_13:
}

void sub_10007CA04(uint64_t a1, uint64_t a2)
{
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000002ELL, (void *)0x800000010012D0E0);
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000030, (void *)0x800000010012D110);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [self alertControllerWithTitle:v4 message:v5 preferredStyle:1];

  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x5952544552, (void *)0xE500000000000000);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  swift_retain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v20 = sub_10007F07C;
  uint64_t v21 = v7;
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_100046950;
  id v19 = &unk_100150218;
  uint64_t v9 = _Block_copy(&v16);
  swift_release();
  uint64_t v10 = self;
  id v11 = [v10 actionWithTitle:v8 style:0 handler:v9];
  _Block_release(v9);

  [v6 addAction:v11];
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x800000010012D150);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  swift_retain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v20 = sub_10007F0AC;
  uint64_t v21 = v12;
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_100046950;
  id v19 = &unk_100150268;
  id v14 = _Block_copy(&v16);
  swift_release();
  id v15 = [v10 actionWithTitle:v13 style:2 handler:v14];
  _Block_release(v14);

  [v6 addAction:v15];
  [v6 showOnTopWithAnimated:1 completion:0];
}

uint64_t sub_10007CD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = [[self currentPlatform] isCheckerBoardActive];
  swift_unknownObjectRelease();
  id v6 = sub_10007D0A0;
  uint64_t v7 = swift_allocObject();
  if (v5) {
    id v6 = sub_10007CEBC;
  }
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  sub_10003AF68((uint64_t)v6);
  swift_retain();
  sub_100070524(1);
  sub_10003B0B8((uint64_t)v6);
  sub_10003B0B8((uint64_t)v6);

  return swift_release();
}

void sub_10007CEBC()
{
  if (qword_1001827A8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10018A3D0;
  uint64_t v1 = *(void **)(qword_10018A3D0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v1)
  {
    id v2 = [v1 serialNumber];
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;

    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceManager);
    swift_beginAccess();
    if (*(void *)(*(void *)(v6 + 56) + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10007D7FC(v3, v5);
      if (v7)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        self;
        NSString v8 = (void *)swift_dynamicCastObjCClass();
        if (v8) {
          [v8 archiveConnection];
        }
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return;
      }
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
    return;
  }
  static os_log_type_t.error.getter();
  sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  id v9 = (id)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
}

id sub_10007D0A0()
{
  if (qword_100182740 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_10018A358;
  uint64_t v1 = *(NSObject **)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_10007F110;
  *(void *)(v3 + 24) = v2;
  void v11[4] = sub_100042974;
  v11[5] = v3;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_10004FD38;
  v11[3] = &unk_100150308;
  uint64_t v4 = _Block_copy(v11);
  id v5 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v1, v4);
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  id result = (id)swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    char v7 = (unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
    *(unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = (*(unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState) & 1) == 0;
    id v8 = sub_10004CDCC();
    [v8 setNearbySharingEnabled:(*v7 & 1) == 0];

    uint64_t v9 = qword_10018A358;
    id v10 = sub_10004CDCC();
    [v10 setDiscoverableMode:*(void *)(v9 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting)];

    id result = *(id *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_captureButtonAssertion);
    if (result) {
      return [result invalidate];
    }
  }
  return result;
}

uint64_t sub_10007D2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  return a7(1);
}

uint64_t sub_10007D2F8(uint64_t a1, void *a2, unint64_t a3, uint64_t (*a4)(void), char **a5)
{
  return sub_10007E52C(a2, a3, a4, a5);
}

uint64_t sub_10007D32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *v5;
  uint64_t v10 = *v5 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 32))(v9, a3, a4, a5, ObjectType, v12);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10007D3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *v5;
  uint64_t v10 = *v5 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 16))(v9, a3, a4, a5, ObjectType, v12);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10007D4B4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10007D4EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_10007A71C(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16));
}

uint64_t sub_10007D4F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3(0);
}

uint64_t sub_10007D520(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6 = a4;
  id v8 = *(void (**)(id, uint64_t, uint64_t, uint64_t, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
    if (v6)
    {
LABEL_3:
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v13;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
LABEL_6:
  swift_retain();
  id v14 = a2;
  id v15 = a5;
  v8(v14, v9, v11, v12, v6, a5);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_10007D610(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_10007D67C(int a1, id a2, void (*a3)(void))
{
  id v4 = [a2 identifier];
  a3();
}

uint64_t sub_10007D6E8(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_10007D6F8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

unsigned char **sub_10007D734(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  id v4 = *result;
  unsigned char *v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void sub_10007D744(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v7;
  id v8 = *a2;
  if (*a2)
  {
    *id v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

unint64_t sub_10007D7FC(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_10007DB58(a1, a2, v4);
}

uint64_t sub_10007D874(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007D884()
{
  return swift_release();
}

unint64_t sub_10007D88C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10007DC3C(a1, v4);
}

unint64_t sub_10007D8D0(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_10007DD04(a1, v2);
}

unint64_t sub_10007D93C(int a1)
{
  uint64_t v2 = static Hasher._hash(seed:bytes:count:)();

  return sub_10007DDA4(a1, v2);
}

unint64_t sub_10007D988(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_10007DE40(a1, v2);
}

unint64_t sub_10007DA1C(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_10007DE40(a1, v2);
}

unint64_t sub_10007DAAC(uint64_t a1)
{
  Hasher.init(_seed:)();
  id v2 = [*(id *)(a1 + 40) serialNumber];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v3 = Hasher._finalize()();

  return sub_10007DFB8(a1, v3);
}

unint64_t sub_10007DB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10007DC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10007F0B4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10003C320((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10007DD04(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10007DDA4(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10007DE40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10007DFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v18 = ~v3;
    unint64_t v5 = *(void **)(a1 + 40);
    while (1)
    {
      uint64_t v6 = *(void **)(*(void *)(*(void *)(v2 + 48) + 8 * v4) + 40);
      swift_retain();
      id v7 = [v6 serialNumber];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      id v11 = [v5 serialNumber];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      if (v8 == v12 && v10 == v14) {
        break;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v18;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_release();
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

void sub_10007E128(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation;
  unint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation];
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceStateObservation] = 0;

  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState] = a1;
  id v7 = a1;

  swift_getKeyPath();
  *(void *)(swift_allocObject() + 16) = v2;
  uint64_t v8 = v2;
  uint64_t v9 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();
  uint64_t v10 = *(void **)&v2[v4];
  *(void *)&v2[v4] = v9;
}

uint64_t sub_10007E214()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v1)
  {
    id v2 = [v1 suitesAvailable];
    sub_10003C374(0, (unint64_t *)&unk_100184320);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100123B50;
  *(void *)(v5 + 56) = &type metadata for Int;
  *(void *)(v5 + 64) = &protocol witness table for Int;
  *(void *)(v5 + 32) = v4;
  sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  uint64_t v6 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  return v4;
}

void sub_10007E378()
{
  uint64_t v1 = v0;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (!v2) {
    return;
  }
  id v3 = v2;
  unint64_t v4 = IndexPath.section.getter();
  id v5 = [v3 suitesAvailable];

  sub_10003C374(0, (unint64_t *)&unk_100184320);
  uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v6 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v7 = *(id *)(v6 + 8 * v4 + 32);
      goto LABEL_6;
    }
    __break(1u);
    return;
  }
  id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_6:
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  id v12 = [v8 suiteID];

  if (v12)
  {
    uint64_t v9 = v1 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v10 + 40))(v1, v12, ObjectType, v10);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_10007E52C(void *a1, unint64_t a2, uint64_t (*a3)(void), char **a4)
{
  char v81 = a3;
  unint64_t v80 = a2;
  uint64_t v97 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  long long v95 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  id v94 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v11 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  id v92 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 state];
  id v14 = [v13 serialNumber];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  uint64_t v78 = v4;
  uint64_t v77 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  uint64_t v18 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (!v18)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v79 = a4;
  id v19 = [v18 serialNumber];
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  if (v15 == v20 && v17 == v22)
  {
    swift_bridgeObjectRelease_n();
    Swift::String v25 = v79;
    goto LABEL_11;
  }
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::String v25 = v79;
  if ((v24 & 1) == 0)
  {
LABEL_9:
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    uint64_t v26 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    return v81(0);
  }
LABEL_11:
  uint64_t v28 = v80;
  uint64_t v76 = v9;
  if (!(v80 >> 62))
  {
    uint64_t v29 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v30 = v28;
    if (v29) {
      goto LABEL_13;
    }
LABEL_35:
    swift_bridgeObjectRelease();
LABEL_36:
    id v51 = v78;
    uint64_t v52 = v77;
    uint64_t v53 = (void *)swift_allocObject();
    id v54 = v81;
    v53[2] = v51;
    v53[3] = v54;
    v53[4] = v25;
    id v55 = *(void **)&v51[v52];
    if (v55)
    {
      swift_retain();
      id v56 = v51;
      if ([v55 phase] == (id)1)
      {
        if (!v29)
        {
LABEL_45:
          id v67 = &v51[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
          if (!swift_unknownObjectWeakLoadStrong()) {
            return swift_release();
          }
          uint64_t v68 = *((void *)v67 + 1);
          uint64_t v69 = v51;
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v71 = (void *)swift_allocObject();
          unint64_t v72 = v80;
          v71[2] = v80;
          v71[3] = v69;
          v71[4] = v81;
          v71[5] = v25;
          uint64_t v73 = *(void (**)(void *, unint64_t, void (*)(void *), void *, uint64_t, uint64_t))(v68 + 8);
          swift_bridgeObjectRetain();
          swift_retain();
          v73(v69, v72, sub_10007F028, v71, ObjectType, v68);
          swift_release();
          swift_release();
          return swift_unknownObjectRelease();
        }
      }
      else
      {
        id v58 = *(void **)&v51[v52];
        if (!v58) {
          goto LABEL_45;
        }
        id v59 = [v58 phase];
        if (!v29 || v59 != (id)5) {
          goto LABEL_45;
        }
      }
      static os_log_type_t.debug.getter();
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      id v60 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)();

      sub_10003C374(0, (unint64_t *)&qword_100182E40);
      id v61 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = sub_10007F018;
      *(void *)(v62 + 24) = v53;
      long long v103 = sub_10007F06C;
      uint64_t v104 = v62;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v100 = 1107296256;
      uint64_t v101 = sub_1000358AC;
      long long v102 = &unk_100150178;
      id v63 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id v64 = v94;
      static DispatchQoS.unspecified.getter();
      long long aBlock = (void **)_swiftEmptyArrayStorage;
      sub_10003AF78();
      sub_10003AFD0((uint64_t *)&unk_100182E50);
      sub_10003B014();
      id v65 = v95;
      uint64_t v66 = v97;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v63);
      swift_release();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v65, v66);
      return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v64, v96);
    }
    swift_retain();
    id v57 = v51;
    goto LABEL_45;
  }
LABEL_34:
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v30 = v28;
  if (!v29) {
    goto LABEL_35;
  }
LABEL_13:
  uint64_t v31 = 4;
  Swift::String v25 = &selRef_beginUpload;
  while (1)
  {
    if ((v30 & 0xC000000000000001) != 0) {
      id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v32 = *(id *)(v30 + 8 * v31);
    }
    NSString v33 = v32;
    uint64_t v28 = v31 - 3;
    if (__OFADD__(v31 - 4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if ([v32 endpoint] == (id)1) {
      break;
    }

    ++v31;
    if (v28 == v29)
    {
      swift_bridgeObjectRelease();
LABEL_31:
      Swift::String v25 = v79;
      goto LABEL_36;
    }
  }
  swift_bridgeObjectRelease();
  id v34 = [v33 suites];

  sub_10003C374(0, (unint64_t *)&unk_100184320);
  unint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v36 = v76;
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v37 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  Swift::String v25 = v79;
  if (!v37)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_36;
  }
  uint64_t v75 = v7;
  uint64_t result = sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v91 = result;
  if (v37 >= 1)
  {
    uint64_t v38 = 0;
    unint64_t v87 = v35 & 0xC000000000000001;
    unsigned int v86 = enum case for DispatchQoS.QoSClass.default(_:);
    id v85 = (void (**)(char *, void, uint64_t))(v11 + 104);
    id v84 = (void (**)(char *, uint64_t))(v11 + 8);
    id v83 = &v101;
    id v82 = (void (**)(char *, uint64_t))(v75 + 8);
    id v39 = (void (**)(char *, uint64_t))(v36 + 8);
    unint64_t v89 = v35;
    uint64_t v90 = v29;
    uint64_t v88 = v37;
    uint64_t v40 = v95;
    do
    {
      if (v87) {
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v41 = *(id *)(v35 + 8 * v38 + 32);
      }
      uint64_t v42 = v41;
      ++v38;
      long long v44 = v92;
      uint64_t v43 = v93;
      (*v85)(v92, v86, v93);
      id v45 = (void *)static OS_dispatch_queue.global(qos:)();
      (*v84)(v44, v43);
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v42;
      long long v103 = sub_10007F074;
      uint64_t v104 = v46;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v100 = 1107296256;
      uint64_t v101 = sub_1000358AC;
      long long v102 = &unk_1001501C8;
      id v47 = _Block_copy(&aBlock);
      id v48 = v42;
      unsigned int v49 = v94;
      static DispatchQoS.unspecified.getter();
      id v98 = _swiftEmptyArrayStorage;
      sub_10003AF78();
      sub_10003AFD0((uint64_t *)&unk_100182E50);
      sub_10003B014();
      uint64_t v50 = v97;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v47);

      (*v82)(v40, v50);
      (*v39)(v49, v96);

      swift_release();
      unint64_t v35 = v89;
      uint64_t v29 = v90;
    }
    while (v88 != v38);
    swift_bridgeObjectRelease_n();
    uint64_t v7 = v75;
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007EFD8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10007F018(uint64_t a1)
{
  return sub_10007C740(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_10007F028(void *a1)
{
  sub_10007C860(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(id))(v1 + 32));
}

uint64_t sub_10007F034()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10007F06C()
{
  sub_10007CA04(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10007F074()
{
  return sub_10007C640(*(id *)(v0 + 16));
}

uint64_t sub_10007F07C()
{
  return (*(uint64_t (**)(void *))(v0 + 16))(&_swiftEmptyArrayStorage);
}

uint64_t sub_10007F0AC(uint64_t a1)
{
  return sub_10007CD80(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10007F0B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_10007F110()
{
  sub_10004C978(*(void *)(v0 + 16));
}

uint64_t sub_10007F118()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007F12C()
{
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10007F174()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007F1AC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10007F1EC(uint64_t a1)
{
  sub_10007C17C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10007F1F8()
{
  sub_10007BD64(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_10007F200()
{
  return sub_10009967C(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10007F208()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007F248(uint64_t a1)
{
  return sub_10007AF58(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10007F254()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10007F29C()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10007F2D4()
{
}

void sub_10007F2DC()
{
}

uint64_t sub_10007F2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0((uint64_t *)&unk_100184330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007F34C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0((uint64_t *)&unk_100184330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10007F3B4()
{
}

id sub_10007F3BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v2 = *(void **)(*a1 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  *a2 = v2;
  return v2;
}

void sub_10007F3D4(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_10007E128(v1);
}

const char *sub_10007F424()
{
  return "progress";
}

id sub_10007F430@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 progress];
  *a2 = result;
  return result;
}

id sub_10007F46C(void *a1, id *a2)
{
  return [*a2 setProgress:*a1];
}

void sub_10007F480(uint64_t a1, uint64_t a2)
{
  sub_100078D0C(a1, a2, *(void *)(v2 + 16));
}

void sub_10007F488(id a1)
{
  if (a1 != (id)1) {
}
  }

void destroy for SelfServiceSuiteResultsComponentView(uint64_t a1)
{
}

uint64_t initializeWithCopy for SelfServiceSuiteResultsComponentView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  id v3 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  id v4 = v3;
  return a1;
}

void *assignWithCopy for SelfServiceSuiteResultsComponentView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  id v3 = (void *)a2[3];
  id v4 = (void *)a1[3];
  a1[3] = v3;
  id v5 = v3;

  return a1;
}

uint64_t assignWithTake for SelfServiceSuiteResultsComponentView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  id v3 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for SelfServiceSuiteResultsComponentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelfServiceSuiteResultsComponentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelfServiceSuiteResultsComponentView()
{
  return &type metadata for SelfServiceSuiteResultsComponentView;
}

uint64_t sub_10007F694()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10007F6B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [a1 name];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  uint64_t v52 = v5;
  uint64_t v53 = v7;
  sub_100061B00();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v45 = v9;
  uint64_t v46 = v8;
  char v11 = v10;
  uint64_t v47 = v12;
  id v13 = [a1 value];
  if (v13)
  {
    id v14 = v13;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    uint64_t v53 = v16;
    uint64_t v17 = Text.init<A>(_:)();
    uint64_t v19 = v18;
    LOBYTE(v16) = v20 & 1;
    id v21 = [self systemGrayColor];
    uint64_t v52 = Color.init(uiColor:)();
    uint64_t v22 = Text.foregroundStyle<A>(_:)();
    uint64_t v50 = v23;
    uint64_t v51 = v22;
    uint64_t v48 = v24 & 1;
    uint64_t v49 = v25;
    sub_1000824C0(v17, v19, v16);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v50 = 0;
    uint64_t v51 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
  }
  id v26 = [a1 status];
  if (v26)
  {
    uint64_t v27 = v26;
    sub_100090CB8(v26, (uint64_t)&v52);

    uint64_t v43 = v53;
    uint64_t v44 = v52;
    uint64_t v28 = v55;
    uint64_t v42 = v54;
    uint64_t v29 = (unsigned __int16)v56;
    char v30 = v11;
    int v31 = BYTE2(v56);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v32 = v52;
    uint64_t v33 = v53;
    uint64_t v34 = v54;
    uint64_t v35 = v55;
    uint64_t v36 = v56;
    uint64_t v37 = v57;
    BOOL v38 = v31 == 0;
    char v11 = v30;
    uint64_t v39 = 0x10000;
    if (v38) {
      uint64_t v39 = 0;
    }
    uint64_t v40 = v39 | v29;
  }
  else
  {
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v42 = 0;
    uint64_t v28 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v40 = 16711680;
  }
  *(void *)a2 = v46;
  *(void *)(a2 + 8) = v45;
  *(unsigned char *)(a2 + 16) = v11 & 1;
  *(void *)(a2 + 24) = v47;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = v51;
  *(void *)(a2 + 56) = v49;
  *(void *)(a2 + 64) = v48;
  *(void *)(a2 + 72) = v50;
  *(void *)(a2 + 80) = v44;
  *(void *)(a2 + 88) = v43;
  *(void *)(a2 + 96) = v42;
  *(void *)(a2 + 104) = v28;
  *(void *)(a2 + 112) = v40;
  *(void *)(a2 + 120) = v32;
  *(void *)(a2 + 128) = v33;
  *(void *)(a2 + 136) = v34;
  *(void *)(a2 + 144) = v35;
  *(void *)(a2 + 152) = v36;
  *(void *)(a2 + 160) = v37;
  sub_100082358(v46, v45, v11 & 1);
  swift_bridgeObjectRetain();
  sub_100082368(v51, v49, v48, v50);
  sub_1000823AC(v44, v43, v42, v28, v40);
  sub_100082414(v44, v43, v42, v28, v40);
  sub_10008247C(v51, v49, v48, v50);
  sub_1000824C0(v46, v45, v11 & 1);
  return swift_bridgeObjectRelease();
}

double sub_10007FA34@<D0>(uint64_t a1@<X8>)
{
  id v3 = *(void **)(v1 + 8);
  uint64_t v4 = static VerticalAlignment.center.getter();
  sub_10007F6B0(v3, (uint64_t)v11);
  *(_OWORD *)((char *)&v13[4] + 7) = v11[4];
  *(_OWORD *)((char *)&v13[3] + 7) = v11[3];
  *(_OWORD *)((char *)&v13[7] + 7) = v11[7];
  *(_OWORD *)((char *)&v13[8] + 7) = v11[8];
  *(_OWORD *)((char *)&v13[9] + 7) = v11[9];
  *(void *)((char *)&v13[10] + 7) = v12;
  *(_OWORD *)((char *)&v13[5] + 7) = v11[5];
  *(_OWORD *)((char *)&v13[6] + 7) = v11[6];
  *(_OWORD *)((char *)v13 + 7) = v11[0];
  *(_OWORD *)((char *)&v13[1] + 7) = v11[1];
  *(_OWORD *)((char *)&v13[2] + 7) = v11[2];
  long long v5 = v13[6];
  *(_OWORD *)(a1 + 129) = v13[7];
  long long v6 = v13[9];
  *(_OWORD *)(a1 + 145) = v13[8];
  *(_OWORD *)(a1 + 161) = v6;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)((char *)&v13[9] + 15);
  long long v7 = v13[2];
  *(_OWORD *)(a1 + 65) = v13[3];
  long long v8 = v13[5];
  *(_OWORD *)(a1 + 81) = v13[4];
  *(_OWORD *)(a1 + 97) = v8;
  *(_OWORD *)(a1 + 113) = v5;
  double result = *(double *)v13;
  long long v10 = v13[1];
  *(_OWORD *)(a1 + 17) = v13[0];
  *(_OWORD *)(a1 + 33) = v10;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 49) = v7;
  return result;
}

uint64_t sub_10007FB34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  id v106 = a2;
  uint64_t v105 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  unint64_t v89 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v94 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v90 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003AFD0(&qword_100184360);
  __chkstk_darwin(v11 - 8);
  unint64_t v87 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10003AFD0(&qword_100184368);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ListSectionSpacing();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10003AFD0(&qword_100184370);
  uint64_t v107 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v22 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_10003AFD0(&qword_100184378);
  __chkstk_darwin(v83);
  id v82 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10003AFD0(&qword_100184380);
  uint64_t v88 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  unsigned int v86 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_10003AFD0(&qword_100184388);
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  char v81 = (char *)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_10003AFD0(&qword_100184390);
  uint64_t v102 = *(void *)(v103 - 8);
  uint64_t v26 = __chkstk_darwin(v103);
  uint64_t v101 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  long long v95 = (char *)&v76 - v29;
  __chkstk_darwin(v28);
  uint64_t v100 = (char *)&v76 - v30;
  id v31 = [a1 name];
  uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v97 = v32;

  uint64_t v96 = static Font.title.getter();
  int v91 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  double v108 = a3;
  double v109 = a4;
  double v110 = a5;
  id v111 = a1;
  sub_10003AFD0(&qword_100184398);
  sub_1000819C0(&qword_1001843A0, &qword_100184398, (void (*)(void))sub_1000817CC);
  uint64_t v79 = v22;
  List<>.init(content:)();
  static ListSectionSpacing.custom(_:)();
  uint64_t v41 = *(int *)(v14 + 44);
  uint64_t v77 = v16;
  uint64_t v42 = &v16[v41];
  uint64_t v80 = v18;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v78 = v20;
  v43(&v16[v41], v20, v17);
  uint64_t v44 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  v44(v42, 0, 1, v17);
  uint64_t v45 = v84;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v16, v22, v84);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v47 = (uint64_t)v87;
  v43(v87, v20, v17);
  v44((char *)v47, 0, 1, v17);
  uint64_t v48 = v83;
  uint64_t v49 = (uint64_t)v82;
  uint64_t v50 = (uint64_t *)&v82[*(int *)(v83 + 36)];
  uint64_t v51 = sub_10003AFD0(&qword_100184460);
  sub_100078BD8(v47, (uint64_t)v50 + *(int *)(v51 + 28), &qword_100184360);
  *uint64_t v50 = KeyPath;
  uint64_t v52 = v89;
  uint64_t v53 = (uint64_t)v77;
  sub_100078BD8((uint64_t)v77, v49, &qword_100184368);
  sub_10003C44C(v47, &qword_100184360);
  sub_10003C44C(v53, &qword_100184368);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v17);
  uint64_t v54 = v85;
  (*(void (**)(char *, uint64_t))(v107 + 8))(v79, v45);
  uint64_t v55 = v90;
  InsetGroupedListStyle.init()();
  unint64_t v56 = sub_100081D74();
  uint64_t v57 = v86;
  id v58 = (void *)v93;
  View.listStyle<A>(_:)();
  (*(void (**)(char *, void *))(v94 + 8))(v55, v58);
  sub_10003C44C(v49, &qword_100184378);
  uint64_t v59 = static Color.clear.getter();
  id v115 = &protocol witness table for InsetGroupedListStyle;
  uint64_t v116 = v59;
  uint64_t v112 = v48;
  uint64_t v113 = v58;
  unint64_t v114 = v56;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  id v61 = v81;
  View.scrollContentBackground<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v57, v54);
  static ScrollIndicatorVisibility.never.getter();
  LOBYTE(v17) = static Axis.Set.vertical.getter();
  unsigned __int8 v62 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v17) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v62) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v112 = v54;
  uint64_t v113 = &type metadata for Color;
  unint64_t v114 = OpaqueTypeConformance2;
  id v115 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  id v63 = v95;
  uint64_t v64 = v99;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v52, v105);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v61, v64);
  uint64_t v65 = v102;
  uint64_t v66 = v100;
  id v67 = v63;
  uint64_t v68 = v103;
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v100, v67, v103);
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  id v70 = v101;
  v69(v101, v66, v68);
  uint64_t v71 = v106;
  uint64_t v72 = v97;
  uint64_t *v106 = v92;
  v71[1] = v72;
  v71[2] = v96;
  *((unsigned char *)v71 + 24) = v91;
  v71[4] = v34;
  v71[5] = v36;
  v71[6] = v38;
  v71[7] = v40;
  *((unsigned char *)v71 + 64) = 0;
  uint64_t v73 = sub_10003AFD0(&qword_100184498);
  v69((char *)v71 + *(int *)(v73 + 48), v70, v68);
  uint64_t v74 = *(void (**)(char *, uint64_t))(v65 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v74(v66, v68);
  v74(v70, v68);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100080668(void *a1, double a2, double a3, double a4)
{
  id v8 = [a1 sections];
  sub_10003C374(0, &qword_1001844A0);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v9 >> 62))
  {
    swift_bridgeObjectRelease();
LABEL_3:
    swift_getKeyPath();
    uint64_t v10 = swift_allocObject();
    *(double *)(v10 + 16) = a2;
    *(double *)(v10 + 24) = a3;
    *(double *)(v10 + 32) = a4;
    *(void *)(v10 + 40) = a1;
    id v11 = a1;
    sub_10003AFD0(&qword_1001844A8);
    sub_10003AFD0(&qword_1001843B0);
    sub_100081F20();
    sub_1000817CC();
    return ForEach<>.init(_:id:content:)();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease_n();
  if ((v13 & 0x8000000000000000) == 0) {
    goto LABEL_3;
  }
  __break(1u);
  return result;
}

void sub_1000807F8(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v62 = a3;
  uint64_t v11 = type metadata accessor for Prominence();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v61 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10003AFD0(&qword_1001843B8);
  uint64_t v60 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v59 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10003AFD0(&qword_1001844C0);
  uint64_t v15 = *(void *)(v66 - 8);
  uint64_t v16 = __chkstk_darwin(v66);
  id v58 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v55 - v18;
  uint64_t v63 = sub_10003AFD0(&qword_1001844C8);
  __chkstk_darwin(v63);
  uint64_t v64 = (char *)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10003AFD0(&qword_1001843E0);
  id v57 = *(id *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = *a1;
  id v25 = [a2 sections];
  sub_10003C374(0, &qword_1001844A0);
  uint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v26 & 0xC000000000000001) == 0)
  {
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v24 < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v27 = *(id *)(v26 + 8 * v24 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return;
  }
  id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v28;
  *(double *)(v29 + 24) = a4;
  *(double *)(v29 + 32) = a5;
  *(double *)(v29 + 40) = a6;
  *(void *)(v29 + 48) = a2;
  id v30 = a2;
  id v31 = v28;
  id v32 = [v31 title];
  if (v32)
  {
    uint64_t v33 = v32;
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v36 = v35;

    uint64_t v67 = v34;
    unint64_t v68 = v36;
    sub_100061B00();
    uint64_t v37 = Text.init<A>(_:)();
    unint64_t v56 = v19;
    uint64_t v38 = v12;
    uint64_t v67 = v37;
    unint64_t v68 = v39;
    char v69 = v40 & 1;
    uint64_t v70 = v41;
    double v71 = -a5;
    uint64_t v72 = 0;
    __chkstk_darwin(v37);
    sub_10003AFD0(&qword_1001843D0);
    sub_10008194C();
    id v57 = v31;
    v55[1] = sub_1000819C0(&qword_1001843D8, &qword_1001843E0, (void (*)(void))sub_100081A38);
    uint64_t v42 = v59;
    Section<>.init(header:content:)();
    uint64_t v43 = v61;
    (*(void (**)(char *, void, uint64_t))(v38 + 104))(v61, enum case for Prominence.increased(_:), v11);
    unint64_t v44 = sub_1000818A0();
    uint64_t v45 = v58;
    uint64_t v46 = v65;
    View.headerProminence(_:)();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v43, v11);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v42, v46);
    uint64_t v47 = v56;
    uint64_t v48 = v66;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v56, v45, v66);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v64, v47, v48);
    swift_storeEnumTagMultiPayload();
    uint64_t v67 = v46;
    unint64_t v68 = v44;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();

    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v47, v48);
  }
  else
  {
    id v49 = [v31 tests];
    sub_10003C374(0, &qword_1001844D0);
    uint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v67 = v50;
    swift_getKeyPath();
    uint64_t v51 = swift_allocObject();
    *(double *)(v51 + 16) = a4;
    *(double *)(v51 + 24) = a5;
    *(double *)(v51 + 32) = a6;
    *(void *)(v51 + 40) = v30;
    id v52 = v30;
    sub_10003AFD0(&qword_1001844D8);
    sub_10003AFD0(&qword_1001843F0);
    sub_10004F7B0(&qword_1001844E0, &qword_1001844D8);
    sub_100082054();
    sub_100081A38();
    ForEach<>.init(_:id:content:)();
    uint64_t v53 = (void (**)(char *, uint64_t))v57;
    (*((void (**)(char *, char *, uint64_t))v57 + 2))(v64, v23, v21);
    swift_storeEnumTagMultiPayload();
    unint64_t v54 = sub_1000818A0();
    uint64_t v67 = v65;
    unint64_t v68 = v54;
    swift_getOpaqueTypeConformance2();
    sub_1000819C0(&qword_1001843D8, &qword_1001843E0, (void (*)(void))sub_100081A38);
    _ConditionalContent<>.init(storage:)();

    swift_release();
    v53[1](v23, v21);
  }
}

uint64_t sub_10008100C(void *a1, void *a2, double a3, double a4, double a5)
{
  id v9 = [a1 tests];
  sub_10003C374(0, &qword_1001844D0);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_getKeyPath();
  uint64_t v10 = swift_allocObject();
  *(double *)(v10 + 16) = a3;
  *(double *)(v10 + 24) = a4;
  *(double *)(v10 + 32) = a5;
  *(void *)(v10 + 40) = a2;
  id v11 = a2;
  sub_10003AFD0(&qword_1001844D8);
  sub_10003AFD0(&qword_1001843F0);
  sub_10004F7B0(&qword_1001844E0, &qword_1001844D8);
  sub_100082054();
  sub_100081A38();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100081180@<X0>(void **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v5 = sub_10003AFD0(&qword_100184448);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  __chkstk_darwin(v5);
  long long v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10003AFD0(&qword_100184438);
  __chkstk_darwin(v46);
  id v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003AFD0(&qword_100184428);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v49 = (uint64_t)&v44 - v14;
  uint64_t v51 = sub_10003AFD0(&qword_1001844F0);
  __chkstk_darwin(v51);
  uint64_t v16 = (uint64_t *)((char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *a1;
  id v18 = [v17 value];
  if (!v18) {
    goto LABEL_6;
  }

  id v19 = [v17 status];
  if (!v19) {
    goto LABEL_7;
  }
  uint64_t v20 = v19;
  id v21 = [v19 status];

  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v24 = v23;

  id v18 = (id)swift_bridgeObjectRelease();
  uint64_t v25 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v25 = v22 & 0xFFFFFFFFFFFFLL;
  }
  if (v25)
  {
LABEL_6:
    uint64_t v45 = v10;
    __chkstk_darwin(v18);
    *(&v44 - 2) = (uint64_t)v17;
    id v26 = [a2 name];
    uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v29 = v28;

    long long v52 = xmmword_100124FD0;
    long long v53 = xmmword_100124FE0;
    uint64_t v54 = v27;
    uint64_t v55 = v29;
    unint64_t v56 = v17;
    sub_100081AFC();
    sub_1000820F4();
    id v30 = v17;
    NavigationLink.init(destination:label:)();
    uint64_t v31 = static Color.black.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v34 = v47;
    uint64_t v33 = v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v9, v7, v48);
    unint64_t v35 = (uint64_t *)&v9[*(int *)(v46 + 36)];
    *unint64_t v35 = KeyPath;
    v35[1] = v31;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v7, v33);
    id v36 = [self secondarySystemBackgroundColor];
    *(void *)&long long v52 = Color.init(_:)();
    swift_retain();
    uint64_t v37 = AnyView.init<A>(_:)();
    sub_100078BD8((uint64_t)v9, (uint64_t)v13, &qword_100184438);
    swift_release();
    *(void *)&v13[*(int *)(v45 + 36)] = v37;
    sub_10003C44C((uint64_t)v9, &qword_100184438);
    uint64_t v38 = v49;
    sub_100082150((uint64_t)v13, v49);
    sub_100078BD8(v38, (uint64_t)v16, &qword_100184428);
    swift_storeEnumTagMultiPayload();
    sub_10003AFD0(&qword_100184400);
    sub_100081B50(&qword_1001843F8, &qword_100184400, (void (*)(void))sub_100081AFC);
    sub_100081B50(&qword_100184420, &qword_100184428, (void (*)(void))sub_100081BF4);
    _ConditionalContent<>.init(storage:)();
    return sub_10003C44C(v38, &qword_100184428);
  }
  else
  {
LABEL_7:
    char v40 = self;
    id v41 = v17;
    id v42 = [v40 secondarySystemBackgroundColor];
    *(void *)&long long v52 = Color.init(_:)();
    uint64_t v43 = AnyView.init<A>(_:)();
    void *v16 = 0x4036000000000000;
    v16[1] = v41;
    v16[2] = v43;
    swift_storeEnumTagMultiPayload();
    sub_10003AFD0(&qword_100184400);
    sub_100081B50(&qword_1001843F8, &qword_100184400, (void (*)(void))sub_100081AFC);
    sub_100081B50(&qword_100184420, &qword_100184428, (void (*)(void))sub_100081BF4);
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_100081748@<X0>(uint64_t a1@<X8>)
{
  double v3 = *v1;
  double v4 = v1[1];
  double v5 = v1[2];
  uint64_t v6 = (void *)*((void *)v1 + 3);
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v7 = sub_10003AFD0(&qword_100184358);
  return sub_10007FB34(v6, (uint64_t *)(a1 + *(int *)(v7 + 44)), v3, v4, v5);
}

uint64_t sub_1000817BC()
{
  return sub_100080668(*(void **)(v0 + 40), *(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

unint64_t sub_1000817CC()
{
  unint64_t result = qword_1001843A8;
  if (!qword_1001843A8)
  {
    sub_10003B070(&qword_1001843B0);
    sub_10003B070(&qword_1001843B8);
    sub_1000818A0();
    swift_getOpaqueTypeConformance2();
    sub_1000819C0(&qword_1001843D8, &qword_1001843E0, (void (*)(void))sub_100081A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001843A8);
  }
  return result;
}

unint64_t sub_1000818A0()
{
  unint64_t result = qword_1001843C0;
  if (!qword_1001843C0)
  {
    sub_10003B070(&qword_1001843B8);
    sub_10008194C();
    sub_1000819C0(&qword_1001843D8, &qword_1001843E0, (void (*)(void))sub_100081A38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001843C0);
  }
  return result;
}

unint64_t sub_10008194C()
{
  unint64_t result = qword_1001843C8;
  if (!qword_1001843C8)
  {
    sub_10003B070(&qword_1001843D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001843C8);
  }
  return result;
}

uint64_t sub_1000819C0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10003B070(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100081A38()
{
  unint64_t result = qword_1001843E8;
  if (!qword_1001843E8)
  {
    sub_10003B070(&qword_1001843F0);
    sub_100081B50(&qword_1001843F8, &qword_100184400, (void (*)(void))sub_100081AFC);
    sub_100081B50(&qword_100184420, &qword_100184428, (void (*)(void))sub_100081BF4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001843E8);
  }
  return result;
}

unint64_t sub_100081AFC()
{
  unint64_t result = qword_100184408;
  if (!qword_100184408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184408);
  }
  return result;
}

uint64_t sub_100081B50(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10003B070(a2);
    a3();
    sub_10004F7B0(&qword_100184410, &qword_100184418);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100081BF4()
{
  unint64_t result = qword_100184430;
  if (!qword_100184430)
  {
    sub_10003B070(&qword_100184438);
    sub_10004F7B0(&qword_100184440, &qword_100184448);
    sub_10004F7B0(&qword_100184450, &qword_100184458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184430);
  }
  return result;
}

uint64_t sub_100081CB8()
{
  return EnvironmentValues.listSectionSpacing.getter();
}

uint64_t sub_100081CDC(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0(&qword_100184360);
  __chkstk_darwin(v2 - 8);
  sub_100078BD8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100184360);
  return EnvironmentValues.listSectionSpacing.setter();
}

unint64_t sub_100081D74()
{
  unint64_t result = qword_100184468;
  if (!qword_100184468)
  {
    sub_10003B070(&qword_100184378);
    sub_100081E14();
    sub_10004F7B0(&qword_100184490, &qword_100184460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184468);
  }
  return result;
}

unint64_t sub_100081E14()
{
  unint64_t result = qword_100184470;
  if (!qword_100184470)
  {
    sub_10003B070(&qword_100184368);
    sub_10004F7B0(&qword_100184478, &qword_100184370);
    sub_10004F7B0(&qword_100184480, &qword_100184488);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184470);
  }
  return result;
}

uint64_t sub_100081ED8()
{
  return _swift_deallocObject(v0, 48, 7);
}

void sub_100081F10(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000807F8(a1, *(void **)(v2 + 40), a2, *(double *)(v2 + 16), *(double *)(v2 + 24), *(double *)(v2 + 32));
}

unint64_t sub_100081F20()
{
  unint64_t result = qword_1001844B0;
  if (!qword_1001844B0)
  {
    sub_10003B070(&qword_1001844A8);
    sub_100081F9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001844B0);
  }
  return result;
}

unint64_t sub_100081F9C()
{
  unint64_t result = qword_1001844B8;
  if (!qword_1001844B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001844B8);
  }
  return result;
}

uint64_t sub_100081FF0()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100082030()
{
  return sub_10008100C(*(void **)(v0 + 16), *(void **)(v0 + 48), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_100082044@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100081180(a1, *(void **)(v2 + 40), a2);
}

unint64_t sub_100082054()
{
  unint64_t result = qword_1001844E8;
  if (!qword_1001844E8)
  {
    sub_10003C374(255, &qword_1001844D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001844E8);
  }
  return result;
}

uint64_t sub_1000820BC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_1000820E4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = 0x4036000000000000;
  a1[1] = v2;
  return v2;
}

unint64_t sub_1000820F4()
{
  unint64_t result = qword_1001844F8;
  if (!qword_1001844F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001844F8);
  }
  return result;
}

uint64_t sub_100082150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100184428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for SelfServiceSuiteResultsTestRowView(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void destroy for SelfServiceSuiteResultsTestRowView(uint64_t a1)
{
}

void *assignWithCopy for SelfServiceSuiteResultsTestRowView(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for SelfServiceSuiteResultsTestRowView(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for SelfServiceSuiteResultsTestRowView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelfServiceSuiteResultsTestRowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelfServiceSuiteResultsTestRowView()
{
  return &type metadata for SelfServiceSuiteResultsTestRowView;
}

uint64_t sub_100082300()
{
  return sub_10004F7B0(&qword_100184500, &qword_100184508);
}

uint64_t sub_10008233C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100082358(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100082368(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_100082358(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000823AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((~a5 & 0xFF0000) != 0) {
    return sub_1000823C4(result, a2, a3, a4, a5, BYTE2(a5) & 1);
  }
  return result;
}

uint64_t sub_1000823C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0) {
    return sub_1000823D4();
  }
  return result;
}

uint64_t sub_1000823D4()
{
  return sub_1000823DC();
}

uint64_t sub_1000823DC()
{
  swift_retain();

  return swift_retain();
}

uint64_t sub_100082414(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((~a5 & 0xFF0000) != 0) {
    return sub_10008242C(result, a2, a3, a4, a5, BYTE2(a5) & 1);
  }
  return result;
}

uint64_t sub_10008242C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) == 0) {
    return sub_10008243C();
  }
  return result;
}

uint64_t sub_10008243C()
{
  return sub_100082444();
}

uint64_t sub_100082444()
{
  swift_release();

  return swift_release();
}

uint64_t sub_10008247C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000824C0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000824C0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000824D0()
{
  return sub_10004F7B0(&qword_100184510, &qword_100184518);
}

unint64_t sub_100082520@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100084944(*a1);
  *a2 = result;
  return result;
}

void sub_10008254C(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_100082558()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  double v2 = 15.0;
  if (v1 == (id)1)
  {
    sub_100086DB4();
    double v2 = v3 / 6.0;
  }
  qword_100184520 = *(void *)&v2;
}

id sub_1000827B4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11)
{
  uint64_t v16 = OBJC_IVAR____TtC11Diagnostics10PromptView_promptStackView;
  id v17 = objc_allocWithZone((Class)UIStackView);
  id v18 = v11;
  uint64_t v52 = v16;
  long long v53 = v11;
  *(void *)&v11[v16] = [v17 init];
  uint64_t v19 = OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel] = 0;
  uint64_t v20 = OBJC_IVAR____TtC11Diagnostics10PromptView_subtitleLabel;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_subtitleLabel] = 0;
  uint64_t v21 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView;
  *(void *)&v18[v21] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v22 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView;
  *(void *)&v18[v22] = [objc_allocWithZone((Class)UIProgressView) init];
  uint64_t v23 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView;
  *(void *)&v18[v23] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  uint64_t v24 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView;
  *(void *)&v18[v24] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v25 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel] = 0;
  id v26 = &v18[OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler];
  *(void *)id v26 = 0;
  *((void *)v26 + 1) = 0;
  v18[OBJC_IVAR____TtC11Diagnostics10PromptView_hasExplicitHeight] = 0;
  if (a3)
  {
    id v27 = [objc_allocWithZone((Class)UILabel) init];
    uint64_t v28 = *(void **)&v18[v19];
    *(void *)&v18[v19] = v27;

    uint64_t v29 = *(void **)&v18[v19];
    if (!v29)
    {
      swift_bridgeObjectRelease();
      if (!a5) {
        goto LABEL_10;
      }
      goto LABEL_5;
    }
    id v30 = v29;
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v30 setText:v31];
  }
  if (!a5) {
    goto LABEL_10;
  }
LABEL_5:
  id v32 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v33 = *(void **)&v18[v20];
  *(void *)&v18[v20] = v32;

  uint64_t v34 = *(void **)&v18[v20];
  if (v34)
  {
    id v35 = v34;
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v35 setText:v36];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_10:
  if (a7)
  {
    id v37 = [objc_allocWithZone((Class)UILabel) init];
    uint64_t v38 = *(void **)&v18[v25];
    *(void *)&v18[v25] = v37;

    unint64_t v39 = *(void **)&v18[v25];
    if (v39)
    {
      id v40 = v39;
      NSString v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v40 setText:v41];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (!a8) {
    goto LABEL_19;
  }
  if (!*(void *)(a8 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_19:
    *(void *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_actions] = &_swiftEmptyArrayStorage;
    *(void *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView] = 0;
    goto LABEL_20;
  }
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_actions] = a8;
  id v42 = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v43 = v42;
  *(void *)&v18[OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView] = v42;
  if (a10)
  {
    if (v42)
    {
      uint64_t v46 = self;
      id v47 = v43;
      id v48 = [v46 sharedApplication];
      id v49 = [v48 preferredContentSizeCategory];

      LOBYTE(v48) = UIContentSizeCategory.isAccessibilityCategory.getter();
      [v47 setAxis:v48 & 1];
    }
  }
  else
  {
    [v42 setAxis:a9];
  }
LABEL_20:
  v18[OBJC_IVAR____TtC11Diagnostics10PromptView_type] = a11;
  id v44 = *(id *)&v53[v52];
  [v44 setSpacing:a1];

  v54.receiver = v18;
  v54.Class super_class = (Class)type metadata accessor for PromptView();
  return [super initWithFrame:0.0, 0.0, 0.0, 0.0];
}

void sub_100082C00()
{
  id v1 = [self currentDevice];
  id v2 = [v1 userInterfaceIdiom];

  sub_100086DB4();
  double v4 = v3;
  if (v2 == (id)1)
  {
    sub_100086DB4();
    double v6 = v5 / -3.0;
  }
  else
  {
    double v6 = -30.0;
  }
  double v7 = v4 + v6;
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_promptStackView);
  [v8 setAxis:1];
  [v8 setDistribution:3];
  [v8 setAlignment:3];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v9 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel);
  if (v9)
  {
    uint64_t v10 = self;
    id v11 = v9;
    id v12 = [v10 defaultMetrics];
    id v13 = [self boldSystemFontOfSize:20.0];
    id v14 = [v12 scaledFontForFont:v13];

    [v11 setFont:v14];
    [v11 setTextAlignment:1];
    [v11 setNumberOfLines:0];
    [v11 setPreferredMaxLayoutWidth:v7];
    id v15 = [self labelColor];
    [v11 setTextColor:v15];

    [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  }
  uint64_t v16 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_subtitleLabel);
  if (v16)
  {
    id v17 = self;
    id v18 = v16;
    id v19 = [v17 defaultMetrics];
    id v20 = [self systemFontOfSize:16.0];
    id v21 = [v19 scaledFontForFont:v20];

    [v18 setFont:v21];
    id v22 = [self labelColor];
    [v18 setTextColor:v22];

    [v18 setTextAlignment:1];
    [v18 setNumberOfLines:0];
    [v18 setPreferredMaxLayoutWidth:v7];
    [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  }
  uint64_t v23 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView;
  [*(id *)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView) setAxis:1];
  [*(id *)(v0 + v23) setDistribution:4];
  [*(id *)(v0 + v23) setAlignment:3];
  [*(id *)(v0 + v23) setSpacing:8.0];
  [*(id *)(v0 + v23) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v24 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView;
  [*(id *)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView) setAxis:0];
  [*(id *)(v0 + v24) setDistribution:4];
  [*(id *)(v0 + v24) setAlignment:3];
  [*(id *)(v0 + v24) setSpacing:8.0];
  [*(id *)(v0 + v24) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v25 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView);
  id v26 = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.478431373 blue:1.0 alpha:1.0];
  [v25 setTintColor:v26];

  id v27 = self;
  id v28 = [v27 opaqueSeparatorColor];
  [v25 setTrackTintColor:v28];

  [v25 setAlpha:0.0];
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v29 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel);
  if (v29)
  {
    id v30 = self;
    id v31 = v29;
    id v32 = [v30 defaultMetrics];
    id v33 = [self systemFontOfSize:16.0];
    id v34 = [v32 scaledFontForFont:v33];

    [v31 setFont:v34];
    [v31 setTextAlignment:1];
    [v31 setNumberOfLines:0];
    [v31 setPreferredMaxLayoutWidth:v7];
    [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
  }
  id v35 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView);
  [v35 setHidesWhenStopped:0];
  id v36 = [v27 labelColor];
  [v35 setColor:v36];

  [v35 startAnimating];
  [v35 setAlpha:0.0];
  [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v37 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView);
  if (v37)
  {
    id v40 = v37;
    [v40 setDistribution:3];
    [v40 setAlignment:3];
    id v38 = [v40 axis];
    double v39 = 50.0;
    if (v38) {
      double v39 = 10.0;
    }
    [v40 setSpacing:v39];
    [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
  }
}

void sub_10008334C()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_promptStackView];
  [v0 addSubview:v1];
  if (*(void *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel]) {
    [v1 addArrangedSubview:];
  }
  if (*(void *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_subtitleLabel]) {
    [v1 addArrangedSubview:];
  }
  id v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel];
  if (v2)
  {
    uint64_t v3 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView;
    double v4 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView];
    id v5 = v2;
    [v4 addArrangedSubview:v5];
    uint64_t v6 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView;
    [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView] addArrangedSubview:*(void *)&v0[v3]];
    [v1 addArrangedSubview:*(void *)&v0[v6]];
  }
  double v7 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView];
  if (v7)
  {
    uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_actions];
    uint64_t v9 = *(void *)(v8 + 16);
    id v25 = *(id *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView];
    if (v9)
    {
      id v24 = v1;
      id v10 = v7;
      swift_bridgeObjectRetain();
      id v11 = (uint64_t *)(v8 + 40);
      do
      {
        uint64_t v16 = *v11;
        id v17 = (void *)v11[1];
        int v18 = *((unsigned __int8 *)v11 + 16);
        uint64_t v19 = v11[3];
        uint64_t v20 = v11[4];
        *(void *)&long long v26 = *(v11 - 1);
        *((void *)&v26 + 1) = v16;
        id v27 = v17;
        char v28 = v18;
        uint64_t v29 = v19;
        uint64_t v30 = v20;
        if (v18 == 7)
        {
          id v12 = objc_allocWithZone((Class)type metadata accessor for TextButton());
          swift_bridgeObjectRetain();
          id v13 = v17;
          swift_retain();
          id v14 = sub_100057DA8(&v26);
        }
        else
        {
          id v21 = objc_allocWithZone((Class)type metadata accessor for GlyphButton());
          swift_bridgeObjectRetain();
          id v22 = v17;
          swift_retain();
          id v14 = sub_10006DEF4(&v26);
        }
        id v15 = v14;
        [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
        [v15 setClipsToBounds:0];
        [v10 addArrangedSubview:v15];
        swift_release();

        swift_bridgeObjectRelease();
        v11 += 6;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
      id v1 = v24;
    }
    else
    {
      id v23 = v25;
    }
    [v1 addArrangedSubview:v25];
  }
}

void sub_1000835D8()
{
  id v1 = v0;
  id v2 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100123C30;
  double v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics10PromptView_promptStackView];
  id v5 = [v4 topAnchor];
  id v6 = [v1 topAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = [v4 bottomAnchor];
  id v9 = [v1 bottomAnchor];
  [v4 spacing];
  id v11 = [v8 constraintEqualToAnchor:v9 constant:-v10];

  *(void *)(v3 + 40) = v11;
  id v12 = [v4 leadingAnchor];
  id v13 = [v1 leadingAnchor];
  if (qword_1001827B0 != -1) {
    swift_once();
  }
  id v14 = [v12 constraintEqualToAnchor:v13 constant:*(double *)&qword_100184520];

  *(void *)(v3 + 48) = v14;
  id v15 = [v4 trailingAnchor];
  id v16 = [v1 trailingAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16 constant:-*(double *)&qword_100184520];

  *(void *)(v3 + 56) = v17;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_100083898(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v8 = *(void **)(v5 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel);
  if (a2)
  {
    if (!v8) {
      goto LABEL_8;
    }
    id v9 = v8;
    NSString v10 = String._bridgeToObjectiveC()();
    [v9 setText:v10];

    if (!a3) {
      goto LABEL_8;
    }
  }
  else
  {
    id v11 = v8;
    if (!a3) {
      goto LABEL_8;
    }
  }
  if (v8)
  {
    id v12 = self;
    id v13 = a3;
    id v14 = [v12 defaultMetrics];
    id v15 = [v14 scaledFontForFont:v13];

    [v8 setFont:v15];
  }
LABEL_8:
  id v16 = *(void (**)(uint64_t))(v5 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler);
  if (v16)
  {
    uint64_t v17 = swift_retain();
    v16(v17);
    sub_10003B0B8((uint64_t)v16);
  }

  if ((a4 & 0x100000000) != 0)
  {
    sub_100083E4C();
    return sub_100084378();
  }
  else if (*(float *)&a4 < 0.0 || *(float *)&a4 > 1.0)
  {
    sub_100084378();
    return sub_100083D1C();
  }
  else
  {
    sub_100083E4C();
    return sub_100083F80(*(float *)&a4);
  }
}

void sub_100083A88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel);
  if (a2)
  {
    if (v4)
    {
      id v5 = v4;
      NSString v6 = String._bridgeToObjectiveC()();
      [v5 setText:v6];
    }
  }
  else
  {
    if (v4) {
      [v4 removeFromSuperview];
    }
    id v7 = *(void (**)(uint64_t))(v2 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler);
    if (v7)
    {
      uint64_t v8 = swift_retain();
      v7(v8);
      sub_10003B0B8((uint64_t)v7);
    }
  }
  id v9 = *(void **)(v3 + OBJC_IVAR____TtC11Diagnostics10PromptView_buttonStackView);
  if (v9)
  {
    id v10 = [v9 subviews];
    sub_10003C374(0, (unint64_t *)&qword_1001858F0);
    unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_11:
        if (v12 < 1)
        {
          __break(1u);
        }
        else
        {
          for (uint64_t i = 0; i != v12; ++i)
          {
            if ((v11 & 0xC000000000000001) != 0) {
              id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v14 = *(id *)(v11 + 8 * i + 32);
            }
            id v20 = v14;
            id v15 = v14;
            sub_10003AFD0(&qword_1001845C0);
            if (swift_dynamicCast())
            {
              sub_100084AE8(v18, (uint64_t)v21);
              uint64_t v16 = v22;
              uint64_t v17 = v23;
              sub_100042AC8(v21, v22);
              (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);

              sub_100042B0C((uint64_t)v21);
            }
            else
            {
              uint64_t v19 = 0;
              memset(v18, 0, sizeof(v18));

              sub_100084A88((uint64_t)v18);
            }
          }
          swift_bridgeObjectRelease();
        }
        return;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
  }
}

id sub_100083D1C()
{
  id result = [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView] alpha];
  if (v2 == 0.0)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    uint64_t v4 = self;
    v7[4] = sub_100084A1C;
    v7[5] = v3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    void v7[2] = sub_1000358AC;
    void v7[3] = &unk_100150988;
    id v5 = _Block_copy(v7);
    NSString v6 = v0;
    swift_retain();
    swift_release();
    [v4 animateWithDuration:0x10000 delay:v5 options:0 animations:0.375 completion:0.0];
    _Block_release(v5);
    return (id)swift_release();
  }
  return result;
}

id sub_100083E4C()
{
  id result = [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView] alpha];
  if (v2 == 1.0)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    uint64_t v4 = self;
    v7[4] = sub_1000849B8;
    v7[5] = v3;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    void v7[2] = sub_1000358AC;
    void v7[3] = &unk_100150938;
    id v5 = _Block_copy(v7);
    NSString v6 = v0;
    swift_retain();
    swift_release();
    [v4 animateWithDuration:0x20000 delay:v5 options:0 animations:0.125 completion:0.0];
    _Block_release(v5);
    return (id)swift_release();
  }
  return result;
}

id sub_100083F80(float a1)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView];
  [v3 alpha];
  if (v4 == 0.0)
  {
    *(float *)&double v4 = a1;
    [v3 setProgress:0 animated:v4];
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v1;
    NSString v6 = self;
    void v12[4] = sub_1000849B0;
    v12[5] = v5;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_1000358AC;
    uint64_t v12[3] = &unk_1001508E8;
    id v7 = _Block_copy(v12);
    uint64_t v8 = v1;
    swift_retain();
    swift_release();
    [v6 animateWithDuration:0x10000 delay:v7 options:0 animations:0.375 completion:0.0];
    _Block_release(v7);
    id result = (id)swift_release();
    id v10 = *(void (**)(uint64_t))&v8[OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler];
    if (v10)
    {
      uint64_t v11 = swift_retain();
      v10(v11);
      return (id)sub_10003B0B8((uint64_t)v10);
    }
  }
  else
  {
    *(float *)&double v4 = a1;
    return [v3 setProgress:1 animated:v4];
  }
  return result;
}

id sub_100084144(char *a1)
{
  double v2 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView];
  [*(id *)&a1[OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView] insertArrangedSubview:v2 atIndex:0];
  uint64_t v3 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100123D80;
  id v5 = [v2 leadingAnchor];
  id v6 = [a1 leadingAnchor];
  if (qword_1001827B0 != -1) {
    swift_once();
  }
  id v7 = [v5 constraintEqualToAnchor:v6 constant:*(double *)&qword_100184520 + 25.0];

  *(void *)(v4 + 32) = v7;
  id v8 = [v2 trailingAnchor];
  id v9 = [a1 trailingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9 constant:-(*(double *)&qword_100184520 + 25.0)];

  *(void *)(v4 + 40) = v10;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 activateConstraints:isa];

  return [v2 setAlpha:1.0];
}

id sub_100084378()
{
  id result = [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView] alpha];
  if (v2 == 1.0)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    uint64_t v4 = self;
    void v9[4] = sub_10008498C;
    void v9[5] = v3;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    _OWORD v9[2] = sub_1000358AC;
    void v9[3] = &unk_100150898;
    id v5 = _Block_copy(v9);
    id v6 = v0;
    swift_retain();
    swift_release();
    [v4 animateWithDuration:0x20000 delay:v5 options:0 animations:0.125 completion:0.0];
    _Block_release(v5);
    id result = (id)swift_release();
    id v7 = *(void (**)(uint64_t))&v6[OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler];
    if (v7)
    {
      uint64_t v8 = swift_retain();
      v7(v8);
      return (id)sub_10003B0B8((uint64_t)v7);
    }
  }
  return result;
}

uint64_t sub_100084514()
{
  sub_10003B0B8(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler));

  return swift_bridgeObjectRelease();
}

id sub_1000845E8()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for PromptView();
  return [super dealloc];
}

uint64_t type metadata accessor for PromptView()
{
  return self;
}

uint64_t getEnumTagSinglePayload for PromptView.PromptType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PromptView.PromptType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008487CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PromptView.PromptType()
{
  return &type metadata for PromptView.PromptType;
}

unint64_t sub_1000848B8()
{
  unint64_t result = qword_1001845B8;
  if (!qword_1001845B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001845B8);
  }
  return result;
}

uint64_t sub_10008490C()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC11Diagnostics10PromptView_hasExplicitHeight);
}

uint64_t sub_100084920(uint64_t a1, uint64_t a2)
{
  int v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler);
  uint64_t v4 = *v3;
  *int v3 = a1;
  v3[1] = a2;
  return sub_10003B0B8(v4);
}

unint64_t sub_100084944(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

uint64_t sub_100084954()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10008498C()
{
  return sub_1000849C4(&OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView);
}

uint64_t sub_100084998(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000849A8()
{
  return swift_release();
}

id sub_1000849B0()
{
  return sub_100084144(*(char **)(v0 + 16));
}

id sub_1000849B8()
{
  return sub_1000849C4(&OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView);
}

id sub_1000849C4(void *a1)
{
  uint64_t v2 = *(void **)(*(void *)(v1 + 16) + *a1);
  [v2 removeFromSuperview];

  return [v2 setAlpha:0.0];
}

id sub_100084A1C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView);
  [*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView) insertArrangedSubview:v2 atIndex:0];

  return [v2 setAlpha:1.0];
}

uint64_t sub_100084A88(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0(&qword_1001845C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100084AE8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_100084B00()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics10PromptView_promptStackView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_subtitleLabel] = 0;
  uint64_t v2 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoVerticalStackView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoProgressIndicatorView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIProgressView) init];
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoActivityIndicatorView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  uint64_t v5 = OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabelHorizontalStackView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics10PromptView_infoLabel] = 0;
  unsigned int v6 = &v0[OBJC_IVAR____TtC11Diagnostics10PromptView_containerLayoutUpdateHandler];
  void *v6 = 0;
  v6[1] = 0;
  v0[OBJC_IVAR____TtC11Diagnostics10PromptView_hasExplicitHeight] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100084C80()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState];
  if (v9)
  {
    id v35 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v36 = v8;
    id v37 = v4;
    uint64_t v38 = result;
    uint64_t v39 = v2;
    uint64_t v40 = v1;
    swift_retain();
    sub_100085E08();
    id v10 = self;
    id v11 = [v10 defaultCenter];
    if (qword_100182780 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_10018A3A8;
    id v13 = self;
    swift_retain();
    id v14 = [v13 mainQueue];
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v0;
    uint64_t v45 = sub_100086D44;
    uint64_t v46 = v15;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v42 = 1107296256;
    uint64_t v43 = sub_10004FC1C;
    id v44 = &unk_1001509D8;
    uint64_t v16 = _Block_copy(&aBlock);
    uint64_t v17 = v0;
    swift_release();
    id v18 = [v11 addObserverForName:v12 object:v9 queue:v14 usingBlock:v16];
    _Block_release(v16);

    swift_release();
    *(void *)&v17[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardStateNotificationToken] = v18;
    swift_unknownObjectRelease();
    id v19 = [v10 defaultCenter];
    id v20 = *(void **)(v9 + 40);
    id v21 = @"com.apple.Diagnostics.deviceStateChangedNotification";
    id v22 = v20;
    id v23 = [v13 mainQueue];
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v17;
    uint64_t v45 = sub_100086D64;
    uint64_t v46 = v24;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v42 = 1107296256;
    uint64_t v43 = sub_10004FC1C;
    id v44 = &unk_100150A28;
    id v25 = _Block_copy(&aBlock);
    long long v26 = v17;
    swift_release();
    id v27 = [v19 addObserverForName:v21 object:v22 queue:v23 usingBlock:v25];
    _Block_release(v25);

    *(void *)&v26[OBJC_IVAR____TtC11Diagnostics12CardViewCell_deviceStateNotificationToken] = v27;
    swift_unknownObjectRelease();
    sub_10003C374(0, (unint64_t *)&qword_100182E40);
    char v28 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v26;
    *(void *)(v29 + 24) = v9;
    uint64_t v45 = sub_100086DAC;
    uint64_t v46 = v29;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v42 = 1107296256;
    uint64_t v43 = sub_1000358AC;
    id v44 = &unk_100150A78;
    uint64_t v30 = _Block_copy(&aBlock);
    swift_retain();
    id v31 = v26;
    swift_release();
    id v32 = v35;
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100086EA4((unint64_t *)&qword_100183E90, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10003AFD0((uint64_t *)&unk_100182E50);
    sub_10003B014();
    id v33 = v37;
    uint64_t v34 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v30);
    swift_release();

    (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v32, v38);
  }
  return result;
}

uint64_t sub_10008522C(uint64_t a1, void *a2)
{
  uint64_t result = Notification.userInfo.getter();
  if (result)
  {
    uint64_t v4 = result;
    strcpy((char *)v8, "changeInfoKey");
    HIWORD(v8[1]) = -4864;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10007D88C((uint64_t)v9), (v6 & 1) != 0))
    {
      sub_10003C5D8(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v10);
    }
    else
    {
      long long v10 = 0u;
      long long v11 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10003C320((uint64_t)v9);
    if (*((void *)&v11 + 1))
    {
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        if ((v8[1] & 0x20) != 0)
        {
          char v7 = *(unsigned char *)(v8[0] + 32);
          swift_retain();
          sub_100086394(v7);
        }
        else
        {
          swift_retain();
        }
        if ((v8[1] & 8) != 0) {
          (*(void (**)(void))((swift_isaMask & *a2) + 0x178))(v8[0]);
        }
        if ((v8[1] & 0x10) != 0) {
          (*(void (**)(void))((swift_isaMask & *a2) + 0x180))(*(void *)(v8[0] + 24));
        }
        return swift_release_n();
      }
    }
    else
    {
      return sub_10003C44C((uint64_t)&v10, &qword_100183E70);
    }
  }
  return result;
}

void sub_1000853F8()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v4 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10007D88C((uint64_t)v5), (v3 & 1) != 0))
    {
      sub_10003C5D8(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v6);
    }
    else
    {
      long long v6 = 0u;
      long long v7 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10003C320((uint64_t)v5);
    if (*((void *)&v7 + 1))
    {
      sub_10003C374(0, &qword_100183A50);
      if (swift_dynamicCast())
      {
        sub_1000860DC(v4);
      }
    }
    else
    {
      sub_10003C44C((uint64_t)&v6, &qword_100183E70);
    }
  }
}

uint64_t sub_100085514(void *a1, uint64_t a2)
{
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x170))(a2);
  uint64_t v4 = *(void **)(a2 + 40);
  id v5 = [v4 suiteName];
  if (v5)
  {
    long long v6 = v5;
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *a1) + 0x198))(v7, v9);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x178))(a2);
  (*(void (**)(void))((swift_isaMask & *a1) + 0x180))(*(void *)(a2 + 24));
  id v10 = [v4 progress];
  (*(void (**)(void))((swift_isaMask & *a1) + 0x188))();

  id v11 = [v4 durationRemaining];
  (*(void (**)(id))((swift_isaMask & *a1) + 0x190))(v11);
  id v12 = [v4 sessionSettings];
  (*(void (**)(void))((swift_isaMask & *a1) + 0x1A0))();

  sub_100086394(*(unsigned char *)(a2 + 32));
  uint64_t result = (*(uint64_t (**)(void *))((swift_isaMask & *a1) + 0x1A8))(v4);
  *((unsigned char *)a1 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_pauseStateAnimation) = 0;
  return result;
}

id sub_100085804()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer);
  id v2 = [self secondarySystemBackgroundColor];
  [v1 setBackgroundColor:v2];

  id v3 = [v1 layer];
  [v3 setCornerRadius:12.0];

  [v1 setClipsToBounds:0];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView);
  [v4 setAxis:1];
  [v4 setDistribution:0];
  [v4 setAlignment:0];

  return [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
}

void sub_10008592C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer];
  [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView]];
  id v2 = [v0 contentView];
  [v2 addSubview:v1];
}

void sub_1000859BC()
{
  id v32 = *(id *)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView];
  id v1 = [v32 bottomAnchor];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer];
  id v3 = [v2 bottomAnchor];
  id v4 = [v1 constraintEqualToAnchor:v3];

  LODWORD(v5) = 1148829696;
  [v4 setPriority:v5];
  id v31 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100124BC0;
  id v7 = [v2 centerXAnchor];
  id v8 = [v0 contentView];
  id v9 = [v8 centerXAnchor];

  id v10 = [v7 constraintEqualToAnchor:v9];
  *(void *)(v6 + 32) = v10;
  id v11 = [v2 topAnchor];
  id v12 = [v0 contentView];
  id v13 = [v12 topAnchor];

  id v14 = [v11 constraintEqualToAnchor:v13];
  *(void *)(v6 + 40) = v14;
  id v15 = [v2 bottomAnchor];
  id v16 = [v0 contentView];
  id v17 = [v16 bottomAnchor];

  id v18 = [v15 constraintEqualToAnchor:v17 constant:-12.0];
  *(void *)(v6 + 48) = v18;
  id v19 = [v2 widthAnchor];
  sub_100086DB4();
  id v20 = [v19 constraintEqualToConstant:];

  *(void *)(v6 + 56) = v20;
  id v21 = [v32 topAnchor];
  id v22 = [v2 topAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v6 + 64) = v23;
  *(void *)(v6 + 72) = v4;
  id v24 = v4;
  id v25 = [v32 leadingAnchor];
  id v26 = [v2 leadingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v6 + 80) = v27;
  id v28 = [v32 trailingAnchor];
  id v29 = [v2 trailingAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v6 + 88) = v30;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v31 activateConstraints:isa];
}

void sub_100085E08()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardStateNotificationToken);
  if (v1)
  {
    id v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_deviceStateNotificationToken);
  if (v4)
  {
    double v5 = self;
    swift_unknownObjectRetain();
    id v6 = [v5 defaultCenter];
    [v6 removeObserver:v4];
    swift_unknownObjectRelease();
  }
}

uint64_t sub_100085F18()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  sub_10003C44C(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_controller, (uint64_t *)&unk_1001858E0);
  sub_10003B0B8(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_layoutUpdateHandler));

  return swift_release();
}

id sub_100085FB4()
{
  sub_100085E08();
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CardViewCell();
  return [super dealloc];
}

void sub_1000860DC(void *a1)
{
  unsigned __int16 v3 = (unsigned __int16)[a1 changedProperties];
  id v13 = [a1 snapshot];
  if ([v13 phase] && objc_msgSend(v13, "phase") != (id)1)
  {
    id v4 = [v13 progress];
    (*(void (**)(void))((swift_isaMask & *v1) + 0x188))();
  }
  if ((v3 & 0x100) != 0)
  {
    id v6 = [v13 durationRemaining];
    (*(void (**)(id))((swift_isaMask & *v1) + 0x190))(v6);
    double v5 = v13;
    if ((v3 & 2) == 0)
    {
LABEL_6:
      if ((v3 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else
  {
    double v5 = v13;
    if ((v3 & 2) == 0) {
      goto LABEL_6;
    }
  }
  id v7 = [v5 suiteName];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v1) + 0x198))(v9, v11);
  swift_bridgeObjectRelease();
  double v5 = v13;
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  id v12 = [v13 sessionSettings];
  (*(void (**)(void))((swift_isaMask & *v1) + 0x1A0))();

  double v5 = v13;
  if ((v3 & 0x40) != 0)
  {
LABEL_8:
    (*(void (**)(id))((swift_isaMask & *v1) + 0x1A8))(v13);
    double v5 = v13;
  }
LABEL_9:
}

uint64_t sub_100086394(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1B8))();
      break;
    case 2:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1C0))();
      break;
    case 3:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1C8))();
      break;
    case 4:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1D0))();
      break;
    case 5:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1D8))();
      break;
    case 6:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1E0))();
      break;
    case 7:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1E8))();
      break;
    case 8:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1F0))();
      break;
    case 9:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1F8))();
      break;
    case 10:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x200))();
      break;
    case 11:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x208))();
      break;
    case 12:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x210))();
      break;
    default:
      uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1B0))();
      break;
  }
  return result;
}

id sub_1000867C4()
{
  uint64_t v1 = v0;
  objc_super v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer];
  id v3 = [v2 layer];
  id v4 = [v3 borderColor];

  double v5 = self;
  id v6 = &selRef_setPriority_;
  id v7 = [v5 opaqueSeparatorColor];
  id v8 = [v7 CGColor];

  if (v4)
  {
    if (v8)
    {
      type metadata accessor for CGColor(0);
      sub_100086EA4(&qword_100184640, type metadata accessor for CGColor);
      id v9 = v4;
      char v10 = static _CFObject.== infix(_:_:)();

      id v6 = &selRef_setPriority_;
      if (v10) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    id v8 = v4;
  }
  else if (!v8)
  {
    goto LABEL_10;
  }

LABEL_9:
  id v11 = [v2 layer];
  id v12 = [v5 v6[68]];
  id v13 = [v12 CGColor];

  [v11 setBorderColor:v13];
LABEL_10:
  v15.receiver = v1;
  v15.Class super_class = (Class)type metadata accessor for CardViewCell();
  return [super layoutSubviews];
}

id sub_1000869EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics12CardViewCell_spacing] = 0x4024000000000000;
  v3[OBJC_IVAR____TtC11Diagnostics12CardViewCell_pauseStateAnimation] = 1;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics12CardViewCell_deviceStateNotificationToken] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardStateNotificationToken] = 0;
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView;
  type metadata accessor for CardStackView();
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)UIView) init];
  char v10 = &v8[OBJC_IVAR____TtC11Diagnostics12CardViewCell_controller];
  *(_OWORD *)char v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  id v11 = &v8[OBJC_IVAR____TtC11Diagnostics12CardViewCell_layoutUpdateHandler];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;
  *(void *)&v8[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState] = 0;

  if (a3)
  {
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v12 = 0;
  }
  v15.receiver = v8;
  v15.Class super_class = (Class)type metadata accessor for CardViewCell();
  id v13 = [super initWithStyle:a1 reuseIdentifier:v12];

  return v13;
}

id sub_100086B98(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics12CardViewCell_spacing] = 0x4024000000000000;
  v1[OBJC_IVAR____TtC11Diagnostics12CardViewCell_pauseStateAnimation] = 1;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics12CardViewCell_deviceStateNotificationToken] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardStateNotificationToken] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView;
  type metadata accessor for CardStackView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  double v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  id v7 = &v5[OBJC_IVAR____TtC11Diagnostics12CardViewCell_controller];
  *(_OWORD *)id v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((void *)v7 + 4) = 0;
  id v8 = &v5[OBJC_IVAR____TtC11Diagnostics12CardViewCell_layoutUpdateHandler];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState] = 0;

  v11.receiver = v5;
  v11.Class super_class = (Class)type metadata accessor for CardViewCell();
  [super initWithCoder:a1];

  return v9;
}

uint64_t type metadata accessor for CardViewCell()
{
  return self;
}

uint64_t sub_100086D0C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100086D44(uint64_t a1)
{
  return sub_10008522C(a1, *(void **)(v1 + 16));
}

uint64_t sub_100086D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100086D5C()
{
  return swift_release();
}

void sub_100086D64()
{
}

uint64_t sub_100086D6C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100086DAC()
{
  return sub_100085514(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100086DB4()
{
  id v0 = [self sharedApplication];
  sub_100046500();

  uint64_t v1 = self;
  id v2 = [v1 currentDevice];
  id v3 = [v2 userInterfaceIdiom];

  if (v3 != (id)1)
  {
    id v4 = [v1 currentDevice];
    [v4 userInterfaceIdiom];
  }
}

uint64_t sub_100086EA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100086F04(void *a1)
{
  id v2 = v1;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics37SelfServiceSuiteResultsViewController_entry] = a1;
  id v3 = a1;
  _StringGuts.grow(_:)(35);
  int DeviceClass = GestaltGetDeviceClass();
  uint64_t v5 = sub_1000AF310(DeviceClass);
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t v21 = v5;
  uint64_t v22 = v7;
  v8._uint64_t countAndFlagsBits = 0xD000000000000021;
  v8._object = (void *)0x800000010012D920;
  String.append(_:)(v8);
  NSString v9 = String._bridgeToObjectiveC()();
  char v10 = self;
  id v11 = [v10 _systemImageNamed:v9];

  if (v11)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v11 = [v10 imageNamed:v12];
  }
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000015, (void *)0x800000010012D950);
  NSString v13 = String._bridgeToObjectiveC()();
  sub_1000877F8(v3);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v20.receiver = v2;
  v20.Class super_class = (Class)type metadata accessor for SelfServiceSuiteResultsViewController();
  id v15 = [super initWithTitle:v13 detailText:v14 icon:v11 contentLayout:3];

  id v16 = v15;
  id v17 = [v16 navigationItem];
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v17 setBackButtonTitle:v18];

  return v16;
}

void sub_100087130()
{
  v35.receiver = v0;
  v35.Class super_class = (Class)type metadata accessor for SelfServiceSuiteResultsViewController();
  [super viewDidLoad];
  id v1 = [v0 navigationItem];
  [v1 setHidesBackButton:1];

  id v2 = [v0 navigationItem];
  sub_10003C374(0, &qword_100184678);
  sub_10003C374(0, (unint64_t *)&qword_1001831A8);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  id v4 = v0;
  v36.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v36.is_nil = 0;
  Class isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemDone, v36, v37).super.super.isa;
  [v2 setLeftBarButtonItem:isa, 0, 0, 0, sub_1000879BC, v3];

  uint64_t v6 = *(void **)&v4[OBJC_IVAR____TtC11Diagnostics37SelfServiceSuiteResultsViewController_entry];
  id v7 = [v6 results];
  if (v7)
  {
    Swift::String v8 = v7;
    [v4 navigationController];
    id v9 = [v6 testSuiteName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v10 = objc_allocWithZone((Class)sub_10003AFD0(&qword_100183188));
    id v11 = v8;
    NSString v12 = (void *)UIHostingController.init(rootView:)();
    id v13 = [v12 view];
    if (v13)
    {
      NSString v14 = v13;
      [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v15 = [v4 contentView];
      [v15 addSubview:v14];

      id v34 = self;
      sub_10003AFD0((uint64_t *)&unk_100182E20);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_100123C30;
      id v17 = [v14 leadingAnchor];
      id v18 = [v4 contentView];
      id v19 = [v18 leadingAnchor];

      id v20 = [v17 constraintEqualToAnchor:v19];
      *(void *)(v16 + 32) = v20;
      id v21 = [v14 trailingAnchor];
      id v22 = [v4 contentView];
      id v23 = [v22 trailingAnchor];

      id v24 = [v21 constraintEqualToAnchor:v23];
      *(void *)(v16 + 40) = v24;
      id v25 = [v14 topAnchor];
      id v26 = [v4 contentView];
      id v27 = [v26 topAnchor];

      id v28 = [v25 constraintEqualToAnchor:v27];
      *(void *)(v16 + 48) = v28;
      id v29 = [v14 bottomAnchor];
      id v30 = [v4 contentView];
      id v31 = [v30 bottomAnchor];

      id v32 = [v29 constraintEqualToAnchor:v31];
      *(void *)(v16 + 56) = v32;
      specialized Array._endMutation()();
      sub_10003C374(0, (unint64_t *)&qword_1001831A0);
      Class v33 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v34 activateConstraints:v33];
    }
    else
    {
    }
  }
  else
  {
    [v4 dismissViewControllerAnimated:1 completion:0];
  }
}

void sub_10008765C(int a1, id a2)
{
  id v2 = [a2 navigationController];
  if (v2)
  {
    id v3 = v2;
  }
}

void sub_100087780()
{
}

id sub_100087790()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SelfServiceSuiteResultsViewController();
  [super dealloc];
}

uint64_t type metadata accessor for SelfServiceSuiteResultsViewController()
{
  return self;
}

uint64_t sub_1000877F8(void *a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v6 setDateStyle:1];
  [v6 setTimeStyle:1];
  [v6 setDoesRelativeDateFormatting:1];
  id v7 = [a1 date];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v9 = [v6 stringFromDate:isa];

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v10;
}

uint64_t sub_100087984()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000879BC(int a1)
{
  sub_10008765C(a1, *(id *)(v1 + 16));
}

id sub_100087C40()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for BaseTableViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for BaseTableViewController()
{
  return self;
}

void sub_100087C98()
{
  sub_100085804();
  id v1 = [self defaultCenter];
  id v2 = String._bridgeToObjectiveC()();
  [v1 addObserver:v0 selector:"handleLaunchURLWithNotification:" name:v2 object:0];
}

void sub_100087D4C()
{
  id v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView];
  [v2 addSubview:v3];
  id v4 = [v1 contentView];
  [v4 addSubview:v2];

  id v10 = [objc_allocWithZone((Class)UIView) init];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v10 heightAnchor];
  id v6 = [v5 constraintEqualToConstant:20.0];

  [v6 setActive:1];
  id v7 = [v3 arrangedSubviews];
  sub_10003C374(0, (unint64_t *)&qword_1001858F0);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_10009B4E4(v10, v9, 1);
}

void sub_100087F0C(void *a1)
{
  if (a1)
  {
    id v10 = a1;
    [v10 floatValue];
    if (v1 >= 0.0)
    {
      [v10 floatValue];
      *(float *)&unsigned int v3 = v2 / 100.0;
      id v4 = sub_10008A52C();
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_100123B50;
      id v6 = [v10 integerValue];
      *(void *)(v5 + 56) = &type metadata for Int;
      *(void *)(v5 + 64) = &protocol witness table for Int;
      *(void *)(v5 + 32) = v6;
      uint64_t v7 = sub_100045FCC(0, 0, v5, 0xD00000000000002ALL, (void *)0x800000010012DEA0);
      uint64_t v9 = v8;
      swift_bridgeObjectRelease();
      sub_100083898(v7, v9, 0, v3);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_10008808C(double a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v63 = *(void *)(v2 - 8);
  uint64_t v64 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v65 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  id v6 = (char *)&v55 - v5;
  uint64_t v7 = sub_10003AFD0(&qword_100184730);
  uint64_t v62 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003AFD0(&qword_100184738);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10003AFD0(&qword_100184740);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003AFD0(&qword_100184748);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10003AFD0(&qword_100184750);
  uint64_t v22 = __chkstk_darwin(v21);
  if (a1 <= 0.0)
  {
    id v42 = sub_10008A0D4();
    uint64_t v43 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000002BLL, (void *)0x800000010012DE10);
    LOBYTE(v66) = 0;
    sub_100083898(v43, v44, 0, 3212836864);

    return swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v56 = v20;
    id v57 = v16;
    uint64_t v58 = v18;
    uint64_t v59 = v14;
    uint64_t v60 = v12;
    uint64_t v61 = v13;
    uint64_t v55 = v17;
    id v25 = v65;
    if (a1 / 60.0 >= 60.0)
    {
      Date.init(timeIntervalSinceNow:)();
      Date.timeIntervalSinceReferenceDate.getter();
      Date.init(timeIntervalSinceReferenceDate:)();
      id v45 = [objc_allocWithZone((Class)NSDateFormatter) init];
      [v45 setDateStyle:3];
      [v45 setTimeStyle:1];
      [v45 setDoesRelativeDateFormatting:1];
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      NSString v47 = [v45 stringFromDate:isa];

      if (!v47)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v47 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      id v48 = sub_10008A0D4();
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_100123B50;
      *(void *)(v49 + 56) = sub_10003C374(0, &qword_100184758);
      *(void *)(v49 + 64) = sub_100055FF4(&qword_100184760, &qword_100184758);
      *(void *)(v49 + 32) = v47;
      uint64_t v50 = sub_100045FCC(0, 0, v49, 0xD000000000000025, (void *)0x800000010012DE40);
      uint64_t v52 = v51;
      swift_bridgeObjectRelease();
      LOBYTE(v66) = 1;
      sub_100083898(v50, v52, 0, 0x100000000);

      swift_bridgeObjectRelease();
      uint64_t v53 = v64;
      objc_super v54 = *(void (**)(char *, uint64_t))(v63 + 8);
      v54(v25, v64);
      return ((uint64_t (*)(char *, uint64_t))v54)(v6, v53);
    }
    else
    {
      uint64_t v26 = v22;
      uint64_t v27 = v24;
      id v28 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v29 = [self minutes];
      sub_10003C374(0, &qword_100184768);
      Measurement.init(value:unit:)();
      id v30 = v57;
      static Measurement<>.FormatStyle.UnitWidth.wide.getter();
      uint64_t v31 = sub_10003AFD0(&qword_100184770);
      uint64_t v32 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v60, 1, 1, v31);
      static MeasurementFormatUnitUsage.general.getter();
      Class v33 = v56;
      static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v7);
      sub_10003C44C(v32, &qword_100184738);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v61);
      sub_10008D194();
      uint64_t v34 = v55;
      Measurement<>.formatted<A>(_:)();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v33, v34);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v26);
      id v35 = sub_10008A0D4();
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_100123B50;
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      *(void *)(v36 + 56) = sub_10003C374(0, &qword_100184758);
      *(void *)(v36 + 64) = sub_100055FF4(&qword_100184760, &qword_100184758);
      *(void *)(v36 + 32) = v37;
      uint64_t v38 = sub_100045FCC(0, 0, v36, 0xD000000000000027, (void *)0x800000010012DE70);
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
      LOBYTE(v66) = 1;
      sub_100083898(v38, v40, 0, 0x100000000);

      return swift_bridgeObjectRelease();
    }
  }
}

void sub_1000888E4()
{
}

void sub_10008890C()
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100123B50;
  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 64) = sub_10004D9B4();
  *(void *)(v1 + 32) = 0xD000000000000020;
  *(void *)(v1 + 40) = 0x800000010012DDC0;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v2 = sub_100089D4C();
  sub_100089744(v2, 0);

  id v3 = sub_10008A928();
  id v4 = [v3 viewControllers];

  sub_10003C374(0, (unint64_t *)&qword_100183670);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    id v13 = sub_10008A928();
    [v13 scheduleModalPresentationWithPriority:0 animated:1 presentationCompletion:0];

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v5 + 32);
LABEL_8:
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    type metadata accessor for EnhancedLoggingConsentViewController();
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      uint64_t v9 = v8;
      v14[3] = type metadata accessor for CardViewPersistentCell();
      void v14[4] = &off_100150AE8;
      v14[0] = v0;
      uint64_t v10 = v9 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate;
      swift_beginAccess();
      id v11 = v0;
      sub_10008D12C((uint64_t)v14, v10);
      swift_endAccess();
    }

    goto LABEL_13;
  }
  __break(1u);
}

void sub_100088B7C()
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100123B50;
  *(void *)(v0 + 56) = &type metadata for String;
  *(void *)(v0 + 64) = sub_10004D9B4();
  *(void *)(v0 + 32) = 0xD000000000000019;
  *(void *)(v0 + 40) = 0x800000010012DDA0;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v1 = [self sharedManager];
  id v2 = [v1 snapshot];

  [v2 durationRemaining];
  sub_10008808C(v3);
  id v4 = sub_10008A0D4();
  sub_100089744(v4, 0);
}

void sub_100088CE8()
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100123B50;
  *(void *)(v0 + 56) = &type metadata for String;
  *(void *)(v0 + 64) = sub_10004D9B4();
  *(void *)(v0 + 32) = 0xD00000000000001ALL;
  *(void *)(v0 + 40) = 0x800000010012DD80;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v1 = [self sharedApplication];
  id v2 = [v1 delegate];

  if (v2)
  {
    type metadata accessor for AppDelegate();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions);
      if (v4)
      {
        if (*(void *)(v4 + 16))
        {
          Hasher.init(_seed:)();
          swift_bridgeObjectRetain();
          String.hash(into:)();
          Swift::Int v5 = Hasher._finalize()();
          uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
          unint64_t v7 = v5 & ~v6;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          {
LABEL_12:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_16;
          }
          uint64_t v8 = ~v6;
          while (*(unsigned char *)(*(void *)(v4 + 48) + v7) != 1)
          {
            char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v9) {
              goto LABEL_14;
            }
            unint64_t v7 = (v7 + 1) & v8;
            if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
              goto LABEL_12;
            }
          }
          swift_bridgeObjectRelease();
LABEL_14:
          swift_bridgeObjectRelease();
          sub_10008C95C();
        }
      }
    }
    swift_unknownObjectRelease();
  }
LABEL_16:
  id v10 = sub_10008A2D4();
  sub_100089744(v10, 0);
}

void sub_100088F80()
{
}

void sub_100088FA8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100123B50;
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = sub_10004D9B4();
  *(void *)(v4 + 32) = 0xD00000000000001BLL;
  *(void *)(v4 + 40) = a1;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v5 = swift_bridgeObjectRelease();
  id v6 = (id)a2(v5);
  sub_100089744(v6, 0);
}

void sub_1000890C0()
{
}

void sub_1000890DC()
{
  uint64_t v0 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v1);
  id v6 = (char *)&v28 - v5;
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v31 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v13 = (char *)&v28 - v12;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100123B50;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_10004D9B4();
  *(void *)(v14 + 32) = 0xD00000000000001DLL;
  *(void *)(v14 + 40) = 0x800000010012DD10;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v15 = sub_10008A7A4();
  sub_100089744(v15, 0);

  id v16 = sub_10008A928();
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v17, (uint64_t)qword_10018A440);
  swift_beginAccess();
  if ((sub_1000D986C(v16, 1, 0, 1, 0, 0) & 1) == 0)
  {
    id v29 = v13;
    id v30 = v3;
    uint64_t v18 = (uint64_t)v6;
    id v19 = v16;
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = sub_1000DC28C(v20, v19);

    sub_1000D7D60(v21, (uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v8, 1, v33) == 1)
    {
      sub_10003C44C((uint64_t)v8, (uint64_t *)&unk_100182FD0);
      id v6 = (char *)v18;
    }
    else
    {
      uint64_t v22 = (uint64_t)v29;
      sub_10003C4A8((uint64_t)v8, (uint64_t)v29);
      id v6 = (char *)v18;
      sub_1000B7DBC(v22, v18);
      sub_10003C44C(v18, (uint64_t *)&unk_100182FD0);
      sub_10003C50C(v22);
    }
    uint64_t v3 = v30;
  }
  swift_endAccess();

  uint64_t v23 = sub_10008B3C8();
  swift_beginAccess();
  if ((sub_1000D986C(v23, 1, 0, 1, 0, 0) & 1) == 0)
  {
    uint64_t v24 = v23;
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = sub_1000DC28C(v25, v24);

    sub_1000D7D60(v26, (uint64_t)v3);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v3, 1, v33) == 1)
    {
      sub_10003C44C((uint64_t)v3, (uint64_t *)&unk_100182FD0);
    }
    else
    {
      uint64_t v27 = v31;
      sub_10003C4A8((uint64_t)v3, v31);
      sub_1000B7DBC(v27, (uint64_t)v6);
      sub_10003C44C((uint64_t)v6, (uint64_t *)&unk_100182FD0);
      sub_10003C50C(v27);
    }
  }
  swift_endAccess();
}

void sub_10008957C()
{
}

void sub_100089598(uint64_t a1, uint64_t a2)
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100123B50;
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = sub_10004D9B4();
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  if (qword_100182748 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100050088();
  id v6 = [v5 navigationItem];

  [v6 setHidesBackButton:1];
  uint64_t v7 = sub_100050088();
  [v7 setModalPresentationStyle:0];

  uint64_t v8 = (void *)qword_10018A370;
  uint64_t v9 = sub_100050088();
  [v8 presentViewController:v9 animated:1 completion:0];
}

uint64_t sub_100089744(void *a1, char a2)
{
  uint64_t v3 = v2;
  id v6 = (unint64_t *)(v2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_viewQueue);
  swift_beginAccess();
  unint64_t v7 = *v6;
  if (*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0) {
    goto LABEL_40;
  }
  if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_42;
  }
  for (id i = *(id *)(v7 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    unint64_t v10 = (unint64_t)i;
    swift_bridgeObjectRelease();
    sub_10003C374(0, &qword_100185910);
    if (static NSObject.== infix(_:_:)())
    {
      if (qword_1001827C8 != -1) {
        goto LABEL_47;
      }
      goto LABEL_8;
    }

LABEL_12:
    unint64_t v13 = *v6;
    if (*v6 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      if (!v10)
      {
LABEL_19:
        swift_bridgeObjectRelease();
        id v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v3
                                                                    + OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView), "arrangedSubviews"));
        sub_10003C374(0, (unint64_t *)&qword_1001858F0);
        unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        sub_10009B4E4(a1, v18, 1);
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v10) {
        goto LABEL_19;
      }
    }
    if ((v13 & 0xC000000000000001) != 0)
    {
LABEL_42:
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_44;
      }
      id v14 = *(id *)(v13 + 32);
    }
    id v15 = v14;
    swift_bridgeObjectRelease();
    sub_10009BC84(a1, v15, 1);

LABEL_22:
    swift_beginAccess();
    if (!(*v6 >> 62)) {
      break;
    }
    id v33 = a1;
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_24;
    }
    __break(1u);
LABEL_40:
    ;
  }
  id v19 = a1;
LABEL_24:
  sub_10003A2C8(0, 0, (uint64_t)a1);
  uint64_t result = swift_endAccess();
  if (a2) {
    return result;
  }
  unint64_t v10 = *v6;
  if (!(*v6 >> 62))
  {
    uint64_t v21 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v22 = v21 - 1;
    if (!__OFSUB__(v21, 1)) {
      goto LABEL_27;
    }
LABEL_46:
    __break(1u);
LABEL_47:
    swift_once();
LABEL_8:
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100123B50;
    *(void *)(v11 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001858F0);
    *(void *)(v11 + 64) = sub_100055FF4((unint64_t *)&qword_100184788, (unint64_t *)&qword_1001858F0);
    *(void *)(v11 + 32) = a1;
    id v12 = a1;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    return swift_bridgeObjectRelease();
  }
LABEL_44:
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  BOOL v35 = __OFSUB__(v34, 1);
  uint64_t v22 = v34 - 1;
  if (v35) {
    goto LABEL_46;
  }
LABEL_27:
  uint64_t v23 = sub_10008D378(v22, v10);
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  unint64_t v29 = v28;
  swift_bridgeObjectRelease();
  if (v29)
  {
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain_n();
    uint64_t v31 = (void *)swift_dynamicCastClass();
    if (!v31)
    {
      swift_unknownObjectRelease();
      uint64_t v31 = _swiftEmptyArrayStorage;
    }
    uint64_t v32 = v31[2];
    swift_release();
    if (__OFSUB__(v29 >> 1, v27))
    {
      __break(1u);
    }
    else if (v32 == (v29 >> 1) - v27)
    {
      id v30 = (void *)swift_dynamicCastClass();
      if (!v30)
      {
        swift_unknownObjectRelease();
        id v30 = _swiftEmptyArrayStorage;
      }
      goto LABEL_35;
    }
    swift_unknownObjectRelease();
  }
  id v30 = sub_1000A0760(v23, v25, v27, v29);
LABEL_35:
  swift_unknownObjectRelease();
  unint64_t *v6 = (unint64_t)v30;
  return swift_bridgeObjectRelease();
}

char *sub_100089C3C(void *a1)
{
  [a1 setStatus:3];
  [a1 setEndDate:0];
  uint64_t result = (char *)[a1 retriesRemaining];
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    return (char *)[a1 setRetriesRemaining:result - 1];
  }
  return result;
}

id sub_100089CB8()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt);
  }
  else
  {
    id v4 = sub_10008A838(0xD000000000000020, (void *)0x800000010012E200, 0xD00000000000001FLL, (void *)0x800000010012E230);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100089D4C()
{
  return sub_10008A2F4(&OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollFinishedPrompt, (uint64_t (*)(uint64_t))sub_100089D6C);
}

id sub_100089D6C(void *a1)
{
  uint64_t v2 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0x45554E49544E4F43, (void *)0xE800000000000000);
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  id v6 = self;
  id v7 = a1;
  id v8 = [v6 defaultMetrics];
  id v9 = [self systemFontOfSize:20.0];
  id v10 = [v8 scaledFontForFont:v9];

  uint64_t v11 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000020, (void *)0x800000010012E200);
  uint64_t v13 = v12;
  sub_10003AFD0(&qword_100184780);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100123B50;
  *(void *)(v14 + 32) = v2;
  *(void *)(v14 + 40) = v4;
  *(void *)(v14 + 48) = v10;
  *(unsigned char *)(v14 + 56) = 7;
  *(void *)(v14 + 64) = sub_10008D370;
  *(void *)(v14 + 72) = v5;
  id v15 = objc_allocWithZone((Class)type metadata accessor for PromptView());
  return sub_1000827B4(20.0, v11, v13, 0, 0, 0, 0, v14, 0, 1, 0);
}

void sub_100089F38(uint64_t a1, void *a2)
{
  id v3 = sub_10008A928();
  id v4 = [v3 viewControllers];

  sub_10003C374(0, (unint64_t *)&qword_100183670);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v5 >> 62))
  {
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    id v13 = sub_10008A928();
    [v13 scheduleModalPresentationWithPriority:0 animated:1 presentationCompletion:0];

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v5 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v5 + 32);
LABEL_6:
    id v7 = v6;
    swift_bridgeObjectRelease();
    type metadata accessor for EnhancedLoggingConsentViewController();
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      uint64_t v9 = v8;
      v14[3] = type metadata accessor for CardViewPersistentCell();
      void v14[4] = &off_100150AE8;
      v14[0] = a2;
      uint64_t v10 = v9 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_delegate;
      swift_beginAccess();
      id v11 = a2;
      sub_10008D12C((uint64_t)v14, v10);
      swift_endAccess();
    }

    goto LABEL_11;
  }
  __break(1u);
}

id sub_10008A0D4()
{
  return sub_10008A0F4(&OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentRunningPrompt, (uint64_t (*)(void))sub_10008A154);
}

id sub_10008A0F4(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_10008A154()
{
  id v0 = sub_10004622C(0xD000000000000021);
  uint64_t v2 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v0, v1);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = 2570;
  v5._object = (void *)0xE200000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = v2;
  uint64_t v7 = v4;
  uint64_t v8 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000002BLL, (void *)0x800000010012E1B0);
  uint64_t v10 = v9;
  swift_bridgeObjectRetain();
  v11._uint64_t countAndFlagsBits = v8;
  v11._object = v10;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001ELL, (void *)0x800000010012E1E0);
  uint64_t v14 = v13;
  id v15 = objc_allocWithZone((Class)type metadata accessor for PromptView());
  return sub_1000827B4(20.0, v12, v14, v6, v7, 0, 0xE000000000000000, 0, 0, 1, 0);
}

id sub_10008A2D4()
{
  return sub_10008A2F4(&OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentFinishedPrompt, (uint64_t (*)(uint64_t))sub_10008A358);
}

id sub_10008A2F4(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_10008A358(void *a1)
{
  uint64_t v2 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000020, (void *)0x800000010012E130);
  uint64_t v4 = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  uint64_t v6 = self;
  id v7 = a1;
  id v8 = [v6 defaultMetrics];
  id v9 = [self systemFontOfSize:20.0];
  id v10 = [v8 scaledFontForFont:v9];

  uint64_t v11 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x800000010012E160);
  uint64_t v13 = v12;
  sub_10003AFD0(&qword_100184780);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100123B50;
  *(void *)(v14 + 32) = v2;
  *(void *)(v14 + 40) = v4;
  *(void *)(v14 + 48) = v10;
  *(unsigned char *)(v14 + 56) = 7;
  *(void *)(v14 + 64) = sub_10008D314;
  *(void *)(v14 + 72) = v5;
  id v15 = objc_allocWithZone((Class)type metadata accessor for PromptView());
  return sub_1000827B4(20.0, v11, v13, 0, 0, 0, 0, v14, 0, 1, 0);
}

id sub_10008A52C()
{
  return sub_10008A0F4(&OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUploadingPrompt, (uint64_t (*)(void))sub_10008A54C);
}

id sub_10008A54C()
{
  id v0 = [self sharedManager];
  id v1 = [v0 snapshot];

  id v2 = [v1 consent];
  if (v2 == (id)3)
  {
LABEL_7:
    uint64_t v8 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000020, (void *)0x800000010012E0D0);
    uint64_t v10 = v9;
    id v11 = sub_10004622C(0xD000000000000023);
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v11, v13);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000002BLL, (void *)0x800000010012E100);
    uint64_t v19 = v18;
    id v20 = objc_allocWithZone((Class)type metadata accessor for PromptView());
    id v21 = sub_1000827B4(20.0, v8, v10, v14, v16, v17, v19, 0, 0, 1, 0);
    id v22 = [self monospacedDigitSystemFontOfSize:16.0 weight:UIFontWeightRegular];
    sub_100083898(0, 0, v22, 3212836864);

    return v21;
  }
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v4 = result;
    int wapiCapability = MobileGestalt_get_wapiCapability();

    if (wapiCapability) {
      uint64_t v6 = 0x4E414C575FLL;
    }
    else {
      uint64_t v6 = 0x494649575FLL;
    }
    unint64_t v7 = 0xE500000000000000;
    String.append(_:)(*(Swift::String *)&v6);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_10008A7A4()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt);
  }
  else
  {
    id v4 = sub_10008A838(0xD000000000000022, (void *)0x800000010012E040, 0xD000000000000021, (void *)0x800000010012E070);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10008A838(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, a1, a2);
  uint64_t v8 = v7;
  uint64_t v9 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, a3, a4);
  uint64_t v11 = v10;
  id v12 = objc_allocWithZone((Class)type metadata accessor for PromptView());
  id v13 = sub_1000827B4(20.0, v6, v8, 0, 0, v9, v11, 0, 0, 1, 0);
  sub_100083898(0, 0, 0, 3212836864);
  return v13;
}

id sub_10008A928()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for EnhancedLoggingConsentViewController()) init];
    [v4 formSheetSize];
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGAffineTransformMakeScale(&v14, 1.0, 1.2);
    v15.width = v6;
    v15.height = v8;
    CGSize v9 = CGSizeApplyAffineTransform(v15, &v14);
    [v4 setPreferredContentSize:CGSizeMake(v9.width, v9.height)];
    id v10 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v4];
    [v10 setModalPresentationStyle:2];

    uint64_t v11 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v10;
    id v3 = v10;

    id v2 = 0;
  }
  id v12 = v2;
  return v3;
}

void sub_10008AA48(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v3 = v2;
  int v5 = a2;
  uint64_t v6 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  CGSize v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)&v65 - v11;
  __chkstk_darwin(v10);
  CGAffineTransform v14 = (char *)&v65 - v13;
  uint64_t v15 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v21 = (char *)&v65 - v20;
  if ((v5 - 1) > 1)
  {
    uint64_t v27 = v19;
    id v28 = [self sharedManager];
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = 6;
    *(unsigned char *)(v29 + 24) = 0;
    *(void *)(v29 + 32) = 0;
    *(unsigned char *)(v29 + 40) = 1;
    uint64_t v70 = sub_10008D240;
    uint64_t v71 = v29;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v67 = 1107296256;
    unint64_t v68 = sub_100046950;
    char v69 = &unk_100150DA0;
    id v30 = _Block_copy(&aBlock);
    swift_release();
    [v28 transactionWithBlock:v30];
    _Block_release(v30);

    [self createLoggingEventWith:ELSEventTypeEnrollConsentDenied];
    id v31 = sub_10008A928();
    if (qword_100182828 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for ModalPresentationCoordinator(0);
    sub_10003C3B0(v32, (uint64_t)qword_10018A440);
    swift_beginAccess();
    if (sub_1000D986C(v31, 1, 0, 1, 0, 0)) {
      goto LABEL_25;
    }
    id v33 = v31;
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_1000DC28C(v34, v33);

    sub_1000D7D60(v35, (uint64_t)v9);
    swift_release();
    if (v27[6](v9, 1, v15) == 1)
    {
      uint64_t v36 = (uint64_t)v9;
LABEL_11:
      sub_10003C44C(v36, (uint64_t *)&unk_100182FD0);
LABEL_25:
      swift_endAccess();

      return;
    }
    sub_10003C4A8((uint64_t)v9, (uint64_t)v18);
    sub_1000B7DBC((uint64_t)v18, (uint64_t)v12);
    sub_10003C44C((uint64_t)v12, (uint64_t *)&unk_100182FD0);
    uint64_t v51 = (uint64_t)v18;
LABEL_16:
    sub_10003C50C(v51);
    goto LABEL_25;
  }
  id v22 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics36EnhancedLoggingConsentViewController_consentHandles);
  if (v22[2])
  {
    uint64_t v23 = v22[4];
    uint64_t v24 = v22[5];
    objc_allocWithZone((Class)type metadata accessor for DetailedConsentNavigationController());
    swift_bridgeObjectRetain();
    id v25 = sub_100042D28(v23, v24);
    id v65 = sub_10008A928();
    [v65 showViewController:v25 sender:v3];

    id v26 = v65;

    return;
  }
  id v65 = v19;
  NSString v37 = self;
  id v38 = [v37 sharedManager];
  id v39 = [v38 snapshot];

  LOBYTE(v38) = sub_1000F68DC();
  if ((v38 & 1) == 0)
  {
    id v52 = [v37 sharedManager];
    uint64_t v53 = swift_allocObject();
    uint64_t v54 = 1;
    if (v5 == 1) {
      uint64_t v54 = 2;
    }
    *(void *)(v53 + 16) = 3;
    *(unsigned char *)(v53 + 24) = 0;
    *(void *)(v53 + 32) = v54;
    *(unsigned char *)(v53 + 40) = 0;
    uint64_t v70 = sub_10008D240;
    uint64_t v71 = v53;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v67 = 1107296256;
    unint64_t v68 = sub_100046950;
    char v69 = &unk_100150DF0;
    if (v5 == 1) {
      uint64_t v55 = (id *)&ELSEventTypeEnrollConsentApproved;
    }
    else {
      uint64_t v55 = (id *)&ELSEventTypeEnrollConsentApprovedWithReview;
    }
    unint64_t v56 = _Block_copy(&aBlock);
    swift_release();
    [v52 transactionWithBlock:v56];
    _Block_release(v56);

    id v57 = *v55;
    [self createLoggingEventWith:v57];

    id v31 = sub_10008A928();
    if (qword_100182828 != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for ModalPresentationCoordinator(0);
    sub_10003C3B0(v58, (uint64_t)qword_10018A440);
    swift_beginAccess();
    if (sub_1000D986C(v31, 1, 0, 1, 0, 0)) {
      goto LABEL_25;
    }
    id v59 = v31;
    uint64_t v60 = swift_bridgeObjectRetain();
    uint64_t v61 = sub_1000DC28C(v60, v59);

    sub_1000D7D60(v61, (uint64_t)v14);
    swift_release();
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v65 + 6))(v14, 1, v15) == 1)
    {
      uint64_t v36 = (uint64_t)v14;
      goto LABEL_11;
    }
    sub_10003C4A8((uint64_t)v14, (uint64_t)v21);
    sub_1000B7DBC((uint64_t)v21, (uint64_t)v12);
    sub_10003C44C((uint64_t)v12, (uint64_t *)&unk_100182FD0);
    uint64_t v51 = (uint64_t)v21;
    goto LABEL_16;
  }
  id v40 = [v37 sharedManager];
  id v41 = [v40 snapshot];

  id v42 = [self currentDevice];
  if (v42)
  {
    uint64_t v43 = v42;
    id v44 = [v42 platform];

    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v47 = v46;

    uint64_t v48 = sub_1000F5DAC();
    sub_10003AFD0(&qword_100185010);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100123B50;
    *(void *)(inited + 32) = v45;
    *(void *)(inited + 40) = v47;
    uint64_t v50 = (uint64_t)sub_1000B51F0(inited, v48);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    uint64_t v50 = sub_1000F5DAC();
  }

  type metadata accessor for DeviceSelector();
  uint64_t v62 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v63 = sub_1000A0678(v50);
  swift_bridgeObjectRelease();
  *(void *)&v62[OBJC_IVAR____TtC11Diagnostics14DeviceSelector_platformsFromQueue] = v63;
  swift_bridgeObjectRelease();
  id v64 = sub_10008A928();
  [v64 showViewController:v62 sender:v3];
}

id sub_10008B2C4()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController);
  }
  else
  {
    id v4 = [self sharedManager];
    id v5 = [v4 snapshot];

    LODWORD(v4) = [v5 needsFollowup];
    if (v4) {
      uint64_t v6 = sub_10008B3C8();
    }
    else {
      uint64_t v6 = sub_10008C370();
    }
    uint64_t v7 = v6;
    id v8 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v6];
    [v8 setModalPresentationStyle:2];
    CGSize v9 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v10 = v2;
  return v3;
}

char *sub_10008B3C8()
{
  uint64_t v1 = (char *)[objc_allocWithZone((Class)type metadata accessor for ConsentNoticeViewController()) init];
  uint64_t v2 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001FLL, (void *)0x800000010012B400);
  id v3 = (uint64_t *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText];
  *id v3 = v2;
  v3[1] = v4;
  swift_bridgeObjectRelease();
  id v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel];
  if (v3[1])
  {
    swift_bridgeObjectRetain();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  [v5 setText:v6];

  uint64_t v7 = self;
  id v8 = [v7 sharedManager];
  id v9 = [v8 snapshot];

  [v9 totalDuration];
  double v11 = v10;

  if (sub_1000564B8(v11) == 4 || (uint64_t v12 = sub_1000563BC(v11), !v13))
  {
    uint64_t v19 = (void *)0x800000010012DEF0;
    uint64_t v17 = 0xD00000000000002DLL;
  }
  else
  {
    uint64_t v15 = v12;
    uint64_t v16 = v13;
    switch(v14)
    {
      case 1:
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_100123B50;
        *(void *)(v24 + 56) = &type metadata for String;
        *(void *)(v24 + 64) = sub_10004D9B4();
        *(void *)(v24 + 32) = v15;
        *(void *)(v24 + 40) = v16;
        uint64_t v25 = 0xD00000000000002FLL;
        id v26 = (void *)0x800000010012DFE0;
        uint64_t v27 = v24;
        goto LABEL_15;
      case 2:
        swift_bridgeObjectRelease();
        uint64_t v17 = 0xD00000000000002CLL;
        uint64_t v18 = "ENHANCED_LOGGING_FOLLOWUP_QUESTION_BODY_HOUR";
        goto LABEL_13;
      case 3:
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = xmmword_100123B50;
        *(void *)(v28 + 56) = &type metadata for String;
        *(void *)(v28 + 64) = sub_10004D9B4();
        *(void *)(v28 + 32) = v15;
        *(void *)(v28 + 40) = v16;
        id v26 = (void *)0x800000010012DF80;
        uint64_t v27 = v28;
        uint64_t v25 = 0xD00000000000002DLL;
LABEL_15:
        uint64_t v29 = sub_100045FCC(0, 0, v27, v25, v26);
        uint64_t v31 = v30;
        swift_bridgeObjectRelease();
        uint64_t v32 = (uint64_t *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
        *uint64_t v32 = v29;
        v32[1] = v31;
        swift_bridgeObjectRelease();
        uint64_t v23 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
        goto LABEL_10;
      default:
        swift_bridgeObjectRelease();
        uint64_t v17 = 0xD00000000000002ELL;
        uint64_t v18 = "ENHANCED_LOGGING_FOLLOWUP_QUESTION_BODY_MINUTE";
LABEL_13:
        uint64_t v19 = (void *)((unint64_t)(v18 - 32) | 0x8000000000000000);
        break;
    }
  }
  uint64_t v20 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, v17, v19);
  id v21 = (uint64_t *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
  *id v21 = v20;
  v21[1] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
LABEL_10:
  swift_bridgeObjectRetain();
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 setText:v33];

  uint64_t v34 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000026, (void *)0x800000010012DF20);
  uint64_t v35 = (uint64_t *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
  *uint64_t v35 = v34;
  v35[1] = v36;
  swift_bridgeObjectRelease();
  NSString v37 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton];
  if (v35[1])
  {
    swift_bridgeObjectRetain();
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v38 = 0;
  }
  [v37 setTitle:v38 forState:0];

  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v0;
  *(void *)(v39 + 24) = v1;
  id v40 = (void (**)())&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  uint64_t v41 = *(void *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  void *v40 = sub_10008D2BC;
  v40[1] = (void (*)())v39;
  id v42 = v0;
  uint64_t v43 = v1;
  sub_10003B0B8(v41);
  uint64_t v44 = sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000025, (void *)0x800000010012DF50);
  uint64_t v45 = (uint64_t *)&v43[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle];
  *uint64_t v45 = v44;
  v45[1] = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void **)&v43[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton];
  if (v47)
  {
    if (v45[1])
    {
      id v48 = v47;
      swift_bridgeObjectRetain();
      NSString v49 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v50 = v47;
      NSString v49 = 0;
    }
    [v47 setTitle:v49 forState:0];
  }
  id v51 = [v7 sharedManager];
  id v52 = [v51 snapshot];

  id v53 = [v52 retriesRemaining];
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v42;
  if ((uint64_t)v53 <= 0)
  {
    *(void *)(v54 + 24) = v43;
    uint64_t v58 = (void (**)())&v43[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    uint64_t v56 = *(void *)&v43[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    char *v58 = sub_10008D2C4;
    v58[1] = (void (*)())v54;
    id v59 = v42;
    uint64_t v60 = v43;
  }
  else
  {
    uint64_t v55 = (void (**)())&v43[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    uint64_t v56 = *(void *)&v43[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
    *uint64_t v55 = sub_10008D2D4;
    v55[1] = (void (*)())v54;
    id v57 = v42;
  }
  sub_10003B0B8(v56);
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = v42;
  *(void *)(v61 + 24) = v43;
  id v62 = v42;
  uint64_t v63 = v43;
  sub_100095068((uint64_t)sub_10008D2CC, v61);
  swift_release();
  return v63;
}

void sub_10008BA84(uint64_t a1, void *a2)
{
  id v3 = sub_10008C370();
  v3[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_activationReason] = 0;

  id v4 = [a2 navigationController];
  if (v4)
  {
    id v5 = v4;
    NSString v6 = sub_10008C370();
    [v5 pushViewController:v6 animated:1];
  }
}

void sub_10008BB30(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v21[-v6];
  uint64_t v8 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  [self createLoggingEventWith:ELSEventTypeIssueDidNotOccurRetry];
  id v12 = [self sharedManager];
  aBlock[4] = sub_100089C3C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046950;
  aBlock[3] = &unk_100150CB0;
  uint64_t v13 = _Block_copy(aBlock);
  [v12 transactionWithBlock:v13];
  _Block_release(v13);

  uint64_t v15 = (void *)sub_10008B2C4(v14);
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v16, (uint64_t)qword_10018A440);
  swift_beginAccess();
  if ((sub_1000D986C(v15, 1, 0, 1, 0, 0) & 1) == 0)
  {
    id v17 = v15;
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_1000DC28C(v18, v17);

    sub_1000D7D60(v19, (uint64_t)v7);
    swift_release();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10003C44C((uint64_t)v7, (uint64_t *)&unk_100182FD0);
    }
    else
    {
      sub_10003C4A8((uint64_t)v7, (uint64_t)v11);
      sub_1000B7DBC((uint64_t)v11, (uint64_t)v5);
      sub_10003C44C((uint64_t)v5, (uint64_t *)&unk_100182FD0);
      sub_10003C50C((uint64_t)v11);
    }
  }
  swift_endAccess();

  uint64_t v20 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController);
  *(void *)(a1 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController) = 0;
}

void sub_10008BE78(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_10008C370();
  v3[OBJC_IVAR____TtC11Diagnostics32FileReviewingTableViewController_activationReason] = 1;

  id v4 = [a2 navigationController];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_10008C370();
    [v5 pushViewController:v6 animated:1];
  }
}

void sub_10008BF28(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  id v6 = a1;
  id v7 = a2;
  id v8 = sub_100095158((uint64_t)sub_10008D2DC, v4, (uint64_t)sub_100077E20, v5);
  swift_release();
  swift_release();
  [v7 presentViewController:v8 animated:1 completion:0];
}

void sub_10008C018(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  id v8 = &v23[-v7];
  uint64_t v9 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v13 = [self sharedManager];
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 6;
  *(unsigned char *)(v14 + 24) = 0;
  *(void *)(v14 + 32) = 0;
  *(unsigned char *)(v14 + 40) = 1;
  aBlock[4] = sub_10008D240;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046950;
  aBlock[3] = &unk_100150D50;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  [v13 transactionWithBlock:v15];
  _Block_release(v15);

  id v17 = (void *)sub_10008B2C4(v16);
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v18, (uint64_t)qword_10018A440);
  swift_beginAccess();
  if ((sub_1000D986C(v17, 1, 0, 1, 0, 0) & 1) == 0)
  {
    id v19 = v17;
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = sub_1000DC28C(v20, v19);

    sub_1000D7D60(v21, (uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_10003C44C((uint64_t)v8, (uint64_t *)&unk_100182FD0);
    }
    else
    {
      sub_10003C4A8((uint64_t)v8, (uint64_t)v12);
      sub_1000B7DBC((uint64_t)v12, (uint64_t)v6);
      sub_10003C44C((uint64_t)v6, (uint64_t *)&unk_100182FD0);
      sub_10003C50C((uint64_t)v12);
    }
  }
  swift_endAccess();

  uint64_t v22 = *(void **)(a2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController);
  *(void *)(a2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController) = 0;
}

char *sub_10008C370()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController];
  if (v2)
  {
    uint64_t v3 = *(char **)&v0[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController];
  }
  else
  {
    uint64_t v4 = v0;
    type metadata accessor for FileReviewingTableViewController();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v0;
    id v6 = v0;
    uint64_t v7 = sub_100072C74((uint64_t)sub_10008D228, v5);
    id v8 = *(void **)&v0[v1];
    *(void *)&v4[v1] = v7;
    uint64_t v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_10008C418(char a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0((uint64_t *)&unk_100182FD0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v27[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  id v9 = &v27[-v8];
  uint64_t v10 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a1)
  {
    if (a1 == 1)
    {
      id v14 = [self sharedManager];
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = 5;
      *(unsigned char *)(v15 + 24) = 0;
      *(void *)(v15 + 32) = 3;
      *(unsigned char *)(v15 + 40) = 0;
      uint64_t v32 = sub_10008D240;
      uint64_t v33 = v15;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v29 = 1107296256;
      uint64_t v30 = sub_100046950;
      uint64_t v31 = &unk_100150B48;
      uint64_t v16 = _Block_copy(&aBlock);
      swift_release();
      [v14 transactionWithBlock:v16];
      id v17 = &ELSEventTypeUploadConsentApprovedCellular;
    }
    else
    {
      id v14 = [self sharedManager];
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = 6;
      *(unsigned char *)(v19 + 24) = 0;
      *(void *)(v19 + 32) = 0;
      *(unsigned char *)(v19 + 40) = 0;
      uint64_t v32 = sub_10008D240;
      uint64_t v33 = v19;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v29 = 1107296256;
      uint64_t v30 = sub_100046950;
      uint64_t v31 = &unk_100150BE8;
      uint64_t v16 = _Block_copy(&aBlock);
      swift_release();
      [v14 transactionWithBlock:v16];
      id v17 = &ELSEventTypeUploadConsentDenied;
    }
  }
  else
  {
    id v14 = [self sharedManager];
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = 5;
    *(unsigned char *)(v18 + 24) = 0;
    *(void *)(v18 + 32) = 2;
    *(unsigned char *)(v18 + 40) = 0;
    uint64_t v32 = sub_10008D240;
    uint64_t v33 = v18;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v29 = 1107296256;
    uint64_t v30 = sub_100046950;
    uint64_t v31 = &unk_100150B98;
    uint64_t v16 = _Block_copy(&aBlock);
    swift_release();
    [v14 transactionWithBlock:v16];
    id v17 = &ELSEventTypeUploadConsentApproved;
  }
  _Block_release(v16);

  id v20 = [self createLoggingEventWith:*v17];
  uint64_t v21 = (void *)sub_10008B2C4(v20);
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v22, (uint64_t)qword_10018A440);
  swift_beginAccess();
  if ((sub_1000D986C(v21, 1, 0, 1, 0, 0) & 1) == 0)
  {
    id v23 = v21;
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_1000DC28C(v24, v23);

    sub_1000D7D60(v25, (uint64_t)v9);
    swift_release();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      sub_10003C44C((uint64_t)v9, (uint64_t *)&unk_100182FD0);
    }
    else
    {
      sub_10003C4A8((uint64_t)v9, (uint64_t)v13);
      sub_1000B7DBC((uint64_t)v13, (uint64_t)v7);
      sub_10003C44C((uint64_t)v7, (uint64_t *)&unk_100182FD0);
      sub_10003C50C((uint64_t)v13);
    }
  }
  swift_endAccess();

  id v26 = *(void **)(a2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController);
  *(void *)(a2 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController) = 0;
}

void sub_10008C95C()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 delegate];

  if (!v1) {
    return;
  }
  type metadata accessor for AppDelegate();
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = [self sharedManager];
    id v5 = [v4 snapshot];

    id v6 = [v5 status];
    if (v6 == (id)4)
    {
      uint64_t v7 = *(void *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions);
      *(void *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions) = 0;
      if (v7)
      {
        if (!*(void *)(v7 + 16)
          || (Hasher.init(_seed:)(),
              String.hash(into:)(),
              Swift::Int v8 = Hasher._finalize()(),
              uint64_t v9 = -1 << *(unsigned char *)(v7 + 32),
              unint64_t v10 = v8 & ~v9,
              ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0))
        {
LABEL_11:
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v11 = ~v9;
        while (*(unsigned char *)(*(void *)(v7 + 48) + v10) != 1)
        {
          char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v12) {
            goto LABEL_16;
          }
          unint64_t v10 = (v10 + 1) & v11;
          if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
            goto LABEL_11;
          }
        }
        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        id v13 = sub_10008B2C4();
        [v13 scheduleModalPresentationWithPriority:0 animated:1 presentationCompletion:0];
      }
    }
  }

  swift_unknownObjectRelease();
}

id sub_10008CCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_formSheetXScaleMultiplier] = 0x3FF0000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_formSheetYScaleMultiplier] = 0x3FF3333333333333;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_viewQueue] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollFinishedPrompt] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentRunningPrompt] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentFinishedPrompt] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUploadingPrompt] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController] = 0;
  if (a3)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.Class super_class = (Class)type metadata accessor for CardViewPersistentCell();
  [super initWithStyle:a1 reuseIdentifier:v5];

  return v6;
}

id sub_10008CE2C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_formSheetXScaleMultiplier] = 0x3FF0000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_formSheetYScaleMultiplier] = 0x3FF3333333333333;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell_viewQueue] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollFinishedPrompt] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentRunningPrompt] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentFinishedPrompt] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUploadingPrompt] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell__completeUploadConsentController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController] = 0;
  v5.receiver = v1;
  v5.Class super_class = (Class)type metadata accessor for CardViewPersistentCell();
  [super initWithCoder:a1];

  return v3;
}

void sub_10008CF48()
{
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollingPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentEnrollFinishedPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentRunningPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentFinishedPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUploadingPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___persistentUnenrollingPrompt));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___enhancedLoggingConsentNavigationController));

  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics22CardViewPersistentCell____lazy_storage___reviewFilesController);
}

id sub_10008D008()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CardViewPersistentCell();
  return [super dealloc];
}

uint64_t type metadata accessor for CardViewPersistentCell()
{
  return self;
}

uint64_t sub_10008D12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100183CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_10008D194()
{
  unint64_t result = qword_100184778;
  if (!qword_100184778)
  {
    sub_10003B070(&qword_100184748);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184778);
  }
  return result;
}

uint64_t sub_10008D1F0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10008D228(char a1)
{
  sub_10008C418(a1, *(void *)(v1 + 16));
}

uint64_t sub_10008D230()
{
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10008D244(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008D254()
{
  return swift_release();
}

uint64_t sub_10008D25C()
{
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10008D26C()
{
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10008D27C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10008D2BC()
{
  sub_10008BA84(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10008D2C4()
{
  sub_10008BE78(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10008D2CC()
{
  sub_10008BF28(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10008D2D4()
{
  sub_10008BB30(*(void *)(v0 + 16));
}

void sub_10008D2DC(uint64_t a1)
{
  sub_10008C018(a1, *(void *)(v1 + 16));
}

uint64_t sub_10008D2E4()
{
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10008D2F4()
{
  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10008D304()
{
  return _swift_deallocObject(v0, 41, 7);
}

void sub_10008D314()
{
  id v0 = sub_10008B2C4();
  [v0 scheduleModalPresentationWithPriority:0 animated:1 presentationCompletion:0];
}

void sub_10008D370(uint64_t a1)
{
  sub_100089F38(a1, *(void **)(v1 + 16));
}

uint64_t sub_10008D378(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = -v5;
    if (!__OFSUB__(0, v5)) {
      goto LABEL_4;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v2 = a2;
  uint64_t v3 = result;
  unint64_t v4 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = -v5;
  if (__OFSUB__(0, v5)) {
    goto LABEL_25;
  }
LABEL_4:
  uint64_t v7 = -v3;
  if (v6 > 0 || v6 <= v7)
  {
    uint64_t v8 = v5 - v3;
    if (__OFADD__(v5, v7))
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v8 < 0)
    {
LABEL_29:
      __break(1u);
      return result;
    }
    if (!v4) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if (!v4)
    {
LABEL_7:
      uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t result = swift_bridgeObjectRelease();
  if (v10 < 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t result = swift_bridgeObjectRelease();
LABEL_13:
  if (v9 < v8)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v8)
  {
    sub_10003C374(0, (unint64_t *)&qword_1001858F0);
    Swift::Int v11 = 0;
    do
    {
      Swift::Int v12 = v11 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v11);
      Swift::Int v11 = v12;
    }
    while (v8 != v12);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v13;
}

uint64_t destroy for LaunchURL()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LaunchURL(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LaunchURL(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LaunchURL(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchURL(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LaunchURL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchURL()
{
  return &type metadata for LaunchURL;
}

unsigned char *storeEnumTagSinglePayload for LaunchURL.EnhancedLoggingStateAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10008D8A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LaunchURL.EnhancedLoggingStateAction()
{
  return &type metadata for LaunchURL.EnhancedLoggingStateAction;
}

uint64_t sub_10008D8DC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x776569766572;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    unint64_t v4 = 0xE000000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x776569766572;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE000000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10008D970(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x2265746F6D655222;
  }
  else {
    uint64_t v3 = 0x746C756166654422;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000022;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x2265746F6D655222;
  }
  else {
    uint64_t v5 = 0x746C756166654422;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE900000000000022;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10008DA1C(char *a1, char *a2)
{
  return sub_10008D8DC(*a1, *a2);
}

Swift::Int sub_10008DA28()
{
  return Hasher._finalize()();
}

uint64_t sub_10008DA98()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10008DAF4()
{
  return Hasher._finalize()();
}

uint64_t sub_10008DB60@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10014C6D0, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_10008DBC0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x776569766572;
  if (!*v1) {
    uint64_t v2 = 0;
  }
  unint64_t v3 = 0xE000000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_10008DBF0()
{
  unint64_t result = qword_100184790;
  if (!qword_100184790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184790);
  }
  return result;
}

uint64_t sub_10008DC44(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    Swift::Int v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    sub_100060C08(*v11, v13);
    sub_1000B930C(v17, v12, v13);
    unint64_t result = sub_100060B6C(v17[0], v17[1]);
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10008DDC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URLQueryItem();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = &_swiftEmptySetSingleton;
  id v23 = &_swiftEmptySetSingleton;
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    unint64_t v9 = v10;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v12 = *(void *)(v8 + 56);
    v21[1] = a1;
    swift_bridgeObjectRetain();
    while (1)
    {
      v9(v5, v11, v2);
      if (URLQueryItem.name.getter() == 0x697463612D736C65 && v19 == 0xEA00000000006E6FLL) {
        break;
      }
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_4;
      }
LABEL_11:
      (*(void (**)(char *, uint64_t))(v8 - 8))(v5, v2);
      v11 += v12;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        return v23;
      }
    }
    swift_bridgeObjectRelease();
LABEL_4:
    uint64_t v13 = URLQueryItem.value.getter();
    if (v14) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = 0;
    }
    if (v14) {
      int64_t v16 = v14;
    }
    else {
      int64_t v16 = (void *)0xE000000000000000;
    }
    v17._uint64_t countAndFlagsBits = v15;
    v17._object = v16;
    Swift::Int v18 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10014C720, v17);
    swift_bridgeObjectRelease();
    sub_1000B9D30(&v22, v18 == 1);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_10008DFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)v20 - v9;
  CharacterSet.init(charactersIn:)();
  v20[0] = a1;
  v20[1] = a2;
  CharacterSet.inverted.getter();
  sub_100061B00();
  uint64_t v11 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v13 = v12;
  int64_t v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  if ((v13 & 0x1000000000000000) != 0)
  {
    if (String.UTF8View._foreignCount()() <= 8) {
      goto LABEL_6;
    }
LABEL_16:
    char v18 = 0;
    goto LABEL_17;
  }
  if ((v13 & 0x2000000000000000) != 0) {
    uint64_t v15 = HIBYTE(v13) & 0xF;
  }
  else {
    uint64_t v15 = v11 & 0xFFFFFFFFFFFFLL;
  }
  if (v15 > 8) {
    goto LABEL_16;
  }
LABEL_6:
  uint64_t v16 = v11 & 0xFFFFFFFFFFFFLL;
  if ((v13 & 0x2000000000000000) != 0) {
    uint64_t v16 = HIBYTE(v13) & 0xF;
  }
  if (!v16) {
    goto LABEL_16;
  }
  if (v11 == a1 && v13 == a2) {
    char v18 = 1;
  }
  else {
    char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
LABEL_17:
  swift_bridgeObjectRelease();
  v14(v10, v4);
  return v18 & 1;
}

void *sub_10008E1C4()
{
  uint64_t v6 = &_swiftEmptySetSingleton;
  id v0 = objc_allocWithZone((Class)NSScanner);
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithString:v1];

  uint64_t v5 = 0;
  [v2 scanHexLongLong:&v5];
  __int16 v3 = v5;
  if (v5)
  {
    sub_1000B930C(&v7, 0, 0);
    sub_100060B6C(v7, v8);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  sub_1000B930C(&v7, 0, 1uLL);
  sub_100060B6C(v7, v8);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  sub_1000B930C(&v7, 0, 2uLL);
  sub_100060B6C(v7, v8);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  sub_1000B930C(&v7, 0, 3uLL);
  sub_100060B6C(v7, v8);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  sub_1000B930C(&v7, 0, 4uLL);
  sub_100060B6C(v7, v8);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x80) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    sub_1000B930C(&v7, 0, 7uLL);
    sub_100060B6C(v7, v8);
    if ((v3 & 0x100) == 0) {
      goto LABEL_9;
    }
LABEL_17:
    sub_1000B930C(&v7, 0, 8uLL);

    sub_100060B6C(v7, v8);
    return v6;
  }
LABEL_15:
  sub_1000B930C(&v7, 0, 5uLL);
  sub_100060B6C(v7, v8);
  if ((v3 & 0x80) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v3 & 0x100) != 0) {
    goto LABEL_17;
  }
LABEL_9:

  return v6;
}

uint64_t sub_10008E3C4()
{
  uint64_t v0 = type metadata accessor for URLQueryItem();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  __int16 v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003AFD0(&qword_100184798);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v40 - v8;
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  id v42 = v9;
  sub_10008ED58((uint64_t)v9, (uint64_t)v7);
  uint64_t v10 = type metadata accessor for URLComponents();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    sub_10008ECF8((uint64_t)v7);
    goto LABEL_35;
  }
  NSString v49 = v3;
  uint64_t v12 = URLComponents.queryItems.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  if (v12)
  {
    uint64_t result = v12;
    uint64_t v47 = *(void *)(v12 + 16);
    if (v47)
    {
      unint64_t v14 = 0;
      unint64_t v46 = v12 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
      uint64_t v45 = v1 + 16;
      uint64_t v43 = (void (**)(char *, uint64_t))(v1 + 8);
      uint64_t v15 = (char *)&_swiftEmptySetSingleton;
      uint64_t v41 = v0;
      uint64_t v40 = v1;
      uint64_t v44 = result;
      while (1)
      {
        if (v14 >= *(void *)(result + 16))
        {
LABEL_38:
          __break(1u);
          return result;
        }
        uint64_t v17 = *(void *)(v1 + 72);
        unint64_t v48 = v14;
        (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v49, v46 + v17 * v14, v0);
        if (URLQueryItem.name.getter() == 25705 && v18 == 0xE200000000000000)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0) {
            goto LABEL_7;
          }
        }
        uint64_t v20 = URLQueryItem.value.getter();
        if (v21)
        {
          uint64_t v54 = (char *)v20;
          uint64_t v55 = v21;
          uint64_t v56 = 44;
          unint64_t v57 = 0xE100000000000000;
          sub_100061B00();
          uint64_t v22 = StringProtocol.components<A>(separatedBy:)();
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v52 = *(void *)(v22 + 16);
          if (v52)
          {
            unint64_t v23 = 0;
            uint64_t v50 = v22;
            uint64_t v51 = v22 + 32;
            while (v23 < *(void *)(v22 + 16))
            {
              uint64_t v25 = (Swift::Int *)(v51 + 16 * v23);
              Swift::Int v26 = *v25;
              unint64_t v27 = v25[1];
              uint64_t v28 = HIBYTE(v27) & 0xF;
              if ((v27 & 0x2000000000000000) == 0) {
                uint64_t v28 = v26 & 0xFFFFFFFFFFFFLL;
              }
              if (v28)
              {
                unint64_t v53 = v23;
                Hasher.init(_seed:)();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                String.hash(into:)();
                Swift::Int v29 = Hasher._finalize()();
                uint64_t v30 = -1 << v15[32];
                unint64_t v31 = v29 & ~v30;
                uint64_t v32 = v15 + 56;
                if ((*(void *)&v15[((v31 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v31))
                {
                  uint64_t v33 = ~v30;
                  while (1)
                  {
                    uint64_t v34 = v15;
                    uint64_t v35 = (uint64_t *)(*((void *)v15 + 6) + 16 * v31);
                    uint64_t v37 = *v35;
                    unint64_t v36 = v35[1];
                    Hasher.init(_seed:)();
                    if (v36 >= 9)
                    {
                      swift_bridgeObjectRetain();
                      String.hash(into:)();
                    }
                    else
                    {
                      Hasher._combine(_:)(qword_100125420[v36]);
                      sub_100060C08(v37, v36);
                    }
                    Swift::Int v38 = Hasher._finalize()();
                    Hasher.init(_seed:)();
                    String.hash(into:)();
                    Swift::Int v39 = Hasher._finalize()();
                    sub_100060B6C(v37, v36);
                    if (v38 == v39) {
                      break;
                    }
                    unint64_t v31 = (v31 + 1) & v33;
                    uint64_t v15 = v34;
                    if (((*(void *)&v32[(v31 >> 3) & 0xFFFFFFFFFFFFFF8] >> v31) & 1) == 0) {
                      goto LABEL_16;
                    }
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v15 = v34;
                }
                else
                {
LABEL_16:
                  swift_bridgeObjectRelease();
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v54 = v15;
                  swift_bridgeObjectRetain();
                  sub_1000BC0C0(v26, v27, v31, isUniquelyReferenced_nonNull_native);
                  uint64_t v15 = v54;
                  swift_bridgeObjectRelease();
                }
                uint64_t result = swift_bridgeObjectRelease();
                uint64_t v22 = v50;
                unint64_t v23 = v53;
              }
              if (++v23 == v52)
              {
                swift_bridgeObjectRelease();
                uint64_t v0 = v41;
                uint64_t v1 = v40;
                goto LABEL_7;
              }
            }
            __break(1u);
            goto LABEL_38;
          }
          swift_bridgeObjectRelease();
        }
LABEL_7:
        unint64_t v16 = v48 + 1;
        (*v43)(v49, v0);
        unint64_t v14 = v16;
        uint64_t result = v44;
        if (v16 == v47)
        {
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_35:
  uint64_t v15 = (char *)&_swiftEmptySetSingleton;
LABEL_36:
  sub_10008ECF8((uint64_t)v42);
  return (uint64_t)v15;
}

void *sub_10008E954@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10003AFD0(&qword_100184798);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URLComponents();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10008ECF8((uint64_t)v6);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    unint64_t v13 = 0;
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t v14 = URLComponents.host.getter();
  unint64_t v13 = v15;
  if (v15)
  {
    uint64_t v12 = v14;
    uint64_t v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFLL;
    }
    if (!v16)
    {
      swift_bridgeObjectRelease();
      uint64_t v12 = 0;
      unint64_t v13 = 0;
    }
    uint64_t v17 = URLComponents.queryItems.getter();
    if (v17) {
      goto LABEL_9;
    }
LABEL_12:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_14;
  }
  uint64_t v12 = 0;
  uint64_t v17 = URLComponents.queryItems.getter();
  if (!v17) {
    goto LABEL_12;
  }
LABEL_9:
  if (*(void *)(v17 + 16))
  {
    uint64_t v11 = sub_10008DDC8(v17);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_bridgeObjectRelease();
LABEL_14:
  uint64_t v11 = 0;
LABEL_15:
  unint64_t v18 = *(void *)(URL.pathComponents.getter() + 16);
  swift_bridgeObjectRelease();
  if (v18 < 3)
  {
    uint64_t v22 = &_swiftEmptySetSingleton;
  }
  else
  {
    uint64_t result = (void *)URL.pathComponents.getter();
    if (result[2] < 3uLL)
    {
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v21 = result[8];
    uint64_t v20 = result[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (sub_10008DFD8(v21, v20)) {
      uint64_t v22 = sub_10008E1C4();
    }
    else {
      uint64_t v22 = &_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRelease();
  }
  unint64_t v23 = *(void *)(URL.pathComponents.getter() + 16);
  swift_bridgeObjectRelease();
  if (v23 < 2)
  {
    Swift::Int v26 = &_swiftEmptySetSingleton;
LABEL_29:
    uint64_t v27 = sub_10008E3C4();
    uint64_t v28 = sub_10008DC44(v27, (uint64_t)v26);
    uint64_t v29 = type metadata accessor for URL();
    uint64_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
    *a2 = v22;
    a2[1] = v28;
    a2[2] = v12;
    a2[3] = v13;
    a2[4] = v11;
    return result;
  }
  uint64_t result = (void *)URL.pathComponents.getter();
  if (result[2] >= 2uLL)
  {
    uint64_t v25 = result[6];
    uint64_t v24 = result[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (sub_10008DFD8(v25, v24)) {
      Swift::Int v26 = sub_10008E1C4();
    }
    else {
      Swift::Int v26 = &_swiftEmptySetSingleton;
    }
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_10008ECF8(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0(&qword_100184798);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10008ED58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100184798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10008EDC0(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableView;
  id v4 = objc_allocWithZone((Class)type metadata accessor for IntrinsicSizeAdjustingTableView());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 initWithFrame:1 style:0.0, 0.0, 0.0, 0.0];
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableViewHorizontalPadding] = 0x4034000000000000;
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableViewVerticalPadding] = 0x403A000000000000;
  v5[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_hidesBackButton] = 0;
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_suiteManager] = a1;
  id v6 = a1;

  sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD000000000000016, (void *)0x800000010012E360);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = sub_10004622C(0xD000000000000019);
  sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v8, v9);
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [self imageNamed:v11];

  v15.receiver = v5;
  v15.Class super_class = (Class)type metadata accessor for SelfServiceSuitePickerViewController();
  id v13 = [super initWithTitle:v7 detailText:v10 icon:v12 contentLayout:3];

  return v13;
}

void sub_10008F054()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableView];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_suiteManager];
  [v1 setDataSource:v2];
  [v1 setDelegate:v2];
  [v1 setSeparatorStyle:0];
  [v1 setShowsVerticalScrollIndicator:0];
  id v3 = [self clearColor];
  [v1 setBackgroundColor:v3];

  [v1 setScrollEnabled:0];
  [v1 setRowHeight:UITableViewAutomaticDimension];
  [v1 setEstimatedRowHeight:300.0];
  type metadata accessor for SelfServiceViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v5 = String._bridgeToObjectiveC()();
  [v1 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v5];

  id v6 = [v0 scrollView];
  [v6 setShowsVerticalScrollIndicator:0];
}

id sub_10008F214()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100123C30;
  id v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableView];
  id v5 = [v4 leadingAnchor];
  id v6 = [v1 contentView];
  id v7 = [v6 leadingAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7 constant:20.0];
  *(void *)(v3 + 32) = v8;
  id v9 = [v4 trailingAnchor];
  id v10 = [v1 contentView];
  id v11 = [v10 trailingAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11 constant:-20.0];
  *(void *)(v3 + 40) = v12;
  id v13 = [v4 topAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 topAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15 constant:26.0];
  *(void *)(v3 + 48) = v16;
  id v17 = [v4 bottomAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 bottomAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19];
  *(void *)(v3 + 56) = v20;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];

  return [v4 invalidateIntrinsicContentSize];
}

void sub_10008F690()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_tableView);
}

id sub_10008F6D0()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SelfServiceSuitePickerViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for SelfServiceSuitePickerViewController()
{
  return self;
}

uint64_t sub_10008F774(char *a1, void *a2)
{
  id v5 = (void *)swift_allocObject();
  v5[2] = a1;
  v5[3] = a2;
  void v5[4] = v2;
  id v6 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (!v6)
  {
    uint64_t v33 = a1;
    id v34 = a2;
    uint64_t v35 = v33;
    id v36 = v34;
    uint64_t v37 = v35;
    id v38 = v36;
    Swift::Int v39 = v37;
    id v40 = v38;
    id v41 = v2;
    swift_retain_n();
    id v42 = v39;
    id v43 = v40;
    id v44 = v41;
    uint64_t v45 = v42;
    id v46 = v43;
    id v47 = v44;
LABEL_7:
    swift_retain_n();
LABEL_8:
    sub_10008FBD0(0, 1, a1, a2, v2);

    swift_release_n();
    goto LABEL_9;
  }
  uint64_t v61 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  id v7 = a1;
  id v8 = a2;
  id v9 = v7;
  id v10 = v8;
  id v11 = v9;
  id v12 = v10;
  id v13 = v11;
  id v14 = v12;
  id v62 = v2;
  id v15 = v2;
  swift_retain_n();
  id v16 = v13;
  id v17 = v14;
  id v18 = v15;
  id v19 = v16;
  id v20 = v17;
  id v21 = v18;
  id v22 = [v6 suitesAvailable];
  sub_10003C374(0, (unint64_t *)&unk_100184320);
  unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v24 = v20;
  uint64_t v25 = sub_1000908F8(v23);
  swift_bridgeObjectRelease();

  if (v25)
  {
    if (qword_100182818 != -1) {
      swift_once();
    }
    uint64_t v26 = qword_10018A430;
    id v27 = [v25 secondaryAssetLocator];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;

    unint64_t v31 = v19;
    id v32 = v24;
    swift_retain();
    sub_1000C15CC(v28, v30, v26, v31, v32, (void (*)(void, uint64_t))sub_1000908EC, (uint64_t)v5);

    swift_bridgeObjectRelease();
    objc_super v2 = v62;
    goto LABEL_9;
  }
  id v59 = v19;
  objc_super v2 = v62;
  NSString v49 = *(void **)&a1[v61];
  if (!v49) {
    goto LABEL_7;
  }
  swift_retain_n();
  id v50 = [v49 suitesAvailable];
  unint64_t v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v52 = v24;
  unint64_t v53 = sub_1000908F8(v51);
  swift_bridgeObjectRelease();

  if (!v53) {
    goto LABEL_8;
  }
  if (qword_100182818 != -1) {
    swift_once();
  }
  uint64_t v54 = qword_10018A430;
  id v55 = [v53 primaryAssetLocator:v59];
  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v58 = v57;

  swift_retain();
  sub_1000C1260(v56, v58, v54, (void (*)(void, uint64_t))sub_1000908EC, (uint64_t)v5);

  swift_bridgeObjectRelease();
  swift_release_n();
  objc_super v2 = v62;
LABEL_9:

  return swift_release_n();
}

uint64_t sub_10008FBD0(void *a1, int a2, void *a3, void *a4, void *a5)
{
  int v24 = a2;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v25 = static OS_dispatch_queue.main.getter();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a5;
  *(unsigned char *)(v15 + 48) = v24;
  aBlock[4] = sub_100090C54;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_100151058;
  id v16 = _Block_copy(aBlock);
  id v17 = a1;
  id v18 = a5;
  id v19 = a3;
  id v20 = a4;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v21 = (void *)v25;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(unsigned char *, uint64_t))(v27 + 8))(v11, v9);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v26);
}

void sub_10008FE88(uint64_t a1, void *a2, void *a3, void *a4, char a5)
{
  uint64_t v7 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  id v8 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (!v8)
  {
    unint64_t v31 = a2;
    uint64_t v32 = 0;
    uint64_t v41 = 0;
    uint64_t v50 = 0;
    uint64_t v24 = 0xE000000000000000;
    uint64_t v42 = 0xE000000000000000;
    uint64_t v40 = 0xE000000000000000;
    unint64_t v30 = a4;
    goto LABEL_21;
  }
  id v9 = [v8 suitesAvailable];
  sub_10003C374(0, (unint64_t *)&unk_100184320);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v11 = a2;
  uint64_t v12 = sub_1000908F8(v10);
  swift_bridgeObjectRelease();

  if (v12)
  {
    id v13 = [v12 suiteNameLocalizedString];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v48 = v15;
    uint64_t v49 = v14;

    id v16 = *(void **)(a1 + v7);
    if (v16) {
      goto LABEL_4;
    }
LABEL_14:
    unint64_t v31 = a2;
    uint64_t v32 = 0;
    uint64_t v50 = 0;
    uint64_t v24 = 0xE000000000000000;
    uint64_t v40 = 0xE000000000000000;
    unint64_t v30 = a4;
    uint64_t v42 = v48;
    uint64_t v41 = v49;
    goto LABEL_21;
  }
  unint64_t v48 = 0xE000000000000000;
  uint64_t v49 = 0;
  id v16 = *(void **)(a1 + v7);
  if (!v16) {
    goto LABEL_14;
  }
LABEL_4:
  id v17 = [v16 suitesAvailable];
  unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v19 = v11;
  id v20 = sub_1000908F8(v18);
  swift_bridgeObjectRelease();

  if (!v20)
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0xE000000000000000;
    uint64_t v25 = *(void **)(a1 + v7);
    if (v25) {
      goto LABEL_6;
    }
LABEL_16:
    unint64_t v31 = a2;
    uint64_t v50 = 0;
    uint64_t v40 = 0xE000000000000000;
    unint64_t v30 = a4;
    uint64_t v32 = v22;
    uint64_t v42 = v48;
    uint64_t v41 = v49;
    goto LABEL_21;
  }
  id v21 = [v20 suiteDescriptionLocalizedString];
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;

  uint64_t v25 = *(void **)(a1 + v7);
  if (!v25) {
    goto LABEL_16;
  }
LABEL_6:
  id v26 = [v25 suitesAvailable];
  unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v28 = v19;
  unint64_t v29 = sub_1000908F8(v27);
  swift_bridgeObjectRelease();

  unint64_t v30 = a4;
  unint64_t v31 = a2;
  if (v29)
  {
    uint64_t v32 = v22;
    id v33 = [v29 estimatedCompletionTimeLocalizedString];
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v36 = v35;

    if ((v36 & 0x2000000000000000) != 0) {
      uint64_t v37 = HIBYTE(v36) & 0xF;
    }
    else {
      uint64_t v37 = v34 & 0xFFFFFFFFFFFFLL;
    }

    if (v37)
    {
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_100123B50;
      *(void *)(v38 + 56) = &type metadata for String;
      *(void *)(v38 + 64) = sub_10004D9B4();
      *(void *)(v38 + 32) = v34;
      *(void *)(v38 + 40) = v36;
      uint64_t v50 = sub_100045FCC(0, 0, v38, 0xD00000000000001FLL, (void *)0x800000010012E3A0);
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v50 = 0;
      uint64_t v40 = 0xE000000000000000;
    }
    uint64_t v42 = v48;
  }
  else
  {
    uint64_t v50 = 0;
    uint64_t v40 = 0xE000000000000000;
    uint64_t v32 = v22;
    uint64_t v42 = v48;
  }
  uint64_t v41 = v49;
LABEL_21:
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v30;
  *(void *)(v43 + 24) = v31;
  id v44 = objc_allocWithZone((Class)type metadata accessor for SelfServiceSuiteDescriptionViewController());
  id v45 = a3;
  id v46 = v30;
  id v47 = v31;
  uint64_t v54 = sub_100069868(a3, v41, v42, v32, v24, v50, v40, (uint64_t)sub_100090CA4, v43);
  v54[OBJC_IVAR____TtC11Diagnostics41SelfServiceSuiteDescriptionViewController_isShowingGlyph] = a5 & 1;
  [v54 setModalPresentationStyle:1];
  [v46 presentViewController:v54 animated:1 completion:0];
}

void sub_1000902D4(uint64_t a1, void *a2)
{
  objc_super v2 = *(char **)(a1 + OBJC_IVAR____TtC11Diagnostics36SelfServiceSuitePickerViewController_suiteManager);
  uint64_t v3 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v3)
  {
    id v5 = &v2[OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate];
    if (!swift_unknownObjectWeakLoadStrong()) {
      return;
    }
    uint64_t v6 = *((void *)v5 + 1);
    uint64_t ObjectType = swift_getObjectType();
    id v8 = (void *)swift_allocObject();
    void v8[2] = v2;
    v8[3] = v3;
    void v8[4] = a2;
    id v9 = *(void (**)(char *, void *, void (*)(), void *, uint64_t, uint64_t))(v6 + 48);
    id v10 = v3;
    v9(v2, a2, sub_10003B9D4, v8, ObjectType, v6);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    id v10 = (id)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
}

uint64_t sub_100090474(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void, uint64_t), uint64_t a6)
{
  return sub_100090A54(a1, a3, a4, a5, a6);
}

uint64_t sub_100090488(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(a1, 1);
}

uint64_t sub_1000904B4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v12 - 8);
  uint64_t v24 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v22 = static OS_dispatch_queue.main.getter();
  unint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  void v15[6] = v4;
  aBlock[4] = sub_1000908C0;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_100150FE0;
  id v16 = _Block_copy(aBlock);
  id v17 = a1;
  id v18 = a2;
  sub_10003AF68(a3);
  id v19 = v4;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v20 = (void *)v22;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v14, v24);
}

void sub_10009076C(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  objc_allocWithZone((Class)type metadata accessor for SelfServiceSuiteInProgressViewController());
  uint64_t v14 = sub_10009D388(a1, a2);
  uint64_t v10 = (uint64_t *)&v14[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  uint64_t v11 = *(void *)&v14[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  uint64_t *v10 = a3;
  v10[1] = a4;
  sub_10003AF68(a3);
  sub_10003B0B8(v11);
  id v12 = [a5 navigationController];
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 pushViewController:v14 animated:1];
  }
}

uint64_t sub_100090868()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1000908C0()
{
  sub_10009076C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1000908D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000908E0()
{
  return swift_release();
}

uint64_t sub_1000908EC(void *a1, int a2)
{
  return sub_10008FBD0(a1, a2, v2[2], v2[3], v2[4]);
}

void *sub_1000908F8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    sub_10003C374(0, &qword_100185910);
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      id v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 suiteID];
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100090A54(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void, uint64_t), uint64_t a5)
{
  if (a1) {
    return ((uint64_t (*)(uint64_t, void))a4)(a1, 0);
  }
  char v8 = *(void **)(a2 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v8)
  {
    swift_retain_n();
    id v10 = [v8 suitesAvailable];
    sub_10003C374(0, (unint64_t *)&unk_100184320);
    unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v12 = a3;
    uint64_t v13 = sub_1000908F8(v11);
    swift_bridgeObjectRelease();

    if (v13)
    {
      if (qword_100182818 != -1) {
        swift_once();
      }
      uint64_t v14 = qword_10018A430;
      id v15 = [v13 primaryAssetLocator];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v18 = v17;

      swift_retain();
      sub_1000C1260(v16, v18, v14, a4, a5);

      swift_bridgeObjectRelease();
      return swift_release_n();
    }
  }
  else
  {
    swift_retain_n();
  }
  a4(0, 1);
  return swift_release_n();
}

uint64_t sub_100090C04()
{
  return _swift_deallocObject(v0, 49, 7);
}

void sub_100090C54()
{
  sub_10008FE88(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(unsigned char *)(v0 + 48));
}

uint64_t sub_100090C64()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100090CA4()
{
  sub_1000902D4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

double sub_100090CB8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Image.ResizingMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 status];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  BOOL v12 = v9 == 0x73736563637573 && v11 == 0xE700000000000000;
  if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    Image.init(systemName:)();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    uint64_t v13 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v14 = static Color.green.getter();
    *(void *)&v28[0] = v13;
    *(_OWORD *)((char *)v28 + 8) = xmmword_100124380;
    *((void *)&v28[1] + 1) = v14;
    LOBYTE(v29) = 0;
LABEL_7:
    swift_retain();
    swift_retain();
    sub_10003AFD0(&qword_100184818);
    sub_1000914C4();
    _ConditionalContent<>.init(storage:)();
    v28[0] = v31;
    v28[1] = v32;
    __int16 v29 = v33;
    goto LABEL_8;
  }
  BOOL v20 = v9 == 0x6572756C696166 && v11 == 0xE700000000000000;
  if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    Image.init(systemName:)();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    uint64_t v21 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v22 = static Color.red.getter();
    *(void *)&v28[0] = v21;
    *(_OWORD *)((char *)v28 + 8) = xmmword_100124380;
    *((void *)&v28[1] + 1) = v22;
    LOBYTE(v29) = 1;
    goto LABEL_7;
  }
  if (v9 == 0x676E696E726177 && v11 == 0xE700000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    Image.init(systemName:)();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    uint64_t v23 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v24 = static Color.yellow.getter();
    *(void *)&v28[0] = v23;
    *(_OWORD *)((char *)v28 + 8) = xmmword_100124380;
    *((void *)&v28[1] + 1) = v24;
    LOBYTE(v29) = 0;
    swift_retain();
    swift_retain();
    sub_10003AFD0(&qword_100184818);
    sub_1000914C4();
    _ConditionalContent<>.init(storage:)();
    v28[0] = v31;
    v28[1] = v32;
    LOBYTE(v29) = v33;
    HIBYTE(v29) = 1;
  }
  else
  {
    if (v9 == 0x44455050494B53 && v11 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v25 & 1) == 0)
      {
        __int16 v29 = 0;
        memset(v28, 0, sizeof(v28));
        char v30 = 1;
        sub_10003AFD0(&qword_1001847F0);
        sub_10009144C(&qword_1001847F8, &qword_1001847F0, (void (*)(void))sub_100091424);
        _ConditionalContent<>.init(storage:)();
        goto LABEL_12;
      }
    }
    Image.init(systemName:)();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    uint64_t v26 = Image.resizable(capInsets:resizingMode:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v27 = static Color.yellow.getter();
    *(void *)&v28[0] = v26;
    *(_OWORD *)((char *)v28 + 8) = xmmword_100124380;
    *((void *)&v28[1] + 1) = v27;
    LOBYTE(v29) = 1;
    swift_retain();
    swift_retain();
    sub_10003AFD0(&qword_100184818);
    sub_1000914C4();
    _ConditionalContent<>.init(storage:)();
    v28[0] = v31;
    v28[1] = v32;
    LOBYTE(v29) = v33;
    HIBYTE(v29) = 1;
  }
LABEL_8:
  sub_10003AFD0(&qword_100184808);
  sub_100091424();
  _ConditionalContent<>.init(storage:)();
  if (HIBYTE(v33)) {
    __int16 v15 = 256;
  }
  else {
    __int16 v15 = 0;
  }
  v28[0] = v31;
  v28[1] = v32;
  __int16 v29 = v15 | v33;
  char v30 = 0;
  sub_10003AFD0(&qword_1001847F0);
  sub_10009144C(&qword_1001847F8, &qword_1001847F0, (void (*)(void))sub_100091424);
  _ConditionalContent<>.init(storage:)();
  swift_release();
  swift_release();
LABEL_12:
  double result = *(double *)&v31;
  long long v17 = v32;
  __int16 v18 = v33;
  char v19 = v34;
  *(_OWORD *)a2 = v31;
  *(_OWORD *)(a2 + 16) = v17;
  *(_WORD *)(a2 + 32) = v18;
  *(unsigned char *)(a2 + 34) = v19;
  return result;
}

uint64_t sub_100091424()
{
  return sub_10009144C(&qword_100184800, &qword_100184808, (void (*)(void))sub_1000914C4);
}

uint64_t sub_10009144C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10003B070(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000914C4()
{
  unint64_t result = qword_100184810;
  if (!qword_100184810)
  {
    sub_10003B070(&qword_100184818);
    sub_100091540();
    sub_1000915B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184810);
  }
  return result;
}

unint64_t sub_100091540()
{
  unint64_t result = qword_100184820;
  if (!qword_100184820)
  {
    sub_10003B070(&qword_100184828);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184820);
  }
  return result;
}

unint64_t sub_1000915B4()
{
  unint64_t result = qword_100183458;
  if (!qword_100183458)
  {
    sub_10003B070(&qword_100183460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100183458);
  }
  return result;
}

id sub_100091610()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v0 setFont:v1];

  [v0 setNumberOfLines:1];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setAdjustsFontForContentSizeCategory:1];
  id v2 = [self systemBlueColor];
  [v0 setTextColor:v2];

  return v0;
}

id sub_10009170C()
{
  [v0 setSelectionStyle:0];
  id v1 = self;
  id v2 = [v1 secondarySystemBackgroundColor];
  [v0 setBackgroundColor:v2];

  id v3 = [v0 layer];
  [v3 setCornerRadius:12.0];

  id v4 = [v1 secondarySystemBackgroundColor];
  [v0 setBackgroundColor:v4];

  id v5 = [v0 layer];
  [v5 setCornerRadius:12.0];

  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView];
  [v6 setDistribution:0];
  [v6 setDirectionalLayoutMargins:16.0, 18.0, 16.0, 16.0];
  [v6 setLayoutMarginsRelativeArrangement:1];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v7 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_descriptionStackView];
  [v7 setLayoutMarginsRelativeArrangement:1];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v7 setDistribution:0];
  [v7 setSpacing:4.0];
  [v6 setAxis:0];
  [v6 setAlignment:3];
  [v7 setAxis:1];

  return [v7 setAlignment:1];
}

void sub_100091924()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleLabel;
  [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleLabel] removeFromSuperview];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImageView];
  [v2 removeFromSuperview];
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel;
  [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel] removeFromSuperview];
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel;
  [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel] removeFromSuperview];
  id v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_descriptionStackView];
  [v5 removeFromSuperview];
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView];
  [v6 removeFromSuperview];
  [v5 addArrangedSubview:*(void *)&v0[v1]];
  [v5 addArrangedSubview:*(void *)&v0[v3]];
  [v5 addArrangedSubview:*(void *)&v0[v4]];
  [v6 addArrangedSubview:v2];
  [v6 addArrangedSubview:v5];
  [v6 setCustomSpacing:v2 afterView:18.0];
  [v6 setCustomSpacing:v5 afterView:16.0];
  id v7 = [v0 contentView];
  [v7 addSubview:v6];
}

void sub_100091AA8()
{
  uint64_t v1 = v0;
  id v2 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1001254C0;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView];
  id v5 = [v4 bottomAnchor];
  id v6 = [v1 contentView];
  id v7 = [v6 bottomAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7];
  *(void *)(v3 + 32) = v8;
  id v9 = [v4 topAnchor];
  id v10 = [v1 contentView];
  id v11 = [v10 topAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11];
  *(void *)(v3 + 40) = v12;
  id v13 = [v4 trailingAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 trailingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15];
  *(void *)(v3 + 48) = v16;
  id v17 = [v4 leadingAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 leadingAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19];
  *(void *)(v3 + 56) = v20;
  uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImageView];
  id v22 = [v21 widthAnchor];
  id v23 = [v22 constraintEqualToConstant:40.0];

  *(void *)(v3 + 64) = v23;
  id v24 = [v21 heightAnchor];
  id v25 = [v24 constraintEqualToConstant:40.0];

  *(void *)(v3 + 72) = v25;
  specialized Array._endMutation()();
  sub_10005C04C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

CGFloat sub_100091E40()
{
  id v1 = [v0 contentView];
  [v1 bounds];
  CGFloat v3 = v2;
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;

  v21.origin.x = v3;
  v21.origin.y = v5;
  v21.size.width = v7;
  v21.size.height = v9;
  double Width = CGRectGetWidth(v21);
  id v11 = [v0 contentView];
  [v11 layoutMargins];
  double v13 = v12;

  double v14 = Width - v13;
  id v15 = [v0 contentView];
  [v15 layoutMargins];
  double v17 = v16;

  LODWORD(v18) = 1148846080;
  LODWORD(v19) = 1112014848;
  [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView] systemLayoutSizeFittingSize:v14 - v17 withHorizontalFittingPriority:1.79769313e308 verticalFittingPriority:v18, v19];
  return UIViewNoIntrinsicMetric;
}

id sub_100091F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconSpacing] = 0x4032000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_defaultSpacing] = 0x4030000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_defaultVerticalSpacing] = 0x4010000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconDimensionSize] = 0x4044000000000000;
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView;
  id v5 = objc_allocWithZone((Class)UIStackView);
  double v6 = v3;
  *(void *)&v3[v4] = [v5 init];
  uint64_t v7 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_descriptionStackView;
  *(void *)&v6[v7] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImage] = 0;
  uint64_t v8 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImageView;
  id v9 = [objc_allocWithZone((Class)UIImageView) init];
  [v9 setContentMode:1];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v6[v8] = v9;
  uint64_t v10 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleLabel;
  id v11 = [objc_allocWithZone((Class)UILabel) init];
  double v12 = self;
  id v13 = [v12 preferredFontForTextStyle:UIFontTextStyleHeadline];
  [v11 setFont:v13];

  [v11 setNumberOfLines:2];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v11 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v6[v10] = v11;
  double v14 = &v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleText];
  *(void *)double v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v15 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel;
  id v16 = [objc_allocWithZone((Class)UILabel) init];
  id v17 = [v12 preferredFontForTextStyle:UIFontTextStyleBody];
  [v16 setFont:v17];

  [v16 setNumberOfLines:0];
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v16 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v6[v15] = v16;
  double v18 = &v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleText];
  *(void *)double v18 = 0;
  *((void *)v18 + 1) = 0;
  v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleTruncated] = 0;
  uint64_t v19 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel;
  *(void *)&v6[v19] = sub_100091610();
  v6[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreEnabled] = 0;

  if (a3)
  {
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = 0;
  }
  v25.receiver = v6;
  v25.Class super_class = (Class)type metadata accessor for SelfServiceViewCell();
  id v21 = [super initWithStyle:a1 reuseIdentifier:v20];

  return v21;
}

id sub_1000922B8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconSpacing] = 0x4032000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_defaultSpacing] = 0x4030000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_defaultVerticalSpacing] = 0x4010000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconDimensionSize] = 0x4044000000000000;
  uint64_t v2 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_rootStackView;
  id v3 = objc_allocWithZone((Class)UIStackView);
  uint64_t v4 = v1;
  *(void *)&v1[v2] = [v3 init];
  uint64_t v5 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_descriptionStackView;
  *(void *)&v4[v5] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImage] = 0;
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_iconImageView;
  id v7 = [objc_allocWithZone((Class)UIImageView) init];
  [v7 setContentMode:1];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v4[v6] = v7;
  uint64_t v8 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleLabel;
  id v9 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = self;
  id v11 = [v10 preferredFontForTextStyle:UIFontTextStyleHeadline];
  [v9 setFont:v11];

  [v9 setNumberOfLines:2];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v9 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v4[v8] = v9;
  double v12 = &v4[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_titleText];
  *(void *)double v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleLabel;
  id v14 = [objc_allocWithZone((Class)UILabel) init];
  id v15 = [v10 preferredFontForTextStyle:UIFontTextStyleBody];
  [v14 setFont:v15];

  [v14 setNumberOfLines:0];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v14 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v4[v13] = v14;
  id v16 = &v4[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleText];
  *(void *)id v16 = 0;
  *((void *)v16 + 1) = 0;
  v4[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_subtitleTruncated] = 0;
  uint64_t v17 = OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel;
  *(void *)&v4[v17] = sub_100091610();
  v4[OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreEnabled] = 0;

  v21.receiver = v4;
  v21.Class super_class = (Class)type metadata accessor for SelfServiceViewCell();
  [super initWithCoder:a1];

  return v18;
}

void sub_1000925C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics19SelfServiceViewCell_learnMoreLabel);
}

id sub_100092678()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SelfServiceViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for SelfServiceViewCell()
{
  return self;
}

uint64_t sub_100092794()
{
  uint64_t v0 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10003AFD0((uint64_t *)&unk_1001864E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v7 = [self defaultMetrics];
  id v8 = [self systemFontOfSize:16.0 weight:UIFontWeightSemibold];
  id v9 = [v7 scaledFontForFont:v8];

  static UIButton.Configuration.plain()();
  *(void *)(swift_allocObject() + 16) = v9;
  id v10 = v9;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v11 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  UIButton.Configuration.titleTextAttributesTransformer.setter();

  double v12 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.cornerRadius.setter();
  v12(v15, 0);
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for UIButton.Configuration.CornerStyle.fixed(_:), v0);
  UIButton.Configuration.cornerStyle.setter();
  UIButton.Configuration.contentInsets.setter();
  id v13 = [self whiteColor];
  return UIButton.Configuration.baseForegroundColor.setter();
}

void sub_100092A48()
{
  uint64_t v0 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10003AFD0((uint64_t *)&unk_1001864E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v7 = [self defaultMetrics];
  id v8 = [self systemFontOfSize:16.0];
  id v9 = [v7 scaledFontForFont:v8];

  static UIButton.Configuration.plain()();
  *(void *)(swift_allocObject() + 16) = v9;
  id v10 = v9;
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v11 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 0, 1, v11);
  UIButton.Configuration.titleTextAttributesTransformer.setter();

  id v12 = [self currentDevice];
  id v13 = [v12 userInterfaceIdiom];

  if (v13 == (id)6)
  {
    id v14 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
    UIBackgroundConfiguration.cornerRadius.setter();
    v14(v15, 0);
    (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for UIButton.Configuration.CornerStyle.fixed(_:), v0);
    UIButton.Configuration.cornerStyle.setter();
  }
}

void *sub_100092CFC()
{
  swift_getObjectType();
  uint64_t v1 = type metadata accessor for UIButton.Configuration();
  __chkstk_darwin(v1 - 8);
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_fontSizeTitleRegular] = 0x4040000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_fontSizeTitleSE] = 0x4038000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titlePadding] = 0x4024000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_buttonSpacing] = 0x402E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_buttonPadding] = 0x4044000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleBodyPadding] = 0x402E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_sidePadding] = 0x4034000000000000;
  uint64_t v2 = &v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText];
  void *v2 = 0;
  v2[1] = 0;
  id v3 = &v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
  *id v3 = 0;
  v3[1] = 0;
  v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody] = 1;
  uint64_t v4 = &v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
  void *v4 = 0;
  v4[1] = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle];
  *uint64_t v5 = 0;
  v5[1] = 0;
  uint64_t v6 = &v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  void *v6 = 0;
  v6[1] = 0;
  id v7 = &v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
  *id v7 = 0;
  v7[1] = 0;
  id v8 = &v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction];
  *id v8 = 0;
  v8[1] = 0;
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_scrollView;
  id v10 = objc_allocWithZone((Class)UIScrollView);
  uint64_t v11 = v0;
  *(void *)&v0[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UITextView) init];
  *(void *)&v11[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton] = 0;
  sub_10003C374(0, &qword_100182E70);
  sub_100092794();
  *(void *)&v11[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton] = UIButton.init(configuration:primaryAction:)();

  v21.receiver = v11;
  v21.Class super_class = (Class)type metadata accessor for ConsentNoticeViewController();
  id v14 = [super initWithNibName:0 bundle:0];
  id v15 = *(uint64_t (**)(void))((swift_isaMask & *v14) + 0x200);
  id v16 = v14;
  char v17 = v15();
  id v18 = v16;
  if (v17)
  {
    sub_100092A48();
    uint64_t v19 = UIButton.init(configuration:primaryAction:)();

    id v18 = *(void **)((char *)v16 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton);
    *(void *)((char *)v16 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton) = v19;
  }

  return v16;
}

void *sub_100093014(void *a1)
{
  swift_getObjectType();
  uint64_t v3 = type metadata accessor for UIButton.Configuration();
  __chkstk_darwin(v3 - 8);
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_fontSizeTitleRegular] = 0x4040000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_fontSizeTitleSE] = 0x4038000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titlePadding] = 0x4024000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_buttonSpacing] = 0x402E000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_buttonPadding] = 0x4044000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleBodyPadding] = 0x402E000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_sidePadding] = 0x4034000000000000;
  uint64_t v4 = &v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleText];
  void *v4 = 0;
  v4[1] = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyText];
  *uint64_t v5 = 0;
  v5[1] = 0;
  v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody] = 1;
  uint64_t v6 = &v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryActionTitle];
  void *v6 = 0;
  v6[1] = 0;
  id v7 = &v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryActionTitle];
  *id v7 = 0;
  v7[1] = 0;
  id v8 = &v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction];
  *id v8 = 0;
  v8[1] = 0;
  uint64_t v9 = &v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction];
  *uint64_t v9 = 0;
  v9[1] = 0;
  id v10 = &v1[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction];
  void *v10 = 0;
  v10[1] = 0;
  uint64_t v11 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_scrollView;
  id v12 = objc_allocWithZone((Class)UIScrollView);
  uint64_t v13 = v1;
  *(void *)&v1[v11] = [v12 init];
  uint64_t v14 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel;
  *(void *)&v13[v14] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v15 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView;
  *(void *)&v13[v15] = [objc_allocWithZone((Class)UITextView) init];
  *(void *)&v13[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton] = 0;
  sub_10003C374(0, &qword_100182E70);
  sub_100092794();
  *(void *)&v13[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton] = UIButton.init(configuration:primaryAction:)();

  v22.receiver = v13;
  v22.Class super_class = (Class)type metadata accessor for ConsentNoticeViewController();
  id v16 = [super initWithCoder:a1];
  char v17 = v16;
  if (v16)
  {
    id v18 = *(uint64_t (**)(void))((swift_isaMask & *v16) + 0x200);
    uint64_t v19 = v16;
    if (v18())
    {
      sub_100092A48();
      uint64_t v20 = UIButton.init(configuration:primaryAction:)();

      a1 = *(void **)((char *)v19 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton);
      *(void *)((char *)v19 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton) = v20;
    }
    else
    {
    }
  }

  return v17;
}

void sub_10009333C(char a1)
{
  v11.receiver = v1;
  v11.Class super_class = (Class)type metadata accessor for ConsentNoticeViewController();
  [super viewWillAppear:a1 & 1];
  id v3 = [v1 navigationController];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 navigationBar];

    id v6 = [objc_allocWithZone((Class)UIImage) init];
    [v5 setBackgroundImage:v6 forBarMetrics:0];
  }
  id v7 = [v1 navigationController];
  if (v7)
  {
    id v8 = v7;
    id v9 = [v7 navigationBar];

    id v10 = [objc_allocWithZone((Class)UIImage) init];
    [v9 setShadowImage:v10];
  }
}

void sub_1000934C8()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    return;
  }
  uint64_t v2 = v1;
  id v3 = self;
  id v4 = [v3 systemBackgroundColor];
  [v2 setBackgroundColor:v4];

  id v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_scrollView];
  id v6 = [v3 clearColor];
  [v5 setBackgroundColor:v6];

  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v7 = self;
  id v8 = [v7 defaultMetrics];
  id v9 = [self mainScreen];
  [v9 bounds];
  double v11 = v10;

  if (v11 > 568.0) {
    double v12 = 32.0;
  }
  else {
    double v12 = 24.0;
  }
  uint64_t v13 = self;
  id v14 = [v13 systemFontOfSize:v12 weight:UIFontWeightBold];
  id v54 = [v8 scaledFontForFont:v14];

  uint64_t v15 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel];
  [v15 setMinimumScaleFactor:0.6];
  [v15 setFont:v54];
  [v15 setTextAlignment:1];
  id v16 = [v0 traitCollection];
  id v17 = [v16 preferredContentSizeCategory];

  LOBYTE(v16) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v16) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = 2;
  }
  [v15 setNumberOfLines:v18];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v19 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
  id v20 = [v7 defaultMetrics];
  id v21 = [v13 systemFontOfSize:16.0];
  id v22 = [v20 scaledFontForFont:v21];

  [v19 setFont:v22];
  [v19 setTextAlignment:1];
  [v19 setScrollEnabled:0];
  [v19 setEditable:0];
  [v19 setSelectable:0];
  id v53 = v3;
  id v23 = [v3 clearColor];
  [v19 setBackgroundColor:v23];

  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v24 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton];
  id v25 = [v24 titleLabel];
  if (v25)
  {
    uint64_t v26 = v25;
    [v25 setAdjustsFontSizeToFitWidth:1];
  }
  id v27 = [v24 titleLabel];
  if (v27)
  {
    id v28 = v27;
    [v27 setAllowsDefaultTighteningForTruncation:1];
  }
  id v29 = [v24 titleLabel];
  if (v29)
  {
    char v30 = v29;
    [v29 setMinimumScaleFactor:0.875];
  }
  id v31 = [v24 tintColor];
  [v24 setBackgroundColor:v31];

  id v32 = [v24 layer];
  [v32 setCornerRadius:10.0];

  [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v24 addTarget:v0 action:"primaryButtonPressed:" forControlEvents:64];
  uint64_t v33 = OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton;
  char v34 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton];
  if (v34)
  {
    id v35 = [v34 titleLabel];
    if (v35)
    {
      unint64_t v36 = v35;
      [v35 setAdjustsFontSizeToFitWidth:1];
    }
    uint64_t v37 = *(void **)&v0[v33];
    if (v37)
    {
      id v38 = [v37 titleLabel];
      if (v38)
      {
        uint64_t v39 = v38;
        [v38 setAllowsDefaultTighteningForTruncation:1];
      }
      uint64_t v40 = *(void **)&v0[v33];
      if (v40)
      {
        id v41 = [v40 titleLabel];
        if (v41)
        {
          uint64_t v42 = v41;
          [v41 setMinimumScaleFactor:0.8];
        }
      }
    }
  }
  id v43 = [self currentDevice];
  id v44 = [v43 userInterfaceIdiom];

  if (v44 != (id)6) {
    goto LABEL_27;
  }
  id v45 = *(void **)&v0[v33];
  if (v45)
  {
    id v46 = v45;
    id v47 = [v53 secondarySystemBackgroundColor];
    [v46 setBackgroundColor:v47];

    unint64_t v48 = *(void **)&v0[v33];
    if (v48)
    {
      id v49 = [v48 layer];
      [v49 setCornerRadius:10.0];

LABEL_27:
      uint64_t v50 = *(void **)&v0[v33];
      if (v50)
      {
        [v50 setTranslatesAutoresizingMaskIntoConstraints:0];
        unint64_t v51 = *(void **)&v0[v33];
        if (v51)
        {
          id v52 = v51;
          [v52 addTarget:v0 action:"secondaryButtonPressed:" forControlEvents:64];
        }
      }
    }
  }
}

void sub_100093B7C()
{
  if (v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody] == 1)
  {
    id v1 = [v0 view];
    if (!v1)
    {
LABEL_13:
      __break(1u);
      return;
    }
    uint64_t v2 = v1;
    id v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_scrollView];
    [v1 addSubview:v3];

    [v3 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel]];
    [v3 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView]];
  }
  id v4 = [v0 view];
  if (!v4)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v5 = v4;
  [v4 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton]];

  id v6 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton];
  if (!v6) {
    return;
  }
  id v7 = v6;
  id v8 = [v0 view];
  if (!v8) {
    goto LABEL_12;
  }
  id v9 = v8;
  [v8 addSubview:v7];
}

void sub_100093CE4()
{
  id v1 = v0;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_scrollView);
  [v2 sizeToFit];
  id v3 = &selRef_setExportedInterface_;
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody) == 1)
  {
    sub_10003AFD0((uint64_t *)&unk_100182E20);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_100125500;
    id v5 = [v2 topAnchor];
    id v6 = [v1 view];
    if (!v6)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    id v7 = v6;
    id v8 = [v6 safeAreaLayoutGuide];

    id v9 = [v8 topAnchor];
    id v10 = [v5 constraintEqualToAnchor:v9];

    *(void *)(v4 + 32) = v10;
    id v11 = [v2 leadingAnchor];
    id v12 = [v1 view];
    if (!v12)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v13 = v12;
    id v14 = [v12 safeAreaLayoutGuide];

    id v15 = [v14 leadingAnchor];
    id v16 = [v11 constraintEqualToAnchor:v15];

    *(void *)(v4 + 40) = v16;
    id v17 = [v2 trailingAnchor];
    id v18 = [v1 view];
    if (!v18)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v19 = v18;
    id v20 = [v18 safeAreaLayoutGuide];

    id v21 = [v20 trailingAnchor];
    id v22 = [v17 constraintEqualToAnchor:v21];

    *(void *)(v4 + 48) = v22;
    id v23 = [v2 bottomAnchor];
    id v24 = [*(id *)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton) topAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24 constant:-20.0];

    *(void *)(v4 + 56) = v25;
    uint64_t v26 = *(void **)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel);
    id v27 = [v26 topAnchor];
    id v28 = [v2 contentLayoutGuide];
    id v29 = [v28 topAnchor];

    id v30 = [v27 constraintEqualToAnchor:v29 constant:10.0];
    *(void *)(v4 + 64) = v30;
    id v31 = [v26 leadingAnchor];
    id v32 = [v2 contentLayoutGuide];
    id v33 = [v32 leadingAnchor];

    id v34 = [v31 constraintEqualToAnchor:v33 constant:20.0];
    *(void *)(v4 + 72) = v34;
    id v35 = [v26 trailingAnchor];
    id v36 = [v2 contentLayoutGuide];
    id v37 = [v36 trailingAnchor];

    id v38 = [v35 constraintEqualToAnchor:v37 constant:-20.0];
    *(void *)(v4 + 80) = v38;
    id v39 = [v26 centerXAnchor];
    id v40 = [v1 view];
    if (!v40)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    id v41 = v40;
    id v42 = [v40 safeAreaLayoutGuide];

    id v43 = [v42 centerXAnchor];
    id v44 = [v39 constraintEqualToAnchor:v43];

    *(void *)(v4 + 88) = v44;
    id v45 = *(void **)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView);
    id v46 = [v45 topAnchor];
    id v47 = [v26 bottomAnchor];
    id v48 = [v46 constraintEqualToAnchor:v47 constant:15.0];

    *(void *)(v4 + 96) = v48;
    id v49 = [v45 leadingAnchor];
    id v50 = [v2 contentLayoutGuide];
    id v51 = [v50 leadingAnchor];

    id v52 = [v49 constraintEqualToAnchor:v51];
    *(void *)(v4 + 104) = v52;
    id v53 = [v45 trailingAnchor];
    id v54 = [v2 contentLayoutGuide];
    id v55 = [v54 trailingAnchor];

    id v56 = [v53 constraintEqualToAnchor:v55];
    *(void *)(v4 + 112) = v56;
    id v57 = [v45 centerXAnchor];
    id v58 = [v1 view];
    if (!v58)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    id v59 = v58;
    id v129 = self;
    id v60 = [v59 safeAreaLayoutGuide];

    id v61 = [v60 centerXAnchor];
    id v62 = [v57 constraintEqualToAnchor:v61];

    *(void *)(v4 + 120) = v62;
    id v63 = [v45 bottomAnchor];
    id v64 = [v2 contentLayoutGuide];
    id v65 = [v64 bottomAnchor];

    id v66 = [v63 constraintEqualToAnchor:v65];
    *(void *)(v4 + 128) = v66;
    specialized Array._endMutation()();
    sub_10003C374(0, (unint64_t *)&qword_1001831A0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v129 activateConstraints:isa];

    id v3 = &selRef_setExportedInterface_;
  }
  if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x200))() & 1) != 0
    && (unint64_t v68 = *(void **)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton)) != 0)
  {
    sub_10003AFD0((uint64_t *)&unk_100182E20);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_100124770;
    id v130 = v68;
    id v70 = [v130 bottomAnchor];
    id v71 = [v1 view];
    if (!v71)
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v72 = v71;
    id v73 = [v71 safeAreaLayoutGuide];

    id v74 = [v73 bottomAnchor];
    id v75 = [v70 v3[508] v74 -40.0];

    *(void *)(v69 + 32) = v75;
    id v76 = [v130 leadingAnchor];
    id v77 = [v1 view];
    if (!v77)
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v78 = v77;
    id v79 = [v77 safeAreaLayoutGuide];

    id v80 = [v79 leadingAnchor];
    id v81 = [v76 v3[508] v80 40.0];

    *(void *)(v69 + 40) = v81;
    id v82 = [v130 trailingAnchor];
    id v83 = [v1 view];
    if (!v83)
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v84 = v83;
    id v85 = [v83 safeAreaLayoutGuide];

    id v86 = [v85 trailingAnchor];
    id v87 = [v82 v3[508] v86 -40.0];

    *(void *)(v69 + 48) = v87;
    id v88 = [v130 centerXAnchor];
    id v89 = [v1 view];
    if (!v89)
    {
LABEL_35:
      __break(1u);
      return;
    }
    uint64_t v90 = v89;
    int v91 = self;
    id v92 = [v90 safeAreaLayoutGuide];

    id v93 = [v92 centerXAnchor];
    id v94 = [v88 constraintEqualToAnchor:v93];

    *(void *)(v69 + 56) = v94;
    long long v95 = v1;
    uint64_t v96 = *(void **)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton);
    id v97 = [v96 bottomAnchor];
    id v98 = [v130 topAnchor];
    id v99 = [v97 v3[508] v98 -15.0];

    *(void *)(v69 + 64) = v99;
    specialized Array._endMutation()();
    sub_10003C374(0, (unint64_t *)&qword_1001831A0);
    v100.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v91 activateConstraints:v100.super.isa];
  }
  else
  {
    sub_10003AFD0((uint64_t *)&unk_100182E20);
    uint64_t v101 = swift_allocObject();
    *(_OWORD *)(v101 + 16) = xmmword_100123F00;
    uint64_t v96 = *(void **)((char *)v1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton);
    id v102 = [v96 bottomAnchor];
    long long v95 = v1;
    id v103 = [v1 view];
    if (!v103)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v104 = v103;
    uint64_t v105 = self;
    id v106 = [v104 safeAreaLayoutGuide];

    id v107 = [v106 bottomAnchor];
    id v108 = [v102 v3[508] v107 -15.0];

    *(void *)(v101 + 32) = v108;
    specialized Array._endMutation()();
    sub_10003C374(0, (unint64_t *)&qword_1001831A0);
    v100.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v105 activateConstraints:v100.super.isa];
  }

  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v109 = swift_allocObject();
  *(_OWORD *)(v109 + 16) = xmmword_100125510;
  id v110 = [v96 leadingAnchor];
  id v111 = [v95 view];
  if (!v111)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v112 = v111;
  id v113 = [v111 safeAreaLayoutGuide];

  id v114 = [v113 leadingAnchor];
  id v115 = [v110 constraintEqualToAnchor:v114 constant:40.0];

  *(void *)(v109 + 32) = v115;
  id v116 = [v96 trailingAnchor];
  id v117 = [v95 view];
  if (!v117)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v118 = v117;
  id v119 = [v117 safeAreaLayoutGuide];

  id v120 = [v119 trailingAnchor];
  id v121 = [v116 constraintEqualToAnchor:v120 constant:-40.0];

  *(void *)(v109 + 40) = v121;
  id v122 = [v96 centerXAnchor];
  id v123 = [v95 view];
  if (!v123)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v124 = v123;
  Class v125 = self;
  id v126 = [v124 safeAreaLayoutGuide];

  id v127 = [v126 centerXAnchor];
  id v128 = [v122 constraintEqualToAnchor:v127];

  *(void *)(v109 + 48) = v128;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class v131 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v125 activateConstraints:v131];
}

void sub_100094CFC(char *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4 = *(void (**)(uint64_t))&a1[*a4];
  if (v4)
  {
    id v6 = a3;
    id v8 = a1;
    uint64_t v7 = sub_10003AF68((uint64_t)v4);
    v4(v7);
    sub_10003B0B8((uint64_t)v4);
  }
}

void sub_100094DD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003B0B8(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryAction));
  sub_10003B0B8(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryAction));
  sub_10003B0B8(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction));

  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_secondaryButton);
}

id sub_100094ED0()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for ConsentNoticeViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for ConsentNoticeViewController()
{
  return self;
}

uint64_t sub_100095030()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100095068(uint64_t a1, uint64_t a2)
{
  id v3 = (uint64_t *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction];
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_cancelAction];
  *id v3 = a1;
  v3[1] = a2;
  sub_10003AF68(a1);
  sub_10003B0B8(v4);
  uint64_t v5 = *v3;
  id v8 = [v2 navigationItem];
  if (v5)
  {
    id v6 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:1 target:v2 action:"cancelButtonPressed:"];
    [v8 setLeftBarButtonItem:v6];

    uint64_t v7 = v6;
  }
  else
  {
    [v8 setLeftBarButtonItem:0];
    uint64_t v7 = v8;
  }
}

id sub_100095158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001ALL, (void *)0x800000010012E760);
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD00000000000001CLL, (void *)0x800000010012E780);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self alertControllerWithTitle:v7 message:v8 preferredStyle:1];

  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000018, (void *)0x800000010012E7A0);
  id v10 = (void *)swift_allocObject();
  _DWORD v10[2] = a1;
  _OWORD v10[3] = a2;
  v10[4] = v9;
  swift_retain();
  id v11 = v9;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = sub_1000954F0;
  id v28 = v10;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  id v25 = sub_100046950;
  uint64_t v26 = &unk_100151148;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_release();
  id v14 = self;
  id v15 = [v14 actionWithTitle:v12 style:2 handler:v13];
  _Block_release(v13);

  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000017, (void *)0x800000010012E7C0);
  id v16 = (void *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = v11;
  id v17 = v11;
  sub_10003AF68(a3);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = sub_100095514;
  id v28 = v16;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  id v25 = sub_100046950;
  uint64_t v26 = &unk_100151198;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_release();
  id v20 = [v14 actionWithTitle:v18 style:1 handler:v19];
  _Block_release(v19);

  [v17 addAction:v15];
  [v17 addAction:v20];

  return v17;
}

id sub_1000954F0(uint64_t a1)
{
  return sub_100095908(a1, 13);
}

uint64_t sub_1000954F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100095508()
{
  return swift_release();
}

id sub_100095518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000021, (void *)0x800000010012E7E0);
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000023, (void *)0x800000010012E810);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self alertControllerWithTitle:v7 message:v8 preferredStyle:1];

  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000020, (void *)0x800000010012E840);
  id v10 = (void *)swift_allocObject();
  _DWORD v10[2] = a1;
  _OWORD v10[3] = a2;
  v10[4] = v9;
  swift_retain();
  id v11 = v9;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = sub_100095900;
  id v28 = v10;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  id v25 = sub_100046950;
  uint64_t v26 = &unk_1001511E8;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_release();
  id v14 = self;
  id v15 = [v14 actionWithTitle:v12 style:2 handler:v13];
  _Block_release(v13);

  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000024, (void *)0x800000010012E870);
  id v16 = (void *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = v11;
  id v17 = v11;
  sub_10003AF68(a3);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = sub_100095514;
  id v28 = v16;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  id v25 = sub_100046950;
  uint64_t v26 = &unk_100151238;
  uint64_t v19 = _Block_copy(&aBlock);
  swift_release();
  id v20 = [v14 actionWithTitle:v18 style:1 handler:v19];
  _Block_release(v19);

  [v17 addAction:v15];
  [v17 addAction:v20];

  return v17;
}

uint64_t sub_1000958C0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_100095900(uint64_t a1)
{
  return sub_100095908(a1, 14);
}

id sub_100095908(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(v2 + 16))(*(void *)(v2 + 32));
  uint64_t v4 = self;

  return [v4 sendAnalyticsWithEvent:a2];
}

uint64_t sub_100095968()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000959B0()
{
  id v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1(*(void *)(v0 + 32));
  }
  return result;
}

id sub_1000959FC()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = self;
  id v2 = [v1 preferredFontForTextStyle:UIFontTextStyleBody];
  id v3 = [v2 fontDescriptor];
  id v4 = [v3 fontDescriptorWithSymbolicTraits:2];

  if (v4)
  {
    id v5 = [v1 fontWithDescriptor:v4 size:0.0];

    id v2 = v5;
  }
  [v0 setFont:v2];
  [v0 setNumberOfLines:0];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setAdjustsFontForContentSizeCategory:1];

  return v0;
}

void sub_100095B3C()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView);
  id v2 = [v1 layer];
  [v2 setCornerRadius:2.5];

  [v1 setClipsToBounds:1];
  id v3 = [v1 layer];
  id v4 = [v3 sublayers];

  if (!v4) {
    goto LABEL_10;
  }
  sub_10003C374(0, &qword_100184A00);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62) {
    goto LABEL_23;
  }
  unint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v6 <= 1)
  {
    swift_bridgeObjectRelease();
    while (1)
    {
LABEL_10:
      id v9 = [v1 subviews];
      sub_10003C374(0, (unint64_t *)&qword_1001858F0);
      unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (!(v5 >> 62))
      {
        unint64_t v10 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_12;
      }
      swift_bridgeObjectRetain();
      unint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if ((v10 & 0x8000000000000000) != 0) {
        break;
      }
LABEL_12:
      if (v10 <= 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      if ((v5 & 0xC000000000000001) != 0) {
        goto LABEL_25;
      }
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
      {
        id v11 = *(id *)(v5 + 40);
        goto LABEL_16;
      }
      __break(1u);
LABEL_27:
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
      NSString v8 = v7;
      swift_bridgeObjectRelease();
      [v8 setCornerRadius:2.5];
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v6 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_25:
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_16:
      NSString v12 = v11;
      swift_bridgeObjectRelease();
      [v12 setClipsToBounds:1];

LABEL_18:
      [*(id *)(v0 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel) setTranslatesAutoresizingMaskIntoConstraints:0];
      [*(id *)(v0 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel) setTranslatesAutoresizingMaskIntoConstraints:0];
      [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
      return;
    }
  }
  if ((v5 & 0xC000000000000001) != 0) {
    goto LABEL_27;
  }
  if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    id v7 = *(id *)(v5 + 40);
    goto LABEL_8;
  }
  __break(1u);
}

id sub_100095E04()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel]];
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView]];
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel];

  return [v0 addSubview:v1];
}

void sub_100095E78()
{
  uint64_t v1 = v0;
  id v35 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100125550;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView];
  id v4 = [v3 centerYAnchor];
  id v5 = [v1 centerYAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  *(void *)(v2 + 32) = v6;
  id v7 = [v3 leadingAnchor];
  id v8 = [v1 leadingAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v2 + 40) = v9;
  id v10 = [v3 trailingAnchor];
  id v11 = [v1 trailingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v2 + 48) = v12;
  id v13 = [v3 heightAnchor];
  id v14 = [v13 constraintEqualToConstant:5.0];

  *(void *)(v2 + 56) = v14;
  uint64_t v15 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel;
  id v16 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel] leadingAnchor];
  id v17 = [v3 leadingAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v2 + 64) = v18;
  id v19 = [*(id *)&v1[v15] trailingAnchor];
  id v20 = [v3 trailingAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v2 + 72) = v21;
  id v22 = [*(id *)&v1[v15] bottomAnchor];
  id v23 = [v3 topAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23 constant:-8.0];

  *(void *)(v2 + 80) = v24;
  uint64_t v25 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel;
  id v26 = [*(id *)&v1[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel] topAnchor];
  id v27 = [v3 bottomAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27 constant:8.0];

  *(void *)(v2 + 88) = v28;
  id v29 = [*(id *)&v1[v25] leadingAnchor];
  id v30 = [v3 leadingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v2 + 96) = v31;
  id v32 = [*(id *)&v1[v25] trailingAnchor];
  id v33 = [v3 trailingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v2 + 104) = v34;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v35 activateConstraints:isa];
}

id sub_100096314(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_textSpacing] = 0x4020000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressViewHeight] = 0x4014000000000000;
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView;
  id v10 = objc_allocWithZone((Class)UIProgressView);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(_DWORD *)&v11[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progress] = 0;
  uint64_t v12 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel;
  *(void *)&v11[v12] = sub_1000959FC();
  id v13 = &v11[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleText];
  *(void *)id v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v14 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel;
  id v15 = [objc_allocWithZone((Class)UILabel) init];
  id v16 = [self preferredFontForTextStyle:UIFontTextStyleCaption1];
  [v15 setFont:v16];

  [v15 setNumberOfLines:0];
  [v15 setTextAlignment:1];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v15 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v11[v14] = v15;
  id v17 = &v11[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleText];
  *(void *)id v17 = 0;
  *((void *)v17 + 1) = 0;

  v19.receiver = v11;
  v19.Class super_class = (Class)type metadata accessor for SelfServiceProgressView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_100096504(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_textSpacing] = 0x4020000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressViewHeight] = 0x4014000000000000;
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView;
  id v4 = objc_allocWithZone((Class)UIProgressView);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(_DWORD *)&v5[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progress] = 0;
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel;
  *(void *)&v5[v6] = sub_1000959FC();
  id v7 = &v5[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleText];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel;
  id v9 = [objc_allocWithZone((Class)UILabel) init];
  id v10 = [self preferredFontForTextStyle:UIFontTextStyleCaption1];
  [v9 setFont:v10];

  [v9 setNumberOfLines:0];
  [v9 setTextAlignment:1];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v9 setAdjustsFontForContentSizeCategory:1];
  *(void *)&v5[v8] = v9;
  id v11 = &v5[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleText];
  *(void *)id v11 = 0;
  *((void *)v11 + 1) = 0;

  v14.receiver = v5;
  v14.Class super_class = (Class)type metadata accessor for SelfServiceProgressView();
  [super initWithCoder:a1];

  return v12;
}

uint64_t sub_1000966DC()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100096754()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SelfServiceProgressView();
  return [super dealloc];
}

uint64_t type metadata accessor for SelfServiceProgressView()
{
  return self;
}

void destroy for SelfServiceSuiteResultsView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  objc_super v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for SelfServiceSuiteResultsView(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  id v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void **)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  id v7 = v4;
  swift_bridgeObjectRetain();
  id v8 = v6;
  return a1;
}

void *assignWithCopy for SelfServiceSuiteResultsView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  id v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7 = (void *)a2[7];
  id v8 = (void *)a1[7];
  a1[7] = v7;
  id v9 = v7;

  return a1;
}

__n128 initializeWithTake for SelfServiceSuiteResultsView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SelfServiceSuiteResultsView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for SelfServiceSuiteResultsView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelfServiceSuiteResultsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelfServiceSuiteResultsView()
{
  return &type metadata for SelfServiceSuiteResultsView;
}

uint64_t sub_100096A7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100096A98@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  id v32 = a1;
  uint64_t v3 = sub_10003AFD0(&qword_100184AB0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RoundedRectangle();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  id v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v31 = static VerticalAlignment.center.getter();
  sub_100096D28(v1, (uint64_t)v33);
  v34[392] = 0;
  memcpy(&v34[7], v33, 0x181uLL);
  char v11 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v35 = 0;
  id v20 = [self secondarySystemBackgroundColor];
  uint64_t v21 = Color.init(_:)();
  char v22 = static Edge.Set.all.getter();
  v36[0] = v31;
  v36[1] = 0;
  LOBYTE(v36[2]) = 0;
  memcpy((char *)&v36[2] + 1, v34, 0x188uLL);
  LOBYTE(v36[52]) = v11;
  v36[53] = v13;
  v36[54] = v15;
  v36[55] = v17;
  v36[56] = v19;
  LOBYTE(v36[57]) = v35;
  v36[58] = v21;
  LOBYTE(v36[59]) = v22;
  uint64_t v23 = *(void *)(v2 + 16);
  id v24 = (char *)v10 + *(int *)(v8 + 28);
  uint64_t v25 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v26 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v24, v25, v26);
  void *v10 = v23;
  v10[1] = v23;
  sub_1000987B4((uint64_t)v10, (uint64_t)v6);
  *(_WORD *)&v6[*(int *)(v4 + 44)] = 256;
  uint64_t v27 = sub_10003AFD0(&qword_100184AB8);
  id v28 = v32;
  sub_100078BD8((uint64_t)v6, (uint64_t)v32 + *(int *)(v27 + 36), &qword_100184AB0);
  memcpy(v28, v36, 0x1D9uLL);
  sub_100098818((uint64_t)v36);
  sub_10003C44C((uint64_t)v6, &qword_100184AB0);
  sub_100098974((uint64_t)v10);
  return sub_1000989D0((uint64_t)v36);
}

uint64_t sub_100096D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v84 = *(id *)(a1 + 48);
  id v3 = [v84 assetLocator];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v6;
  uint64_t v103 = v7;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v98 = v169;
  uint64_t v99 = v171;
  uint64_t v101 = v174;
  uint64_t v102 = v173;
  char v100 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  char v188 = 0;
  char v186 = v170;
  char v184 = v172;
  char v181 = 0;
  id v16 = [v84 name];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  *(void *)id v126 = v17;
  *(void *)&v126[8] = v19;
  sub_100061B00();
  uint64_t v20 = Text.init<A>(_:)();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  static Font.title3.getter();
  uint64_t v25 = Text.font(_:)();
  uint64_t v27 = v26;
  char v29 = v28;
  swift_release();
  sub_1000824C0(v20, v22, v24);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v30 = Text.fontWeight(_:)();
  uint64_t v95 = v31;
  uint64_t v96 = v30;
  char v82 = v32;
  uint64_t v97 = v33;
  sub_1000824C0(v25, v27, v29 & 1);
  swift_bridgeObjectRelease();
  id v34 = [v84 status];
  sub_100090CB8(v34, (uint64_t)v126);

  uint64_t v35 = *(void *)v126;
  uint64_t v93 = *(void *)&v126[16];
  uint64_t v94 = *(void *)&v126[8];
  uint64_t v92 = *(void *)&v126[24];
  __int16 v91 = *(_WORD *)&v126[32];
  LOBYTE(v22) = v126[34];
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  LOBYTE(v34) = v176;
  uint64_t v86 = v175;
  uint64_t v87 = v177;
  LOBYTE(v19) = v178;
  uint64_t v89 = v180;
  uint64_t v90 = v179;
  char v88 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  char v197 = v22;
  char v194 = (char)v34;
  char v192 = v19;
  char v189 = 0;
  id v44 = [v84 sections];
  sub_10003C374(0, &qword_1001844A0);
  unint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v46)
  {
    id v85 = (id)Image.init(systemName:)();
    id v47 = [self systemGrayColor];
    uint64_t v83 = Color.init(uiColor:)();
    unsigned __int8 v48 = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v50 = v49;
    uint64_t v52 = v51;
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    uint64_t v46 = v48;
    uint64_t v57 = 1;
  }
  else
  {
    uint64_t v83 = 0;
    id v85 = 0;
    uint64_t v57 = 0;
    uint64_t v50 = 0;
    uint64_t v52 = 0;
    uint64_t v54 = 0;
    uint64_t v56 = 0;
  }
  char v81 = v188;
  LODWORD(v107) = *(_DWORD *)v187;
  *(_DWORD *)((char *)&v107 + 3) = *(_DWORD *)&v187[3];
  LODWORD(v106) = *(_DWORD *)v185;
  *(_DWORD *)((char *)&v106 + 3) = *(_DWORD *)&v185[3];
  char v78 = v186;
  char v79 = v184;
  LODWORD(v105) = *(_DWORD *)v183;
  *(_DWORD *)((char *)&v105 + 3) = *(_DWORD *)&v183[3];
  *(_DWORD *)((char *)&v104 + 3) = *(_DWORD *)&v182[3];
  LODWORD(v104) = *(_DWORD *)v182;
  char v80 = v181;
  char v74 = v197;
  char v75 = v194;
  char v76 = v192;
  char v77 = v189;
  *(void *)&long long v108 = sub_100098B64;
  *((void *)&v108 + 1) = v103;
  LOBYTE(v109) = v188;
  DWORD1(v109) = *(_DWORD *)&v187[3];
  *(_DWORD *)((char *)&v109 + 1) = *(_DWORD *)v187;
  *((void *)&v109 + 1) = sub_10004F348;
  *(void *)&long long v110 = 0;
  *((void *)&v110 + 1) = v98;
  LOBYTE(v111) = v186;
  DWORD1(v111) = *(_DWORD *)&v185[3];
  *(_DWORD *)((char *)&v111 + 1) = *(_DWORD *)v185;
  *((void *)&v111 + 1) = v99;
  LOBYTE(v112) = v184;
  DWORD1(v112) = *(_DWORD *)&v183[3];
  *(_DWORD *)((char *)&v112 + 1) = *(_DWORD *)v183;
  *((void *)&v112 + 1) = v102;
  *(void *)&long long v113 = v101;
  BYTE8(v113) = v100;
  HIDWORD(v113) = *(_DWORD *)&v182[3];
  *(_DWORD *)((char *)&v113 + 9) = *(_DWORD *)v182;
  *(void *)&long long v114 = v9;
  *((void *)&v114 + 1) = v11;
  *(void *)&long long v115 = v13;
  *((void *)&v115 + 1) = v15;
  char v116 = v181;
  *(void *)&long long v117 = v35;
  *((void *)&v117 + 1) = v94;
  *(void *)&long long v118 = v93;
  *((void *)&v118 + 1) = v92;
  LOWORD(v119) = v91;
  BYTE2(v119) = v197;
  BYTE7(v119) = v196;
  *(_DWORD *)((char *)&v119 + 3) = v195;
  *((void *)&v119 + 1) = v86;
  LOBYTE(v120) = v194;
  DWORD1(v120) = *(_DWORD *)&v193[3];
  *(_DWORD *)((char *)&v120 + 1) = *(_DWORD *)v193;
  *((void *)&v120 + 1) = v87;
  LOBYTE(v121) = v192;
  DWORD1(v121) = *(_DWORD *)&v191[3];
  *(_DWORD *)((char *)&v121 + 1) = *(_DWORD *)v191;
  *((void *)&v121 + 1) = v90;
  *(void *)&long long v122 = v89;
  BYTE8(v122) = v88;
  HIDWORD(v122) = *(_DWORD *)&v190[3];
  *(_DWORD *)((char *)&v122 + 9) = *(_DWORD *)v190;
  *(void *)&long long v123 = v37;
  *((void *)&v123 + 1) = v39;
  *(void *)&long long v124 = v41;
  *((void *)&v124 + 1) = v43;
  char v125 = v189;
  long long v58 = v124;
  *(_OWORD *)&v126[103] = v123;
  long long v59 = v121;
  *(_OWORD *)&v126[87] = v122;
  long long v60 = v120;
  *(_OWORD *)&v126[39] = v119;
  long long v61 = v117;
  *(_OWORD *)&v126[23] = v118;
  long long v62 = v114;
  long long v63 = v115;
  *(unsigned char *)(a2 + 128) = v181;
  char v128 = v82 & 1;
  char v127 = 1;
  *(_OWORD *)&v126[119] = v58;
  v126[135] = v125;
  *(_OWORD *)&v126[55] = v60;
  *(_OWORD *)&v126[71] = v59;
  *(_OWORD *)&v126[7] = v61;
  *(unsigned char *)(a2 + 152) = v82 & 1;
  *(unsigned char *)(a2 + 176) = 1;
  *(void *)(a2 + 305) = *(void *)&v126[128];
  long long v64 = *(_OWORD *)&v126[96];
  long long v65 = *(_OWORD *)&v126[112];
  long long v66 = *(_OWORD *)&v126[64];
  *(_OWORD *)(a2 + 257) = *(_OWORD *)&v126[80];
  *(_OWORD *)(a2 + 273) = v64;
  *(_OWORD *)(a2 + 289) = v65;
  long long v67 = v111;
  *(_OWORD *)(a2 + 32) = v110;
  *(_OWORD *)(a2 + 48) = v67;
  long long v68 = v109;
  *(_OWORD *)a2 = v108;
  *(_OWORD *)(a2 + 16) = v68;
  long long v69 = v112;
  long long v70 = v113;
  *(_OWORD *)(a2 + 96) = v62;
  *(_OWORD *)(a2 + 112) = v63;
  *(_OWORD *)(a2 + 64) = v69;
  *(_OWORD *)(a2 + 80) = v70;
  *(void *)(a2 + 136) = v96;
  *(void *)(a2 + 144) = v95;
  *(void *)(a2 + 160) = v97;
  *(void *)(a2 + 168) = 0;
  long long v71 = *(_OWORD *)v126;
  *(_OWORD *)(a2 + 193) = *(_OWORD *)&v126[16];
  long long v72 = *(_OWORD *)&v126[48];
  *(_OWORD *)(a2 + 209) = *(_OWORD *)&v126[32];
  *(_OWORD *)(a2 + 225) = v72;
  *(_OWORD *)(a2 + 241) = v66;
  *(_OWORD *)(a2 + 177) = v71;
  *(void *)(a2 + 320) = v85;
  *(void *)(a2 + 328) = v57;
  *(void *)(a2 + 336) = v83;
  *(void *)(a2 + 344) = v46;
  *(void *)(a2 + 352) = v50;
  *(void *)(a2 + 360) = v52;
  *(void *)(a2 + 368) = v54;
  *(void *)(a2 + 376) = v56;
  *(unsigned char *)(a2 + 384) = 0;
  sub_100098B6C((uint64_t)&v108);
  sub_100082358(v96, v95, v82 & 1);
  swift_bridgeObjectRetain();
  sub_100098BAC((uint64_t)&v117, (void (*)(void, void, void, void, void, void))sub_1000823C4);
  sub_100098934((uint64_t)v85);
  sub_100098AEC((uint64_t)v85);
  v129[0] = v35;
  v129[1] = v94;
  v129[2] = v93;
  v129[3] = v92;
  __int16 v130 = v91;
  char v131 = v74;
  int v132 = v195;
  char v133 = v196;
  uint64_t v134 = v86;
  char v135 = v75;
  *(_DWORD *)id v136 = *(_DWORD *)v193;
  *(_DWORD *)&v136[3] = *(_DWORD *)&v193[3];
  uint64_t v137 = v87;
  char v138 = v76;
  *(_DWORD *)&v139[3] = *(_DWORD *)&v191[3];
  *(_DWORD *)id v139 = *(_DWORD *)v191;
  uint64_t v140 = v90;
  uint64_t v141 = v89;
  char v142 = v88;
  *(_DWORD *)&v143[3] = *(_DWORD *)&v190[3];
  *(_DWORD *)id v143 = *(_DWORD *)v190;
  uint64_t v144 = v37;
  uint64_t v145 = v39;
  uint64_t v146 = v41;
  uint64_t v147 = v43;
  char v148 = v77;
  sub_100098BAC((uint64_t)v129, (void (*)(void, void, void, void, void, void))sub_10008242C);
  sub_1000824C0(v96, v95, v82 & 1);
  swift_bridgeObjectRelease();
  v149[0] = sub_100098B64;
  v149[1] = v103;
  char v150 = v81;
  *(_DWORD *)v151 = v107;
  *(_DWORD *)&v151[3] = *(_DWORD *)((char *)&v107 + 3);
  uint64_t v152 = sub_10004F348;
  uint64_t v153 = 0;
  uint64_t v154 = v98;
  char v155 = v78;
  *(_DWORD *)uint64_t v156 = v106;
  *(_DWORD *)&v156[3] = *(_DWORD *)((char *)&v106 + 3);
  uint64_t v157 = v99;
  char v158 = v79;
  *(_DWORD *)&v159[3] = *(_DWORD *)((char *)&v105 + 3);
  *(_DWORD *)v159 = v105;
  uint64_t v160 = v102;
  uint64_t v161 = v101;
  char v162 = v100;
  *(_DWORD *)&v163[3] = *(_DWORD *)((char *)&v104 + 3);
  *(_DWORD *)v163 = v104;
  uint64_t v164 = v9;
  uint64_t v165 = v11;
  uint64_t v166 = v13;
  uint64_t v167 = v15;
  char v168 = v80;
  return sub_100098BF0((uint64_t)v149);
}

uint64_t sub_1000976B8@<X0>(void *a1@<X8>)
{
  return sub_100096A98(a1);
}

uint64_t sub_1000976FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v55 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v65 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003AFD0(&qword_100184A20);
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  __chkstk_darwin(v6);
  long long v64 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_10003AFD0(&qword_100184A28);
  uint64_t v61 = *(void *)(v63 - 8);
  uint64_t v8 = __chkstk_darwin(v63);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v52 - v11;
  uint64_t v13 = sub_10003AFD0(&qword_100184A30);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v60 = (uint64_t)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v52 - v16;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v62 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  uint64_t v19 = static Font.title2.getter();
  int v59 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  int v58 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  id v36 = [*(id *)(a1 + 56) components];
  sub_10003C374(0, &qword_100183180);
  unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v37 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v39 = swift_bridgeObjectRelease();
  if (v38)
  {
    uint64_t v53 = v19;
    uint64_t v54 = v4;
    __chkstk_darwin(v39);
    *(&v52 - 2) = a1;
    static Axis.Set.vertical.getter();
    sub_10003AFD0(&qword_100184A38);
    sub_10004F7B0(&qword_100184A40, &qword_100184A38);
    ScrollView.init(_:showsIndicators:content:)();
    static ScrollIndicatorVisibility.never.getter();
    unsigned __int8 v40 = static Axis.Set.vertical.getter();
    unsigned __int8 v41 = static Axis.Set.horizontal.getter();
    Axis.Set.init(rawValue:)();
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v40) {
      Axis.Set.init(rawValue:)();
    }
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v41) {
      Axis.Set.init(rawValue:)();
    }
    uint64_t v19 = v53;
    uint64_t v42 = v55;
    sub_10004F7B0(&qword_100184A48, &qword_100184A20);
    uint64_t v43 = v64;
    id v44 = v65;
    uint64_t v45 = v57;
    View.scrollIndicators(_:axes:)();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v54);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v43, v45);
    uint64_t v46 = v61;
    id v47 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
    uint64_t v48 = v63;
    v47(v12, v10, v63);
    v47(v17, v12, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v17, 0, 1, v48);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56))(v17, 1, 1, v63);
  }
  uint64_t v49 = v60;
  sub_100078BD8((uint64_t)v17, v60, &qword_100184A30);
  *(void *)a2 = v62;
  *(void *)(a2 + 8) = v18;
  *(void *)(a2 + 16) = v19;
  *(unsigned char *)(a2 + 24) = v59;
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v23;
  *(void *)(a2 + 48) = v25;
  *(void *)(a2 + 56) = v27;
  *(unsigned char *)(a2 + 64) = 0;
  *(unsigned char *)(a2 + 72) = v58;
  *(void *)(a2 + 80) = v29;
  *(void *)(a2 + 88) = v31;
  *(void *)(a2 + 96) = v33;
  *(void *)(a2 + 104) = v35;
  *(unsigned char *)(a2 + 112) = 0;
  uint64_t v50 = sub_10003AFD0(&qword_100184A50);
  sub_100078BD8(v49, a2 + *(int *)(v50 + 48), &qword_100184A30);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10003C44C((uint64_t)v17, &qword_100184A30);
  sub_10003C44C(v49, &qword_100184A30);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100097D1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  sub_10003AFD0(&qword_100184A58);
  id v4 = [*(id *)(a1 + 56) components];
  sub_10003C374(0, &qword_100183180);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_getKeyPath();
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v6 = *(_OWORD *)(a1 + 16);
  v5[1] = *(_OWORD *)a1;
  v5[2] = v6;
  long long v7 = *(_OWORD *)(a1 + 48);
  v5[3] = *(_OWORD *)(a1 + 32);
  void v5[4] = v7;
  sub_100098368(a1);
  sub_10003AFD0(&qword_100184A60);
  sub_10003AFD0(&qword_100184A68);
  sub_10004F7B0(&qword_100184A70, &qword_100184A60);
  sub_10003B070(&qword_100184A78);
  sub_1000983AC();
  swift_getOpaqueTypeConformance2();
  return ForEach<>.init(_:id:content:)();
}

void sub_100097ED0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 name];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_100097F28(id *a1, _OWORD *a2)
{
  id v3 = *a1;
  static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  long long v5 = a2[1];
  *(_OWORD *)(v4 + 24) = *a2;
  *(_OWORD *)(v4 + 40) = v5;
  long long v6 = a2[3];
  *(_OWORD *)(v4 + 56) = a2[2];
  *(_OWORD *)(v4 + 72) = v6;
  id v7 = v3;
  sub_100098368((uint64_t)a2);
  sub_10003AFD0(&qword_100184A78);
  sub_1000983AC();
  View.onTapGesture(count:perform:)();
  swift_release();
}

void sub_100098040(void *a1, uint64_t a2)
{
  id v4 = [a1 sections];
  sub_10003C374(0, &qword_1001844A0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v6)
  {
    sub_1000984D8(a2 + 32, (uint64_t)v12);
    sub_1000984D8((uint64_t)v12, (uint64_t)&v13);
    id v7 = v13;
    if (v13)
    {
      uint64_t v11 = a1;
      id v8 = objc_allocWithZone((Class)sub_10003AFD0(&qword_100184A98));
      id v9 = a1;
      uint64_t v10 = (void *)UIHostingController.init(rootView:)();
      [v7 pushViewController:v10 animated:1];
    }
  }
}

uint64_t sub_100098174@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10003AFD0(&qword_100184A08);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = v1[1];
  v20[0] = *v1;
  v20[1] = v6;
  long long v7 = v1[3];
  void v20[2] = v1[2];
  v20[3] = v7;
  *(void *)unint64_t v5 = static HorizontalAlignment.center.getter();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v8 = sub_10003AFD0(&qword_100184A10);
  sub_1000976FC((uint64_t)v20, (uint64_t)&v5[*(int *)(v8 + 44)]);
  char v9 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_100078BD8((uint64_t)v5, a1, &qword_100184A08);
  uint64_t v18 = a1 + *(int *)(sub_10003AFD0(&qword_100184A18) + 36);
  *(unsigned char *)uint64_t v18 = v9;
  *(void *)(v18 + 8) = v11;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v15;
  *(void *)(v18 + 32) = v17;
  *(unsigned char *)(v18 + 40) = 0;
  return sub_10003C44C((uint64_t)v5, &qword_100184A08);
}

uint64_t sub_10009829C@<X0>(uint64_t a1@<X8>)
{
  return sub_100097D1C(*(void *)(v1 + 16), a1);
}

const char *sub_1000982A4()
{
  return "name";
}

void sub_1000982B4(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = String._bridgeToObjectiveC()();
  [v2 setName:v3];
}

uint64_t sub_100098318()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_100098360(id *a1)
{
  sub_100097F28(a1, (_OWORD *)(v1 + 16));
}

uint64_t sub_100098368(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
  id v3 = *(id *)(a1 + 32);
  swift_bridgeObjectRetain();
  id v4 = v2;
  return a1;
}

unint64_t sub_1000983AC()
{
  unint64_t result = qword_100184A80;
  if (!qword_100184A80)
  {
    sub_10003B070(&qword_100184A78);
    sub_100098428();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184A80);
  }
  return result;
}

unint64_t sub_100098428()
{
  unint64_t result = qword_100184A88;
  if (!qword_100184A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184A88);
  }
  return result;
}

uint64_t sub_10009847C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

void sub_1000984CC()
{
  sub_100098040(*(void **)(v0 + 16), v0 + 24);
}

uint64_t sub_1000984D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100184A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void destroy for SelfServiceResultsComponentCellView(uint64_t a1)
{
}

uint64_t initializeWithCopy for SelfServiceResultsComponentCellView(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v4;
  id v5 = v4;
  return a1;
}

void *assignWithCopy for SelfServiceResultsComponentCellView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  long long v3 = (void *)a2[6];
  uint64_t v4 = (void *)a1[6];
  a1[6] = v3;
  id v5 = v3;

  return a1;
}

__n128 initializeWithTake for SelfServiceResultsComponentCellView(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SelfServiceResultsComponentCellView(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  long long v4 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for SelfServiceResultsComponentCellView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SelfServiceResultsComponentCellView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelfServiceResultsComponentCellView()
{
  return &type metadata for SelfServiceResultsComponentCellView;
}

unint64_t sub_1000986F8()
{
  unint64_t result = qword_100184AA0;
  if (!qword_100184AA0)
  {
    sub_10003B070(&qword_100184A18);
    sub_10004F7B0(&qword_100184AA8, &qword_100184A08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184AA0);
  }
  return result;
}

uint64_t sub_100098798()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000987B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100098818(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 160);
  uint64_t v3 = *(void *)(a1 + 168);
  char v4 = *(unsigned char *)(a1 + 176);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v9 = *(void *)(a1 + 216);
  uint64_t v10 = *(void *)(a1 + 208);
  uint64_t v6 = *(void *)(a1 + 232);
  char v11 = *(unsigned char *)(a1 + 242);
  uint64_t v12 = *(void *)(a1 + 344);
  uint64_t v7 = *(unsigned __int16 *)(a1 + 240);
  sub_10004F818();
  swift_retain();
  sub_100082358(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_1000823C4(v10, v9, v5, v6, v7, v11);
  sub_100098934(v12);
  swift_retain();
  return a1;
}

uint64_t sub_100098934(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_100098974(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000989D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 160);
  uint64_t v3 = *(void *)(a1 + 168);
  char v4 = *(unsigned char *)(a1 + 176);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v9 = *(void *)(a1 + 216);
  uint64_t v10 = *(void *)(a1 + 208);
  uint64_t v6 = *(void *)(a1 + 232);
  char v11 = *(unsigned char *)(a1 + 242);
  uint64_t v12 = *(void *)(a1 + 344);
  uint64_t v7 = *(unsigned __int16 *)(a1 + 240);
  sub_10004F864();
  swift_release();
  sub_1000824C0(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_10008242C(v10, v9, v5, v6, v7, v11);
  sub_100098AEC(v12);
  swift_release();
  return a1;
}

uint64_t sub_100098AEC(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100098B2C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100098B64()
{
  return sub_10004EEBC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100098B6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100098BAC(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100098BF0(uint64_t a1)
{
  return a1;
}

unint64_t sub_100098C34()
{
  unint64_t result = qword_100184AC0;
  if (!qword_100184AC0)
  {
    sub_10003B070(&qword_100184AB8);
    sub_100098CD4();
    sub_10004F7B0(&qword_100184B08, &qword_100184AB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184AC0);
  }
  return result;
}

unint64_t sub_100098CD4()
{
  unint64_t result = qword_100184AC8;
  if (!qword_100184AC8)
  {
    sub_10003B070(&qword_100184AD0);
    sub_100098D74();
    sub_10004F7B0(&qword_100184AF8, &qword_100184B00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184AC8);
  }
  return result;
}

unint64_t sub_100098D74()
{
  unint64_t result = qword_100184AD8;
  if (!qword_100184AD8)
  {
    sub_10003B070(&qword_100184AE0);
    sub_10004F7B0(&qword_100184AE8, &qword_100184AF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184AD8);
  }
  return result;
}

id sub_100098E18()
{
  return sub_1000787F0();
}

id sub_100098E20()
{
  return sub_1000787F0();
}

uint64_t sub_100098E28()
{
  swift_bridgeObjectRelease();
  sub_10003B0B8(*(void *)(v0 + 40));

  return _swift_deallocClassInstance(v0, 56, 7);
}

uint64_t type metadata accessor for AlertAction()
{
  return self;
}

void *sub_100098E8C(uint64_t a1)
{
  sub_1000647D4(a1, (uint64_t)&v37);
  char v1 = v37;
  if (v43)
  {
    if (v43 != 1)
    {
      if (v43 == 2)
      {
        if (!(v41 | v42 | v37 | v40 | v39 | v38))
        {
          sub_10003AFD0((uint64_t *)&unk_100182E20);
          uint64_t v2 = swift_allocObject();
          *(_OWORD *)(v2 + 16) = xmmword_100123F00;
          type metadata accessor for AlertAction();
          uint64_t v3 = swift_allocObject();
          uint64_t v4 = v3;
          *(void *)(v3 + 16) = 0xD000000000000026;
          *(void *)(v3 + 24) = 0x800000010012E950;
          uint64_t v5 = sub_100098E18;
          goto LABEL_22;
        }
        if (v37 == 1 && !(v41 | v42 | v40 | v39 | v38))
        {
          sub_10003AFD0((uint64_t *)&unk_100182E20);
          uint64_t v2 = swift_allocObject();
          *(_OWORD *)(v2 + 16) = xmmword_100123F00;
          type metadata accessor for AlertAction();
          uint64_t v3 = swift_allocObject();
          uint64_t v4 = v3;
          strcpy((char *)(v3 + 16), "OPEN_SETTINGS");
          *(_WORD *)(v3 + 30) = -4864;
          uint64_t v5 = sub_100098E20;
LABEL_22:
          *(void *)(v3 + 32) = 0;
          *(void *)(v3 + 40) = v5;
          goto LABEL_23;
        }
      }
      sub_10003AFD0((uint64_t *)&unk_100182E20);
      uint64_t v2 = swift_allocObject();
      *(_OWORD *)(v2 + 16) = xmmword_100123F00;
      type metadata accessor for AlertAction();
      uint64_t v3 = swift_allocObject();
      uint64_t v4 = v3;
      *(void *)(v3 + 16) = 19279;
      *(void *)(v3 + 24) = 0xE200000000000000;
      *(void *)(v3 + 32) = 1;
      *(void *)(v3 + 40) = 0;
LABEL_23:
      *(void *)(v3 + 48) = 0;
      sub_10003B0B8(0);
      *(void *)(v2 + 32) = v4;
      id v36 = (void *)v2;
      specialized Array._endMutation()();
      return v36;
    }
    uint64_t v25 = v39;
    uint64_t v26 = v40;
    uint64_t v27 = v41;
    uint64_t v28 = v42;
    id v36 = &_swiftEmptyArrayStorage;
    if (v39)
    {
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v25;
      *(void *)(v29 + 24) = v26;
      type metadata accessor for AlertAction();
      uint64_t v30 = (void *)swift_allocObject();
      v30[2] = 0x545345545F444E45;
      v30[3] = 0xEB00000000474E49;
      v30[4] = 2;
      v30[5] = sub_10003C640;
      v30[6] = v29;
      sub_10003AF68(v25);
      sub_10003AF68(v25);
      sub_10003AF68(v27);
      sub_10003AF68(v25);
      sub_10003B0B8(0);
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      sub_10003B0B8(v25);
      swift_release();
      if (!v27) {
        goto LABEL_28;
      }
    }
    else
    {
      sub_10003AF68(v41);
      if (!v27)
      {
LABEL_28:
        type metadata accessor for AlertAction();
        uint64_t v33 = (void *)swift_allocObject();
        v33[2] = 0x4C45434E4143;
        v33[3] = 0xE600000000000000;
        v33[4] = 1;
        v33[5] = 0;
        v33[6] = 0;
        sub_10003B0B8(0);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        sub_10003B0B8(v25);
        sub_10003B0B8(v27);
        return v36;
      }
    }
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v27;
    *(void *)(v31 + 24) = v28;
    type metadata accessor for AlertAction();
    uint64_t v32 = (void *)swift_allocObject();
    v32[2] = 0x59524F54534948;
    v32[3] = 0xE700000000000000;
    v32[4] = 0;
    v32[5] = sub_10003C6F0;
    v32[6] = v31;
    swift_retain_n();
    sub_10003B0B8(0);
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    sub_10003B0B8(v27);
    swift_release();
    goto LABEL_28;
  }
  uint64_t v7 = (void *)v38;
  uint64_t v6 = v39;
  uint64_t v9 = v40;
  uint64_t v8 = v41;
  uint64_t v10 = v42;
  char v11 = self;
  id v12 = v7;
  sub_10003AF68(v6);
  sub_10003AF68(v8);
  id v13 = [v11 currentDevice];
  id v14 = [v13 userInterfaceIdiom];

  BOOL v15 = v14 == (id)1;
  BOOL v16 = v7 == 0;
  if (v15 && v16) {
    unint64_t v17 = 1414092869;
  }
  else {
    unint64_t v17 = 0xD000000000000017;
  }
  if (v15 && v16) {
    unint64_t v18 = 0xE400000000000000;
  }
  else {
    unint64_t v18 = 0x800000010012BDB0;
  }
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v6;
  *(void *)(v19 + 24) = v9;
  *(unsigned char *)(v19 + 32) = v1;
  type metadata accessor for AlertAction();
  uint64_t v20 = (void *)swift_allocObject();
  void v20[2] = v17;
  v20[3] = v18;
  _OWORD v20[4] = 2;
  v20[5] = sub_1000995AC;
  v20[6] = v19;
  sub_10003AF68(v6);
  sub_10003B0B8(0);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v8;
  *(void *)(v21 + 24) = v10;
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = 0x4C45434E4143;
  v22[3] = 0xE600000000000000;
  v22[4] = 1;
  v22[5] = sub_100099648;
  v22[6] = v21;
  sub_10003AF68(v8);
  sub_10003B0B8(0);
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_100123D80;
  *(void *)(v23 + 32) = v20;
  *(void *)(v23 + 40) = v22;
  uint64_t v35 = v23;
  specialized Array._endMutation()();
  uint64_t v24 = v35;
  swift_retain();
  swift_retain();

  sub_10003B0B8(v6);
  sub_10003B0B8(v8);
  swift_release();
  swift_release();
  return (void *)v24;
}

uint64_t sub_10009956C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000995A4()
{
  return sub_1000995FC(33);
}

void sub_1000995AC()
{
  char v1 = *(void (**)(void))(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  if (v1) {
    v1();
  }

  sub_1000A795C(v2);
}

uint64_t sub_1000995F4()
{
  return sub_1000995FC(32);
}

uint64_t sub_1000995FC(uint64_t a1)
{
  if (*(void *)(v1 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100099648()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

id sub_10009967C(void *a1, uint64_t a2)
{
  return [a1 setImage:a2];
}

void sub_10009968C()
{
  sub_1000999D0();
  uint64_t v0 = (void *)static OS_os_log.disabled.getter();
  if (qword_1001827D0 != -1) {
    swift_once();
  }
  if (byte_100184C10 == 1)
  {
    uint64_t v1 = OS_os_log.init(subsystem:category:)();

    uint64_t v0 = (void *)v1;
  }
  qword_10018A3D8 = (uint64_t)v0;
}

void sub_100099738()
{
  sub_1000999D0();
  uint64_t v0 = (void *)static OS_os_log.disabled.getter();
  if (qword_1001827D0 != -1) {
    swift_once();
  }
  if (byte_100184C10 == 1)
  {
    uint64_t v1 = OS_os_log.init(subsystem:category:)();

    uint64_t v0 = (void *)v1;
  }
  qword_10018A3E0 = (uint64_t)v0;
}

void sub_1000997F4()
{
  sub_1000999D0();
  uint64_t v0 = (void *)static OS_os_log.disabled.getter();
  if (qword_1001827D0 != -1) {
    swift_once();
  }
  if (byte_100184C10 == 1)
  {
    uint64_t v1 = OS_os_log.init(subsystem:category:)();

    uint64_t v0 = (void *)v1;
  }
  qword_10018A3E8 = (uint64_t)v0;
}

uint64_t sub_10009989C()
{
  uint64_t result = sub_1000998C0();
  byte_100184C10 = result & 1;
  return result;
}

uint64_t sub_1000998C0()
{
  unsigned int has_internal_content = os_variant_has_internal_content();
  uint64_t v1 = (__CFString *)String._bridgeToObjectiveC()();
  char v2 = (__CFString *)String._bridgeToObjectiveC()();
  Boolean keyExistsAndHasValidFormat = 0;
  CFPreferencesAppSynchronize(v1);
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v2, v1, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat) {
    return AppBooleanValue != 0;
  }
  else {
    return has_internal_content;
  }
}

uint64_t sub_10009999C()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for Logging()
{
  return self;
}

unint64_t sub_1000999D0()
{
  unint64_t result = qword_1001832C0;
  if (!qword_1001832C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001832C0);
  }
  return result;
}

id sub_100099B18()
{
  v0[OBJC_IVAR____TtC11Diagnostics23NoSessionViewController__showingDeviceInformation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics23NoSessionViewController__infoButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics23NoSessionViewController__deviceInformationView] = 0;
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000013, (void *)0x800000010012EAE0);
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000017, (void *)0x800000010012EB00);
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self imageNamed:v3];

  v7.receiver = v0;
  v7.Class super_class = (Class)type metadata accessor for NoSessionViewController();
  id v5 = [super initWithTitle:v1 detailText:v2 icon:v4 contentLayout:2];

  return v5;
}

void sub_100099C80()
{
  NSString v1 = v0;
  v6.receiver = v0;
  v6.Class super_class = (Class)type metadata accessor for NoSessionViewController();
  [super viewDidLoad];
  [v0 setModalPresentationStyle:2];
  id v2 = [self boldButton];
  sub_100045FCC(0, 0, (uint64_t)_swiftEmptyArrayStorage, 0xD000000000000017, (void *)0x800000010012BDB0);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setTitle:v3 forState:0];

  sub_10003C374(0, (unint64_t *)&qword_1001831A8);
  id v4 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v2 addAction:v4 forControlEvents:64];

  id v5 = [v1 buttonTray];
  [v5 addButton:v2];

  if ([self isCheckerBoardActive]) {
    [v1 setupInfoButton];
  }
}

void sub_100099E38()
{
  unsigned int v0 = [self currentPlatform].isCheckerBoardActive;
  swift_unknownObjectRelease();
  if (v0)
  {
    sub_100070524(1);
  }
  else
  {
    sub_1000A795C(9);
  }
}

void sub_100099F28()
{
}

void sub_100099F34()
{
  v27.receiver = v0;
  v27.Class super_class = (Class)type metadata accessor for NoSessionViewController();
  [super viewDidLayoutSubviews];
  id v1 = [v0 infoButton];

  if (v1)
  {
    id v2 = [v0 view];
    if (v2)
    {
      NSString v3 = v2;
      id v4 = [v0 infoButton];
      if (v4)
      {
        id v5 = v4;
        [v3 bringSubviewToFront:v4];

        id v6 = [v0 view];
        if (v6)
        {
          objc_super v7 = v6;
          if (UIApp)
          {
            id v8 = [UIApp userInterfaceLayoutDirection];
            id v9 = [v0 infoButton];
            if (v9)
            {
              uint64_t v10 = v9;
              if (v8 == (id)1) {
                uint64_t v11 = 4;
              }
              else {
                uint64_t v11 = 8;
              }
              [v9 bounds];
              double v13 = v12;
              double v15 = v14;

              [v7 _rectTuckedInBoundingPathCorner:v11 withSize:v13 cornerRadii:v15 minimumPadding:0.0, 0.0, 0.0, 0.0];
              CGFloat v17 = v16;
              CGFloat v19 = v18;
              CGFloat v21 = v20;
              CGFloat v23 = v22;

              id v24 = [v0 infoButton];
              if (v24)
              {
                uint64_t v25 = v24;
                v28.origin.x = v17;
                v28.origin.y = v19;
                v28.size.width = v21;
                v28.size.height = v23;
                double MidX = CGRectGetMidX(v28);
                v29.origin.x = v17;
                v29.origin.y = v19;
                v29.size.width = v21;
                v29.size.height = v23;
                [v25 setCenter:MidX, CGRectGetMidY(v29)];

                return;
              }
LABEL_18:
              __break(1u);
              return;
            }
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
}

id sub_10009A200()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for NoSessionViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for NoSessionViewController()
{
  return self;
}

uint64_t sub_10009A6AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009A6BC()
{
  return swift_release();
}

uint64_t sub_10009A6C4(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  double v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000711E0();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.default(_:), v9);
  double v13 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v17;
  *(void *)(v14 + 24) = a2;
  aBlock[4] = sub_10009B038;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_100151548;
  double v15 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  double v20 = &_swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  return swift_release();
}

void sub_10009AA08(void (*a1)(uint64_t), uint64_t a2)
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  id v5 = self;
  swift_retain_n();
  if ([v5 isSSRBootIntentSet])
  {
    byte_100184CF8 = 2;
    a1(2);
    swift_release();
    swift_release();
  }
  else
  {
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    id v6 = [objc_allocWithZone((Class)DADiagnosticsSessionAvailability) init];
    if (qword_10018A3F8)
    {
      swift_bridgeObjectRetain();
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v7 = 0;
    }
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_10009B040;
    *(void *)(v8 + 24) = v4;
    v10[4] = sub_10009B048;
    void v10[5] = v8;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    _DWORD v10[2] = sub_1000B2448;
    _OWORD v10[3] = &unk_1001515C0;
    uint64_t v9 = _Block_copy(v10);
    swift_retain();
    swift_release();
    [v6 checkAvailabilityWithTicketNumber:v7 timeout:0 exitWhenDone:v9 completion:30.0];
    _Block_release(v9);
    swift_release();
    swift_release();
  }
}

uint64_t sub_10009ACB0(char a1, uint64_t (*a2)(void), uint64_t a3)
{
  if ((a1 - 1) > 1u)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a2;
    *(void *)(v6 + 24) = a3;
    swift_retain();
    sub_10009AD60((uint64_t)sub_10009B08C, v6);
    return swift_release();
  }
  else
  {
    byte_100184CF8 = a1;
    return a2();
  }
}

void sub_10009AD60(uint64_t a1, uint64_t a2)
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  id v4 = [self sharedManager];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  v7[4] = sub_10009AF4C;
  v7[5] = v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  void v7[2] = sub_10009AF9C;
  void v7[3] = &unk_1001514F8;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  [v4 refreshWithCompletion:v6];
  _Block_release(v6);
}

uint64_t sub_10009AED0(char a1, char a2, uint64_t (*a3)(void))
{
  if (a2) {
    char v3 = 1;
  }
  else {
    char v3 = 2;
  }
  if (a1) {
    char v4 = v3;
  }
  else {
    char v4 = 0;
  }
  byte_100184CF8 = v4;
  return a3();
}

uint64_t sub_10009AF14()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009AF4C(void *a1)
{
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 16);
  if ((unint64_t)[a1 status] >= 2) {
    byte_100184CF8 = 3;
  }
  return v2();
}

void sub_10009AF9C(uint64_t a1, void *a2)
{
  char v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_10009B020(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009B030()
{
  return swift_release();
}

void sub_10009B038()
{
  sub_10009AA08(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10009B040(char a1)
{
  return sub_10009ACB0(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10009B048(char a1, char a2)
{
  char v3 = *(uint64_t (**)(void))(v2 + 16);
  if (a2) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (a1) {
    char v5 = v4;
  }
  else {
    char v5 = 0;
  }
  byte_100184CF8 = v5;
  return v3();
}

uint64_t sub_10009B08C(char a1)
{
  uint64_t v2 = *(uint64_t (**)(void))(v1 + 16);
  byte_100184CF8 = a1;
  return v2();
}

id sub_10009B1A8()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for BaseStackView();
  return [super dealloc];
}

uint64_t type metadata accessor for BaseStackView()
{
  return self;
}

void sub_10009B4E4(void *a1, uint64_t a2, char a3)
{
  NSString v7 = (objc_class *)type metadata accessor for CardStackView();
  if (UIFocusEnvironment.contains(_:)())
  {
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    [a1 setClipsToBounds:1];
    [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
    type metadata accessor for CardStackSubviewContainer();
    uint64_t v8 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    v8[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_animated] = a3 & 1;
    uint64_t v9 = *(void **)&v8[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView];
    *(void *)&v8[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView] = a1;
    id v10 = a1;
    sub_1000E77F0(v9);
    sub_1000E7C4C();

    sub_10009C5CC(v8, a2);
    v13.receiver = v3;
    v13.Class super_class = v7;
    [super insertArrangedSubview:v8 atIndex:a2];
    uint64_t v11 = *(void (**)(uint64_t))&v3[OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler];
    if (v11)
    {
      uint64_t v12 = swift_retain();
      v11(v12);
      sub_10003B0B8((uint64_t)v11);
    }
  }
}

void sub_10009B6D0(void *a1, char a2)
{
  char v3 = v2;
  id v5 = [v3 arrangedSubviews];
  unint64_t v51 = sub_10009D14C();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v49 = v3;
  uint64_t v50 = a1;
  if (v6 >> 62)
  {
LABEL_25:
    id v35 = a1;
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_3;
    }
LABEL_26:
    id v36 = v50;

    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v8 = a1;
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_26;
  }
LABEL_3:
  unint64_t v53 = v6 & 0xC000000000000001;
  uint64_t v9 = 4;
  while (1)
  {
    a1 = (void *)(v9 - 4);
    if (v53) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v6 + 8 * v9);
    }
    uint64_t v11 = v10;
    uint64_t v12 = v9 - 3;
    if (__OFADD__(a1, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    type metadata accessor for CardStackSubviewContainer();
    uint64_t v13 = swift_dynamicCastClass();
    if (v13)
    {
      uint64_t v14 = v13;
      double v15 = *(void **)(v13 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
      if (v15)
      {
        id v16 = v50;
        id v17 = v11;
        uint64_t v18 = v7;
        uint64_t v19 = v14;
        unint64_t v20 = v6;
        id v21 = v15;
        char v22 = static NSObject.== infix(_:_:)();

        unint64_t v6 = v20;
        uint64_t v23 = v19;
        uint64_t v7 = v18;

        if (v22) {
          break;
        }
      }
    }

    ++v9;
    if (v12 == v7) {
      goto LABEL_26;
    }
  }
  uint64_t v54 = v17;

  swift_bridgeObjectRelease_n();
  id v24 = [v49 arrangedSubviews];
  unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v26)
    {
LABEL_14:
      id v47 = v16;
      specialized ContiguousArray.reserveCapacity(_:)();
      if (v26 < 0)
      {
        __break(1u);
        return;
      }
      uint64_t v27 = 0;
      unint64_t v28 = v25 & 0xC000000000000001;
      unint64_t v29 = v25;
      do
      {
        if (v28) {
          id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v30 = *(id *)(v25 + 8 * v27 + 32);
        }
        uint64_t v31 = v30;
        id v32 = [objc_allocWithZone((Class)UIView) init];
        uint64_t v33 = swift_dynamicCastClass();
        if (v33)
        {
          uint64_t v34 = *(void **)(v33 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
          if (v34)
          {
            v34;

            uint64_t v31 = v32;
          }
        }

        ++v27;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        unint64_t v25 = v29;
      }
      while (v26 != v27);
      swift_bridgeObjectRelease();
      id v16 = v47;
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
LABEL_34:
  sub_1000F6E04((uint64_t)v16, (unint64_t)_swiftEmptyArrayStorage);
  uint64_t v40 = v39;
  char v42 = v41;
  swift_bridgeObjectRelease();
  if ((v42 & 1) == 0)
  {
    id v52 = [objc_allocWithZone((Class)UIView) init];
    [v52 setClipsToBounds:1];
    [v52 setTranslatesAutoresizingMaskIntoConstraints:0];
    char v43 = (uint64_t (*)())swift_allocObject();
    *((void *)v43 + 2) = v49;
    *((void *)v43 + 3) = v23;
    *((void *)v43 + 4) = v40;
    id v44 = (uint64_t (**)())(v23 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedViewRemovedCompletion);
    uint64_t v45 = *(void *)(v23 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedViewRemovedCompletion);
    char *v44 = sub_10009D31C;
    v44[1] = v43;
    id v46 = v54;
    v49;
    sub_10003B0B8(v45);
    sub_10009BC84(v52, v16, a2 & 1);

    return;
  }

  id v36 = v50;
LABEL_27:
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_100123B50;
  *(void *)(v37 + 56) = v51;
  *(void *)(v37 + 64) = sub_10009D268();
  *(void *)(v37 + 32) = v36;
  id v38 = v36;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
}

uint64_t sub_10009BC1C(uint64_t a1, char *a2, unint64_t a3)
{
  sub_10009CD2C(a2, a3);
  [a2 removeFromSuperview];
  char v4 = &a2[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedViewRemovedCompletion];
  uint64_t v5 = *(void *)&a2[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedViewRemovedCompletion];
  *(void *)char v4 = 0;
  *((void *)v4 + 1) = 0;

  return sub_10003B0B8(v5);
}

void sub_10009BC84(void *a1, void *a2, char a3)
{
  id v6 = [v3 arrangedSubviews];
  unint64_t v68 = sub_10009D14C();
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  long long v65 = v3;
  char v63 = a3;
  long long v67 = a2;
  if (v7 >> 62)
  {
LABEL_25:
    id v32 = a2;
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
LABEL_26:
    uint64_t v33 = v67;

    swift_bridgeObjectRelease_n();
LABEL_27:
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_100123B50;
    *(void *)(v34 + 56) = v68;
    *(void *)(v34 + 64) = sub_10009D268();
    *(void *)(v34 + 32) = v33;
    id v35 = v33;
    os_log(_:dso:log:type:_:)();
    goto LABEL_30;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v9 = a2;
  swift_bridgeObjectRetain();
  if (!v8) {
    goto LABEL_26;
  }
LABEL_3:
  a2 = (void *)(v7 & 0xC000000000000001);
  uint64_t v10 = 4;
  while (1)
  {
    if (a2) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(v7 + 8 * v10);
    }
    uint64_t v12 = v11;
    uint64_t v13 = v10 - 3;
    if (__OFADD__(v10 - 4, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    uint64_t v14 = type metadata accessor for CardStackSubviewContainer();
    uint64_t v15 = swift_dynamicCastClass();
    if (v15)
    {
      uint64_t v69 = OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView;
      id v16 = *(void **)(v15 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
      if (v16)
      {
        long long v66 = (char *)v15;
        id v17 = v67;
        id v70 = v12;
        id v18 = v16;
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          break;
        }
      }
    }

    ++v10;
    if (v13 == v8) {
      goto LABEL_26;
    }
  }

  swift_bridgeObjectRelease_n();
  id v20 = [v65 arrangedSubviews];
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    if (!v23) {
      goto LABEL_34;
    }
  }
  else
  {
    unint64_t v22 = v21;
    uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v23) {
      goto LABEL_34;
    }
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v23 < 0)
  {
    __break(1u);
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v40) {
      goto LABEL_50;
    }
    goto LABEL_37;
  }
  unint64_t v24 = v22;
  uint64_t v25 = 0;
  unint64_t v26 = v22 & 0xC000000000000001;
  do
  {
    if (v26) {
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v27 = *(id *)(v24 + 8 * v25 + 32);
    }
    unint64_t v28 = v27;
    id v29 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v30 = swift_dynamicCastClass();
    if (v30)
    {
      uint64_t v31 = *(void **)(v30 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
      if (v31)
      {
        v31;

        unint64_t v28 = v29;
      }
    }

    ++v25;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    a2 = (void *)_swiftEmptyArrayStorage[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v23 != v25);
LABEL_34:
  swift_bridgeObjectRelease();
  sub_1000F6E04((uint64_t)v17, (unint64_t)_swiftEmptyArrayStorage);
  uint64_t v14 = v36;
  char v38 = v37;
  swift_bridgeObjectRelease();
  if (v38)
  {

    uint64_t v33 = v67;
    goto LABEL_27;
  }
  id v39 = [v65 arrangedSubviews];
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62) {
    goto LABEL_49;
  }
  uint64_t v40 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v40) {
    goto LABEL_50;
  }
LABEL_37:
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v40 < 0)
  {
    __break(1u);
LABEL_70:
    swift_once();
LABEL_52:
    static os_log_type_t.error.getter();
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1001240D0;
    *(void *)(v48 + 56) = v68;
    *(void *)(v48 + 64) = sub_10009D268();
    *(void *)(v48 + 32) = a2;
    id v49 = a2;
    id v50 = [v65 arrangedSubviews];
    unint64_t v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v51 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v52) {
        goto LABEL_54;
      }
    }
    else
    {
      uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v52)
      {
LABEL_54:
        specialized ContiguousArray.reserveCapacity(_:)();
        if (v52 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v53 = 0;
        do
        {
          if ((v51 & 0xC000000000000001) != 0) {
            id v54 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v54 = *(id *)(v51 + 8 * v53 + 32);
          }
          uint64_t v55 = v54;
          id v56 = [objc_allocWithZone((Class)UIView) init];
          uint64_t v57 = swift_dynamicCastClass();
          if (v57)
          {
            int v58 = *(void **)(v57 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
            if (v58)
            {
              v58;

              uint64_t v55 = v56;
            }
          }

          ++v53;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        while (v52 != v53);
      }
    }
    swift_bridgeObjectRelease();
    *(void *)(v48 + 96) = sub_10003AFD0(&qword_100184D70);
    *(void *)(v48 + 104) = sub_10009D2C0();
    *(void *)(v48 + 72) = _swiftEmptyArrayStorage;
    os_log(_:dso:log:type:_:)();

LABEL_30:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v41 = 0;
  do
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v42 = *(id *)(v7 + 8 * v41 + 32);
    }
    char v43 = v42;
    id v44 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v45 = swift_dynamicCastClass();
    if (v45)
    {
      id v46 = *(void **)(v45 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
      if (v46)
      {
        v46;

        char v43 = v44;
      }
    }

    ++v41;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v40 != v41);
LABEL_50:
  swift_bridgeObjectRelease();
  a2 = a1;
  char v47 = sub_1000C4684((uint64_t)a1, (unint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  if (v47)
  {
    if (qword_1001827C8 == -1) {
      goto LABEL_52;
    }
    goto LABEL_70;
  }
  [a1 setClipsToBounds:1];
  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  v66[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_animated] = v63 & 1;
  int v59 = *(void **)&v66[v69];
  *(void *)&v66[v69] = a1;
  id v60 = a1;
  sub_1000E77F0(v59);
  sub_1000E7C4C();

  sub_10009CD2C(v66, v14);
  sub_10009C5CC(v66, v14);
  [v65 layoutIfNeeded];
  uint64_t v61 = *(void (**)(uint64_t))&v65[OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler];
  if (v61)
  {
    uint64_t v62 = swift_retain();
    v61(v62);
    sub_10003B0B8((uint64_t)v61);
  }
}

void sub_10009C5CC(char *a1, uint64_t a2)
{
  char v3 = v2;
  id v6 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView];
  if (!v6
    || (v23[0] = *(void *)&a1[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView],
        sub_10009D14C(),
        id v7 = v6,
        sub_10003AFD0(&qword_100184D68),
        (swift_dynamicCast() & 1) == 0))
  {
    uint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
    goto LABEL_7;
  }
  if (!*((void *)&v21 + 1))
  {
LABEL_7:
    sub_10009D0EC((uint64_t)&v20);
    char v17 = 1;
    goto LABEL_8;
  }
  sub_100084AE8(&v20, (uint64_t)v23);
  uint64_t v8 = v24;
  uint64_t v9 = v25;
  sub_100042AC8(v23, v24);
  char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  id v11 = (void *)swift_allocObject();
  v11[2] = v3;
  if (v10)
  {
    uint64_t v12 = v24;
    uint64_t v13 = v25;
    sub_10009D18C((uint64_t)v23, v24);
    uint64_t v14 = *(void (**)(void *, void *, uint64_t, uint64_t))(v13 + 40);
    id v15 = v3;
    id v16 = sub_10009D260;
  }
  else
  {
    v11[3] = a1;
    void v11[4] = a2;
    uint64_t v12 = v24;
    uint64_t v13 = v25;
    sub_10009D18C((uint64_t)v23, v24);
    uint64_t v14 = *(void (**)(void *, void *, uint64_t, uint64_t))(v13 + 40);
    id v18 = v3;
    char v19 = a1;
    id v16 = sub_10009D21C;
  }
  v14(v16, v11, v12, v13);
  char v17 = v10 ^ 1;
  sub_100042B0C((uint64_t)v23);
LABEL_8:
  sub_10009C898(a1, a2, v17 & 1);
}

uint64_t sub_10009C7B8(uint64_t result)
{
  uint64_t v1 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    return sub_10003B0B8((uint64_t)v1);
  }
  return result;
}

void sub_10009C820(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_10009CAD8(a2, a3);
  char v4 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler);
  if (v4)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    sub_10003B0B8((uint64_t)v4);
  }
}

void sub_10009C898(char *a1, uint64_t a2, char a3)
{
  char v4 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView];
  if (v4)
  {
    id v8 = v4;
    id v9 = [a1 heightAnchor];
    if (a3)
    {
      [v8 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
      id v11 = [v9 constraintEqualToConstant:v10];
    }
    else
    {
      id v12 = [v8 heightAnchor];
      id v11 = [v9 constraintEqualToAnchor:v12];

      id v9 = v12;
    }

    [v11 setActive:1];
    uint64_t v13 = (void *)(v3 + OBJC_IVAR____TtC11Diagnostics13CardStackView_heightConstraints);
    swift_beginAccess();
    if (*v13 >> 62)
    {
      id v16 = v11;
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v17 >= a2)
      {
LABEL_11:
        if ((a2 & 0x8000000000000000) == 0)
        {
          sub_10003A098(a2, a2, (uint64_t)v11);
          swift_endAccess();

          return;
        }
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v15 = v11;
      if (v14 >= a2) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (qword_1001827C8 != -1) {
LABEL_16:
  }
    swift_once();
  static os_log_type_t.error.getter();

  os_log(_:dso:log:type:_:)();
}

void sub_10009CAD8(uint64_t a1, unint64_t a2)
{
  char v4 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView);
  if (v4)
  {
    id v6 = &v2[OBJC_IVAR____TtC11Diagnostics13CardStackView_heightConstraints];
    swift_beginAccess();
    if (*(void *)v6 >> 62)
    {
      id v16 = v4;
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v17 <= (uint64_t)a2) {
        goto LABEL_17;
      }
    }
    else
    {
      int64_t v7 = *(void *)((*(void *)v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v8 = v4;
      if (v7 <= (uint64_t)a2)
      {
LABEL_17:

        return;
      }
    }
    uint64_t v9 = *(void *)v6;
    if ((*(void *)v6 & 0xC000000000000001) == 0)
    {
      if ((a2 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        id v10 = *(id *)(v9 + 8 * a2 + 32);
        goto LABEL_8;
      }
      __break(1u);
      goto LABEL_24;
    }
    swift_bridgeObjectRetain();
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v3 = &selRef_setPriority_;
    [v10 setActive:0];

    uint64_t v11 = *(void *)v6;
    if ((*(void *)v6 & 0xC000000000000001) == 0)
    {
      if ((a2 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        id v12 = *(id *)(v11 + 8 * a2 + 32);
        goto LABEL_12;
      }
      __break(1u);
      goto LABEL_27;
    }
LABEL_24:
    swift_bridgeObjectRetain();
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
LABEL_12:
    [v4 systemLayoutSizeFittingSize:UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height];
    [v12 setConstant:v13];

    uint64_t v14 = *(void *)v6;
    if ((v14 & 0xC000000000000001) == 0)
    {
      if ((a2 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
      {
        id v15 = *(id *)(v14 + 8 * a2 + 32);
LABEL_16:
        [v15 v3[71]:1];

        [v2 layoutIfNeeded];
        goto LABEL_17;
      }
      __break(1u);
      return;
    }
LABEL_27:
    swift_bridgeObjectRetain();
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
}

uint64_t sub_10009CD2C(char *a1, unint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC11Diagnostics13CardStackView_heightConstraints);
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *v5;
  if ((*v5 & 0xC000000000000001) == 0)
  {
    if ((a2 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
    {
      id v8 = *(id *)(v7 + 8 * a2 + 32);
      goto LABEL_5;
    }
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_5:
  [v8 setActive:0];
  [a1 removeConstraint:v8];
  swift_beginAccess();
  uint64_t v9 = (void *)sub_1000F7458(a2);
  swift_endAccess();

  id v10 = *(void **)&a1[OBJC_IVAR____TtC11Diagnostics25CardStackSubviewContainer_containedView];
  if (v10
    && (v17[0] = v10,
        sub_10009D14C(),
        id v11 = v10,
        sub_10003AFD0(&qword_100184D68),
        (swift_dynamicCast() & 1) != 0))
  {
    if (*((void *)&v15 + 1))
    {
      sub_100084AE8(&v14, (uint64_t)v17);
      uint64_t v12 = v18;
      uint64_t v13 = v19;
      sub_10009D18C((uint64_t)v17, v18);
      (*(void (**)(void, void, uint64_t, uint64_t))(v13 + 40))(0, 0, v12, v13);

      return sub_100042B0C((uint64_t)v17);
    }
  }
  else
  {
    uint64_t v16 = 0;
    long long v14 = 0u;
    long long v15 = 0u;
  }

  return sub_10009D0EC((uint64_t)&v14);
}

uint64_t sub_10009D000()
{
  sub_10003B0B8(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics13CardStackView_layoutUpdateHandler));

  return swift_bridgeObjectRelease();
}

id sub_10009D044()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CardStackView();
  return [super dealloc];
}

uint64_t type metadata accessor for CardStackView()
{
  return self;
}

uint64_t sub_10009D0EC(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0(&qword_100184D60);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10009D14C()
{
  unint64_t result = qword_1001858F0;
  if (!qword_1001858F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001858F0);
  }
  return result;
}

uint64_t sub_10009D18C(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10009D1DC()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10009D21C()
{
  sub_10009C820(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10009D228()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009D260()
{
  return sub_10009C7B8(*(void *)(v0 + 16));
}

unint64_t sub_10009D268()
{
  unint64_t result = qword_100184788;
  if (!qword_100184788)
  {
    sub_10009D14C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184788);
  }
  return result;
}

unint64_t sub_10009D2C0()
{
  unint64_t result = qword_100184D78;
  if (!qword_100184D78)
  {
    sub_10003B070(&qword_100184D70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184D78);
  }
  return result;
}

uint64_t sub_10009D31C()
{
  return sub_10009BC1C(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void *)(v0 + 32));
}

id sub_10009D328()
{
  v2.receiver = *(id *)(v0 + 16);
  v2.Class super_class = (Class)type metadata accessor for CardStackView();
  return [super layoutSubviews];
}

uint64_t sub_10009D368(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009D378()
{
  return swift_release();
}

char *sub_10009D388(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_progressViewHorizontalPadding] = 0x4046000000000000;
  uint64_t v5 = OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_progressView;
  type metadata accessor for SelfServiceProgressView();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  *(void *)&v7[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_imageView] = 0;
  id v8 = &v7[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0;
  *(void *)&v7[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteManager] = a1;
  *(void *)&v7[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteID] = a2;
  uint64_t v9 = a1;
  id v10 = a2;

  if (*(void *)&v9[OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint] != 2)
  {
    _StringGuts.grow(_:)(31);
    int DeviceClass = GestaltGetDeviceClass();
    uint64_t v36 = sub_1000AF310(DeviceClass);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    uint64_t v48 = v36;
    unint64_t v49 = v38;
    v39._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v39._object = (void *)0x800000010012EE80;
    String.append(_:)(v39);
    NSString v40 = String._bridgeToObjectiveC()();
    uint64_t v41 = self;
    id v42 = [v41 _systemImageNamed:v40];

    if (v42)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v42 = [v41 imageNamed:v43];
    }
    sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001CLL, (void *)0x800000010012EEA0);
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v47.receiver = v7;
    v47.Class super_class = (Class)type metadata accessor for SelfServiceSuiteInProgressViewController();
    uint64_t v31 = (char *)objc_msgSendSuper2(&v47, "initWithTitle:detailText:icon:contentLayout:", v44, 0, v42, 3);

    return v31;
  }
  uint64_t v45 = v10;
  id v11 = [self systemBlueColor];
  uint64_t v12 = self;
  id v13 = [v12 configurationWithHierarchicalColor:v11];

  id v14 = [v12 configurationWithScale:3];
  id v15 = [v13 configurationByApplyingConfiguration:v14];

  id v16 = v15;
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [self _systemImageNamed:v17 withConfiguration:v16];

  id v19 = [objc_allocWithZone((Class)UIImageView) initWithImage:v18];
  [v19 setContentMode:1];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v48 = 0xD00000000000001FLL;
  unint64_t v49 = 0x800000010012EEE0;
  unint64_t result = (char *)(id)MobileGestalt_get_current_device();
  if (result)
  {
    long long v21 = result;
    int wapiCapability = MobileGestalt_get_wapiCapability();

    if (wapiCapability) {
      uint64_t v23 = 0x4E414C575FLL;
    }
    else {
      uint64_t v23 = 0x494649575FLL;
    }
    unint64_t v24 = 0xE500000000000000;
    String.append(_:)(*(Swift::String *)&v23);
    sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, 0xD00000000000001CLL, (void *)0x800000010012EF00);
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v26 = sub_10004622C(v48);
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    sub_100045FCC(0, 0, (uint64_t)&_swiftEmptyArrayStorage, (uint64_t)v26, v28);
    swift_bridgeObjectRelease();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v46.receiver = v7;
    v46.Class super_class = (Class)type metadata accessor for SelfServiceSuiteInProgressViewController();
    id v30 = [super initWithTitle:v25 detailText:v29 icon:0 contentLayout:3];

    uint64_t v31 = (char *)v30;
    id v32 = [v31 headerView];
    id v33 = [v32 customIconContainerView];

    if (v33)
    {
      [v33 addSubview:v19];

      uint64_t v34 = *(void **)&v31[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_imageView];
      *(void *)&v31[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_imageView] = v19;
    }
    else
    {

      uint64_t v34 = v45;
    }

    return v31;
  }
  __break(1u);
  return result;
}

void sub_10009D9A0()
{
  uint64_t v1 = v0;
  id v2 = [v0 navigationItem];
  [v2 setHidesBackButton:1];

  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteManager];
  uint64_t v4 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint;
  if (*(void *)(v3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_endpoint) == 1)
  {
    id v5 = [v0 navigationItem];
    sub_10003C374(0, &qword_100184678);
    sub_10003C374(0, (unint64_t *)&qword_1001831A8);
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v0;
    uint64_t v7 = v0;
    v46.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v46.is_nil = 0;
    Class isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemCancel, v46, v47).super.super.isa;
    [v5 setLeftBarButtonItem:isa, 0, 0, 0, sub_1000A2040, v6];
  }
  NSString v43 = *(char **)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_progressView];
  [v43 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState;
  id v10 = *(void **)(v3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v10)
  {
    id v11 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteID];
    id v12 = [v10 suitesAvailable];
    sub_10003C374(0, (unint64_t *)&unk_100184320);
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v14 = v11;
    id v15 = sub_1000908F8(v13);
    swift_bridgeObjectRelease();

    if (v15)
    {
      uint64_t v16 = v4;
      id v17 = [v15 suiteNameLocalizedString];
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v20 = v19;

      uint64_t v21 = HIBYTE(v20) & 0xF;
      if ((v20 & 0x2000000000000000) == 0) {
        uint64_t v21 = v18 & 0xFFFFFFFFFFFFLL;
      }
      if (!v21)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v16;
        id v26 = *(void **)(v3 + v9);
        if (!v26) {
          return;
        }
        goto LABEL_11;
      }
      uint64_t v22 = (uint64_t *)&v43[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleText];
      uint64_t *v22 = v18;
      v22[1] = v20;
      swift_bridgeObjectRelease();
      uint64_t v4 = v16;
      if (v22[1])
      {
        uint64_t v23 = *(void **)&v43[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_titleLabel];
        swift_bridgeObjectRetain();
        id v24 = v23;
        NSString v25 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v24 setText:v25];

        uint64_t v4 = v16;
      }
    }
    id v26 = *(void **)(v3 + v9);
    if (!v26) {
      return;
    }
LABEL_11:
    id v27 = [v26 suitesAvailable];
    unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v29 = v14;
    id v30 = sub_1000908F8(v28);
    swift_bridgeObjectRelease();

    if (v30)
    {
      id v31 = [v30 estimatedCompletionTimeLocalizedString];
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v34 = v33;

      if ((v34 & 0x2000000000000000) != 0) {
        uint64_t v35 = HIBYTE(v34) & 0xF;
      }
      else {
        uint64_t v35 = v32 & 0xFFFFFFFFFFFFLL;
      }

      if (v35 && *(void *)(v3 + v4) == 1)
      {
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_100123B50;
        *(void *)(v36 + 56) = &type metadata for String;
        *(void *)(v36 + 64) = sub_10004D9B4();
        *(void *)(v36 + 32) = v32;
        *(void *)(v36 + 40) = v34;
        uint64_t v37 = sub_100045FCC(0, 0, v36, 0xD000000000000023, (void *)0x800000010012F010);
        uint64_t v39 = v38;
        swift_bridgeObjectRelease();
        NSString v40 = (uint64_t *)&v43[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleText];
        uint64_t *v40 = v37;
        v40[1] = v39;
        swift_bridgeObjectRelease();
        if (v40[1])
        {
          uint64_t v41 = *(void **)&v43[OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_subtitleLabel];
          swift_bridgeObjectRetain();
          id v42 = v41;
          id v44 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v42 setText:v44];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
}

void sub_10009DEB8(int a1, char *a2)
{
  id v3 = [a2 navigationItem];
  id v4 = [v3 leftBarButtonItem];

  if (v4)
  {
    [v4 setEnabled:0];
  }
  sub_10007AA1C(*(void **)&a2[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteID]);
}

void sub_10009DF50()
{
  uint64_t v1 = v0;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123C30;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_progressView];
  id v4 = [v3 leadingAnchor];
  id v5 = [v1 contentView];
  id v6 = [v5 leadingAnchor];

  id v7 = [v4 constraintEqualToAnchor:v6 constant:44.0];
  *(void *)(v2 + 32) = v7;
  id v8 = [v3 trailingAnchor];
  id v9 = [v1 contentView];
  id v10 = [v9 trailingAnchor];

  id v11 = [v8 constraintEqualToAnchor:v10 constant:-44.0];
  *(void *)(v2 + 40) = v11;
  id v12 = [v3 centerXAnchor];
  id v13 = [v1 view];
  if (!v13)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v14 = v13;
  id v15 = [v13 centerXAnchor];

  id v16 = [v12 constraintEqualToAnchor:v15];
  *(void *)(v2 + 48) = v16;
  id v17 = [v3 centerYAnchor];
  id v18 = [v1 view];
  if (!v18)
  {
LABEL_11:
    __break(1u);
    return;
  }
  unint64_t v19 = v18;
  unint64_t v20 = self;
  id v21 = [v19 centerYAnchor];

  id v22 = [v17 constraintEqualToAnchor:v21];
  *(void *)(v2 + 56) = v22;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 activateConstraints:isa];

  id v24 = [v1 headerView];
  id v42 = (objc_class *)[v24 customIconContainerView];

  Class v25 = v42;
  if (v42)
  {
    id v26 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_imageView];
    if (v26)
    {
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_100123C30;
      id v28 = v26;
      id v29 = [v28 heightAnchor];
      id v30 = [(objc_class *)v42 heightAnchor];
      id v31 = [v29 constraintEqualToAnchor:v30];

      *(void *)(v27 + 32) = v31;
      id v32 = [v28 widthAnchor];
      id v33 = [(objc_class *)v42 widthAnchor];
      id v34 = [v32 constraintEqualToAnchor:v33];

      *(void *)(v27 + 40) = v34;
      id v35 = [v28 centerXAnchor];
      id v36 = [(objc_class *)v42 centerXAnchor];
      id v37 = [v35 constraintEqualToAnchor:v36];

      *(void *)(v27 + 48) = v37;
      id v38 = [v28 centerYAnchor];
      id v39 = [(objc_class *)v42 centerYAnchor];
      id v40 = [v38 constraintEqualToAnchor:v39];

      *(void *)(v27 + 56) = v40;
      specialized Array._endMutation()();
      Class v41 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 activateConstraints:v41];

      Class v25 = v41;
    }
  }
}

uint64_t sub_10009E498(char a1)
{
  v6.receiver = v1;
  v6.Class super_class = (Class)type metadata accessor for SelfServiceSuiteInProgressViewController();
  [super viewDidAppear:a1 & 1];
  *(void *)(*(void *)&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteManager]
            + OBJC_IVAR____TtC11Diagnostics12SuiteManager_delegate
            + 8) = &off_1001516F8;
  uint64_t result = swift_unknownObjectWeakAssign();
  id v4 = *(void (**)(uint64_t))&v1[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_onAppear];
  if (v4)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    return sub_10003B0B8((uint64_t)v4);
  }
  return result;
}

id sub_10009E5F8()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for SelfServiceSuiteInProgressViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for SelfServiceSuiteInProgressViewController()
{
  return self;
}

uint64_t sub_10009E6D0(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v27 = a1;
  uint64_t v28 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for DispatchQoS.QoSClass.default(_:), v11);
  id v15 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  id v16 = (void *)swift_allocObject();
  id v18 = v27;
  uint64_t v17 = v28;
  v16[2] = a2;
  v16[3] = v18;
  unint64_t v20 = v29;
  uint64_t v19 = v30;
  v16[4] = v29;
  void v16[5] = v17;
  v16[6] = v19;
  aBlock[4] = sub_10009FC28;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_100151758;
  id v21 = _Block_copy(aBlock);
  id v22 = a2;
  id v23 = v18;
  id v24 = v20;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v33 = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v31);
  return swift_release();
}

uint64_t sub_10009EA40(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
  id v11 = [a1 imageLocators];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (qword_100182818 != -1) {
      swift_once();
    }
    id v14 = sub_1000B6ACC(v13);
    swift_bridgeObjectRelease();
    *(void *)(v10 + 16) = v14;
    swift_bridgeObjectRelease();
  }
  id v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v10;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  void v15[6] = a4;
  v15[7] = a5;
  swift_retain_n();
  id v16 = a1;
  id v17 = a2;
  id v18 = a3;
  swift_retain_n();
  id v19 = v16;
  unint64_t v20 = (char *)v17;
  id v21 = (char *)v18;
  id v22 = [v19 iconLocator];
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    if (qword_100182818 != -1) {
      swift_once();
    }
    uint64_t v27 = qword_10018A430;
    swift_retain();
    sub_1000C1E4C(v24, v26, v27, (void (*)(void))sub_10009FCE0, (uint64_t)v15);
    swift_bridgeObjectRelease();
    swift_release();

    swift_release_n();
    return swift_release_n();
  }
  uint64_t v44 = a4;
  uint64_t v28 = *(void **)&v20[OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState];
  if (v28)
  {
    id v29 = *(void **)&v21[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteID];
    swift_retain_n();
    id v30 = [v28 suitesAvailable];
    sub_10003C374(0, (unint64_t *)&unk_100184320);
    unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v32 = v29;
    id v33 = sub_1000908F8(v31);
    swift_bridgeObjectRelease();

    if (v33)
    {
      if (qword_100182818 != -1) {
        swift_once();
      }
      uint64_t v45 = qword_10018A430;
      id v34 = [v33 primaryAssetLocator];
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v36;

      swift_retain();
      sub_1000C19F8(v35, v37, v45, (void (*)(void))sub_10009FCE0, (uint64_t)v15);
      swift_release();

      swift_release_n();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
  }
  else
  {
    swift_retain_n();
  }
  sub_10006FB78();
  swift_allocError();
  *id v38 = 0xD000000000000018;
  v38[1] = 0x800000010012EF20;
  swift_errorRetain();
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  static os_log_type_t.error.getter();
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_100123B50;
  swift_getErrorValue();
  uint64_t v40 = Error.localizedDescription.getter();
  uint64_t v42 = v41;
  *(void *)(v39 + 56) = &type metadata for String;
  *(void *)(v39 + 64) = sub_10004D9B4();
  *(void *)(v39 + 32) = v40;
  *(void *)(v39 + 40) = v42;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  swift_errorRelease();
  sub_10009EF70(0, v10, v19, v20, v21, v44, a5);
  swift_errorRelease();
  swift_release();

  swift_release_n();
  return swift_release_n();
}

uint64_t sub_10009EF70(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  uint64_t v31 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v14 - 8);
  uint64_t v34 = v14;
  __chkstk_darwin(v14);
  id v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v32 = static OS_dispatch_queue.main.getter();
  id v17 = (void *)swift_allocObject();
  uint64_t v17[2] = a2;
  void v17[3] = a3;
  void v17[4] = a4;
  v17[5] = a5;
  uint64_t v18 = v29;
  uint64_t v19 = v30;
  v17[6] = a1;
  v17[7] = v18;
  v17[8] = v19;
  aBlock[4] = sub_1000A1798;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_1001517F8;
  unint64_t v20 = _Block_copy(aBlock);
  id v21 = a1;
  swift_retain();
  swift_retain();
  id v22 = a3;
  id v23 = a4;
  id v24 = a5;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  uint64_t v25 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v26 = (void *)v32;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v16, v34);
}

void sub_10009F240(uint64_t a1, void *a2, uint64_t a3, char *a4, void *a5, uint64_t a6, uint64_t a7)
{
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  id v15 = [a2 instructions];
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v17 = [a2 instructionsStyle];
  id v18 = [a2 localizedTitle];
  uint64_t v47 = a6;
  id v48 = a4;
  uint64_t v45 = (uint64_t)v17;
  uint64_t v46 = v16;
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v22 = v21;
LABEL_6:

    goto LABEL_8;
  }
  id v23 = *(void **)(a3 + OBJC_IVAR____TtC11Diagnostics12SuiteManager_deviceState);
  if (v23)
  {
    id v24 = *(void **)&a4[OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_suiteID];
    id v25 = [v23 suitesAvailable];
    sub_10003C374(0, (unint64_t *)&unk_100184320);
    unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v27 = v24;
    uint64_t v28 = sub_1000908F8(v26);
    swift_bridgeObjectRelease();

    if (v28)
    {
      id v19 = [v28 suiteNameLocalizedString];
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v29;

      goto LABEL_6;
    }
  }
  uint64_t v20 = 0;
  uint64_t v22 = 0xE000000000000000;
LABEL_8:
  id v30 = [a2 localizedSubtitle];
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v34 = 0xE000000000000000;
  }
  id v35 = [a2 options];
  sub_10003AFD0(&qword_100183700);
  uint64_t v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  objc_allocWithZone((Class)type metadata accessor for SelfServiceInstructionsViewController());
  id v37 = a5;
  id v38 = (char *)sub_1000E9214(v14, v46, v45, v20, v22, v32, v34, v36, a5, 3);
  uint64_t v39 = (void (*)())swift_allocObject();
  *((void *)v39 + 2) = v47;
  *((void *)v39 + 3) = a7;
  *((void *)v39 + 4) = a2;
  uint64_t v40 = (void (**)())&v38[OBJC_IVAR____TtC11Diagnostics37SelfServiceInstructionsViewController_onButtonPress];
  uint64_t v41 = *(void *)&v38[OBJC_IVAR____TtC11Diagnostics37SelfServiceInstructionsViewController_onButtonPress];
  uint64_t *v40 = sub_1000A17EC;
  v40[1] = v39;
  swift_retain();
  id v42 = a2;
  sub_10003B0B8(v41);
  id v43 = [v48 navigationController];
  if (v43)
  {
    uint64_t v44 = v43;
    [v43 pushViewController:v38 animated:1];
  }
}

uint64_t sub_10009F560(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_100123B50;
    swift_getErrorValue();
    uint64_t v6 = Error.localizedDescription.getter();
    uint64_t v8 = v7;
    *(void *)(v5 + 56) = &type metadata for String;
    *(void *)(v5 + 64) = sub_10004D9B4();
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v8;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  return a3(a1);
}

void sub_10009F6AC(uint64_t a1, id a2, void *a3)
{
  if (a1)
  {
    swift_errorRetain();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v5 = static OS_os_log.default.getter();
    os_log_type_t v6 = v4;
    if (os_log_type_enabled(v5, v4))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      swift_errorRetain();
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v8 = v40;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error occurred upon suite finish: %@", v7, 0xCu);
      sub_10003AFD0((uint64_t *)&unk_100186080);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }
    id v29 = [a2 navigationController];
    if (v29)
    {
      id v30 = v29;
      id v31 = [v29 popViewControllerAnimated:1];
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
    }
    return;
  }
  if (!a3) {
    goto LABEL_30;
  }
  id v9 = a3;
  id v10 = [v9 results];
  if (!v10)
  {
    id v11 = v9;
LABEL_29:

LABEL_30:
    id v32 = [a2 navigationController];
    if (!v32) {
      return;
    }
    id v39 = v32;
    id v33 = [v32 popViewControllerAnimated:1];
    goto LABEL_37;
  }
  id v11 = v10;
  id v12 = [v10 components];
  sub_10003C374(0, &qword_100183180);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v14)
  {

    goto LABEL_29;
  }
  id v15 = [v11 components];
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  id v37 = a2;
  id v38 = v9;
  uint64_t v36 = v11;
  if (v17)
  {
    if (v17 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v18 = 0;
    id v19 = _swiftEmptyArrayStorage;
    do
    {
      if ((v16 & 0xC000000000000001) != 0) {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v20 = *(id *)(v16 + 8 * v18 + 32);
      }
      uint64_t v21 = v20;
      id v22 = [v20 assetLocator:v36, v37, v38];
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_10009FD50(0, v19[2] + 1, 1, v19);
      }
      unint64_t v27 = v19[2];
      unint64_t v26 = v19[3];
      if (v27 >= v26 >> 1) {
        id v19 = sub_10009FD50((void *)(v26 > 1), v27 + 1, 1, v19);
      }
      ++v18;
      v19[2] = v27 + 1;
      uint64_t v28 = &v19[2 * v27];
      uint8_t v28[4] = v23;
      void v28[5] = v25;
    }
    while (v17 != v18);
  }
  else
  {
    id v19 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease_n();
  if (qword_100182818 != -1) {
    swift_once();
  }
  uint64_t v34 = qword_10018A430;
  id v39 = v38;
  id v35 = v37;
  sub_1000C22B0((uint64_t)v19, v34, v35, v39);

  swift_bridgeObjectRelease();
  id v33 = v39;
LABEL_37:
}

uint64_t sub_10009FBC0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1000A1490(a3, a4);
}

uint64_t sub_10009FBCC(uint64_t a1, void *a2)
{
  return sub_1000A1110(a2);
}

uint64_t sub_10009FBD8()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10009FC28()
{
  return sub_10009EA40(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10009FC38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009FC48()
{
  return swift_release();
}

uint64_t sub_10009FC50()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009FC88()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10009FCE0(void *a1)
{
  return sub_10009EF70(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_10009FCF0(void (*a1)(void))
{
  a1();

  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_10009FD28(uint64_t (*a1)(void))
{
  return a1();
}

void *sub_10009FD50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003AFD0(&qword_100185010);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _DWORD v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000A0E1C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10009FE60(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A01DC(a1, a2, a3, a4, &qword_100183BF8, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL);
}

void *sub_10009FE84(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003AFD0(&qword_100183A88);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _DWORD v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000A0F10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10009FF94(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003AFD0(&qword_100184DE0);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _DWORD v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000A1004(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000A00A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000B4D44();
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _DWORD v10[2] = v8;
      _OWORD v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000A13A4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A01B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000A01DC(a1, a2, a3, a4, &qword_100183E88, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

uint64_t sub_1000A01DC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10003AFD0(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  long long v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000A1D9C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_1000A045C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003AFD0(&qword_100184DD8);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _DWORD v10[2] = v8;
      _OWORD v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1000A1EF8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1000A0580(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      id v3 = _swiftEmptyArrayStorage;
    }
    else
    {
      sub_10003AFD0((uint64_t *)&unk_100182E20);
      id v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1000CE8D0((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
  }
  return v3;
}

void *sub_1000A0678(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10003AFD0(&qword_100185010);
  id v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1000A0C1C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_100046948();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1000A0760(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1000A0774(a1, a2, a3, a4, (unint64_t *)&qword_1001858F0);
}

void *sub_1000A0774(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t *a5)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v10 = v6;
    if (v6 <= 0)
    {
      size_t v11 = _swiftEmptyArrayStorage;
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        unint64_t v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8) {
          goto LABEL_19;
        }
        sub_10003C374(0, a5);
        swift_arrayInitWithCopy();
        return v11;
      }
    }
    else
    {
      sub_10003AFD0((uint64_t *)&unk_100182E20);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v6;
      v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_1000A0910(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10003C374(0, (unint64_t *)&unk_100185900);
    sub_1000A2048();
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    uint64_t v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    void *v24 = v4;
    v24[1] = v8;
    void v24[2] = v9;
    v24[3] = v10;
    void v24[4] = v11;
    return (void *)v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  uint64_t v24 = result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_45;
      }
      sub_10003C374(0, (unint64_t *)&unk_100185900);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v15 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1000A0C1C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1000A0E1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A0F10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A1004(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_10003AFD0(&qword_100184220);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A1110(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_1000A18B0;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_100151870;
  int64_t v12 = _Block_copy(aBlock);
  id v13 = v1;
  id v14 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v17);
}

char *sub_1000A13A4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A1490(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  int64_t v12 = (void *)swift_allocObject();
  v12[2] = a2;
  uint64_t v12[3] = v2;
  void v12[4] = a1;
  aBlock[4] = sub_1000A1974;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_1001518C0;
  id v13 = _Block_copy(aBlock);
  swift_errorRetain();
  id v14 = a1;
  id v15 = v2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

uint64_t sub_1000A1738()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1000A1798()
{
  sub_10009F240(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(char **)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1000A17AC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000A17EC()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  id v2 = [*(id *)(v0 + 32) identifier];
  v1();
}

uint64_t sub_1000A1870()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000A18B0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC11Diagnostics40SelfServiceSuiteInProgressViewController_progressView);
  [*(id *)(v0 + 24) floatValue];
  *(float *)(v1 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progress) = v2 / 100.0;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics23SelfServiceProgressView_progressView);

  return [v3 setProgress:1 animated:YES];
}

uint64_t sub_1000A192C()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000A1974()
{
  sub_10009F6AC(*(void *)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1000A1980(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v2 = a2;
  uint64_t v3 = result;
  unint64_t v4 = a2 >> 62;
  if (a2 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v12 = v11 - v3;
    if (__OFSUB__(v11, v3))
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v14 < 0)
    {
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= (v12 & ~(v12 >> 63)) || v13 <= -1) {
      uint64_t v16 = v12 & ~(v12 >> 63);
    }
    else {
      uint64_t v16 = v13;
    }
    if (v12 >= 1) {
      uint64_t v7 = v16;
    }
    else {
      uint64_t v7 = v12 & ~(v12 >> 63);
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17 >= v7) {
      goto LABEL_10;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5 >= ((v5 - result) & ~((uint64_t)(v5 - result) >> 63))) {
    uint64_t v6 = (v5 - result) & ~((uint64_t)(v5 - result) >> 63);
  }
  else {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((uint64_t)(v5 - result) >= 1) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = (v5 - result) & ~((uint64_t)(v5 - result) >> 63);
  }
  if ((uint64_t)v5 < v7) {
    goto LABEL_31;
  }
LABEL_10:
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_10003C374(0, (unint64_t *)&qword_100183670);
    Swift::Int v8 = 0;
    do
    {
      Swift::Int v9 = v8 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v8);
      Swift::Int v8 = v9;
    }
    while (v7 != v9);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v10;
}

void sub_1000A1B54(void *a1, void *a2)
{
  id v3 = [a1 navigationController];
  if (!v3) {
    return;
  }
  unint64_t v4 = v3;
  objc_allocWithZone((Class)type metadata accessor for SelfServiceSuiteResultsViewController());
  id v5 = sub_100086F04(a2);
  id v6 = [v4 viewControllers];
  sub_10003C374(0, (unint64_t *)&qword_100183670);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v8 = sub_1000A1980(1, v7);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (v14)
  {
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain_n();
    uint64_t v16 = (void *)swift_dynamicCastClass();
    if (!v16)
    {
      swift_unknownObjectRelease();
      uint64_t v16 = _swiftEmptyArrayStorage;
    }
    uint64_t v17 = v16[2];
    swift_release();
    if (__OFSUB__(v14 >> 1, v12))
    {
      __break(1u);
    }
    else if (v17 == (v14 >> 1) - v12)
    {
      uint64_t v15 = swift_dynamicCastClass();
      if (!v15)
      {
        swift_unknownObjectRelease();
        uint64_t v15 = (uint64_t)_swiftEmptyArrayStorage;
      }
      goto LABEL_10;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v15 = (uint64_t)sub_1000A0774(v8, v10, v12, v14, (unint64_t *)&qword_100183670);
LABEL_10:
  swift_unknownObjectRelease();
  id v18 = v5;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 setViewControllers:isa animated:1];
}

uint64_t sub_1000A1D9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A1EF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_10003AFD0(&qword_100183E80);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000A2008()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000A2040(int a1)
{
  sub_10009DEB8(a1, *(char **)(v1 + 16));
}

unint64_t sub_1000A2048()
{
  unint64_t result = qword_100184DE8;
  if (!qword_100184DE8)
  {
    sub_10003C374(255, (unint64_t *)&unk_100185900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100184DE8);
  }
  return result;
}

uint64_t sub_1000A20C8(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000711E0();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.default(_:), v9);
  unint64_t v13 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v17;
  *(void *)(v14 + 24) = a2;
  aBlock[4] = sub_1000A3608;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_100151938;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v20 = &_swiftEmptyArrayStorage;
  sub_1000A3628((unint64_t *)&qword_100183E90, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  return swift_release();
}

NSString sub_1000A243C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100184DF0 = (uint64_t)result;
  return result;
}

NSString sub_1000A2474()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100184DF8 = (uint64_t)result;
  return result;
}

uint64_t sub_1000A24AC(void (*a1)(uint64_t))
{
  uint64_t v20 = a1;
  uint64_t v1 = type metadata accessor for URLResourceValues();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(fileURLWithPath:isDirectory:)();
  sub_10003AFD0((uint64_t *)&unk_1001841F0);
  uint64_t inited = swift_initStackObject();
  long long v19 = xmmword_100123B50;
  *(_OWORD *)(inited + 16) = xmmword_100123B50;
  *(void *)(inited + 32) = NSURLVolumeAvailableCapacityKey;
  uint64_t v10 = NSURLVolumeAvailableCapacityKey;
  sub_1000A7DAC(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.resourceValues(forKeys:)();
  swift_bridgeObjectRelease();
  unint64_t v11 = URLResourceValues.volumeAvailableCapacity.getter();
  char v13 = v12;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v13)
  {
LABEL_12:
    uint64_t v15 = 1;
    goto LABEL_13;
  }
  if (qword_1001827D8 != -1) {
    swift_once();
  }
  unint64_t v14 = sub_1000A3180((const __CFString *)qword_100184DF0);
  if ((v11 & 0x8000000000000000) != 0 || v11 < v14)
  {
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1001240D0;
    if (qword_1001827E0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_1000A3180((const __CFString *)qword_100184DF8);
    *(void *)(v16 + 56) = &type metadata for UInt64;
    *(void *)(v16 + 64) = &protocol witness table for UInt64;
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 96) = &type metadata for Int;
    *(void *)(v16 + 104) = &protocol witness table for Int;
    *(void *)(v16 + 72) = v11;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v15 = 0;
LABEL_13:
  v20(v15);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unsigned __int8 *sub_1000A2930(uint64_t a1, uint64_t a2, int64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = String.init<A>(_:)();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1000A2C94();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  unint64_t v11 = sub_1000A2A18(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1000A2A18(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (id i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  uint64_t v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1000A2C94()
{
  unint64_t v0 = String.subscript.getter();
  uint64_t v4 = sub_1000A2D14(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1000A2D14(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1000A2E6C(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_10004DF48(v9, 0),
          unint64_t v12 = sub_1000A2F6C((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = static String._uncheckedFromUTF8(_:)();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return static String._uncheckedFromUTF8(_:)();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  _StringObject.sharedUTF8.getter();
LABEL_4:

  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_1000A2E6C(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_10004DFB0(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_10004DFB0(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_1000A2F6C(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    void v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    NSString result = v12;
    if (v17 == v15) {
      NSString result = sub_10004DFB0(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      NSString result = String.UTF8View._foreignSubscript(position:)();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        NSString result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          NSString result = _StringObject.sharedUTF8.getter();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    NSString result = sub_10004DFB0(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = String.UTF8View._foreignIndex(after:)();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1000A3180(const __CFString *a1)
{
  CFPreferencesAppSynchronize(@"com.apple.Diagnostics");
  unsigned __int8 v2 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isCheckerBoardActive");
  swift_unknownObjectRelease();
  uint64_t v3 = 0;
  if ((v2 & 1) == 0)
  {
    type metadata accessor for CFString(0);
    if (qword_1001827D8 != -1) {
      swift_once();
    }
    sub_1000A3628(&qword_1001832F8, type metadata accessor for CFString);
    if (static _CFObject.== infix(_:_:)()) {
      uint64_t v3 = 0;
    }
    else {
      uint64_t v3 = 0x200000;
    }
  }
  CFPropertyListRef v4 = CFPreferencesCopyAppValue(a1, @"com.apple.Diagnostics");
  if (!v4) {
    return v3;
  }
  uint64_t v5 = (uint64_t)v4;
  CFPropertyListRef v31 = v4;
  swift_unknownObjectRetain();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_67;
  }
  uint64_t result = v29;
  unint64_t v7 = HIBYTE(v30) & 0xF;
  uint64_t v8 = v29 & 0xFFFFFFFFFFFFLL;
  if ((v30 & 0x2000000000000000) != 0) {
    unint64_t v9 = HIBYTE(v30) & 0xF;
  }
  else {
    unint64_t v9 = v29 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease();
    goto LABEL_67;
  }
  if ((v30 & 0x1000000000000000) != 0)
  {
    unint64_t v11 = (unint64_t)sub_1000A2930(v29, v30, 10);
    char v13 = v28;
    goto LABEL_45;
  }
  if ((v30 & 0x2000000000000000) == 0)
  {
    if ((v29 & 0x1000000000000000) != 0) {
      unint64_t v10 = (unsigned __int8 *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      unint64_t v10 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    unint64_t v11 = (unint64_t)sub_1000A2A18(v10, v8, 10);
    char v13 = v12 & 1;
LABEL_45:
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      swift_unknownObjectRelease();
      return v11;
    }
LABEL_67:
    uint64_t v29 = v5;
    if (swift_dynamicCast()) {
      return (uint64_t)v31;
    }
    return v3;
  }
  v30 &= 0xFFFFFFFFFFFFFFuLL;
  if (v29 == 43)
  {
    if (v7)
    {
      if (v7 != 1 && (BYTE1(v29) - 48) <= 9u)
      {
        unint64_t v11 = (BYTE1(v29) - 48);
        if (v7 == 2) {
          goto LABEL_44;
        }
        if ((BYTE2(v29) - 48) <= 9u)
        {
          unint64_t v11 = 10 * (BYTE1(v29) - 48) + (BYTE2(v29) - 48);
          unint64_t v17 = v7 - 3;
          if (v17)
          {
            unint64_t v18 = (unsigned __int8 *)&v29 + 3;
            while (1)
            {
              unsigned int v19 = *v18 - 48;
              if (v19 > 9) {
                goto LABEL_41;
              }
              if (!is_mul_ok(v11, 0xAuLL)) {
                goto LABEL_41;
              }
              BOOL v15 = __CFADD__(10 * v11, v19);
              unint64_t v11 = 10 * v11 + v19;
              if (v15) {
                goto LABEL_41;
              }
              char v13 = 0;
              ++v18;
              if (!--v17) {
                goto LABEL_45;
              }
            }
          }
          goto LABEL_44;
        }
      }
      goto LABEL_41;
    }
  }
  else
  {
    if (v29 != 45)
    {
      if (v7 && (v29 - 48) <= 9u)
      {
        unint64_t v11 = (v29 - 48);
        if (v7 == 1) {
          goto LABEL_44;
        }
        if ((BYTE1(v29) - 48) <= 9u)
        {
          unint64_t v11 = 10 * (v29 - 48) + (BYTE1(v29) - 48);
          unint64_t v20 = v7 - 2;
          if (v20)
          {
            uint64_t v21 = (unsigned __int8 *)&v29 + 2;
            while (1)
            {
              unsigned int v22 = *v21 - 48;
              if (v22 > 9) {
                goto LABEL_41;
              }
              if (!is_mul_ok(v11, 0xAuLL)) {
                goto LABEL_41;
              }
              BOOL v15 = __CFADD__(10 * v11, v22);
              unint64_t v11 = 10 * v11 + v22;
              if (v15) {
                goto LABEL_41;
              }
              char v13 = 0;
              ++v21;
              if (!--v20) {
                goto LABEL_45;
              }
            }
          }
          goto LABEL_44;
        }
      }
LABEL_41:
      unint64_t v11 = 0;
LABEL_42:
      char v13 = 1;
      goto LABEL_45;
    }
    if (v7)
    {
      if (v7 != 1)
      {
        unsigned __int8 v14 = BYTE1(v29) - 48;
        if ((BYTE1(v29) - 48) <= 9u)
        {
          unint64_t v11 = 0;
          BOOL v15 = v14 == 0;
          unint64_t v16 = -(uint64_t)v14;
          if (!v15) {
            goto LABEL_42;
          }
          if (v7 == 2)
          {
            char v13 = 0;
            unint64_t v11 = v16;
            goto LABEL_45;
          }
          unsigned __int8 v23 = BYTE2(v29) - 48;
          if ((BYTE2(v29) - 48) <= 9u && is_mul_ok(v16, 0xAuLL))
          {
            unint64_t v24 = 10 * v16;
            unint64_t v11 = v24 - v23;
            if (v24 >= v23)
            {
              unint64_t v25 = v7 - 3;
              if (v25)
              {
                uint64_t v26 = (unsigned __int8 *)&v29 + 3;
                while (1)
                {
                  unsigned int v27 = *v26 - 48;
                  if (v27 > 9) {
                    goto LABEL_41;
                  }
                  if (!is_mul_ok(v11, 0xAuLL)) {
                    goto LABEL_41;
                  }
                  BOOL v15 = 10 * v11 >= v27;
                  unint64_t v11 = 10 * v11 - v27;
                  if (!v15) {
                    goto LABEL_41;
                  }
                  char v13 = 0;
                  ++v26;
                  if (!--v25) {
                    goto LABEL_45;
                  }
                }
              }
LABEL_44:
              char v13 = 0;
              goto LABEL_45;
            }
          }
        }
      }
      goto LABEL_41;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000A35D0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A3608()
{
  return sub_1000A24AC(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1000A3610(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000A3620()
{
  return swift_release();
}

uint64_t sub_1000A3628(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1000A37F4()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for BaseTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for BaseTableViewCell()
{
  return self;
}

unint64_t sub_1000A384C(char a1)
{
  unint64_t result = 0x22656D6F4822;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6572676173694422;
      break;
    case 2:
      unint64_t result = 0x7373696D73694422;
      break;
    case 3:
      unint64_t result = 0x226C65636E614322;
      break;
    case 4:
      unint64_t result = 0x22656E6F4422;
      break;
    case 5:
      unint64_t result = 0x76697463616E4922;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x656C7469746E4522;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
    case 11:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0x65657246206F4E22;
      break;
    case 12:
      unint64_t result = 0x64726143206F4E22;
      break;
    case 13:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000020;
      break;
    case 16:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 17:
      unint64_t result = 0xD000000000000031;
      break;
    case 18:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 19:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000A3AC4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1000A384C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1000A384C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1000A3B50()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1000A384C(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1000A3BB4()
{
  sub_1000A384C(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000A3C08()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1000A384C(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1000A3C68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1000A7FDC();
  *a1 = result;
  return result;
}

unint64_t sub_1000A3C98@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1000A384C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1000A3CC4()
{
  static os_log_type_t.error.getter();
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100123B50;
  swift_getErrorValue();
  uint64_t v1 = Error.localizedDescription.getter();
  uint64_t v3 = v2;
  *(void *)(v0 + 56) = &type metadata for String;
  *(void *)(v0 + 64) = sub_10004D9B4();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  unint64_t v4 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
}

void sub_1000A3DB8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1000A3E78(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount);
  if (v3 != a1)
  {
    uint64_t v4 = v1;
    if (!a1 && v3 >= 1 && (sub_1000541E4() & 1) == 0)
    {
      [*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor) startWithPriority:-1 completion:0];
      sub_1000A7530();
    }
    if (*(uint64_t *)(v1 + v2) < 1)
    {
      if (qword_100182740 != -1) {
        swift_once();
      }
      unsigned int v19 = (void *)qword_10018A358;
      unint64_t v20 = *(NSObject **)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v19;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = sub_1000AB164;
      *(void *)(v22 + 24) = v21;
      id v37 = sub_10005B17C;
      id v38 = (void *)v22;
      id v33 = _NSConcreteStackBlock;
      uint64_t v34 = 1107296256;
      id v35 = sub_10004FD38;
      uint64_t v36 = &unk_100152060;
      unsigned __int8 v23 = _Block_copy(&v33);
      id v24 = v19;
      swift_retain();
      swift_release();
      dispatch_sync(v20, v23);
      _Block_release(v23);
      LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (v20)
      {
        __break(1u);
        return;
      }
      unint64_t v25 = (unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
      *(unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = (*(unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState) & 1) == 0;
      id v26 = sub_10004CDCC();
      [v26 setNearbySharingEnabled:(*v25 & 1) == 0];

      uint64_t v27 = qword_10018A358;
      id v28 = sub_10004CDCC();
      [v28 setDiscoverableMode:*(void *)(v27 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting)];

      uint64_t v29 = *(void **)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_captureButtonAssertion);
      if (v29) {
        [v29 invalidate];
      }
      [*(id *)(v4 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor) stopWithCompletion:0];
      unint64_t v30 = *(void **)(v4 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_lockButtonConsumer);
      if (v30) {
        [v30 invalidate];
      }
      id v31 = [self sharedApplication];
      id v32 = [v31 applicationState];

      if (v32 == (id)2) {
        sub_1000A795C(12);
      }
      id v18 = [self standardUserDefaults];
      [v18 setInteger:0 forKey:@"InCurrentSession"];
      goto LABEL_22;
    }
    if (qword_100182740 != -1) {
      swift_once();
    }
    uint64_t v5 = (void *)qword_10018A358;
    uint64_t v6 = *(NSObject **)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    char v8 = (void *)swift_allocObject();
    void v8[2] = sub_1000AB16C;
    v8[3] = v7;
    id v37 = sub_10005B17C;
    id v38 = v8;
    id v33 = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    id v35 = sub_10004FD38;
    uint64_t v36 = &unk_1001520D8;
    unint64_t v9 = _Block_copy(&v33);
    id v10 = v5;
    swift_retain();
    swift_release();
    dispatch_sync(v6, v9);
    _Block_release(v9);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v6)
    {
      __break(1u);
    }
    else
    {
      unint64_t v11 = (unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
      *(unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = 1;
      id v12 = sub_10004CDCC();
      [v12 setNearbySharingEnabled:(*v11 & 1) == 0];

      sub_10004CE5C();
      sub_10004D0A4();
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      char v8 = (void *)swift_allocObject();
      *((_OWORD *)v8 + 1) = xmmword_100123B50;
      if (qword_1001827C8 == -1)
      {
LABEL_11:
        char v13 = (void *)qword_10018A3E8;
        v8[7] = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
        uint8_t v8[8] = sub_1000AAD54((unint64_t *)&qword_100184FF0, (unint64_t *)&qword_1001832C0);
        void v8[4] = v13;
        id v14 = v13;
        BOOL v15 = (void *)static OS_os_log.default.getter();
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();

        uint64_t v16 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimer;
        [*(id *)(v4 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimer) invalidate];
        unint64_t v17 = *(void **)(v4 + v16);
        *(void *)(v4 + v16) = 0;

        id v18 = [self standardUserDefaults];
        [v18 setInteger:1 forKey:@"InCurrentSession"];
LABEL_22:

        return;
      }
    }
    swift_once();
    goto LABEL_11;
  }
}

void sub_1000A44B8(char a1)
{
  uint64_t isEscapingClosureAtFileLocation = OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground) != (a1 & 1))
  {
    uint64_t v3 = v1;
    uint64_t v4 = (void *)qword_100183500;
    if (qword_100183500)
    {
      type metadata accessor for SelfServiceDestinationPickerViewController();
      if (!swift_dynamicCastClass())
      {
        id v11 = v4;
        goto LABEL_18;
      }
    }
    if (qword_100182750 != -1) {
      swift_once();
    }
    id v5 = [(id)qword_10018A380 viewControllers];
    sub_10003C374(0, (unint64_t *)&qword_100183670);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v7)
      {
LABEL_8:
        unint64_t v8 = v7 - 1;
        if (__OFSUB__(v7, 1))
        {
          __break(1u);
        }
        else if ((v6 & 0xC000000000000001) == 0)
        {
          if ((v8 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v8 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v9 = *(id *)(v6 + 8 * v8 + 32);
LABEL_13:
            id v10 = v9;
            swift_bridgeObjectRelease();
            while (1)
            {
              type metadata accessor for DashboardViewController();
              unint64_t v6 = swift_dynamicCastClass();
              if (!v6) {

              }
              if (*(unsigned char *)(v3 + isEscapingClosureAtFileLocation) == 1) {
                break;
              }
              uint64_t v22 = &unk_100123000;
              if (*(uint64_t *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount) < 1) {
                goto LABEL_36;
              }
              if (qword_100182740 != -1) {
                goto LABEL_53;
              }
LABEL_33:
              id v32 = (void *)qword_10018A358;
              id v33 = *(NSObject **)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleQueue);
              uint64_t v34 = swift_allocObject();
              *(void *)(v34 + 16) = v32;
              uint64_t v35 = swift_allocObject();
              *(void *)(v35 + 16) = sub_1000AACDC;
              *(void *)(v35 + 24) = v34;
              uint64_t v55 = sub_10005B17C;
              id v56 = (void *)v35;
              unint64_t v51 = _NSConcreteStackBlock;
              uint64_t v36 = v22;
              uint64_t v52 = v22[360];
              uint64_t v53 = sub_10004FD38;
              id v54 = &unk_100151C78;
              id v37 = _Block_copy(&v51);
              id v38 = v32;
              swift_retain();
              swift_release();
              dispatch_sync(v33, v37);
              _Block_release(v37);
              LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
              swift_release();
              swift_release();
              if (v33)
              {
                __break(1u);
                return;
              }
              uint64_t v22 = v36;
              if (v6)
              {
                id v39 = *(id *)(v6 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager);
                sub_1000B423C();
              }
LABEL_36:
              [*(id *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor) stopWithCompletion:0];
              uint64_t v40 = *(void **)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_lockButtonConsumer);
              if (v40) {
                [v40 invalidate];
              }
              if (qword_100182740 != -1) {
                goto LABEL_49;
              }
LABEL_39:
              uint64_t v41 = (void *)qword_10018A358;
              id v42 = *(NSObject **)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue);
              uint64_t v43 = swift_allocObject();
              *(void *)(v43 + 16) = v41;
              uint64_t v3 = swift_allocObject();
              *(void *)(v3 + 16) = sub_10007F110;
              *(void *)(v3 + 24) = v43;
              uint64_t v55 = sub_10005B17C;
              id v56 = (void *)v3;
              unint64_t v51 = _NSConcreteStackBlock;
              uint64_t v52 = v22[360];
              uint64_t v53 = sub_10004FD38;
              id v54 = &unk_100151C00;
              uint64_t v44 = _Block_copy(&v51);
              id v45 = v41;
              swift_retain();
              swift_release();
              dispatch_sync(v42, v44);
              _Block_release(v44);
              uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
              swift_release();
              swift_release();
              if ((isEscapingClosureAtFileLocation & 1) == 0)
              {
                uint64_t v46 = qword_10018A358;
                sub_10004CC70();
                uint64_t v47 = (unsigned char *)(v46 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
                *(unsigned char *)(v46 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = (*(unsigned char *)(v46 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState) & 1) == 0;
                id v48 = sub_10004CDCC();
                [v48 setNearbySharingEnabled:(*v47 & 1) == 0];

                uint64_t v49 = qword_10018A358;
                id v50 = sub_10004CDCC();
                [v50 setDiscoverableMode:*(void *)(v49 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting)];

                goto LABEL_41;
              }
              __break(1u);
LABEL_51:
              swift_once();
LABEL_17:
              id v11 = (id)qword_10018A370;
LABEL_18:
              id v10 = v11;
            }
            if (qword_100182740 != -1) {
LABEL_47:
            }
              swift_once();
            sub_10004CA90();
            sub_10003AFD0((uint64_t *)&unk_1001836E0);
            uint64_t v12 = swift_allocObject();
            *(_OWORD *)(v12 + 16) = xmmword_100123B50;
            if (qword_1001827C8 != -1) {
              swift_once();
            }
            char v13 = (void *)qword_10018A3E8;
            *(void *)(v12 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
            *(void *)(v12 + 64) = sub_1000AAD54((unint64_t *)&qword_100184FF0, (unint64_t *)&qword_1001832C0);
            *(void *)(v12 + 32) = v13;
            id v14 = v13;
            BOOL v15 = (void *)static OS_os_log.default.getter();
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();
            swift_bridgeObjectRelease();

            uint64_t v16 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimer;
            [*(id *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimer) invalidate];
            unint64_t v17 = *(void **)(v3 + v16);
            *(void *)(v3 + v16) = 0;

            id v18 = (void *)qword_10018A358;
            unsigned int v19 = *(NSObject **)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleQueue);
            uint64_t v20 = swift_allocObject();
            *(void *)(v20 + 16) = v18;
            uint64_t v21 = swift_allocObject();
            *(void *)(v21 + 16) = sub_1000AACF4;
            *(void *)(v21 + 24) = v20;
            uint64_t v55 = sub_10005B17C;
            id v56 = (void *)v21;
            unint64_t v51 = _NSConcreteStackBlock;
            uint64_t v52 = 1107296256;
            uint64_t v53 = sub_10004FD38;
            id v54 = &unk_100151CF0;
            uint64_t v22 = _Block_copy(&v51);
            id v23 = v18;
            swift_retain();
            swift_release();
            dispatch_sync(v19, v22);
            _Block_release(v22);
            LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
            swift_release();
            swift_release();
            if (v19)
            {
              __break(1u);
LABEL_49:
              swift_once();
              goto LABEL_39;
            }
            if (v6)
            {
              id v24 = *(id *)(v6 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager);
              sub_1000B4248();
            }
            if (*(uint64_t *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount) < 1) {
              goto LABEL_41;
            }
            [*(id *)(v3 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor) startWithPriority:-1 completion:0];
            sub_1000A7530();
            unint64_t v25 = (void *)qword_10018A358;
            id v26 = *(NSObject **)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_disableSystemGesturesQueue);
            uint64_t v27 = swift_allocObject();
            *(void *)(v27 + 16) = v25;
            uint64_t v3 = swift_allocObject();
            *(void *)(v3 + 16) = sub_1000AAD0C;
            *(void *)(v3 + 24) = v27;
            uint64_t v55 = sub_10005B17C;
            id v56 = (void *)v3;
            unint64_t v51 = _NSConcreteStackBlock;
            uint64_t v52 = 1107296256;
            uint64_t v53 = sub_10004FD38;
            id v54 = &unk_100151D68;
            id v28 = _Block_copy(&v51);
            uint64_t v22 = v56;
            id v29 = v25;
            swift_retain();
            swift_release();
            dispatch_sync(v26, v28);
            _Block_release(v28);
            LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
            swift_release();
            swift_release();
            if ((v26 & 1) == 0)
            {
              unint64_t v30 = (unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
              *(unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = 1;
              id v31 = sub_10004CDCC();
              [v31 setNearbySharingEnabled:(*v30 & 1) == 0];

              sub_10004CE5C();
LABEL_41:

              return;
            }
            __break(1u);
LABEL_53:
            swift_once();
            goto LABEL_33;
          }
          __break(1u);
          goto LABEL_47;
        }
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v7) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_100182748 != -1) {
      goto LABEL_51;
    }
    goto LABEL_17;
  }
}

void sub_1000A4ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Notification.userInfo.getter();
  if (!v3)
  {
    long long v10 = 0u;
    long long v11 = 0u;
LABEL_10:
    sub_10003C44C((uint64_t)&v10, &qword_100183E70);
    goto LABEL_11;
  }
  uint64_t v4 = v3;
  *(void *)&long long v10 = 0xD000000000000012;
  *((void *)&v10 + 1) = 0x800000010012B130;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10007D88C((uint64_t)v9), (v6 & 1) != 0))
  {
    sub_10003C5D8(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10003C320((uint64_t)v9);
  if (!*((void *)&v11 + 1)) {
    goto LABEL_10;
  }
  if (!swift_dynamicCast())
  {
LABEL_11:
    uint64_t v7 = 0;
    goto LABEL_12;
  }
  uint64_t v7 = v9[0];
LABEL_12:
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount);
  *(void *)(a2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount) = v7;
  sub_1000A3E78(v8);
}

uint64_t sub_1000A4FF0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground);
  *(unsigned char *)(a2 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground) = 1;
  sub_1000A44B8(v2);
  if (qword_100182740 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_10018A358;
  uint64_t v4 = *(NSObject **)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_statusBarStyleQueue);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1000AB15C;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_10005B17C;
  void v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _DWORD v10[2] = sub_10004FD38;
  _OWORD v10[3] = &unk_100151FE8;
  uint64_t v7 = _Block_copy(v10);
  id v8 = v3;
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

id sub_1000A5198(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100185000);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100182740 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_rootViewController);
  id result = [v7 view];
  if (result)
  {
    id v9 = result;
    id v10 = [self _configurationWithPhysicalButton:3 behavior:1 behaviorOptions:0];
    sub_10003AFD0((uint64_t *)&unk_100182E20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100123F00;
    *(void *)(inited + 32) = v10;
    unint64_t v32 = inited;
    specialized Array._endMutation()();
    unint64_t v12 = v32;
    if (v32 >> 62)
    {
      id v30 = v10;
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v14 = v10;
    }
    v31[0] = v6;
    v31[1] = a1;
    BOOL v15 = a2;
    if (v13) {
      sub_1000A8728(v12);
    }
    swift_bridgeObjectRelease();
    id v16 = objc_allocWithZone((Class)_UIPhysicalButtonInteraction);
    sub_10003C374(0, &qword_100185040);
    sub_1000AAD54(&qword_100185048, &qword_100185040);
    swift_unknownObjectRetain();
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v18 = [v16 initWithConfigurations:isa delegate:v7];

    [v9 addInteraction:v18];
    id v19 = [v15 URLContexts];
    sub_10003C374(0, &qword_100185018);
    sub_1000AAD54(&qword_100185020, &qword_100185018);
    uint64_t v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = (void *)sub_1000D7ED8(v20);
    swift_bridgeObjectRelease();
    if (v21)
    {
      id v22 = [v21 URL];

      uint64_t v23 = v31[0];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v24 = type metadata accessor for URL();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
    }
    else
    {
      uint64_t v25 = type metadata accessor for URL();
      uint64_t v23 = v31[0];
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v31[0], 1, 1, v25);
    }
    sub_1000A595C(v23);
    id v26 = objc_allocWithZone((Class)NSURLCache);
    NSString v27 = String._bridgeToObjectiveC()();
    id v28 = [v26 initWithMemoryCapacity:104857600 diskCapacity:104857600 diskPath:v27];

    [self setSharedURLCache:v28];
    id v29 = [self sharedInstance];
    [v29 syncASTDefaultsToNVRam];

    return (id)sub_10003C44C(v23, &qword_100185000);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000A595C(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0(&qword_100185000);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v73 = (char *)v68 - v10;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v11 = swift_allocObject();
  long long v71 = xmmword_100123B50;
  *(_OWORD *)(v11 + 16) = xmmword_100123B50;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v12 = sub_10004D9B4();
  *(void *)(v11 + 64) = v12;
  strcpy((char *)(v11 + 32), "handle(url:)");
  *(unsigned char *)(v11 + 45) = 0;
  *(_WORD *)(v11 + 46) = -5120;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v13 = self;
  id v14 = [v13 standardUserDefaults];
  id v15 = [v14 stringForKey:@"currentTicketNumber"];

  if (v15)
  {
    uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;
  }
  else
  {
    uint64_t v70 = 0;
    uint64_t v17 = 0;
  }
  sub_1000A925C(a1, (uint64_t)v4);
  id v18 = &selRef_beginUpload;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    uint64_t v21 = v73;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v73, v4, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v21, v5);
    sub_10008E954((uint64_t)v9, &v76);
    uint64_t v22 = v79;
    *(void *)(v72 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions) = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v69 = v5;
    if (v22 && *(void *)(v22 + 16))
    {
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v23 = Hasher._finalize()();
      uint64_t v24 = -1 << *(unsigned char *)(v22 + 32);
      unint64_t v25 = v23 & ~v24;
      if ((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
      {
        uint64_t v26 = ~v24;
        while (*(unsigned char *)(*(void *)(v22 + 48) + v25) != 1)
        {
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_34;
          }
          unint64_t v25 = (v25 + 1) & v26;
          if (((*(void *)(v22 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
            goto LABEL_16;
          }
        }
        swift_bridgeObjectRelease();
LABEL_34:
        swift_bridgeObjectRelease();
        id v54 = [self defaultCenter];
        NSString v55 = String._bridgeToObjectiveC()();
        id v18 = &selRef_beginUpload;
        [v54 postNotificationName:v55 object:0];

        sub_1000A92C4((uint64_t)&v77, (uint64_t)v82);
        sub_1000A92C4((uint64_t)v82, (uint64_t)v74);
        uint64_t v5 = v69;
        if (!v75)
        {
LABEL_35:
          if (v17)
          {
            v68[1] = qword_10018A3E8;
            uint64_t v56 = swift_allocObject();
            *(_OWORD *)(v56 + 16) = xmmword_1001240D0;
            *(void *)(v56 + 56) = &type metadata for String;
            *(void *)(v56 + 64) = v12;
            *(void *)(v56 + 32) = v70;
            *(void *)(v56 + 40) = v17;
            uint64_t v57 = URL.absoluteString.getter();
            *(void *)(v56 + 96) = &type metadata for String;
            *(void *)(v56 + 104) = v12;
            *(void *)(v56 + 72) = v57;
            *(void *)(v56 + 80) = v58;
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();
            swift_bridgeObjectRelease();
            id v59 = [v13 standardUserDefaults];
            [v59 removeObjectForKey:@"currentTicketNumber"];
          }
          else
          {
            uint64_t v60 = swift_allocObject();
            *(_OWORD *)(v60 + 16) = v71;
            uint64_t v61 = URL.absoluteString.getter();
            *(void *)(v60 + 56) = &type metadata for String;
            *(void *)(v60 + 64) = v12;
            *(void *)(v60 + 32) = v61;
            *(void *)(v60 + 40) = v62;
            static os_log_type_t.default.getter();
            os_log(_:dso:log:type:_:)();
            swift_bridgeObjectRelease();
          }
          uint64_t v33 = v72;
          uint64_t v40 = v78;
          if (!v78) {
            goto LABEL_39;
          }
          goto LABEL_32;
        }
LABEL_18:
        id v28 = v18;
        swift_bridgeObjectRelease();
        uint64_t v29 = v78;
        if (v78)
        {
          if (qword_10018A3F8
            && (v77 == qword_10018A3F0 && v78 == qword_10018A3F8
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
          {
            goto LABEL_23;
          }
        }
        else if (!qword_10018A3F8)
        {
LABEL_23:
          uint64_t v30 = swift_allocObject();
          *(_OWORD *)(v30 + 16) = v71;
          uint64_t v31 = URL.absoluteString.getter();
          *(void *)(v30 + 56) = &type metadata for String;
          *(void *)(v30 + 64) = v12;
          *(void *)(v30 + 32) = v31;
          *(void *)(v30 + 40) = v32;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();
          swift_bridgeObjectRelease();
          uint64_t v33 = v72;
          id v18 = v28;
          goto LABEL_31;
        }
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = v71;
        uint64_t v36 = URL.absoluteString.getter();
        *(void *)(v35 + 56) = &type metadata for String;
        *(void *)(v35 + 64) = v12;
        *(void *)(v35 + 32) = v36;
        *(void *)(v35 + 40) = v37;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();
        id v38 = [v13 standardUserDefaults];
        if (v29) {
          NSString v39 = String._bridgeToObjectiveC()();
        }
        else {
          NSString v39 = 0;
        }
        uint64_t v33 = v72;
        id v18 = v28;
        [v38 setObject:v39 forKey:@"currentTicketNumber"];

        swift_unknownObjectRelease();
LABEL_31:
        uint64_t v5 = v69;
        uint64_t v40 = v78;
        if (!v78)
        {
LABEL_39:
          swift_bridgeObjectRelease();
          uint64_t v63 = v33 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter;
          *(_OWORD *)uint64_t v63 = v76;
          *(unsigned char *)(v63 + 16) = 1;
          goto LABEL_40;
        }
LABEL_32:
        uint64_t v41 = v77;
        uint64_t v81 = v76;
        swift_bridgeObjectRetain();
        sub_1000A932C((uint64_t)&v81);
        uint64_t v80 = *((void *)&v76 + 1);
        sub_1000A932C((uint64_t)&v80);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        qword_10018A3F0 = v41;
        qword_10018A3F8 = v40;
        uint64_t v5 = v69;
        swift_bridgeObjectRelease();
        id v42 = [objc_allocWithZone((Class)DADeviceLocal) init];
        id v43 = [v42 state];

        id v44 = [v43 serialNumber];
        uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v47 = v46;

        sub_10003AFD0(&qword_100185010);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v71;
        *(void *)(inited + 32) = v45;
        *(void *)(inited + 40) = v47;
        uint64_t v49 = sub_1000F67B0(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        id v50 = sub_100060C8C(v49);
        uint64_t v51 = v33 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter;
        *(void *)uint64_t v51 = v50;
        *(void *)(v51 + 8) = v52;
        *(unsigned char *)(v51 + 16) = v53 & 1;
LABEL_40:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v73, v5);
        goto LABEL_41;
      }
LABEL_16:
      swift_bridgeObjectRelease();
      id v18 = &selRef_beginUpload;
      uint64_t v5 = v69;
    }
    sub_1000A92C4((uint64_t)&v77, (uint64_t)v82);
    sub_1000A92C4((uint64_t)v82, (uint64_t)v74);
    if (!v75) {
      goto LABEL_35;
    }
    goto LABEL_18;
  }
  sub_10003C44C((uint64_t)v4, &qword_100185000);
  if (v17)
  {
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v71;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = v12;
    *(void *)(v19 + 32) = v70;
    *(void *)(v19 + 40) = v17;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    id v20 = [v13 standardUserDefaults];
    [v20 removeObjectForKey:@"currentTicketNumber"];

    qword_10018A3F0 = 0;
    qword_10018A3F8 = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
  }
  uint64_t v33 = v72;
  uint64_t v34 = v72 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter;
  *(void *)uint64_t v34 = &_swiftEmptySetSingleton;
  *(void *)(v34 + 8) = &_swiftEmptySetSingleton;
  *(unsigned char *)(v34 + 16) = 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_41:
  if (qword_100182798 != -1) {
    swift_once();
  }
  uint64_t v64 = qword_10018A3B0;
  uint64_t v65 = *(void *)(v33 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter + 8);
  char v66 = *(unsigned char *)(v33 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter + 16);
  *(void *)(qword_10018A3B0 + 16) = *(void *)(v33 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter);
  *(void *)(v64 + 24) = v65;
  *(unsigned char *)(v64 + 32) = v66;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v67 = [self defaultCenter];
  if (qword_1001827A0 != -1) {
    swift_once();
  }
  [v67 setObject:qword_10018A3B8 forKey:0];

  if (*(unsigned char *)(v33 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_firstActionTaken)) {
    sub_1000A8C6C();
  }
  else {
    sub_1000A657C();
  }
}

void sub_1000A657C()
{
  uint64_t v1 = v0;
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123B50;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  uint64_t v3 = (void *)qword_10018A3E8;
  uint64_t v4 = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  *(void *)(v2 + 56) = v4;
  uint64_t v5 = sub_1000AAD54((unint64_t *)&qword_100184FF0, (unint64_t *)&qword_1001832C0);
  *(void *)(v2 + 64) = v5;
  *(void *)(v2 + 32) = v3;
  id v6 = v3;
  uint64_t v7 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  v1[OBJC_IVAR____TtC11Diagnostics11AppDelegate_firstActionTaken] = 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  id v9 = v1;
  sub_10009AD60((uint64_t)sub_1000A7DA4, v8);
  swift_release();
  if (sub_1000A8A84())
  {
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100123B50;
    uint64_t v11 = (void *)qword_10018A3E8;
    *(void *)(v10 + 56) = v4;
    *(void *)(v10 + 64) = v5;
    *(void *)(v10 + 32) = v11;
    id v12 = v11;
    uint64_t v13 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    if (qword_100182730 != -1) {
      swift_once();
    }
    *(unsigned char *)(qword_10018A350 + OBJC_IVAR____TtC11Diagnostics19SetupViewController_termsAndConditionsAccepted) = 1;
    id v14 = (void *)qword_100183500;
    if (qword_100183500)
    {
      type metadata accessor for SelfServiceDestinationPickerViewController();
      if (!swift_dynamicCastClass())
      {
        id v21 = v14;
LABEL_23:
        id v20 = v21;
        goto LABEL_24;
      }
    }
    if (qword_100182750 != -1) {
      swift_once();
    }
    id v15 = [qword_10018A380 viewControllers:1, 2];
    sub_10003C374(0, (unint64_t *)&qword_100183670);
    unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v17)
      {
LABEL_12:
        unint64_t v18 = v17 - 1;
        if (__OFSUB__(v17, 1))
        {
          __break(1u);
        }
        else if ((v16 & 0xC000000000000001) == 0)
        {
          if ((v18 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v18 < *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v19 = *(id *)(v16 + 8 * v18 + 32);
LABEL_17:
            id v20 = v19;
            swift_bridgeObjectRelease();
LABEL_24:
            type metadata accessor for DashboardViewController();
            if (swift_dynamicCastClass()) {
              sub_100068BE0();
            }

            sub_1000A8C6C();
            return;
          }
          __break(1u);
          goto LABEL_33;
        }
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v17) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_100182748 == -1)
    {
LABEL_22:
      id v21 = (id)qword_10018A370;
      goto LABEL_23;
    }
LABEL_33:
    swift_once();
    goto LABEL_22;
  }
}

void sub_1000A69B0(char a1, void *a2)
{
  if (a1 == 3)
  {
    v9[10] = v2;
    v9[11] = v3;
    id v5 = [self sharedManager];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a2;
    void v9[4] = sub_1000A924C;
    void v9[5] = v6;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    _OWORD v9[2] = sub_10009AF9C;
    void v9[3] = &unk_100151A98;
    uint64_t v7 = _Block_copy(v9);
    id v8 = a2;
    swift_release();
    [v5 refreshWithCompletion:v7];
    _Block_release(v7);
  }
}

uint64_t sub_1000A6AC0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a4;
  aBlock[4] = sub_1000A9254;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_100151AE8;
  id v15 = _Block_copy(aBlock);
  id v16 = a1;
  id v17 = a4;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v20);
}

void sub_1000A6D54(void *a1)
{
  if ((char *)[a1 status] - 7 > (char *)1)
  {
    id v5 = (void *)qword_100183500;
    if (qword_100183500
      && (type metadata accessor for SelfServiceDestinationPickerViewController(), !swift_dynamicCastClass()))
    {
      id v12 = v5;
    }
    else
    {
      if (qword_100182750 != -1) {
        swift_once();
      }
      id v6 = [(id)qword_10018A380 viewControllers];
      sub_10003C374(0, (unint64_t *)&qword_100183670);
      unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v8)
        {
LABEL_13:
          unint64_t v9 = v8 - 1;
          if (__OFSUB__(v8, 1))
          {
            __break(1u);
          }
          else if ((v7 & 0xC000000000000001) == 0)
          {
            if ((v9 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v9 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v10 = *(id *)(v7 + 8 * v9 + 32);
LABEL_18:
              uint64_t v11 = v10;
              swift_bridgeObjectRelease();
              goto LABEL_25;
            }
            __break(1u);
            goto LABEL_56;
          }
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v8) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      if (qword_100182748 != -1) {
        swift_once();
      }
      id v12 = (id)qword_10018A370;
    }
    uint64_t v11 = v12;
LABEL_25:
    uint64_t v13 = (objc_class *)type metadata accessor for DashboardViewController();
    uint64_t v14 = (char *)swift_dynamicCastClass();
    if (!v14)
    {

      uint64_t v14 = (char *)[objc_allocWithZone(v13) initWithStyle:1];
    }
    uint64_t v24 = v14;
    id v15 = (void *)qword_100183500;
    if (qword_100183500
      && (type metadata accessor for SelfServiceDestinationPickerViewController(), !swift_dynamicCastClass()))
    {
      id v22 = v15;
    }
    else
    {
      if (qword_100182750 != -1) {
        swift_once();
      }
      id v16 = [(id)qword_10018A380 viewControllers];
      sub_10003C374(0, (unint64_t *)&qword_100183670);
      unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v18)
        {
LABEL_33:
          unint64_t v19 = v18 - 1;
          if (!__OFSUB__(v18, 1))
          {
            if ((v17 & 0xC000000000000001) == 0)
            {
              if ((v19 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v19 < *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v20 = *(id *)(v17 + 8 * v19 + 32);
LABEL_38:
                id v21 = v20;
                swift_bridgeObjectRelease();
                goto LABEL_45;
              }
              __break(1u);
              goto LABEL_60;
            }
LABEL_57:
            id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_38;
          }
LABEL_56:
          __break(1u);
          goto LABEL_57;
        }
      }
      else
      {
        uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v18) {
          goto LABEL_33;
        }
      }
      swift_bridgeObjectRelease();
      if (qword_100182748 != -1) {
        swift_once();
      }
      id v22 = (id)qword_10018A370;
    }
    id v21 = v22;
LABEL_45:
    sub_10003C374(0, (unint64_t *)&qword_100183670);
    char v23 = static NSObject.== infix(_:_:)();

    if (v23)
    {
LABEL_48:
      sub_100068BE0();
      sub_1000A8C6C();
      goto LABEL_49;
    }
    if (qword_100182748 == -1)
    {
LABEL_47:
      sub_100053AE4(v24, 0, 0, 0);
      goto LABEL_48;
    }
LABEL_60:
    swift_once();
    goto LABEL_47;
  }
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  if (qword_100182748 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100050088();
  id v2 = [v1 navigationItem];

  [v2 setHidesBackButton:1];
  uint64_t v3 = sub_100050088();
  [v3 setModalPresentationStyle:0];

  uint64_t v4 = (void *)qword_10018A370;
  uint64_t v24 = sub_100050088();
  [v4 presentViewController:animated:completion:];
LABEL_49:
}

uint64_t sub_1000A7298(unsigned __int8 a1, void *a2)
{
  int v3 = a1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = __chkstk_darwin(v8);
  id v12 = (char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3 == 1)
  {
    sub_10003C374(0, (unint64_t *)&qword_100182E40);
    uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a2;
    aBlock[4] = sub_1000A9208;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000358AC;
    aBlock[3] = &unk_100151A48;
    id v15 = _Block_copy(aBlock);
    id v16 = a2;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10003AF78();
    sub_10003AFD0((uint64_t *)&unk_100182E50);
    sub_10003B014();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return result;
}

void sub_1000A7530()
{
  unsigned __int8 v1 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isCheckerBoardActive");
  swift_unknownObjectRelease();
  if ((v1 & 1) == 0)
  {
    id v2 = [self sharedInstance];
    if (v2)
    {
      int v3 = v2;
      id v4 = [v2 homeButtonType];

      if (v4 == (id)2)
      {
        id v5 = [self sharedInstance];
        id v6 = [v5 beginConsumingPressesForButtonKind:2 eventConsumer:v0 priority:0];

        *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_lockButtonConsumer) = v6;
        swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1000A765C()
{
}

id sub_1000A76A4()
{
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics11AppDelegate_window] = 0;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics11AppDelegate_enhancedLoggingLaunchActions] = 0;
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_rootViewController;
  uint64_t v2 = qword_100182748;
  int v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  id v4 = (void *)qword_10018A370;
  *(void *)&v3[v1] = qword_10018A370;
  id v5 = &v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter];
  *(void *)id v5 = &_swiftEmptySetSingleton;
  *((void *)v5 + 1) = &_swiftEmptySetSingleton;
  v5[16] = 1;
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor;
  id v7 = objc_allocWithZone((Class)DSHardwareButtonEventMonitor);
  id v8 = v4;
  *(void *)&v3[v6] = [v7 init];
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_lockButtonConsumer] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimer] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_inactivityTimeInterval] = 0x407E000000000000;
  v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_firstActionTaken] = 0;
  v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_wasEverInForeground] = 0;
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_launcherServiceManager;
  *(void *)&v3[v9] = [self sharedInstance];
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount] = 0;
  v3[OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground] = 0;

  v11.receiver = v3;
  v11.Class super_class = (Class)type metadata accessor for AppDelegate();
  return [super init];
}

id sub_1000A784C()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for AppDelegate();
  return [super dealloc];
}

uint64_t type metadata accessor for AppDelegate()
{
  return self;
}

void sub_1000A795C(char a1)
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123B50;
  unint64_t v3 = sub_1000A384C(a1);
  uint64_t v5 = v4;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = sub_10004D9B4();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = v5;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  id v6 = [self sharedInstance];
  uint64_t v7 = 0;
  id v12 = v6;
  switch(a1)
  {
    case 5:
    case 14:
      uint64_t v7 = 5;
      goto LABEL_9;
    case 7:
    case 10:
    case 12:
    case 16:
      uint64_t v7 = 6;
      goto LABEL_9;
    case 8:
    case 11:
    case 15:
      uint64_t v7 = 4;
      goto LABEL_9;
    case 9:
    case 19:
      uint64_t v7 = 1;
      goto LABEL_9;
    case 13:
      [v6 informExitingForReason:2];
LABEL_10:
      if (byte_10018A379)
      {
LABEL_11:
        type metadata accessor for RootViewController();
        sub_100052510(a1);
      }
      else
      {
        id v8 = (void *)UIApp;
        if (!UIApp)
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          JUMPOUT(0x1000A7CCCLL);
        }
LABEL_13:
        id v9 = v8;
        [v9 terminateWithSuccess];
LABEL_14:
      }
LABEL_15:

      return;
    case 17:
    case 18:
      uint64_t v7 = 3;
      goto LABEL_9;
    default:
LABEL_9:
      [v6 informExitingForReason:v7];
      switch(a1)
      {
        case 0:
          id v10 = self;
          unsigned int v11 = objc_msgSend(objc_msgSend(v10, "currentPlatform"), "isCheckerBoardActive");
          swift_unknownObjectRelease();
          if (!v11) {
            goto LABEL_29;
          }
          objc_msgSend(objc_msgSend(v10, "currentPlatform"), "exitCheckerBoard");

          swift_unknownObjectRelease();
          return;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 9:
        case 10:
        case 12:
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
          goto LABEL_10;
        case 6:
          objc_msgSend(objc_msgSend(self, "currentPlatform"), "exitCheckerBoard");
          swift_unknownObjectRelease();
          goto LABEL_15;
        case 7:
          id v8 = (void *)UIApp;
          if (UIApp) {
            goto LABEL_13;
          }
          __break(1u);
LABEL_29:
          if (byte_10018A379 == 1)
          {
            sub_100053A18();
            goto LABEL_15;
          }
          if (UIApp)
          {
            [UIApp suspend];
            goto LABEL_15;
          }
          break;
        case 8:
        case 11:
          if (byte_10018A379 == 1) {
            goto LABEL_11;
          }
          if (!UIApp) {
            goto LABEL_34;
          }
          id v9 = UIApp;
          [v9 suspend];
          goto LABEL_14;
        default:
          JUMPOUT(0);
      }
      goto LABEL_35;
  }
}

uint64_t sub_1000A7D6C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000A7DA4(char a1)
{
  sub_1000A69B0(a1, *(void **)(v1 + 16));
}

void *sub_1000A7DAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10003AFD0(&qword_100185060);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      id v6 = *(void **)(v32 + 8 * v4);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      id v7 = v6;
      String.hash(into:)();
      Swift::Int v8 = Hasher._finalize()();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
        if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v24 = v23;
          if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1000A7FDC()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

id sub_1000A8030(uint64_t a1, void *a2)
{
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001240D0;
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = sub_10004D9B4();
  *(void *)(v4 + 32) = 0xD00000000000001FLL;
  *(void *)(v4 + 40) = 0x800000010012F740;
  *(void *)(v4 + 96) = sub_10003C374(0, &qword_100185028);
  *(void *)(v4 + 104) = sub_1000AAD54((unint64_t *)&unk_100185030, &qword_100185028);
  *(void *)(v4 + 72) = a2;
  id v39 = a2;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  uint64_t v5 = self;
  id v6 = [v5 defaultCenter];
  if (qword_100182838 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_10018A460;
  Swift::Int v8 = self;
  id v9 = [v8 mainQueue];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  id v44 = sub_1000AAD98;
  uint64_t v45 = v10;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v41 = 1107296256;
  id v42 = sub_10004FC1C;
  id v43 = &unk_100151EA8;
  unint64_t v11 = _Block_copy(&aBlock);
  id v12 = v2;
  swift_release();
  id v13 = [v6 addObserverForName:v7 object:0 queue:v9 usingBlock:v11];
  _Block_release(v11);
  swift_unknownObjectRelease();

  id v14 = [v5 defaultCenter];
  if (qword_100182768 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_10018A3A0;
  id v16 = [v8 mainQueue:a1];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v12;
  id v44 = sub_1000AADA0;
  uint64_t v45 = v17;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v41 = 1107296256;
  id v42 = sub_10004FC1C;
  id v43 = &unk_100151EF8;
  uint64_t v18 = _Block_copy(&aBlock);
  id v19 = v12;
  swift_release();
  id v20 = [v14 addObserverForName:v15 object:0 queue:v16 usingBlock:v18];
  _Block_release(v18);
  swift_unknownObjectRelease();

  id v21 = [v5 defaultCenter];
  if (qword_100182760 != -1) {
    swift_once();
  }
  uint64_t v22 = qword_10018A398;
  id v23 = [v8 mainQueue];
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v19;
  id v44 = sub_1000AADD4;
  uint64_t v45 = v24;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v41 = 1107296256;
  id v42 = sub_10004FC1C;
  id v43 = &unk_100151F48;
  uint64_t v25 = _Block_copy(&aBlock);
  uint64_t v26 = (char *)v19;
  swift_release();
  id v27 = [v21 addObserverForName:v22 object:0 queue:v23 usingBlock:v25];
  _Block_release(v25);
  swift_unknownObjectRelease();

  LOBYTE(v23) = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isCheckerBoardActive");
  swift_unknownObjectRelease();
  if ((v23 & 1) == 0)
  {
    id result = [self sharedInstance];
    if (!result)
    {
      __break(1u);
      return result;
    }
    BOOL v29 = result;
    id v30 = [result homeButtonType];

    if (v30 != (id)2) {
      [*(id *)&v26[OBJC_IVAR____TtC11Diagnostics11AppDelegate_buttonEventMonitor] addTarget:v26 action:"handleButtonEventWithEvent:" forButtonEvents:62914563 propagate:0];
    }
  }
  self;
  id v31 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:swift_dynamicCastObjCClassUnconditional()];
  uint64_t v32 = OBJC_IVAR____TtC11Diagnostics11AppDelegate_window;
  uint64_t v33 = *(void **)&v26[OBJC_IVAR____TtC11Diagnostics11AppDelegate_window];
  *(void *)&v26[OBJC_IVAR____TtC11Diagnostics11AppDelegate_window] = v31;

  uint64_t v34 = *(void **)&v26[v32];
  if (v34)
  {
    [v34 setRootViewController:*(void *)&v26[OBJC_IVAR____TtC11Diagnostics11AppDelegate_rootViewController]];
    uint64_t v34 = *(void **)&v26[v32];
  }
  [v34 makeKeyAndVisible];
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v26;
  *(void *)(v35 + 24) = v39;
  id v36 = v39;
  uint64_t v37 = v26;
  sub_10005081C(0, (uint64_t (*)(id))sub_1000AAE1C);
  return (id)swift_release();
}

void sub_1000A8728(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10003AFD0((uint64_t *)&unk_100185050);
      uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_10003C374(0, &qword_100185040);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = static NSObject.== infix(_:_:)();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_10003C374(0, &qword_100185040);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = static NSObject.== infix(_:_:)();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_1000A8A84()
{
  unint64_t v0 = self;
  unsigned __int8 v1 = objc_msgSend(objc_msgSend(v0, "currentPlatform"), "didSetProxyServerInformation");
  swift_unknownObjectRelease();
  if (v1) {
    return 1;
  }
  unint64_t v2 = self;
  id v3 = [v2 standardUserDefaults];
  unsigned __int8 v4 = [v3 BOOLForKey:@"SkipTermsAndConditions"];

  if (v4) {
    return 1;
  }
  id v5 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 initWithSuiteName:v6];

  if (v7)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    unsigned __int8 v9 = [v7 BOOLForKey:v8];

    if (v9) {
      return 1;
    }
  }
  id v10 = [v2 standardUserDefaults];
  NSString v11 = String._bridgeToObjectiveC()();
  unsigned __int8 v12 = [v10 BOOLForKey:v11];

  if (v12) {
    return 1;
  }
  id v13 = objc_msgSend(objc_msgSend(v0, "currentPlatform"), "isInBoxUpdateModeActive");
  swift_unknownObjectRelease();
  return (uint64_t)v13;
}

void sub_1000A8C6C()
{
  unint64_t v0 = (void *)qword_100183500;
  if (qword_100183500)
  {
    type metadata accessor for SelfServiceDestinationPickerViewController();
    if (!swift_dynamicCastClass())
    {
      id v6 = v0;
LABEL_17:
      id v20 = v6;
      goto LABEL_18;
    }
  }
  if (qword_100182750 != -1) {
    swift_once();
  }
  id v1 = [(id)qword_10018A380 viewControllers];
  sub_10003C374(0, (unint64_t *)&qword_100183670);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    if (qword_100182748 == -1)
    {
LABEL_16:
      id v6 = (id)qword_10018A370;
      goto LABEL_17;
    }
LABEL_37:
    swift_once();
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_15;
  }
LABEL_7:
  unint64_t v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_34:
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v4 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  id v5 = *(id *)(v2 + 8 * v4 + 32);
LABEL_12:
  id v20 = v5;
  swift_bridgeObjectRelease();
LABEL_18:
  type metadata accessor for DashboardViewController();
  uint64_t v7 = swift_dynamicCastClass();
  if (v7
    && (NSString v8 = (void *)v7,
        *(unsigned char *)(*(void *)(v7 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
                 + OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly) == 1))
  {
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100123B50;
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    id v10 = (void *)qword_10018A3E8;
    *(void *)(v9 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    *(void *)(v9 + 64) = sub_1000AAD54((unint64_t *)&qword_100184FF0, (unint64_t *)&qword_1001832C0);
    *(void *)(v9 + 32) = v10;
    id v11 = v10;
    unsigned __int8 v12 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v8;
    unint64_t v14 = self;
    id v15 = v20;
    if ([v14 isSSRBootIntentSet])
    {
      byte_100184CF8 = 2;
      sub_1000A7298(2u, v8);

      swift_release();
    }
    else
    {
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();
      id v16 = [objc_allocWithZone((Class)DADiagnosticsSessionAvailability) init];
      if (qword_10018A3F8)
      {
        swift_bridgeObjectRetain();
        NSString v17 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v17 = 0;
      }
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_1000A91B0;
      *(void *)(v18 + 24) = v13;
      aBlock[4] = sub_10003C5D0;
      aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000B2448;
      aBlock[3] = &unk_1001519F8;
      char v19 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v16 checkAvailabilityWithTicketNumber:v17 timeout:0 exitWhenDone:v19 completion:30.0];
      _Block_release(v19);

      swift_release();
    }
  }
  else
  {
  }
}

uint64_t sub_1000A91B0(unsigned __int8 a1)
{
  return sub_1000A7298(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000A91B8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A91F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000A9200()
{
  return swift_release();
}

uint64_t sub_1000A9208()
{
  *(unsigned char *)(*(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
           + OBJC_IVAR____TtC11Diagnostics11CardManager_persistentOnly) = 0;
  return sub_1000F7604();
}

uint64_t sub_1000A924C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1000A6AC0(a1, a2, a3, *(void **)(v3 + 16));
}

void sub_1000A9254()
{
  sub_1000A6D54(*(void **)(v0 + 16));
}

uint64_t sub_1000A925C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100185000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A92C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100185008);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000A932C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000A9358()
{
  uint64_t v0 = sub_10003AFD0(&qword_100185000);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  id v5 = (char *)&v20 - v4;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unsigned __int8 v12 = (char *)&v20 - v11;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100123B50;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_10004D9B4();
  *(void *)(v13 + 32) = 0xD000000000000019;
  *(void *)(v13 + 40) = 0x800000010012F700;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_bridgeObjectRetain();
  id v15 = (void *)sub_1000D7ED8(v14);
  swift_bridgeObjectRelease();
  if (v15)
  {
    id v16 = [v15 URL];

    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v17(v5, v10, v6);
    uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    v18(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      v17(v12, v5, v6);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v3, v12, v6);
      v18(v3, 0, 1, v6);
      sub_1000A595C((uint64_t)v3);
      sub_10003C44C((uint64_t)v3, &qword_100185000);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  }
  return sub_10003C44C((uint64_t)v5, &qword_100185000);
}

void sub_1000A9C30()
{
  uint64_t v1 = v0;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123B50;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = sub_10004D9B4();
  *(void *)(v2 + 32) = 0xD00000000000001CLL;
  *(void *)(v2 + 40) = 0x800000010012F6A0;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground) = 1;
  sub_1000A44B8(v3);
  sub_10005081C(0, 0);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_wasEverInForeground) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_wasEverInForeground) = 1;
    if (qword_100182798 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_10018A3B0;
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter + 8);
    char v6 = *(unsigned char *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter + 16);
    *(void *)(qword_10018A3B0 + 16) = *(void *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_nativeCardFilter);
    *(void *)(v4 + 24) = v5;
    *(unsigned char *)(v4 + 32) = v6;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v7 = [self defaultCenter];
    if (qword_1001827A0 != -1) {
      swift_once();
    }
    [v7 postNotificationName:qword_10018A3B8 object:0];
  }

  sub_1000A8C6C();
}

void sub_1000A9E70()
{
  uint64_t v1 = v0;
  if (qword_1001827C8 != -1) {
    swift_once();
  }
  sub_10003AFD0((uint64_t *)&unk_1001836E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123B50;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = sub_10004D9B4();
  *(void *)(v2 + 32) = 0xD00000000000001BLL;
  *(void *)(v2 + 40) = 0x800000010012F660;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground) = 0;
  sub_1000A44B8(v3);
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for ModalPresentationCoordinator(0);
  sub_10003C3B0(v4, (uint64_t)qword_10018A440);
  swift_beginAccess();
  sub_1000D815C(0, 0);
  swift_endAccess();
  if (qword_100182740 != -1) {
    swift_once();
  }
  uint64_t v5 = (unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled);
  *(unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingAssertionEnabled) = (*(unsigned char *)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_nearbySharingPreferencesState) & 1) == 0;
  id v6 = sub_10004CDCC();
  [v6 setNearbySharingEnabled:(*v5 & 1) == 0];

  uint64_t v7 = qword_10018A358;
  id v8 = sub_10004CDCC();
  [v8 setDiscoverableMode:*(void *)(v7 + OBJC_IVAR____TtC11Diagnostics10Assertions_airDropUserSetting)];

  [*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_launcherServiceManager) informExitingForReason:0];
  if (*(uint64_t *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_activeCardCount) <= 0) {
    sub_1000A795C(12);
  }
}

void sub_1000AA0D4()
{
  uint64_t v0 = self;
  id v1 = [v0 standardUserDefaults];
  [v1 setInteger:0 forKey:@"InCurrentSession"];

  id v2 = [v0 standardUserDefaults];
  id v3 = [v2 stringForKey:@"currentTicketNumber"];

  if (v3)
  {

    id v4 = [v0 standardUserDefaults];
    [v4 removeObjectForKey:@"currentTicketNumber"];
  }
}

void sub_1000AA4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  __chkstk_darwin(v4);
  id v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C5D8(a1, (uint64_t)aBlock);
  if (!swift_dynamicCast())
  {
    static os_log_type_t.error.getter();
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    unsigned __int8 v12 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
LABEL_11:

    return;
  }
  sub_1000AB040((uint64_t)v6);
  qword_100184E30 = a2;
  if (a2 == 2)
  {
    id v7 = [self sharedApplication];
    id v8 = [v7 delegate];

    if (v8)
    {
      type metadata accessor for AppDelegate();
      uint64_t v9 = swift_dynamicCastClass();
      if (!v9
        || (id v10 = *(void **)(v9 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_window)) == 0
        || (id v11 = [v10 windowScene]) == 0)
      {
        swift_unknownObjectRelease();
        return;
      }
      unsigned __int8 v12 = v11;
      id v13 = [objc_allocWithZone((Class)UIWindowSceneGeometryPreferencesIOS) initWithInterfaceOrientations:2];
      aBlock[4] = sub_1000A3CC4;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000A3DB8;
      aBlock[3] = &unk_100152190;
      uint64_t v14 = _Block_copy(aBlock);
      [v12 requestGeometryUpdateWithPreferences:v13 errorHandler:v14];
      _Block_release(v14);

      if (qword_100182748 != -1) {
        swift_once();
      }
      [(id)qword_10018A370 setNeedsUpdateOfSupportedInterfaceOrientations];
      swift_unknownObjectRelease();
      goto LABEL_11;
    }
  }
}

void sub_1000AA79C(uint64_t a1)
{
  if (a1 == 2)
  {
    id v1 = [self standardUserDefaults];
    NSString v2 = String._bridgeToObjectiveC()();
    unsigned __int8 v3 = [v1 BOOLForKey:v2];

    if ((v3 & 1) == 0)
    {
      unsigned __int8 v4 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive");
      swift_unknownObjectRelease();
      if ((v4 & 1) == 0)
      {
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v5 = swift_allocObject();
        *(_OWORD *)(v5 + 16) = xmmword_100123B50;
        if (qword_1001827C8 != -1) {
          swift_once();
        }
        id v6 = (void *)qword_10018A3E8;
        *(void *)(v5 + 56) = sub_10003C374(0, (unint64_t *)&qword_1001832C0);
        *(void *)(v5 + 64) = sub_1000AAD54((unint64_t *)&qword_100184FF0, (unint64_t *)&qword_1001832C0);
        *(void *)(v5 + 32) = v6;
        id v7 = v6;
        id v8 = (void *)static OS_os_log.default.getter();
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        swift_bridgeObjectRelease();

        sub_100070524(0);
      }
    }
  }
}

void sub_1000AA9A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 2)
  {
    id v10 = [self standardUserDefaults];
    NSString v11 = String._bridgeToObjectiveC()();
    unsigned __int8 v12 = [v10 BOOLForKey:v11];

    if ((v12 & 1) == 0)
    {
      unsigned __int8 v13 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive");
      swift_unknownObjectRelease();
      if ((v13 & 1) == 0)
      {
        sub_10003C374(0, (unint64_t *)&qword_100182E40);
        uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
        aBlock[4] = sub_1000A765C;
        aBlock[5] = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000358AC;
        aBlock[3] = &unk_100151B10;
        id v15 = _Block_copy(aBlock);
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_10003AF78();
        sub_10003AFD0((uint64_t *)&unk_100182E50);
        sub_10003B014();
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v15);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
    }
  }
}

void sub_1000AACB4()
{
  sub_10004C19C(*(void *)(v0 + 16));
}

uint64_t sub_1000AACBC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AACCC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000AACDC()
{
  sub_10004B698(*(void *)(v0 + 16));
}

uint64_t sub_1000AACE4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000AACF4()
{
  sub_10004BB5C(*(void *)(v0 + 16));
}

uint64_t sub_1000AACFC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000AAD0C()
{
  sub_10004C74C(*(void *)(v0 + 16));
}

uint64_t sub_1000AAD14()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000AAD24()
{
  sub_10004C624(*(void *)(v0 + 16));
}

uint64_t sub_1000AAD2C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000AAD3C()
{
  sub_10004C474(*(void *)(v0 + 16));
}

uint64_t sub_1000AAD44()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AAD54(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10003C374(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1000AAD98(uint64_t a1)
{
  sub_1000A4ED4(a1, *(void *)(v1 + 16));
}

void sub_1000AADA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_isApplicationInForeground) = 0;
  sub_1000A44B8(v2);
}

uint64_t sub_1000AADD4(uint64_t a1)
{
  return sub_1000A4FF0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1000AADDC()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000AAE1C()
{
  return sub_1000A5198(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000AAE24()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AAE34()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AAE44()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t getEnumTagSinglePayload for ExitReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ExitReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *uint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AAFB0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExitReason()
{
  return &type metadata for ExitReason;
}

unint64_t sub_1000AAFEC()
{
  unint64_t result = qword_100185068;
  if (!qword_100185068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100185068);
  }
  return result;
}

uint64_t sub_1000AB040(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1000AB17C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10003C374(0, &qword_100183040);
    sub_1000468E0();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  uint64_t v16 = v2;
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v11 = v3;
    goto LABEL_29;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 < v8)
    {
      unint64_t v14 = *(void *)(v17 + 8 * v13);
      uint64_t v11 = v3 + 1;
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 3;
      if (v3 + 3 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 4;
      if (v3 + 4 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v11);
      if (v14)
      {
LABEL_28:
        uint64_t v9 = (v14 - 1) & v14;
        unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
        id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
        if (v12)
        {
          do
          {
            if (!objc_msgSend(v12, "activationState", v16)) {
              break;
            }

            uint64_t v3 = v11;
            unint64_t v4 = v9;
            if ((v1 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!__CocoaSet.Iterator.next()()) {
              break;
            }
            sub_10003C374(0, &qword_100183040);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v12 = v23;
            swift_unknownObjectRelease();
            uint64_t v11 = v3;
            uint64_t v9 = v4;
          }
          while (v23);
        }
        goto LABEL_33;
      }
      uint64_t v11 = v3 + 5;
      if (v3 + 5 < v8)
      {
        unint64_t v14 = *(void *)(v17 + 8 * v11);
        if (!v14)
        {
          uint64_t v15 = v3 + 6;
          while (v8 != v15)
          {
            unint64_t v14 = *(void *)(v17 + 8 * v15++);
            if (v14)
            {
              uint64_t v11 = v15 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    sub_100046948();
    return;
  }
  __break(1u);
}

uint64_t sub_1000AB43C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  *a5 = 0x4044000000000000;
  unint64_t v10 = (int *)type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  uint64_t v11 = (void *)((char *)a5 + v10[5]);
  *uint64_t v11 = swift_getKeyPath();
  sub_10003AFD0(&qword_100185070);
  swift_storeEnumTagMultiPayload();
  id v12 = (char *)a5 + v10[6];
  *(void *)id v12 = swift_getKeyPath();
  *((void *)v12 + 1) = 0;
  v12[16] = 0;
  *(void *)((char *)a5 + v10[8]) = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 <= a2) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = a2;
  }
  uint64_t v15 = (char *)a5 + v10[10];
  *(void *)((char *)a5 + v10[9]) = v14;
  *(void *)uint64_t v15 = a3;
  v15[8] = a4 & 1;
  if ((a4 & 1) != 0 || a3 > 0x18 || ((1 << a3) & 0x1010100) == 0) {
    int v16 = v10[7];
  }
  else {
    int v16 = v10[7];
  }
  State.init(wrappedValue:)();
  uint64_t v17 = (char *)a5 + v16;
  *uint64_t v17 = v19;
  *((void *)v17 + 1) = v20;
  objc_msgSend(objc_msgSend(self, "currentPlatform"), "hideSceneStatusBar");
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for SelfServiceInstructionsFullScreenViewerView()
{
  uint64_t result = qword_1001850D8;
  if (!qword_1001850D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000AB638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v35 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  unint64_t v31 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = static Color.black.getter();
  uint64_t v36 = static SafeAreaRegions.all.getter();
  int v34 = static Edge.Set.all.getter();
  uint64_t v8 = static Alignment.center.getter();
  uint64_t v32 = v9;
  uint64_t v33 = v8;
  uint64_t v30 = v1;
  sub_1000ABA04(v1, (uint64_t)v39);
  *(_OWORD *)&v41[151] = v39[9];
  *(_OWORD *)&v41[167] = v39[10];
  *(_OWORD *)&v41[183] = v39[11];
  *(_OWORD *)&v41[87] = v39[5];
  *(_OWORD *)&v41[103] = v39[6];
  *(_OWORD *)&v41[119] = v39[7];
  *(_OWORD *)&v41[135] = v39[8];
  *(_OWORD *)&v41[23] = v39[1];
  *(_OWORD *)&v41[39] = v39[2];
  *(_OWORD *)&v41[55] = v39[3];
  *(_OWORD *)&v41[71] = v39[4];
  *(void *)&v41[199] = v40;
  *(_OWORD *)&v41[7] = v39[0];
  sub_1000AD314(v1, (uint64_t)v7);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1000AD37C((uint64_t)v7, v11 + v10);
  long long v52 = *(_OWORD *)&v41[160];
  v53[0] = *(_OWORD *)&v41[176];
  *(_OWORD *)((char *)v53 + 15) = *(_OWORD *)&v41[191];
  long long v48 = *(_OWORD *)&v41[96];
  long long v49 = *(_OWORD *)&v41[112];
  long long v50 = *(_OWORD *)&v41[128];
  long long v51 = *(_OWORD *)&v41[144];
  long long v44 = *(_OWORD *)&v41[32];
  long long v45 = *(_OWORD *)&v41[48];
  long long v46 = *(_OWORD *)&v41[64];
  long long v47 = *(_OWORD *)&v41[80];
  long long v42 = *(_OWORD *)v41;
  long long v43 = *(_OWORD *)&v41[16];
  id v12 = [self defaultCenter];
  uint64_t v13 = v31;
  NSNotificationCenter.publisher(for:object:)();

  sub_1000AD314(v30, (uint64_t)v7);
  uint64_t v14 = swift_allocObject();
  sub_1000AD37C((uint64_t)v7, v14 + v10);
  uint64_t v15 = sub_10003AFD0(&qword_100185130);
  uint64_t v16 = v35;
  uint64_t v17 = v13;
  uint64_t v18 = v13;
  uint64_t v19 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 16))(a1 + *(int *)(v15 + 52), v17, v38);
  long long v20 = v50;
  *(_OWORD *)(a1 + 161) = v51;
  long long v21 = v53[0];
  *(_OWORD *)(a1 + 177) = v52;
  *(_OWORD *)(a1 + 193) = v21;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)((char *)v53 + 15);
  long long v22 = v46;
  *(_OWORD *)(a1 + 97) = v47;
  long long v23 = v49;
  *(_OWORD *)(a1 + 113) = v48;
  *(_OWORD *)(a1 + 129) = v23;
  *(_OWORD *)(a1 + 145) = v20;
  long long v24 = v42;
  *(_OWORD *)(a1 + 33) = v43;
  long long v25 = v45;
  *(_OWORD *)(a1 + 49) = v44;
  *(_OWORD *)(a1 + 65) = v25;
  *(_OWORD *)(a1 + 81) = v22;
  uint64_t v26 = v36;
  *(void *)a1 = v37;
  *(void *)(a1 + 8) = v26;
  *(unsigned char *)(a1 + 16) = v34;
  *(_OWORD *)(a1 + 17) = v24;
  uint64_t v27 = v32;
  *(void *)(a1 + 224) = v33;
  *(void *)(a1 + 232) = v27;
  *(void *)(a1 + 240) = sub_1000AD3E0;
  *(void *)(a1 + 248) = v11;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  Swift::Int v28 = (void (**)(uint64_t))(a1 + *(int *)(v15 + 56));
  void *v28 = sub_1000AD3FC;
  v28[1] = (void (*)(uint64_t))v14;
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v19);
}

uint64_t sub_1000ABA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  uint64_t v5 = (int *)(v4 - 8);
  uint64_t v6 = *(void *)(v4 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v4);
  sub_1000AD314(a1, (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  sub_1000AD37C((uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  uint64_t v10 = v5[12];
  uint64_t v11 = *(void *)(a1 + v5[11]);
  uint64_t v12 = *(void *)(a1 + v10);
  uint64_t v13 = *(unsigned __int8 *)(a1 + v10 + 8);
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v40 = v12;
  int v41 = v13;
  sub_1000DE4A4(v57, v14, sub_1000AD4E4, v9, v11, 0, v12, v13);
  uint64_t v15 = v57[0];
  uint64_t v16 = v57[1];
  uint64_t v17 = v57[2];
  uint64_t v52 = v57[3];
  uint64_t v51 = v57[4];
  uint64_t v50 = v57[5];
  uint64_t v49 = v57[6];
  int v48 = v58;
  uint64_t v47 = v59;
  long long v53 = v60;
  uint64_t v46 = v61;
  uint64_t v45 = v62;
  int v44 = v63;
  uint64_t v43 = static SafeAreaRegions.all.getter();
  int v42 = static Edge.Set.all.getter();
  uint64_t v18 = a1 + v5[9];
  char v19 = *(unsigned char *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  LOBYTE(v64) = *(unsigned char *)v18;
  uint64_t v65 = v20;
  sub_10003AFD0(&qword_100185138);
  State.wrappedValue.getter();
  LODWORD(v9) = v56;
  uint64_t v21 = a1 + v5[8];
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *(void *)(v21 + 8);
  char v24 = *(unsigned char *)(v21 + 16);
  sub_1000AC938(*(void *)v21, v23, v24);
  sub_1000E0910(v22, v23, v24);
  sub_1000ACA18(v22, v23, v24);
  if (v9 == 1 && qword_100182820 != -1) {
    swift_once();
  }
  LOBYTE(v64) = v19;
  uint64_t v65 = v20;
  State.wrappedValue.getter();
  unsigned __int8 v25 = v56;
  sub_1000AC938(v22, v23, v24);
  sub_1000E0910(v22, v23, v24);
  sub_1000ACA18(v22, v23, v24);
  if ((v25 & 1) == 0 && qword_100182820 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v26 = v64;
  uint64_t v27 = v66;
  uint64_t v28 = v68;
  uint64_t v29 = v69;
  if (v41) {
    goto LABEL_12;
  }
  if (v40 == 8 || v40 == 24)
  {
    unint64_t v30 = 0xBFF921FB54442D18;
    goto LABEL_14;
  }
  if (v40 != 16) {
LABEL_12:
  }
    unint64_t v30 = 0;
  else {
    unint64_t v30 = 0x3FF921FB54442D18;
  }
LABEL_14:
  char v31 = v44;
  char v54 = v44;
  unsigned __int8 v56 = v65;
  char v55 = v67;
  uint64_t result = static UnitPoint.center.getter();
  unsigned __int8 v33 = v56;
  char v34 = v55;
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v16;
  *(void *)(a2 + 16) = v17;
  uint64_t v35 = v51;
  *(void *)(a2 + 24) = v52;
  *(void *)(a2 + 32) = v35;
  uint64_t v36 = v49;
  *(void *)(a2 + 40) = v50;
  *(void *)(a2 + 48) = v36;
  *(unsigned char *)(a2 + 56) = v48;
  *(void *)(a2 + 64) = v47;
  *(_OWORD *)(a2 + 72) = v53;
  uint64_t v37 = v45;
  *(void *)(a2 + 88) = v46;
  *(void *)(a2 + 96) = v37;
  *(unsigned char *)(a2 + 104) = v31;
  *(void *)(a2 + 112) = v43;
  *(unsigned char *)(a2 + 120) = v42;
  *(void *)(a2 + 128) = v26;
  *(unsigned char *)(a2 + 136) = v33;
  *(void *)(a2 + 144) = v27;
  *(unsigned char *)(a2 + 152) = v34;
  *(void *)(a2 + 160) = v28;
  *(void *)(a2 + 168) = v29;
  *(void *)(a2 + 176) = v30;
  *(void *)(a2 + 184) = v38;
  *(void *)(a2 + 192) = v39;
  return result;
}

uint64_t sub_1000ABEE8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = sub_10003AFD0(&qword_100185148);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000AD314(a1, (uint64_t)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  sub_1000AD37C((uint64_t)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v12 + v11);
  uint64_t v16 = a1;
  sub_10003AFD0(&qword_100185150);
  sub_1000AD750();
  Button.init(action:label:)();
  LOBYTE(a1) = static Edge.Set.all.getter();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v8 + 16))(a2, v10, v7);
  uint64_t v13 = a2 + *(int *)(sub_10003AFD0(&qword_1001851C0) + 36);
  *(unsigned char *)uint64_t v13 = a1;
  *(_OWORD *)(v13 + 8) = 0u;
  *(_OWORD *)(v13 + 24) = 0u;
  *(unsigned char *)(v13 + 40) = 1;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1000AC120(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DismissAction();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[3] = type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  uint64_t v6 = sub_1000AD47C(v8);
  sub_1000AD314(a1, (uint64_t)v6);
  sub_1000AA4F0((uint64_t)v8, 2);
  sub_100042B0C((uint64_t)v8);
  objc_msgSend(objc_msgSend(self, "currentPlatform"), "showSceneStatusBar");
  swift_unknownObjectRelease();
  sub_1000E0650((uint64_t)v5);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1000AC270@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = Image.init(systemName:)();
  uint64_t v7 = static Font.title2.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v2 = static Color.white.getter();
  uint64_t v3 = swift_getKeyPath();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v4 = static Color.black.getter();
  uint64_t result = static Edge.Set.all.getter();
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = KeyPath;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v2;
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v4;
  *(unsigned char *)(a1 + 96) = result;
  return result;
}

uint64_t sub_1000AC384(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  __chkstk_darwin(v2);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10003C374(0, &qword_100185140);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v6 = [ObjCClassFromMetadata appearance];
  uint64_t v7 = self;
  id v8 = [v7 whiteColor];
  [v6 setCurrentPageIndicatorTintColor:v8];

  id v9 = [ObjCClassFromMetadata appearance];
  id v10 = [v7 whiteColor];
  id v11 = [v10 colorWithAlphaComponent:0.5];

  [v9 setPageIndicatorTintColor:v11];
  v16[3] = v2;
  char v12 = sub_1000AD47C(v16);
  sub_1000AD314(a1, (uint64_t)v12);
  sub_10003C5D8((uint64_t)v16, (uint64_t)v15);
  if (swift_dynamicCast())
  {
    sub_1000AB040((uint64_t)v4);
    qword_100184E30 = 30;
  }
  else
  {
    static os_log_type_t.error.getter();
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    uint64_t v13 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
  }
  return sub_100042B0C((uint64_t)v16);
}

void sub_1000AC5C4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + *(int *)(type metadata accessor for SelfServiceInstructionsFullScreenViewerView() + 40) + 8) == 1)
  {
    id v2 = [self sharedApplication];
    id v3 = [v2 connectedScenes];

    sub_10003C374(0, &qword_100183040);
    sub_1000468E0();
    uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000AB17C(v4);
    id v7 = v5;
    swift_bridgeObjectRelease();
    if (v7)
    {
      self;
      id v6 = (void *)swift_dynamicCastObjCClass();
      if (v6)
      {
        sub_1000AD46C((uint64_t)[v6 interfaceOrientation]);
        swift_retain();
        sub_10003AFD0(&qword_100185138);
        State.wrappedValue.setter();
        swift_release();
      }
      else
      {
      }
    }
  }
}

uint64_t sub_1000AC760()
{
  return EnvironmentValues.dismiss.getter();
}

uint64_t *sub_1000AC78C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    id v8 = (uint64_t *)((char *)a1 + v7);
    id v9 = (uint64_t *)((char *)a2 + v7);
    sub_10003AFD0(&qword_100185070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *id v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *((void *)v14 + 1);
    char v17 = v14[16];
    sub_1000AC938(*(void *)v14, v16, v17);
    *(void *)uint64_t v13 = v15;
    *((void *)v13 + 1) = v16;
    v13[16] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    uint64_t v20 = (char *)v4 + v18;
    uint64_t v21 = (char *)a2 + v18;
    char *v20 = *v21;
    *((void *)v20 + 1) = *((void *)v21 + 1);
    *(uint64_t *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    uint64_t v22 = a3[10];
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v23 = (char *)v4 + v22;
    char v24 = (char *)a2 + v22;
    v23[8] = v24[8];
    *(void *)uint64_t v23 = *(void *)v24;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1000AC938(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1000AC944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10003AFD0(&qword_100185070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_1000ACA18(*(void *)(a1 + *(int *)(a2 + 24)), *(void *)(a1 + *(int *)(a2 + 24) + 8), *(unsigned char *)(a1 + *(int *)(a2 + 24) + 16));
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000ACA18(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

void *sub_1000ACA24(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  id v8 = (void *)((char *)a2 + v6);
  sub_10003AFD0(&qword_100185070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for DismissAction();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *((void *)v12 + 1);
  char v15 = v12[16];
  sub_1000AC938(*(void *)v12, v14, v15);
  *(void *)uint64_t v11 = v13;
  *((void *)v11 + 1) = v14;
  v11[16] = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v16;
  uint64_t v19 = (char *)a2 + v16;
  *uint64_t v18 = *v19;
  *((void *)v18 + 1) = *((void *)v19 + 1);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v20 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  v21[8] = v22[8];
  *(void *)uint64_t v21 = *(void *)v22;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1000ACB80(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    id v8 = (void *)((char *)a2 + v6);
    sub_1000ACD14((uint64_t)a1 + v6);
    sub_10003AFD0(&qword_100185070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DismissAction();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *((void *)v12 + 1);
  char v15 = v12[16];
  sub_1000AC938(*(void *)v12, v14, v15);
  uint64_t v16 = *(void *)v11;
  uint64_t v17 = *((void *)v11 + 1);
  char v18 = v11[16];
  *(void *)uint64_t v11 = v13;
  *((void *)v11 + 1) = v14;
  v11[16] = v15;
  sub_1000ACA18(v16, v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  char *v20 = *v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_retain();
  swift_release();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v22 = a3[10];
  uint64_t v23 = (char *)a1 + v22;
  char v24 = (char *)a2 + v22;
  uint64_t v25 = *(void *)v24;
  v23[8] = v24[8];
  *(void *)uint64_t v23 = v25;
  return a1;
}

uint64_t sub_1000ACD14(uint64_t a1)
{
  uint64_t v2 = sub_10003AFD0(&qword_100185070);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1000ACD74(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10003AFD0(&qword_100185070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DismissAction();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v15 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)a1 + v16;
  char v18 = (char *)a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  return a1;
}

void *sub_1000ACEAC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    id v8 = (char *)a2 + v6;
    sub_1000ACD14((uint64_t)a1 + v6);
    uint64_t v9 = sub_10003AFD0(&qword_100185070);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DismissAction();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  char v14 = v13[16];
  uint64_t v15 = *(void *)v12;
  uint64_t v16 = *((void *)v12 + 1);
  char v17 = v12[16];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  v12[16] = v14;
  sub_1000ACA18(v15, v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  *uint64_t v19 = *v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_release();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  return a1;
}

uint64_t sub_1000AD024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000AD038);
}

uint64_t sub_1000AD038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10003AFD0(&qword_100185078);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1000AD100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000AD114);
}

uint64_t sub_1000AD114(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10003AFD0(&qword_100185078);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

void sub_1000AD1D8()
{
  sub_1000AD2A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000AD2A0()
{
  if (!qword_1001850E8)
  {
    type metadata accessor for DismissAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1001850E8);
    }
  }
}

uint64_t sub_1000AD2F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000AD314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AD37C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AD3E0()
{
  return sub_1000AD6D4(sub_1000AC384);
}

void sub_1000AD3FC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SelfServiceInstructionsFullScreenViewerView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_1000AC5C4(a1, v4);
}

BOOL sub_1000AD46C(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t *sub_1000AD47C(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1000AD4E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for SelfServiceInstructionsFullScreenViewerView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000ABEE8(v4, a1);
}

uint64_t sub_1000AD568()
{
  uint64_t v1 = type metadata accessor for SelfServiceInstructionsFullScreenViewerView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  sub_10003AFD0(&qword_100185070);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_1000ACA18(*(void *)(v0 + v3 + *(int *)(v1 + 24)), *(void *)(v0 + v3 + *(int *)(v1 + 24) + 8), *(unsigned char *)(v0 + v3 + *(int *)(v1 + 24) + 16));
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000AD6BC()
{
  return sub_1000AD6D4(sub_1000AC120);
}

uint64_t sub_1000AD6D4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for SelfServiceInstructionsFullScreenViewerView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1000AD748@<X0>(uint64_t a1@<X8>)
{
  return sub_1000AC270(a1);
}

unint64_t sub_1000AD750()
{
  unint64_t result = qword_100185158;
  if (!qword_100185158)
  {
    sub_10003B070(&qword_100185150);
    sub_1000AD7F0();
    sub_10004F7B0(&qword_1001851B0, &qword_1001851B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100185158);
  }
  return result;
}

unint64_t sub_1000AD7F0()
{
  unint64_t result = qword_100185160;
  if (!qword_100185160)
  {
    sub_10003B070(&qword_100185168);
    sub_1000AD890();
    sub_10004F7B0(&qword_100184AF8, &qword_100184B00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100185160);
  }
  return result;
}

unint64_t sub_1000AD890()
{
  unint64_t result = qword_100185170;
  if (!qword_100185170)
  {
    sub_10003B070(&qword_100185178);
    sub_1000AD90C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100185170);
  }
  return result;
}

unint64_t sub_1000AD90C()
{
  unint64_t result = qword_100185180;
  if (!qword_100185180)
  {
    sub_10003B070(&qword_100185188);
    sub_1000AD9AC();
    sub_10004F7B0(&qword_100184450, &qword_100184458);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100185180);
  }
  return result;
}

unint64_t sub_1000AD9AC()
{
  unint64_t result = qword_100185190;
  if (!qword_100185190)
  {
    sub_10003B070(&qword_100185198);
    sub_10004F7B0(&qword_1001851A0, &qword_1001851A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100185190);
  }
  return result;
}

uint64_t sub_1000ADA4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000ADA78()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1000ADAAC()
{
  return sub_10004F7B0(&qword_1001851C8, &qword_100185130);
}

id sub_1000ADAE8(uint64_t a1, unint64_t a2)
{
  sub_1000ADE6C(a1, (uint64_t)v24);
  uint64_t v4 = (void *)v24[2];
  uint64_t v5 = (void *)v24[3];
  uint64_t v6 = (void *)v24[4];
  sub_1000ADE6C(a1, (uint64_t)v27);
  if (v28)
  {
    if (v6) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v15 = self;
    sub_1000ADFC4(a1);
    NSString v16 = String._bridgeToObjectiveC()();
    NSString v17 = String._bridgeToObjectiveC()();
    id v14 = [v15 _systemImageNamed:v16 fallback:v17];

    if (!v14)
    {

      swift_bridgeObjectRelease();
      return v14;
    }
    id v10 = [v14 imageWithTintColor:v5];

    if (v10) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
  if (qword_100182800 != -1) {
    swift_once();
  }
  sub_1000F6BB0(a2, qword_10018A418, v23);
  sub_1000ADE6C((uint64_t)v23, (uint64_t)v25);
  if (!v25[1])
  {
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_100123B50;
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    uint64_t v19 = (void *)qword_10018A3E8;
    *(void *)(v18 + 56) = sub_1000999D0();
    *(void *)(v18 + 64) = sub_10004D94C();
    *(void *)(v18 + 32) = v19;
    id v20 = v19;
    uint64_t v21 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    return 0;
  }
  uint64_t v4 = (void *)v25[2];
  uint64_t v5 = (void *)v25[3];
  uint64_t v6 = v26;
  if (!v26) {
    goto LABEL_10;
  }
LABEL_3:
  swift_bridgeObjectRetain();
  id v7 = v6;
  sub_1000ADFC4(a1);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self systemImageNamed:v8];

  if (!v9)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  id v10 = [v9 imageWithTintColor:v7 renderingMode:1];

  if (!v10)
  {
LABEL_12:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  uint64_t v11 = self;
  id v12 = v10;
  id v13 = [v11 configurationWithFont:v4];
  id v14 = [v12 imageWithConfiguration:v13];

  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1000ADE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_1001851D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1000ADED4()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.0 green:0.478431373 blue:1.0 alpha:1.0];
  qword_10018A400 = (uint64_t)result;
  return result;
}

id sub_1000ADF1C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:0.607843137 alpha:1.0];
  qword_10018A408 = (uint64_t)result;
  return result;
}

id sub_1000ADF5C()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:0.584313725 blue:0.0 alpha:1.0];
  qword_10018A410 = (uint64_t)result;
  return result;
}

void *sub_1000ADFA4()
{
  id result = sub_1000AE054();
  qword_10018A418 = (uint64_t)result;
  return result;
}

uint64_t sub_1000ADFC4(uint64_t a1)
{
  return a1;
}

void sub_1000ADFF8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  if (a2)
  {
    id v6 = a5;
    swift_bridgeObjectRetain();
    id v7 = a3;
    id v8 = a4;
  }
}

void *sub_1000AE054()
{
  id v0 = [self sharedApplication];
  id v1 = [v0 userInterfaceLayoutDirection];

  uint64_t v2 = 7;
  unint64_t v3 = 0xD00000000000001CLL;
  if (!v1) {
    unint64_t v3 = 0xD00000000000001DLL;
  }
  unint64_t v115 = v3;
  if (v1) {
    unint64_t v4 = 0x800000010012F860;
  }
  else {
    unint64_t v4 = 0x800000010012F880;
  }
  unint64_t v5 = 0xD000000000000018;
  if (!v1) {
    unint64_t v5 = 0xD000000000000019;
  }
  unint64_t v113 = v5;
  unint64_t v114 = v4;
  unint64_t v6 = 0x800000010012F8A0;
  if (!v1) {
    unint64_t v6 = 0x800000010012F8C0;
  }
  unint64_t v112 = v6;
  id v7 = &byte_10014C678;
  while (2)
  {
    int v12 = *v7++;
    switch(v12)
    {
      case 1:
        id v25 = [self systemFontOfSize:22.0];
        id v26 = [self whiteColor];
        if (qword_1001827F0 != -1) {
          swift_once();
        }
        id v27 = (id)qword_10018A408;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v57 = sub_10007D8D0(1u);
        uint64_t v58 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v59 = (v56 & 1) == 0;
        uint64_t v60 = v58 + v59;
        if (__OFADD__(v58, v59)) {
          goto LABEL_117;
        }
        char v61 = v56;
        if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v60)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            if (v56) {
              goto LABEL_78;
            }
          }
          else
          {
            sub_1000FEFA4();
            if (v61) {
              goto LABEL_78;
            }
          }
        }
        else
        {
          sub_1000FCE3C(v60, isUniquelyReferenced_nonNull_native);
          unint64_t v62 = sub_10007D8D0(1u);
          if ((v61 & 1) != (v63 & 1)) {
            goto LABEL_127;
          }
          unint64_t v57 = v62;
          if (v61)
          {
LABEL_78:
            uint64_t v82 = *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v57;
            uint64_t v93 = *(void **)(v82 + 16);
            uint64_t v94 = *(void **)(v82 + 32);

            swift_bridgeObjectRelease();
            unint64_t v85 = 0x800000010012F900;
            *(void *)uint64_t v82 = 0xD000000000000010;
            goto LABEL_85;
          }
        }
        *((void *)&_swiftEmptyDictionarySingleton + (v57 >> 6) + 8) |= 1 << v57;
        *(unsigned char *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + v57) = 1;
        uint64_t v105 = (void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v57);
        *uint64_t v105 = 0xD000000000000010;
        v105[1] = 0x800000010012F900;
        v105[2] = v25;
        v105[3] = v26;
        v105[4] = v27;
        uint64_t v106 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v10 = __OFADD__(v106, 1);
        uint64_t v11 = v106 + 1;
        if (v10) {
          goto LABEL_125;
        }
        goto LABEL_12;
      case 2:
        id v25 = [self systemFontOfSize:22.0];
        id v26 = [self whiteColor];
        if (qword_1001827E8 != -1) {
          swift_once();
        }
        id v27 = (id)qword_10018A400;
        char v37 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v39 = sub_10007D8D0(2u);
        uint64_t v40 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v41 = (v38 & 1) == 0;
        uint64_t v42 = v40 + v41;
        if (__OFADD__(v40, v41)) {
          goto LABEL_115;
        }
        char v43 = v38;
        if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v42)
        {
          if (v37)
          {
            if (v38) {
              goto LABEL_69;
            }
          }
          else
          {
            sub_1000FEFA4();
            if (v43) {
              goto LABEL_69;
            }
          }
        }
        else
        {
          sub_1000FCE3C(v42, v37);
          unint64_t v44 = sub_10007D8D0(2u);
          if ((v43 & 1) != (v45 & 1)) {
            goto LABEL_127;
          }
          unint64_t v39 = v44;
          if (v43)
          {
LABEL_69:
            uint64_t v82 = *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v39;
            uint64_t v86 = *(void **)(v82 + 16);
            uint64_t v87 = *(void **)(v82 + 32);

            swift_bridgeObjectRelease();
            *(void *)uint64_t v82 = 0xD000000000000014;
            unint64_t v85 = 0x800000010012F8E0;
            goto LABEL_85;
          }
        }
        *((void *)&_swiftEmptyDictionarySingleton + (v39 >> 6) + 8) |= 1 << v39;
        *(unsigned char *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + v39) = 2;
        uint64_t v99 = (void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v39);
        *uint64_t v99 = 0xD000000000000014;
        v99[1] = 0x800000010012F8E0;
        v99[2] = v25;
        v99[3] = v26;
        v99[4] = v27;
        uint64_t v100 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v10 = __OFADD__(v100, 1);
        uint64_t v11 = v100 + 1;
        if (v10) {
          goto LABEL_123;
        }
        goto LABEL_12;
      case 3:
        id v25 = [self systemFontOfSize:22.0];
        id v26 = [self whiteColor];
        if (qword_1001827F0 != -1) {
          swift_once();
        }
        id v27 = (id)qword_10018A408;
        char v46 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v48 = sub_10007D8D0(3u);
        uint64_t v49 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v50 = (v47 & 1) == 0;
        uint64_t v51 = v49 + v50;
        if (__OFADD__(v49, v50)) {
          goto LABEL_116;
        }
        char v52 = v47;
        if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v51)
        {
          if (v46)
          {
            if (v47) {
              goto LABEL_72;
            }
          }
          else
          {
            sub_1000FEFA4();
            if (v52) {
              goto LABEL_72;
            }
          }
        }
        else
        {
          sub_1000FCE3C(v51, v46);
          unint64_t v53 = sub_10007D8D0(3u);
          if ((v52 & 1) != (v54 & 1)) {
            goto LABEL_127;
          }
          unint64_t v48 = v53;
          if (v52)
          {
LABEL_72:
            uint64_t v82 = *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v48;
            char v88 = *(void **)(v82 + 16);
            uint64_t v89 = *(void **)(v82 + 32);

            swift_bridgeObjectRelease();
            *(void *)uint64_t v82 = 0xD000000000000014;
            *(void *)(v82 + 8) = 0x800000010012F8E0;
            goto LABEL_86;
          }
        }
        *((void *)&_swiftEmptyDictionarySingleton + (v48 >> 6) + 8) |= 1 << v48;
        *(unsigned char *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + v48) = 3;
        uint64_t v101 = (void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v48);
        *uint64_t v101 = 0xD000000000000014;
        v101[1] = 0x800000010012F8E0;
        v101[2] = v25;
        v101[3] = v26;
        v101[4] = v27;
        uint64_t v102 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v10 = __OFADD__(v102, 1);
        uint64_t v11 = v102 + 1;
        if (v10) {
          goto LABEL_124;
        }
        goto LABEL_12;
      case 4:
        id v25 = [self systemFontOfSize:32.0];
        id v26 = [self whiteColor];
        if (qword_1001827E8 != -1) {
          swift_once();
        }
        id v27 = (id)qword_10018A400;
        char v28 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v30 = sub_10007D8D0(4u);
        uint64_t v31 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v32 = (v29 & 1) == 0;
        uint64_t v33 = v31 + v32;
        if (__OFADD__(v31, v32))
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          JUMPOUT(0x1000AEE6CLL);
        }
        char v34 = v29;
        if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v33)
        {
          if (v28)
          {
            if (v29) {
              goto LABEL_66;
            }
          }
          else
          {
            sub_1000FEFA4();
            if (v34) {
              goto LABEL_66;
            }
          }
        }
        else
        {
          sub_1000FCE3C(v33, v28);
          unint64_t v35 = sub_10007D8D0(4u);
          if ((v34 & 1) != (v36 & 1)) {
            goto LABEL_127;
          }
          unint64_t v30 = v35;
          if (v34)
          {
LABEL_66:
            uint64_t v82 = *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v30;
            uint64_t v83 = *(void **)(v82 + 16);
            id v84 = *(void **)(v82 + 32);

            swift_bridgeObjectRelease();
            *(void *)uint64_t v82 = v113;
            unint64_t v85 = v112;
            goto LABEL_85;
          }
        }
        *((void *)&_swiftEmptyDictionarySingleton + (v30 >> 6) + 8) |= 1 << v30;
        *(unsigned char *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + v30) = 4;
        id v8 = (unint64_t *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v30);
        *id v8 = v113;
        v8[1] = v112;
        void v8[2] = (unint64_t)v25;
        v8[3] = (unint64_t)v26;
        uint64_t v8[4] = (unint64_t)v27;
        uint64_t v9 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v10 = __OFADD__(v9, 1);
        uint64_t v11 = v9 + 1;
        if (v10) {
          goto LABEL_121;
        }
        goto LABEL_12;
      case 5:
        id v25 = [self systemFontOfSize:32.0];
        id v26 = [self whiteColor];
        if (qword_1001827F0 != -1) {
          swift_once();
        }
        id v27 = (id)qword_10018A408;
        char v64 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v66 = sub_10007D8D0(5u);
        uint64_t v67 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v68 = (v65 & 1) == 0;
        uint64_t v69 = v67 + v68;
        if (__OFADD__(v67, v68)) {
          goto LABEL_118;
        }
        char v70 = v65;
        if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v69)
        {
          if (v64)
          {
            if (v65) {
              goto LABEL_81;
            }
          }
          else
          {
            sub_1000FEFA4();
            if (v70) {
              goto LABEL_81;
            }
          }
        }
        else
        {
          sub_1000FCE3C(v69, v64);
          unint64_t v71 = sub_10007D8D0(5u);
          if ((v70 & 1) != (v72 & 1)) {
            goto LABEL_127;
          }
          unint64_t v66 = v71;
          if (v70)
          {
LABEL_81:
            uint64_t v82 = *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v66;
            uint64_t v95 = *(void **)(v82 + 16);
            uint64_t v96 = *(void **)(v82 + 32);

            swift_bridgeObjectRelease();
            *(void *)uint64_t v82 = 0xD000000000000011;
            unint64_t v85 = 0x800000010012C360;
            goto LABEL_85;
          }
        }
        *((void *)&_swiftEmptyDictionarySingleton + (v66 >> 6) + 8) |= 1 << v66;
        *(unsigned char *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + v66) = 5;
        uint64_t v107 = (void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v66);
        void *v107 = 0xD000000000000011;
        v107[1] = 0x800000010012C360;
        v107[2] = v25;
        v107[3] = v26;
        v107[4] = v27;
        uint64_t v108 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v10 = __OFADD__(v108, 1);
        uint64_t v11 = v108 + 1;
        if (v10) {
          goto LABEL_126;
        }
        goto LABEL_12;
      case 6:
        id v25 = [self systemFontOfSize:32.0];
        id v26 = [self whiteColor];
        if (qword_1001827F8 != -1) {
          swift_once();
        }
        id v27 = (id)qword_10018A410;
        char v73 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v75 = sub_10007D8D0(6u);
        uint64_t v76 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v77 = (v74 & 1) == 0;
        uint64_t v78 = v76 + v77;
        if (__OFADD__(v76, v77)) {
          goto LABEL_119;
        }
        char v79 = v74;
        if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v78)
        {
          if (v73)
          {
            if ((v74 & 1) == 0) {
              goto LABEL_110;
            }
          }
          else
          {
            sub_1000FEFA4();
            if ((v79 & 1) == 0) {
              goto LABEL_110;
            }
          }
LABEL_84:
          uint64_t v82 = *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v75;
          uint64_t v97 = *(void **)(v82 + 16);
          uint64_t v98 = *(void **)(v82 + 32);

          swift_bridgeObjectRelease();
          *(void *)uint64_t v82 = v115;
          unint64_t v85 = v114;
LABEL_85:
          *(void *)(v82 + 8) = v85;
LABEL_86:
          *(void *)(v82 + 16) = v25;
          *(void *)(v82 + 24) = v26;
          *(void *)(v82 + 32) = v27;
LABEL_13:
          swift_bridgeObjectRelease();
          if (!--v2) {
            return &_swiftEmptyDictionarySingleton;
          }
          continue;
        }
        sub_1000FCE3C(v78, v73);
        unint64_t v80 = sub_10007D8D0(6u);
        if ((v79 & 1) != (v81 & 1)) {
          goto LABEL_127;
        }
        unint64_t v75 = v80;
        if (v79) {
          goto LABEL_84;
        }
LABEL_110:
        *((void *)&_swiftEmptyDictionarySingleton + (v75 >> 6) + 8) |= 1 << v75;
        *(unsigned char *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + v75) = 6;
        long long v109 = (unint64_t *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v75);
        *long long v109 = v115;
        v109[1] = v114;
        v109[2] = (unint64_t)v25;
        v109[3] = (unint64_t)v26;
        v109[4] = (unint64_t)v27;
        uint64_t v110 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v10 = __OFADD__(v110, 1);
        uint64_t v11 = v110 + 1;
        if (!v10)
        {
LABEL_12:
          *((void *)&_swiftEmptyDictionarySingleton + 2) = v11;
          goto LABEL_13;
        }
        __break(1u);
        return &_swiftEmptyDictionarySingleton;
      default:
        id v13 = [self systemFontOfSize:22.0];
        id v14 = [self whiteColor];
        if (qword_1001827E8 != -1) {
          swift_once();
        }
        id v15 = (id)qword_10018A400;
        char v16 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v18 = sub_10007D8D0(0);
        uint64_t v19 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v20 = (v17 & 1) == 0;
        uint64_t v21 = v19 + v20;
        if (__OFADD__(v19, v20)) {
          goto LABEL_120;
        }
        char v22 = v17;
        if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v21)
        {
          if (v16)
          {
            if (v17) {
              goto LABEL_75;
            }
          }
          else
          {
            sub_1000FEFA4();
            if (v22) {
              goto LABEL_75;
            }
          }
        }
        else
        {
          sub_1000FCE3C(v21, v16);
          unint64_t v23 = sub_10007D8D0(0);
          if ((v22 & 1) != (v24 & 1)) {
            goto LABEL_127;
          }
          unint64_t v18 = v23;
          if (v22)
          {
LABEL_75:
            uint64_t v90 = *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v18;
            __int16 v91 = *(void **)(v90 + 16);
            uint64_t v92 = *(void **)(v90 + 32);

            swift_bridgeObjectRelease();
            *(void *)uint64_t v90 = 0xD000000000000010;
            *(void *)(v90 + 8) = 0x800000010012F900;
            *(void *)(v90 + 16) = v13;
            *(void *)(v90 + 24) = v14;
            *(void *)(v90 + 32) = v15;
            goto LABEL_13;
          }
        }
        *((void *)&_swiftEmptyDictionarySingleton + (v18 >> 6) + 8) |= 1 << v18;
        *(unsigned char *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + v18) = 0;
        uint64_t v103 = (void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v18);
        *uint64_t v103 = 0xD000000000000010;
        v103[1] = 0x800000010012F900;
        v103[2] = v13;
        v103[3] = v14;
        v103[4] = v15;
        uint64_t v104 = *((void *)&_swiftEmptyDictionarySingleton + 2);
        BOOL v10 = __OFADD__(v104, 1);
        uint64_t v11 = v104 + 1;
        if (v10) {
          goto LABEL_122;
        }
        goto LABEL_12;
    }
  }
}

void sub_1000AEE88(void *a1@<X8>)
{
  *a1 = &off_10014C658;
}

void destroy for Glyph.Attributes(uint64_t a1)
{
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for Glyph.Attributes(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unint64_t v4 = (void *)a2[2];
  unint64_t v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  unint64_t v6 = (void *)a2[4];
  a1[4] = v6;
  swift_bridgeObjectRetain();
  id v7 = v4;
  id v8 = v5;
  id v9 = v6;
  return a1;
}

void *assignWithCopy for Glyph.Attributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = (void *)a2[2];
  unint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  id v7 = (void *)a2[3];
  id v8 = (void *)a1[3];
  a1[3] = v7;
  id v9 = v7;

  BOOL v10 = (void *)a1[4];
  uint64_t v11 = (void *)a2[4];
  a1[4] = v11;
  id v12 = v11;

  return a1;
}

uint64_t assignWithTake for Glyph.Attributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  unint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for Glyph.Attributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Glyph.Attributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Glyph.Attributes()
{
  return &type metadata for Glyph.Attributes;
}

uint64_t getEnumTagSinglePayload for Glyph(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Glyph(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *id result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AF220);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Glyph()
{
  return &type metadata for Glyph;
}

unint64_t sub_1000AF25C()
{
  unint64_t result = qword_1001851D8;
  if (!qword_1001851D8)
  {
    sub_10003B070(&qword_1001851E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001851D8);
  }
  return result;
}

unint64_t sub_1000AF2BC()
{
  unint64_t result = qword_1001851E8;
  if (!qword_1001851E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001851E8);
  }
  return result;
}

uint64_t sub_1000AF310(int a1)
{
  int v1 = a1 - 1;
  uint64_t result = 1684107369;
  switch(v1)
  {
    case 0:
      uint64_t result = 0x656E6F687069;
      break;
    case 1:
      uint64_t result = 1685024873;
      break;
    case 2:
      return result;
    case 3:
      uint64_t result = 0x7674656C707061;
      break;
    case 5:
      uint64_t result = 0x6863746177;
      break;
    case 10:
      uint64_t result = 0x6E6F69736976;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

id sub_1000AF3E8()
{
  int v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView);
  [v1 hideCheck];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  int v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView);
  id v3 = [self labelColor];
  [v2 setBackgroundColor:v3];

  return [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
}

id sub_1000AF4A0()
{
  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView]];
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView];

  return [v0 addSubview:v1];
}

void sub_1000AF4FC()
{
  uint64_t v1 = v0;
  int v2 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100124BC0;
  unsigned int v4 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView];
  id v5 = [v4 centerXAnchor];
  id v6 = [v1 centerXAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = [v4 centerYAnchor];
  id v9 = [v1 centerYAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9 constant:1.0];

  *(void *)(v3 + 40) = v10;
  id v11 = [v4 widthAnchor];
  id v12 = [v1 widthAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12 constant:-12.0];

  *(void *)(v3 + 48) = v13;
  id v14 = [v4 heightAnchor];
  id v15 = [v1 heightAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15 constant:-12.0];

  *(void *)(v3 + 56) = v16;
  char v17 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView];
  id v18 = [v17 topAnchor];
  id v19 = [v1 topAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v3 + 64) = v20;
  id v21 = [v17 bottomAnchor];
  id v22 = [v1 bottomAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v3 + 72) = v23;
  id v24 = [v17 leadingAnchor];
  id v25 = [v1 leadingAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  *(void *)(v3 + 80) = v26;
  id v27 = [v17 trailingAnchor];
  id v28 = [v1 trailingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  *(void *)(v3 + 88) = v29;
  specialized Array._endMutation()();
  sub_10005C04C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_1000AF8E0(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_yOffset] = 0x3FF0000000000000;
  *(void *)&v4[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_padding] = 0xC028000000000000;
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView;
  id v10 = self;
  id v11 = v4;
  id v12 = [v10 systemBackgroundColor];
  id v13 = [objc_allocWithZone((Class)DACheckAnimationView) initWithColor:v12 lineWidth:2.5 scale:0.33];

  *(void *)&v4[v9] = v13;
  uint64_t v14 = OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)UIView) init];

  v16.receiver = v11;
  v16.Class super_class = (Class)type metadata accessor for CheckmarkView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_1000AFA38(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_yOffset] = 0x3FF0000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics13CheckmarkView_padding] = 0xC028000000000000;
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics13CheckmarkView_checkAnimationView;
  unsigned int v4 = self;
  id v5 = v1;
  id v6 = [v4 systemBackgroundColor];
  id v7 = [objc_allocWithZone((Class)DACheckAnimationView) initWithColor:v6 lineWidth:2.5 scale:0.33];

  *(void *)&v1[v3] = v7;
  uint64_t v8 = OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)UIView) init];

  v11.receiver = v5;
  v11.Class super_class = (Class)type metadata accessor for CheckmarkView();
  [super initWithCoder:a1];

  return v9;
}

void sub_1000AFB78()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics13CheckmarkView_circleView);
}

id sub_1000AFBB8()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CheckmarkView();
  [super dealloc];
}

uint64_t type metadata accessor for CheckmarkView()
{
  return self;
}

id sub_1000AFD30()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for BaseTableView();
  [super dealloc];
}

uint64_t type metadata accessor for BaseTableView()
{
  return self;
}

id sub_1000AFD88()
{
  sub_1000934C8();
  v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate];
  void *v1 = v0;
  v1[1] = &off_100152390;
  objc_super v2 = v0;
  swift_unknownObjectRelease();
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView;
  unsigned int v4 = *(void **)&v2[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView];
  id v5 = self;
  id v6 = v4;
  id v7 = [v5 clearColor];
  [v6 setBackgroundColor:v7];

  [*(id *)&v2[v3] setEstimatedRowHeight:60.0];
  uint64_t v8 = *(void **)&v2[v3];
  id v9 = objc_allocWithZone((Class)UIView);
  id v10 = v8;
  id v11 = [v9 initWithFrame:0.0, 0.0, 0.0, 0.1];
  [v10 setTableHeaderView:v11];

  [*(id *)&v2[v3] setRowHeight:UITableViewAutomaticDimension];
  [*(id *)&v2[v3] setDelegate:v2];
  id v12 = *(void **)&v2[v3];

  return [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
}

id sub_1000AFF10()
{
  return sub_1000B1A0C();
}

void sub_1000AFF18()
{
  sub_100093B7C();
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView]];
  }
  else
  {
    __break(1u);
  }
}

void sub_1000AFF88()
{
  sub_100093CE4();
  if (v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_enableTitleAndBody] == 1)
  {
    id v1 = [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView] bottomAnchor];
  }
  else
  {
    id v2 = [v0 view];
    if (!v2)
    {
LABEL_16:
      __break(1u);
      return;
    }
    uint64_t v3 = v2;
    id v4 = [v2 safeAreaLayoutGuide];

    id v1 = [v4 topAnchor];
  }
  id v5 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel];
  id v6 = [v0 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v7 = v6;
  uint64_t v98 = v1;
  [v6 center];
  double v9 = v8;

  [v5 center];
  [v5 setCenter:v9];
  id v10 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView];
  id v11 = [v0 view];
  if (!v11)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v12 = v11;
  [v11 center];
  double v14 = v13;

  [v10 center];
  [v10 setCenter:v14];
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100125C20;
  id v16 = sub_1000B0A40();
  id v17 = [v16 contentView];

  id v18 = [v17 topAnchor];
  id v19 = sub_1000B0A40();
  id v20 = [v19 topAnchor];

  id v21 = [v18 constraintEqualToAnchor:v20];
  *(void *)(v15 + 32) = v21;
  id v22 = sub_1000B0A40();
  id v23 = [v22 contentView];

  id v24 = [v23 leadingAnchor];
  id v25 = sub_1000B0A40();
  id v26 = [v25 leadingAnchor];

  id v27 = [v24 constraintEqualToAnchor:v26];
  *(void *)(v15 + 40) = v27;
  id v28 = sub_1000B0A40();
  id v29 = [v28 contentView];

  id v30 = [v29 trailingAnchor];
  id v31 = sub_1000B0A40();
  id v32 = [v31 trailingAnchor];

  id v33 = [v30 constraintEqualToAnchor:v32];
  *(void *)(v15 + 48) = v33;
  id v34 = sub_1000B0A40();
  id v35 = [v34 contentView];

  id v36 = [v35 bottomAnchor];
  id v37 = sub_1000B0A40();
  id v38 = [v37 bottomAnchor];

  id v39 = [v36 constraintEqualToAnchor:v38];
  *(void *)(v15 + 56) = v39;
  id v40 = [v5 topAnchor];
  id v41 = sub_1000B0A40();
  id v42 = [v41 contentView];

  id v43 = [v42 safeAreaLayoutGuide];
  id v44 = [v43 topAnchor];

  id v45 = [v40 constraintEqualToAnchor:v44 constant:10.0];
  *(void *)(v15 + 64) = v45;
  id v46 = [v5 leadingAnchor];
  id v47 = sub_1000B0A40();
  id v48 = [v47 contentView];

  id v49 = [v48 safeAreaLayoutGuide];
  id v50 = [v49 leadingAnchor];

  id v51 = [v46 constraintEqualToAnchor:v50 constant:20.0];
  *(void *)(v15 + 72) = v51;
  id v52 = [v5 trailingAnchor];
  id v53 = sub_1000B0A40();
  id v54 = [v53 contentView];

  id v55 = [v54 safeAreaLayoutGuide];
  id v56 = [v55 trailingAnchor];

  id v57 = [v52 constraintEqualToAnchor:v56 constant:-20.0];
  *(void *)(v15 + 80) = v57;
  id v58 = [v10 topAnchor];
  id v59 = [v5 bottomAnchor];
  id v60 = [v58 constraintEqualToAnchor:v59 constant:15.0];

  *(void *)(v15 + 88) = v60;
  id v61 = [v10 leadingAnchor];
  id v62 = sub_1000B0A40();
  id v63 = [v62 contentView];

  id v64 = [v63 safeAreaLayoutGuide];
  id v65 = [v64 leadingAnchor];

  id v66 = [v61 constraintEqualToAnchor:v65 constant:20.0];
  *(void *)(v15 + 96) = v66;
  id v67 = [v10 trailingAnchor];
  id v68 = sub_1000B0A40();
  id v69 = [v68 contentView];

  id v70 = [v69 safeAreaLayoutGuide];
  id v71 = [v70 trailingAnchor];

  id v72 = [v67 constraintEqualToAnchor:v71 constant:-20.0];
  *(void *)(v15 + 104) = v72;
  id v73 = [v10 bottomAnchor];
  id v74 = sub_1000B0A40();
  id v75 = [v74 contentView];

  id v76 = [v75 safeAreaLayoutGuide];
  id v77 = [v76 bottomAnchor];

  id v78 = [v73 constraintEqualToAnchor:v77];
  *(void *)(v15 + 112) = v78;
  uint64_t v79 = OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView;
  id v80 = [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView] topAnchor];
  id v81 = [v80 constraintEqualToAnchor:v98];

  *(void *)(v15 + 120) = v81;
  id v82 = [*(id *)&v0[v79] leadingAnchor];
  id v83 = [v0 view];
  if (!v83)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v84 = v83;
  id v85 = [v83 safeAreaLayoutGuide];

  id v86 = [v85 leadingAnchor];
  id v87 = [v82 constraintEqualToAnchor:v86];

  *(void *)(v15 + 128) = v87;
  id v88 = [*(id *)&v0[v79] trailingAnchor];
  id v89 = [v0 view];
  if (!v89)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v90 = v89;
  __int16 v91 = self;
  id v92 = [v90 safeAreaLayoutGuide];

  id v93 = [v92 trailingAnchor];
  id v94 = [v88 constraintEqualToAnchor:v93];

  *(void *)(v15 + 136) = v94;
  id v95 = [*(id *)&v0[v79] bottomAnchor];
  id v96 = [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_primaryButton] topAnchor];
  id v97 = [v95 constraintEqualToAnchor:v96 constant:-20.0];

  *(void *)(v15 + 144) = v97;
  specialized Array._endMutation()();
  sub_10005C04C();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v91 activateConstraints:isa];
}

id sub_1000B0A40()
{
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell);
  }
  else
  {
    id v4 = sub_1000B0E68(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1000B0B74()
{
  return 0;
}

uint64_t sub_1000B0B7C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = IndexPath.section.getter();
  if (result)
  {
    IndexPath.row.getter();
    uint64_t result = IndexPath.section.getter();
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t result = IndexPath.init(row:section:)();
      if (*(void *)(v1 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate))
      {
        uint64_t v8 = *(void *)(v1
                       + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate
                       + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v8 + 24))(a1, v6, ObjectType, v8);
        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      }
    }
    __break(1u);
  }
  return result;
}

id sub_1000B0E68(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UITableViewCell) init];
  uint64_t v3 = self;
  id v4 = v2;
  id v5 = [v3 clearColor];
  [v4 setBackgroundColor:v5];

  id v6 = [v4 contentView];
  [v6 addSubview:*(void *)(a1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_titleLabel)];

  id v7 = [v4 contentView];
  [v7 addSubview:*(void *)(a1 + OBJC_IVAR____TtC11Diagnostics27ConsentNoticeViewController_bodyTextView)];

  [v4 setSelectionStyle:0];
  id v8 = [v4 contentView];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];

  return v4;
}

id sub_1000B0FB8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IndexPath.section.getter())
  {
    IndexPath.row.getter();
    id result = (id)IndexPath.section.getter();
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else
    {
      id result = (id)IndexPath.init(row:section:)();
      if (*(void *)(v1 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate))
      {
        uint64_t v8 = *(void *)(v1
                       + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate
                       + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v10 = *(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v8 + 8);
        swift_unknownObjectRetain();
        uint64_t v11 = v10(a1, v6, ObjectType, v8);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        return (id)v11;
      }
    }
    __break(1u);
  }
  else
  {
    return sub_1000B0A40();
  }
  return result;
}

uint64_t sub_1000B1268(void *a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [a1 deselectRowAtIndexPath:isa animated:1];

  uint64_t result = IndexPath.section.getter();
  if (result)
  {
    IndexPath.row.getter();
    uint64_t result = IndexPath.section.getter();
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t result = IndexPath.init(row:section:)();
      if (*(void *)(v1 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate))
      {
        uint64_t v9 = *(void *)(v1
                       + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate
                       + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v11 = *(void (**)(void *, char *, uint64_t, uint64_t))(v9 + 32);
        swift_unknownObjectRetain();
        v11(a1, v6, ObjectType, v9);
        swift_unknownObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      }
    }
    __break(1u);
  }
  return result;
}

id sub_1000B15D0()
{
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_cellHeight] = 0x404E000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_fontSizeTableCell] = 0x4031000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_fontSizeTableCellDetail] = 0x402A000000000000;
  *(void *)&v0[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_headerSection] = 0;
  uint64_t v1 = OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView;
  id v2 = objc_allocWithZone((Class)UITableView);
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 initWithFrame:1 style:0.0, 0.0, 0.0, 0.0];
  uint64_t v4 = &v3[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell] = 0;

  v6.receiver = v3;
  v6.Class super_class = (Class)type metadata accessor for ConsentNoticeTableViewController();
  return [super init];
}

id sub_1000B16DC(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_cellHeight] = 0x404E000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_fontSizeTableCell] = 0x4031000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_fontSizeTableCellDetail] = 0x402A000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_headerSection] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_tableView;
  id v4 = objc_allocWithZone((Class)UITableView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 initWithFrame:1 style:0.0, 0.0, 0.0, 0.0];
  objc_super v6 = &v5[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController_consentTableViewDelegate];
  *(void *)objc_super v6 = 0;
  *((void *)v6 + 1) = 0;
  *(void *)&v5[OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell] = 0;

  v9.receiver = v5;
  v9.Class super_class = (Class)type metadata accessor for ConsentNoticeTableViewController();
  id v7 = [super initWithCoder:a1];

  return v7;
}

void sub_1000B1808()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics32ConsentNoticeTableViewController____lazy_storage___headerCell);
}

id sub_1000B1858()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for ConsentNoticeTableViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for ConsentNoticeTableViewController()
{
  return self;
}

uint64_t sub_1000B190C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2B8))();
}

uint64_t sub_1000B1948()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x288))();
}

CGFloat sub_1000B1984()
{
  return UITableViewAutomaticDimension;
}

uint64_t sub_1000B1994()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2C0))();
}

uint64_t sub_1000B19D0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x298))();
}

id sub_1000B1A0C()
{
  id v0 = objc_allocWithZone((Class)UITableViewCell);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithStyle:3 reuseIdentifier:v1];

  uint64_t v3 = self;
  id v4 = v2;
  id v5 = [v3 clearColor];
  [v4 setBackgroundColor:v5];

  objc_super v6 = self;
  id v7 = [v6 defaultMetrics];
  uint64_t v8 = self;
  id v9 = [v8 systemFontOfSize:17.0 weight:UIFontWeightBold];
  id v10 = [v7 scaledFontForFont:v9];

  id v11 = [v4 textLabel];
  if (v11)
  {
    uint64_t v12 = v11;
    [v11 setFont:v10];
  }
  id v13 = [v6 defaultMetrics];
  id v14 = [v8 systemFontOfSize:13.0];
  id v15 = [v13 scaledFontForFont:v14];

  id v16 = [v4 detailTextLabel];
  if (v16)
  {
    id v17 = v16;
    [v16 setFont:v15];
  }
  id v18 = [v4 detailTextLabel];
  if (v18)
  {
    id v19 = v18;
    id v20 = [v3 secondaryLabelColor];
    [v19 setTextColor:v20];
  }
  return v4;
}

void *sub_1000B1C94(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = &_swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      swift_errorRetain();
      swift_errorRetain();
      sub_10003AFD0(&qword_100185690);
      sub_10003C374(0, (unint64_t *)&unk_100185900);
      swift_dynamicCast();
      swift_errorRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v2;
    }
    while (v2);
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1000B1DA8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    id v9 = _swiftEmptyArrayStorage;
    sub_10005FB88(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      sub_10003AFD0(&qword_100185678);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10005FB88(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_10005FB88(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      _OWORD v2[2] = v6 + 1;
      sub_100078AC4(&v8, &v2[4 * v6 + 4]);
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_1000B1ED4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    id v9 = _swiftEmptyArrayStorage;
    sub_10005FB88(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10005FB88(0, v2[2] + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_10005FB88(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      v4 += 16;
      _OWORD v2[2] = v6 + 1;
      sub_100078AC4(&v8, &v2[4 * v6 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_1000B1FFC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 56);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_10007D7FC(a1, a2);
    if (v7)
    {
      long long v8 = *(void **)(*(void *)(v5 + 56) + 8 * v6);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v9 = [v8 state];
      id v10 = [v9 phase];

      if (v10)
      {
        id v11 = [v8 state];
        id v12 = [v11 phase];

        if (v12 != (id)1) {
          goto LABEL_9;
        }
      }
      id v13 = [v8 state];
      id v14 = [v13 phase];

      if (v14 == (id)1)
      {
        sub_10003C374(0, (unint64_t *)&qword_1001832C0);
        id v15 = (void *)static OS_os_log.default.getter();
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();

        id v16 = [v8 state];
        [v16 resetState];
      }
      id v17 = [v8 state];
      [v17 setPhase:2];

      self;
      if (swift_dynamicCastObjCClass())
      {
        [v8 start];
LABEL_9:
        swift_unknownObjectRelease();
        return;
      }
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v8;
      id v19 = self;
      swift_unknownObjectRetain_n();
      if ([v19 isSSRBootIntentSet])
      {
        byte_100184CF8 = 2;
        [v8 start];
        swift_release();
        swift_unknownObjectRelease_n();
      }
      else
      {
        if (qword_1001827C8 != -1) {
          swift_once();
        }
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();
        id v20 = [objc_allocWithZone((Class)DADiagnosticsSessionAvailability) init];
        if (qword_10018A3F8)
        {
          swift_bridgeObjectRetain();
          NSString v21 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v21 = 0;
        }
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = sub_1000B4DDC;
        *(void *)(v22 + 24) = v18;
        aBlock[4] = sub_10003C5D0;
        aBlock[5] = v22;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000B2448;
        aBlock[3] = &unk_100152430;
        id v23 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v20 checkAvailabilityWithTicketNumber:v21 timeout:0 exitWhenDone:v23 completion:30.0];
        _Block_release(v23);
        swift_release();
        swift_unknownObjectRelease_n();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1000B2448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);

  return swift_release();
}

NSString sub_1000B24A8()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10018A420 = (uint64_t)result;
  return result;
}

NSString sub_1000B24E0()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10018A428 = (uint64_t)result;
  return result;
}

void sub_1000B2518(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  if (*(void *)(a1 + 16) <= *(void *)(v3 + 16) >> 3)
  {
    v80[0] = v3;
    swift_bridgeObjectRetain();
    sub_1000B61F0(a1);
    uint64_t v4 = (unint64_t *)v3;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1000B5504(a1, v3);
  }
  if (*(void *)(*(void *)(v78 + 64) + 16) <= *(void *)(a1 + 16) >> 3)
  {
    v80[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_1000B61F0(v6);
    swift_bridgeObjectRelease();
    id v70 = (unint64_t *)a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = swift_bridgeObjectRetain();
    id v70 = sub_1000B5504(v5, a1);
    swift_bridgeObjectRelease();
  }
  int64_t v7 = 0;
  id v71 = v4 + 7;
  uint64_t v8 = 1 << *((unsigned char *)v4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v4[7];
  id v11 = (void **)(v78 + 56);
  int64_t v72 = (unint64_t)(v8 + 63) >> 6;
  id v12 = &selRef_setExportedInterface_;
  id v69 = v4;
  while (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v7 << 6);
LABEL_26:
    sub_10007F0B4(v4[6] + 40 * v14, (uint64_t)v80);
    sub_10003AFD0(&qword_100184348);
    if (swift_dynamicCast())
    {
      int64_t v76 = v7;
      uint64_t v18 = v79;
      uint64_t v19 = swift_dynamicCastObjCProtocolConditional();
      if (v19)
      {
        id v20 = (void *)v19;
        swift_unknownObjectRetain();
        id v21 = [v20 delegate];
        swift_unknownObjectRelease();
        if (!v21)
        {
          id v22 = [self sharedApplication];
          id v23 = [v22 delegate];

          if (v23)
          {
            type metadata accessor for AppDelegate();
            uint64_t v24 = swift_dynamicCastClass();
            if (v24)
            {
              uint64_t v25 = v24;
              if (qword_100182758 != -1) {
                swift_once();
              }
              uint64_t v26 = qword_10018A388;
              [v20 setViewControllerDelegate:qword_10018A388];
              [v20 setStatusBarResponder:v26];
              uint64_t v27 = *(void *)(v25 + OBJC_IVAR____TtC11Diagnostics11AppDelegate_rootViewController);
              [v20 setBrightnessResponder:v27];
              [v20 setVolumeHUDResponder:v27];
              [v20 setUserAlertResponder:v27];
              [v20 setDelegate:v78];
              id v12 = &selRef_setExportedInterface_;
            }
            swift_unknownObjectRelease();
          }
        }
        swift_unknownObjectRelease();
      }
      uint64_t ObjectType = swift_getObjectType();
      id v28 = [v79 v12[133]];
      id v29 = [v28 serialNumber];

      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v31 = v12;
      uint64_t v33 = v32;

      swift_beginAccess();
      swift_unknownObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v79 = *v11;
      *id v11 = (void *)0x8000000000000000;
      sub_1000FEB98((uint64_t)v18, v30, v33, isUniquelyReferenced_nonNull_native);
      *id v11 = v79;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      id v35 = [self defaultCenter];
      if (qword_100182808 != -1) {
        swift_once();
      }
      uint64_t v36 = qword_10018A420;
      sub_10003AFD0((uint64_t *)&unk_100183A60);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1001240D0;
      AnyHashable.init<A>(_:)();
      id v38 = [v18 v31[133]];
      *(void *)(inited + 96) = sub_10003C374(0, &qword_100184340);
      *(void *)(inited + 72) = v38;
      AnyHashable.init<A>(_:)();
      *(void *)(inited + 168) = ObjectType;
      *(void *)(inited + 144) = v18;
      swift_unknownObjectRetain();
      sub_1000783F4(inited);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v35 postNotificationName:v36 object:v78 userInfo:isa];

      [v18 connect];
      swift_unknownObjectRelease();
      id v12 = v31;
      uint64_t v4 = v69;
      int64_t v7 = v76;
    }
  }
  int64_t v15 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (v15 >= v72) {
    goto LABEL_39;
  }
  unint64_t v16 = v71[v15];
  ++v7;
  if (v16) {
    goto LABEL_25;
  }
  int64_t v7 = v15 + 1;
  if (v15 + 1 >= v72) {
    goto LABEL_39;
  }
  unint64_t v16 = v71[v7];
  if (v16) {
    goto LABEL_25;
  }
  int64_t v7 = v15 + 2;
  if (v15 + 2 >= v72) {
    goto LABEL_39;
  }
  unint64_t v16 = v71[v7];
  if (v16)
  {
LABEL_25:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
    goto LABEL_26;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v72)
  {
LABEL_39:
    swift_release();
    int64_t v40 = 0;
    id v41 = v70;
    id v73 = v70 + 7;
    uint64_t v42 = 1 << *((unsigned char *)v70 + 32);
    uint64_t v43 = -1;
    if (v42 < 64) {
      uint64_t v43 = ~(-1 << v42);
    }
    unint64_t v44 = v43 & v70[7];
    int64_t v75 = (unint64_t)(v42 + 63) >> 6;
    id v68 = (void **)(v78 + 56);
    while (1)
    {
      if (v44)
      {
        unint64_t v45 = __clz(__rbit64(v44));
        v44 &= v44 - 1;
        unint64_t v46 = v45 | (v40 << 6);
      }
      else
      {
        int64_t v47 = v40 + 1;
        if (__OFADD__(v40, 1)) {
          goto LABEL_70;
        }
        if (v47 >= v75)
        {
LABEL_68:
          swift_release();
          return;
        }
        unint64_t v48 = v73[v47];
        ++v40;
        if (!v48)
        {
          int64_t v40 = v47 + 1;
          if (v47 + 1 >= v75) {
            goto LABEL_68;
          }
          unint64_t v48 = v73[v40];
          if (!v48)
          {
            int64_t v40 = v47 + 2;
            if (v47 + 2 >= v75) {
              goto LABEL_68;
            }
            unint64_t v48 = v73[v40];
            if (!v48)
            {
              int64_t v49 = v47 + 3;
              if (v49 >= v75) {
                goto LABEL_68;
              }
              unint64_t v48 = v73[v49];
              if (!v48)
              {
                while (1)
                {
                  int64_t v40 = v49 + 1;
                  if (__OFADD__(v49, 1)) {
                    goto LABEL_72;
                  }
                  if (v40 >= v75) {
                    goto LABEL_68;
                  }
                  unint64_t v48 = v73[v40];
                  ++v49;
                  if (v48) {
                    goto LABEL_57;
                  }
                }
              }
              int64_t v40 = v49;
            }
          }
        }
LABEL_57:
        unint64_t v44 = (v48 - 1) & v48;
        unint64_t v46 = __clz(__rbit64(v48)) + (v40 << 6);
      }
      sub_10007F0B4(v41[6] + 40 * v46, (uint64_t)v80);
      sub_10003AFD0(&qword_100184348);
      if (swift_dynamicCast())
      {
        id v50 = v79;
        uint64_t v77 = swift_getObjectType();
        id v51 = [v79 v12[133]];
        id v52 = (char *)[v51 phase];

        if ((unint64_t)(v52 - 2) <= 2) {
          [v79 end];
        }
        id v53 = [v79 v12[133] v68];
        id v54 = [v53 serialNumber];

        uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v57 = v56;

        swift_beginAccess();
        swift_bridgeObjectRetain();
        unint64_t v58 = sub_10007D7FC(v55, v57);
        char v60 = v59;
        swift_bridgeObjectRelease();
        if (v60)
        {
          char v61 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v62 = (uint64_t)*v11;
          uint64_t v79 = *v11;
          *id v11 = (void *)0x8000000000000000;
          if ((v61 & 1) == 0)
          {
            sub_1000FF334();
            uint64_t v62 = (uint64_t)v79;
          }
          swift_bridgeObjectRelease();
          sub_1000FE464(v58, v62);
          *id v11 = (void *)v62;
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        id v63 = [self defaultCenter];
        if (qword_100182810 != -1) {
          swift_once();
        }
        uint64_t v64 = qword_10018A428;
        sub_10003AFD0((uint64_t *)&unk_100183A60);
        uint64_t v65 = swift_initStackObject();
        *(_OWORD *)(v65 + 16) = xmmword_1001240D0;
        AnyHashable.init<A>(_:)();
        id v12 = &selRef_setExportedInterface_;
        id v66 = [v50 state];
        *(void *)(v65 + 96) = sub_10003C374(0, &qword_100184340);
        *(void *)(v65 + 72) = v66;
        AnyHashable.init<A>(_:)();
        *(void *)(v65 + 168) = v77;
        *(void *)(v65 + 144) = v50;
        swift_unknownObjectRetain();
        sub_1000783F4(v65);
        Class v67 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v63 postNotificationName:v64 object:v78 userInfo:v67];
        swift_unknownObjectRelease();

        id v41 = v70;
        id v11 = v68;
      }
    }
  }
  unint64_t v16 = v71[v17];
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v72) {
      goto LABEL_39;
    }
    unint64_t v16 = v71[v7];
    ++v17;
    if (v16) {
      goto LABEL_25;
    }
  }
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
}

uint64_t sub_1000B30A4()
{
  swift_beginAccess();
  int64_t v2 = 0;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v3 + 64;
  uint64_t v7 = v5 & *(void *)(v3 + 64);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  do
  {
    if (v7)
    {
      v7 &= v7 - 1;
    }
    else
    {
      int64_t v9 = v2 + 1;
      if (__OFADD__(v2, 1))
      {
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      if (v9 >= v8) {
        goto LABEL_26;
      }
      uint64_t v10 = *(void *)(v6 + 8 * v9);
      ++v2;
      if (!v10)
      {
        int64_t v2 = v9 + 1;
        if (v9 + 1 >= v8) {
          goto LABEL_26;
        }
        uint64_t v10 = *(void *)(v6 + 8 * v2);
        if (!v10)
        {
          int64_t v2 = v9 + 2;
          if (v9 + 2 >= v8) {
            goto LABEL_26;
          }
          uint64_t v10 = *(void *)(v6 + 8 * v2);
          if (!v10)
          {
            int64_t v2 = v9 + 3;
            if (v9 + 3 >= v8) {
              goto LABEL_26;
            }
            uint64_t v10 = *(void *)(v6 + 8 * v2);
            if (!v10)
            {
              int64_t v11 = v9 + 4;
              if (v11 >= v8)
              {
LABEL_26:
                sub_10003C374(0, (unint64_t *)&qword_1001832C0);
                unint64_t v16 = (void *)static OS_os_log.default.getter();
                static os_log_type_t.default.getter();
                os_log(_:dso:log:type:_:)();

                if (qword_100182740 != -1) {
                  goto LABEL_35;
                }
                goto LABEL_27;
              }
              uint64_t v10 = *(void *)(v6 + 8 * v11);
              if (!v10)
              {
                while (1)
                {
                  int64_t v2 = v11 + 1;
                  if (__OFADD__(v11, 1)) {
                    goto LABEL_32;
                  }
                  if (v2 >= v8) {
                    goto LABEL_26;
                  }
                  uint64_t v10 = *(void *)(v6 + 8 * v2);
                  ++v11;
                  if (v10) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v2 = v11;
            }
          }
        }
      }
LABEL_22:
      uint64_t v7 = (v10 - 1) & v10;
    }
    self;
  }
  while (swift_dynamicCastObjCClass());
  sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v12 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  if (qword_100182740 == -1) {
    goto LABEL_24;
  }
LABEL_33:
  swift_once();
LABEL_24:
  uint64_t v1 = (char *)qword_10018A358;
  pid_t v13 = getpid();
  id v14 = [self mainBundle];
  id v15 = [v14 bundleIdentifier];

  if (v15)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  while (1)
  {
    uint64_t v24 = *(NSObject **)&v1[OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendQueue];
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v1;
    *(_DWORD *)(v25 + 24) = v13;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_1000B6144;
    *(void *)(v26 + 24) = v25;
    uint64_t v33 = sub_100042974;
    uint64_t v34 = v26;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v30 = 1107296256;
    id v31 = sub_10004FD38;
    uint64_t v32 = &unk_1001524F8;
    uint64_t v27 = _Block_copy(&aBlock);
    id v28 = v1;
    swift_retain();
    swift_release();
    dispatch_sync(v24, v27);
    _Block_release(v27);
    LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_release();
    if ((v24 & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_35:
    swift_once();
LABEL_27:
    int64_t v17 = (void *)qword_10018A358;
    uint64_t v18 = *(NSObject **)(qword_10018A358 + OBJC_IVAR____TtC11Diagnostics10Assertions_preventTaskSuspendQueue);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v17;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_1000AACB4;
    *(void *)(v20 + 24) = v19;
    uint64_t v33 = sub_10005B17C;
    uint64_t v34 = v20;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v30 = 1107296256;
    id v31 = sub_10004FD38;
    uint64_t v32 = &unk_100152570;
    id v21 = _Block_copy(&aBlock);
    pid_t v13 = v34;
    id v22 = v17;
    swift_retain();
    swift_release();
    dispatch_sync(v18, v21);
    _Block_release(v21);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v18 & 1) == 0) {
      break;
    }
    __break(1u);
  }
  return result;
}

void sub_1000B3610()
{
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 56) = _swiftEmptyDictionarySingleton;
  *(void *)(v0 + 64) = &_swiftEmptySetSingleton;
  *(void *)(v0 + 72) = _swiftEmptyDictionarySingleton;
  *(void *)(v0 + 80) = 0;
  sub_1000B4D44();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100125CB0;
  *(void *)(inited + 32) = sub_10003C374(0, &qword_1001855D0);
  *(void *)(inited + 40) = sub_10003C374(0, &qword_1001855D8);
  *(void *)(inited + 48) = sub_10003C374(0, &qword_1001855E0);
  *(void *)(inited + 56) = sub_10003C374(0, &qword_1001855E8);
  unsigned __int8 v2 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isCheckerBoardActive");
  swift_unknownObjectRelease();
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = sub_10003C374(0, &qword_1001855F0);
    uint64_t inited = (uint64_t)sub_1000A00A4((void *)1, 5, 1, (void *)inited);
    *(void *)(inited + 16) = 5;
    *(void *)(inited + 64) = v3;
    unint64_t v4 = *(void *)(inited + 24);
    if (v4 <= 0xB) {
      uint64_t inited = (uint64_t)sub_1000A00A4((void *)(v4 > 1), 6, 1, (void *)inited);
    }
    uint64_t v5 = sub_10003C374(0, &qword_1001855F8);
    *(void *)(inited + 16) = 6;
    *(void *)(inited + 72) = v5;
  }
  if (os_variant_has_internal_content())
  {
    unint64_t v7 = *(void *)(inited + 16);
    unint64_t v6 = *(void *)(inited + 24);
    if (v7 >= v6 >> 1) {
      uint64_t inited = (uint64_t)sub_1000A00A4((void *)(v6 > 1), v7 + 1, 1, (void *)inited);
    }
    uint64_t v8 = sub_10003C374(0, (unint64_t *)&unk_100185600);
    *(void *)(inited + 16) = v7 + 1;
    *(void *)(inited + 8 * v7 + 32) = v8;
  }
  sub_1000B1DA8(inited);
  swift_bridgeObjectRelease();
  id v9 = objc_allocWithZone((Class)NSSet);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 initWithArray:isa];

  uint64_t aBlock = 0;
  static Set._forceBridgeFromObjectiveC(_:result:)();
  __break(1u);
}

uint64_t sub_1000B3B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003C374(0, (unint64_t *)&qword_100182E40);
  int64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1000B61E8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000358AC;
  aBlock[3] = &unk_1001525C0;
  pid_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003AF78();
  sub_10003AFD0((uint64_t *)&unk_100182E50);
  sub_10003B014();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

uint64_t sub_1000B3DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = a2;
  swift_bridgeObjectRetain();
  sub_1000B2518(v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000B3E08(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1000B3E80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = Notification.userInfo.getter();
  if (!v3)
  {
    long long v30 = 0u;
    long long v31 = 0u;
LABEL_14:
    sub_10003C44C((uint64_t)&v30, &qword_100183E70);
    return;
  }
  uint64_t v4 = v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10007D88C((uint64_t)v29), (v6 & 1) != 0))
  {
    sub_10003C5D8(*(void *)(v4 + 56) + 32 * v5, (uint64_t)&v30);
  }
  else
  {
    long long v30 = 0u;
    long long v31 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10003C320((uint64_t)v29);
  if (!*((void *)&v31 + 1)) {
    goto LABEL_14;
  }
  sub_10003C374(0, &qword_100183A50);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  id v7 = v29[0];
  id v8 = [v29[0] snapshot];
  id v9 = [v8 phase];

  unint64_t v10 = (unint64_t)v9 - 2;
  id v11 = [v7 snapshot];
  id v12 = [v11 serialNumber];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  if (v10 > 2)
  {
    swift_beginAccess();
    sub_1000FC730(v13, v15);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_1000B30A4();
LABEL_22:

    return;
  }
  id v16 = [v7 snapshot];
  id v17 = [v16 serialNumber];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  swift_beginAccess();
  uint64_t v21 = *(void *)(a2 + 56);
  if (!*(void *)(v21 + 16)) {
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  unint64_t v22 = sub_10007D7FC(v18, v20);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    goto LABEL_20;
  }
  uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = (uint64_t *)(a2 + 72);
  swift_beginAccess();
  if (!v24)
  {
LABEL_20:
    sub_1000FC730(v13, v15);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = *v25;
  uint64_t *v25 = 0x8000000000000000;
  sub_1000FEB98(v24, v13, v15, isUniquelyReferenced_nonNull_native);
  uint64_t *v25 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_21:
  swift_endAccess();
  sub_1000B30A4();
  if (([v7 changedProperties] & 2) == 0) {
    goto LABEL_22;
  }
  id v27 = [v7 snapshot];
}

uint64_t sub_1000B423C()
{
  return sub_1000B4260((SEL *)&selRef_suspendTests);
}

uint64_t sub_1000B4248()
{
  return sub_1000B4260((SEL *)&selRef_resumeTests);
}

uint64_t sub_1000B4254()
{
  return sub_1000B4260((SEL *)&selRef_end);
}

uint64_t sub_1000B4260(SEL *a1)
{
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = v2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_21:
    sub_10007F0B4(*(void *)(v2 + 48) + 40 * v11, (uint64_t)&v17);
    sub_10003AFD0(&qword_100184348);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      if ([v16 isLocal]) {
        [v16 *a1];
      }
      uint64_t result = swift_unknownObjectRelease();
    }
  }
  int64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v7) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v3 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_20;
  }
  int64_t v9 = v12 + 1;
  if (v12 + 1 >= v7) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13) {
    goto LABEL_20;
  }
  int64_t v9 = v12 + 2;
  if (v12 + 2 >= v7) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13)
  {
LABEL_20:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v7) {
    return swift_release();
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      return swift_release();
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1000B4438(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  v3(v5, v7);
  sub_10006FAA8(v5, v7);

  return swift_release();
}

uint64_t sub_1000B44C0()
{
  sub_10003C44C(v0 + 16, (uint64_t *)&unk_100184330);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 88, 7);
}

uint64_t type metadata accessor for DeviceManager()
{
  return self;
}

void sub_1000B4544(unsigned __int8 a1, id a2)
{
  if (a1 - 1 > 1)
  {
    id v3 = [a2 state];
    [v3 setPhase:0];

    id v4 = [a2 state];
    [v4 addErrorCode:0 userInfo:0];

    id v5 = [a2 state];
    [v5 removeErrorCode:0];
  }
  else
  {
    [a2 start];
  }
}

uint64_t sub_1000B46F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  sub_1000B6398(v4 + 16, (uint64_t)v15);
  if (!v16) {
    return sub_10003C44C((uint64_t)v15, (uint64_t *)&unk_100184330);
  }
  sub_100042A64((uint64_t)v15, (uint64_t)v12);
  sub_10003C44C((uint64_t)v15, (uint64_t *)&unk_100184330);
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  sub_100042AC8(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24))(v4, a1, a2, a3, a4, v9, v10);
  return sub_100042B0C((uint64_t)v12);
}

void sub_1000B48B4(uint64_t a1, uint64_t a2, NSString a3, uint64_t a4)
{
  if (a3) {
    a3 = String._bridgeToObjectiveC()();
  }
  id v6 = a3;
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a4, a1);
}

uint64_t sub_1000B4920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  sub_1000B6398(v4 + 16, (uint64_t)v15);
  if (!v16) {
    return sub_10003C44C((uint64_t)v15, (uint64_t *)&unk_100184330);
  }
  sub_100042A64((uint64_t)v15, (uint64_t)v12);
  sub_10003C44C((uint64_t)v15, (uint64_t *)&unk_100184330);
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  sub_100042AC8(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, a1, a2, a3, a4, v9, v10);
  return sub_100042B0C((uint64_t)v12);
}

uint64_t sub_1000B4B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  sub_1000B6398(v4 + 16, (uint64_t)v15);
  if (!v16) {
    return sub_10003C44C((uint64_t)v15, (uint64_t *)&unk_100184330);
  }
  sub_100042A64((uint64_t)v15, (uint64_t)v12);
  sub_10003C44C((uint64_t)v15, (uint64_t *)&unk_100184330);
  uint64_t v9 = v13;
  uint64_t v10 = v14;
  sub_100042AC8(v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32))(v4, a1, a2, a3, a4, v9, v10);
  return sub_100042B0C((uint64_t)v12);
}

uint64_t sub_1000B4CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4(0);
}

void sub_1000B4CD8(int a1, int a2, id a3, void (*a4)(void))
{
  id v5 = [a3 identifier];
  a4();
}

uint64_t sub_1000B4D44()
{
  uint64_t v0 = sub_10003AFD0(&qword_100185678);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    uint64_t v2 = (uint64_t *)&unk_100182E20;
  }
  else {
    uint64_t v2 = (uint64_t *)&unk_100185680;
  }

  return sub_10003AFD0(v2);
}

uint64_t sub_1000B4DA4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000B4DDC(unsigned __int8 a1)
{
  sub_1000B4544(a1, *(id *)(v1 + 16));
}

uint64_t sub_1000B4DE4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B4E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000B4E2C()
{
  return swift_release();
}

uint64_t sub_1000B4E34(uint64_t a1)
{
  return sub_1000B3B20(a1, v1);
}

void sub_1000B4E3C(uint64_t a1)
{
  sub_1000B3E80(a1, v1);
}

void *sub_1000B4E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  v35[0] = a1;
  unint64_t v33 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return (void *)v2;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_21;
  }
LABEL_4:
  unint64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  unint64_t v34 = a1 & 0xC000000000000001;
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v32 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  uint64_t v30 = a1 + 32;
  uint64_t v31 = v7;
  while (1)
  {
    if (v34)
    {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v5 >= *(void *)(v32 + 16)) {
        __break(1u);
      }
      id v8 = *(id *)(v30 + 8 * v5);
    }
    uint64_t v9 = v8;
    if (__OFADD__(v5++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    Swift::Int v11 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
    uint64_t v12 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13)) {
      break;
    }
LABEL_19:

    if (v33)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v5 == v19) {
        goto LABEL_21;
      }
    }
    else if (v5 == *(void *)(v32 + 16))
    {
      goto LABEL_21;
    }
  }
  sub_10003C374(0, (unint64_t *)&unk_100185900);
  id v14 = *(id *)(*(void *)(v2 + 48) + 8 * v13);
  char v15 = static NSObject.== infix(_:_:)();

  if ((v15 & 1) == 0)
  {
    uint64_t v16 = ~v12;
    do
    {
      unint64_t v13 = (v13 + 1) & v16;
      if (((*(void *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_19;
      }
      id v17 = *(id *)(*(void *)(v2 + 48) + 8 * v13);
      char v18 = static NSObject.== infix(_:_:)();
    }
    while ((v18 & 1) == 0);
  }

  v35[1] = v5;
  char v21 = *(unsigned char *)(v2 + 32);
  unint64_t v22 = (unint64_t)((1 << v21) + 63) >> 6;
  size_t v23 = 8 * v22;
  if ((v21 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v29 - ((v23 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v23);
    sub_1000B5944((unint64_t *)((char *)&v29 - ((v23 + 15) & 0x3FFFFFFFFFFFFFF0)), v22, v2, v13, v35);
    uint64_t v25 = v24;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = (void *)swift_slowAlloc();
    memcpy(v26, (const void *)(v2 + 56), v23);
    sub_1000B5944((unint64_t *)v26, v22, v2, v13, v35);
    uint64_t v25 = v27;
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
  }
  return (void *)v25;
}

unint64_t *sub_1000B51F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
  uint64_t v26 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25[0] + 16 * v5);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      ++v5;
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v9 = Hasher._finalize()();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(v2 + 48);
        unint64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          uint64_t v27 = v5;
LABEL_19:
          char v19 = *(unsigned char *)(v2 + 32);
          unint64_t v20 = (unint64_t)((1 << v19) + 63) >> 6;
          size_t v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            __chkstk_darwin(isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            unint64_t v22 = sub_1000B5C1C((void *)((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0)), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            size_t v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            unint64_t v22 = sub_1000B5C1C((unint64_t *)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            swift_slowDealloc();
          }
          return v22;
        }
        uint64_t v15 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v15;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            break;
          }
          uint64_t v16 = (void *)(v12 + 16 * v11);
          BOOL v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v27 = v5;
            uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return (unint64_t *)v2;
      }
    }
  }
  return (unint64_t *)v2;
}

unint64_t *sub_1000B5504(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(a1 + 56);
    v39[0] = a1;
    v39[1] = a1 + 56;
    uint64_t v32 = ~v5;
    v39[2] = ~v5;
    uint64_t v8 = a2 + 56;
    uint64_t v9 = 0;
    int64_t v33 = (unint64_t)(63 - v5) >> 6;
    int64_t v31 = v33 - 6;
    uint64_t v30 = swift_bridgeObjectRetain() + 104;
    while (1)
    {
      if (v7)
      {
        uint64_t v10 = (v7 - 1) & v7;
        unint64_t v11 = __clz(__rbit64(v7)) | (v9 << 6);
        uint64_t v12 = v9;
      }
      else
      {
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          __break(1u);
        }
        if (v13 >= v33) {
          goto LABEL_36;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v13);
        uint64_t v12 = v9 + 1;
        if (!v14)
        {
          uint64_t v12 = v9 + 2;
          if (v9 + 2 >= v33) {
            goto LABEL_36;
          }
          unint64_t v14 = *(void *)(v4 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v9 + 3;
            if (v9 + 3 >= v33) {
              goto LABEL_36;
            }
            unint64_t v14 = *(void *)(v4 + 8 * v12);
            if (!v14)
            {
              uint64_t v12 = v9 + 4;
              if (v9 + 4 >= v33) {
                goto LABEL_36;
              }
              unint64_t v14 = *(void *)(v4 + 8 * v12);
              if (!v14)
              {
                uint64_t v12 = v9 + 5;
                if (v9 + 5 >= v33) {
                  goto LABEL_36;
                }
                unint64_t v14 = *(void *)(v4 + 8 * v12);
                if (!v14)
                {
                  uint64_t v15 = v9;
                  while (v31 != v15)
                  {
                    unint64_t v14 = *(void *)(v30 + 8 * v15++);
                    if (v14)
                    {
                      uint64_t v12 = v15 + 5;
                      goto LABEL_24;
                    }
                  }
LABEL_36:
                  uint64_t v36 = 0;
                  long long v34 = 0u;
                  long long v35 = 0u;
LABEL_37:
                  sub_100046948();
                  sub_10003C44C((uint64_t)&v34, &qword_100185670);
                  return (unint64_t *)v2;
                }
              }
            }
          }
        }
LABEL_24:
        uint64_t v10 = (v14 - 1) & v14;
        unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
      }
      sub_10007F0B4(*(void *)(a1 + 48) + 40 * v11, (uint64_t)&v34);
      if (!*((void *)&v35 + 1)) {
        goto LABEL_37;
      }
      v37[0] = v34;
      v37[1] = v35;
      uint64_t v38 = v36;
      Swift::Int v16 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));
      uint64_t v17 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v18 = v16 & ~v17;
      if ((*(void *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18)) {
        break;
      }
LABEL_6:
      sub_10003C320((uint64_t)v37);
      unint64_t v7 = v10;
      uint64_t v9 = v12;
    }
    uint64_t v19 = ~v17;
    while (1)
    {
      sub_10007F0B4(*(void *)(v2 + 48) + 40 * v18, (uint64_t)&v34);
      char v20 = static AnyHashable.== infix(_:_:)();
      sub_10003C320((uint64_t)&v34);
      if (v20) {
        break;
      }
      unint64_t v18 = (v18 + 1) & v19;
      if (((*(void *)(v8 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_6;
      }
    }
    v39[3] = v12;
    v39[4] = v10;
    uint64_t isStackAllocationSafe = sub_10003C320((uint64_t)v37);
    char v22 = *(unsigned char *)(v2 + 32);
    unint64_t v23 = (unint64_t)((1 << v22) + 63) >> 6;
    size_t v24 = 8 * v23;
    if ((v22 & 0x3Fu) <= 0xD
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v29 - ((v24 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v24);
      uint64_t v25 = sub_1000B5E48((unint64_t *)((char *)&v29 - ((v24 + 15) & 0x3FFFFFFFFFFFFFF0)), v23, v2, v18, v39);
      swift_release();
      sub_100046948();
      return v25;
    }
    else
    {
      uint64_t v26 = (void *)swift_slowAlloc();
      memcpy(v26, (const void *)(v2 + 56), v24);
      uint64_t v27 = sub_1000B5E48((unint64_t *)v26, v23, v2, v18, v39);
      swift_release();
      sub_100046948();
      swift_slowDealloc();
      return v27;
    }
  }
  else
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
}

void sub_1000B5944(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a5;
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v33 = v7 - 1;
  uint64_t v8 = a5[1];
  if (*a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8 == v9) {
      goto LABEL_3;
    }
  }
  else if (v8 == *(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_retain();
    sub_1000DAC0C(a1, a2, v33, a3);
    return;
  }
  uint64_t v35 = a3 + 56;
  long long v34 = v5;
  while (1)
  {
    uint64_t v10 = *v5;
    unint64_t v11 = v5[1];
    if ((*v5 & 0xC000000000000001) != 0)
    {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v29 = v5[1];
      unint64_t v13 = v29 + 1;
      if (__OFADD__(v29, 1)) {
        goto LABEL_34;
      }
      goto LABEL_10;
    }
    if ((v11 & 0x8000000000000000) != 0) {
      break;
    }
    if (v11 >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_33;
    }
    id v12 = *(id *)(v10 + 8 * v11 + 32);
    unint64_t v13 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_34;
    }
LABEL_10:
    v5[1] = v13;
    Swift::Int v14 = NSObject._rawHashValue(seed:)(*(void *)(a3 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v35 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_17;
    }
    sub_10003C374(0, (unint64_t *)&unk_100185900);
    id v19 = *(id *)(*(void *)(a3 + 48) + 8 * v16);
    char v20 = static NSObject.== infix(_:_:)();

    if ((v20 & 1) == 0)
    {
      uint64_t v21 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v23 + 1)
      {
        unint64_t v23 = i & v21;
        if (((*(void *)(v35 + (((i & v21) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v21)) & 1) == 0) {
          break;
        }
        id v24 = *(id *)(*(void *)(a3 + 48) + 8 * v23);
        char v25 = static NSObject.== infix(_:_:)();

        if (v25)
        {

          unint64_t v17 = v23 >> 6;
          uint64_t v18 = 1 << v23;
          goto LABEL_19;
        }
      }
LABEL_17:

LABEL_23:
      uint64_t v5 = v34;
      goto LABEL_24;
    }

LABEL_19:
    unint64_t v26 = a1[v17];
    a1[v17] = v26 & ~v18;
    if ((v18 & v26) == 0) {
      goto LABEL_23;
    }
    uint64_t v5 = v34;
    uint64_t v27 = v33 - 1;
    if (__OFSUB__(v33, 1)) {
      goto LABEL_35;
    }
    --v33;
    if (!v27) {
      return;
    }
LABEL_24:
    uint64_t v28 = v5[1];
    if (*v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v28 == v30) {
        goto LABEL_3;
      }
    }
    else if (v28 == *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
}

unint64_t *sub_1000B5C1C(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v30 = result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return (unint64_t *)sub_1000DB130(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_29;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v14 = Hasher._finalize()();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    char v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_30;
      }
      --v31;
      if (!v23) {
        return (unint64_t *)&_swiftEmptySetSingleton;
      }
    }
LABEL_5:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

unint64_t *sub_1000B5E48(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v31 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v37 = v7 - 1;
  uint64_t v8 = a3 + 56;
  while (1)
  {
    uint64_t v9 = *a5;
    uint64_t v10 = a5[1];
    uint64_t v12 = a5[2];
    int64_t v11 = a5[3];
    unint64_t v13 = a5[4];
    if (!v13) {
      break;
    }
    uint64_t v14 = (v13 - 1) & v13;
    unint64_t v15 = __clz(__rbit64(v13)) | (v11 << 6);
LABEL_21:
    sub_10007F0B4(*(void *)(v9 + 48) + 40 * v15, (uint64_t)&v32);
    uint64_t v21 = *((void *)&v33 + 1);
    *a5 = v9;
    a5[1] = v10;
    a5[2] = v12;
    a5[3] = v11;
    a5[4] = v14;
    if (!v21) {
      goto LABEL_32;
    }
    v35[0] = v32;
    v35[1] = v33;
    uint64_t v36 = v34;
    Swift::Int v22 = AnyHashable._rawHashValue(seed:)(*(void *)(a3 + 40));
    uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v24 = v22 & ~v23;
    if ((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
    {
      uint64_t v25 = ~v23;
      while (1)
      {
        sub_10007F0B4(*(void *)(a3 + 48) + 40 * v24, (uint64_t)&v32);
        char v26 = static AnyHashable.== infix(_:_:)();
        sub_10003C320((uint64_t)&v32);
        if (v26) {
          break;
        }
        unint64_t v24 = (v24 + 1) & v25;
        if (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
          goto LABEL_2;
        }
      }
      uint64_t result = (unint64_t *)sub_10003C320((uint64_t)v35);
      uint64_t v27 = (v24 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v28 = *(unint64_t *)((char *)v31 + v27);
      *(unint64_t *)((char *)v31 + v27) = v28 & ~(1 << v24);
      if ((v28 & (1 << v24)) != 0)
      {
        uint64_t v29 = v37 - 1;
        if (__OFSUB__(v37, 1)) {
          goto LABEL_34;
        }
        --v37;
        if (!v29) {
          return (unint64_t *)&_swiftEmptySetSingleton;
        }
      }
    }
    else
    {
LABEL_2:
      uint64_t result = (unint64_t *)sub_10003C320((uint64_t)v35);
    }
  }
  int64_t v16 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    int64_t v17 = (unint64_t)(v12 + 64) >> 6;
    int64_t v18 = a5[3];
    if (v16 >= v17) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v16);
    if (!v19)
    {
      int64_t v18 = v11 + 1;
      if (v11 + 2 >= v17) {
        goto LABEL_31;
      }
      unint64_t v19 = *(void *)(v10 + 8 * (v11 + 2));
      if (v19)
      {
        int64_t v16 = v11 + 2;
      }
      else
      {
        int64_t v18 = v11 + 2;
        if (v11 + 3 >= v17) {
          goto LABEL_31;
        }
        unint64_t v19 = *(void *)(v10 + 8 * (v11 + 3));
        if (v19)
        {
          int64_t v16 = v11 + 3;
        }
        else
        {
          int64_t v16 = v11 + 4;
          int64_t v18 = v11 + 3;
          if (v11 + 4 >= v17) {
            goto LABEL_31;
          }
          unint64_t v19 = *(void *)(v10 + 8 * v16);
          if (!v19)
          {
            int64_t v18 = v17 - 1;
            int64_t v20 = v11 + 5;
            while (v17 != v20)
            {
              unint64_t v19 = *(void *)(v10 + 8 * v20++);
              if (v19)
              {
                int64_t v16 = v20 - 1;
                goto LABEL_20;
              }
            }
LABEL_31:
            uint64_t v34 = 0;
            long long v32 = 0u;
            long long v33 = 0u;
            *a5 = v9;
            a5[1] = v10;
            a5[2] = v12;
            a5[3] = v18;
            a5[4] = 0;
LABEL_32:
            sub_10003C44C((uint64_t)&v32, &qword_100185670);
            swift_retain();
            return (unint64_t *)sub_1000DB3C8(v31, a2, v37, a3);
          }
        }
      }
    }
LABEL_20:
    uint64_t v14 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v16 << 6);
    int64_t v11 = v16;
    goto LABEL_21;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1000B610C()
{
  return _swift_deallocObject(v0, 28, 7);
}

void sub_1000B6144()
{
  sub_10004BC88(*(void *)(v0 + 16), *(unsigned int *)(v0 + 24));
}

uint64_t sub_1000B6150()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B6160()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B6198()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B61A8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B61E8()
{
  return sub_1000B3DBC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000B61F0(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    sub_10007F0B4(*(void *)(v2 + 48) + 40 * v10, (uint64_t)v17);
    v15[0] = v17[0];
    v15[1] = v17[1];
    uint64_t v16 = v18;
    sub_1000B8370((uint64_t)v14);
    sub_10003C44C((uint64_t)v14, &qword_100185670);
    uint64_t result = sub_10003C320((uint64_t)v15);
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v7) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v7) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v3 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1000B6398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0((uint64_t *)&unk_100184330);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000B6400()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B6438()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

void sub_1000B644C(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1000B48B4(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_1000B6454(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t v10 = *(void *)(*(void *)(a5 + 56) + 16);
  swift_retain();
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10007D7FC(a1, a2);
    if (v11)
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      self;
      uint64_t v12 = swift_dynamicCastObjCClass();
      if (v12)
      {
        int64_t v13 = (void *)v12;
        NSString v14 = String._bridgeToObjectiveC()();
        uint64_t v15 = swift_allocObject();
        *(void *)(v15 + 16) = sub_1000B69E8;
        *(void *)(v15 + 24) = a6;
        v21[4] = (uint64_t)sub_1000B69F0;
        v21[5] = v15;
        v21[0] = (uint64_t)_NSConcreteStackBlock;
        v21[1] = 1107296256;
        void v21[2] = (uint64_t)sub_1000B4438;
        void v21[3] = (uint64_t)&unk_100152688;
        uint64_t v16 = _Block_copy(v21);
        swift_retain();
        swift_release();
        [v13 getAsset:v14 completion:v16];
        _Block_release(v16);
        swift_release();
        swift_unknownObjectRelease();

        return;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  os_log_type_t v17 = static os_log_type_t.error.getter();
  sub_10003C374(0, (unint64_t *)&qword_1001832C0);
  swift_bridgeObjectRetain_n();
  uint64_t v18 = static OS_os_log.default.getter();
  os_log_type_t v19 = v17;
  if (os_log_type_enabled(v18, v17))
  {
    int64_t v20 = (uint8_t *)swift_slowAlloc();
    v21[0] = swift_slowAlloc();
    *(_DWORD *)int64_t v20 = 136315138;
    swift_bridgeObjectRetain();
    v21[6] = sub_10004DAA8(a1, a2, v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unable to find the device with %s serial number or the device is not local", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_10006ED18(0, 0xF000000000000000, a6);
  swift_release();
}

uint64_t sub_1000B678C(void *a1, char a2, uint64_t a3, void (**a4)(void, void))
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  _Block_copy(a4);
  id v9 = [a1 state];
  id v10 = [v9 suiteName];

  if (v10)
  {
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    swift_beginAccess();
    sub_1000B6398(a3 + 16, (uint64_t)v27);
    if (v28)
    {
      sub_100042A64((uint64_t)v27, (uint64_t)v24);
      sub_10003C44C((uint64_t)v27, (uint64_t *)&unk_100184330);
      uint64_t v14 = v11;
      char v15 = a2;
      uint64_t v17 = v25;
      uint64_t v16 = v26;
      sub_100042AC8(v24, v25);
      id v18 = [a1 state];
      id v19 = [v18 serialNumber];

      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      (*(void (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v16 + 8))(a3, v14, v13, v15 & 1, v20, v22, sub_1000B69D0, v8, v17, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100042B0C((uint64_t)v24);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_10003C44C((uint64_t)v27, (uint64_t *)&unk_100184330);
    }
    return swift_release();
  }
  else
  {
    a4[2](a4, 1);
    return swift_release();
  }
}

uint64_t sub_1000B69D0(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t sub_1000B69E8(uint64_t a1, unint64_t a2)
{
  return sub_10006ED18(a1, a2, v2);
}

uint64_t sub_1000B69F0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_1000B6A64()
{
  type metadata accessor for UIImageAsyncLoader();
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = &_swiftEmptySetSingleton;
  v0[3] = &_swiftEmptySetSingleton;
  v0[4] = 10;
  id result = [objc_allocWithZone((Class)NSLock) init];
  v0[5] = result;
  qword_10018A430 = (uint64_t)v0;
  return result;
}

void *sub_1000B6ACC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchTimeInterval();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v18 - v13;
  id v19 = _swiftEmptyArrayStorage;
  dispatch_semaphore_t v15 = dispatch_semaphore_create(0);
  sub_1000C015C(a1, v2, &v19, (uint64_t)v15);
  static DispatchTime.now()();
  *int64_t v7 = 10;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchTimeInterval.seconds(_:), v4);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  OS_dispatch_semaphore.wait(timeout:)();

  v16(v14, v8);
  return v19;
}

uint64_t sub_1000B6CF4(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_10003AFD0(&qword_1001857C8);
      uint64_t v4 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      v4[2] = a2;
      uint64_t v10 = v4;
      void v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        uint64_t v5 = a2 - 2;
        if (v5)
        {
          uint64_t v6 = v4 + 6;
          do
          {
            *v6++ = a1;
            id v7 = a1;
            --v5;
          }
          while (v5);
        }
        id v8 = a1;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
    }
    specialized Array._endMutation()();
    return (uint64_t)v10;
  }
  return result;
}

void sub_1000B6DE8(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, NSObject *a5)
{
  if (!a1)
  {
    if (a2)
    {
      swift_errorRetain();
      static os_log_type_t.error.getter();
      sub_10003AFD0((uint64_t *)&unk_1001836E0);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_100123B50;
      swift_getErrorValue();
      uint64_t v15 = Error.localizedDescription.getter();
      uint64_t v17 = v16;
      *(void *)(v14 + 56) = &type metadata for String;
      *(void *)(v14 + 64) = sub_10004D9B4();
      *(void *)(v14 + 32) = v15;
      *(void *)(v14 + 40) = v17;
      sub_10003C374(0, (unint64_t *)&qword_1001832C0);
      uint64_t v18 = (void *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();

      swift_errorRelease();
    }
    goto LABEL_8;
  }
  id v8 = (uint64_t *)(a3 + 16);
  swift_beginAccess();
  uint64_t v9 = *v8;
  id v10 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *id v8 = v9;
  if (isUniquelyReferenced_nonNull_native)
  {
    if ((a4 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v9 = sub_10003A008();
  *id v8 = v9;
  if ((a4 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if (*(void *)(v9 + 16) > a4)
  {
    uint64_t v12 = v9 + 8 * a4;
    uint64_t v13 = *(void **)(v12 + 32);
    *(void *)(v12 + 32) = a1;

    specialized Array._endMutation()();
    swift_endAccess();

LABEL_8:
    dispatch_group_leave(a5);
    return;
  }
LABEL_11:
  __break(1u);
}

id sub_1000B6F98(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10003AFD0(&qword_1001857A0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(void **)(a3 + 40);
  [v10 lock];
  uint64_t v11 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v11 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    type metadata accessor for ImageLoader();
    uint64_t v12 = swift_allocObject();
    v17[1] = 0;
    char v18 = 2;
    swift_bridgeObjectRetain();
    Published.init(initialValue:)();
    uint64_t v13 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
    *(void *)(v12 + v13) = [objc_allocWithZone((Class)NSLock) init];
    *(unsigned char *)(v12 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
    uint64_t v14 = (void *)(v12 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    *uint64_t v14 = a1;
    v14[1] = a2;
    swift_beginAccess();
    sub_10003AFD0(&qword_100184168);
    Published.projectedValue.getter();
    swift_endAccess();
    uint64_t v15 = (void *)swift_allocObject();
    _OWORD v15[2] = Int.id.getter;
    v15[3] = 0;
    v15[4] = a3;
    v15[5] = v12;
    sub_1000B76FC();
    swift_retain();
    swift_retain();
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1000B9024(v17, v12);
    swift_endAccess();
    swift_release();
    sub_10006E504();
    swift_release();
    return [v10 unlock];
  }
  else
  {
    return [v10 unlock];
  }
}

id sub_1000B72AC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10003AFD0(&qword_1001857A0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(void **)(a3 + 40);
  [v10 lock];
  uint64_t v11 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v11 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v11)
  {
    type metadata accessor for ImageLoader();
    uint64_t v12 = swift_allocObject();
    v17[1] = 0;
    char v18 = 2;
    swift_bridgeObjectRetain();
    Published.init(initialValue:)();
    uint64_t v13 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
    *(void *)(v12 + v13) = [objc_allocWithZone((Class)NSLock) init];
    *(unsigned char *)(v12 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
    uint64_t v14 = (void *)(v12 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    *uint64_t v14 = a1;
    v14[1] = a2;
    swift_beginAccess();
    sub_10003AFD0(&qword_100184168);
    Published.projectedValue.getter();
    swift_endAccess();
    uint64_t v15 = (void *)swift_allocObject();
    _OWORD v15[2] = Int.id.getter;
    v15[3] = 0;
    v15[4] = a3;
    v15[5] = v12;
    sub_1000B76FC();
    swift_retain();
    swift_retain();
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1000B9024(v17, v12);
    swift_endAccess();
    swift_release();
    sub_10006E504();
    swift_release();
    return [v10 unlock];
  }
  else
  {
    return [v10 unlock];
  }
}

uint64_t sub_1000B75C0(uint64_t a1, void (*a2)(void *, void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *(void **)a1;
  int v8 = *(unsigned __int8 *)(a1 + 8);
  if (!*(unsigned char *)(a1 + 8))
  {
    id v11 = v7;
    uint64_t v9 = v7;
    id v10 = 0;
    goto LABEL_5;
  }
  if (v8 == 1)
  {
    swift_errorRetain();
    uint64_t v9 = 0;
    id v10 = v7;
LABEL_5:
    a2(v9, v10);
    sub_10004F7F4(v7, v8);
  }
  swift_beginAccess();
  sub_1000B84D4(a5);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1000B7680()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for UIImageAsyncLoader()
{
  return self;
}

uint64_t sub_1000B76F0(uint64_t a1)
{
  return sub_1000B75C0(a1, *(void (**)(void *, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

unint64_t sub_1000B76FC()
{
  unint64_t result = qword_1001857A8;
  if (!qword_1001857A8)
  {
    sub_10003B070(&qword_1001857A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001857A8);
  }
  return result;
}

Swift::Int sub_1000B7758(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10003AFD0(&qword_1001857F0);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_10003C374(0, (unint64_t *)&unk_100185900);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1000BA2D4();
          uint64_t v2 = v14;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_1000B7950(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10003AFD0(&qword_1001857B0);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for ImageLoader();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1000BA574();
          uint64_t v2 = v14;
        }
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int result = Hasher._finalize()();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_1000B7B7C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10003AFD0(&qword_1001857D0);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for CardState();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        if (*(void *)(v15 + 24) <= *(void *)(v15 + 16))
        {
          sub_1000BAB6C();
          uint64_t v2 = v15;
        }
        Hasher.init(_seed:)();
        id v3 = [*(id *)(v14 + 40) serialNumber];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int result = Hasher._finalize()();
        uint64_t v5 = v2 + 56;
        uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v7 = result & ~v6;
        unint64_t v8 = v7 >> 6;
        if (((-1 << v7) & ~*(void *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          unint64_t v9 = __clz(__rbit64((-1 << v7) & ~*(void *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v8 == v11;
            if (v8 == v11) {
              unint64_t v8 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          unint64_t v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(void *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(void *)(*(void *)(v2 + 48) + 8 * v9) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_1000B7DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v47 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  char v10 = (char *)&v39 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v39 - v15;
  __chkstk_darwin(v14);
  char v18 = (char *)&v39 - v17;
  id v39 = v2;
  uint64_t v19 = *v2;
  Hasher.init(_seed:)();
  uint64_t v20 = *(void **)a1;
  swift_bridgeObjectRetain();
  id v21 = v20;
  NSObject.hash(into:)();

  Hasher._combine(_:)(*(unsigned __int8 *)(a1 + 8));
  Hasher._combine(_:)(*(void *)(a1 + 16));
  uint64_t v42 = v5;
  type metadata accessor for Date();
  sub_1000C0104();
  dispatch thunk of Hashable.hash(into:)();
  Swift::Int v22 = Hasher._finalize()();
  uint64_t v23 = -1 << *(unsigned char *)(v19 + 32);
  unint64_t v24 = v22 & ~v23;
  uint64_t v25 = v19;
  uint64_t v26 = v19 + 56;
  if ((*(void *)(v26 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
  {
    uint64_t v40 = a2;
    uint64_t v27 = ~v23;
    uint64_t v45 = *(void *)(v41 + 72);
    uint64_t v46 = v25;
    while (1)
    {
      uint64_t v29 = *(void *)(v25 + 48);
      unint64_t v44 = v45 * v24;
      sub_10003C3E8(v29 + v45 * v24, (uint64_t)v18);
      int v30 = v18[8];
      int v31 = *(unsigned __int8 *)(a1 + 8);
      sub_10003C3E8((uint64_t)v18, (uint64_t)v16);
      sub_10003C3E8(a1, (uint64_t)v13);
      if (v30 != v31) {
        break;
      }
      uint64_t v43 = *((void *)v16 + 2);
      uint64_t v32 = *((void *)v13 + 2);
      sub_10003C50C((uint64_t)v13);
      sub_10003C50C((uint64_t)v16);
      sub_10003C3E8((uint64_t)v18, (uint64_t)v10);
      uint64_t v28 = v47;
      sub_10003C3E8(a1, v47);
      if (v43 != v32) {
        goto LABEL_4;
      }
      char v33 = static Date.== infix(_:_:)();
      sub_10003C50C(v28);
      sub_10003C50C((uint64_t)v10);
      sub_10003C50C((uint64_t)v18);
      if (v33)
      {
        swift_bridgeObjectRelease();
        uint64_t v34 = v39;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v36 = *v34;
        uint64_t v48 = *v34;
        *uint64_t v34 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000BCB2C();
          uint64_t v36 = v48;
        }
        uint64_t v37 = v40;
        sub_10003C4A8(*(void *)(v36 + 48) + v44, v40);
        sub_1000BF69C(v24);
        *uint64_t v34 = v48;
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v42);
      }
LABEL_5:
      unint64_t v24 = (v24 + 1) & v27;
      uint64_t v25 = v46;
      if (((*(void *)(v26 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a2 = v40;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(a2, 1, 1, v42);
      }
    }
    sub_10003C50C((uint64_t)v13);
    sub_10003C50C((uint64_t)v16);
    sub_10003C3E8((uint64_t)v18, (uint64_t)v10);
    uint64_t v28 = v47;
    sub_10003C3E8(a1, v47);
LABEL_4:
    sub_10003C50C(v28);
    sub_10003C50C((uint64_t)v10);
    sub_10003C50C((uint64_t)v18);
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(a2, 1, 1, v42);
}

uint64_t sub_1000B8198(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_1000BF040();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_10003C374(0, (unint64_t *)&unk_100185900);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000BCD68();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_1000BF9A0(v11);
  uint64_t *v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1000B8370@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  Swift::Int v4 = *(void *)(*v1 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v5 = AnyHashable._rawHashValue(seed:)(v4);
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      sub_10007F0B4(*(void *)(v3 + 48) + 40 * v7, (uint64_t)v15);
      char v9 = static AnyHashable.== infix(_:_:)();
      sub_10003C320((uint64_t)v15);
      if (v9) {
        break;
      }
      unint64_t v7 = (v7 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v1;
    v15[0] = *v1;
    uint64_t *v1 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000BD760();
      uint64_t v12 = v15[0];
    }
    uint64_t v13 = *(void *)(v12 + 48) + 40 * v7;
    long long v14 = *(_OWORD *)(v13 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v13;
    *(_OWORD *)(a1 + 16) = v14;
    *(void *)(a1 + 32) = *(void *)(v13 + 32);
    sub_1000BFB44(v7);
    uint64_t *v1 = v15[0];
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_5:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1000B84D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    Hasher.init(_seed:)();
    uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v10 = Hasher._finalize()();
    uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      uint64_t v13 = *(void *)(v4 + 48);
      long long v14 = (void *)(*(void *)(v13 + 8 * v12) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
      BOOL v15 = *v14 == v8 && v14[1] == v9;
      if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v17 = *v2;
        uint64_t v22 = *v2;
        uint64_t *v2 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1000BD0C8(&qword_1001857B0);
          uint64_t v17 = v22;
        }
        uint64_t v7 = *(void *)(*(void *)(v17 + 48) + 8 * v12);
        sub_1000BFD10(v12);
        uint64_t *v2 = v22;
        goto LABEL_16;
      }
      uint64_t v18 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v18;
        if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        uint64_t v19 = (void *)(*(void *)(v13 + 8 * v12) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
        BOOL v20 = *v19 == v8 && v19[1] == v9;
        if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_13;
        }
      }
    }
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = *v2;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  char v6 = __CocoaSet.contains(_:)();
  swift_release();
  if ((v6 & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v7 = sub_1000BF1DC(v5, a1);
LABEL_16:
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1000B86EC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v4 < 0) {
      uint64_t v5 = *v2;
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    char v6 = __CocoaSet.contains(_:)();
    swift_release();
    if (v6)
    {
      uint64_t v7 = sub_1000BF3C0(v5, a1);
LABEL_21:
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  else
  {
    Hasher.init(_seed:)();
    uint64_t v8 = *(void **)(a1 + 40);
    swift_bridgeObjectRetain();
    id v9 = [v8 serialNumber];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v10 = Hasher._finalize()();
    uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v12 = v10 & ~v11;
    if ((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
    {
      uint64_t v28 = v2;
      uint64_t v13 = ~v11;
      while (1)
      {
        long long v14 = *(void **)(*(void *)(*(void *)(v4 + 48) + 8 * v12) + 40);
        swift_retain();
        id v15 = [v14 serialNumber];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        id v19 = [v8 serialNumber];
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;

        if (v16 == v20 && v18 == v22)
        {
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          goto LABEL_18;
        }
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v24) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v13;
        if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
LABEL_18:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v26 = *v28;
      uint64_t v29 = *v28;
      uint64_t *v28 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1000BD0C8(&qword_1001857D0);
        uint64_t v26 = v29;
      }
      uint64_t v7 = *(void *)(*(void *)(v26 + 48) + 8 * v12);
      sub_1000BFEFC(v12);
      uint64_t *v28 = v29;
      goto LABEL_21;
    }
  }
LABEL_15:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000B898C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_10003C374(0, (unint64_t *)&unk_100185900);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_1000B7758(v7, result + 1);
    uint64_t v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_1000BA2D4();
      uint64_t v23 = v28;
    }
    else
    {
      uint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_1000BB788((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_10003C374(0, (unint64_t *)&unk_100185900);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_1000BB9B8((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1000B8C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  unint64_t v43 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v46 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  Swift::Int v11 = (char *)&v39 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v47 = (uint64_t)&v39 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  char v16 = (char *)&v39 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  char v19 = (char *)&v39 - v18;
  __chkstk_darwin(v17);
  uint64_t v41 = (char *)&v39 - v20;
  uint64_t v21 = *v2;
  Hasher.init(_seed:)();
  Swift::Int v22 = *(void **)a2;
  swift_bridgeObjectRetain();
  id v23 = v22;
  NSObject.hash(into:)();

  Hasher._combine(_:)(*(unsigned __int8 *)(a2 + 8));
  Hasher._combine(_:)(*(void *)(a2 + 16));
  uint64_t v42 = v6;
  type metadata accessor for Date();
  sub_1000C0104();
  dispatch thunk of Hashable.hash(into:)();
  Swift::Int v24 = Hasher._finalize()();
  uint64_t v25 = -1 << *(unsigned char *)(v21 + 32);
  unint64_t v26 = v24 & ~v25;
  uint64_t v45 = v21 + 56;
  if (((*(void *)(v21 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = a1;
    goto LABEL_12;
  }
  id v39 = v3;
  uint64_t v40 = a1;
  uint64_t v27 = ~v25;
  uint64_t v28 = *(void *)(v43 + 72);
  uint64_t v44 = v21;
  do
  {
    sub_10003C3E8(*(void *)(v21 + 48) + v28 * v26, (uint64_t)v19);
    int v30 = v19[8];
    int v31 = *(unsigned __int8 *)(a2 + 8);
    sub_10003C3E8((uint64_t)v19, (uint64_t)v16);
    sub_10003C3E8(a2, v47);
    if (v30 != v31)
    {
      sub_10003C50C(v47);
      sub_10003C50C((uint64_t)v16);
      sub_10003C3E8((uint64_t)v19, (uint64_t)v11);
      uint64_t v29 = v46;
      sub_10003C3E8(a2, v46);
LABEL_4:
      sub_10003C50C(v29);
      sub_10003C50C((uint64_t)v11);
      sub_10003C50C((uint64_t)v19);
      uint64_t v21 = v44;
      goto LABEL_5;
    }
    unint64_t v43 = v28 * v26;
    uint64_t v32 = *((void *)v16 + 2);
    uint64_t v33 = *(void *)(v47 + 16);
    sub_10003C50C(v47);
    sub_10003C50C((uint64_t)v16);
    sub_10003C3E8((uint64_t)v19, (uint64_t)v11);
    uint64_t v29 = v46;
    sub_10003C3E8(a2, v46);
    if (v32 != v33) {
      goto LABEL_4;
    }
    char v34 = static Date.== infix(_:_:)();
    sub_10003C50C(v29);
    sub_10003C50C((uint64_t)v11);
    sub_10003C50C((uint64_t)v19);
    uint64_t v21 = v44;
    if (v34)
    {
      swift_bridgeObjectRelease();
      sub_10003C50C(a2);
      sub_10003C3E8(*(void *)(*v39 + 48) + v43, v40);
      return 0;
    }
LABEL_5:
    unint64_t v26 = (v26 + 1) & v27;
  }
  while (((*(void *)(v45 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) != 0);
  swift_bridgeObjectRelease();
  uint64_t v3 = v39;
  uint64_t v36 = v40;
LABEL_12:
  uint64_t v37 = (uint64_t)v41;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10003C3E8(a2, v37);
  uint64_t v48 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1000BBB40(v37, v26, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v48;
  swift_bridgeObjectRelease();
  sub_10003C4A8(a2, v36);
  return 1;
}

uint64_t sub_1000B9024(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = __CocoaSet.member(for:)();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for ImageLoader();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v19 = sub_1000B7950(v7, result + 1);
    Swift::Int v27 = v19;
    if (*(void *)(v19 + 24) <= *(void *)(v19 + 16))
    {
      swift_retain();
      sub_1000BA574();
      uint64_t v20 = v27;
    }
    else
    {
      uint64_t v20 = v19;
      swift_retain();
    }
    sub_1000BB80C(a2, v20);
    *uint64_t v3 = v20;
  }
  else
  {
    Hasher.init(_seed:)();
    uint64_t v10 = (uint64_t *)(a2 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v11 = Hasher._finalize()();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      uint64_t v14 = *(void *)(v6 + 48);
      uint64_t v15 = (void *)(*(void *)(v14 + 8 * v13) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
      uint64_t v16 = *v10;
      uint64_t v17 = v10[1];
      BOOL v18 = *v15 == v16 && v15[1] == v17;
      if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_13:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*v3 + 48) + 8 * v13);
        swift_retain();
        return 0;
      }
      uint64_t v21 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v21;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        Swift::Int v22 = (void *)(*(void *)(v14 + 8 * v13) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
        BOOL v23 = *v22 == v16 && v22[1] == v17;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_13;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    Swift::Int v25 = swift_retain();
    sub_1000BBED8(v25, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1000B930C(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  if (a3 >= 9)
  {
    swift_bridgeObjectRetain();
    String.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(qword_100125DF8[a3]);
    swift_bridgeObjectRetain();
  }
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  Swift::Int v22 = v3;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v10);
      uint64_t v13 = *v12;
      unint64_t v14 = v12[1];
      Hasher.init(_seed:)();
      if (v14 >= 9)
      {
        swift_bridgeObjectRetain();
        String.hash(into:)();
      }
      else
      {
        Hasher._combine(_:)(qword_100125DF8[v14]);
        sub_100060C08(v13, v14);
      }
      Swift::Int v15 = Hasher._finalize()();
      Hasher.init(_seed:)();
      if (a3 >= 9) {
        String.hash(into:)();
      }
      else {
        Hasher._combine(_:)(qword_100125DF8[a3]);
      }
      Swift::Int v16 = Hasher._finalize()();
      sub_100060B6C(v13, v14);
      if (v15 == v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    sub_100060B6C(a2, a3);
    Swift::Int v19 = (uint64_t *)(*(void *)(*v22 + 48) + 16 * v10);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    *a1 = *v19;
    a1[1] = v21;
    sub_100060C08(v20, v21);
    return 0;
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v22;
    void *v22 = 0x8000000000000000;
    sub_100060C08(a2, a3);
    sub_1000BC0C0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    void *v22 = v23;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
}

uint64_t sub_1000B9570(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    int v30 = v2;
    Hasher.init(_seed:)();
    uint64_t v9 = *(void **)(a2 + 40);
    swift_bridgeObjectRetain();
    id v10 = [v9 serialNumber];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v11 = Hasher._finalize()();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      uint64_t v32 = ~v12;
      while (1)
      {
        unint64_t v14 = *(void **)(*(void *)(*(void *)(v6 + 48) + 8 * v13) + 40);
        swift_retain();
        id v15 = [v14 serialNumber];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        id v19 = [*(id *)(a2 + 40) serialNumber];
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;

        if (v16 == v20 && v18 == v22)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          goto LABEL_24;
        }
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v24) {
          break;
        }
        unint64_t v13 = (v13 + 1) & v32;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          goto LABEL_15;
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
LABEL_24:
      *a1 = *(void *)(*(void *)(*v30 + 48) + 8 * v13);
      swift_retain();
      return 0;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v34 = *v30;
    uint64_t *v30 = 0x8000000000000000;
    Swift::Int v26 = swift_retain();
    sub_1000BC2EC(v26, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v30 = v34;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  if (v6 < 0) {
    uint64_t v7 = *v2;
  }
  else {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = __CocoaSet.member(for:)();
  swift_release();
  if (!v8)
  {
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v28 = sub_1000B7B7C(v7, result + 1);
    Swift::Int v35 = v28;
    if (*(void *)(v28 + 24) <= *(void *)(v28 + 16))
    {
      swift_retain();
      sub_1000BAB6C();
      uint64_t v29 = v35;
    }
    else
    {
      uint64_t v29 = v28;
      swift_retain();
    }
    sub_1000BB8D4(a2, v29);
    *uint64_t v3 = v29;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for CardState();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  *a1 = v33;
  swift_unknownObjectRelease();
  return 0;
}

uint64_t sub_1000B98F0(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1000BC540(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

Swift::Int sub_1000B9AA0(void *a1, void *a2)
{
  uint64_t v4 = *v2;
  Hasher.init(_seed:)();
  Swift::UInt v5 = a2[2];
  Hasher._combine(_:)(v5);
  uint64_t v6 = a2[2];
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = a2 + 5;
    do
    {
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      v7 += 2;
      --v6;
    }
    while (v6);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  Swift::Int result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v10 = result & ~v9;
  if ((*(void *)(v4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v25 = ~v9;
    uint64_t v11 = *(void *)(v4 + 48);
    while (1)
    {
      uint64_t v12 = *(void **)(v11 + 8 * v10);
      if (v12[2] == v5)
      {
        if (!v5 || v12 == a2) {
          goto LABEL_36;
        }
        unint64_t v13 = a2[2];
        if (!v13) {
          goto LABEL_40;
        }
        Swift::Int result = v12[4];
        BOOL v14 = result == a2[4] && v12[5] == a2[5];
        if (v14 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
        {
          if (v5 == 1) {
            goto LABEL_36;
          }
          unint64_t v15 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_41;
          }
          Swift::Int result = v12[6];
          if (result == a2[6] && v12[7] == a2[7]) {
            break;
          }
          Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if (result) {
            break;
          }
        }
      }
LABEL_8:
      unint64_t v10 = (v10 + 1) & v25;
      if (((*(void *)(v4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_37;
      }
    }
    if (v5 == 2)
    {
LABEL_36:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a1 = *(void *)(*(void *)(*v23 + 48) + 8 * v10);
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = v12 + 9;
    uint64_t v18 = a2 + 9;
    Swift::UInt v19 = v5 - 2;
    while (v19)
    {
      if (!v15) {
        goto LABEL_39;
      }
      Swift::Int result = *(v17 - 1);
      if (result != *(v18 - 1) || *v17 != *v18)
      {
        Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0) {
          goto LABEL_8;
        }
      }
      --v15;
      v18 += 2;
      v17 += 2;
      if (!--v19) {
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
  }
  else
  {
LABEL_37:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v23;
    uint64_t *v23 = 0x8000000000000000;
    Swift::Int v22 = swift_bridgeObjectRetain();
    sub_1000BC6DC(v22, v10, isUniquelyReferenced_nonNull_native);
    uint64_t *v23 = v26;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  return result;
}

uint64_t sub_1000B9D30(unsigned char *a1, char a2)
{
  uint64_t v4 = *v2;
  Hasher.init(_seed:)();
  if (a2) {
    uint64_t v5 = 0x776569766572;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v7 = Hasher._finalize()();
  uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      uint64_t v11 = *(unsigned char *)(*(void *)(v4 + 48) + v9) ? 0x776569766572 : 0;
      unint64_t v12 = *(unsigned char *)(*(void *)(v4 + 48) + v9) ? 0xE600000000000000 : 0xE000000000000000;
      if (v11 == v5 && v12 == v6) {
        break;
      }
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_23;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    char v16 = *(unsigned char *)(*(void *)(*v18 + 48) + v9);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v18;
    *uint64_t v18 = 0x8000000000000000;
    char v16 = a2 & 1;
    sub_1000BC950(a2 & 1, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v18 = v20;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v16;
  return result;
}

uint64_t sub_1000B9F08()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_10003AFD0(&qword_1001857C0);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    int v31 = v0;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v33 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v32 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = v33[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v19 = v33[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v19 = v33[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v31;
                uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
                if (v30 > 63) {
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v30;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v33[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v34 + 72);
      sub_10003C4A8(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
      Hasher.init(_seed:)();
      id v22 = *(id *)v4;
      NSObject.hash(into:)();

      Hasher._combine(_:)(v4[8]);
      Hasher._combine(_:)(*((void *)v4 + 2));
      type metadata accessor for Date();
      sub_1000C0104();
      dispatch thunk of Hashable.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_10003C4A8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v7;
  return result;
}

uint64_t sub_1000BA2D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857F0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    BOOL v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1000BA574()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857B0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8) {
          goto LABEL_33;
        }
        unint64_t v16 = v27[v15];
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v16 = v27[v11];
          if (!v16)
          {
            int64_t v11 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v16 = v27[v11];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v27, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v27 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v27[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v27[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v9 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1000BA86C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857F8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_36;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_36;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_36;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_42;
                  }
                  if (v11 >= v8) {
                    goto LABEL_36;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v21 = *v19;
      unint64_t v20 = v19[1];
      Hasher.init(_seed:)();
      if (v20 >= 9) {
        String.hash(into:)();
      }
      else {
        Hasher._combine(_:)(qword_100125DF8[v20]);
      }
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v21;
      v13[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1000BAB6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857D0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    BOOL v27 = v0;
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      Hasher.init(_seed:)();
      id v18 = [*(id *)(v17 + 40) serialNumber];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1000BAE90()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857E0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1000BB170()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857E8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v29 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v14 >= v29) {
          goto LABEL_36;
        }
        unint64_t v15 = v30[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v29) {
            goto LABEL_36;
          }
          unint64_t v15 = v30[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v29) {
              goto LABEL_36;
            }
            unint64_t v15 = v30[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v29)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v30 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v30[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_42;
                  }
                  if (v10 >= v29) {
                    goto LABEL_36;
                  }
                  unint64_t v15 = v30[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = v2;
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(*(void *)(v18 + 16));
      uint64_t v19 = *(void *)(v18 + 16);
      if (v19)
      {
        uint64_t v20 = v18 + 40;
        do
        {
          swift_bridgeObjectRetain();
          String.hash(into:)();
          swift_bridgeObjectRelease();
          v20 += 16;
          --v19;
        }
        while (v19);
      }
      uint64_t result = Hasher._finalize()();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v8 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v8 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      uint64_t v2 = v17;
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1000BB4A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_100185800);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_1000BB788(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

unint64_t sub_1000BB80C(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1000BB8D4(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  id v4 = [*(id *)(a1 + 40) serialNumber];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_1000BB9B8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1000BA2D4();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1000BCD68();
      goto LABEL_14;
    }
    sub_1000BDCC0();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_10003C374(0, (unint64_t *)&unk_100185900);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = static NSObject.== infix(_:_:)();

    if (v12)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = static NSObject.== infix(_:_:)();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_1000BBB40(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v42 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v7 = *(void *)(v42 - 8);
  uint64_t v8 = __chkstk_darwin(v42);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v39 - v18;
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v39 - v20;
  unint64_t v22 = *(void *)(*v3 + 16);
  unint64_t v23 = *(void *)(*v3 + 24);
  uint64_t v40 = v7;
  uint64_t v41 = v3;
  if (v23 > v22 && (a3 & 1) != 0) {
    goto LABEL_17;
  }
  if (a3)
  {
    sub_1000B9F08();
  }
  else
  {
    if (v23 > v22)
    {
      sub_1000BCB2C();
      goto LABEL_17;
    }
    sub_1000BD930();
  }
  uint64_t v24 = *v3;
  Hasher.init(_seed:)();
  id v25 = *(id *)a1;
  NSObject.hash(into:)();

  Hasher._combine(_:)(*(unsigned __int8 *)(a1 + 8));
  Hasher._combine(_:)(*(void *)(a1 + 16));
  type metadata accessor for Date();
  sub_1000C0104();
  dispatch thunk of Hashable.hash(into:)();
  Swift::Int v26 = Hasher._finalize()();
  uint64_t v27 = -1 << *(unsigned char *)(v24 + 32);
  a2 = v26 & ~v27;
  uint64_t v44 = v24 + 56;
  uint64_t v45 = v24;
  if ((*(void *)(v24 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v43 = ~v27;
    uint64_t v28 = *(void *)(v7 + 72);
    while (1)
    {
      sub_10003C3E8(*(void *)(v45 + 48) + v28 * a2, (uint64_t)v21);
      int v29 = v21[8];
      int v30 = *(unsigned __int8 *)(a1 + 8);
      sub_10003C3E8((uint64_t)v21, (uint64_t)v19);
      sub_10003C3E8(a1, (uint64_t)v16);
      if (v29 != v30) {
        break;
      }
      uint64_t v31 = *((void *)v19 + 2);
      uint64_t v32 = *((void *)v16 + 2);
      sub_10003C50C((uint64_t)v16);
      sub_10003C50C((uint64_t)v19);
      sub_10003C3E8((uint64_t)v21, (uint64_t)v13);
      sub_10003C3E8(a1, (uint64_t)v10);
      if (v31 != v32) {
        goto LABEL_11;
      }
      char v33 = static Date.== infix(_:_:)();
      sub_10003C50C((uint64_t)v10);
      sub_10003C50C((uint64_t)v13);
      sub_10003C50C((uint64_t)v21);
      if (v33)
      {
        ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        goto LABEL_17;
      }
LABEL_12:
      a2 = (a2 + 1) & v43;
      if (((*(void *)(v44 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_17;
      }
    }
    sub_10003C50C((uint64_t)v16);
    sub_10003C50C((uint64_t)v19);
    sub_10003C3E8((uint64_t)v21, (uint64_t)v13);
    sub_10003C3E8(a1, (uint64_t)v10);
LABEL_11:
    sub_10003C50C((uint64_t)v10);
    sub_10003C50C((uint64_t)v13);
    sub_10003C50C((uint64_t)v21);
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v34 = *v41;
  *(void *)(*v41 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_10003C4A8(a1, *(void *)(v34 + 48) + *(void *)(v40 + 72) * a2);
  uint64_t v36 = *(void *)(v34 + 16);
  BOOL v37 = __OFADD__(v36, 1);
  uint64_t v38 = v36 + 1;
  if (v37) {
    __break(1u);
  }
  else {
    *(void *)(v34 + 16) = v38;
  }
  return result;
}

Swift::Int sub_1000BBED8(Swift::Int result, unint64_t a2, char a3)
{
  Swift::Int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_1000BA574();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1000BD0C8(&qword_1001857B0);
      goto LABEL_22;
    }
    sub_1000BDF3C();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  uint64_t v9 = (uint64_t *)(v5 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t result = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v10;
  uint64_t v11 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for ImageLoader();
    uint64_t v12 = *(void *)(v8 + 48);
    uint64_t v13 = (void *)(*(void *)(v12 + 8 * a2) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    uint64_t v14 = *v9;
    uint64_t v15 = v9[1];
    BOOL v16 = *v13 == v14 && v13[1] == v15;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v11 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(*(void *)(v12 + 8 * a2) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
        if (*v18 != v14 || v18[1] != v15)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = v5;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
  return result;
}

Swift::Int sub_1000BC0C0(Swift::Int result, unint64_t a2, unint64_t a3, char a4)
{
  Swift::Int v23 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a4 & 1) != 0) {
    goto LABEL_21;
  }
  if (a4)
  {
    sub_1000BA86C();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_1000BCF14();
      goto LABEL_21;
    }
    sub_1000BE204();
  }
  uint64_t v9 = *v4;
  Hasher.init(_seed:)();
  if (a2 >= 9) {
    String.hash(into:)();
  }
  else {
    Hasher._combine(_:)(qword_100125DF8[a2]);
  }
  uint64_t result = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
  a3 = result & ~v10;
  if ((*(void *)(v9 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v11 = ~v10;
    do
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v9 + 48) + 16 * a3);
      uint64_t v13 = *v12;
      unint64_t v14 = v12[1];
      Hasher.init(_seed:)();
      if (v14 >= 9)
      {
        swift_bridgeObjectRetain();
        String.hash(into:)();
      }
      else
      {
        Hasher._combine(_:)(qword_100125DF8[v14]);
        sub_100060C08(v13, v14);
      }
      Swift::Int v15 = Hasher._finalize()();
      Hasher.init(_seed:)();
      if (a2 >= 9) {
        String.hash(into:)();
      }
      else {
        Hasher._combine(_:)(qword_100125DF8[a2]);
      }
      Swift::Int v16 = Hasher._finalize()();
      uint64_t result = sub_100060B6C(v13, v14);
      if (v15 == v16) {
        goto LABEL_24;
      }
      a3 = (a3 + 1) & v11;
    }
    while (((*(void *)(v9 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_21:
  uint64_t v17 = *v22;
  *(void *)(*v22 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v18 = (Swift::Int *)(*(void *)(v17 + 48) + 16 * a3);
  *uint64_t v18 = v23;
  v18[1] = a2;
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (!v20)
  {
    *(void *)(v17 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_24:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1000BC2EC(Swift::Int result, unint64_t a2, char a3)
{
  Swift::Int v27 = result;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_16;
  }
  if (a3)
  {
    sub_1000BAB6C();
  }
  else
  {
    if (v6 > v5)
    {
      uint64_t result = (Swift::Int)sub_1000BD0C8(&qword_1001857D0);
      goto LABEL_16;
    }
    sub_1000BE4E0();
  }
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  id v8 = [*(id *)(v27 + 40) serialNumber];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    type metadata accessor for CardState();
    do
    {
      uint64_t v11 = *(void **)(*(void *)(*(void *)(v7 + 48) + 8 * a2) + 40);
      swift_retain();
      id v12 = [v11 serialNumber];
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = v14;

      id v16 = [*(id *)(v27 + 40) serialNumber];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      if (v13 == v17 && v15 == v19) {
        goto LABEL_19;
      }
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_20;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_16:
  uint64_t v22 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = v27;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v22 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_19:
  swift_release();
  swift_bridgeObjectRelease_n();
LABEL_20:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1000BC540(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  unint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1000BAE90();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1000BD26C();
      goto LABEL_22;
    }
    sub_1000BE7D8();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_1000BC6DC(Swift::Int result, unint64_t a2, char a3)
{
  unint64_t v5 = (void *)result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1000BB170();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_1000BD420();
        goto LABEL_41;
      }
      sub_1000BEA88();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    Swift::UInt v9 = v5[2];
    Hasher._combine(_:)(v9);
    uint64_t v10 = v5[2];
    if (v10)
    {
      uint64_t v11 = v5 + 5;
      do
      {
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        v11 += 2;
        --v10;
      }
      while (v10);
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v12 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v12;
    uint64_t v13 = v8 + 56;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v14 = ~v12;
      uint64_t v15 = *(void *)(v8 + 48);
      while (1)
      {
        BOOL v16 = *(void **)(v15 + 8 * a2);
        if (v16[2] == v9)
        {
          if (!v9 || v16 == v5) {
            goto LABEL_48;
          }
          unint64_t v17 = v5[2];
          if (!v17) {
            goto LABEL_45;
          }
          BOOL v18 = v16[4] == v5[4] && v16[5] == v5[5];
          if (v18 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
          {
            if (v9 == 1) {
              goto LABEL_48;
            }
            unint64_t v19 = v17 - 2;
            if (v17 < 2) {
              goto LABEL_46;
            }
            if (v16[6] == v5[6] && v16[7] == v5[7]) {
              break;
            }
            uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if (result) {
              break;
            }
          }
        }
LABEL_13:
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v13 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_41;
        }
      }
      if (v9 == 2) {
        goto LABEL_48;
      }
      char v21 = v16 + 9;
      BOOL v23 = v5 + 9;
      Swift::UInt v22 = v9 - 2;
      while (v22)
      {
        if (!v19) {
          goto LABEL_44;
        }
        if (*(v21 - 1) != *(v23 - 1) || *v21 != *v23)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            goto LABEL_13;
          }
        }
        --v19;
        v23 += 2;
        v21 += 2;
        if (!--v22) {
          goto LABEL_48;
        }
      }
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
  }
LABEL_41:
  uint64_t v25 = *v29;
  *(void *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v25 + 48) + 8 * a2) = v5;
  uint64_t v26 = *(void *)(v25 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v25 + 16) = v28;
    return result;
  }
LABEL_47:
  __break(1u);
LABEL_48:
  sub_10003AFD0(&qword_100184220);
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1000BC950(Swift::Int result, unint64_t a2, char a3)
{
  int v5 = result & 1;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  char v22 = result & 1;
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_28;
  }
  if (a3)
  {
    sub_1000BB4A4();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1000BD5CC();
      goto LABEL_28;
    }
    sub_1000BED90();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  if (v5) {
    uint64_t v9 = 0x776569766572;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v5) {
    unint64_t v10 = 0xE600000000000000;
  }
  else {
    unint64_t v10 = 0xE000000000000000;
  }
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t result = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = *(unsigned char *)(*(void *)(v8 + 48) + a2) ? 0x776569766572 : 0;
      unint64_t v14 = *(unsigned char *)(*(void *)(v8 + 48) + a2) ? 0xE600000000000000 : 0xE000000000000000;
      if (v13 == v9 && v14 == v10) {
        goto LABEL_31;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_32;
      }
      a2 = (a2 + 1) & v12;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_28:
  uint64_t v17 = *v21;
  *(void *)(*v21 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v22;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (!v19)
  {
    *(void *)(v17 + 16) = v20;
    return result;
  }
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease_n();
LABEL_32:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_1000BCB2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  int v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003AFD0(&qword_1001857C0);
  uint64_t v6 = *v0;
  uint64_t v7 = static _SetStorage.copy(original:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v21 = *(void *)(v10 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v21 = *(void *)(v10 + 8 * v12);
        if (!v21) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_10003C3E8(*(void *)(v6 + 48) + v19, (uint64_t)v5);
    uint64_t result = (void *)sub_10003C4A8((uint64_t)v5, *(void *)(v8 + 48) + v19);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v16) {
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v10 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_25;
    }
    unint64_t v21 = *(void *)(v10 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1000BCD68()
{
  uint64_t v1 = v0;
  sub_10003AFD0(&qword_1001857F0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000BCF14()
{
  uint64_t v1 = v0;
  sub_10003AFD0(&qword_1001857F8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    id result = (void *)sub_100060C08(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000BD0C8(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10003AFD0(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    id result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000BD26C()
{
  uint64_t v1 = v0;
  sub_10003AFD0(&qword_1001857E0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000BD420()
{
  uint64_t v1 = v0;
  sub_10003AFD0(&qword_1001857E8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000BD5CC()
{
  uint64_t v1 = v0;
  sub_10003AFD0(&qword_100185800);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1000BD760()
{
  uint64_t v1 = v0;
  sub_10003AFD0(&qword_1001857D8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    id result = (void *)sub_10007F0B4(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v23);
    uint64_t v17 = *(void *)(v4 + 48) + v16;
    long long v18 = v23[0];
    long long v19 = v23[1];
    *(void *)(v17 + 32) = v24;
    *(_OWORD *)uint64_t v17 = v18;
    *(_OWORD *)(v17 + 16) = v19;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1000BD930()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_10003AFD0(&qword_1001857C0);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  int v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v33 + 72);
    sub_10003C3E8(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
    Hasher.init(_seed:)();
    id v22 = *(id *)v4;
    NSObject.hash(into:)();

    Hasher._combine(_:)(v4[8]);
    Hasher._combine(_:)(*((void *)v4 + 2));
    type metadata accessor for Date();
    sub_1000C0104();
    dispatch thunk of Hashable.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_10003C4A8((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000BDCC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857F0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  BOOL v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = NSObject._rawHashValue(seed:)(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000BDF3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857B0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    swift_retain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v9 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v9 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000BE204()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857F8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v29) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_36;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    unint64_t v20 = v19[1];
    Hasher.init(_seed:)();
    if (v20 >= 9)
    {
      swift_bridgeObjectRetain();
      String.hash(into:)();
    }
    else
    {
      Hasher._combine(_:)(qword_100125DF8[v20]);
      sub_100060C08(v21, v20);
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v21;
    v13[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1000BE4E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857D0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  BOOL v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    Hasher.init(_seed:)();
    int64_t v18 = *(void **)(v17 + 40);
    swift_retain();
    id v19 = [v18 serialNumber];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000BE7D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857E0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    id v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000BEA88()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_1001857E8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_40:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v27 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v28) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v28) {
        goto LABEL_38;
      }
      unint64_t v15 = *(void *)(v27 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v28) {
          goto LABEL_38;
        }
        unint64_t v15 = *(void *)(v27 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(*(void *)(v17 + 16));
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = v17 + 40;
      do
      {
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        v19 += 16;
        --v18;
      }
      while (v18);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v28)
  {
LABEL_38:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_40;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1000BED90()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003AFD0(&qword_100185800);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1000BF040()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_1000B7758(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_10003C374(0, (unint64_t *)&unk_100185900);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_1000BF9A0(v8);
      if (static NSObject.== infix(_:_:)())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1000BF1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = __CocoaSet.count.getter();
  uint64_t v6 = swift_unknownObjectRetain();
  Swift::Int v7 = sub_1000B7950(v6, v5);
  Swift::Int v22 = v7;
  Hasher.init(_seed:)();
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
  uint64_t v9 = *(void *)(a2 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8);
  swift_retain();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v7 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = *(void *)(v7 + 48);
    uint64_t v14 = (void *)(*(void *)(v13 + 8 * v12) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    BOOL v15 = *v14 == v8 && v14[1] == v9;
    if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_14:
      swift_release();
      uint64_t v19 = *(void *)(*(void *)(v7 + 48) + 8 * v12);
      sub_1000BFD10(v12);
      BOOL v20 = v8 == *(void *)(v19 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator)
         && v9 == *(void *)(v19 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator + 8);
      if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        *uint64_t v3 = v22;
        return v19;
      }
      __break(1u);
    }
    else
    {
      uint64_t v16 = ~v11;
      while (1)
      {
        unint64_t v12 = (v12 + 1) & v16;
        if (((*(void *)(v7 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
          break;
        }
        unint64_t v17 = (void *)(*(void *)(v13 + 8 * v12) + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
        BOOL v18 = *v17 == v8 && v17[1] == v9;
        if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_14;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1000BF3C0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v3 = __CocoaSet.count.getter();
  uint64_t v4 = swift_unknownObjectRetain();
  Swift::Int v5 = sub_1000B7B7C(v4, v3);
  Swift::Int v36 = v5;
  Hasher.init(_seed:)();
  uint64_t v6 = *(void **)(a2 + 40);
  swift_retain();
  id v7 = [v6 serialNumber];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      unint64_t v12 = *(void **)(*(void *)(*(void *)(v5 + 48) + 8 * v10) + 40);
      swift_retain();
      id v13 = [v12 serialNumber];
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      id v17 = [v6 serialNumber];
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      if (v14 == v18 && v16 == v20) {
        goto LABEL_10;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_release();
        __break(1u);
LABEL_10:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_12;
      }
    }
    swift_release();
LABEL_12:
    uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 8 * v10);
    sub_1000BFEFC(v10);
    id v24 = [v6 serialNumber];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    id v28 = [*(id *)(v23 + 40) serialNumber];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    if (v25 != v29 || v27 != v31)
    {
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v33)
      {
LABEL_19:
        *uint64_t v35 = v36;
        return v23;
      }
      __break(1u);
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1000BF69C(int64_t a1)
{
  uint64_t v28 = type metadata accessor for ModalPresentationCoordinator.QueueEntry(0);
  uint64_t v3 = *(void *)(v28 - 8);
  uint64_t result = __chkstk_darwin(v28);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v26 = v1;
    uint64_t v11 = ~v9;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v27 = (v12 + 1) & v11;
      uint64_t v13 = *(void *)(v3 + 72);
      uint64_t v14 = v11;
      do
      {
        uint64_t v15 = v13;
        int64_t v16 = v13 * v10;
        uint64_t v17 = v14;
        sub_10003C3E8(*(void *)(v7 + 48) + v13 * v10, (uint64_t)v6);
        Hasher.init(_seed:)();
        id v18 = *(id *)v6;
        NSObject.hash(into:)();

        Hasher._combine(_:)(v6[8]);
        Hasher._combine(_:)(*((void *)v6 + 2));
        type metadata accessor for Date();
        sub_1000C0104();
        dispatch thunk of Hashable.hash(into:)();
        Swift::Int v19 = Hasher._finalize()();
        sub_10003C50C((uint64_t)v6);
        uint64_t v14 = v17;
        Swift::Int v20 = v19 & v17;
        if (a1 >= (uint64_t)v27)
        {
          if (v20 < v27)
          {
            uint64_t v13 = v15;
            goto LABEL_5;
          }
          uint64_t v13 = v15;
          if (a1 < v20) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v13 = v15;
          if (v20 < v27 && a1 < v20) {
            goto LABEL_5;
          }
        }
        int64_t v21 = v13 * a1;
        if (v13 * a1 < v16 || *(void *)(v7 + 48) + v13 * a1 >= (unint64_t)(*(void *)(v7 + 48) + v16 + v13))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_17;
        }
        a1 = v10;
        if (v21 != v16)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_17:
          uint64_t v14 = v17;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v14;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v26;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v22 = *v1;
  uint64_t v23 = *(void *)(*v1 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v22 + 16) = v25;
    ++*(_DWORD *)(v22 + 36);
  }
  return result;
}

unint64_t sub_1000BF9A0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            id v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *uint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1000BFB44(unint64_t result)
{
  int64_t v2 = v1;
  int64_t v3 = result;
  uint64_t v4 = *v1;
  uint64_t v5 = *v1 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(v5 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v8 = ~v6;
    swift_retain();
    uint64_t v9 = _HashTable.previousHole(before:)();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (v9 + 1) & v8;
      do
      {
        sub_10007F0B4(*(void *)(v4 + 48) + 40 * v7, (uint64_t)v24);
        Swift::Int v13 = AnyHashable._rawHashValue(seed:)(*(void *)(v4 + 40));
        sub_10003C320((uint64_t)v24);
        Swift::Int v14 = v13 & v8;
        if (v3 >= (uint64_t)v10)
        {
          if (v14 >= v10 && v3 >= v14)
          {
LABEL_16:
            uint64_t v17 = *(void *)(v4 + 48);
            unint64_t v18 = v17 + 40 * v3;
            uint64_t v19 = (long long *)(v17 + 40 * v7);
            if (v3 != v7 || (int64_t v3 = v7, v18 >= (unint64_t)v19 + 40))
            {
              long long v11 = *v19;
              long long v12 = v19[1];
              *(void *)(v18 + 32) = *((void *)v19 + 4);
              *(_OWORD *)unint64_t v18 = v11;
              *(_OWORD *)(v18 + 16) = v12;
              int64_t v3 = v7;
            }
          }
        }
        else if (v14 >= v10 || v3 >= v14)
        {
          goto LABEL_16;
        }
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    *(void *)(v5 + (((unint64_t)v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v3) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v20 = *v2;
  uint64_t v21 = *(void *)(*v2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v20 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }
  return result;
}

unint64_t sub_1000BFD10(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_retain();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v10 = Hasher._finalize()();
        swift_release();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          Swift::Int v13 = (void *)(v12 + 8 * v2);
          Swift::Int v14 = (void *)(v12 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *Swift::Int v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1000BFEFC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        unint64_t v11 = *(void **)(v10 + 40);
        swift_retain();
        id v12 = [v11 serialNumber];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.hash(into:)();
        swift_bridgeObjectRelease();
        Swift::Int v13 = Hasher._finalize()();
        swift_release();
        unint64_t v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(v3 + 48);
          BOOL v16 = (void *)(v15 + 8 * v2);
          uint64_t v17 = (void *)(v15 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
          {
            void *v16 = *v17;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1000C0104()
{
  unint64_t result = qword_1001857B8;
  if (!qword_1001857B8)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001857B8);
  }
  return result;
}

uint64_t sub_1000C015C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v75 = a2;
  uint64_t v74 = sub_10003AFD0(&qword_1001857A0);
  uint64_t v7 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  id v73 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v64 = (uint64_t *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = type metadata accessor for DispatchTime();
  uint64_t v65 = *(void *)(v66 - 8);
  uint64_t v12 = __chkstk_darwin(v66);
  uint64_t v62 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v63 = (char *)&v55 - v14;
  uint64_t v77 = dispatch_group_create();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = sub_1000B6CF4(0, v16);
  uint64_t v69 = v15;
  *(void *)(v15 + 16) = v17;
  char v61 = (uint64_t *)(v15 + 16);
  if (v16)
  {
    uint64_t v56 = v10;
    uint64_t v58 = v9;
    char v59 = a3;
    uint64_t v60 = a4;
    uint64_t v71 = v75 + 24;
    uint64_t v72 = v75 + 16;
    uint64_t v18 = *(void **)(v75 + 40);
    id v70 = (void (**)(char *, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v19 = 0;
    uint64_t v76 = v16 - 1;
    uint64_t v57 = a1;
    uint64_t v20 = (unint64_t *)(a1 + 40);
    unint64_t v68 = 0x800000010012FD80;
    long long v67 = xmmword_100123B50;
    uint64_t v21 = v69;
    while (1)
    {
      uint64_t v22 = *(v20 - 1);
      unint64_t v23 = *v20;
      swift_bridgeObjectRetain();
      BOOL v24 = v77;
      dispatch_group_enter(v77);
      uint64_t v25 = (void *)swift_allocObject();
      void v25[2] = v21;
      v25[3] = v19;
      uint64_t v79 = v19;
      void v25[4] = v24;
      swift_retain_n();
      uint64_t v78 = v24;
      [v18 lock];
      uint64_t v26 = HIBYTE(v23) & 0xF;
      if ((v23 & 0x2000000000000000) == 0) {
        uint64_t v26 = v22 & 0xFFFFFFFFFFFFLL;
      }
      if (v26)
      {
        type metadata accessor for ImageLoader();
        uint64_t v27 = swift_allocObject();
        v80[1] = 0;
        char v81 = 2;
        swift_bridgeObjectRetain();
        Published.init(initialValue:)();
        uint64_t v28 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
        *(void *)(v27 + v28) = [objc_allocWithZone((Class)NSLock) init];
        *(unsigned char *)(v27 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
        uint64_t v29 = (void *)(v27 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
        void *v29 = v22;
        v29[1] = v23;
        swift_beginAccess();
        sub_10003AFD0(&qword_100184168);
        uint64_t v30 = v73;
        Published.projectedValue.getter();
        swift_endAccess();
        uint64_t v31 = (void *)swift_allocObject();
        void v31[2] = sub_1000C2D20;
        v31[3] = v25;
        int64_t v32 = v18;
        v31[4] = v75;
        v31[5] = v27;
        sub_1000B76FC();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v33 = v74;
        Publisher<>.sink(receiveValue:)();
        swift_release();
        uint64_t v34 = v33;
        uint64_t v18 = v32;
        (*v70)(v30, v34);
        swift_beginAccess();
        AnyCancellable.store(in:)();
        swift_endAccess();
        swift_release();
        swift_beginAccess();
        swift_retain();
        sub_1000B9024(v80, v27);
        swift_endAccess();
        swift_release();
        sub_10006E504();
        swift_release();
        [v32 unlock];
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10006FB78();
        swift_allocError();
        *uint64_t v35 = 0xD000000000000032;
        v35[1] = v68;
        swift_errorRetain();
        static os_log_type_t.error.getter();
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = v67;
        swift_getErrorValue();
        uint64_t v37 = Error.localizedDescription.getter();
        uint64_t v39 = v38;
        *(void *)(v36 + 56) = &type metadata for String;
        *(void *)(v36 + 64) = sub_10004D9B4();
        *(void *)(v36 + 32) = v37;
        *(void *)(v36 + 40) = v39;
        uint64_t v21 = v69;
        sub_10003C374(0, (unint64_t *)&qword_1001832C0);
        uint64_t v40 = (void *)static OS_os_log.default.getter();
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();

        swift_errorRelease();
        uint64_t v41 = v78;
        dispatch_group_leave(v78);
        swift_errorRelease();
        [v18 unlock];
        swift_bridgeObjectRelease();
      }
      swift_release();
      swift_release();
      if (v76 == v79) {
        break;
      }
      v20 += 2;
      uint64_t v19 = v79 + 1;
    }
    swift_bridgeObjectRelease();
    a3 = v59;
    uint64_t v9 = v58;
    uint64_t v10 = v56;
  }
  uint64_t v42 = v62;
  static DispatchTime.now()();
  uint64_t v43 = v64;
  *uint64_t v64 = 10;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v43, enum case for DispatchTimeInterval.seconds(_:), v9);
  uint64_t v44 = v63;
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v43, v9);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v65 + 8);
  uint64_t v46 = v66;
  v45(v42, v66);
  OS_dispatch_group.wait(timeout:)();
  v45(v44, v46);
  uint64_t v47 = v61;
  swift_beginAccess();
  uint64_t v48 = *v47;
  v80[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v49 = *(void *)(v48 + 16);
  if (v49)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v49; ++i)
    {
      id v51 = *(void **)(v48 + 8 * i + 32);
      if (v51)
      {
        id v52 = v51;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v80[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v80[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    id v53 = (void *)v80[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    id v53 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  *a3 = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OS_dispatch_semaphore.signal()();

  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C0A10(uint64_t a1, unint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v45 = a8;
  uint64_t v46 = a1;
  uint64_t v48 = a12;
  uint64_t v44 = a11;
  uint64_t v19 = sub_10003AFD0(&qword_1001857A0);
  uint64_t v41 = *(void *)(v19 - 8);
  uint64_t v42 = v19;
  __chkstk_darwin(v19);
  uint64_t v40 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_allocObject();
  int v38 = a4;
  *(_DWORD *)(v21 + 16) = a4;
  uint64_t v22 = v45;
  *(void *)(v21 + 24) = a5;
  *(void *)(v21 + 32) = a6;
  uint64_t v39 = a7;
  *(void *)(v21 + 40) = a7;
  *(void *)(v21 + 48) = v22;
  uint64_t v37 = a9;
  *(void *)(v21 + 56) = a9;
  *(void *)(v21 + 64) = a10;
  uint64_t v23 = v44;
  uint64_t v24 = v48;
  *(void *)(v21 + 72) = v44;
  *(void *)(v21 + 80) = v24;
  *(void *)(v21 + 88) = a13;
  uint64_t v43 = a3;
  uint64_t v25 = *(void **)(a3 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v36 = a13;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v47 = v25;
  uint64_t v26 = v46;
  [v25 lock];
  uint64_t v27 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v27 = v26 & 0xFFFFFFFFFFFFLL;
  }
  if (v27)
  {
    unint64_t v28 = a2;
    type metadata accessor for ImageLoader();
    uint64_t v29 = swift_allocObject();
    v49[1] = 0;
    char v50 = 2;
    swift_bridgeObjectRetain();
    Published.init(initialValue:)();
    uint64_t v30 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
    *(void *)(v29 + v30) = [objc_allocWithZone((Class)NSLock) init];
    *(unsigned char *)(v29 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
    uint64_t v31 = (void *)(v29 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    *uint64_t v31 = v26;
    v31[1] = v28;
    swift_beginAccess();
    sub_10003AFD0(&qword_100184168);
    int64_t v32 = v40;
    Published.projectedValue.getter();
    swift_endAccess();
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = sub_1000C2C88;
    v33[3] = v21;
    v33[4] = v43;
    v33[5] = v29;
    sub_1000B76FC();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v34 = v42;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v34);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1000B9024(v49, v29);
    swift_endAccess();
    swift_release();
    sub_10006E504();
    swift_release();
    [v47 unlock];
    return swift_release();
  }
  else
  {
    sub_100054DE0(0, v38, a5, a6, v39, v22, v37, a10, v23, v48, v36);
    [v47 unlock];
    return swift_release();
  }
}

uint64_t sub_1000C0E3C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_10003AFD0(&qword_1001857A0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  uint64_t v13 = *(void **)(a3 + 40);
  id v14 = a4;
  [v13 lock];
  uint64_t v15 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v15 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v15)
  {
    type metadata accessor for ImageLoader();
    uint64_t v16 = swift_allocObject();
    v28[1] = 0;
    char v29 = 2;
    swift_bridgeObjectRetain();
    Published.init(initialValue:)();
    uint64_t v17 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
    *(void *)(v16 + v17) = [objc_allocWithZone((Class)NSLock) init];
    *(unsigned char *)(v16 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
    uint64_t v18 = (void *)(v16 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    *uint64_t v18 = a1;
    v18[1] = a2;
    swift_beginAccess();
    sub_10003AFD0(&qword_100184168);
    Published.projectedValue.getter();
    swift_endAccess();
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = sub_1000C2C1C;
    v19[3] = v12;
    v19[4] = a3;
    v19[5] = v16;
    sub_1000B76FC();
    swift_retain();
    swift_retain();
    swift_retain();
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1000B9024(v28, v16);
    swift_endAccess();
    swift_release();
    sub_10006E504();
    swift_release();
  }
  else
  {
    sub_10006FB78();
    swift_allocError();
    void *v20 = 0xD000000000000032;
    v20[1] = 0x800000010012FD80;
    swift_errorRetain();
    static os_log_type_t.error.getter();
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100123B50;
    swift_getErrorValue();
    uint64_t v22 = Error.localizedDescription.getter();
    uint64_t v24 = v23;
    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = sub_10004D9B4();
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v24;
    sub_10003C374(0, (unint64_t *)&qword_1001832C0);
    uint64_t v25 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  [v13 unlock];
  return swift_release();
}

uint64_t sub_1000C1260(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void, uint64_t), uint64_t a5)
{
  uint64_t v10 = sub_10003AFD0(&qword_1001857A0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  uint64_t v15 = *(void **)(a3 + 40);
  swift_retain();
  [v15 lock];
  uint64_t v16 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    type metadata accessor for ImageLoader();
    uint64_t v17 = swift_allocObject();
    id v23 = v15;
    v24[1] = 0;
    char v25 = 2;
    swift_bridgeObjectRetain();
    Published.init(initialValue:)();
    uint64_t v18 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
    *(void *)(v17 + v18) = [objc_allocWithZone((Class)NSLock) init];
    *(unsigned char *)(v17 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
    uint64_t v19 = (void *)(v17 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    *uint64_t v19 = a1;
    v19[1] = a2;
    swift_beginAccess();
    sub_10003AFD0(&qword_100184168);
    Published.projectedValue.getter();
    swift_endAccess();
    uint64_t v20 = (void *)swift_allocObject();
    void v20[2] = sub_1000C19EC;
    v20[3] = v14;
    _OWORD v20[4] = a3;
    v20[5] = v17;
    sub_1000B76FC();
    swift_retain();
    swift_retain();
    swift_retain();
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1000B9024(v24, v17);
    swift_endAccess();
    swift_release();
    sub_10006E504();
    swift_release();
    [v23 unlock];
    return swift_release();
  }
  else
  {
    a4(0, 1);
    [v15 unlock];
    return swift_release();
  }
}

uint64_t sub_1000C15CC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void *a5, void (*a6)(void, uint64_t), uint64_t a7)
{
  uint64_t v14 = sub_10003AFD0(&qword_1001857A0);
  uint64_t v29 = *(void *)(v14 - 8);
  uint64_t v30 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v17[2] = a4;
  void v17[3] = a5;
  void v17[4] = a6;
  v17[5] = a7;
  uint64_t v18 = *(void **)(a3 + 40);
  id v19 = a4;
  id v20 = a5;
  swift_retain();
  id v31 = v18;
  [v18 lock];
  uint64_t v21 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v21)
  {
    type metadata accessor for ImageLoader();
    uint64_t v22 = swift_allocObject();
    v32[1] = 0;
    char v33 = 2;
    swift_bridgeObjectRetain();
    Published.init(initialValue:)();
    uint64_t v23 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
    *(void *)(v22 + v23) = [objc_allocWithZone((Class)NSLock) init];
    *(unsigned char *)(v22 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
    uint64_t v24 = (void *)(v22 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    void *v24 = a1;
    v24[1] = a2;
    swift_beginAccess();
    sub_10003AFD0(&qword_100184168);
    Published.projectedValue.getter();
    swift_endAccess();
    char v25 = (void *)swift_allocObject();
    void v25[2] = sub_1000C19A4;
    v25[3] = v17;
    void v25[4] = a3;
    void v25[5] = v22;
    sub_1000B76FC();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v26 = v30;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v26);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1000B9024(v32, v22);
    swift_endAccess();
    swift_release();
    sub_10006E504();
    swift_release();
    [v31 unlock];
    return swift_release();
  }
  else
  {
    sub_100090A54(0, (uint64_t)v19, v20, a6, a7);
    [v31 unlock];
    return swift_release();
  }
}

uint64_t sub_1000C195C()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000C19A4(uint64_t a1, uint64_t a2)
{
  return sub_100090474(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void (**)(void, uint64_t))(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1000C19B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C19EC(uint64_t a1, uint64_t a2)
{
  return sub_100090488(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_1000C19F8(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v10 = sub_10003AFD0(&qword_1001857A0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  uint64_t v15 = *(void **)(a3 + 40);
  swift_retain();
  [v15 lock];
  uint64_t v16 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    type metadata accessor for ImageLoader();
    uint64_t v17 = swift_allocObject();
    v28[1] = 0;
    char v29 = 2;
    swift_bridgeObjectRetain();
    Published.init(initialValue:)();
    uint64_t v18 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
    *(void *)(v17 + v18) = [objc_allocWithZone((Class)NSLock) init];
    *(unsigned char *)(v17 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
    id v19 = (void *)(v17 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    *id v19 = a1;
    v19[1] = a2;
    swift_beginAccess();
    sub_10003AFD0(&qword_100184168);
    Published.projectedValue.getter();
    swift_endAccess();
    id v20 = (void *)swift_allocObject();
    void v20[2] = sub_1000C22A0;
    v20[3] = v14;
    _OWORD v20[4] = a3;
    v20[5] = v17;
    sub_1000B76FC();
    swift_retain();
    swift_retain();
    swift_retain();
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1000B9024(v28, v17);
    swift_endAccess();
    swift_release();
    sub_10006E504();
    swift_release();
  }
  else
  {
    v27[1] = v14;
    sub_10006FB78();
    swift_allocError();
    *uint64_t v21 = 0xD000000000000032;
    v21[1] = 0x800000010012FD80;
    swift_errorRetain();
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100123B50;
    swift_getErrorValue();
    uint64_t v23 = Error.localizedDescription.getter();
    uint64_t v25 = v24;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_10004D9B4();
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v25;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    a4(0);
    swift_errorRelease();
  }
  [v15 unlock];
  return swift_release();
}

uint64_t sub_1000C1E4C(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v10 = sub_10003AFD0(&qword_1001857A0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  uint64_t v15 = *(void **)(a3 + 40);
  swift_retain();
  [v15 lock];
  uint64_t v16 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v16 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    type metadata accessor for ImageLoader();
    uint64_t v17 = swift_allocObject();
    v28[1] = 0;
    char v29 = 2;
    swift_bridgeObjectRetain();
    Published.init(initialValue:)();
    uint64_t v18 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
    *(void *)(v17 + v18) = [objc_allocWithZone((Class)NSLock) init];
    *(unsigned char *)(v17 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
    id v19 = (void *)(v17 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
    *id v19 = a1;
    v19[1] = a2;
    swift_beginAccess();
    sub_10003AFD0(&qword_100184168);
    Published.projectedValue.getter();
    swift_endAccess();
    id v20 = (void *)swift_allocObject();
    void v20[2] = sub_1000C22A0;
    v20[3] = v14;
    _OWORD v20[4] = a3;
    v20[5] = v17;
    sub_1000B76FC();
    swift_retain();
    swift_retain();
    swift_retain();
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_beginAccess();
    AnyCancellable.store(in:)();
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    swift_retain();
    sub_1000B9024(v28, v17);
    swift_endAccess();
    swift_release();
    sub_10006E504();
    swift_release();
  }
  else
  {
    v27[1] = v14;
    sub_10006FB78();
    swift_allocError();
    *uint64_t v21 = 0xD000000000000032;
    v21[1] = 0x800000010012FD80;
    swift_errorRetain();
    if (qword_1001827C8 != -1) {
      swift_once();
    }
    static os_log_type_t.error.getter();
    sub_10003AFD0((uint64_t *)&unk_1001836E0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100123B50;
    swift_getErrorValue();
    uint64_t v23 = Error.localizedDescription.getter();
    uint64_t v25 = v24;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_10004D9B4();
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v25;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    a4(0);
    swift_errorRelease();
  }
  [v15 unlock];
  return swift_release();
}

uint64_t sub_1000C22A0(uint64_t a1, uint64_t a2)
{
  return sub_10009F55C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1000C22B0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v74 = a2;
  uint64_t v73 = sub_10003AFD0(&qword_1001857A0);
  uint64_t v7 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v72 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v63 = (uint64_t *)((char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = type metadata accessor for DispatchTime();
  uint64_t v64 = *(void *)(v65 - 8);
  uint64_t v12 = __chkstk_darwin(v65);
  char v61 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v62 = (char *)&v54 - v14;
  uint64_t v76 = dispatch_group_create();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = sub_1000B6CF4(0, v16);
  uint64_t v68 = v15;
  *(void *)(v15 + 16) = v17;
  uint64_t v60 = (uint64_t *)(v15 + 16);
  if (v16)
  {
    uint64_t v55 = v10;
    uint64_t v57 = v9;
    uint64_t v58 = a3;
    char v59 = a4;
    uint64_t v70 = v74 + 24;
    uint64_t v71 = v74 + 16;
    uint64_t v18 = *(void **)(v74 + 40);
    uint64_t v69 = (void (**)(char *, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v19 = 0;
    uint64_t v75 = v16 - 1;
    uint64_t v56 = a1;
    id v20 = (unint64_t *)(a1 + 40);
    unint64_t v67 = 0x800000010012FD80;
    long long v66 = xmmword_100123B50;
    uint64_t v21 = v68;
    while (1)
    {
      uint64_t v22 = *(v20 - 1);
      unint64_t v23 = *v20;
      swift_bridgeObjectRetain();
      uint64_t v24 = v76;
      dispatch_group_enter(v76);
      uint64_t v25 = (void *)swift_allocObject();
      void v25[2] = v21;
      v25[3] = v19;
      uint64_t v78 = v19;
      void v25[4] = v24;
      swift_retain_n();
      uint64_t v77 = v24;
      [v18 lock];
      uint64_t v26 = HIBYTE(v23) & 0xF;
      if ((v23 & 0x2000000000000000) == 0) {
        uint64_t v26 = v22 & 0xFFFFFFFFFFFFLL;
      }
      if (v26)
      {
        type metadata accessor for ImageLoader();
        uint64_t v27 = swift_allocObject();
        v79[1] = 0;
        char v80 = 2;
        swift_bridgeObjectRetain();
        Published.init(initialValue:)();
        uint64_t v28 = OBJC_IVAR____TtC11Diagnostics11ImageLoader_lock;
        *(void *)(v27 + v28) = [objc_allocWithZone((Class)NSLock) init];
        *(unsigned char *)(v27 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_loading) = 0;
        char v29 = (void *)(v27 + OBJC_IVAR____TtC11Diagnostics11ImageLoader_assetLocator);
        void *v29 = v22;
        v29[1] = v23;
        swift_beginAccess();
        sub_10003AFD0(&qword_100184168);
        uint64_t v30 = v72;
        Published.projectedValue.getter();
        swift_endAccess();
        id v31 = (void *)swift_allocObject();
        void v31[2] = sub_1000C2B8C;
        v31[3] = v25;
        int64_t v32 = v18;
        v31[4] = v74;
        v31[5] = v27;
        sub_1000B76FC();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v33 = v73;
        Publisher<>.sink(receiveValue:)();
        swift_release();
        uint64_t v34 = v33;
        uint64_t v18 = v32;
        (*v69)(v30, v34);
        swift_beginAccess();
        AnyCancellable.store(in:)();
        swift_endAccess();
        swift_release();
        swift_beginAccess();
        swift_retain();
        sub_1000B9024(v79, v27);
        swift_endAccess();
        swift_release();
        sub_10006E504();
        swift_release();
        [v32 unlock];
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10006FB78();
        swift_allocError();
        *uint64_t v35 = 0xD000000000000032;
        v35[1] = v67;
        swift_errorRetain();
        static os_log_type_t.error.getter();
        sub_10003AFD0((uint64_t *)&unk_1001836E0);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = v66;
        swift_getErrorValue();
        uint64_t v37 = Error.localizedDescription.getter();
        uint64_t v39 = v38;
        *(void *)(v36 + 56) = &type metadata for String;
        *(void *)(v36 + 64) = sub_10004D9B4();
        *(void *)(v36 + 32) = v37;
        *(void *)(v36 + 40) = v39;
        uint64_t v21 = v68;
        sub_10003C374(0, (unint64_t *)&qword_1001832C0);
        uint64_t v40 = (void *)static OS_os_log.default.getter();
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();

        swift_errorRelease();
        uint64_t v41 = v77;
        dispatch_group_leave(v77);
        swift_errorRelease();
        [v18 unlock];
        swift_bridgeObjectRelease();
      }
      swift_release();
      swift_release();
      if (v75 == v78) {
        break;
      }
      v20 += 2;
      uint64_t v19 = v78 + 1;
    }
    swift_bridgeObjectRelease();
    a4 = v59;
    a3 = v58;
    uint64_t v9 = v57;
    uint64_t v10 = v55;
  }
  uint64_t v42 = v61;
  static DispatchTime.now()();
  uint64_t v43 = v63;
  *id v63 = 10;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v43, enum case for DispatchTimeInterval.seconds(_:), v9);
  uint64_t v44 = v62;
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v43, v9);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v64 + 8);
  uint64_t v46 = v65;
  v45(v42, v65);
  OS_dispatch_group.wait(timeout:)();
  v45(v44, v46);
  id v47 = v60;
  swift_beginAccess();
  uint64_t v48 = *v47;
  v79[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v49 = *(void *)(v48 + 16);
  if (v49)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v49; ++i)
    {
      id v51 = *(void **)(v48 + 8 * i + 32);
      if (v51)
      {
        id v52 = v51;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v79[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v79[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1000A1B54(a3, a4);

  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000C2B50()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C2B8C(void *a1, uint64_t a2)
{
  sub_1000B6DE8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t sub_1000C2BA0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000C2BE4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C2C1C(void *a1, uint64_t a2)
{
  return sub_10007B9D8(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1000C2C28()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1000C2C88(void *a1, uint64_t a2)
{
  return sub_100051658(a1, a2, *(_DWORD *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88));
}

uint64_t sub_1000C2CCC()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000C2D24()
{
  sub_100085804();
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_deviceInformationView];
  v5[3] = type metadata accessor for DeviceSelectorCell();
  void v5[4] = &off_1001529A8;
  v5[0] = v0;
  uint64_t v2 = v1 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate;
  swift_beginAccess();
  uint64_t v3 = v0;
  sub_1000C3950((uint64_t)v5, v2);
  return swift_endAccess();
}

void sub_1000C2DA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView];
  [v2 addSubview:v3];
  id v4 = [v1 contentView];
  [v4 addSubview:v2];

  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_deviceInformationView];
  id v6 = [v3 arrangedSubviews];
  sub_10003C374(0, (unint64_t *)&qword_1001858F0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_10009B4E4(v5, v8, 0);
}

void sub_1000C2F20()
{
  sub_1000859BC();
  uint64_t v1 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100123F00;
  id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer), "widthAnchor"));
  sub_100086DB4();
  id v5 = [v3 constraintEqualToConstant:v4 + -30.0];

  *(void *)(v2 + 32) = v5;
  specialized Array._endMutation()();
  sub_10003C374(0, (unint64_t *)&qword_1001831A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 activateConstraints:isa];
}

uint64_t sub_1000C3050()
{
  *(void *)(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_deviceInformationView)
            + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_state) = *(void *)(v0
                                                                                      + OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState);
  swift_retain_n();
  swift_release();
  sub_10003CB30();

  return swift_release();
}

void sub_1000C30D4(uint64_t a1)
{
}

uint64_t sub_1000C3100(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_deviceInformationView);
  unsigned __int8 v4 = [a1 displayDeviceIdentifier];
  *(unsigned char *)(v3 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_deviceIdentifierVisible) = v4;
  sub_10003D61C();
  id v5 = [a1 deviceIdentifier];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  return sub_10003D328(v6, v8);
}

id sub_1000C318C()
{
  sub_100041348(6, 0);
  sub_100041A98();
  sub_100041D34();
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned int v2 = [v0 BOOLForKey:v1];

  if (v2) {
    return (id)sub_100041348(0, 1);
  }
  unsigned int v4 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive");
  swift_unknownObjectRelease();
  id result = (id)sub_100041348(v4 ^ 1, 1);
  if ((v4 & 1) == 0) {
    return sub_100041940();
  }
  return result;
}

id sub_1000C3298()
{
  sub_100041348(3, 0);
  sub_100041A98();
  sub_100041D34();
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  if ((v2 & 1) == 0)
  {
    objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive");
    swift_unknownObjectRelease();
  }
  sub_100041348(4, 1);
  return sub_100041940();
}

id sub_1000C338C()
{
  sub_100041348(5, 0);
  sub_100041A98();
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  if (v2) {
    return (id)sub_100041348(0, 1);
  }
  unsigned int v3 = objc_msgSend(objc_msgSend(self, "currentPlatform"), "isInBoxUpdateModeActive");
  swift_unknownObjectRelease();
  if (v3) {
    return (id)sub_100041348(0, 1);
  }
  sub_100041348(2, 1);
  return sub_100041BE4();
}

id sub_1000C3494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_deviceViewController] = 0;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_dedDevice] = 0;
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_deviceInformationView;
  type metadata accessor for DeviceInformationView();
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v8 = v3;
  *(void *)&v3[v6] = [v7 init];

  if (a3)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v12.receiver = v8;
  v12.Class super_class = (Class)type metadata accessor for DeviceSelectorCell();
  [super initWithStyle:a1 reuseIdentifier:v9];

  return v10;
}

id sub_1000C35CC(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_deviceViewController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_dedDevice] = 0;
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_deviceInformationView;
  type metadata accessor for DeviceInformationView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];

  v8.receiver = v5;
  v8.Class super_class = (Class)type metadata accessor for DeviceSelectorCell();
  id v6 = [super initWithCoder:a1];

  return v6;
}

void sub_1000C36A8()
{
  NSString v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_deviceInformationView);
}

id sub_1000C36F8()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for DeviceSelectorCell();
  return [super dealloc];
}

uint64_t type metadata accessor for DeviceSelectorCell()
{
  return self;
}

void sub_1000C37AC(uint64_t a1, uint64_t a2, char a3)
{
}

uint64_t sub_1000C37D4(uint64_t a1, uint64_t a2)
{
  return sub_1000C3888(a2);
}

void sub_1000C37FC(char a1)
{
  if (a1) {
    return;
  }
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_deviceViewController);
  if (!v2)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics18DeviceSelectorCell_dedDevice);
  if (!v3)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v4 = v2;
  id v5 = v3;
  sub_1000D1BBC(v5);
}

uint64_t sub_1000C3888(uint64_t result)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState))
  {
    uint64_t v2 = result;
    type metadata accessor for CardState();
    swift_allocObject();
    uint64_t v3 = swift_retain_n();
    uint64_t v4 = sub_100058D58(v3);
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)(v4 + 24);
    *(void *)(v4 + 24) = v2;
    if (v6 != v2)
    {
      uint64_t v7 = *(void *)(v4 + 80);
      if ((v7 & 0x10) == 0) {
        *(void *)(v4 + 80) = v7 | 0x10;
      }
      sub_100059388();
    }
    sub_100059728(v5);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C3950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003AFD0(&qword_100182E30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C39B8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_suiteLabel);
  uint64_t v2 = self;
  id v3 = [v2 defaultMetrics];
  uint64_t v4 = self;
  id v5 = [v4 boldSystemFontOfSize:14.0];
  id v6 = [v3 scaledFontForFont:v5];

  [v1 setFont:v6];
  [v1 setNumberOfLines:0];
  uint64_t v7 = self;
  id v8 = [v7 labelColor];
  [v1 setTextColor:v8];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  NSString v9 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_dateLabel);
  id v10 = [v2 defaultMetrics];
  id v11 = [v4 systemFontOfSize:14.0];
  id v12 = [v10 scaledFontForFont:v11];

  [v9 setFont:v12];
  id v13 = [v7 secondaryLabelColor];
  [v9 setTextColor:v13];

  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];

  return sub_1000C4110();
}

void sub_1000C3BCC()
{
  id v1 = [v0 contentView];
  [v1 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_suiteLabel]];

  id v2 = [v0 contentView];
  [v2 addSubview:*(void *)&v0[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_dateLabel]];
}

void sub_1000C3C70()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_suiteLabel];
  id v35 = v1;
  id v2 = [v1 leadingAnchor];
  id v3 = [v0 contentView];
  id v4 = [v3 leadingAnchor];

  id v33 = [v2 constraintEqualToAnchor:v4 constant:15.0];
  id v5 = [v1 trailingAnchor];
  id v6 = [v0 contentView];
  id v7 = [v6 trailingAnchor];

  id v8 = [v5 constraintEqualToAnchor:v7 constant:-15.0];
  NSString v9 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_dateLabel];
  id v10 = [v9 leadingAnchor];
  id v11 = [v0 leadingAnchor];
  id v38 = [v10 constraintEqualToAnchor:v11 constant:15.0];

  id v12 = [v9 trailingAnchor];
  id v13 = [v0 trailingAnchor];
  id v36 = [v12 constraintEqualToAnchor:v13 constant:-15.0];

  LODWORD(v14) = 1148829696;
  [v33 setPriority:v14];
  LODWORD(v15) = 1148829696;
  [v8 setPriority:v15];
  LODWORD(v16) = 1148829696;
  [v38 setPriority:v16];
  LODWORD(v17) = 1148829696;
  [v36 setPriority:v17];
  uint64_t v37 = self;
  sub_10003AFD0((uint64_t *)&unk_100182E20);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_100125E80;
  id v19 = [v35 topAnchor];
  id v20 = [v0 contentView];
  id v21 = [v20 topAnchor];

  id v22 = [v19 constraintEqualToAnchor:v21 constant:12.0];
  *(void *)(v18 + 32) = v22;
  *(void *)(v18 + 40) = v33;
  *(void *)(v18 + 48) = v8;
  id v34 = v33;
  id v23 = v8;
  id v24 = [v9 topAnchor];
  id v25 = [v35 bottomAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25 constant:2.0];

  *(void *)(v18 + 56) = v26;
  id v27 = [v9 bottomAnchor];
  id v28 = [v0 contentView];
  id v29 = [v28 bottomAnchor];

  id v30 = [v27 constraintEqualToAnchor:v29 constant:-12.0];
  *(void *)(v18 + 64) = v30;
  *(void *)(v18 + 72) = v38;
  *(void *)(v18 + 80) = v36;
  specialized Array._endMutation()();
  sub_10005C04C();
  id v31 = v38;
  id v32 = v36;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v37 activateConstraints:isa];
}

uint64_t sub_1000C4110()
{
  [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_suiteLabel] setAlpha:0.0];
  [*(id *)&v0[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_dateLabel] setAlpha:0.0];
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  id v2 = self;
  void v6[4] = sub_1000C460C;
  void v6[5] = v1;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_1000358AC;
  v6[3] = &unk_1001529E8;
  id v3 = _Block_copy(v6);
  id v4 = v0;
  swift_retain();
  swift_release();
  [v2 animateWithDuration:0x10000 delay:v3 options:0 animations:0.375 completion:0.0];
  _Block_release(v3);
  return swift_release();
}

id sub_1000C4254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_fontSizeSuiteTitle] = 0x402C000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_fontSizeDate] = 0x402C000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_verticalMargin] = 0x4028000000000000;
  *(void *)&v3[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_verticalPadding] = 0x4000000000000000;
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_suiteLabel;
  id v7 = objc_allocWithZone((Class)UILabel);
  id v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  uint64_t v9 = OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_dateLabel;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)UILabel) init];

  if (a3)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v13.receiver = v8;
  v13.Class super_class = (Class)type metadata accessor for HistoryTableViewCell();
  id v11 = [super initWithStyle:a1 reuseIdentifier:v10];

  return v11;
}

id sub_1000C43D0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_fontSizeSuiteTitle] = 0x402C000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_fontSizeDate] = 0x402C000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_verticalMargin] = 0x4028000000000000;
  *(void *)&v1[OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_verticalPadding] = 0x4000000000000000;
  uint64_t v3 = OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_suiteLabel;
  id v4 = objc_allocWithZone((Class)UILabel);
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_dateLabel;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UILabel) init];

  v9.receiver = v5;
  v9.Class super_class = (Class)type metadata accessor for HistoryTableViewCell();
  [super initWithCoder:a1];

  return v7;
}

void sub_1000C44F0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_dateLabel);
}

id sub_1000C4530()
{
  v2.receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for HistoryTableViewCell();
  return [super dealloc];
}

uint64_t type metadata accessor for HistoryTableViewCell()
{
  return self;
}

uint64_t sub_1000C45D4()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000C460C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  [*(id *)(v1 + OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_suiteLabel) setAlpha:1.0];
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC11Diagnostics20HistoryTableViewCell_dateLabel);

  return [v2 setAlpha:1.0];
}

uint64_t sub_1000C466C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000C467C()
{
  return swift_release();
}

uint64_t sub_1000C4684(uint64_t a1, unint64_t a2)
{
  return sub_1000C4698(a1, a2, (uint64_t)&qword_1001858F0);
}

uint64_t sub_1000C4698(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v6 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      id v7 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
      id v8 = v7;
      sub_10003C374(0, (unint64_t *)a3);
      a3 = static NSObject.== infix(_:_:)();

      if (a3)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v5 == 1) {
        goto LABEL_18;
      }
      if (v6) {
        break;
      }
      unint64_t v6 = 5;
      while (1)
      {
        unint64_t v12 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        a3 = (uint64_t)*(id *)(a2 + 8 * v6);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
        ++v6;
        if (v12 == v5) {
          goto LABEL_18;
        }
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = a3 + 1;
      if (__OFADD__(a3, 1)) {
        break;
      }
      char v11 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
      ++a3;
      if (v10 == v5) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000C4820(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(void *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 5; ; ++i)
  {
    uint64_t v4 = i - 3;
    if (__OFADD__(i - 4, 1)) {
      break;
    }
    BOOL v6 = *(void *)(a2 + 8 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000C4884()
{
  sub_100085804();
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC11Diagnostics19CardViewSessionCell_testRunnerView];
  uint64_t v2 = type metadata accessor for CardViewSessionCell();
  uint64_t v10 = v2;
  char v11 = &off_100152A28;
  v9[0] = v0;
  uint64_t v3 = v1 + OBJC_IVAR____TtC11Diagnostics14TestRunnerView_delegate;
  swift_beginAccess();
  uint64_t v4 = v0;
  sub_1000CAA9C((uint64_t)v9, v3, &qword_100183120);
  swift_endAccess();
  uint64_t v5 = *(void *)&v4[OBJC_IVAR____TtC11Diagnostics19CardViewSessionCell_deviceInformationView];
  uint64_t v10 = v2;
  char v11 = &off_100152A10;
  v9[0] = v4;
  uint64_t v6 = v5 + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_delegate;
  swift_beginAccess();
  id v7 = v4;
  sub_1000CAA9C((uint64_t)v9, v6, &qword_100182E30);
  return swift_endAccess();
}

void sub_1000C4980()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackViewContainer];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC11Diagnostics12CardViewCell_stackView];
  [v2 addSubview:v3];
  id v4 = [v1 contentView];
  [v4 addSubview:v2];

  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC11Diagnostics19CardViewSessionCell_deviceInformationView];
  id v6 = [v3 arrangedSubviews];
  sub_10003C374(0, (unint64_t *)&qword_1001858F0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_10009B4E4(v5, v8, 0);
}

uint64_t sub_1000C4AB8()
{
  *(void *)(*(void *)(v0 + OBJC_IVAR____TtC11Diagnostics19CardViewSessionCell_deviceInformationView)
            + OBJC_IVAR____TtC11Diagnostics21DeviceInformationView_state) = *(void *)(v0
                                                                                      + OBJC_IVAR____TtC11Diagnostics12CardViewCell_cardState);
  swift_retain_n();
  swift_release();
  sub_10003CB30();

  return swift_release();
}

void sub_1000C4B3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v62 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v63 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  double v14 = (char *)&v58 - v13;
  uint64_t v15 = type metadata accessor for ModalPresentationCoordinator(0);
  uint64_t v16 = __chkstk_darwin(v15);
  if (*(unsigned char *)(a1 + 19) != 1)
  {
    sub_10003C374(0, (unint64_t *)&qword_100182E40);
    uint64_t v25 = v62;
    uint64_t v61 = v5;
    uint64_t v59 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v60 = *(void (**)(char *, uint64_t))(v9 + 8);
    v60(v12, v8);
    uint64_t v26 = swift_allocObject();
    id v27 = v64;
    *(void *)(v26 + 16) = v64;
    aBlock[4] = sub_1000CAA30;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000358AC;
    aBlock[3] = &unk_100152C68;
    id v28 = _Block_copy(aBlock);
    id v29 = v27;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10003AF78();
    sub_10003AFD0((uint64_t *)&unk_100182E50);
    sub_10003B014();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v30 = (void *)v59;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v7, v61);
    v60(v14, v8);
    return;
  }
  uint64_t v62 = v16;
  uint64_t v63 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)qword_100183500;
  if (qword_100183500)
  {
    type metadata accessor for SelfServiceDestinationPickerViewController();
    if (!swift_dynamicCastClass())
    {
      id v31 = v18;
LABEL_20:
      id v24 = v31;
      goto LABEL_21;
    }
  }
  if (qword_100182750 != -1) {
    swift_once();
  }
  id v19 = [(id)qword_10018A380 viewControllers];
  sub_10003C374(0, (unint64_t *)&qword_100183670);
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    if (qword_100182748 != -1) {
      swift_once();
    }
    id v31 = (id)qword_10018A370;
    goto LABEL_20;
  }
LABEL_8:
  unint64_t v22 = v21 - 1;
  if (__OFSUB__(v21, 1)) {
    goto LABEL_39;
  }
  if ((v20 & 0xC000000000000001) != 0) {
    goto LABEL_40;
  }
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v22 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_42:
    __break(1u);
LABEL_43:
    swift_once();
LABEL_28:
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
    return;
  }
  for (id i = *(id *)(v20 + 8 * v22 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    id v24 = i;
    swift_bridgeObjectRelease();
LABEL_21:
    type metadata accessor for DashboardViewController();
    uint64_t v32 = swift_dynamicCastClass();
    if (!v32)
    {

      if (qword_1001827C8 != -1) {
        goto LABEL_43;
      }
      goto LABEL_28;
    }
    uint64_t v33 = *(void *)(v32 + OBJC_IVAR____TtC11Diagnostics23DashboardViewController_cardManager)
        + OBJC_IVAR____TtC11Diagnostics11CardManager_cardsInView;
    swift_beginAccess();
    uint64_t v34 = *(void *)v33;
    if (!*(void *)(*(void *)v33 + 16)) {
      break;
    }
    unint64_t v35 = sub_10007D8D0(1u);
    if (v36)
    {
      unint64_t v37 = *(void *)(*(void *)(v34 + 56) + 8 * v35);
      if (v37 >> 62)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!*(void *)(v34 + 16)) {
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!*(void *)(v34 + 16)) {
          goto LABEL_45;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = 0;
      if (!*(void *)(v34 + 16)) {
        goto LABEL_45;
      }
    }
    unint64_t v39 = sub_10007D8D0(0);
    if ((v40 & 1) == 0) {
      goto LABEL_45;
    }
    unint64_t v41 = *(void *)(*(void *)(v34 + 56) + 8 * v39);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v41 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    BOOL v43 = __OFADD__(v38, v42);
    v38 += v42;
    if (!v43) {
      goto LABEL_46;
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    ;
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = 0;
LABEL_45:
  swift_bridgeObjectRelease();
LABEL_46:
  uint64_t v44 = *(void **)(a1 + 40);
  id v45 = [v44 suiteName];
  if (!v45)
  {

    return;
  }
  uint64_t v46 = v45;
  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v49 = v48;

  char v50 = *(void (**)(uint64_t))(a1 + 56);
  if (!v50)
  {
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v51 = *(void *)(a1 + 64);
  swift_retain();
  id v52 = [v44 sessionSettings];
  unsigned __int8 v53 = [v52 fullscreenPromptsEnabled];

  if (v53)
  {
LABEL_56:
    sub_1000C8500(v47, v49, (uint64_t)v50, v51);
    sub_10003B0B8((uint64_t)v50);

    swift_bridgeObjectRelease();
    return;
  }
  if (qword_100182828 != -1) {
    swift_once();
  }
  uint64_t v54 = sub_10003C3B0(v62, (uint64_t)qword_10018A440);
  swift_beginAccess();
  uint64_t v55 = v54;
  uint64_t v56 = v63;
  sub_1000CAA38(v55, v63);
  id v57 = sub_1000D96A4();
  if (v57)
  {

    sub_1000CACBC(v56, type metadata accessor for ModalPresentationCoordinator);
    goto LABEL_56;
  }
  sub_1000CACBC(v56, type metadata accessor for ModalPresentationCoordinator);
  if (v38 >= 2) {
    goto LABEL_56;
  }
  swift_bridgeObjectRelease();
  v50(1);

  sub_10003B0B8((uint64_t)v50);
}