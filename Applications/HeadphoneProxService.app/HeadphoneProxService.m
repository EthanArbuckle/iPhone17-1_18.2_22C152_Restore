void sub_1000047E8(uint64_t a1)
{
  void (**v2)(void, void);
  id v3;
  uint64_t vars8;

  [*(id *)(a1 + 32) ams_dictionaryByAddingEntriesFromDictionary:];
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v2 = [*(id *)(a1 + 40) accessoryAttached];
  ((void (**)(void, id))v2)[2](v2, v3);
}

void sub_1000049D8(uint64_t a1)
{
  [*(id *)(a1 + 32) ams_dictionaryByAddingEntriesFromDictionary:];
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  v2 = [*(id *)(a1 + 40) accessoryAttached];
  ((void (**)(void, id))v2)[2](v2, v3);
}

id sub_1000055C8()
{
  if (qword_1000D6CD8 != -1) {
    dispatch_once(&qword_1000D6CD8, &stru_1000C1E50);
  }
  v0 = (void *)qword_1000D6CD0;

  return v0;
}

void sub_10000561C(id a1)
{
  qword_1000D6CD0 = (uint64_t)os_log_create("com.apple.HeadphoneProxService", "Headphone");

  _objc_release_x1();
}

Class sub_100006258()
{
  if (qword_1000D6CE8 != -1) {
    dispatch_once(&qword_1000D6CE8, &stru_1000C1E70);
  }
  Class result = objc_getClass("AFPreferences");
  qword_1000D6CE0 = (uint64_t)result;
  off_1000D4190 = (uint64_t (*)())sub_1000062BC;
  return result;
}

id sub_1000062BC()
{
  return (id)qword_1000D6CE0;
}

void sub_1000062C8(id a1)
{
  qword_1000D6CF0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices", 2);
}

Class sub_1000062F4()
{
  if (qword_1000D6D00 != -1) {
    dispatch_once(&qword_1000D6D00, &stru_1000C1E90);
  }
  Class result = objc_getClass("VTPreferences");
  qword_1000D6CF8 = (uint64_t)result;
  off_1000D4198 = (uint64_t (*)())sub_100006358;
  return result;
}

id sub_100006358()
{
  return (id)qword_1000D6CF8;
}

void sub_100006364(id a1)
{
  qword_1000D6D08 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/VoiceTrigger.framework/VoiceTrigger", 2);
}

Class sub_100006390()
{
  if (qword_1000D6D18 != -1) {
    dispatch_once(&qword_1000D6D18, &stru_1000C1EB0);
  }
  Class result = objc_getClass("UNNotificationSettingsCenter");
  qword_1000D6D10 = (uint64_t)result;
  off_1000D41A0 = (uint64_t (*)())sub_1000063F4;
  return result;
}

id sub_1000063F4()
{
  return (id)qword_1000D6D10;
}

void sub_100006400(id a1)
{
  qword_1000D6D20 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/UserNotificationsSettings.framework/UserNotificationsSettings", 2);
}

Class sub_10000642C()
{
  if (qword_1000D6D18 != -1) {
    dispatch_once(&qword_1000D6D18, &stru_1000C1EB0);
  }
  Class result = objc_getClass("UNMutableNotificationSystemSettings");
  qword_1000D6D28 = (uint64_t)result;
  off_1000D41A8 = (uint64_t (*)())sub_100006490;
  return result;
}

id sub_100006490()
{
  return (id)qword_1000D6D28;
}

Class sub_10000649C()
{
  if (qword_1000D6D38 != -1) {
    dispatch_once(&qword_1000D6D38, &stru_1000C1ED0);
  }
  Class result = objc_getClass("TUUserConfiguration");
  qword_1000D6D30 = (uint64_t)result;
  off_1000D41B0 = (uint64_t (*)())sub_100006500;
  return result;
}

id sub_100006500()
{
  return (id)qword_1000D6D30;
}

void sub_10000650C(id a1)
{
  qword_1000D6D40 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 2);
}

Class sub_100006638()
{
  if (qword_1000D6D50 != -1) {
    dispatch_once(&qword_1000D6D50, &stru_1000C1F10);
  }
  Class result = objc_getClass("HPSSpatialProfileManager");
  qword_1000D6D48 = (uint64_t)result;
  off_1000D4278 = (uint64_t (*)())sub_10000669C;
  return result;
}

id sub_10000669C()
{
  return (id)qword_1000D6D48;
}

void sub_1000066A8(id a1)
{
  qword_1000D6D58 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/HeadphoneConfigs.framework/HeadphoneConfigs", 2);
}

__CFString *sub_100006C58()
{
  v0 = +[UTType _typeOfCurrentDevice];
  v1 = [v0 identifier];

  uint64_t v6 = 0;
  v2 = +[ISSymbol symbolForTypeIdentifier:v1 error:&v6];
  id v3 = v2;
  if (v6)
  {
    v4 = @"iphone";
  }
  else
  {
    v4 = [v2 name];
  }

  return v4;
}

void sub_100006D08()
{
  v1 = v0;
  v49.receiver = v0;
  v49.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  [v0 setDismissalType:1];
  id v2 = [v0 traitCollection];
  id v3 = [v2 userInterfaceStyle];

  if (v3 == (id)1) {
    uint64_t v4 = 0x746867694CLL;
  }
  else {
    uint64_t v4 = 1802658116;
  }
  if (v3 == (id)1) {
    v5 = (void *)0xE500000000000000;
  }
  else {
    v5 = (void *)0xE400000000000000;
  }
  id v6 = [objc_allocWithZone((Class)UIStackView) init];
  [v6 setAxis:1];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = v4;
  v7._object = v5;
  String.append(_:)(v7);
  v8 = (void *)sub_100027B70(0x45u);
  uint64_t v10 = v9;
  uint64_t v11 = sub_100027B70(0x46u);
  v13 = (void *)sub_1000082F0(0xD000000000000013, 0x80000001000A5DE0, v8, v10, v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v48 = v13;
  [v6 addArrangedSubview:v13];
  [v13 setFrame:0.0, 0.0, 320.0, 90.0];
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = v4;
  v14._object = v5;
  String.append(_:)(v14);
  v15 = (void *)sub_100027B70(0x47u);
  uint64_t v17 = v16;
  uint64_t v18 = sub_100027B70(0x48u);
  v20 = (void *)sub_1000082F0(0xD000000000000019, 0x80000001000A5E00, v15, v17, v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  [v6 addArrangedSubview:v20];
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = v4;
  v21._object = v5;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22 = (void *)sub_100027B70(0x49u);
  uint64_t v24 = v23;
  uint64_t v25 = sub_100027B70(0x4Au);
  v27 = (void *)sub_1000082F0(0xD00000000000001CLL, 0x80000001000A5E20, v22, v24, v25, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  [v6 addArrangedSubview:v27];
  id v28 = [v1 contentView];
  [v28 addSubview:v6];

  id v29 = [v1 contentView];
  id v30 = [v29 mainContentGuide];

  v31 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1000A19C0;
  id v33 = [v6 topAnchor];
  id v34 = [v30 topAnchor];
  id v35 = [v33 constraintGreaterThanOrEqualToAnchor:v34];

  *(void *)(v32 + 32) = v35;
  id v36 = [v6 bottomAnchor];
  id v37 = [v30 bottomAnchor];
  id v38 = [v36 constraintLessThanOrEqualToAnchor:v37];

  *(void *)(v32 + 40) = v38;
  id v39 = [v6 widthAnchor];
  id v40 = [v39 constraintEqualToConstant:320.0];

  *(void *)(v32 + 48) = v40;
  id v41 = [v6 centerYAnchor];
  id v42 = [v30 centerYAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  *(void *)(v32 + 56) = v43;
  id v44 = [v6 centerXAnchor];
  id v45 = [v30 centerXAnchor];
  id v46 = [v44 constraintEqualToAnchor:v45];

  *(void *)(v32 + 64) = v46;
  specialized Array._endMutation()();
  sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v31 activateConstraints:isa];
}

void sub_100007428()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1];

  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_100008250;
  uint64_t v17 = v2;
  v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  Swift::String v14 = sub_100012FF0;
  v15 = &unk_1000C2388;
  uint64_t v4 = _Block_copy(&v12);
  v5 = self;
  id v6 = [v5 actionWithTitle:v3 style:0 handler:v4];

  _Block_release(v4);
  swift_release();
  swift_release();

  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_100008270;
  uint64_t v17 = v7;
  v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  Swift::String v14 = sub_100012FF0;
  v15 = &unk_1000C23B0;
  uint64_t v9 = _Block_copy(&v12);
  id v10 = [v5 actionWithTitle:v8 style:1 handler:v9];

  _Block_release(v9);
  swift_release();
  swift_release();
  id v11 = [v0 addAction:v10];
}

void sub_1000076DC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100008278(v3, (uint64_t)qword_1000D69F0);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        id v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Separate Cards For Adaptive Controls", v6, 2u);
        swift_slowDealloc();
      }

      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10003CDDC();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
}

void sub_100007828()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008C458();
      swift_unknownObjectRelease();
    }
  }
}

id sub_10000793C()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t type metadata accessor for HeadphoneAdaptiveControlsUpsellViewController()
{
  return self;
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

__n128 sub_1000079C0(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_1000079CC(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1000079EC(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_100007A2C()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneAdaptiveControlsUpsellViewController_type);
}

uint64_t sub_100007A3C(uint64_t a1, uint64_t a2)
{
  return sub_100007BCC(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100007A60(uint64_t a1, uint64_t a2)
{
  return sub_100007BCC(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

void sub_100007A80(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_100007A88(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_100007A90(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_100007B08(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100007B88@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100007BCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100007C10()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100007C64()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_100007CD8(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_100007CE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void *sub_100007CF8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_100007D0C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_100007D3C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_100007D50(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_100007D64@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100007D74(void *a1@<X8>)
{
  *a1 = *v1;
}

_DWORD *sub_100007D80@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unsigned __int8 *sub_100007D8C@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_100007D9C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100007DB4()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void *sub_100007E40@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_100007E4C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

_DWORD *sub_100007E58@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_100007E6C(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_100007E80(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_100007E94(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_100007EA8(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_100007EBC(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

_DWORD *sub_100007ED0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

_DWORD *sub_100007EE0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_100007EF4@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_100007F08(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_100007F38@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_100007F64@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_100007F88(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_100007F9C(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_100007FB0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_100007FC4(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_100007FD8()
{
  return *v0 == 0;
}

uint64_t sub_100007FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

_DWORD *sub_100008000(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_100008018@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100008044(uint64_t a1)
{
  uint64_t v2 = sub_100009104((unint64_t *)&qword_1000D4570, type metadata accessor for Key);
  uint64_t v3 = sub_100009104(&qword_1000D4620, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100008100@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100008148(uint64_t a1)
{
  uint64_t v2 = sub_100009104((unint64_t *)&qword_1000D4610, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v3 = sub_100009104(&qword_1000D4618, type metadata accessor for OpenExternalURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

BOOL sub_100008204(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100008218()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100008250()
{
}

uint64_t sub_100008258(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100008268()
{
  return swift_release();
}

void sub_100008270()
{
}

uint64_t sub_100008278(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_1000082B0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3 = sub_1000093D4(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1000082F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  v79._object = a6;
  v79._countAndFlagsBits = a5;
  id v78 = a3;
  v80 = (void *)type metadata accessor for CharacterSet();
  uint64_t v7 = *(v80 - 1);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)UIView) init];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 bounds];
  [v10 setBounds:];
  type metadata accessor for HeadphoneAdaptiveControlsUpsellViewController();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v12 = [self bundleForClass:ObjCClassFromMetadata];
  id v13 = objc_allocWithZone((Class)BSUICAPackageView);
  id v14 = v12;
  swift_bridgeObjectRetain();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v13 initWithPackageName:v15 inBundle:v14];

  id v77 = v14;
  if (!v16)
  {
    __break(1u);
    goto LABEL_7;
  }
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v16 setFrame:CGRectMake(0.0, 6.0, 78.0, 78.0)];
  [v10 addSubview:v16];
  id v17 = [objc_allocWithZone((Class)UILabel) init];
  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v81 = (uint64_t)v78;
  uint64_t v82 = a4;
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = 10;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  swift_bridgeObjectRetain();
  String.append(_:)(v79);
  swift_bridgeObjectRelease();
  static CharacterSet.newlines.getter();
  sub_100008E5C();
  uint64_t v19 = StringProtocol.components(separatedBy:)();
  (*(void (**)(char *, void *))(v7 + 8))(v9, v80);
  if (!*(void *)(v19 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_8;
  }
  v20 = v10;
  Swift::String v21 = *(void **)(v19 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = self;
  id v23 = [v22 _preferredFontForTextStyle:UIFontTextStyleSubheadline variant:256];
  if (!v23)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v24 = v23;
  id v76 = v21;
  v79._countAndFlagsBits = (uint64_t)v17;
  v79._object = v16;
  v80 = v20;
  id v25 = [v23 fontDescriptor];
  id v26 = [v25 fontDescriptorWithSymbolicTraits:2];

  if (v26)
  {
    [v24 pointSize];
    id v27 = [v22 fontWithDescriptor:v26];

    sub_100008E18(&qword_1000D4560);
    uint64_t inited = swift_initStackObject();
    long long v75 = xmmword_1000A19D0;
    *(_OWORD *)(inited + 16) = xmmword_1000A19D0;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v29 = sub_100008EB0(0, &qword_1000D4568);
    *(void *)(inited + 64) = v29;
    *(void *)(inited + 40) = v27;
    id v30 = NSFontAttributeName;
    id v78 = v27;
    sub_100089034(inited);
    NSString v31 = String._bridgeToObjectiveC()();
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v74 = [v31 rangeOfString:v32];
    uint64_t v34 = v33;

    uint64_t v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = v75;
    *(void *)(v35 + 64) = v29;
    *(void *)(v35 + 32) = v30;
    *(void *)(v35 + 40) = v24;
    id v36 = v30;
    id v76 = v24;
    sub_100089034(v35);
    id v37 = objc_allocWithZone((Class)NSMutableAttributedString);
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_100009104((unint64_t *)&qword_1000D4570, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v40 = [v37 initWithString:v38 attributes:isa];

    Class v41 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    *(void *)&long long v75 = v40;
    [v40 addAttributes:v41 range:v74];

    countAndFlagsBits = (void *)v79._countAndFlagsBits;
    [(id)v79._countAndFlagsBits setAttributedText:v40];
    [countAndFlagsBits setFrame:90.0, 6.0, 230.0, 84.0];
    id v43 = [self labelColor];
    [countAndFlagsBits setTextColor:v43];

    [countAndFlagsBits setNumberOfLines:0];
    [countAndFlagsBits sizeToFit];
    id v44 = v80;
    [v80 addSubview:countAndFlagsBits];
    id v74 = self;
    sub_100008E18((uint64_t *)&unk_1000D5090);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1000A19E0;
    object = v79._object;
    id v47 = [v79._object leadingAnchor];
    id v48 = [v44 leadingAnchor];
    id v49 = [v47 constraintEqualToAnchor:v48 constant:6.0];

    *(void *)(v45 + 32) = v49;
    id v50 = [object topAnchor];
    id v51 = [v44 topAnchor];
    id v52 = [v50 constraintEqualToAnchor:v51 constant:6.0];

    *(void *)(v45 + 40) = v52;
    id v53 = [object widthAnchor];
    id v54 = [v53 constraintEqualToConstant:78.0];

    *(void *)(v45 + 48) = v54;
    id v55 = [object heightAnchor];
    id v56 = [v55 constraintEqualToConstant:78.0];

    *(void *)(v45 + 56) = v56;
    id v57 = [object bottomAnchor];
    id v58 = [v44 bottomAnchor];
    id v59 = [v57 constraintLessThanOrEqualToAnchor:v58];

    *(void *)(v45 + 64) = v59;
    id v60 = [countAndFlagsBits leadingAnchor];
    id v61 = [object trailingAnchor];
    id v62 = [v60 constraintEqualToAnchor:v61 constant:6.0];

    *(void *)(v45 + 72) = v62;
    id v63 = [countAndFlagsBits topAnchor];
    id v64 = [v44 topAnchor];
    id v65 = [v63 constraintEqualToAnchor:v64 constant:6.0];

    *(void *)(v45 + 80) = v65;
    id v66 = [countAndFlagsBits widthAnchor];
    id v67 = [v66 constraintEqualToConstant:230.0];

    *(void *)(v45 + 88) = v67;
    id v68 = [countAndFlagsBits bottomAnchor];
    id v69 = [v44 bottomAnchor];
    id v70 = [v68 constraintLessThanOrEqualToAnchor:v69];

    *(void *)(v45 + 96) = v70;
    uint64_t v81 = v45;
    specialized Array._endMutation()();
    sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
    Class v71 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v74 activateConstraints:v71];

    return (uint64_t)v44;
  }
LABEL_9:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100008E18(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_100008E5C()
{
  unint64_t result = qword_1000D4558;
  if (!qword_1000D4558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4558);
  }
  return result;
}

uint64_t sub_100008EB0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_100008F00(uint64_t a1)
{
  return a1;
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for HeadphoneLayoutMetrics(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 sub_100008F70(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_100008F84(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100008FA4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CMTimeRange(uint64_t a1)
{
}

__n128 initializeWithTake for LabelledBatteryView.Position(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneLayoutMetrics.VideoMetric(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HeadphoneLayoutMetrics.VideoMetric(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for SFAnnounceCallsState(uint64_t a1)
{
}

void type metadata accessor for SFBluetoothHeadsetStatus(uint64_t a1)
{
}

void type metadata accessor for SFBluetoothCaseLEDVersion(uint64_t a1)
{
}

void type metadata accessor for SFBluetoothCaseLEDColor(uint64_t a1)
{
}

uint64_t sub_1000090BC()
{
  return sub_100009104(&qword_1000D45C0, type metadata accessor for SFBluetoothHeadsetStatus);
}

uint64_t sub_100009104(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000914C()
{
  return sub_100009104(&qword_1000D45C8, type metadata accessor for SFBluetoothHeadsetStatus);
}

uint64_t sub_100009194()
{
  return sub_100009104(&qword_1000D45D0, type metadata accessor for SFBluetoothHeadsetStatus);
}

uint64_t sub_1000091DC()
{
  return sub_100009104(&qword_1000D45D8, type metadata accessor for SFBluetoothHeadsetStatus);
}

uint64_t sub_100009224()
{
  return sub_100009104(&qword_1000D45E0, type metadata accessor for Key);
}

uint64_t sub_10000926C()
{
  return sub_100009104(&qword_1000D45E8, type metadata accessor for Key);
}

uint64_t sub_1000092B4()
{
  return sub_100009104(&qword_1000D45F0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_1000092FC()
{
  return sub_100009104(&qword_1000D45F8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_100009344()
{
  return sub_100009104(&qword_1000D4600, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10000938C()
{
  return sub_100009104(&qword_1000D4608, type metadata accessor for Key);
}

uint64_t sub_1000093D4(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  char v3 = (int *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    uint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

__n128 sub_10000940C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneLayoutMetrics.Mismatch(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HeadphoneLayoutMetrics.Mismatch(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void sub_100009494(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100009544(id a1, uint64_t a2, char *a3, char *a4)
{
  int v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  id v11 = (objc_class *)ObjectType;
  long long v12 = *((_OWORD *)a3 + 11);
  long long v125 = *((_OWORD *)a3 + 10);
  long long v126 = v12;
  long long v127 = *((_OWORD *)a3 + 12);
  uint64_t v128 = *((void *)a3 + 26);
  long long v13 = *((_OWORD *)a3 + 7);
  long long v121 = *((_OWORD *)a3 + 6);
  long long v122 = v13;
  long long v14 = *((_OWORD *)a3 + 9);
  long long v123 = *((_OWORD *)a3 + 8);
  long long v124 = v14;
  long long v15 = *((_OWORD *)a3 + 3);
  long long v117 = *((_OWORD *)a3 + 2);
  long long v118 = v15;
  long long v16 = *((_OWORD *)a3 + 5);
  long long v119 = *((_OWORD *)a3 + 4);
  long long v120 = v16;
  long long v17 = *((_OWORD *)a3 + 1);
  long long v115 = *(_OWORD *)a3;
  long long v116 = v17;
  v5[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_batteryType] = 3;
  Swift::String v18 = &v5[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView];
  *Swift::String v18 = a1;
  v18[1] = a2;
  unint64_t v113 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v19 = &stru_1000D0000;
  unint64_t v20 = *((void *)a4 + 2);
  if (v20)
  {
    v107 = (objc_class *)ObjectType;
    Swift::String v21 = (objc_class *)type metadata accessor for LabelledBatteryView();
    v22 = v5;
    id v108 = a1;
    id v23 = a1;
    uint64_t v24 = a4 + 40;
    do
    {
      double v25 = *((double *)v24 - 1);
      char v26 = *v24;
      id v27 = objc_allocWithZone(v21);
      id v28 = sub_10003143C(0, 3, v26, v25);
      [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
      uint64_t v29 = v28;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      v24 += 16;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    unint64_t v30 = v113;
    id v11 = v107;
    a1 = v108;
  }
  else
  {
    NSString v31 = v5;
    id v32 = a1;
    swift_bridgeObjectRelease();
    unint64_t v30 = (unint64_t)_swiftEmptyArrayStorage;
  }
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_batteryViews] = v30;
  swift_bridgeObjectRetain();

  v112.receiver = v5;
  v112.super_class = v11;
  id v33 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v34 = v33;
  id v109 = (id)(v30 >> 62);
  if (v30 >> 62)
  {
    id v41 = v33;
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
    id v37 = &stru_1000D0000;
    if (!v35) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v35 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v36 = v33;
    swift_bridgeObjectRetain();
    id v37 = &stru_1000D0000;
    if (!v35) {
      goto LABEL_17;
    }
  }
  if (v35 < 1)
  {
    __break(1u);
    goto LABEL_62;
  }
  for (uint64_t i = 0; i != v35; ++i)
  {
    if ((v30 & 0xC000000000000001) != 0) {
      id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v39 = *(id *)(v30 + 8 * i + 32);
    }
    id v40 = v39;
    [v34 addSubview:v39];
  }
LABEL_17:
  a4 = __src;
  swift_bridgeObjectRelease();
  id v42 = objc_allocWithZone((Class)UILayoutGuide);
  id v11 = (objc_class *)a1;
  sub_10000A838((uint64_t)a3);
  id v43 = [v42 init];
  a1 = v43;
  uint64_t v44 = 32;
  if (a3[48]) {
    uint64_t v44 = 0;
  }
  double v45 = *(double *)&a3[v44];
  id v46 = [v43 heightAnchor];
  id v47 = [v46 constraintEqualToConstant:v45];

  *(_OWORD *)&__src[192] = v126;
  *(_OWORD *)&__src[208] = v127;
  *(_OWORD *)&__src[112] = v121;
  *(_OWORD *)&__src[128] = v122;
  *(_OWORD *)&__src[144] = v123;
  *(void *)__src = v11;
  *(void *)&__src[8] = a1;
  *(void *)&__src[224] = v128;
  *(_OWORD *)&__src[160] = v124;
  *(_OWORD *)&__src[176] = v125;
  *(_OWORD *)&__src[48] = v117;
  *(_OWORD *)&__src[64] = v118;
  *(_OWORD *)&__src[80] = v119;
  *(_OWORD *)&__src[96] = v120;
  *(_OWORD *)&__src[16] = v115;
  *(_OWORD *)&__src[32] = v116;
  __src[232] = 2;
  *(void *)&__src[240] = v47;
  *(void *)&__src[248] = _swiftEmptyArrayStorage;
  *(void *)&__src[256] = _swiftEmptyArrayStorage;
  memcpy(__dst, __src, sizeof(__dst));
  id v48 = v34;
  [(objc_class *)v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v48 addLayoutGuide:a1];
  [v48 addSubview:v11];
  [v48 sendSubviewToBack:v11];

  uint64_t v35 = (uint64_t)v48;
  unint64_t v20 = sub_100082E04((void *)v35);

  uint64_t v19 = (__objc2_ivar *)(v30 >> 62);
  if (!v109)
  {
    uint64_t v49 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v49) {
      goto LABEL_21;
    }
LABEL_48:
    swift_bridgeObjectRelease();
    sub_10000A930((uint64_t)a3);
    uint64_t v81 = v30 & 0xFFFFFFFFFFFFFF8;
    if (v109) {
      goto LABEL_66;
    }
    goto LABEL_49;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_48;
  }
LABEL_21:
  a4 = (char *)(v30 & 0xC000000000000001);
  if ((v30 & 0xC000000000000001) != 0)
  {
LABEL_62:
    id v50 = (__objc2_ivar *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_24;
  }
  if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_64;
  }
  id v50 = (__objc2_ivar *)*(id *)(v30 + 32);
LABEL_24:
  id v37 = v50;
  swift_bridgeObjectRelease();
  if (!v19)
  {
    if (*(uint64_t *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2) {
      goto LABEL_26;
    }
    goto LABEL_65;
  }
LABEL_64:
  swift_bridgeObjectRetain();
  uint64_t v94 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v94 >= 2)
  {
LABEL_26:
    if (a4)
    {
      id v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
      {
        __break(1u);
        goto LABEL_77;
      }
      id v51 = *(id *)(v30 + 40);
    }
    id v109 = v51;
    id v52 = [(__objc2_ivar *)v37 topAnchor];
    id v53 = [a1 bottomAnchor];
    id v105 = [v52 constraintEqualToAnchor:v53 constant:20.0];

    id v54 = [(__objc2_ivar *)v37 bottomAnchor];
    id v55 = [(id)v35 bottomAnchor];
    id v104 = [v54 constraintEqualToAnchor:v55];

    v107 = (objc_class *)v37;
    id v56 = [(__objc2_ivar *)v37 centerXAnchor];
    id v57 = [(objc_class *)v11 leftAnchor];
    id v58 = self;
    id v59 = [v58 mainScreen];
    [v59 bounds];
    double v61 = v60;

    double v62 = 1.0;
    double v63 = 1.0;
    if (v61 < 375.0) {
      double v63 = 298.0 / *((double *)a3 + 16);
    }
    double v64 = *((double *)a3 + 11);
    id v103 = [v56 constraintEqualToAnchor:v57 constant:v63 * *((double *)a3 + 10)];

    id v65 = [v109 topAnchor];
    id v66 = [v109 topAnchor];
    id v102 = [v65 constraintEqualToAnchor:v66];

    a4 = (char *)[v109 bottomAnchor];
    id v67 = [(id)v35 bottomAnchor];
    id v37 = (__objc2_ivar *)[a4 constraintEqualToAnchor:v67];

    id v68 = [v109 centerXAnchor];
    id v69 = [(objc_class *)v11 leftAnchor];
    id v70 = [v58 mainScreen];
    [v70 bounds];
    double v72 = v71;

    sub_10000A930((uint64_t)a3);
    if (v72 < 375.0) {
      double v62 = 298.0 / *((double *)a3 + 16);
    }
    uint64_t v19 = (__objc2_ivar *)[v68 constraintEqualToAnchor:v69 constant:v64 * v62 v102];

    unint64_t v110 = v20;
    if (!(v20 >> 62))
    {
      uint64_t v73 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v74 = v73 + 6;
      if (!__OFADD__(v73, 6)) {
        goto LABEL_35;
      }
      goto LABEL_79;
    }
LABEL_77:
    swift_bridgeObjectRetain();
    uint64_t v100 = _CocoaArrayWrapper.endIndex.getter();
    BOOL v99 = __OFADD__(v100, 6);
    uint64_t v74 = v100 + 6;
    if (!v99)
    {
LABEL_35:
      sub_10000A870(v74);
      specialized Array._endMutation()();
      a4 = (char *)v105;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_36:
        long long v75 = v37;
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v76 = v104;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        v106 = a4;
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v77 = v103;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        id v78 = v101;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        Swift::String v79 = v75;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        v80 = v19;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_bridgeObjectRelease();

        goto LABEL_68;
      }
LABEL_80:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      goto LABEL_36;
    }
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
LABEL_65:
  sub_10000A930((uint64_t)a3);

  uint64_t v81 = v30 & 0xFFFFFFFFFFFFFF8;
  if (v19)
  {
LABEL_66:
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_67;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t v82 = *(void *)(v81 + 16);
  swift_bridgeObjectRetain();
  if (!v82)
  {
LABEL_67:
    swift_bridgeObjectRelease();
    goto LABEL_68;
  }
LABEL_50:
  if ((v30 & 0xC000000000000001) != 0)
  {
    v83 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_71;
    }
    v83 = (char *)*(id *)(v30 + 32);
  }
  a3 = v83;
  swift_bridgeObjectRelease();
  id v84 = [a3 topAnchor];
  id v85 = [a1 bottomAnchor];
  a4 = (char *)[v84 constraintEqualToAnchor:v85 constant:20.0];

  id v86 = [a3 bottomAnchor];
  id v87 = [(id)v35 bottomAnchor];
  unint64_t v30 = (unint64_t)[v86 constraintEqualToAnchor:v87];

  id v88 = [a3 centerXAnchor];
  id v89 = [(objc_class *)v11 centerXAnchor];
  a1 = [v88 constraintEqualToAnchor:v89];

  unint64_t v110 = v20;
  if (!(v20 >> 62))
  {
    uint64_t v90 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v91 = v90 + 3;
    if (!__OFADD__(v90, 3)) {
      goto LABEL_55;
    }
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
LABEL_71:
  swift_bridgeObjectRetain();
  uint64_t v98 = _CocoaArrayWrapper.endIndex.getter();
  BOOL v99 = __OFADD__(v98, 3);
  uint64_t v91 = v98 + 3;
  if (v99) {
    goto LABEL_73;
  }
LABEL_55:
  sub_10000A870(v91);
  specialized Array._endMutation()();
  a4 = a4;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_74:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v92 = (id *)(id)v30;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v93 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();

LABEL_68:
  v95 = self;
  sub_10000A968();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v95 activateConstraints:isa];

  sub_10000A9A8((uint64_t)__src);
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_10000A46C(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    uint64_t v3 = result;
    unint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_batteryViews);
    if (v4 >> 62)
    {
LABEL_19:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v6 = 0;
    uint64_t v7 = (char *)(v3 + 40);
    do
    {
      if (v6 < v5)
      {
        double v10 = *((double *)v7 - 1);
        char v11 = *v7;
        if ((v4 & 0xC000000000000001) != 0)
        {
          id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v6 < 0)
          {
            __break(1u);
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
          if ((unint64_t)v6 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_18;
          }
          id v8 = *(id *)(v4 + 8 * v6 + 32);
        }
        uint64_t v9 = v8;
        sub_100031078(v11, v10);
      }
      ++v6;
      v7 += 16;
    }
    while (v2 != v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10000A5C4()
{
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Playing movie", v3, 2u);
    swift_slowDealloc();
  }

  swift_getObjectType();
  return dispatch thunk of VideoPlaybackControllable.play()();
}

uint64_t type metadata accessor for HeadphoneMovieBatteryView()
{
  return self;
}

id sub_10000A770()
{
  id v1 = [*(id *)(*v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView) centerXAnchor];

  return v1;
}

id sub_10000A7B4()
{
  id v1 = [*v0 leftAnchor];

  return v1;
}

id sub_10000A7EC()
{
  id v1 = [*v0 rightAnchor];

  return v1;
}

uint64_t sub_10000A824()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_batteryType);
}

uint64_t sub_10000A838(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000A870(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v3;
  if ((result & 1) == 0
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0
    || a1 > *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_10000A930(uint64_t a1)
{
  return a1;
}

unint64_t sub_10000A968()
{
  unint64_t result = qword_1000D4550;
  if (!qword_1000D4550)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D4550);
  }
  return result;
}

uint64_t sub_10000A9A8(uint64_t a1)
{
  os_log_type_t v2 = *(void **)a1;
  unint64_t v3 = *(void **)(a1 + 8);
  unint64_t v4 = *(void **)(a1 + 240);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_10000AA20()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D46E0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D46E0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10000AB54()
{
  uint64_t v1 = v0;
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setTitle:v2];

  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setSubtitle:v3];

  id v4 = [objc_allocWithZone((Class)UIImageView) init];
  id v37 = sub_10000B60C();
  [v4 setImage:v37];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [v1 contentView];
  [v5 addSubview:v4];

  id v6 = [v1 contentView];
  id v7 = [v6 mainContentGuide];

  id v8 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1000A2130;
  id v10 = [v4 centerXAnchor];
  id v11 = [v7 centerXAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v9 + 32) = v12;
  id v13 = [v4 centerYAnchor];
  id v14 = [v7 centerYAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v9 + 40) = v15;
  id v16 = [v4 widthAnchor];
  id v17 = [v16 constraintEqualToConstant:76.0];

  *(void *)(v9 + 48) = v17;
  id v18 = [v4 heightAnchor];
  id v19 = [v18 constraintEqualToConstant:76.0];

  *(void *)(v9 + 56) = v19;
  id v20 = [v4 topAnchor];
  id v21 = [v7 topAnchor];
  id v22 = [v20 constraintGreaterThanOrEqualToAnchor:v21];

  *(void *)(v9 + 64) = v22;
  id v23 = [v4 bottomAnchor];
  id v24 = [v7 bottomAnchor];
  id v25 = [v23 constraintLessThanOrEqualToAnchor:v24];

  *(void *)(v9 + 72) = v25;
  specialized Array._endMutation()();
  sub_10000A968();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v8 activateConstraints:isa];

  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v42 = sub_10000B788;
  uint64_t v43 = v27;
  aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  id v40 = sub_100012FF0;
  id v41 = &unk_1000C2778;
  uint64_t v29 = _Block_copy(&aBlock);
  unint64_t v30 = self;
  id v31 = [v30 actionWithTitle:v28 style:0 handler:v29];

  _Block_release(v29);
  swift_release();
  swift_release();

  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v42 = sub_10000B7A8;
  uint64_t v43 = v32;
  aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  id v40 = sub_100012FF0;
  id v41 = &unk_1000C27A0;
  uint64_t v34 = _Block_copy(&aBlock);
  id v35 = [v30 actionWithTitle:v33 style:1 handler:v34];

  _Block_release(v34);
  swift_release();
  swift_release();
  id v36 = [v1 addAction:v35];
}

void sub_10000B17C()
{
  if (qword_1000D42F0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100008278(v0, (uint64_t)qword_1000D46E0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    NSString v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)NSString v3 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Install FindMy App pressed in %ld", v3, 0xCu);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      sub_10008E464();
      swift_unknownObjectRelease();
    }
  }
}

void sub_10000B2E0()
{
  if (qword_1000D42F0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100008278(v0, (uint64_t)qword_1000D46E0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    NSString v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)NSString v3 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Skip on Install FindMy view pressed in %ld", v3, 0xCu);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      sub_100008278(v0, (uint64_t)qword_1000D69F0);
      id v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Requested skip Find My install", v9, 2u);
        swift_slowDealloc();
      }

      uint64_t v10 = *(void *)(v6 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(unsigned char *)(v10
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 88)) = 1;
      sub_10008ADE4(0);
      swift_unknownObjectRelease();
    }
  }
}

id sub_10000B594()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneInstallFindMyViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for HeadphoneInstallFindMyViewController()
{
  return self;
}

uint64_t sub_10000B5FC()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneInstallFindMyViewController_type);
}

id sub_10000B60C()
{
  id v0 = objc_allocWithZone((Class)ISIcon);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithBundleIdentifier:v1];

  id v3 = [self imageDescriptorNamed:kISImageDescriptorHomeScreen];
  id v4 = [v2 imageForImageDescriptor:v3];
  id result = [v4 CGImage];
  if (result)
  {
    uint64_t v6 = result;
    [v4 scale];
    id v8 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v6 scale:0 orientation:v7];

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10000B750()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10000B788()
{
}

uint64_t sub_10000B790(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10000B7A0()
{
  return swift_release();
}

void sub_10000B7A8()
{
}

uint64_t *sub_10000B7B0(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t Optional.description.getter()
{
  return sub_10000B828(v0);
}

uint64_t sub_10000B828(uint64_t a1)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return String.init<A>(reflecting:)();
}

uint64_t sub_10000B8E4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D4730);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D4730);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10000B9AC()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController____lazy_storage___imageView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController____lazy_storage___imageView);
  }
  else
  {
    sub_10001DB14();
    id v5 = v4;
    id v6 = [objc_allocWithZone((Class)UIImageView) initWithImage:v4];
    id v7 = [self systemBlueColor];
    [v6 setTintColor:v7];

    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v6 setContentMode:1];

    id v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_10000BAA0()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController____lazy_storage___topAsset;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController____lazy_storage___topAsset);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController____lazy_storage___topAsset);
  }
  else
  {
    id v4 = sub_10000BB04();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10000BB04()
{
  id v0 = [objc_allocWithZone((Class)UIView) init];
  id v1 = sub_10000B9AC();
  [v0 addSubview:v1];

  id v2 = sub_10000B9AC();
  [v2 pinToOther:v0];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v0 heightAnchor];
  id v4 = [v3 constraintEqualToConstant:180.0];

  [v4 setActive:1];
  return v0;
}

void sub_10000BBF8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = type metadata accessor for HeadphoneModel();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  __chkstk_darwin(v3);
  id v7 = (char *)v30 - v6 + 40;
  v32.receiver = v0;
  v32.super_class = ObjectType;
  [super viewDidLoad];
  [v0 setDismissalType:1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong + 16;
    swift_beginAccess();
    sub_10000C744(v9, (uint64_t)v30);
    swift_unknownObjectRelease();
    uint64_t v10 = v31;
    if (v31)
    {
      id v11 = sub_10000C80C(v30, v31);
      uint64_t v12 = *(void *)(v10 - 8);
      __chkstk_darwin(v11);
      id v14 = (void *)((char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0) + 40);
      (*(void (**)(void *))(v12 + 16))(v14);
      sub_10000C7AC((uint64_t)v30);
      uint64_t v15 = *v14 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v15, (uint64_t)v5);
      (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v10);
      sub_10000C8B4((uint64_t)v5, (uint64_t)v7);
      id v16 = [v0 contentView];
      id v17 = sub_10000BAA0();
      [v16 addSubview:v17];

      id v18 = sub_10000BAA0();
      id v19 = [v0 contentView];
      id v20 = [v19 mainContentGuide];

      [v18 pinToOtherWithLayoutGuide:v20];
      sub_100008E18(&qword_1000D47A0);
      uint64_t v21 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
      uint64_t v22 = *(void *)(v21 - 8);
      unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1000A19D0;
      (*(void (**)(unint64_t, void, uint64_t))(v22 + 104))(v24 + v23, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v21);
      swift_bridgeObjectRetain();
      swift_retain();
      dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10000C918((uint64_t)v7);
      return;
    }
    sub_10000C7AC((uint64_t)v30);
  }
  if (qword_1000D42F8 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_100008278(v25, (uint64_t)qword_1000D4730);
  char v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    NSString v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Head Gestures: Headphone Model is nil, exiting", v28, 2u);
    swift_slowDealloc();
  }
}

void sub_10000C158()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setSubtitle:v2];

  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = sub_10000C654;
  uint64_t v18 = v3;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100012FF0;
  id v16 = &unk_1000C2830;
  id v5 = _Block_copy(&v13);
  uint64_t v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:0 handler:v5];

  _Block_release(v5);
  swift_release();
  swift_release();

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = sub_10000C674;
  uint64_t v18 = v8;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100012FF0;
  id v16 = &unk_1000C2858;
  uint64_t v10 = _Block_copy(&v13);
  id v11 = [v6 actionWithTitle:v9 style:1 handler:v10];

  _Block_release(v10);
  swift_release();
  swift_release();
  id v12 = [v0 addAction:v11];
}

void sub_10000C430()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10009D2C0();
      swift_unknownObjectRelease();
    }
  }
}

void sub_10000C4A4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10003B97C();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneYodelHearingTestViewController()
{
  return self;
}

uint64_t sub_10000C60C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController_type);
}

uint64_t sub_10000C61C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10000C654()
{
}

uint64_t sub_10000C65C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10000C66C()
{
  return swift_release();
}

void sub_10000C674()
{
}

id sub_10000C67C(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController_headphoneProxFeatureManager;
  type metadata accessor for HeadphoneProxFeatureManager();
  id v5 = v1;
  *(void *)&v1[v4] = static HeadphoneProxFeatureManager.shared.getter();
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController____lazy_storage___imageView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController____lazy_storage___topAsset] = 0;
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController_type] = 32;

  v7.receiver = v5;
  v7.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_10000C744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D4798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000C7AC(uint64_t a1)
{
  uint64_t v2 = sub_100008E18(&qword_1000D4798);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_10000C80C(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10000C850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadphoneModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000C8B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadphoneModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10000C918(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HeadphoneModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000C97C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D47A8);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D47A8);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10000CA44()
{
  uint64_t v1 = v0;
  v41.receiver = v0;
  v41.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  [v0 setDismissalType:1];
  uint64_t v2 = self;
  id v39 = [v2 configurationWithPointSize:4 weight:56.0];
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000A2260;
  uint64_t v4 = self;
  *(void *)(v3 + 32) = [v4 redColor];
  *(void *)(v3 + 40) = [v4 tertiaryLabelColor];
  specialized Array._endMutation()();
  sub_100008EB0(0, (unint64_t *)&qword_1000D47F8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v40 = [v2 configurationWithPaletteColors:isa];

  id v38 = [v39 configurationByApplyingConfiguration:v40];
  NSString v6 = String._bridgeToObjectiveC()();
  id v37 = [self systemImageNamed:v6 withConfiguration:v38];

  id v7 = [objc_allocWithZone((Class)UIImageView) initWithImage:v37];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v8 = [v1 contentView];
  [v8 addSubview:v7];

  id v36 = self;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1000A19C0;
  id v10 = [v7 topAnchor];
  id v11 = [v1 contentView];
  id v12 = [v11 mainContentGuide];

  id v13 = [v12 topAnchor];
  id v14 = [v10 constraintEqualToAnchor:v13];

  *(void *)(v9 + 32) = v14;
  id v15 = [v7 centerXAnchor];
  id v16 = [v1 contentView];
  id v17 = [v16 mainContentGuide];

  id v18 = [v17 centerXAnchor];
  id v19 = [v15 constraintEqualToAnchor:v18];

  *(void *)(v9 + 40) = v19;
  id v20 = [v7 leadingAnchor];
  id v21 = [v1 contentView];
  id v22 = [v21 mainContentGuide];

  id v23 = [v22 leadingAnchor];
  id v24 = [v20 constraintGreaterThanOrEqualToAnchor:v23];

  *(void *)(v9 + 48) = v24;
  id v25 = [v7 trailingAnchor];
  id v26 = [v1 contentView];
  id v27 = [v26 mainContentGuide];

  id v28 = [v27 trailingAnchor];
  id v29 = [v25 constraintLessThanOrEqualToAnchor:v28];

  *(void *)(v9 + 56) = v29;
  id v30 = [v7 bottomAnchor];
  id v31 = [v1 contentView];
  id v32 = [v31 mainContentGuide];

  id v33 = [v32 bottomAnchor];
  id v34 = [v30 constraintLessThanOrEqualToAnchor:v33];

  *(void *)(v9 + 64) = v34;
  specialized Array._endMutation()();
  sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
  Class v35 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v36 activateConstraints:v35];
}

id sub_10000D084(char a1)
{
  v8.receiver = v1;
  v8.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  if (qword_1000D4300 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100008278(v3, (uint64_t)qword_1000D47A8);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    NSString v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Headphone Announce Notifications intro card appeared", v6, 2u);
    swift_slowDealloc();
  }

  return [self setHasSeenAnnounceNotifications:1];
}

void sub_10000D200(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setTitle:v3];

  NSString v4 = String._bridgeToObjectiveC()();
  [v1 setSubtitle:v4];

  if (a1[11]) {
    NSString v5 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v5 = 0;
  }
  [v1 setBottomTrayTitle:v5];

  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = sub_10000D754;
  uint64_t v23 = v6;
  id v18 = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  id v20 = sub_100012FF0;
  id v21 = &unk_1000C28E8;
  objc_super v8 = _Block_copy(&v18);
  uint64_t v9 = self;
  id v10 = [v9 actionWithTitle:v7 style:0 handler:v8];

  _Block_release(v8);
  swift_release();
  swift_release();

  unint64_t v11 = a1[7];
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = a1[6] & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    uint64_t v13 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v22 = sub_10000D7A4;
    uint64_t v23 = v13;
    id v18 = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    id v20 = sub_100012FF0;
    id v21 = &unk_1000C2910;
    id v15 = _Block_copy(&v18);
    id v16 = [v9 actionWithTitle:v14 style:1 handler:v15];

    _Block_release(v15);
    swift_release();
    swift_release();
    id v17 = [v1 addAction:v16];
  }
}

void sub_10000D51C(uint64_t a1, uint64_t a2, const char *a3, void (*a4)(void))
{
  if (qword_1000D4300 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100008278(v6, (uint64_t)qword_1000D47A8);
  NSString v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, a3, v9, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v11 = (void *)Strong;
    uint64_t v12 = swift_unknownObjectWeakLoadStrong();

    if (v12)
    {
      a4();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneAnnounceIntroViewController()
{
  return self;
}

uint64_t sub_10000D70C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneAnnounceIntroViewController_type);
}

uint64_t sub_10000D71C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10000D754(uint64_t a1)
{
  sub_10000D51C(a1, v1, "User selected continue button for Announce Notifications", (void (*)(void))sub_10008A700);
}

uint64_t sub_10000D78C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10000D79C()
{
  return swift_release();
}

void sub_10000D7A4(uint64_t a1)
{
  sub_10000D51C(a1, v1, "User selected customize button for Announce Notifications", (void (*)(void))sub_10008B6A4);
}

void *sub_10000D7E4(void *a1, void *a2, int *a3)
{
  NSString v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    void *v4 = *a2;
    NSString v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v11 = a2[11];
    a1[10] = a2[10];
    a1[11] = v11;
    uint64_t v12 = a3[11];
    id v84 = (void *)a2[12];
    __dst = (char *)a1 + v12;
    id v89 = (char *)a2 + v12;
    a1[12] = v84;
    uint64_t v13 = (int *)type metadata accessor for HeadphoneAssets(0);
    uint64_t v82 = *((void *)v13 - 1);
    v83 = *(unsigned int (**)(char *, uint64_t, int *))(v82 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v84;
    if (v83(v89, 1, v13))
    {
      uint64_t v15 = sub_100008E18(&qword_1000D4810);
      memcpy(__dst, v89, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = type metadata accessor for URL();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
      v19(__dst, v89, v17);
      v19(&__dst[v13[5]], &v89[v13[5]], v17);
      uint64_t v20 = v13[6];
      id v85 = &__dst[v20];
      id v21 = &v89[v20];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&v89[v20], 1, v17))
      {
        uint64_t v22 = sub_100008E18(&qword_1000D4800);
        memcpy(v85, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        v19(v85, v21, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v85, 0, 1, v17);
      }
      id v86 = v13;
      uint64_t v23 = v13[7];
      id v24 = &__dst[v23];
      id v25 = &v89[v23];
      uint64_t v26 = type metadata accessor for HeadphoneAssets.Feature(0);
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        uint64_t v28 = sub_100008E18(&qword_1000D4808);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        v19(v24, v25, v17);
        *(void *)&v24[*(int *)(v26 + 20)] = *(void *)&v25[*(int *)(v26 + 20)];
        *(void *)&v24[*(int *)(v26 + 24)] = *(void *)&v25[*(int *)(v26 + 24)];
        id v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v29(v24, 0, 1, v26);
      }
      *(void *)&__dst[v86[8]] = *(void *)&v89[v86[8]];
      uint64_t v30 = v86[9];
      id v31 = *(void **)&v89[v30];
      *(void *)&__dst[v30] = v31;
      uint64_t v32 = v86[10];
      long long v90 = *(_OWORD *)&v89[v32];
      *(_OWORD *)&__dst[v32] = v90;
      id v33 = *(void (**)(char *, void, uint64_t, int *))(v82 + 56);
      swift_bridgeObjectRetain();
      id v34 = v31;
      id v35 = (id)v90;
      v33(__dst, 0, 1, v86);
    }
    id v36 = a3;
    uint64_t v37 = a3[12];
    uint64_t v38 = a3[13];
    id v39 = (_OWORD *)((char *)v4 + v37);
    id v40 = (_OWORD *)((char *)a2 + v37);
    long long v41 = v40[1];
    *id v39 = *v40;
    v39[1] = v41;
    *(_OWORD *)((char *)v39 + 26) = *(_OWORD *)((char *)v40 + 26);
    id v42 = (void *)((char *)v4 + v38);
    uint64_t v43 = (void *)((char *)a2 + v38);
    uint64_t v44 = v43[1];
    if (v44)
    {
      *id v42 = *v43;
      v42[1] = v44;
      uint64_t v45 = v43[3];
      v42[2] = v43[2];
      v42[3] = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v46 = *((_OWORD *)v43 + 1);
      *(_OWORD *)id v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v46;
    }
    uint64_t v47 = a3[14];
    id v48 = (char *)v4 + v47;
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = *((void *)v49 + 19);
    if (v50)
    {
      long long v51 = *((_OWORD *)v49 + 1);
      *(_OWORD *)id v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v51;
      *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
      v48[48] = v49[48];
      *(_OWORD *)(v48 + 56) = *(_OWORD *)(v49 + 56);
      v48[72] = v49[72];
      *((_OWORD *)v48 + 5) = *((_OWORD *)v49 + 5);
      *((void *)v48 + 12) = *((void *)v49 + 12);
      v48[104] = v49[104];
      long long v52 = *((_OWORD *)v49 + 8);
      *((_OWORD *)v48 + 7) = *((_OWORD *)v49 + 7);
      *((_OWORD *)v48 + 8) = v52;
      *((void *)v48 + 18) = *((void *)v49 + 18);
      *((void *)v48 + 19) = v50;
      uint64_t v53 = *((void *)v49 + 21);
      *((void *)v48 + 20) = *((void *)v49 + 20);
      *((void *)v48 + 21) = v53;
      long long v54 = *((_OWORD *)v49 + 12);
      *((_OWORD *)v48 + 11) = *((_OWORD *)v49 + 11);
      *((_OWORD *)v48 + 12) = v54;
      *((void *)v48 + 26) = *((void *)v49 + 26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v55 = *((_OWORD *)v49 + 11);
      *((_OWORD *)v48 + 10) = *((_OWORD *)v49 + 10);
      *((_OWORD *)v48 + 11) = v55;
      *((_OWORD *)v48 + 12) = *((_OWORD *)v49 + 12);
      *((void *)v48 + 26) = *((void *)v49 + 26);
      long long v56 = *((_OWORD *)v49 + 7);
      *((_OWORD *)v48 + 6) = *((_OWORD *)v49 + 6);
      *((_OWORD *)v48 + 7) = v56;
      long long v57 = *((_OWORD *)v49 + 9);
      *((_OWORD *)v48 + 8) = *((_OWORD *)v49 + 8);
      *((_OWORD *)v48 + 9) = v57;
      long long v58 = *((_OWORD *)v49 + 3);
      *((_OWORD *)v48 + 2) = *((_OWORD *)v49 + 2);
      *((_OWORD *)v48 + 3) = v58;
      long long v59 = *((_OWORD *)v49 + 5);
      *((_OWORD *)v48 + 4) = *((_OWORD *)v49 + 4);
      *((_OWORD *)v48 + 5) = v59;
      long long v60 = *((_OWORD *)v49 + 1);
      *(_OWORD *)id v48 = *(_OWORD *)v49;
      *((_OWORD *)v48 + 1) = v60;
    }
    uint64_t v61 = a3[16];
    *((unsigned char *)v4 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    *((unsigned char *)v4 + v61) = *((unsigned char *)a2 + v61);
    uint64_t v62 = a3[18];
    *(void *)((char *)v4 + a3[17]) = *(void *)((char *)a2 + a3[17]);
    *(void *)((char *)v4 + v62) = *(void *)((char *)a2 + v62);
    uint64_t v63 = a3[19];
    double v64 = (char *)v4 + v63;
    id v65 = (char *)a2 + v63;
    uint64_t v66 = *(void *)((char *)a2 + v63 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v66)
    {
      *(void *)double v64 = *(void *)v65;
      *((void *)v64 + 1) = v66;
      uint64_t v67 = *((void *)v65 + 3);
      *((void *)v64 + 2) = *((void *)v65 + 2);
      *((void *)v64 + 3) = v67;
      v64[32] = v65[32];
      id v69 = (void *)*((void *)v65 + 5);
      uint64_t v68 = *((void *)v65 + 6);
      *((void *)v64 + 5) = v69;
      *((void *)v64 + 6) = v68;
      uint64_t v70 = *((void *)v65 + 8);
      *((void *)v64 + 7) = *((void *)v65 + 7);
      *((void *)v64 + 8) = v70;
      *((void *)v64 + 9) = *((void *)v65 + 9);
      v64[80] = v65[80];
      double v72 = (void *)*((void *)v65 + 11);
      uint64_t v71 = *((void *)v65 + 12);
      *((void *)v64 + 11) = v72;
      *((void *)v64 + 12) = v71;
      *((void *)v64 + 13) = *((void *)v65 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v73 = v69;
      id v36 = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v74 = v72;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v75 = *((_OWORD *)v65 + 5);
      *((_OWORD *)v64 + 4) = *((_OWORD *)v65 + 4);
      *((_OWORD *)v64 + 5) = v75;
      *((_OWORD *)v64 + 6) = *((_OWORD *)v65 + 6);
      long long v76 = *((_OWORD *)v65 + 1);
      *(_OWORD *)double v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v76;
      long long v77 = *((_OWORD *)v65 + 3);
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
      *((_OWORD *)v64 + 3) = v77;
    }
    uint64_t v78 = v36[21];
    *(void *)((char *)v4 + v36[20]) = *(void *)((char *)a2 + v36[20]);
    Swift::String v79 = *(void **)((char *)a2 + v78);
    *(void *)((char *)v4 + v78) = v79;
    *((unsigned char *)v4 + v36[22]) = *((unsigned char *)a2 + v36[22]);
    id v80 = v79;
  }
  return v4;
}

uint64_t type metadata accessor for HeadphoneAssets(uint64_t a1)
{
  return sub_100010850(a1, (uint64_t *)&unk_1000D49F0);
}

uint64_t type metadata accessor for HeadphoneAssets.Feature(uint64_t a1)
{
  return sub_100010850(a1, qword_1000D4958);
}

void sub_10000DEC4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v4 = a1 + a2[11];
  int v5 = (int *)type metadata accessor for HeadphoneAssets(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for URL();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v8(v4, v6);
    v8(v4 + v5[5], v6);
    uint64_t v9 = v4 + v5[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
      v8(v9, v6);
    }
    uint64_t v10 = v4 + v5[7];
    uint64_t v11 = type metadata accessor for HeadphoneAssets.Feature(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      v8(v10, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[13] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[14] + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[19];
  if (*(void *)(v12 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = *(void **)(a1 + a2[21]);
}

void *sub_10000E198(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  uint64_t v11 = a3[11];
  uint64_t v82 = (void *)a2[12];
  __dst = (char *)a1 + v11;
  id v87 = (char *)a2 + v11;
  a1[12] = v82;
  uint64_t v12 = (int *)type metadata accessor for HeadphoneAssets(0);
  uint64_t v80 = *((void *)v12 - 1);
  uint64_t v81 = *(unsigned int (**)(char *, uint64_t, int *))(v80 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v82;
  if (v81(v87, 1, v12))
  {
    uint64_t v14 = sub_100008E18(&qword_1000D4810);
    memcpy(__dst, v87, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = type metadata accessor for URL();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v17(__dst, v87, v15);
    v17(&__dst[v12[5]], &v87[v12[5]], v15);
    uint64_t v18 = v12[6];
    v83 = &__dst[v18];
    uint64_t v19 = &v87[v18];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&v87[v18], 1, v15))
    {
      uint64_t v20 = sub_100008E18(&qword_1000D4800);
      memcpy(v83, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      v17(v83, v19, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v83, 0, 1, v15);
    }
    id v84 = v12;
    uint64_t v21 = v12[7];
    uint64_t v22 = &__dst[v21];
    uint64_t v23 = &v87[v21];
    uint64_t v24 = type metadata accessor for HeadphoneAssets.Feature(0);
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = sub_100008E18(&qword_1000D4808);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v17(v22, v23, v15);
      *(void *)&v22[*(int *)(v24 + 20)] = *(void *)&v23[*(int *)(v24 + 20)];
      *(void *)&v22[*(int *)(v24 + 24)] = *(void *)&v23[*(int *)(v24 + 24)];
      uint64_t v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v27(v22, 0, 1, v24);
    }
    *(void *)&__dst[v84[8]] = *(void *)&v87[v84[8]];
    uint64_t v28 = v84[9];
    id v29 = *(void **)&v87[v28];
    *(void *)&__dst[v28] = v29;
    uint64_t v30 = v84[10];
    long long v88 = *(_OWORD *)&v87[v30];
    *(_OWORD *)&__dst[v30] = v88;
    id v31 = *(void (**)(char *, void, uint64_t, int *))(v80 + 56);
    swift_bridgeObjectRetain();
    id v32 = v29;
    id v33 = (id)v88;
    v31(__dst, 0, 1, v84);
  }
  id v34 = a3;
  uint64_t v35 = a3[12];
  uint64_t v36 = a3[13];
  uint64_t v37 = (_OWORD *)((char *)a1 + v35);
  uint64_t v38 = (_OWORD *)((char *)a2 + v35);
  long long v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  *(_OWORD *)((char *)v37 + 26) = *(_OWORD *)((char *)v38 + 26);
  id v40 = (void *)((char *)a1 + v36);
  long long v41 = (void *)((char *)a2 + v36);
  uint64_t v42 = v41[1];
  if (v42)
  {
    *id v40 = *v41;
    v40[1] = v42;
    uint64_t v43 = v41[3];
    v40[2] = v41[2];
    v40[3] = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v44 = *((_OWORD *)v41 + 1);
    *(_OWORD *)id v40 = *(_OWORD *)v41;
    *((_OWORD *)v40 + 1) = v44;
  }
  uint64_t v45 = a3[14];
  long long v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = *((void *)v47 + 19);
  if (v48)
  {
    long long v49 = *((_OWORD *)v47 + 1);
    *(_OWORD *)long long v46 = *(_OWORD *)v47;
    *((_OWORD *)v46 + 1) = v49;
    *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
    v46[48] = v47[48];
    *(_OWORD *)(v46 + 56) = *(_OWORD *)(v47 + 56);
    v46[72] = v47[72];
    *((_OWORD *)v46 + 5) = *((_OWORD *)v47 + 5);
    *((void *)v46 + 12) = *((void *)v47 + 12);
    v46[104] = v47[104];
    long long v50 = *((_OWORD *)v47 + 8);
    *((_OWORD *)v46 + 7) = *((_OWORD *)v47 + 7);
    *((_OWORD *)v46 + 8) = v50;
    *((void *)v46 + 18) = *((void *)v47 + 18);
    *((void *)v46 + 19) = v48;
    uint64_t v51 = *((void *)v47 + 21);
    *((void *)v46 + 20) = *((void *)v47 + 20);
    *((void *)v46 + 21) = v51;
    long long v52 = *((_OWORD *)v47 + 12);
    *((_OWORD *)v46 + 11) = *((_OWORD *)v47 + 11);
    *((_OWORD *)v46 + 12) = v52;
    *((void *)v46 + 26) = *((void *)v47 + 26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v53 = *((_OWORD *)v47 + 11);
    *((_OWORD *)v46 + 10) = *((_OWORD *)v47 + 10);
    *((_OWORD *)v46 + 11) = v53;
    *((_OWORD *)v46 + 12) = *((_OWORD *)v47 + 12);
    *((void *)v46 + 26) = *((void *)v47 + 26);
    long long v54 = *((_OWORD *)v47 + 7);
    *((_OWORD *)v46 + 6) = *((_OWORD *)v47 + 6);
    *((_OWORD *)v46 + 7) = v54;
    long long v55 = *((_OWORD *)v47 + 9);
    *((_OWORD *)v46 + 8) = *((_OWORD *)v47 + 8);
    *((_OWORD *)v46 + 9) = v55;
    long long v56 = *((_OWORD *)v47 + 3);
    *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
    *((_OWORD *)v46 + 3) = v56;
    long long v57 = *((_OWORD *)v47 + 5);
    *((_OWORD *)v46 + 4) = *((_OWORD *)v47 + 4);
    *((_OWORD *)v46 + 5) = v57;
    long long v58 = *((_OWORD *)v47 + 1);
    *(_OWORD *)long long v46 = *(_OWORD *)v47;
    *((_OWORD *)v46 + 1) = v58;
  }
  uint64_t v59 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + v59) = *((unsigned char *)a2 + v59);
  uint64_t v60 = a3[18];
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + v60) = *(void *)((char *)a2 + v60);
  uint64_t v61 = a3[19];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  uint64_t v64 = *(void *)((char *)a2 + v61 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v64)
  {
    *(void *)uint64_t v62 = *(void *)v63;
    *((void *)v62 + 1) = v64;
    uint64_t v65 = *((void *)v63 + 3);
    *((void *)v62 + 2) = *((void *)v63 + 2);
    *((void *)v62 + 3) = v65;
    v62[32] = v63[32];
    uint64_t v67 = (void *)*((void *)v63 + 5);
    uint64_t v66 = *((void *)v63 + 6);
    *((void *)v62 + 5) = v67;
    *((void *)v62 + 6) = v66;
    uint64_t v68 = *((void *)v63 + 8);
    *((void *)v62 + 7) = *((void *)v63 + 7);
    *((void *)v62 + 8) = v68;
    *((void *)v62 + 9) = *((void *)v63 + 9);
    v62[80] = v63[80];
    uint64_t v70 = (void *)*((void *)v63 + 11);
    uint64_t v69 = *((void *)v63 + 12);
    *((void *)v62 + 11) = v70;
    *((void *)v62 + 12) = v69;
    *((void *)v62 + 13) = *((void *)v63 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v71 = v67;
    id v34 = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v72 = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v73 = *((_OWORD *)v63 + 5);
    *((_OWORD *)v62 + 4) = *((_OWORD *)v63 + 4);
    *((_OWORD *)v62 + 5) = v73;
    *((_OWORD *)v62 + 6) = *((_OWORD *)v63 + 6);
    long long v74 = *((_OWORD *)v63 + 1);
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
    *((_OWORD *)v62 + 1) = v74;
    long long v75 = *((_OWORD *)v63 + 3);
    *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
    *((_OWORD *)v62 + 3) = v75;
  }
  uint64_t v76 = v34[21];
  *(void *)((char *)a1 + v34[20]) = *(void *)((char *)a2 + v34[20]);
  long long v77 = *(void **)((char *)a2 + v76);
  *(void *)((char *)a1 + v76) = v77;
  *((unsigned char *)a1 + v34[22]) = *((unsigned char *)a2 + v34[22]);
  id v78 = v77;
  return a1;
}

void *sub_10000E7E8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)a1[12];
  uint64_t v7 = (void *)a2[12];
  a1[12] = v7;
  id v8 = v7;

  uint64_t v9 = a3[11];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = (int *)type metadata accessor for HeadphoneAssets(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_10000F640((uint64_t)v10, type metadata accessor for HeadphoneAssets);
      goto LABEL_7;
    }
    uint64_t v26 = type metadata accessor for URL();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v27 + 24);
    v28(v10, v11, v26);
    v137 = (void (*)(uint64_t, char *, uint64_t))v28;
    v28(&v10[v12[5]], &v11[v12[5]], v26);
    uint64_t v29 = v12[6];
    uint64_t v30 = &v11[v29];
    uint64_t v138 = v27;
    id v31 = *(uint64_t (**)(void))(v27 + 48);
    v144 = &v10[v29];
    int __dstb = v31();
    int v32 = ((uint64_t (*)(char *, uint64_t, uint64_t))v31)(v30, 1, v26);
    if (__dstb)
    {
      if (v32)
      {
        size_t v33 = *(void *)(*(void *)(sub_100008E18(&qword_1000D4800) - 8) + 64);
        id v34 = v144;
LABEL_18:
        memcpy(v34, v30, v33);
        goto LABEL_21;
      }
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v144, v30, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v144, 0, 1, v26);
    }
    else
    {
      if (v32)
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v144, v26);
        size_t v33 = *(void *)(*(void *)(sub_100008E18(&qword_1000D4800) - 8) + 64);
        id v34 = v144;
        goto LABEL_18;
      }
      v28(v144, v30, v26);
    }
LABEL_21:
    uint64_t v45 = v12[7];
    long long v46 = &v10[v45];
    __dsta = &v11[v45];
    uint64_t v47 = type metadata accessor for HeadphoneAssets.Feature(0);
    __srca = *(void **)(v47 - 8);
    uint64_t v48 = (uint64_t (*)(char *, uint64_t, uint64_t))__srca[6];
    uint64_t v145 = (uint64_t)v46;
    LODWORD(v46) = v48(v46, 1, v47);
    int v49 = v48(__dsta, 1, v47);
    if (v46)
    {
      if (!v49)
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v138 + 16))(v145, __dsta, v26);
        *(void *)(v145 + *(int *)(v47 + 20)) = *(void *)&__dsta[*(int *)(v47 + 20)];
        *(void *)(v145 + *(int *)(v47 + 24)) = *(void *)&__dsta[*(int *)(v47 + 24)];
        __dstd = (void (*)(uint64_t, void, uint64_t, uint64_t))__srca[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dstd(v145, 0, 1, v47);
        goto LABEL_29;
      }
      size_t v50 = *(void *)(*(void *)(sub_100008E18(&qword_1000D4808) - 8) + 64);
      uint64_t v51 = (void *)v145;
    }
    else
    {
      if (!v49)
      {
        v137(v145, __dsta, v26);
        *(void *)(v145 + *(int *)(v47 + 20)) = *(void *)&__dsta[*(int *)(v47 + 20)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v145 + *(int *)(v47 + 24)) = *(void *)&__dsta[*(int *)(v47 + 24)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      sub_10000F640(v145, type metadata accessor for HeadphoneAssets.Feature);
      size_t v50 = *(void *)(*(void *)(sub_100008E18(&qword_1000D4808) - 8) + 64);
      uint64_t v51 = (void *)v145;
    }
    memcpy(v51, __dsta, v50);
LABEL_29:
    *(void *)&v10[v12[8]] = *(void *)&v11[v12[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v52 = v12[9];
    long long v53 = *(void **)&v10[v52];
    long long v54 = *(void **)&v11[v52];
    *(void *)&v10[v52] = v54;
    id v55 = v54;

    uint64_t v56 = v12[10];
    long long v57 = &v10[v56];
    long long v58 = &v11[v56];
    uint64_t v59 = *(void **)v58;
    uint64_t v60 = *((void *)v58 + 1);
    uint64_t v61 = *(void **)v57;
    *(void *)long long v57 = *(void *)v58;
    id v62 = v59;

    *((void *)v57 + 1) = v60;
    goto LABEL_30;
  }
  if (v16)
  {
LABEL_7:
    uint64_t v25 = sub_100008E18(&qword_1000D4810);
    memcpy(v10, v11, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_30;
  }
  uint64_t v140 = v13;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v11;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v20(v10, v19, v17);
  v20(&v10[v12[5]], &v19[v12[5]], v17);
  uint64_t v21 = v12[6];
  __src = v10;
  v143 = v19;
  uint64_t v22 = &v10[v21];
  uint64_t v23 = &v19[v21];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17))
  {
    uint64_t v24 = sub_100008E18(&qword_1000D4800);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v20(v22, v23, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  uint64_t v35 = v12[7];
  __dst = &__src[v35];
  uint64_t v36 = &v143[v35];
  uint64_t v37 = type metadata accessor for HeadphoneAssets.Feature(0);
  uint64_t v136 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v36, 1, v37))
  {
    uint64_t v38 = sub_100008E18(&qword_1000D4808);
    memcpy(__dst, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    v20(__dst, v36, v17);
    *(void *)&__dst[*(int *)(v37 + 20)] = *(void *)&v36[*(int *)(v37 + 20)];
    *(void *)&__dst[*(int *)(v37 + 24)] = *(void *)&v36[*(int *)(v37 + 24)];
    v139 = *(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v139(__dst, 0, 1, v37);
  }
  *(void *)&__src[v12[8]] = *(void *)&v143[v12[8]];
  uint64_t v39 = v12[9];
  id v40 = *(void **)&v143[v39];
  *(void *)&__src[v39] = v40;
  uint64_t v41 = v12[10];
  *(_OWORD *)__dstc = *(_OWORD *)&v143[v41];
  *(_OWORD *)&__src[v41] = *(_OWORD *)__dstc;
  uint64_t v42 = *(void (**)(char *, void, uint64_t, int *))(v140 + 56);
  swift_bridgeObjectRetain();
  id v43 = v40;
  id v44 = __dstc[0];
  v42(__src, 0, 1, v12);
LABEL_30:
  uint64_t v63 = a3[12];
  uint64_t v64 = (_OWORD *)((char *)a1 + v63);
  uint64_t v65 = (long long *)((char *)a2 + v63);
  long long v66 = *v65;
  long long v67 = v65[1];
  *(_OWORD *)((char *)v64 + 26) = *(long long *)((char *)v65 + 26);
  *uint64_t v64 = v66;
  v64[1] = v67;
  uint64_t v68 = a3[13];
  uint64_t v69 = (void *)((char *)a1 + v68);
  uint64_t v70 = (void *)((char *)a2 + v68);
  uint64_t v71 = *(void *)((char *)a1 + v68 + 8);
  uint64_t v72 = *(void *)((char *)a2 + v68 + 8);
  if (v71)
  {
    if (v72)
    {
      *uint64_t v69 = *v70;
      v69[1] = v70[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v69[2] = v70[2];
      v69[3] = v70[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000F6A0((uint64_t)v69);
      long long v73 = *((_OWORD *)v70 + 1);
      *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
      *((_OWORD *)v69 + 1) = v73;
    }
  }
  else if (v72)
  {
    *uint64_t v69 = *v70;
    v69[1] = v70[1];
    v69[2] = v70[2];
    v69[3] = v70[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v74 = *((_OWORD *)v70 + 1);
    *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
    *((_OWORD *)v69 + 1) = v74;
  }
  uint64_t v75 = a3[14];
  uint64_t v76 = (uint64_t)a1 + v75;
  long long v77 = (char *)a2 + v75;
  uint64_t v78 = *(void *)((char *)a1 + v75 + 152);
  uint64_t v79 = *(void *)((char *)a2 + v75 + 152);
  if (v78)
  {
    if (v79)
    {
      *(void *)uint64_t v76 = *(void *)v77;
      *(void *)(v76 + 8) = *((void *)v77 + 1);
      *(void *)(v76 + 16) = *((void *)v77 + 2);
      *(void *)(v76 + 24) = *((void *)v77 + 3);
      long long v80 = *((_OWORD *)v77 + 2);
      *(unsigned char *)(v76 + 48) = v77[48];
      *(_OWORD *)(v76 + 32) = v80;
      long long v81 = *(_OWORD *)(v77 + 56);
      *(unsigned char *)(v76 + 72) = v77[72];
      *(_OWORD *)(v76 + 56) = v81;
      *(void *)(v76 + 80) = *((void *)v77 + 10);
      *(void *)(v76 + 88) = *((void *)v77 + 11);
      *(void *)(v76 + 96) = *((void *)v77 + 12);
      *(unsigned char *)(v76 + 104) = v77[104];
      *(void *)(v76 + 112) = *((void *)v77 + 14);
      *(void *)(v76 + 120) = *((void *)v77 + 15);
      *(void *)(v76 + 128) = *((void *)v77 + 16);
      *(void *)(v76 + 136) = *((void *)v77 + 17);
      *(void *)(v76 + 144) = *((void *)v77 + 18);
      *(void *)(v76 + 152) = *((void *)v77 + 19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v76 + 160) = *((void *)v77 + 20);
      *(void *)(v76 + 168) = *((void *)v77 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v76 + 176) = *((void *)v77 + 22);
      *(void *)(v76 + 184) = *((void *)v77 + 23);
      *(void *)(v76 + 192) = *((void *)v77 + 24);
      *(void *)(v76 + 200) = *((void *)v77 + 25);
      *(void *)(v76 + 208) = *((void *)v77 + 26);
    }
    else
    {
      sub_10000F700(v76);
      long long v85 = *((_OWORD *)v77 + 1);
      *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
      *(_OWORD *)(v76 + 16) = v85;
      long long v86 = *((_OWORD *)v77 + 5);
      long long v88 = *((_OWORD *)v77 + 2);
      long long v87 = *((_OWORD *)v77 + 3);
      *(_OWORD *)(v76 + 64) = *((_OWORD *)v77 + 4);
      *(_OWORD *)(v76 + 80) = v86;
      *(_OWORD *)(v76 + 32) = v88;
      *(_OWORD *)(v76 + 48) = v87;
      long long v89 = *((_OWORD *)v77 + 9);
      long long v91 = *((_OWORD *)v77 + 6);
      long long v90 = *((_OWORD *)v77 + 7);
      *(_OWORD *)(v76 + 128) = *((_OWORD *)v77 + 8);
      *(_OWORD *)(v76 + 144) = v89;
      *(_OWORD *)(v76 + 96) = v91;
      *(_OWORD *)(v76 + 112) = v90;
      long long v93 = *((_OWORD *)v77 + 11);
      long long v92 = *((_OWORD *)v77 + 12);
      long long v94 = *((_OWORD *)v77 + 10);
      *(void *)(v76 + 208) = *((void *)v77 + 26);
      *(_OWORD *)(v76 + 176) = v93;
      *(_OWORD *)(v76 + 192) = v92;
      *(_OWORD *)(v76 + 160) = v94;
    }
  }
  else if (v79)
  {
    *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
    *(_OWORD *)(v76 + 16) = *((_OWORD *)v77 + 1);
    long long v82 = *((_OWORD *)v77 + 2);
    *(unsigned char *)(v76 + 48) = v77[48];
    *(_OWORD *)(v76 + 32) = v82;
    long long v83 = *(_OWORD *)(v77 + 56);
    *(unsigned char *)(v76 + 72) = v77[72];
    *(_OWORD *)(v76 + 56) = v83;
    *(_OWORD *)(v76 + 80) = *((_OWORD *)v77 + 5);
    *(void *)(v76 + 96) = *((void *)v77 + 12);
    *(unsigned char *)(v76 + 104) = v77[104];
    *(_OWORD *)(v76 + 112) = *((_OWORD *)v77 + 7);
    *(_OWORD *)(v76 + 128) = *((_OWORD *)v77 + 8);
    *(void *)(v76 + 144) = *((void *)v77 + 18);
    *(void *)(v76 + 152) = *((void *)v77 + 19);
    *(void *)(v76 + 160) = *((void *)v77 + 20);
    *(void *)(v76 + 168) = *((void *)v77 + 21);
    *(void *)(v76 + 176) = *((void *)v77 + 22);
    *(void *)(v76 + 184) = *((void *)v77 + 23);
    long long v84 = *((_OWORD *)v77 + 12);
    *(void *)(v76 + 208) = *((void *)v77 + 26);
    *(_OWORD *)(v76 + 192) = v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v95 = *((_OWORD *)v77 + 1);
    *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
    *(_OWORD *)(v76 + 16) = v95;
    long long v96 = *((_OWORD *)v77 + 2);
    long long v97 = *((_OWORD *)v77 + 3);
    long long v98 = *((_OWORD *)v77 + 5);
    *(_OWORD *)(v76 + 64) = *((_OWORD *)v77 + 4);
    *(_OWORD *)(v76 + 80) = v98;
    *(_OWORD *)(v76 + 32) = v96;
    *(_OWORD *)(v76 + 48) = v97;
    long long v99 = *((_OWORD *)v77 + 6);
    long long v100 = *((_OWORD *)v77 + 7);
    long long v101 = *((_OWORD *)v77 + 9);
    *(_OWORD *)(v76 + 128) = *((_OWORD *)v77 + 8);
    *(_OWORD *)(v76 + 144) = v101;
    *(_OWORD *)(v76 + 96) = v99;
    *(_OWORD *)(v76 + 112) = v100;
    long long v102 = *((_OWORD *)v77 + 10);
    long long v103 = *((_OWORD *)v77 + 11);
    long long v104 = *((_OWORD *)v77 + 12);
    *(void *)(v76 + 208) = *((void *)v77 + 26);
    *(_OWORD *)(v76 + 176) = v103;
    *(_OWORD *)(v76 + 192) = v104;
    *(_OWORD *)(v76 + 160) = v102;
  }
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v105 = a3[19];
  uint64_t v106 = (uint64_t)a1 + v105;
  v107 = (char *)a2 + v105;
  uint64_t v108 = *(void *)((char *)a1 + v105 + 8);
  uint64_t v109 = *(void *)((char *)a2 + v105 + 8);
  if (v108)
  {
    if (v109)
    {
      *(void *)uint64_t v106 = *(void *)v107;
      *(void *)(v106 + 8) = *((void *)v107 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v106 + 16) = *((void *)v107 + 2);
      *(void *)(v106 + 24) = *((void *)v107 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v106 + 32) = v107[32];
      unint64_t v110 = *(void **)(v106 + 40);
      v111 = (void *)*((void *)v107 + 5);
      *(void *)(v106 + 40) = v111;
      id v112 = v111;

      *(void *)(v106 + 48) = *((void *)v107 + 6);
      *(void *)(v106 + 56) = *((void *)v107 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v106 + 64) = *((void *)v107 + 8);
      *(void *)(v106 + 72) = *((void *)v107 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v106 + 80) = v107[80];
      unint64_t v113 = *(void **)(v106 + 88);
      v114 = (void *)*((void *)v107 + 11);
      *(void *)(v106 + 88) = v114;
      id v115 = v114;

      *(void *)(v106 + 96) = *((void *)v107 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v106 + 104) = *((void *)v107 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000F754(v106);
      long long v121 = *((_OWORD *)v107 + 1);
      long long v120 = *((_OWORD *)v107 + 2);
      *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
      *(_OWORD *)(v106 + 16) = v121;
      *(_OWORD *)(v106 + 32) = v120;
      long long v122 = *((_OWORD *)v107 + 6);
      long long v124 = *((_OWORD *)v107 + 3);
      long long v123 = *((_OWORD *)v107 + 4);
      *(_OWORD *)(v106 + 80) = *((_OWORD *)v107 + 5);
      *(_OWORD *)(v106 + 96) = v122;
      *(_OWORD *)(v106 + 48) = v124;
      *(_OWORD *)(v106 + 64) = v123;
    }
  }
  else if (v109)
  {
    *(void *)uint64_t v106 = *(void *)v107;
    *(void *)(v106 + 8) = *((void *)v107 + 1);
    *(void *)(v106 + 16) = *((void *)v107 + 2);
    *(void *)(v106 + 24) = *((void *)v107 + 3);
    *(unsigned char *)(v106 + 32) = v107[32];
    long long v116 = (void *)*((void *)v107 + 5);
    *(void *)(v106 + 40) = v116;
    *(void *)(v106 + 48) = *((void *)v107 + 6);
    *(void *)(v106 + 56) = *((void *)v107 + 7);
    *(void *)(v106 + 64) = *((void *)v107 + 8);
    *(void *)(v106 + 72) = *((void *)v107 + 9);
    *(unsigned char *)(v106 + 80) = v107[80];
    __dste = a3;
    long long v117 = (void *)*((void *)v107 + 11);
    *(void *)(v106 + 88) = v117;
    *(void *)(v106 + 96) = *((void *)v107 + 12);
    *(void *)(v106 + 104) = *((void *)v107 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v118 = v116;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v119 = v117;
    a3 = __dste;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v125 = *(_OWORD *)v107;
    long long v126 = *((_OWORD *)v107 + 2);
    *(_OWORD *)(v106 + 16) = *((_OWORD *)v107 + 1);
    *(_OWORD *)(v106 + 32) = v126;
    *(_OWORD *)uint64_t v106 = v125;
    long long v127 = *((_OWORD *)v107 + 3);
    long long v128 = *((_OWORD *)v107 + 4);
    long long v129 = *((_OWORD *)v107 + 6);
    *(_OWORD *)(v106 + 80) = *((_OWORD *)v107 + 5);
    *(_OWORD *)(v106 + 96) = v129;
    *(_OWORD *)(v106 + 48) = v127;
    *(_OWORD *)(v106 + 64) = v128;
  }
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  uint64_t v130 = a3[21];
  v131 = a3;
  v132 = *(void **)((char *)a1 + v130);
  v133 = *(void **)((char *)a2 + v130);
  *(void *)((char *)a1 + v130) = v133;
  id v134 = v133;

  *((unsigned char *)a1 + v131[22]) = *((unsigned char *)a2 + v131[22]);
  return a1;
}

uint64_t sub_10000F640(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10000F6A0(uint64_t a1)
{
  uint64_t v2 = sub_100008E18(&qword_1000D4818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10000F700(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000F754(uint64_t a1)
{
  return a1;
}

uint64_t sub_10000F7A8(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = a3[11];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v9;
  uint64_t v13 = (int *)type metadata accessor for HeadphoneAssets(0);
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100008E18(&qword_1000D4810);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v59 = v14;
    uint64_t v16 = type metadata accessor for URL();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v18(v11, v12, v16);
    v18(&v11[v13[5]], &v12[v13[5]], v16);
    uint64_t v19 = v13[6];
    __dst = &v11[v19];
    uint64_t v20 = &v12[v19];
    uint64_t v56 = v18;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(&v12[v19], 1, v16))
    {
      uint64_t v21 = sub_100008E18(&qword_1000D4800);
      memcpy(__dst, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v18(__dst, v20, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
    }
    uint64_t v22 = v13[7];
    uint64_t v23 = &v11[v22];
    uint64_t v24 = &v12[v22];
    uint64_t v25 = type metadata accessor for HeadphoneAssets.Feature(0);
    __dsta = *(void (***)(void *, void, uint64_t, uint64_t))(v25 - 8);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6])(v24, 1, v25))
    {
      uint64_t v26 = sub_100008E18(&qword_1000D4808);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      v56(v23, v24, v16);
      *(void *)&v23[*(int *)(v25 + 20)] = *(void *)&v24[*(int *)(v25 + 20)];
      *(void *)&v23[*(int *)(v25 + 24)] = *(void *)&v24[*(int *)(v25 + 24)];
      __dsta[7](v23, 0, 1, v25);
    }
    *(void *)&v11[v13[8]] = *(void *)&v12[v13[8]];
    *(void *)&v11[v13[9]] = *(void *)&v12[v13[9]];
    *(_OWORD *)&v11[v13[10]] = *(_OWORD *)&v12[v13[10]];
    (*(void (**)(char *, void, uint64_t, int *))(v59 + 56))(v11, 0, 1, v13);
  }
  uint64_t v27 = a3[12];
  uint64_t v28 = a3[13];
  uint64_t v29 = (_OWORD *)(a1 + v27);
  uint64_t v30 = (_OWORD *)(a2 + v27);
  *(_OWORD *)((char *)v29 + 26) = *(_OWORD *)((char *)v30 + 26);
  long long v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  int v32 = (_OWORD *)(a1 + v28);
  size_t v33 = (_OWORD *)(a2 + v28);
  long long v34 = v33[1];
  *int v32 = *v33;
  v32[1] = v34;
  uint64_t v35 = a3[14];
  uint64_t v36 = a3[15];
  uint64_t v37 = a1 + v35;
  uint64_t v38 = a2 + v35;
  *(void *)(v37 + 208) = *(void *)(v38 + 208);
  long long v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  long long v40 = *(_OWORD *)(v38 + 80);
  *(_OWORD *)(v37 + 64) = *(_OWORD *)(v38 + 64);
  *(_OWORD *)(v37 + 80) = v40;
  long long v41 = *(_OWORD *)(v38 + 48);
  *(_OWORD *)(v37 + 32) = *(_OWORD *)(v38 + 32);
  *(_OWORD *)(v37 + 48) = v41;
  long long v42 = *(_OWORD *)(v38 + 144);
  *(_OWORD *)(v37 + 128) = *(_OWORD *)(v38 + 128);
  *(_OWORD *)(v37 + 144) = v42;
  long long v43 = *(_OWORD *)(v38 + 112);
  *(_OWORD *)(v37 + 96) = *(_OWORD *)(v38 + 96);
  *(_OWORD *)(v37 + 112) = v43;
  long long v44 = *(_OWORD *)(v38 + 192);
  long long v45 = *(_OWORD *)(v38 + 160);
  *(_OWORD *)(v37 + 176) = *(_OWORD *)(v38 + 176);
  *(_OWORD *)(v37 + 192) = v44;
  *(_OWORD *)(v37 + 160) = v45;
  *(unsigned char *)(a1 + v36) = *(unsigned char *)(a2 + v36);
  uint64_t v46 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + v46) = *(void *)(a2 + v46);
  uint64_t v47 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  uint64_t v48 = (_OWORD *)(a1 + v47);
  int v49 = (_OWORD *)(a2 + v47);
  long long v50 = v49[1];
  _OWORD *v48 = *v49;
  v48[1] = v50;
  long long v51 = v49[6];
  long long v52 = v49[4];
  v48[5] = v49[5];
  v48[6] = v51;
  long long v53 = v49[3];
  v48[2] = v49[2];
  v48[3] = v53;
  v48[4] = v52;
  uint64_t v54 = a3[21];
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  *(void *)(a1 + v54) = *(void *)(a2 + v54);
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  return a1;
}

void *sub_10000FC20(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)a1[12];
  a1[12] = a2[12];

  uint64_t v13 = a3[11];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = (int *)type metadata accessor for HeadphoneAssets(0);
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_10000F640((uint64_t)v14, type metadata accessor for HeadphoneAssets);
      goto LABEL_7;
    }
    uint64_t v30 = type metadata accessor for URL();
    uint64_t v31 = *(void *)(v30 - 8);
    int v32 = *(void (**)(char *, char *, uint64_t))(v31 + 40);
    v32(v14, v15, v30);
    long long v99 = v32;
    v32(&v14[v16[5]], &v15[v16[5]], v30);
    uint64_t v33 = v16[6];
    long long v34 = &v15[v33];
    uint64_t v101 = v31;
    uint64_t v35 = *(uint64_t (**)(void))(v31 + 48);
    __dst = &v14[v33];
    int v108 = v35();
    int v36 = ((uint64_t (*)(char *, uint64_t, uint64_t))v35)(v34, 1, v30);
    if (v108)
    {
      if (v36)
      {
        size_t v37 = *(void *)(*(void *)(sub_100008E18(&qword_1000D4800) - 8) + 64);
        uint64_t v38 = __dst;
LABEL_18:
        memcpy(v38, v34, v37);
        goto LABEL_21;
      }
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(__dst, v34, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
    }
    else
    {
      if (v36)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(__dst, v30);
        size_t v37 = *(void *)(*(void *)(sub_100008E18(&qword_1000D4800) - 8) + 64);
        uint64_t v38 = __dst;
        goto LABEL_18;
      }
      v32(__dst, v34, v30);
    }
LABEL_21:
    uint64_t v43 = v16[7];
    long long v44 = &v14[v43];
    uint64_t v109 = &v15[v43];
    uint64_t v45 = type metadata accessor for HeadphoneAssets.Feature(0);
    __srca = *(void **)(v45 - 8);
    uint64_t v46 = (uint64_t (*)(char *, uint64_t, uint64_t))__srca[6];
    int __dstb = v44;
    LODWORD(v44) = v46(v44, 1, v45);
    int v47 = v46(v109, 1, v45);
    if (v44)
    {
      if (!v47)
      {
        (*(void (**)(char *, char *, uint64_t))(v101 + 32))(__dstb, v109, v30);
        *(void *)&__dstb[*(int *)(v45 + 20)] = *(void *)&v109[*(int *)(v45 + 20)];
        *(void *)&__dstb[*(int *)(v45 + 24)] = *(void *)&v109[*(int *)(v45 + 24)];
        ((void (*)(char *, void, uint64_t, uint64_t))__srca[7])(__dstb, 0, 1, v45);
        goto LABEL_29;
      }
      size_t v48 = *(void *)(*(void *)(sub_100008E18(&qword_1000D4808) - 8) + 64);
      int v49 = __dstb;
    }
    else
    {
      if (!v47)
      {
        v99(__dstb, v109, v30);
        *(void *)&__dstb[*(int *)(v45 + 20)] = *(void *)&v109[*(int *)(v45 + 20)];
        swift_bridgeObjectRelease();
        *(void *)&__dstb[*(int *)(v45 + 24)] = *(void *)&v109[*(int *)(v45 + 24)];
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      sub_10000F640((uint64_t)__dstb, type metadata accessor for HeadphoneAssets.Feature);
      size_t v48 = *(void *)(*(void *)(sub_100008E18(&qword_1000D4808) - 8) + 64);
      int v49 = __dstb;
    }
    memcpy(v49, v109, v48);
LABEL_29:
    *(void *)&v14[v16[8]] = *(void *)&v15[v16[8]];
    swift_bridgeObjectRelease();
    uint64_t v50 = v16[9];
    long long v51 = *(void **)&v14[v50];
    *(void *)&v14[v50] = *(void *)&v15[v50];

    uint64_t v52 = v16[10];
    long long v53 = &v14[v52];
    uint64_t v54 = &v15[v52];
    uint64_t v55 = *(void *)v54;
    uint64_t v56 = *((void *)v54 + 1);
    long long v57 = *(void **)v53;
    *(void *)long long v53 = v55;

    *((void *)v53 + 1) = v56;
    goto LABEL_30;
  }
  if (v20)
  {
LABEL_7:
    uint64_t v29 = sub_100008E18(&qword_1000D4810);
    memcpy(v14, v15, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_30;
  }
  uint64_t v102 = v17;
  uint64_t v21 = v14;
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v24(v21, v15, v22);
  v24(&v21[v16[5]], &v15[v16[5]], v22);
  uint64_t v25 = v16[6];
  __src = v21;
  uint64_t v26 = &v21[v25];
  uint64_t v27 = &v15[v25];
  long long v100 = v24;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(&v15[v25], 1, v22))
  {
    uint64_t v28 = sub_100008E18(&qword_1000D4800);
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    v24(v26, v27, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v26, 0, 1, v22);
  }
  uint64_t v39 = v16[7];
  __dsta = &__src[v39];
  long long v40 = &v15[v39];
  uint64_t v41 = type metadata accessor for HeadphoneAssets.Feature(0);
  uint64_t v98 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v40, 1, v41))
  {
    uint64_t v42 = sub_100008E18(&qword_1000D4808);
    memcpy(__dsta, v40, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    v100(__dsta, v40, v22);
    *(void *)&__dsta[*(int *)(v41 + 20)] = *(void *)&v40[*(int *)(v41 + 20)];
    *(void *)&__dsta[*(int *)(v41 + 24)] = *(void *)&v40[*(int *)(v41 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(__dsta, 0, 1, v41);
  }
  *(void *)&__src[v16[8]] = *(void *)&v15[v16[8]];
  *(void *)&__src[v16[9]] = *(void *)&v15[v16[9]];
  *(_OWORD *)&__src[v16[10]] = *(_OWORD *)&v15[v16[10]];
  (*(void (**)(char *, void, uint64_t, int *))(v102 + 56))(__src, 0, 1, v16);
LABEL_30:
  uint64_t v58 = a3[12];
  uint64_t v59 = a3[13];
  uint64_t v60 = (_OWORD *)((char *)a1 + v58);
  uint64_t v61 = (_OWORD *)((char *)a2 + v58);
  long long v62 = v61[1];
  *uint64_t v60 = *v61;
  v60[1] = v62;
  *(_OWORD *)((char *)v60 + 26) = *(_OWORD *)((char *)v61 + 26);
  uint64_t v63 = (void *)((char *)a1 + v59);
  uint64_t v64 = (void *)((char *)a2 + v59);
  if (*(void *)((char *)a1 + v59 + 8))
  {
    uint64_t v65 = v64[1];
    if (v65)
    {
      *uint64_t v63 = *v64;
      v63[1] = v65;
      swift_bridgeObjectRelease();
      uint64_t v66 = v64[3];
      v63[2] = v64[2];
      v63[3] = v66;
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    sub_10000F6A0((uint64_t)a1 + v59);
  }
  long long v67 = *((_OWORD *)v64 + 1);
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v67;
LABEL_35:
  uint64_t v68 = a3[14];
  uint64_t v69 = (uint64_t)a1 + v68;
  uint64_t v70 = (char *)a2 + v68;
  if (*(void *)((char *)a1 + v68 + 152))
  {
    uint64_t v71 = *((void *)v70 + 19);
    if (v71)
    {
      long long v72 = *((_OWORD *)v70 + 1);
      *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
      *(_OWORD *)(v69 + 16) = v72;
      *(_OWORD *)(v69 + 32) = *((_OWORD *)v70 + 2);
      *(unsigned char *)(v69 + 48) = v70[48];
      *(_OWORD *)(v69 + 56) = *(_OWORD *)(v70 + 56);
      *(unsigned char *)(v69 + 72) = v70[72];
      *(_OWORD *)(v69 + 80) = *((_OWORD *)v70 + 5);
      *(void *)(v69 + 96) = *((void *)v70 + 12);
      *(unsigned char *)(v69 + 104) = v70[104];
      long long v73 = *((_OWORD *)v70 + 8);
      *(_OWORD *)(v69 + 112) = *((_OWORD *)v70 + 7);
      *(_OWORD *)(v69 + 128) = v73;
      *(void *)(v69 + 144) = *((void *)v70 + 18);
      *(void *)(v69 + 152) = v71;
      swift_bridgeObjectRelease();
      uint64_t v74 = *((void *)v70 + 21);
      *(void *)(v69 + 160) = *((void *)v70 + 20);
      *(void *)(v69 + 168) = v74;
      swift_bridgeObjectRelease();
      long long v75 = *((_OWORD *)v70 + 12);
      *(_OWORD *)(v69 + 176) = *((_OWORD *)v70 + 11);
      *(_OWORD *)(v69 + 192) = v75;
      *(void *)(v69 + 208) = *((void *)v70 + 26);
      goto LABEL_40;
    }
    sub_10000F700(v69);
  }
  long long v76 = *((_OWORD *)v70 + 11);
  *(_OWORD *)(v69 + 160) = *((_OWORD *)v70 + 10);
  *(_OWORD *)(v69 + 176) = v76;
  *(_OWORD *)(v69 + 192) = *((_OWORD *)v70 + 12);
  *(void *)(v69 + 208) = *((void *)v70 + 26);
  long long v77 = *((_OWORD *)v70 + 7);
  *(_OWORD *)(v69 + 96) = *((_OWORD *)v70 + 6);
  *(_OWORD *)(v69 + 112) = v77;
  long long v78 = *((_OWORD *)v70 + 9);
  *(_OWORD *)(v69 + 128) = *((_OWORD *)v70 + 8);
  *(_OWORD *)(v69 + 144) = v78;
  long long v79 = *((_OWORD *)v70 + 3);
  *(_OWORD *)(v69 + 32) = *((_OWORD *)v70 + 2);
  *(_OWORD *)(v69 + 48) = v79;
  long long v80 = *((_OWORD *)v70 + 5);
  *(_OWORD *)(v69 + 64) = *((_OWORD *)v70 + 4);
  *(_OWORD *)(v69 + 80) = v80;
  long long v81 = *((_OWORD *)v70 + 1);
  *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
  *(_OWORD *)(v69 + 16) = v81;
LABEL_40:
  uint64_t v82 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + v82) = *((unsigned char *)a2 + v82);
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  swift_bridgeObjectRelease();
  uint64_t v83 = a3[19];
  uint64_t v84 = (uint64_t)a1 + v83;
  long long v85 = (char *)a2 + v83;
  if (!*(void *)((char *)a1 + v83 + 8))
  {
LABEL_44:
    long long v92 = *((_OWORD *)v85 + 5);
    *(_OWORD *)(v84 + 64) = *((_OWORD *)v85 + 4);
    *(_OWORD *)(v84 + 80) = v92;
    *(_OWORD *)(v84 + 96) = *((_OWORD *)v85 + 6);
    long long v93 = *((_OWORD *)v85 + 1);
    *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
    *(_OWORD *)(v84 + 16) = v93;
    long long v94 = *((_OWORD *)v85 + 3);
    *(_OWORD *)(v84 + 32) = *((_OWORD *)v85 + 2);
    *(_OWORD *)(v84 + 48) = v94;
    goto LABEL_45;
  }
  uint64_t v86 = *((void *)v85 + 1);
  if (!v86)
  {
    sub_10000F754(v84);
    goto LABEL_44;
  }
  *(void *)uint64_t v84 = *(void *)v85;
  *(void *)(v84 + 8) = v86;
  swift_bridgeObjectRelease();
  uint64_t v87 = *((void *)v85 + 3);
  *(void *)(v84 + 16) = *((void *)v85 + 2);
  *(void *)(v84 + 24) = v87;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v84 + 32) = v85[32];
  long long v88 = *(void **)(v84 + 40);
  *(void *)(v84 + 40) = *((void *)v85 + 5);

  uint64_t v89 = *((void *)v85 + 7);
  *(void *)(v84 + 48) = *((void *)v85 + 6);
  *(void *)(v84 + 56) = v89;
  swift_bridgeObjectRelease();
  uint64_t v90 = *((void *)v85 + 9);
  *(void *)(v84 + 64) = *((void *)v85 + 8);
  *(void *)(v84 + 72) = v90;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v84 + 80) = v85[80];
  long long v91 = *(void **)(v84 + 88);
  *(void *)(v84 + 88) = *((void *)v85 + 11);

  *(void *)(v84 + 96) = *((void *)v85 + 12);
  swift_bridgeObjectRelease();
  *(void *)(v84 + 104) = *((void *)v85 + 13);
  swift_bridgeObjectRelease();
LABEL_45:
  uint64_t v95 = a3[21];
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  long long v96 = *(void **)((char *)a1 + v95);
  *(void *)((char *)a1 + v95) = *(void *)((char *)a2 + v95);

  *((unsigned char *)a1 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  return a1;
}

uint64_t sub_1000106A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000106BC);
}

uint64_t sub_1000106BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100008E18(&qword_1000D4810);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 44);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100010770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100010784);
}

uint64_t sub_100010784(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100008E18(&qword_1000D4810);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 44);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneViewModel(uint64_t a1)
{
  return sub_100010850(a1, (uint64_t *)&unk_1000D4878);
}

uint64_t sub_100010850(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100010888()
{
  sub_100012580(319, (unint64_t *)&unk_1000D4888, (void (*)(uint64_t))type metadata accessor for HeadphoneAssets);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1000109AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100010A8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100010B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100010B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100010C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_100010CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100010D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100010D74);
}

uint64_t sub_100010D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100010E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100010E48);
}

uint64_t sub_100010E48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for URL();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100010F04()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_100010FA0(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9(&a1[a3[5]], &a2[a3[5]], v7);
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      uint64_t v13 = sub_100008E18(&qword_1000D4800);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v15 = a3[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = type metadata accessor for HeadphoneAssets.Feature(0);
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_100008E18(&qword_1000D4808);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      v9(v16, v17, v7);
      *(void *)&v16[*(int *)(v18 + 20)] = *(void *)&v17[*(int *)(v18 + 20)];
      *(void *)&v16[*(int *)(v18 + 24)] = *(void *)&v17[*(int *)(v18 + 24)];
      uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(v16, 0, 1, v18);
    }
    uint64_t v22 = a3[9];
    *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
    uint64_t v23 = *(void **)&a2[v22];
    *(void *)&a1[v22] = v23;
    uint64_t v24 = a3[10];
    long long v28 = *(_OWORD *)&a2[v24];
    *(_OWORD *)&a1[v24] = v28;
    swift_bridgeObjectRetain();
    id v25 = v23;
    id v26 = (id)v28;
  }
  return a1;
}

void sub_1000112A4(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v6(a1 + a2[5], v4);
  uint64_t v7 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for HeadphoneAssets.Feature(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v6(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  uint64_t v10 = *(void **)(a1 + a2[10]);
}

uint64_t sub_100011444(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    uint64_t v12 = sub_100008E18(&qword_1000D4800);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for HeadphoneAssets.Feature(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_100008E18(&qword_1000D4808);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    *(void *)&v14[*(int *)(v16 + 20)] = *(void *)&v15[*(int *)(v16 + 20)];
    *(void *)&v14[*(int *)(v16 + 24)] = *(void *)&v15[*(int *)(v16 + 24)];
    uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v14, 0, 1, v16);
  }
  uint64_t v20 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v21 = *(void **)(a2 + v20);
  *(void *)(a1 + v20) = v21;
  uint64_t v22 = a3[10];
  long long v26 = *(_OWORD *)(a2 + v22);
  *(_OWORD *)(a1 + v22) = v26;
  swift_bridgeObjectRetain();
  id v23 = v21;
  id v24 = (id)v26;
  return a1;
}

uint64_t sub_1000116F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v39 = (void (*)(void *, const void *, uint64_t))v8;
  v8(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(a1 + v9, 1, v6);
  int v14 = v12((uint64_t)v11, 1, v6);
  uint64_t v38 = v7;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v15 = sub_100008E18(&qword_1000D4800);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v39(v10, v11, v6);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for HeadphoneAssets.Feature(0);
  uint64_t v37 = *(void *)(v19 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v21 = v20(v17, 1, v19);
  int v22 = v20(v18, 1, v19);
  if (!v21)
  {
    if (!v22)
    {
      v39(v17, v18, v6);
      *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v17[*(int *)(v19 + 24)] = *(void *)&v18[*(int *)(v19 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_10000F640((uint64_t)v17, type metadata accessor for HeadphoneAssets.Feature);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v24 = sub_100008E18(&qword_1000D4808);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v17, v18, v6);
  *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
  *(void *)&v17[*(int *)(v19 + 24)] = *(void *)&v18[*(int *)(v19 + 24)];
  id v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23(v17, 0, 1, v19);
LABEL_13:
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  long long v26 = *(void **)(a1 + v25);
  uint64_t v27 = *(void **)(a2 + v25);
  *(void *)(a1 + v25) = v27;
  id v28 = v27;

  uint64_t v29 = a3[10];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = a2 + v29;
  int v32 = *(void **)v31;
  uint64_t v33 = *(void *)(v31 + 8);
  long long v34 = *(void **)v30;
  *(void *)uint64_t v30 = *(void *)v31;
  id v35 = v32;

  *(void *)(v30 + 8) = v33;
  return a1;
}

uint64_t sub_100011AE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v9, 1, v6))
  {
    uint64_t v12 = sub_100008E18(&qword_1000D4800);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v13 = a3[7];
  int v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for HeadphoneAssets.Feature(0);
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_100008E18(&qword_1000D4808);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v14, (uint64_t)v15, v6);
    *(void *)&v14[*(int *)(v16 + 20)] = *(void *)&v15[*(int *)(v16 + 20)];
    *(void *)&v14[*(int *)(v16 + 24)] = *(void *)&v15[*(int *)(v16 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100011D6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  id v35 = (void (*)(void *, const void *, uint64_t))v8;
  v8(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(a1 + v9, 1, v6);
  int v14 = v12((uint64_t)v11, 1, v6);
  uint64_t v34 = v7;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v15 = sub_100008E18(&qword_1000D4800);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v35(v10, v11, v6);
LABEL_7:
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = type metadata accessor for HeadphoneAssets.Feature(0);
  uint64_t v20 = *(void *)(v19 - 8);
  int v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      v35(v17, v18, v6);
      *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
      swift_bridgeObjectRelease();
      *(void *)&v17[*(int *)(v19 + 24)] = *(void *)&v18[*(int *)(v19 + 24)];
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_10000F640((uint64_t)v17, type metadata accessor for HeadphoneAssets.Feature);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = sub_100008E18(&qword_1000D4808);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v17, v18, v6);
  *(void *)&v17[*(int *)(v19 + 20)] = *(void *)&v18[*(int *)(v19 + 20)];
  *(void *)&v17[*(int *)(v19 + 24)] = *(void *)&v18[*(int *)(v19 + 24)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_13:
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[9];
  long long v26 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);

  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = (uint64_t *)(a2 + v27);
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  int v32 = *(void **)v28;
  *(void *)uint64_t v28 = v30;

  *(void *)(v28 + 8) = v31;
  return a1;
}

uint64_t sub_100012130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100012144);
}

uint64_t sub_100012144(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100008E18(&qword_1000D4800);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[6];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = sub_100008E18(&qword_1000D4808);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[8]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_1000122AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000122C0);
}

uint64_t sub_1000122C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100008E18(&qword_1000D4800);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[6];
    }
    else
    {
      uint64_t result = sub_100008E18(&qword_1000D4808);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[8]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[7];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100012424()
{
  type metadata accessor for URL();
  if (v0 <= 0x3F)
  {
    sub_100012580(319, &qword_1000D4A00, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F)
    {
      sub_100012580(319, (unint64_t *)&unk_1000D4A08, (void (*)(uint64_t))type metadata accessor for HeadphoneAssets.Feature);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100012580(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1000125D4()
{
  uint64_t v1 = sub_100008E18(&qword_1000D4800);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = 0;
  unint64_t v17 = 0xE000000000000000;
  _StringGuts.grow(_:)(84);
  v4._countAndFlagsBits = 0xD000000000000021;
  v4._object = (void *)0x80000001000A61F0;
  String.append(_:)(v4);
  type metadata accessor for URL();
  sub_100012B44();
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 0x72616D697270202CLL;
  v6._object = (void *)0xEF203D204C525579;
  String.append(_:)(v6);
  uint64_t v7 = type metadata accessor for HeadphoneAssets(0);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001000A6220;
  v9._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v9);
  sub_100012B9C(v0 + *(int *)(v7 + 24), (uint64_t)v3);
  v10._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x20736567616D6920;
  v11._object = (void *)0xEA0000000000203DLL;
  String.append(_:)(v11);
  v15[1] = *(void *)(v0 + *(int *)(v7 + 32));
  swift_bridgeObjectRetain();
  sub_100008E18(&qword_1000D4A58);
  v12._countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 62;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  return v16;
}

BOOL sub_1000127E0(uint64_t a1, uint64_t a2)
{
  unsigned int v2 = *(unsigned __int16 *)(a2 + 40);
  switch(*(unsigned __int16 *)(a1 + 40) >> 13)
  {
    case 1:
      return (v2 & 0xE000) == 0x2000;
    case 2:
      return (v2 & 0xE000) == 0x4000;
    case 3:
      return (v2 & 0xE000) == 0x6000;
    case 4:
      return (v2 & 0xE000) == 0x8000;
    case 5:
      BOOL v3 = (v2 & 0xE000) == 0xA000
        && (*(void *)(a2 + 8) | *(void *)a2 | *(void *)(a2 + 16) | *(void *)(a2 + 24) | *(void *)(a2 + 32)) == 0;
      return v3 && v2 == 40960;
    default:
      return v2 < 0x2000;
  }
}

uint64_t sub_1000128B4(uint64_t a1, uint64_t a2)
{
  return sub_100012A0C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

unint64_t sub_1000128D8()
{
  sub_100012B2C(v0, &v2);
  unint64_t result = 1701736270;
  switch(v3 >> 13)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x69772074696C7053;
      break;
    case 4:
      unint64_t result = 0x2074657364616548;
      break;
    case 5:
      return result;
    default:
      unint64_t result = 0xD000000000000012;
      break;
  }
  return result;
}

unint64_t sub_1000129D4()
{
  sub_100012B2C(v0, v2);
  return sub_1000128D8();
}

uint64_t sub_100012A0C(uint64_t a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, unint64_t a7, char a8)
{
  if (a4)
  {
    if (a4 == 1)
    {
      if (a8 == 1) {
        goto LABEL_4;
      }
LABEL_11:
      char v10 = 0;
      return v10 & 1;
    }
    if (a8 != 2) {
      goto LABEL_11;
    }
  }
  else if (a8)
  {
    goto LABEL_11;
  }
LABEL_4:
  if (a1 == a5 && a2 == a6 || (char v10 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    char v10 = (a3 | a7) == 0;
    if (a3 && a7)
    {
      sub_100012AEC();
      id v11 = (id)a3;
      id v12 = (id)a7;
      char v10 = static NSObject.== infix(_:_:)();
    }
  }
  return v10 & 1;
}

unint64_t sub_100012AEC()
{
  unint64_t result = qword_1000D47F8;
  if (!qword_1000D47F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D47F8);
  }
  return result;
}

_OWORD *sub_100012B2C(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 26) = *(long long *)((char *)a1 + 26);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

unint64_t sub_100012B44()
{
  unint64_t result = qword_1000D4A50;
  if (!qword_1000D4A50)
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4A50);
  }
  return result;
}

uint64_t sub_100012B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D4800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100012C04(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    id v5 = a3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for HeadphoneViewModel.MismatchLabel(uint64_t a1)
{
}

void sub_100012C60(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 <= 2u)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for HeadphoneViewModel.MismatchLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_100012C04(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for HeadphoneViewModel.MismatchLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  id v5 = *(void **)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_100012C04(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  Swift::String v9 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_100012C60(v7, v8, v9, v10);
  return a1;
}

__n128 initializeWithTake for HeadphoneViewModel.MismatchLabel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HeadphoneViewModel.MismatchLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  unsigned __int8 v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_100012C60(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneViewModel.MismatchLabel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneViewModel.MismatchLabel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100012E70(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_100012E7C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneViewModel.MismatchLabel()
{
  return &type metadata for HeadphoneViewModel.MismatchLabel;
}

__n128 initializeWithCopy for HeadphoneViewModel.BatteryConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneViewModel.BatteryConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 42)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 8) >> 3) & 0xFFFFFF80 | (*(void *)(a1 + 8) >> 1);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneViewModel.BatteryConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 42) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (8 * -a2) & 0x7FFFFFC00 | (2 * (-a2 & 0x7FLL));
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 16) = 0;
      *(_WORD *)(result + 40) = 0;
      return result;
    }
    *(unsigned char *)(result + 42) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100012F60(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int16 *)(a1 + 40) >> 13;
  if (v1 <= 4) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_100012F7C(uint64_t result)
{
  *(_WORD *)(result + 40) &= 0x1FFFu;
  return result;
}

uint64_t sub_100012F8C(uint64_t result, unsigned int a2)
{
  if (a2 < 5)
  {
    __int16 v2 = *(_WORD *)(result + 40);
    uint64_t v3 = *(void *)(result + 24) & 0x301;
    *(void *)(result + 8) &= 0x301uLL;
    *(void *)(result + 24) = v3;
    *(_WORD *)(result + 40) = v2 & 0x301 | ((_WORD)a2 << 13);
  }
  else
  {
    *(void *)__n128 result = a2 - 5;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_WORD *)(result + 40) = -24576;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneViewModel.BatteryConfiguration()
{
  return &type metadata for HeadphoneViewModel.BatteryConfiguration;
}

void sub_100012FF0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100013058()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D4A60);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D4A60);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_100013120()
{
  sub_100008E18(&qword_1000D4AD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A24B0;
  *(void *)(inited + 32) = [v0 titleView];
  *(void *)(inited + 40) = [v0 bodyView];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_imageView];
  *(void *)(inited + 48) = v2;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_doublePressMicaView];
  *(void *)(inited + 56) = v3;
  specialized Array._endMutation()();
  id v4 = *(void **)(inited + 32);
  if (!v4)
  {
    id v9 = v3;
    id v10 = v2;
    unsigned __int8 v8 = *(void **)(inited + 40);
    if (!v8) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  id v5 = v4;
  id v6 = v2;
  id v7 = v3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  unsigned __int8 v8 = *(void **)(inited + 40);
  if (v8)
  {
LABEL_7:
    id v11 = v8;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_10:
  id v12 = *(void **)(inited + 48);
  if (v12)
  {
    id v13 = v12;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v14 = *(void **)(inited + 56);
  if (v14)
  {
    id v15 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_100013398()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = __chkstk_darwin(v3);
  id v6 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unsigned __int8 v8 = (char *)&v94 - v7;
  v105.receiver = v1;
  v105.super_class = ObjectType;
  [super viewDidLoad];
  [v1 setDismissalType:1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong + 16;
    swift_beginAccess();
    sub_10000C744(v10, (uint64_t)&v102);
    swift_unknownObjectRelease();
    uint64_t v11 = v104;
    if (v104)
    {
      id v12 = sub_10000C80C(&v102, v104);
      uint64_t v13 = *(void *)(v11 - 8);
      __chkstk_darwin(v12);
      id v15 = (uint64_t *)((char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(void *))(v13 + 16))(v15);
      sub_10000C7AC((uint64_t)&v102);
      uint64_t v16 = *v15 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v16, (uint64_t)v6);
      (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v11);
      sub_10000C8B4((uint64_t)v6, (uint64_t)v8);
      uint64_t v102 = 0;
      unint64_t v103 = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      uint64_t v102 = 0x5F6C6C6143646E45;
      unint64_t v103 = 0xE800000000000000;
      int v17 = *(_DWORD *)&v8[*(int *)(v3 + 124)];
      int v101 = v17;
      v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      v19._countAndFlagsBits = 1598833453;
      v19._object = (void *)0xE400000000000000;
      String.append(_:)(v19);
      long long v97 = v8;
      LOBYTE(v101) = v8[144];
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      int v22 = self;
      id v23 = [v22 imageNamed:v21];

      id v96 = v23;
      if (v23)
      {
        id v24 = [objc_allocWithZone((Class)UIImageView) initWithImage:v23];
      }
      else
      {
        id v29 = [self b607];
        unsigned int v30 = [v29 productID];

        uint64_t v102 = 0x5F6C6C6143646E45;
        unint64_t v103 = 0xE800000000000000;
        int v101 = v17;
        v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v31);
        swift_bridgeObjectRelease();
        if (v17 == v30) {
          uint64_t v32 = 0x305F4C432DLL;
        }
        else {
          uint64_t v32 = 0x315F4C432DLL;
        }
        unint64_t v33 = 0xE500000000000000;
        String.append(_:)(*(Swift::String *)&v32);
        NSString v34 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v35 = [v22 imageNamed:v34];

        id v24 = [objc_allocWithZone((Class)UIImageView) initWithImage:v35];
      }
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v37 = [self bundleForClass:ObjCClassFromMetadata];
      uint64_t v102 = 0;
      unint64_t v103 = 0xE000000000000000;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      uint64_t v102 = 0x5F6C6C6143646E45;
      unint64_t v103 = 0xE800000000000000;
      int v101 = v17;
      v38._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v38);
      swift_bridgeObjectRelease();
      v39._countAndFlagsBits = 0x50656C62756F445FLL;
      v39._object = (void *)0xEC00000073736572;
      String.append(_:)(v39);
      id v40 = objc_allocWithZone((Class)BSUICAPackageView);
      id v41 = v37;
      NSString v42 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v43 = [v40 initWithPackageName:v42 inBundle:v41];

      id v95 = v41;
      if (!v43)
      {
LABEL_27:
        __break(1u);
        return;
      }
      [v43 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v44 = [v1 contentView];
      [v44 addSubview:v24];

      id v45 = [v1 contentView];
      [v45 addSubview:v43];

      id v46 = [v1 contentView];
      id v47 = [v46 mainContentGuide];

      id v48 = [v24 centerXAnchor];
      id v49 = [v47 centerXAnchor];
      id v98 = [v48 constraintEqualToAnchor:v49 constant:195.0];

      id v50 = [v43 centerXAnchor];
      id v51 = [v47 centerXAnchor];
      id v99 = [v50 constraintEqualToAnchor:v51 constant:195.0];

      id v100 = self;
      sub_100008E18((uint64_t *)&unk_1000D5090);
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = xmmword_1000A24C0;
      id v53 = [v24 topAnchor];
      uint64_t v54 = v24;
      id v55 = [v47 topAnchor];
      id v56 = [v53 constraintGreaterThanOrEqualToAnchor:v55];

      *(void *)(v52 + 32) = v56;
      id v57 = [v54 bottomAnchor];
      id v58 = [v47 bottomAnchor];
      id v59 = [v57 constraintLessThanOrEqualToAnchor:v58];

      *(void *)(v52 + 40) = v59;
      id v60 = [v54 centerYAnchor];
      id v61 = [v47 centerYAnchor];
      id v62 = [v60 constraintEqualToAnchor:v61];

      uint64_t v63 = v98;
      *(void *)(v52 + 48) = v62;
      *(void *)(v52 + 56) = v63;
      id v98 = v63;
      id v64 = [v43 topAnchor];
      id v65 = [v47 topAnchor];
      id v66 = [v64 constraintGreaterThanOrEqualToAnchor:v65];

      *(void *)(v52 + 64) = v66;
      id v67 = [v43 bottomAnchor];
      id v68 = [v47 bottomAnchor];
      id v69 = [v67 constraintLessThanOrEqualToAnchor:v68];

      *(void *)(v52 + 72) = v69;
      id v70 = [v43 heightAnchor];
      id v71 = [v70 constraintEqualToConstant:180.0];

      *(void *)(v52 + 80) = v71;
      id v72 = [v43 widthAnchor];
      id v73 = [v72 constraintEqualToConstant:180.0];

      *(void *)(v52 + 88) = v73;
      id v74 = [v43 centerYAnchor];
      id v75 = [v47 centerYAnchor];
      id v76 = [v74 constraintEqualToAnchor:v75];

      long long v77 = v99;
      *(void *)(v52 + 96) = v76;
      *(void *)(v52 + 104) = v77;
      uint64_t v102 = v52;
      specialized Array._endMutation()();
      sub_10000A968();
      id v78 = v77;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v100 activateConstraints:isa];

      long long v80 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_imageView];
      *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_imageView] = v54;
      id v100 = v54;

      long long v81 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalImageConstraint];
      uint64_t v82 = v98;
      *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalImageConstraint] = v98;
      id v83 = v82;

      uint64_t v84 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_doublePressMicaView];
      *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_doublePressMicaView] = v43;
      id v85 = v43;

      uint64_t v86 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalMicaConstraint];
      *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalMicaConstraint] = v78;
      id v87 = v78;

      unint64_t v88 = (unint64_t)sub_100013120();
      unint64_t v89 = v88;
      if (v88 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v90 = _CocoaArrayWrapper.endIndex.getter();
        if (v90) {
          goto LABEL_18;
        }
      }
      else
      {
        uint64_t v90 = *(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v90)
        {
LABEL_18:
          if (v90 >= 1)
          {
            for (uint64_t i = 0; i != v90; ++i)
            {
              if ((v89 & 0xC000000000000001) != 0) {
                id v92 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v92 = *(id *)(v89 + 8 * i + 32);
              }
              long long v93 = v92;
              [v92 setAlpha:0.0];
            }
            goto LABEL_25;
          }
          __break(1u);
          goto LABEL_27;
        }
      }
LABEL_25:

      swift_bridgeObjectRelease_n();
      sub_10000C918((uint64_t)v97);
      return;
    }
    sub_10000C7AC((uint64_t)&v102);
  }
  if (qword_1000D4308 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_100008278(v25, (uint64_t)qword_1000D4A60);
  long long v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Headphone Model is nil, exiting", v28, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_100014074(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  sub_1000140F4();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10008F420(*((unsigned char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_type));
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000140F4()
{
  uint64_t v0 = self;
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v17 = (uint64_t (*)(void))sub_100015018;
  uint64_t v18 = v1;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100046658;
  uint64_t v16 = &unk_1000C2B60;
  uint64_t v2 = _Block_copy(&v13);
  swift_release();
  [v0 animateWithDuration:0 delay:v2 options:0 animations:0.5 completion:0.0];
  _Block_release(v2);
  id v3 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v4) = 1041865114;
  LODWORD(v5) = 0.75;
  LODWORD(v6) = 1.0;
  LODWORD(v7) = 1041865114;
  id v8 = [v3 initWithControlPoints:v4 :v5 :v7 :v6];
  id v9 = self;
  [v9 begin];
  [v9 setAnimationTimingFunction:v8];
  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  int v17 = (uint64_t (*)(void))sub_100015038;
  uint64_t v18 = v10;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100046658;
  uint64_t v16 = &unk_1000C2B88;
  uint64_t v11 = _Block_copy(&v13);
  swift_release();
  int v17 = nullsub_1;
  uint64_t v18 = 0;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100014BC4;
  uint64_t v16 = &unk_1000C2BB0;
  id v12 = _Block_copy(&v13);
  [v0 animateWithDuration:v11 animations:v12 completion:0.5];
  _Block_release(v12);
  _Block_release(v11);
  [v9 commit];
}

void sub_1000143D8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitleText:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setBodyText:v2];

  [v0 setShouldCenterAlignText:1];
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v17 = sub_100014E64;
  uint64_t v18 = v3;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100012FF0;
  uint64_t v16 = &unk_1000C2AC0;
  double v5 = _Block_copy(&v13);
  double v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:0 handler:v5];

  _Block_release(v5);
  swift_release();
  swift_release();

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v17 = sub_100014EAC;
  uint64_t v18 = v8;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100012FF0;
  uint64_t v16 = &unk_1000C2AE8;
  uint64_t v10 = _Block_copy(&v13);
  id v11 = [v6 actionWithTitle:v9 style:1 handler:v10];

  _Block_release(v10);
  swift_release();
  swift_release();
  id v12 = [v0 addAction:v11];
}

void sub_1000146C4(uint64_t (*a1)(), uint64_t a2)
{
  NSString v4 = self;
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v12 = sub_100014F14;
  uint64_t v13 = v5;
  uint64_t v8 = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_100046658;
  id v11 = &unk_1000C2B10;
  double v6 = _Block_copy(&v8);
  swift_release();
  id v12 = a1;
  uint64_t v13 = a2;
  uint64_t v8 = _NSConcreteStackBlock;
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_100014BC4;
  id v11 = &unk_1000C2B38;
  id v7 = _Block_copy(&v8);
  swift_retain();
  swift_release();
  [v4 animateWithDuration:0 delay:v6 options:v7 animations:0.166666667 completion:0.0];
  _Block_release(v7);
  _Block_release(v6);
}

uint64_t sub_100014840(uint64_t a1, uint64_t a2, uint64_t (*a3)())
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    uint64_t v6 = swift_allocObject();
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    swift_retain();
    sub_1000146C4(a3, v6);

    return swift_release_n();
  }
  return result;
}

void sub_100014910(uint64_t a1, uint64_t a2, const char *a3, void (*a4)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = (void *)Strong;
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();

    if (v8)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_100008278(v9, (uint64_t)qword_1000D69F0);
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        id v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, a3, v12, 2u);
        swift_slowDealloc();
      }

      swift_beginAccess();
      uint64_t v13 = *(void *)(v8 + 40);
      if (v13)
      {
        sub_10000C80C((void *)(v8 + 16), v13);
        a4();
      }
      sub_10008ADE4(0);
      swift_unknownObjectRelease();
    }
  }
}

void sub_100014A88()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    NSString v2 = *(void **)(Strong
                  + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalImageConstraint);
    if (v2)
    {
      id v3 = v2;

      [v3 setConstant:0.0];
      NSString v1 = v3;
    }
  }
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalMicaConstraint);
    if (v6)
    {
      id v7 = v6;

      [v7 setConstant:0.0];
      uint64_t v5 = v7;
    }
  }
  swift_beginAccess();
  uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 contentView];

    [v10 layoutIfNeeded];
  }
}

uint64_t sub_100014BC4(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_100014C18(double a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v3 = (void *)result;
    unint64_t v4 = (unint64_t)sub_100013120();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v5 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          uint64_t v8 = v7;
          [v7 setAlpha:a1];
        }
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneEndCallViewController()
{
  return self;
}

uint64_t sub_100014E1C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_type);
}

uint64_t sub_100014E2C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100014E64(uint64_t a1)
{
  return sub_100014840(a1, v1, (uint64_t (*)())sub_100014F34);
}

uint64_t sub_100014E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100014EA4()
{
  return swift_release();
}

uint64_t sub_100014EAC(uint64_t a1)
{
  return sub_100014840(a1, v1, (uint64_t (*)())sub_100014EDC);
}

void sub_100014EDC(uint64_t a1)
{
  sub_100014910(a1, v1, "Requested Press Once for end call gesture", sub_100053788);
}

uint64_t sub_100014F14()
{
  return sub_100014C18(0.0);
}

void sub_100014F34(uint64_t a1)
{
  sub_100014910(a1, v1, "Requested Press Twice for end call gesture", sub_1000537AC);
}

id sub_100014F6C(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_imageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_doublePressMicaView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalImageConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_horizontalMicaConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_type] = 5;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_100015018()
{
  return sub_100014C18(1.0);
}

void sub_100015038()
{
}

uint64_t sub_100015070()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D4AD8);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D4AD8);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL sub_100015138(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_100015150()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100015198()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1000151C4()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_100015218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a1;
  v16[6] = a2;
  v16[7] = a5;
  v16[8] = a6;
  v16[9] = a3;
  v16[10] = a4;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v17;
  v18[3] = sub_10001752C;
  v18[4] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100016320((uint64_t)sub_1000175AC, (uint64_t)v18);
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1000153AC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v40 = a8;
  uint64_t v41 = a7;
  uint64_t v38 = a4;
  uint64_t v39 = a6;
  uint64_t v42 = a5;
  int v37 = a2;
  uint64_t v36 = a1;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  Swift::String v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v33 = v13;
    uint64_t v34 = v17;
    uint64_t v35 = v16;
    id v32 = *(id *)(result + 96);
    swift_release();
    uint64_t v21 = swift_allocObject();
    uint64_t v22 = v36;
    *(void *)(v21 + 16) = v36;
    char v23 = v37 & 1;
    *(unsigned char *)(v21 + 24) = v37 & 1;
    uint64_t v24 = v38;
    uint64_t v25 = v15;
    uint64_t v38 = v12;
    uint64_t v27 = v41;
    uint64_t v26 = v42;
    *(void *)(v21 + 32) = v24;
    *(void *)(v21 + 40) = v26;
    *(void *)(v21 + 48) = v39;
    *(void *)(v21 + 56) = v27;
    uint64_t v28 = v40;
    *(void *)(v21 + 64) = a3;
    *(void *)(v21 + 72) = v28;
    *(void *)(v21 + 80) = a9;
    *(void *)(v21 + 88) = a10;
    *(void *)(v21 + 96) = a11;
    aBlock[4] = sub_100017D88;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100046658;
    aBlock[3] = &unk_1000C2DA0;
    id v29 = _Block_copy(aBlock);
    sub_100017DCC(v22, v23);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    id v43 = _swiftEmptyArrayStorage;
    sub_100017DD8();
    sub_100008E18(&qword_1000D4C28);
    sub_100017E30((unint64_t *)&qword_1000D4C30, &qword_1000D4C28);
    uint64_t v30 = v38;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    Swift::String v31 = v32;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v30);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
    return swift_release();
  }
  return result;
}

uint64_t sub_100015708(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_1000D4310 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100008278(v21, (uint64_t)qword_1000D4AD8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      v31[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v32 = a1;
      swift_errorRetain();
      sub_100008E18((uint64_t *)&unk_1000D50A0);
      uint64_t v25 = String.init<A>(describing:)();
      uint64_t v32 = sub_10005D8C8(v25, v26, v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100017D18(a1, 1);
      sub_100017D18(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "HeadphoneUpsellClient: Failed to determine fetch eligibility %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100017D18(a1, 1);
      sub_100017D18(a1, 1);
    }

    swift_errorRetain();
    a3(a1, 1);
    sub_100017D18(a1, 1);
    return sub_100017D18(a1, 1);
  }
  else if (a1)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100017C14(result + 56, (uint64_t)v31);
      swift_release();
      sub_10000C80C(v31, v31[3]);
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = a3;
      *(void *)(v30 + 24) = a4;
      swift_retain();
      sub_100075A6C(a8, a9, a10, a11, a5, a6, (uint64_t)sub_100017EC8, v30);
      swift_release();
      return sub_100017BC4((uint64_t)v31);
    }
  }
  else
  {
    if (qword_1000D4310 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100008278(v14, (uint64_t)qword_1000D4AD8);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "HeadphoneUpsellClient: Registration yielded no offers", v17, 2u);
      swift_slowDealloc();
    }

    sub_100017E74();
    uint64_t v18 = swift_allocError();
    unsigned char *v19 = 0;
    a3(v18, 1);
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100015B28(uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  if (qword_1000D4310 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100008278(v6, (uint64_t)qword_1000D4AD8);
  swift_bridgeObjectRetain_n();
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    id v10 = (void **)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v29 = a4;
    aBlock = v10;
    sub_100008EB0(0, &qword_1000D4BF8);
    sub_100017B80(&qword_1000D4C00, &qword_1000D4BF8);
    swift_bridgeObjectRetain();
    uint64_t v11 = Set.description.getter();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    v36[0] = sub_10005D8C8(v11, v13, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    a4 = v29;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "HeadphoneUpsellClient: Groups - %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100017C14(result + 56, (uint64_t)v36);
    swift_release();
    sub_10000C80C(v36, v36[3]);
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_10007ED70(v15);
    swift_bridgeObjectRelease();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a3;
    *(void *)(v16 + 24) = a4;
    uint64_t v17 = self;
    swift_retain_n();
    id v18 = [v17 ams_sharedAccountStore];
    id v19 = [v18 ams_activeiTunesAccount];

    if (v19)
    {
      id v20 = v19;
      id v21 = [objc_allocWithZone((Class)AMSDeviceOfferRegistrationTask) initWithAccount:v20 bag:sub_10007594C()];

      swift_unknownObjectRelease();
      sub_100008EB0(0, &qword_1000D4BF8);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v21 setRegistrationGroups:isa];

      id v23 = [v21 perform];
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = sub_100017C78;
      *(void *)(v24 + 24) = v16;
      uint64_t v34 = sub_100017CD8;
      uint64_t v35 = v24;
      aBlock = _NSConcreteStackBlock;
      uint64_t v31 = 1107296256;
      uint64_t v32 = sub_1000177A8;
      uint64_t v33 = &unk_1000C2D00;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v23 addSuccessBlock:v25];
      _Block_release(v25);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = sub_100017C78;
      *(void *)(v26 + 24) = v16;
      uint64_t v34 = sub_100017CF8;
      uint64_t v35 = v26;
      aBlock = _NSConcreteStackBlock;
      uint64_t v31 = 1107296256;
      uint64_t v32 = sub_1000177B0;
      uint64_t v33 = &unk_1000C2D50;
      uint64_t v27 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v23 addErrorBlock:v27];
      _Block_release(v27);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_100017C84();
      uint64_t v28 = swift_allocError();
      sub_1000160C4(v28, 1, a3);
      swift_errorRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    return sub_100017BC4((uint64_t)v36);
  }
  return result;
}

uint64_t sub_1000160C4(BOOL a1, char a2, void (*a3)(void, void))
{
  uint64_t v5 = a2 & 1;
  if (qword_1000D4310 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100008278(v6, (uint64_t)qword_1000D4AD8);
  sub_100017D00((void *)a1, v5);
  sub_100017D00((void *)a1, v5);
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v7, v8))
  {
    sub_100017D0C((void *)a1, v5);
    sub_100017D0C((void *)a1, v5);

    if (!v5) {
      goto LABEL_5;
    }
LABEL_7:
    swift_errorRetain();
    goto LABEL_8;
  }
  unint64_t v13 = a3;
  uint64_t v9 = (uint8_t *)swift_slowAlloc();
  uint64_t v16 = swift_slowAlloc();
  *(_DWORD *)uint64_t v9 = 136315138;
  LOBYTE(v15) = v5 != 0;
  sub_100017D00((void *)a1, v5);
  sub_100008E18(&qword_1000D4C18);
  uint64_t v10 = String.init<A>(describing:)();
  uint64_t v14 = sub_10005D8C8(v10, v11, &v16);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  sub_100017D0C((void *)a1, v5);
  sub_100017D0C((void *)a1, v5);
  _os_log_impl((void *)&_mh_execute_header, v7, v8, "HeadphoneUpsellTask: Registration offers %s", v9, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (v5) {
    goto LABEL_7;
  }
LABEL_5:
  a1 = [(uint64_t)[a1 count:v13, v14, v15, v16] > 0];
LABEL_8:
  a3(a1, v5);
  return sub_100017D18(a1, v5);
}

uint64_t sub_100016320(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = sub_100008E18(&qword_1000D4BA8);
  __chkstk_darwin(v6 - 8);
  os_log_type_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100008E18(&qword_1000D4BB0);
  uint64_t v37 = *(void *)(v12 - 8);
  uint64_t v38 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100008E18(&qword_1000D4BB8);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v44 = v16;
  uint64_t v45 = v17;
  uint64_t v42 = v9;
  id v43 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v10;
  uint64_t v41 = v8;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    sub_100017824((unint64_t)_swiftEmptyArrayStorage);
  }
  else {
    id v19 = &_swiftEmptySetSingleton;
  }
  id v48 = v19;
  sub_100008E18(&qword_1000D4BC0);
  swift_allocObject();
  id v20 = (void *)CurrentValueSubject.init(_:)();
  uint64_t v22 = v3[5];
  uint64_t v21 = v3[6];
  sub_10000C80C(v3 + 2, v22);
  id v23 = *(void (**)(void (*)(uint64_t), void *, uint64_t, uint64_t))(v21 + 8);
  swift_retain();
  v23(sub_1000175B8, v20, v22, v21);
  swift_release();
  id v48 = v20;
  sub_100017E30(&qword_1000D4BC8, &qword_1000D4BC0);
  Publisher.first(where:)();
  uint64_t v24 = v39;
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  id v48 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v25 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v26 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v41, 1, 1, v25);
  sub_100017E30(&qword_1000D4BD8, &qword_1000D4BB0);
  sub_100017B80(&qword_1000D4BE0, (unint64_t *)&qword_1000D4BD0);
  uint64_t v27 = v43;
  uint64_t v28 = v38;
  Publisher.timeout<A>(_:scheduler:options:customError:)();
  sub_100017608(v26);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v42);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v28);
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  uint64_t v30 = (void *)swift_allocObject();
  uint64_t v32 = v46;
  uint64_t v31 = v47;
  v30[2] = v46;
  void v30[3] = v31;
  v30[4] = v29;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v32;
  *(void *)(v33 + 24) = v31;
  sub_100017E30(&qword_1000D4BE8, &qword_1000D4BB8);
  swift_retain_n();
  uint64_t v34 = v45;
  uint64_t v35 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v34);
  v3[13] = v35;
  return swift_release();
}

void sub_1000168DC(uint64_t a1)
{
  if (qword_1000D4310 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D4AD8);
  swift_bridgeObjectRetain_n();
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v25[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v6 = Dictionary.description.getter();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_10005D8C8(v6, v8, (uint64_t *)v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "HeadphoneUpsellClient: Accessory received: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (sub_100075EB4(a1))
  {
    swift_bridgeObjectRetain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      v25[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      sub_100008EB0(0, &qword_1000D4C08);
      swift_bridgeObjectRetain();
      uint64_t v12 = Array.description.getter();
      unint64_t v14 = v13;
      swift_bridgeObjectRelease();
      sub_10005D8C8(v12, v14, (uint64_t *)v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "HeadphoneUpsellClient: Items generated: %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    id v15 = objc_allocWithZone((Class)AMSDeviceOfferRegistrationGroup);
    sub_100008EB0(0, &qword_1000D4C08);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v15 initWithRegistrationItems:isa];

    [v17 setValidationOptions:5];
    CurrentValueSubject.value.getter();
    id v18 = v17;
    sub_10007D750(v25, v18);

    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      v25[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      swift_beginAccess();
      sub_100008EB0(0, &qword_1000D4BF8);
      sub_100017B80(&qword_1000D4C00, &qword_1000D4BF8);
      swift_bridgeObjectRetain();
      uint64_t v22 = Set.description.getter();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      sub_10005D8C8(v22, v24, (uint64_t *)v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "HeadphoneUpsellClient: Adding group new: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    swift_beginAccess();
    swift_bridgeObjectRetain();
    CurrentValueSubject.value.setter();
    swift_bridgeObjectRelease();
  }
}

BOOL sub_100016E9C(uint64_t a1)
{
  if ((*(void *)a1 & 0xC000000000000001) != 0) {
    uint64_t v1 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v1 = *(void *)(*(void *)a1 + 16);
  }
  return v1 != 0;
}

uint64_t sub_100016EDC(unsigned char *a1, void (*a2)(void))
{
  if ((*a1 & 1) == 0)
  {
    if (qword_1000D4310 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100008278(v3, (uint64_t)qword_1000D4AD8);
    os_log_type_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      id v18 = a2;
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      v19[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      uint64_t v7 = String.init<A>(describing:)();
      uint64_t v22 = sub_10005D8C8(v7, v8, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "HeadphoneUpsellClient: Device detection error - %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v18;
      swift_slowDealloc();
    }

    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "HeadphoneUpsellClient: Proceeding with empty groups", v11, 2u);
      swift_slowDealloc();
    }

    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter())
    {
      sub_100017824((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v12 = v17;
    }
    else
    {
      uint64_t v12 = &_swiftEmptySetSingleton;
    }
    a2(v12);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_100017C14(Strong + 16, (uint64_t)v19);
    swift_release();
    uint64_t v14 = v20;
    uint64_t v15 = v21;
    sub_10000C80C(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
    sub_100017BC4((uint64_t)v19);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + 104) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000171E0(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  if (qword_1000D4310 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100008278(v4, (uint64_t)qword_1000D4AD8);
  swift_bridgeObjectRetain_n();
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    unint64_t v13 = a2;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_100008EB0(0, &qword_1000D4BF8);
    sub_100017B80(&qword_1000D4C00, &qword_1000D4BF8);
    swift_bridgeObjectRetain();
    uint64_t v8 = Set.description.getter();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v11 = v8;
    a2 = v13;
    sub_10005D8C8(v11, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "HeadphoneUpsellClient: Sink: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return a2(v3);
}

uint64_t sub_100017428()
{
  sub_100017BC4(v0 + 16);
  sub_100017BC4(v0 + 56);

  swift_release();

  return _swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for HeadphoneUpsellClient()
{
  return self;
}

uint64_t sub_10001749C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000174D4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10001752C(uint64_t a1, char a2)
{
  return sub_1000153AC(a1, a2 & 1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10]);
}

uint64_t sub_10001756C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000175AC(uint64_t a1)
{
  return sub_100015B28(a1, *(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), *(void *)(v1 + 32));
}

void sub_1000175B8(uint64_t a1)
{
}

uint64_t sub_1000175C0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100017608(uint64_t a1)
{
  uint64_t v2 = sub_100008E18(&qword_1000D4BA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100017668()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000176A8(unsigned char *a1)
{
  return sub_100016EDC(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1000176B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000176EC(uint64_t *a1)
{
  return sub_1000171E0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000176F4()
{
  return 1;
}

Swift::Int sub_1000176FC()
{
  return Hasher._finalize()();
}

void sub_100017740()
{
}

Swift::Int sub_100017768()
{
  return Hasher._finalize()();
}

void sub_1000177A8(uint64_t a1, void *a2)
{
}

void sub_1000177B0(uint64_t a1, void *a2)
{
}

void sub_1000177B8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_100017824(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100008E18(&qword_1000D4BF0);
      uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_100008EB0(0, &qword_1000D4BF8);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = static NSObject.== infix(_:_:)();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_100008EB0(0, &qword_1000D4BF8);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = static NSObject.== infix(_:_:)();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_100017B80(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008EB0(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100017BC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_100017C14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100017C78(BOOL a1, char a2)
{
  return sub_1000160C4(a1, a2 & 1, *(void (**)(void, void))(v2 + 16));
}

unint64_t sub_100017C84()
{
  unint64_t result = qword_1000D4C10;
  if (!qword_1000D4C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4C10);
  }
  return result;
}

uint64_t sub_100017CD8(uint64_t a1)
{
  return sub_100075A0C(a1, *(uint64_t (**)(uint64_t, void))(v1 + 16));
}

uint64_t sub_100017CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100017CF0()
{
  return swift_release();
}

uint64_t sub_100017CF8(uint64_t a1)
{
  return sub_100075A3C(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16));
}

id sub_100017D00(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

void sub_100017D0C(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

uint64_t sub_100017D18(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100017D24()
{
  sub_100017D18(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100017D88()
{
  return sub_100015708(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96));
}

uint64_t sub_100017DCC(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

unint64_t sub_100017DD8()
{
  unint64_t result = qword_1000D4C20;
  if (!qword_1000D4C20)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4C20);
  }
  return result;
}

uint64_t sub_100017E30(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1000175C0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100017E74()
{
  unint64_t result = qword_1000D4C38;
  if (!qword_1000D4C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4C38);
  }
  return result;
}

uint64_t sub_100017EC8(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, a2 & 1);
}

unsigned char *initializeBufferWithCopyOfBuffer for HeadphoneViewType(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneUpsellClient.MarketingUpsellError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HeadphoneUpsellClient.MarketingUpsellError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10001805CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100018084(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_10001808C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneUpsellClient.MarketingUpsellError()
{
  return &type metadata for HeadphoneUpsellClient.MarketingUpsellError;
}

uint64_t getEnumTagSinglePayload for HeadphoneUpsellClient.AccessoryRetreivalError(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for HeadphoneUpsellClient.AccessoryRetreivalError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100018198);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1000181C0()
{
  return 0;
}

ValueMetadata *type metadata accessor for HeadphoneUpsellClient.AccessoryRetreivalError()
{
  return &type metadata for HeadphoneUpsellClient.AccessoryRetreivalError;
}

unint64_t sub_1000181DC()
{
  unint64_t result = qword_1000D4C40;
  if (!qword_1000D4C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4C40);
  }
  return result;
}

unint64_t sub_100018234()
{
  unint64_t result = qword_1000D4C48;
  if (!qword_1000D4C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4C48);
  }
  return result;
}

uint64_t sub_1000182A8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D4C50);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D4C50);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100018370()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_100008E18(&qword_1000D4CC0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HeadphoneModel();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v48 - v10;
  v52.receiver = v0;
  v52.super_class = ObjectType;
  [super viewDidLoad];
  [v0 setDismissalType:1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong + 16;
    swift_beginAccess();
    sub_10001A248(v13, (uint64_t)v50, &qword_1000D4798);
    swift_unknownObjectRelease();
    uint64_t v14 = v51;
    if (v51)
    {
      unint64_t v15 = sub_10000C80C(v50, v51);
      v48[1] = v48;
      uint64_t v16 = *(void *)(v14 - 8);
      __chkstk_darwin(v15);
      id v18 = (void *)((char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(void *))(v16 + 16))(v18);
      sub_10001A2AC((uint64_t)v50, &qword_1000D4798);
      uint64_t v19 = *v18 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v19, (uint64_t)v9);
      (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v14);
      id v49 = v11;
      sub_10000C8B4((uint64_t)v9, (uint64_t)v11);
      sub_10000C850((uint64_t)v11, (uint64_t)v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      uint64_t v20 = (uint64_t)v0 + OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_headphoneModel;
      swift_beginAccess();
      sub_10001A308((uint64_t)v4, v20);
      swift_endAccess();
      id v21 = [self configurationWithPointSize:88.0];
      NSString v22 = String._bridgeToObjectiveC()();
      id v23 = [self systemImageNamed:v22 withConfiguration:v21];

      id v24 = [objc_allocWithZone((Class)UIImageView) initWithImage:v23];
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v25 = [self systemGray2Color];
      [v24 setTintColor:v25];

      id v26 = [v0 contentView];
      [v26 addSubview:v24];

      id v27 = [v0 contentView];
      id v28 = [v27 mainContentGuide];

      uint64_t v29 = self;
      sub_100008E18((uint64_t *)&unk_1000D5090);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1000A2750;
      id v31 = [v24 topAnchor];
      id v32 = [v28 topAnchor];
      id v33 = [v31 constraintGreaterThanOrEqualToAnchor:v32];

      *(void *)(v30 + 32) = v33;
      id v34 = [v24 bottomAnchor];
      id v35 = [v28 bottomAnchor];
      id v36 = [v34 constraintLessThanOrEqualToAnchor:v35];

      *(void *)(v30 + 40) = v36;
      id v37 = [v24 centerYAnchor];
      id v38 = [v28 centerYAnchor];
      id v39 = [v37 constraintEqualToAnchor:v38];

      *(void *)(v30 + 48) = v39;
      id v40 = [v24 centerXAnchor];
      id v41 = [v28 centerXAnchor];
      id v42 = [v40 constraintEqualToAnchor:v41];

      *(void *)(v30 + 56) = v42;
      v50[0] = v30;
      specialized Array._endMutation()();
      sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v29 activateConstraints:isa];

      sub_10000C918((uint64_t)v49);
      return;
    }
    sub_10001A2AC((uint64_t)v50, &qword_1000D4798);
  }
  if (qword_1000D4318 != -1) {
    swift_once();
  }
  uint64_t v44 = type metadata accessor for Logger();
  sub_100008278(v44, (uint64_t)qword_1000D4C50);
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "HeadphoneNotGenuineViewController: Headphone Model is nil, exiting", v47, 2u);
    swift_slowDealloc();
  }
}

void sub_100018BBC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100008E18(&qword_1000D4CC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for HeadphoneModel();
  uint64_t v7 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v53 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v9 = String._bridgeToObjectiveC()();
  [v2 setTitle:v9];

  sub_100027B70(0x5Eu);
  sub_100008E18(&qword_1000D4560);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A2760;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v11 = self;
  Swift::Int v12 = NSForegroundColorAttributeName;
  id v13 = [v11 systemBlueColor];
  uint64_t v14 = sub_100008EB0(0, (unint64_t *)&qword_1000D47F8);
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 72) = NSUnderlineStyleAttributeName;
  *(void *)(inited + 104) = &type metadata for Int;
  *(void *)(inited + 80) = 0;
  unint64_t v15 = NSUnderlineStyleAttributeName;
  sub_100089034(inited);
  id v16 = objc_allocWithZone((Class)NSAttributedString);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10001A200((unint64_t *)&qword_1000D4570, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v55 = [v16 initWithString:v17 attributes:isa];

  id v19 = [v2 contentView];
  id v20 = [v19 subtitleLabel];

  if (v20)
  {
    id v21 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel];
    *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel] = v20;
  }
  uint64_t v23 = a1[2];
  uint64_t v22 = a1[3];
  uint64_t v24 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_headphoneModel];
  swift_beginAccess();
  sub_10001A248(v24, (uint64_t)v6, &qword_1000D4CC0);
  uint64_t v25 = v54;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v54) == 1)
  {
    swift_bridgeObjectRetain();
    sub_10001A2AC((uint64_t)v6, &qword_1000D4CC0);
  }
  else
  {
    uint64_t v26 = v53;
    sub_10000C8B4((uint64_t)v6, v53);
    int v27 = sub_10001A044(*(_DWORD *)(v26 + *(int *)(v25 + 124)));
    swift_bridgeObjectRetain();
    if (v27)
    {
      swift_bridgeObjectRelease();
      sub_100027B70(0x5Fu);
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v2 setTitle:v28];

      uint64_t v23 = sub_100027B70(0x60u);
      uint64_t v22 = v29;
    }
    sub_10000C918(v26);
  }
  aBlock = (void **)v23;
  uint64_t v57 = v22;
  swift_bridgeObjectRetain();
  v30._countAndFlagsBits = 32;
  v30._object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  id v31 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = [v31 initWithString:v32];

  [v33 appendAttributedString:v55];
  uint64_t v34 = OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel;
  [*(id *)&v2[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel] setAttributedText:v33];
  [*(id *)&v2[v34] setUserInteractionEnabled:1];
  id v35 = *(void **)&v2[v34];
  id v36 = objc_allocWithZone((Class)UITapGestureRecognizer);
  id v37 = v35;
  id v38 = [v36 initWithTarget:v2 action:"handleTapOnLabel:"];
  [v37 addGestureRecognizer:v38];

  id v39 = [v2 contentView];
  [v39 setSubtitleLabel:*(void *)&v2[v34]];

  uint64_t v40 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v60 = sub_100019FCC;
  uint64_t v61 = v40;
  aBlock = _NSConcreteStackBlock;
  uint64_t v57 = 1107296256;
  id v58 = sub_100012FF0;
  id v59 = &unk_1000C2F78;
  id v42 = _Block_copy(&aBlock);
  uint64_t v43 = self;
  id v44 = [v43 actionWithTitle:v41 style:0 handler:v42];

  _Block_release(v42);
  swift_release();
  swift_release();

  unint64_t v45 = a1[7];
  uint64_t v46 = HIBYTE(v45) & 0xF;
  if ((v45 & 0x2000000000000000) == 0) {
    uint64_t v46 = a1[6] & 0xFFFFFFFFFFFFLL;
  }
  if (v46)
  {
    uint64_t v47 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v60 = sub_10001A014;
    uint64_t v61 = v47;
    aBlock = _NSConcreteStackBlock;
    uint64_t v57 = 1107296256;
    id v58 = sub_100012FF0;
    id v59 = &unk_1000C2FA0;
    id v49 = _Block_copy(&aBlock);
    id v50 = [v43 actionWithTitle:v48 style:1 handler:v49];

    _Block_release(v49);
    swift_release();
    swift_release();
    id v51 = [v2 addAction:v50];
  }
}

void sub_1000193A4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      a3();
      swift_unknownObjectRelease();
    }
  }
}

void sub_10001942C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100008E18(&qword_1000D4800);
  __chkstk_darwin(v2 - 8);
  uint64_t v53 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008E18(&qword_1000D4CC8);
  __chkstk_darwin(v7 - 8);
  NSString v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel;
  id v11 = [*(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel] attributedText];
  if (v11)
  {
    Swift::Int v12 = v11;
    uint64_t v50 = v5;
    uint64_t v51 = v4;
    id v13 = [v11 string];

    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    uint64_t v56 = v14;
    uint64_t v57 = v16;
    uint64_t v54 = sub_100027B70(0x5Eu);
    uint64_t v55 = v17;
    uint64_t v18 = type metadata accessor for Locale();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 1, 1, v18);
    sub_100008E5C();
    uint64_t v19 = StringProtocol.range<A>(of:options:range:locale:)();
    uint64_t v21 = v20;
    char v23 = v22;
    sub_10001A2AC((uint64_t)v9, &qword_1000D4CC8);
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void **)&v1[v10];
      uint64_t v56 = v19;
      uint64_t v57 = v21;
      uint64_t v54 = v14;
      uint64_t v55 = v16;
      id v25 = v24;
      sub_100008E18(&qword_1000D4CD0);
      sub_10001A1A4();
      unint64_t v26 = _NSRange.init<A, B>(_:in:)();
      unsigned __int8 v28 = sub_100019AE8(v25, v26, v27);

      uint64_t v30 = v50;
      uint64_t v29 = v51;
      if (v28)
      {
        if (qword_1000D4318 != -1) {
          swift_once();
        }
        uint64_t v31 = type metadata accessor for Logger();
        sub_100008278(v31, (uint64_t)qword_1000D4C50);
        NSString v32 = v1;
        id v33 = Logger.logObject.getter();
        os_log_type_t v34 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v33, v34))
        {
          id v35 = (uint8_t *)swift_slowAlloc();
          uint64_t v36 = swift_slowAlloc();
          *(_DWORD *)id v35 = 136315138;
          uint64_t v56 = v36;
          uint64_t v38 = *(void *)&v32[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_learnMoreLink];
          unint64_t v37 = *(void *)&v32[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_learnMoreLink
                              + 8];
          swift_bridgeObjectRetain();
          uint64_t v39 = v38;
          uint64_t v30 = v50;
          uint64_t v54 = sub_10005D8C8(v39, v37, &v56);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v33, v34, "User tapped learn more, presenting support link %s", v35, 0xCu);
          swift_arrayDestroy();
          uint64_t v29 = v51;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v40 = (uint64_t)v53;
        if (swift_unknownObjectWeakLoadStrong())
        {
          if (qword_1000D4480 != -1) {
            swift_once();
          }
          sub_100008278(v31, (uint64_t)qword_1000D69F0);
          NSString v41 = Logger.logObject.getter();
          os_log_type_t v42 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v41, v42))
          {
            uint64_t v43 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v43 = 0;
            _os_log_impl((void *)&_mh_execute_header, v41, v42, "Requested dismiss", v43, 2u);
            swift_slowDealloc();
          }

          if (swift_unknownObjectWeakLoadStrong())
          {
            sub_10003B97C();
            swift_unknownObjectRelease();
          }
          swift_unknownObjectRelease();
        }
        URL.init(string:)();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v40, 1, v29) == 1)
        {
          sub_10001A2AC(v40, &qword_1000D4800);
        }
        else
        {
          id v44 = v52;
          (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v52, v40, v29);
          id v45 = [self sharedApplication];
          URL._bridgeToObjectiveC()(v46);
          NSString v48 = v47;
          sub_1000893BC((uint64_t)_swiftEmptyArrayStorage);
          type metadata accessor for OpenExternalURLOptionsKey(0);
          sub_10001A200((unint64_t *)&qword_1000D4610, type metadata accessor for OpenExternalURLOptionsKey);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v45 openURL:v48 options:isa completionHandler:0];

          (*(void (**)(char *, uint64_t))(v30 + 8))(v44, v29);
        }
      }
    }
  }
}

id sub_100019AE8(void *a1, unint64_t a2, char *a3)
{
  id result = [a1 attributedText];
  if (result)
  {
    uint64_t v8 = result;
    id v9 = [objc_allocWithZone((Class)NSLayoutManager) init];
    id v10 = [objc_allocWithZone((Class)NSTextContainer) initWithSize:0.0, 0.0];
    id v11 = [objc_allocWithZone((Class)NSTextStorage) initWithAttributedString:v8];
    [v9 addTextContainer:v10];
    [v11 addLayoutManager:v9];
    [v10 setLineFragmentPadding:0.0];
    [v10 setLineBreakMode:[a1 lineBreakMode]];
    [v10 setMaximumNumberOfLines:[a1 numberOfLines]];
    [a1 bounds];
    double v13 = v12;
    double v15 = v14;
    [v10 setSize:v12, v14];
    [v3 locationInView:a1];
    double v17 = v16;
    double v19 = v18;
    [v9 usedRectForTextContainer:v10];
    uint64_t v24 = [v9 characterIndexForPoint:v10 inTextContainer:0 fractionOfDistanceBetweenInsertionPoints:v17 - ((v13 - v20) * 0.5 - v21) v19 - ((v15 - v22) * 0.5 - v23)];

    return (id)((unint64_t)v24 >= a2 && &v24[-a2] < a3);
  }
  return result;
}

uint64_t sub_100019E1C()
{
  return type metadata accessor for HeadphoneNotGenuineViewController();
}

uint64_t type metadata accessor for HeadphoneNotGenuineViewController()
{
  uint64_t result = qword_1000D4CA8;
  if (!qword_1000D4CA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100019E70()
{
  sub_100019F2C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100019F2C()
{
  if (!qword_1000D4CB8)
  {
    type metadata accessor for HeadphoneModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D4CB8);
    }
  }
}

uint64_t sub_100019F84()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_type);
}

uint64_t sub_100019F94()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100019FCC(uint64_t a1)
{
  sub_1000193A4(a1, v1, (void (*)(void))sub_10008C1C4);
}

uint64_t sub_100019FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001A00C()
{
  return swift_release();
}

void sub_10001A014(uint64_t a1)
{
  sub_1000193A4(a1, v1, (void (*)(void))sub_10008C08C);
}

uint64_t sub_10001A044(int a1)
{
  return ((a1 - 8195) < 0x24) & (0xC0498E74DuLL >> (a1 - 3));
}

id sub_10001A06C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_subtitleLabel;
  id v6 = objc_allocWithZone((Class)PRXLabel);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 initWithStyle:1];
  uint64_t v8 = &v7[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_learnMoreLink];
  *(void *)uint64_t v8 = 0xD000000000000025;
  *((void *)v8 + 1) = 0x80000001000A6460;
  id v9 = &v7[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_headphoneModel];
  uint64_t v10 = type metadata accessor for HeadphoneModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v7[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_type] = 17;

  v12.receiver = v7;
  v12.super_class = ObjectType;
  return [super initWithContentView:a1];
}

unint64_t sub_10001A1A4()
{
  unint64_t result = qword_1000D4CD8;
  if (!qword_1000D4CD8)
  {
    sub_1000175C0(&qword_1000D4CD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4CD8);
  }
  return result;
}

uint64_t sub_10001A200(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10001A248(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100008E18(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10001A2AC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100008E18(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10001A308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D4CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10001A378()
{
  uint64_t v1 = v0;
  v37.receiver = v0;
  v37.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  [v0 setDismissalType:1];
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = [self bundleForClass:ObjCClassFromMetadata];
  id v4 = [v0 traitCollection];
  id v5 = [v4 userInterfaceStyle];

  BOOL v6 = v5 == (id)1;
  if (v5 == (id)1) {
    uint64_t v7 = 0x746867694CLL;
  }
  else {
    uint64_t v7 = 1802658116;
  }
  if (v6) {
    uint64_t v8 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v8 = (void *)0xE400000000000000;
  }
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  id v10 = objc_allocWithZone((Class)BSUICAPackageView);
  id v11 = v3;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithPackageName:v12 inBundle:v11];

  if (v13)
  {
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setState:v14 animated:1];

    [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v15 = [v1 contentView];
    [v15 addSubview:v13];

    id v16 = [v1 contentView];
    id v17 = [v16 mainContentGuide];

    double v18 = self;
    sub_100008E18((uint64_t *)&unk_1000D5090);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1000A2130;
    id v20 = [v13 topAnchor];
    id v21 = [v17 topAnchor];
    id v22 = [v20 constraintGreaterThanOrEqualToAnchor:v21];

    *(void *)(v19 + 32) = v22;
    id v23 = [v13 bottomAnchor];
    id v24 = [v17 bottomAnchor];
    id v25 = [v23 constraintLessThanOrEqualToAnchor:v24];

    *(void *)(v19 + 40) = v25;
    id v26 = [v13 heightAnchor];
    id v27 = [v26 constraintEqualToConstant:240.0];

    *(void *)(v19 + 48) = v27;
    id v28 = [v13 widthAnchor];
    id v29 = [v28 constraintEqualToConstant:120.0];

    *(void *)(v19 + 56) = v29;
    id v30 = [v13 centerYAnchor];
    id v31 = [v17 centerYAnchor];
    id v32 = [v30 constraintEqualToAnchor:v31];

    *(void *)(v19 + 64) = v32;
    id v33 = [v13 centerXAnchor];
    id v34 = [v17 centerXAnchor];
    id v35 = [v33 constraintEqualToAnchor:v34];

    *(void *)(v19 + 72) = v35;
    specialized Array._endMutation()();
    sub_10000A968();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 activateConstraints:isa, v19];
  }
  else
  {
    __break(1u);
  }
}

void sub_10001A958()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setSubtitle:v2];

  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = sub_10001ADAC;
  uint64_t v18 = v3;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100012FF0;
  id v16 = &unk_1000C3030;
  id v5 = _Block_copy(&v13);
  BOOL v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:0 handler:v5];

  _Block_release(v5);
  swift_release();
  swift_release();

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = sub_10001ADE4;
  uint64_t v18 = v8;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100012FF0;
  id v16 = &unk_1000C3058;
  id v10 = _Block_copy(&v13);
  id v11 = [v6 actionWithTitle:v9 style:1 handler:v10];

  _Block_release(v10);
  swift_release();
  swift_release();
  id v12 = [v0 addAction:v11];
}

void sub_10001AC30(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      sub_10008CA2C(a3 & 1);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneAdaptiveControlsConversationAwarenessViewController()
{
  return self;
}

uint64_t sub_10001AD64()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService60HeadphoneAdaptiveControlsConversationAwarenessViewController_type);
}

uint64_t sub_10001AD74()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10001ADAC(uint64_t a1)
{
  sub_10001AC30(a1, v1, 1);
}

uint64_t sub_10001ADCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001ADDC()
{
  return swift_release();
}

void sub_10001ADE4(uint64_t a1)
{
  sub_10001AC30(a1, v1, 0);
}

uint64_t sub_10001AE0C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D4D18);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D4D18);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10001AED4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D9170);
  sub_100008278(v0, (uint64_t)qword_1000D9170);
  return Logger.init(subsystem:category:)();
}

void sub_10001AF4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a4;
  uint64_t v44 = a3;
  id v45 = a1;
  uint64_t v5 = type metadata accessor for HeadphoneModel();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v9);
  id v13 = dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
  id v15 = v14;
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    id v16 = v15;
    if ([v16 hearingProtectionCapability] == 1
      && [v16 hearingProtectionEnabled] == 1)
    {
      id v17 = v45;
      id v41 = [v45 contentView];
      id v18 = [v41 dismissButton];
      if (v18)
      {
        id v40 = v18;
        sub_10001F854();
        sub_10000C850(a2, (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
        unint64_t v19 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        unint64_t v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v22 = swift_allocObject();
        *(void *)(v22 + 16) = v45;
        sub_10000C8B4((uint64_t)v8, v22 + v19);
        *(void *)(v22 + v20) = v16;
        id v23 = (void *)(v22 + v21);
        uint64_t v24 = v42;
        *id v23 = v44;
        v23[1] = v24;
        *(void *)(v22 + ((v21 + 23) & 0xFFFFFFFFFFFFFFF8)) = v43;
        id v17 = v45;
        swift_unknownObjectRetain();
        id v25 = v16;
        id v26 = v17;
        id v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        id v28 = v40;
        [v40 addAction:v27 forControlEvents:64];
      }
      sub_100027B70(0x94u);
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_100027B70(0x95u);
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_100027B70(0x96u);
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_100027B70(0x97u);
      NSString v32 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v33 = [v17 dismissalConfirmationActionWithTitle:v29 message:v30 confirmButtonTitle:v31 cancelButtonTitle:v32];

      [v17 setDismissButtonAction:v33];
    }
    else
    {
      if (qword_1000D4320 != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      sub_100008278(v34, (uint64_t)qword_1000D4D18);
      id v33 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v33, v35, "addOffModeSwitchAlertOnDismiss: LSR hearingProtectionEnabled is OFF not adding the dismissal alrt!", v36, 2u);
        swift_slowDealloc();
      }
      else
      {

        id v33 = v13;
      }
    }
  }
  else
  {
    if (qword_1000D4320 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_100008278(v37, (uint64_t)qword_1000D4D18);
    id v33 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v33, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v38, "addOffModeSwitchAlertOnDismiss: playload nil, skip add off mode alert!", v39, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10001B4D4(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  if (*(void *)(a3 + 136))
  {
    uint64_t v10 = *(void *)(a3 + 128);
    unint64_t v11 = *(void *)(a3 + 136);
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_10001E5F4(a2, v10, v11, a4, a5, a6);
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_10001B57C(uint64_t result)
{
  if (result)
  {
    if (qword_1000D4480 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100008278(v1, (uint64_t)qword_1000D69F0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      NSString v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Requested dismiss", v4, 2u);
      swift_slowDealloc();
    }

    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_10003B97C();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_10001B694(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v10 = [objc_allocWithZone((Class)AADeviceConfig) init];
  [v10 setListeningModeOffAllowed:2];
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  dispatch thunk of HeadphoneProxFeatureManager.updateDevice(for:deviceAddress:usecase:completion:)();
  swift_release();
  static HeadphoneProxFeatureManager.shared.getter();
  sub_100008E18(&qword_1000D47A0);
  uint64_t v5 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000A19D0;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v5);
  dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)();
  swift_release();
  uint64_t v9 = swift_bridgeObjectRelease();
  a4(v9);
}

uint64_t sub_10001B860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  sub_100008E18(&qword_1000D47A0);
  uint64_t v5 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000A19D0;
  (*(void (**)(unint64_t, void, uint64_t))(v6 + 104))(v8 + v7, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v5);
  dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)();
  swift_release();
  uint64_t v9 = swift_bridgeObjectRelease();
  return a4(v9);
}

id sub_10001B99C()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController____lazy_storage___imageView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController____lazy_storage___imageView);
  }
  else
  {
    sub_10001DB68();
    uint64_t v5 = v4;
    id v6 = [objc_allocWithZone((Class)UIImageView) initWithImage:v4];
    id v7 = [self systemBlueColor];
    [v6 setTintColor:v7];

    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v6 setContentMode:1];

    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_10001BAA8()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController____lazy_storage___topAsset;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController____lazy_storage___topAsset);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController____lazy_storage___topAsset);
  }
  else
  {
    id v4 = sub_10001BB0C();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10001BB0C()
{
  id v0 = [objc_allocWithZone((Class)UIView) init];
  id v1 = sub_10001B99C();
  [v0 addSubview:v1];

  id v2 = sub_10001B99C();
  [v2 pinToOther:v0];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v0 heightAnchor];
  id v4 = [v3 constraintEqualToConstant:180.0];

  [v4 setActive:1];
  return v0;
}

void sub_10001BC00()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_100008E18(&qword_1000D4CC0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v45 - v7;
  uint64_t v9 = type metadata accessor for HeadphoneModel();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)v45 - v14;
  v51.receiver = v1;
  v51.super_class = ObjectType;
  [super viewDidLoad];
  [v1 setDismissalType:1];
  id v16 = &v1[OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController_presenter];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  uint64_t v47 = v16;
  uint64_t v18 = Strong + 16;
  swift_beginAccess();
  sub_10001A248(v18, (uint64_t)v49, &qword_1000D4798);
  swift_unknownObjectRelease();
  uint64_t v19 = v50;
  if (!v50)
  {
    sub_10001A2AC((uint64_t)v49, &qword_1000D4798);
LABEL_7:
    if (qword_1000D4320 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_100008278(v41, (uint64_t)qword_1000D4D18);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Hearing Protection: Headphone Model is nil, exiting", v44, 2u);
      swift_slowDealloc();
    }

    return;
  }
  uint64_t v46 = v6;
  v45[1] = (uint64_t)ObjectType;
  unint64_t v20 = sub_10000C80C(v49, v50);
  uint64_t v48 = v9;
  uint64_t v21 = v10;
  uint64_t v22 = *(void *)(v19 - 8);
  __chkstk_darwin(v20);
  uint64_t v24 = (uint64_t *)((char *)v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void *))(v22 + 16))(v24);
  sub_10001A2AC((uint64_t)v49, &qword_1000D4798);
  uint64_t v25 = *v24 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  sub_10000C850(v25, (uint64_t)v13);
  (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v19);
  sub_10000C8B4((uint64_t)v13, (uint64_t)v15);
  v45[0] = (uint64_t)v15;
  sub_10000C850((uint64_t)v15, (uint64_t)v8);
  uint64_t v26 = v48;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v8, 0, 1, v48);
  uint64_t v27 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController_model];
  swift_beginAccess();
  sub_10001A308((uint64_t)v8, v27);
  swift_endAccess();
  id v28 = [v1 contentView];
  id v29 = sub_10001BAA8();
  [v28 addSubview:v29];

  id v30 = sub_10001BAA8();
  id v31 = [v1 contentView];
  id v32 = [v31 mainContentGuide];

  [v30 pinToOtherWithLayoutGuide:v32];
  id v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  v45[2] = v21 + 48;
  if (v33(v27, 1, v26) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_100008E18(&qword_1000D47A0);
    uint64_t v34 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
    uint64_t v35 = *(void *)(v34 - 8);
    unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1000A19D0;
    (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v37 + v36, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v34);
    swift_bridgeObjectRetain();
    dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = (uint64_t)v46;
    sub_10001A248(v27, (uint64_t)v46, &qword_1000D4CC0);
    if (v33(v38, 1, v48) != 1)
    {
      uint64_t v39 = v47;
      uint64_t v40 = swift_unknownObjectWeakLoadStrong();
      sub_10001AF4C(v1, v38, v40, *((void *)v39 + 1));
      swift_unknownObjectRelease();
      sub_10000C918(v45[0]);
      sub_10000C918(v38);
      return;
    }
  }
  __break(1u);
}

void sub_10001C340(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v86 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008E18(&qword_1000D4CC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HeadphoneModel();
  uint64_t v11 = *(void (***)(void, void, void, void))(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v81 - v15;
  NSString v17 = String._bridgeToObjectiveC()();
  [v2 setTitle:v17];

  NSString v18 = String._bridgeToObjectiveC()();
  [v2 setSubtitle:v18];

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v87 = v11;
    uint64_t v20 = Strong + 16;
    swift_beginAccess();
    sub_10001A248(v20, (uint64_t)&aBlock, &qword_1000D4798);
    swift_unknownObjectRelease();
    uint64_t v21 = v91;
    if (v91)
    {
      uint64_t v84 = v4;
      uint64_t v81 = a1;
      uint64_t v22 = sub_10000C80C(&aBlock, (uint64_t)v91);
      uint64_t v23 = *(v21 - 1);
      id v85 = v16;
      uint64_t v24 = v10;
      uint64_t v25 = v23;
      __chkstk_darwin(v22);
      uint64_t v27 = (uint64_t *)((char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(void *))(v25 + 16))(v27);
      sub_10001A2AC((uint64_t)&aBlock, &qword_1000D4798);
      uint64_t v28 = *v27 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v28, (uint64_t)v14);
      (*(void (**)(void *, void *))(v25 + 8))(v27, v21);
      uint64_t v29 = (uint64_t)v85;
      sub_10000C8B4((uint64_t)v14, (uint64_t)v85);
      sub_10000C850(v29, (uint64_t)v9);
      id v30 = v87;
      ((void (**)(char *, void, uint64_t, uint64_t))v87)[7](v9, 0, 1, v24);
      uint64_t v31 = (uint64_t)v2 + OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController_model;
      swift_beginAccess();
      sub_10001A308((uint64_t)v9, v31);
      swift_endAccess();
      type metadata accessor for HeadphoneProxFeatureManager();
      static HeadphoneProxFeatureManager.shared.getter();
      id v32 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v30[6];
      uint64_t v83 = v24;
      id v87 = v30 + 6;
      if (v32(v31, 1, v24) == 1)
      {
        __break(1u);
LABEL_37:
        __break(1u);
        return;
      }
      uint64_t v33 = v86;
      uint64_t v34 = v84;
      (*(void (**)(char *, void, uint64_t))(v86 + 104))(v6, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v84);
      swift_bridgeObjectRetain();
      uint64_t v35 = (void *)dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
      uint64_t v37 = v36;
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v34);
      if (!v35
        || (uint64_t v38 = v37,
            unsigned int v39 = [v38 hearingProtectionRegionStatus],
            v38,
            v39 != 2))
      {
        if (qword_1000D4320 != -1) {
          swift_once();
        }
        uint64_t v40 = type metadata accessor for Logger();
        sub_100008278(v40, (uint64_t)qword_1000D4D18);
        uint64_t v41 = Logger.logObject.getter();
        os_log_type_t v42 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v41, v42))
        {
          os_log_type_t v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v43 = 0;
          _os_log_impl((void *)&_mh_execute_header, v41, v42, "configure view for LSR Text", v43, 2u);
          swift_slowDealloc();
        }

        sub_100027B70(0x85u);
        NSString v44 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v2 setTitle:v44];

        sub_100027B70(0x86u);
        NSString v45 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v2 setSubtitle:v45];

        if (!v35)
        {
LABEL_26:
          if (qword_1000D4320 != -1) {
            swift_once();
          }
          uint64_t v63 = type metadata accessor for Logger();
          sub_100008278(v63, (uint64_t)qword_1000D4D18);
          id v64 = Logger.logObject.getter();
          os_log_type_t v65 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v64, v65))
          {
            id v66 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v66 = 0;
            _os_log_impl((void *)&_mh_execute_header, v64, v65, "configure view for LSR Button", v66, 2u);
            swift_slowDealloc();
          }

          if (v32(v31, 1, v83) != 1)
          {
            id v87 = v37;
            unint64_t v67 = *(void *)(v31 + 136);
            uint64_t v82 = v35;
            if (v67)
            {
              uint64_t v68 = *(void *)(v31 + 128);
              unint64_t v69 = v67;
            }
            else
            {
              uint64_t v68 = 0;
              unint64_t v69 = 0xE000000000000000;
            }
            swift_bridgeObjectRetain();
            sub_100027B70(0x88u);
            uint64_t v70 = swift_allocObject();
            swift_unknownObjectWeakInit();
            id v71 = (void *)swift_allocObject();
            v71[2] = v70;
            v71[3] = v68;
            v71[4] = v69;
            swift_retain();
            NSString v72 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v92 = sub_10001F708;
            long long v93 = v71;
            aBlock = _NSConcreteStackBlock;
            uint64_t v89 = 1107296256;
            uint64_t v90 = sub_100012FF0;
            long long v91 = &unk_1000C31B0;
            id v73 = _Block_copy(&aBlock);
            id v74 = self;
            id v75 = [v74 actionWithTitle:v72 style:0 handler:v73];

            _Block_release(v73);
            swift_release();
            swift_release();
            id v57 = v75;
            sub_100027B70(0x89u);
            uint64_t v76 = swift_allocObject();
            swift_unknownObjectWeakInit();
            swift_retain();
            NSString v77 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v92 = sub_10001F714;
            long long v93 = (void *)v76;
            aBlock = _NSConcreteStackBlock;
            uint64_t v89 = 1107296256;
            uint64_t v90 = sub_100012FF0;
            long long v91 = &unk_1000C31D8;
            id v78 = _Block_copy(&aBlock);
            id v79 = [v74 actionWithTitle:v77 style:1 handler:v78];

            _Block_release(v78);
            swift_release();
            swift_release();

            id v80 = [v2 addAction:v79];
            sub_10001F71C(v82, v87);
LABEL_35:

            sub_10000C918((uint64_t)v85);
            return;
          }
          goto LABEL_37;
        }
        uint64_t v38 = v37;
      }
      id v46 = v35;
      uint64_t v47 = v38;
      if ([v47 hearingProtectionCapability] == 1
        && [v47 hearingProtectionEnabled] == 1)
      {
        uint64_t v48 = v35;
        if (qword_1000D4320 != -1) {
          swift_once();
        }
        uint64_t v49 = type metadata accessor for Logger();
        sub_100008278(v49, (uint64_t)qword_1000D4D18);
        uint64_t v50 = Logger.logObject.getter();
        os_log_type_t v51 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v52 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v52 = 0;
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "configure action buttion for Hearing Protection", v52, 2u);
          swift_slowDealloc();
        }

        uint64_t v53 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_bridgeObjectRetain();
        swift_retain();
        NSString v54 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v92 = sub_10001F75C;
        long long v93 = (void *)v53;
        aBlock = _NSConcreteStackBlock;
        uint64_t v89 = 1107296256;
        uint64_t v90 = sub_100012FF0;
        long long v91 = &unk_1000C3200;
        uint64_t v55 = _Block_copy(&aBlock);
        id v56 = [self actionWithTitle:v54 style:0 handler:v55];

        _Block_release(v55);
        swift_release();
        swift_release();
        id v57 = v56;
        id v58 = [v2 addAction:v57];

        sub_10001F71C(v48, v37);
        goto LABEL_35;
      }

      goto LABEL_26;
    }
    sub_10001A2AC((uint64_t)&aBlock, &qword_1000D4798);
  }
  if (qword_1000D4320 != -1) {
    swift_once();
  }
  uint64_t v59 = type metadata accessor for Logger();
  sub_100008278(v59, (uint64_t)qword_1000D4D18);
  id v60 = Logger.logObject.getter();
  os_log_type_t v61 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v60, v61))
  {
    id v62 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v62 = 0;
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "Hearing Protection: Headphone Model is nil, exiting", v62, 2u);
    swift_slowDealloc();
  }
}

void sub_10001CFB8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008F2B8();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10001D02C()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v1 = (void *)result;
    id v2 = [objc_allocWithZone((Class)HMDeviceConfigurations) init];
    [v2 setEnableHearingProtection:1];
    *(void *)(swift_allocObject() + 16) = v1;
    swift_retain();
    id v3 = v1;
    dispatch thunk of HeadphoneProxFeatureManager.updateRecord(configs:deviceAddress:usecase:completion:)();

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10001D150()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10008F2B8();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10001D1A8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008F158();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10001D2E8()
{
  return type metadata accessor for HeadphoneYodelHearingProtectionViewController();
}

uint64_t type metadata accessor for HeadphoneYodelHearingProtectionViewController()
{
  uint64_t result = qword_1000D4D70;
  if (!qword_1000D4D70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10001D33C()
{
  sub_100019F2C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10001D3FC()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController_type);
}

unint64_t sub_10001D40C(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_10001D55C(a1, v2);
}

unint64_t sub_10001D4A0(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_10001D6D4(a1, a2, v4);
}

unint64_t sub_10001D518(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10001D7B8(a1, v4);
}

unint64_t sub_10001D55C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10001D6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_10001D7B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10001F7A4(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_10001F800((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

BOOL sub_10001D880(uint64_t a1, uint64_t a2)
{
  return sub_10001D8B8(a1, a2, (SEL *)&selRef_hearingAssistRegionStatus, (SEL *)&selRef_hearingAidCapability, "HeadphoneProxFeatureService: showHearingHearingAssist: depdencies not meet return false");
}

BOOL sub_10001D89C(uint64_t a1, uint64_t a2)
{
  return sub_10001D8B8(a1, a2, (SEL *)&selRef_hearingTestRegionStatus, (SEL *)&selRef_hearingTestCapability, "HeadphoneProxFeatureService: showHearingTest: depdencies not meet return false");
}

BOOL sub_10001D8B8(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4, const char *a5)
{
  uint64_t v9 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    goto LABEL_5;
  }
  String.uppercased()();
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v9);
  uint64_t v13 = dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
  uint64_t v15 = v14;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    if ([v15 *a3] == 2)
    {
      unsigned int v16 = [v13 *a4];

      return v16 == 2;
    }
  }
  else
  {
LABEL_5:
    if (qword_1000D4328 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100008278(v18, (uint64_t)qword_1000D9170);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v19, a5, v20, 2u);
      swift_slowDealloc();
    }
  }

  return 0;
}

void sub_10001DB14()
{
}

void sub_10001DB30()
{
}

void sub_10001DB4C()
{
}

void sub_10001DB68()
{
  if (qword_1000D4428 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1000D9270;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self _systemImageNamed:v1 withConfiguration:v0];

  if (!v2)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (qword_1000D4430 != -1) {
    swift_once();
  }
  id v3 = [v2 imageByApplyingSymbolConfiguration:qword_1000D9278];

  if (!v3) {
    goto LABEL_9;
  }
}

uint64_t sub_10001DC84(uint64_t a1, unint64_t a2)
{
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  uint64_t v4 = dispatch thunk of HeadphoneProxFeatureManager.connectedDevices.getter();
  swift_release();
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_10001D4A0(a1, a2);
    if (v6)
    {
      id v7 = *(id *)(*(void *)(v4 + 56) + 8 * v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v8 = [v7 listeningModeOffAllowed] == 1
        || [v7 listeningModeOffAllowed] == 0;
      unsigned int v15 = [v7 listeningMode];
      unsigned __int8 v16 = [v7 listeningModeConfigs];
      if (qword_1000D4328 != -1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      sub_100008278(v17, (uint64_t)qword_1000D9170);
      id v18 = v7;
      os_log_type_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136315138;
        id v22 = [v18 debugDescription];
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v25 = v24;

        sub_10005D8C8(v23, v25, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "shouldPromptUserSwitchListeningMode: device %s", v21, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      unsigned int v26 = [v18 hideOffListeningModeCapability];

      char v13 = v26 == 2;
      char v27 = v26 != 2 || v8;
      if ((v27 & 1) == 0) {
        char v13 = (v15 == 1) | v16;
      }
      return v13 & 1;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1000D4328 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100008278(v9, (uint64_t)qword_1000D9170);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    sub_10005D8C8(a1, a2, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "shouldPromptUserSwitchListeningMode: Invalid address %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  char v13 = 0;
  return v13 & 1;
}

BOOL sub_10001E0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2) {
    goto LABEL_5;
  }
  String.uppercased()();
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v3);
  id v7 = (void *)dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
  uint64_t v9 = v8;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    if ([v7 hearingProtectionCapability] == 2)
    {
      unsigned int v10 = [v7 hearingAidCapability];

      return v10 == 2;
    }
  }
  else
  {
LABEL_5:
    if (qword_1000D4328 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100008278(v12, (uint64_t)qword_1000D9170);
    char v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      unsigned int v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "HeadphoneProxFeatureService: showHearingProtection: depdencies not meet return false", v15, 2u);
      swift_slowDealloc();
    }
  }
  return 0;
}

uint64_t sub_10001E340()
{
  uint64_t v0 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v0);
  uint64_t v4 = (void *)dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
  char v6 = v5;
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v7 = 0xD00000000000001CLL;
  BOOL v8 = (void *)0x80000001000A65D0;
  uint64_t v9 = (void *)0x80000001000A65F0;
  if (v4)
  {

    unsigned int v10 = [v6 hearingProtectionRegionStatus];
    if (v10 == 2) {
      uint64_t v11 = 0xD000000000000026;
    }
    else {
      uint64_t v11 = 0xD000000000000019;
    }
    if (v10 == 2)
    {
      uint64_t v7 = 0xD000000000000029;
      uint64_t v9 = (void *)0x80000001000A6660;
      BOOL v8 = (void *)0x80000001000A6630;
    }
  }
  else
  {
    uint64_t v11 = 0xD000000000000019;
  }
  uint64_t v12 = self;
  id v13 = [v12 mainBundle];
  v24._object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = v11;
  v14._object = v8;
  v15.value._uint64_t countAndFlagsBits = 0xD000000000000011;
  v15.value._object = (void *)0x80000001000A6610;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v24)._countAndFlagsBits;
  swift_bridgeObjectRelease();

  id v18 = [v12 mainBundle];
  v25._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = v7;
  v19._object = v9;
  v20.value._uint64_t countAndFlagsBits = 0xD000000000000011;
  v20.value._object = (void *)0x80000001000A6610;
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v25);
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

void sub_10001E5F4(void *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  *(void *)(v12 + 24) = a6;
  type metadata accessor for HeadphoneProxFeatureManager();
  swift_unknownObjectRetain();
  static HeadphoneProxFeatureManager.shared.getter();
  uint64_t v13 = dispatch thunk of HeadphoneProxFeatureManager.connectedDevices.getter();
  swift_release();
  if (!*(void *)(v13 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    if (qword_1000D4328 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100008278(v19, (uint64_t)qword_1000D9170);
    swift_bridgeObjectRetain_n();
    Swift::String_optional v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      id v22 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)id v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_10005D8C8(a2, a3, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "showOffModeSwitchAlert: Invalid address %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!a5) {
        goto LABEL_20;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (!a5) {
        goto LABEL_20;
      }
    }
    if (qword_1000D4480 != -1) {
      swift_once();
    }
    sub_100008278(v19, (uint64_t)qword_1000D69F0);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      Swift::String v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Requested dismiss", v25, 2u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10003B97C();
      swift_release();
      goto LABEL_19;
    }
LABEL_20:
    swift_release();
    return;
  }
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_10001D4A0(a2, a3);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  id v16 = *(id *)(*(void *)(v13 + 56) + 8 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((sub_10001DC84(a2, a3) & 1) == 0)
  {
    if (qword_1000D4328 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100008278(v26, (uint64_t)qword_1000D9170);
    id v27 = v16;
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      id v51 = (id)v26;
      id v30 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)id v30 = 136315138;
      id v31 = [v27 debugDescription];
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v34 = v33;

      uint64_t v58 = sub_10005D8C8(v32, v34, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v26 = (uint64_t)v51;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "showOffModeSwitchAlert: dont need to alert %s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!a5) {
        goto LABEL_35;
      }
    }
    else
    {

      if (!a5)
      {
LABEL_35:
        swift_release();

        return;
      }
    }
    if (qword_1000D4480 != -1) {
      swift_once();
    }
    sub_100008278(v26, (uint64_t)qword_1000D69F0);
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "Requested dismiss", v49, 2u);
      swift_slowDealloc();
    }

    if (!swift_unknownObjectWeakLoadStrong()) {
      goto LABEL_35;
    }
    sub_10003B97C();
    swift_release();

LABEL_19:
    swift_unknownObjectRelease();
    return;
  }
  id v50 = a1;
  uint64_t v17 = v12;
  if ([a4 hearingProtectionRegionStatus] == 2)
  {
    sub_100027B70(0x92u);
    unsigned __int8 v18 = -109;
  }
  else
  {
    sub_100027B70(0x94u);
    unsigned __int8 v18 = -107;
  }
  sub_100027B70(v18);
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v37 = [self alertControllerWithTitle:v35 message:v36 preferredStyle:1];

  sub_100027B70(0x96u);
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = a2;
  v38[3] = a3;
  v38[4] = sub_10001FCA8;
  v38[5] = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v56 = sub_10001FE0C;
  id v57 = v38;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v53 = 1107296256;
  NSString v54 = sub_100012FF0;
  uint64_t v55 = &unk_1000C32C8;
  uint64_t v40 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v41 = self;
  id v42 = [v41 actionWithTitle:v39 style:0 handler:v40];
  _Block_release(v40);

  [v37 addAction:v42];
  sub_100027B70(0x97u);
  os_log_type_t v43 = (void *)swift_allocObject();
  v43[2] = a2;
  v43[3] = a3;
  v43[4] = sub_10001FCA8;
  v43[5] = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v56 = sub_10001FE10;
  id v57 = v43;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v53 = 1107296256;
  NSString v54 = sub_100012FF0;
  uint64_t v55 = &unk_1000C3318;
  NSString v45 = _Block_copy(&aBlock);
  swift_release();
  id v46 = [v41 actionWithTitle:v44 style:0 handler:v45];
  _Block_release(v45);

  [v37 addAction:v46];
  [v50 presentViewController:v37 animated:1 completion:0];
  swift_release();
}

void sub_10001EF28(void *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  type metadata accessor for HeadphoneProxFeatureManager();
  swift_retain();
  static HeadphoneProxFeatureManager.shared.getter();
  uint64_t v10 = dispatch thunk of HeadphoneProxFeatureManager.connectedDevices.getter();
  swift_release();
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_10001D4A0(a2, a3);
    if (v12)
    {
      id v13 = *(id *)(*(void *)(v10 + 56) + 8 * v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (sub_10001DC84(a2, a3))
      {
        uint64_t v41 = v13;
        if ([a4 hearingProtectionRegionStatus] == 2)
        {
          sub_100027B70(0x92u);
          unsigned __int8 v14 = -109;
        }
        else
        {
          sub_100027B70(0x94u);
          unsigned __int8 v14 = -107;
        }
        sub_100027B70(v14);
        NSString v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v31 = [self alertControllerWithTitle:v29 message:v30 preferredStyle:1];

        sub_100027B70(0x96u);
        uint64_t v32 = (void *)swift_allocObject();
        v32[2] = a2;
        v32[3] = a3;
        v32[4] = sub_10001F650;
        v32[5] = a5;
        swift_bridgeObjectRetain();
        swift_retain();
        NSString v33 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v46 = sub_10001F65C;
        uint64_t v47 = v32;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v43 = 1107296256;
        NSString v44 = sub_100012FF0;
        NSString v45 = &unk_1000C30E8;
        unint64_t v34 = _Block_copy(&aBlock);
        swift_release();
        NSString v35 = self;
        id v36 = [v35 actionWithTitle:v33 style:0 handler:v34];
        _Block_release(v34);

        [v31 addAction:v36];
        sub_100027B70(0x97u);
        id v37 = (void *)swift_allocObject();
        v37[2] = a2;
        v37[3] = a3;
        v37[4] = sub_10001F650;
        v37[5] = a5;
        swift_bridgeObjectRetain();
        swift_retain();
        NSString v38 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v46 = sub_10001F684;
        uint64_t v47 = v37;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v43 = 1107296256;
        NSString v44 = sub_100012FF0;
        NSString v45 = &unk_1000C3138;
        NSString v39 = _Block_copy(&aBlock);
        swift_release();
        id v40 = [v35 actionWithTitle:v38 style:0 handler:v39];
        _Block_release(v39);

        [v31 addAction:v40];
        [a1 presentViewController:v31 animated:1 completion:0];
        swift_release();
      }
      else
      {
        if (qword_1000D4328 != -1) {
          swift_once();
        }
        uint64_t v19 = type metadata accessor for Logger();
        sub_100008278(v19, (uint64_t)qword_1000D9170);
        id v20 = v13;
        os_log_type_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = (uint8_t *)swift_slowAlloc();
          uint64_t v24 = swift_slowAlloc();
          *(_DWORD *)uint64_t v23 = 136315138;
          uint64_t aBlock = v24;
          id v25 = [v20 debugDescription];
          uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v28 = v27;

          uint64_t v48 = sub_10005D8C8(v26, v28, &aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v21, v22, "showOffModeSwitchAlert: dont need to alert %s", v23, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        sub_10006DE0C();
        swift_release();
      }
      return;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1000D4328 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100008278(v15, (uint64_t)qword_1000D9170);
  swift_bridgeObjectRetain_n();
  id v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    unsigned __int8 v18 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)unsigned __int8 v18 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_10005D8C8(a2, a3, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "showOffModeSwitchAlert: Invalid address %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10006DE0C();
  swift_release();
}

void sub_10001F650()
{
}

void sub_10001F65C(uint64_t a1)
{
  sub_10001B694(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32));
}

uint64_t sub_10001F668(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10001F678()
{
  return swift_release();
}

uint64_t sub_10001F684(uint64_t a1)
{
  return sub_10001B860(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_10001F690()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001F6C8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10001F708()
{
  return sub_10001D02C();
}

void sub_10001F714()
{
}

void sub_10001F71C(void *a1, void *a2)
{
  if (a1)
  {
  }
}

void sub_10001F75C()
{
}

uint64_t sub_10001F764()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10001F79C()
{
  return sub_10001D150();
}

uint64_t sub_10001F7A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10001F800(uint64_t a1)
{
  return a1;
}

unint64_t sub_10001F854()
{
  unint64_t result = qword_1000D63F0;
  if (!qword_1000D63F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D63F0);
  }
  return result;
}

uint64_t sub_10001F894()
{
  uint64_t v1 = (int *)type metadata accessor for HeadphoneModel();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = v0 + v3;
  if (*(void *)(v0 + v3 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + v1[11];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(v5 + v1[14]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_10001FB5C(*v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v11 = v5 + v1[35];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v14 = v5 + v1[42];
  int v15 = *(unsigned __int8 *)(v14 + 8);
  if (v15 != 255) {
    sub_100017D0C(*(void **)v14, v15 & 1);
  }
  unint64_t v16 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, ((v17 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_10001FB5C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_10001FBB4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for HeadphoneModel() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void **)(v1 + 16);
  uint64_t v8 = *(void **)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = *(void *)(v1 + v6 + 8);

  return sub_10001B4D4(a1, v7, v1 + v4, v8, v9, v10);
}

uint64_t sub_10001FC70()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10001FCA8()
{
  return sub_10001B57C(*(void *)(v0 + 16));
}

uint64_t sub_10001FCB8()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

id sub_10001FCF8(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController_featureManager;
  type metadata accessor for HeadphoneProxFeatureManager();
  unint64_t v5 = v1;
  *(void *)&v1[v4] = static HeadphoneProxFeatureManager.shared.getter();
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController____lazy_storage___imageView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController____lazy_storage___topAsset] = 0;
  unint64_t v6 = &v5[OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController_model];
  uint64_t v7 = type metadata accessor for HeadphoneModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController_type] = 31;

  v9.receiver = v5;
  v9.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_10001FE44()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D4D80);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D4D80);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10001FF0C()
{
  qword_1000D4D98 = 0x4024000000000000;
}

void sub_10001FF1C()
{
  qword_1000D4DA0 = 0x4014000000000000;
}

void sub_10001FF2C()
{
  qword_1000D4DA8 = 0x3FF0000000000000;
}

void sub_10001FF3C()
{
  qword_1000D4DB0 = 0x401C000000000000;
}

void sub_10001FF4C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_100008E18(&qword_1000D4810);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  v335 = (char *)&v320 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  v336 = (char *)&v320 - v7;
  __chkstk_darwin(v6);
  objc_super v9 = (char *)&v320 - v8;
  uint64_t v10 = sub_100008E18(&qword_1000D4800);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v320 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v338 = v13;
  uint64_t v339 = v14;
  __chkstk_darwin(v13);
  v337 = (char *)&v320 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v16 - 8);
  unsigned __int8 v18 = (char *)&v320 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  os_log_type_t v22 = (char *)&v320 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v350.receiver = v1;
  v350.super_class = ObjectType;
  [super viewDidLoad];
  v341 = v1;
  uint64_t v23 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_viewModel];
  swift_beginAccess();
  sub_10001A248(v23, (uint64_t)v18, &qword_1000D5660);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    uint64_t v24 = &qword_1000D5660;
    uint64_t v25 = (uint64_t)v18;
LABEL_9:
    sub_10001A2AC(v25, v24);
LABEL_10:
    if (qword_1000D4330 == -1)
    {
LABEL_11:
      uint64_t v34 = type metadata accessor for Logger();
      sub_100008278(v34, (uint64_t)qword_1000D4D80);
      NSString v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v35, v36))
      {
        id v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "No view model present", v37, 2u);
        swift_slowDealloc();
      }

      return;
    }
LABEL_76:
    swift_once();
    goto LABEL_11;
  }
  sub_100022FE4((uint64_t)v18, (uint64_t)v22);
  sub_100023048((uint64_t)&v22[*(int *)(v19 + 56)], (uint64_t)v345);
  sub_100023048((uint64_t)v345, (uint64_t)v346);
  uint64_t v26 = (uint64_t)v22;
  if (sub_1000230B0((uint64_t)v346) == 1)
  {
    sub_100023188((uint64_t)v22, type metadata accessor for HeadphoneViewModel);
    goto LABEL_10;
  }
  unint64_t v27 = &v22[*(int *)(v19 + 44)];
  sub_10001A248((uint64_t)v27, (uint64_t)v9, &qword_1000D4810);
  unint64_t v28 = (int *)type metadata accessor for HeadphoneAssets(0);
  uint64_t v29 = *((void *)v28 - 1);
  NSString v30 = *(unsigned int (**)(char *, uint64_t, int *))(v29 + 48);
  uint64_t v31 = v29 + 48;
  if (v30(v9, 1, v28) == 1)
  {
    sub_100023048((uint64_t)v345, (uint64_t)v344);
    sub_10000A838((uint64_t)v344);
    sub_10001A2AC((uint64_t)v9, &qword_1000D4810);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v339 + 56))(v12, 1, 1, v338);
LABEL_8:
    sub_1000230C8(v345);
    sub_100023188(v26, type metadata accessor for HeadphoneViewModel);
    uint64_t v24 = &qword_1000D4800;
    uint64_t v25 = (uint64_t)v12;
    goto LABEL_9;
  }
  v332 = v27;
  uint64_t v33 = v338;
  uint64_t v32 = v339;
  (*(void (**)(char *, char *, uint64_t))(v339 + 16))(v12, v9, v338);
  sub_100023048((uint64_t)v345, (uint64_t)v344);
  sub_10000A838((uint64_t)v344);
  sub_100023188((uint64_t)v9, type metadata accessor for HeadphoneAssets);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v12, 0, 1, v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v12, 1, v33) == 1) {
    goto LABEL_8;
  }
  uint64_t v326 = v31;
  v329 = v30;
  v331 = v28;
  uint64_t v321 = v19;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v337, v12, v33);
  NSString v38 = v341;
  [v341 setDismissalType:1];
  swift_bridgeObjectRetain();
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v38 setTitle:v39];

  uint64_t v327 = v26;
  swift_bridgeObjectRetain();
  NSString v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v38 setSubtitle:v40];

  uint64_t v41 = *(void **)&v38[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftLabel];
  id v42 = *(void **)&v38[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightLabel];
  uint64_t v43 = *(void **)&v38[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseLabel];
  NSString v44 = self;
  NSString v45 = self;
  id v46 = v41;
  id v328 = v46;
  id v333 = v42;
  id v334 = v43;
  [v46 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v46 setAdjustsFontForContentSizeCategory:1];
  id v47 = [v44 preferredFontForTextStyle:UIFontTextStyleCaption1];
  [v46 setFont:v47];

  uint64_t v48 = v45;
  id v49 = [v45 labelColor];
  [v46 setTextColor:v49];

  [v46 setNumberOfLines:0];
  id v50 = [v38 contentView];
  [v50 addSubview:v46];

  id v51 = v333;
  [v51 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v51 setAdjustsFontForContentSizeCategory:1];
  UIFontTextStyle v324 = UIFontTextStyleCaption1;
  id v52 = [v44 preferredFontForTextStyle:UIFontTextStyleCaption1];
  [v51 setFont:v52];

  uint64_t v340 = (uint64_t)v45;
  id v53 = [v45 labelColor];
  [v51 setTextColor:v53];

  [v51 setNumberOfLines:0];
  id v54 = [v38 contentView];
  [v54 addSubview:v51];

  uint64_t v55 = v51;
  id v330 = v51;

  id v56 = v334;
  [v56 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v56 setAdjustsFontForContentSizeCategory:1];
  id v57 = [v44 preferredFontForTextStyle:UIFontTextStyleCaption1];
  [v56 setFont:v57];

  id v58 = [v48 labelColor];
  [v56 setTextColor:v58];

  [v56 setNumberOfLines:0];
  id v59 = [v38 contentView];
  [v59 addSubview:v56];

  id v60 = *(void **)&v38[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightGenerationLabel];
  os_log_type_t v61 = *(void **)&v38[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseGenerationLabel];
  id v62 = *(id *)&v38[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftGenerationLabel];
  id v63 = v60;
  id v334 = v61;
  [v62 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v62 setAdjustsFontForContentSizeCategory:1];
  id v64 = v44;
  UIFontTextStyle v65 = v324;
  id v66 = [v44 preferredFontForTextStyle:v324];
  [v62 setFont:v66];

  id v67 = (id)v340;
  id v68 = [(id)v340 secondaryLabelColor];
  [v62 setTextColor:v68];

  [v62 setNumberOfLines:0];
  id v69 = [v38 contentView];
  [v69 addSubview:v62];

  id v70 = v63;
  id v333 = v70;
  [v70 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v70 setAdjustsFontForContentSizeCategory:1];
  id v71 = v64;
  id v72 = [v64 preferredFontForTextStyle:v65];
  [v70 setFont:v72];

  id v73 = v67;
  id v74 = [v67 secondaryLabelColor];
  [v70 setTextColor:v74];

  [v70 setNumberOfLines:0];
  id v75 = [v38 contentView];
  [v75 addSubview:v70];

  id v76 = v334;
  id v325 = v76;
  [v76 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v76 setAdjustsFontForContentSizeCategory:1];
  NSString v77 = v71;
  id v78 = v328;
  id v79 = [v77 preferredFontForTextStyle:v65];
  [v76 setFont:v79];

  id v80 = [v73 secondaryLabelColor];
  [v76 setTextColor:v80];

  [v76 setNumberOfLines:0];
  id v81 = [v38 contentView];
  [v81 addSubview:v76];

  sub_100027B70(0x1Cu);
  NSString v82 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v78 setText:v82];

  [v78 setTextAlignment:2];
  id v334 = v62;
  [v62 setTextAlignment:2];
  sub_100027B70(0x1Du);
  NSString v83 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v84 = v330;
  [v330 setText:v83];

  [v84 setTextAlignment:0];
  [v70 setTextAlignment:0];
  sub_100027B70(0x1Eu);
  NSString v85 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v56 setText:v85];

  id v320 = v56;
  [v56 setTextAlignment:1];
  [v76 setTextAlignment:1];
  URL.path.getter();
  uint64_t v86 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v86 >= 1)
  {
    id v87 = v336;
    sub_10001A248((uint64_t)v332, (uint64_t)v336, &qword_1000D4810);
    unint64_t v88 = v331;
    if (v329(v87, 1, v331) == 1)
    {
      sub_10001A2AC((uint64_t)v87, &qword_1000D4810);
      uint64_t v89 = 0;
LABEL_26:
      id v95 = [objc_allocWithZone((Class)SFAdjustedImageView) initWithImage:v89];

      id v96 = [self currentTraitCollection];
      id v97 = [v96 userInterfaceStyle];

      if (v97 == (id)2) {
        uint64_t v98 = 1;
      }
      else {
        uint64_t v98 = 2;
      }
      URL._bridgeToObjectiveC()((NSURL *)1);
      id v92 = v99;
      [v95 updateViewForAssetType:v98 adjustmentsURL:v99];
      goto LABEL_38;
    }
    unint64_t v93 = *(void *)&v87[v88[8]];
    swift_bridgeObjectRetain();
    sub_100023188((uint64_t)v87, type metadata accessor for HeadphoneAssets);
    if (v93 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v89 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v89) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v89 = *(void **)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v89)
      {
LABEL_25:
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    if ((v93 & 0xC000000000000001) != 0)
    {
      id v94 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_24;
    }
    if (*(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v94 = *(id *)(v93 + 32);
LABEL_24:
      uint64_t v89 = v94;
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_81;
  }
  uint64_t v90 = v335;
  sub_10001A248((uint64_t)v332, (uint64_t)v335, &qword_1000D4810);
  long long v91 = v331;
  if (v329(v90, 1, v331) != 1)
  {
    unint64_t v93 = *(void *)&v90[v91[8]];
    swift_bridgeObjectRetain();
    sub_100023188((uint64_t)v90, type metadata accessor for HeadphoneAssets);
    if (!(v93 >> 62))
    {
      id v92 = *(void **)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v92)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
LABEL_32:
      if ((v93 & 0xC000000000000001) != 0)
      {
        id v100 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v93 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v100 = *(id *)(v93 + 32);
      }
      id v92 = v100;
      goto LABEL_36;
    }
LABEL_81:
    swift_bridgeObjectRetain();
    id v92 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v92) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
  sub_10001A2AC((uint64_t)v90, &qword_1000D4810);
  id v92 = 0;
LABEL_37:
  id v95 = [objc_allocWithZone((Class)UIImageView) initWithImage:v92];
LABEL_38:

  [v95 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v101) = 1148846080;
  [v95 setContentCompressionResistancePriority:0 forAxis:v101];
  uint64_t v102 = v341;
  id v103 = [v341 contentView];
  v329 = (unsigned int (*)(char *, uint64_t, int *))v95;
  [v103 addSubview:v95];

  uint64_t v326 = sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A2930;
  objc_super v105 = *(void **)&v102[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftCircle];
  *(void *)(inited + 32) = v105;
  uint64_t v106 = *(void **)&v102[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightCircle];
  *(void *)(inited + 40) = v106;
  v107 = *(void **)&v102[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseCircle];
  *(void *)(inited + 48) = v107;
  uint64_t v343 = inited;
  specialized Array._endMutation()();
  uint64_t v108 = v343;
  v336 = v105;
  v331 = v106;
  id v323 = v107;
  uint64_t v109 = 0;
  do
  {
    if ((v108 & 0xC000000000000001) != 0) {
      id v110 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v110 = *(id *)(v108 + 8 * v109 + 32);
    }
    v111 = v110;
    [v110 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v112 = [v111 layer];
    if (qword_1000D4350 != -1) {
      swift_once();
    }
    ++v109;
    [v112 setCornerRadius:*(double *)&qword_1000D4DB0 * 0.5];

    id v113 = [(id)v340 systemGrayColor];
    [v111 setBackgroundColor:v113];

    id v114 = [v341 contentView];
    [v114 addSubview:v111];
  }
  while (v109 != 3);
  swift_bridgeObjectRelease();
  id v115 = v341;
  long long v116 = *(void **)&v341[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightArm];
  long long v117 = *(void **)&v341[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseArm];
  id v118 = *(id *)&v341[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftArm];
  id v119 = v116;
  v332 = v117;
  [v118 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v120 = (id)v340;
  id v121 = [(id)v340 systemGrayColor];
  [v118 setBackgroundColor:v121];

  id v122 = [v115 contentView];
  [v122 addSubview:v118];

  long long v123 = (char *)v119;
  v335 = v123;
  [v123 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v124 = [v120 systemGrayColor];
  [v123 setBackgroundColor:v124];

  id v125 = [v115 contentView];
  [v125 addSubview:v123];

  long long v126 = v332;
  [v126 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v127 = [v120 systemGrayColor];
  [v126 setBackgroundColor:v127];

  id v128 = [v115 contentView];
  [v128 addSubview:v126];
  v332 = (char *)v118;

  v322 = v126;
  uint64_t v129 = *(void *)(v327 + *(int *)(v321 + 68));
  uint64_t v130 = *(void *)(v129 + 16);
  if (v130)
  {
    swift_bridgeObjectRetain();
    LODWORD(v324) = 0;
    uint64_t v131 = 0;
    uint64_t v340 = -v130;
    uint64_t v132 = v129 + 56;
    id v133 = v334;
    uint64_t v321 = v129 + 56;
LABEL_47:
    id v134 = (unsigned char *)(v132 + 32 * v131++);
    while ((unint64_t)(v131 - 1) < *(void *)(v129 + 16))
    {
      uint64_t v138 = *((void *)v134 - 3);
      uint64_t v137 = *((void *)v134 - 2);
      v139 = (void *)*((void *)v134 - 1);
      if (*v134)
      {
        uint64_t v140 = *((void *)v134 - 3);
        uint64_t v141 = *((void *)v134 - 2);
        v142 = (void *)*((void *)v134 - 1);
        if (*v134 != 1)
        {
          sub_100012C04(v140, v141, v142, 2u);
          id v146 = v139;
          NSString v147 = String._bridgeToObjectiveC()();
          id v148 = v325;
          [v325 setText:v147];

          v149 = (char *)(v340 + v131);
          if (v139)
          {
            [v148 setTextColor:v146];
            [v323 setBackgroundColor:v146];
            [v322 setBackgroundColor:v146];

            uint64_t v150 = v138;
            uint64_t v151 = v137;
            v152 = v139;
          }
          else
          {
            uint64_t v150 = v138;
            uint64_t v151 = v137;
            v152 = 0;
          }
          sub_100012C60(v150, v151, v152, 2u);
          LODWORD(v324) = 1;
          uint64_t v132 = v321;
          if (!v149)
          {
LABEL_63:
            swift_bridgeObjectRelease();
            goto LABEL_65;
          }
          goto LABEL_47;
        }
        sub_100012C04(v140, v141, v142, 1u);
        id v143 = v139;
        swift_bridgeObjectRetain();
        NSString v144 = String._bridgeToObjectiveC()();
        id v145 = v333;
        [v333 setText:v144];

        if (v139)
        {
          [v145 setTextColor:v143];
          [v331 setBackgroundColor:v143];
          [v335 setBackgroundColor:v143];
          sub_100012C60(v138, v137, v139, 1u);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100012C60(v138, v137, 0, 1u);
          swift_bridgeObjectRelease();
        }
        id v133 = v334;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_100012C04(v138, v137, v139, 0);
        id v135 = v139;
        NSString v136 = String._bridgeToObjectiveC()();
        [v133 setText:v136];

        if (v139)
        {
          [v133 setTextColor:v135];
          [v336 setBackgroundColor:v135];
          [v332 setBackgroundColor:v135];
          sub_100012C60(v138, v137, v139, 0);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100012C60(v138, v137, 0, 0);
          swift_bridgeObjectRelease();
        }
      }
      ++v131;
      v134 += 32;
      if (v340 + v131 == 1) {
        goto LABEL_63;
      }
    }
    __break(1u);
    goto LABEL_76;
  }
  LODWORD(v324) = 0;
LABEL_65:
  id v153 = [v341 contentView];
  v154 = (char *)[v153 mainContentGuide];

  uint64_t v155 = swift_allocObject();
  *(_OWORD *)(v155 + 16) = xmmword_1000A2940;
  id v156 = v328;
  id v157 = [v328 topAnchor];
  id v158 = [v154 topAnchor];
  id v159 = [v157 constraintGreaterThanOrEqualToAnchor:v158];

  *(void *)(v155 + 32) = v159;
  id v160 = [v156 leftAnchor];
  v341 = v154;
  id v161 = [v154 leftAnchor];
  id v162 = [v160 constraintGreaterThanOrEqualToAnchor:v161];

  *(void *)(v155 + 40) = v162;
  id v163 = [v156 rightAnchor];
  id v164 = [v332 leftAnchor];
  if (qword_1000D4338 != -1) {
    swift_once();
  }
  id v165 = [v163 constraintEqualToAnchor:v164 constant:-*(double *)&qword_1000D4D98];

  *(void *)(v155 + 48) = v165;
  id v166 = v334;
  id v167 = [v334 trailingAnchor];
  id v168 = [v156 trailingAnchor];
  id v169 = [v167 constraintEqualToAnchor:v168];

  *(void *)(v155 + 56) = v169;
  id v170 = [v166 leftAnchor];
  id v171 = [v341 leftAnchor];
  id v172 = [v170 constraintGreaterThanOrEqualToAnchor:v171];

  *(void *)(v155 + 64) = v172;
  id v173 = [v166 topAnchor];
  id v174 = [v156 bottomAnchor];
  id v175 = [v173 constraintEqualToAnchor:v174];

  *(void *)(v155 + 72) = v175;
  id v176 = [v166 bottomAnchor];
  id v177 = [v329 topAnchor];
  if (qword_1000D4340 != -1) {
    swift_once();
  }
  id v178 = [v176 constraintLessThanOrEqualToAnchor:v177 constant:-*(double *)&qword_1000D4DA0];

  *(void *)(v155 + 80) = v178;
  id v179 = v330;
  id v180 = [v330 topAnchor];
  id v181 = [v156 topAnchor];
  id v182 = [v180 constraintEqualToAnchor:v181];

  *(void *)(v155 + 88) = v182;
  id v183 = [v179 rightAnchor];
  id v184 = v341;
  id v185 = [v341 rightAnchor];
  id v186 = [v183 constraintLessThanOrEqualToAnchor:v185];

  *(void *)(v155 + 96) = v186;
  id v187 = [v330 leftAnchor];
  id v188 = [v335 rightAnchor];
  id v189 = [v187 constraintEqualToAnchor:v188 constant:*(double *)&qword_1000D4D98];

  *(void *)(v155 + 104) = v189;
  id v190 = v333;
  id v191 = [v333 leftAnchor];
  id v192 = [v330 leftAnchor];
  id v193 = [v191 constraintEqualToAnchor:v192];

  *(void *)(v155 + 112) = v193;
  id v194 = [v190 rightAnchor];
  id v195 = [v184 rightAnchor];
  id v196 = [v194 constraintLessThanOrEqualToAnchor:v195];

  *(void *)(v155 + 120) = v196;
  id v197 = [v190 topAnchor];
  id v198 = [v330 bottomAnchor];
  id v199 = [v197 constraintEqualToAnchor:v198];

  *(void *)(v155 + 128) = v199;
  id v200 = [v190 bottomAnchor];
  v201 = v329;
  id v202 = [v329 topAnchor];
  id v203 = [v200 constraintLessThanOrEqualToAnchor:v202 constant:-*(double *)&qword_1000D4DA0];

  *(void *)(v155 + 136) = v203;
  id v204 = [v201 centerXAnchor];
  id v205 = [v184 centerXAnchor];
  id v206 = [v204 constraintEqualToAnchor:v205];

  *(void *)(v155 + 144) = v206;
  id v207 = [v201 topAnchor];
  id v208 = [v184 topAnchor];
  id v209 = [v207 constraintGreaterThanOrEqualToAnchor:v208];

  *(void *)(v155 + 152) = v209;
  id v210 = [v201 bottomAnchor];
  id v211 = [v184 bottomAnchor];
  id v212 = [v210 constraintEqualToAnchor:v211];

  *(void *)(v155 + 160) = v212;
  id v213 = v336;
  id v214 = [v336 widthAnchor];
  id v215 = [v214 constraintEqualToConstant:*(double *)&qword_1000D4DB0];

  *(void *)(v155 + 168) = v215;
  id v216 = [v213 heightAnchor];
  id v217 = [v213 widthAnchor];
  id v218 = [v216 constraintEqualToAnchor:v217];

  *(void *)(v155 + 176) = v218;
  id v219 = [v213 centerXAnchor];
  id v220 = [v201 leftAnchor];
  double v221 = v347;
  double v222 = v348;
  double v223 = v349;
  id v224 = [v219 constraintEqualToAnchor:v220 constant:v347];

  *(void *)(v155 + 184) = v224;
  id v225 = [v213 centerYAnchor];
  id v226 = [v201 topAnchor];
  id v227 = [v225 constraintEqualToAnchor:v226 constant:v222];

  *(void *)(v155 + 192) = v227;
  v228 = v332;
  id v229 = [v332 topAnchor];
  id v230 = [v328 centerYAnchor];
  id v231 = [v229 constraintEqualToAnchor:v230];

  *(void *)(v155 + 200) = v231;
  id v232 = [v228 bottomAnchor];
  id v233 = [v213 centerYAnchor];
  id v234 = [v232 constraintEqualToAnchor:v233];

  *(void *)(v155 + 208) = v234;
  id v235 = [v228 centerXAnchor];
  id v236 = [v213 centerXAnchor];
  id v237 = [v235 constraintEqualToAnchor:v236];

  *(void *)(v155 + 216) = v237;
  id v238 = [v228 widthAnchor];
  if (qword_1000D4348 != -1) {
    swift_once();
  }
  id v239 = [v238 constraintEqualToConstant:*(double *)&qword_1000D4DA8];

  *(void *)(v155 + 224) = v239;
  v240 = v331;
  id v241 = [v331 widthAnchor];
  id v242 = [v241 constraintEqualToConstant:*(double *)&qword_1000D4DB0];

  *(void *)(v155 + 232) = v242;
  id v243 = [v240 heightAnchor];
  id v244 = [v240 widthAnchor];
  id v245 = [v243 constraintEqualToAnchor:v244];

  *(void *)(v155 + 240) = v245;
  id v246 = [v240 centerXAnchor];
  id v247 = [v201 rightAnchor];
  id v248 = [v246 constraintEqualToAnchor:v247 constant:-v221];

  *(void *)(v155 + 248) = v248;
  id v249 = [v240 centerYAnchor];
  id v250 = [v336 centerYAnchor];
  id v251 = [v249 constraintEqualToAnchor:v250];

  *(void *)(v155 + 256) = v251;
  id v252 = v335;
  id v253 = [v335 topAnchor];
  id v254 = [v330 centerYAnchor];
  id v255 = [v253 constraintEqualToAnchor:v254];

  *(void *)(v155 + 264) = v255;
  id v256 = [v252 bottomAnchor];
  id v257 = [v240 centerYAnchor];
  id v258 = [v256 constraintEqualToAnchor:v257];

  *(void *)(v155 + 272) = v258;
  id v259 = [v252 centerXAnchor];
  id v260 = [v240 centerXAnchor];
  id v261 = [v259 constraintEqualToAnchor:v260];

  *(void *)(v155 + 280) = v261;
  id v262 = [v252 widthAnchor];
  id v263 = [v262 constraintEqualToConstant:*(double *)&qword_1000D4DA8];

  *(void *)(v155 + 288) = v263;
  uint64_t v343 = v155;
  specialized Array._endMutation()();
  if (v324)
  {
    uint64_t v264 = swift_allocObject();
    *(_OWORD *)(v264 + 16) = xmmword_1000A2950;
    id v265 = v320;
    id v266 = [v320 topAnchor];
    id v267 = v341;
    id v268 = [v341 topAnchor];
    id v269 = [v266 constraintEqualToAnchor:v268];

    *(void *)(v264 + 32) = v269;
    id v270 = [v265 leadingAnchor];
    id v271 = [v267 leadingAnchor];
    id v272 = [v270 constraintEqualToAnchor:v271];

    *(void *)(v264 + 40) = v272;
    id v273 = [v265 trailingAnchor];
    id v274 = [v267 trailingAnchor];
    id v275 = [v273 constraintEqualToAnchor:v274];

    *(void *)(v264 + 48) = v275;
    id v276 = v325;
    id v277 = [v325 trailingAnchor];
    id v278 = [v265 trailingAnchor];
    id v279 = [v277 constraintEqualToAnchor:v278];

    *(void *)(v264 + 56) = v279;
    id v280 = [v276 leadingAnchor];
    id v281 = [v265 leadingAnchor];
    id v282 = [v280 constraintEqualToAnchor:v281];

    *(void *)(v264 + 64) = v282;
    id v283 = [v276 topAnchor];
    id v284 = [v265 bottomAnchor];
    id v285 = [v283 constraintEqualToAnchor:v284];

    *(void *)(v264 + 72) = v285;
    id v286 = [v276 bottomAnchor];
    id v287 = [v328 topAnchor];
    id v288 = [v286 constraintEqualToAnchor:v287 constant:-*(double *)&qword_1000D4DA0];

    *(void *)(v264 + 80) = v288;
    id v289 = v323;
    id v290 = [v323 widthAnchor];
    id v291 = [v290 constraintEqualToConstant:*(double *)&qword_1000D4DB0];

    *(void *)(v264 + 88) = v291;
    id v292 = [v289 heightAnchor];
    id v293 = [v289 widthAnchor];
    id v294 = [v292 constraintEqualToAnchor:v293];

    *(void *)(v264 + 96) = v294;
    id v295 = [v289 centerXAnchor];
    id v296 = [v329 centerXAnchor];
    id v297 = [v295 constraintEqualToAnchor:v296];

    *(void *)(v264 + 104) = v297;
    id v298 = [v289 centerYAnchor];
    id v299 = [v329 topAnchor];
    id v300 = [v298 constraintEqualToAnchor:v299 constant:v223];
    sub_1000230C8(v345);

    *(void *)(v264 + 112) = v300;
    v301 = v322;
    id v302 = [v322 topAnchor];
    v303 = v276;
    v304 = v341;
    v305 = v329;
    id v306 = [v303 bottomAnchor];
    id v307 = v304;
    id v308 = [v302 constraintEqualToAnchor:v306 constant:*(double *)&qword_1000D4DA0];

    *(void *)(v264 + 120) = v308;
    id v309 = [v301 bottomAnchor];
    id v310 = [v289 centerYAnchor];
    id v311 = [v309 constraintEqualToAnchor:v310];

    *(void *)(v264 + 128) = v311;
    id v312 = [v301 centerXAnchor];
    id v313 = [v289 centerXAnchor];
    id v314 = [v312 constraintEqualToAnchor:v313];

    *(void *)(v264 + 136) = v314;
    id v315 = [v301 widthAnchor];
    id v316 = [v315 constraintEqualToConstant:*(double *)&qword_1000D4DA8];

    *(void *)(v264 + 144) = v316;
    unint64_t v342 = v264;
    specialized Array._endMutation()();
    sub_100081008(v342);
    uint64_t v317 = v338;
  }
  else
  {
    sub_1000230C8(v345);
    [v320 setHidden:1];
    [v325 setHidden:1];
    [v323 setHidden:1];
    [v322 setHidden:1];
    uint64_t v317 = v338;
    id v307 = v341;
    v305 = v329;
  }
  v318 = self;
  sub_10000A968();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v318 activateConstraints:isa];

  (*(void (**)(char *, uint64_t))(v339 + 8))(v337, v317);
  sub_100023188(v327, type metadata accessor for HeadphoneViewModel);
}

uint64_t sub_100022C18()
{
  return type metadata accessor for HeadphoneMismatchViewController();
}

uint64_t type metadata accessor for HeadphoneMismatchViewController()
{
  uint64_t result = qword_1000D4E48;
  if (!qword_1000D4E48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100022C6C()
{
  sub_100022D30();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100022D30()
{
  if (!qword_1000D4E58)
  {
    type metadata accessor for HeadphoneViewModel(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D4E58);
    }
  }
}

uint64_t sub_100022D88()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_type);
}

id sub_100022D98(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &v2[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_viewModel];
  uint64_t v6 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftLabel;
  id v8 = objc_allocWithZone((Class)UILabel);
  objc_super v9 = v2;
  *(void *)&v2[v7] = [v8 init];
  uint64_t v10 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightLabel;
  *(void *)&v9[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseLabel;
  *(void *)&v9[v11] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v12 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftGenerationLabel;
  *(void *)&v9[v12] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v13 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightGenerationLabel;
  *(void *)&v9[v13] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v14 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseGenerationLabel;
  *(void *)&v9[v14] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v15 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftCircle;
  *(void *)&v9[v15] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v16 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_leftArm;
  *(void *)&v9[v16] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v17 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightCircle;
  *(void *)&v9[v17] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v18 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_rightArm;
  *(void *)&v9[v18] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v19 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseCircle;
  *(void *)&v9[v19] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v20 = OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_caseArm;
  *(void *)&v9[v20] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v9[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v9[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_type] = 16;

  v22.receiver = v9;
  v22.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_100022FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100023048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D4E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000230B0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 152);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t *sub_1000230C8(uint64_t *a1)
{
  sub_10002313C(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19]);
  return a1;
}

uint64_t sub_10002313C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t result = a20;
  if (a20)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100023188(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1000231E8()
{
  unint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)_CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_3;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_9;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v4 = *(id *)(v1 + 32);
  }
  uint64_t v5 = v4;
  swift_bridgeObjectRelease();
  id v6 = [v5 leftAnchor];

  if (v6) {
    return v6;
  }
LABEL_10:
  id v7 = [v0 leftAnchor];

  return v7;
}

unint64_t sub_1000232F8()
{
  unint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2)
    {
LABEL_3:
      unint64_t result = v2 - 1;
      if (__OFSUB__(v2, 1))
      {
        __break(1u);
      }
      else if ((v1 & 0xC000000000000001) == 0)
      {
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (result < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v4 = *(id *)(v1 + 8 * result + 32);
          goto LABEL_8;
        }
        __break(1u);
        return result;
      }
      id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
      uint64_t v5 = v4;
      swift_bridgeObjectRelease();
      id v6 = [v5 rightAnchor];

      if (v6) {
        return (unint64_t)v6;
      }
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
LABEL_12:
  id v7 = [v0 rightAnchor];

  return (unint64_t)v7;
}

char *sub_100023420(uint64_t a1, unint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, double a6)
{
  id v7 = v6;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_AXConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_nonAXConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews] = a1;
  v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_batteryType] = HIBYTE(a3);
  if (a2 >> 62)
  {
    uint64_t v131 = v7;
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v16 = v7;
  }
  if (v15 > 1)
  {
LABEL_6:
    uint64_t v17 = 3;
LABEL_7:
    swift_bridgeObjectRelease();
    a4 = 0;
    a5 = v17;
  }
  else
  {
    uint64_t v17 = 1;
    switch(HIBYTE(a3))
    {
      case 1:
        uint64_t v17 = 2;
        goto LABEL_7;
      case 2:
        break;
      case 3:
        goto LABEL_6;
      default:
        goto LABEL_7;
    }
  }
  id v18 = objc_allocWithZone((Class)type metadata accessor for LabelledBatteryView());
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_batteryView] = sub_10003143C(a4, a5, a3 & 1, a6);

  v133.receiver = v7;
  v133.super_class = ObjectType;
  id v19 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v20 = objc_allocWithZone((Class)UIStackView);
  sub_100008EB0(0, &qword_1000D4EF0);
  uint64_t v21 = (char *)v19;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v23 = [v20 initWithArrangedSubviews:isa];

  uint64_t v24 = *(void **)&v21[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView];
  *(void *)&v21[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView] = v23;
  id v25 = v23;

  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v132 = OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_batteryView;
  uint64_t v26 = *(void **)&v21[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_batteryView];
  [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v21 addSubview:v25];
  [v21 addSubview:v26];
  id v27 = [objc_allocWithZone((Class)UILayoutGuide) init];
  id v28 = [objc_allocWithZone((Class)UILayoutGuide) init];
  [v21 addLayoutGuide:v27];
  [v21 addLayoutGuide:v28];
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1000A29E0;
  id v30 = [v27 topAnchor];
  id v31 = [v21 topAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v29 + 32) = v32;
  id v33 = [v25 topAnchor];
  id v34 = [v27 bottomAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v29 + 40) = v35;
  id v36 = [v25 leadingAnchor];
  id v37 = [v21 leadingAnchor];
  id v38 = [v36 constraintGreaterThanOrEqualToAnchor:v37];

  *(void *)(v29 + 48) = v38;
  id v39 = [v25 trailingAnchor];
  id v40 = [v21 trailingAnchor];
  id v41 = [v39 constraintLessThanOrEqualToAnchor:v40];

  *(void *)(v29 + 56) = v41;
  id v42 = [v25 centerXAnchor];
  id v43 = [v21 centerXAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43];

  *(void *)(v29 + 64) = v44;
  id v45 = [v28 topAnchor];
  id v46 = [v25 bottomAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46];

  *(void *)(v29 + 72) = v47;
  id v48 = [*(id *)&v21[v132] topAnchor];
  id v49 = [v28 bottomAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49 constant:20.0];

  *(void *)(v29 + 80) = v50;
  id v51 = [*(id *)&v21[v132] bottomAnchor];
  id v52 = [v21 bottomAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  *(void *)(v29 + 88) = v53;
  id v54 = [*(id *)&v21[v132] leadingAnchor];
  id v55 = [v21 leadingAnchor];
  id v56 = [v54 constraintGreaterThanOrEqualToAnchor:v55];

  *(void *)(v29 + 96) = v56;
  id v57 = [*(id *)&v21[v132] trailingAnchor];
  id v58 = [v21 trailingAnchor];
  id v59 = [v57 constraintLessThanOrEqualToAnchor:v58];

  *(void *)(v29 + 104) = v59;
  id v60 = [*(id *)&v21[v132] centerXAnchor];
  id v61 = [v21 centerXAnchor];
  id v62 = [v60 constraintEqualToAnchor:v61];

  *(void *)(v29 + 112) = v62;
  id v63 = [v27 heightAnchor];
  id v64 = [v28 heightAnchor];
  id v65 = [v63 constraintEqualToAnchor:v64];

  *(void *)(v29 + 120) = v65;
  specialized Array._endMutation()();
  *(void *)&v21[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_nonAXConstraints] = v29;
  swift_bridgeObjectRelease();
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_1000A29F0;
  id v67 = [v27 leadingAnchor];
  id v68 = [v21 leadingAnchor];
  id v69 = [v67 constraintEqualToAnchor:v68];

  *(void *)(v66 + 32) = v69;
  id v70 = [v27 topAnchor];
  id v71 = [v21 topAnchor];
  id v72 = [v70 constraintEqualToAnchor:v71];

  *(void *)(v66 + 40) = v72;
  id v73 = [v27 bottomAnchor];
  id v74 = [v21 bottomAnchor];
  id v75 = [v73 constraintEqualToAnchor:v74];

  *(void *)(v66 + 48) = v75;
  id v76 = [v27 widthAnchor];
  id v77 = [v28 widthAnchor];
  id v78 = [v76 constraintEqualToAnchor:v77];

  *(void *)(v66 + 56) = v78;
  id v79 = [v27 heightAnchor];
  id v80 = [v28 heightAnchor];
  id v81 = [v79 constraintEqualToAnchor:v80];

  *(void *)(v66 + 64) = v81;
  id v82 = [v28 topAnchor];
  id v83 = [v21 topAnchor];
  id v84 = [v82 constraintEqualToAnchor:v83];

  *(void *)(v66 + 72) = v84;
  id v85 = [v28 bottomAnchor];
  id v86 = [v21 bottomAnchor];
  id v87 = [v85 constraintEqualToAnchor:v86];

  *(void *)(v66 + 80) = v87;
  id v88 = [v28 leadingAnchor];
  id v89 = [v27 trailingAnchor];
  id v90 = [v88 constraintEqualToAnchor:v89];

  *(void *)(v66 + 88) = v90;
  id v91 = [v28 trailingAnchor];
  id v92 = [v21 trailingAnchor];
  id v93 = [v91 constraintEqualToAnchor:v92];

  *(void *)(v66 + 96) = v93;
  id v94 = [v25 topAnchor];
  id v95 = [v27 topAnchor];
  id v96 = [v94 constraintGreaterThanOrEqualToAnchor:v95];

  *(void *)(v66 + 104) = v96;
  id v97 = [v25 bottomAnchor];
  id v98 = [v27 bottomAnchor];
  id v99 = [v97 constraintLessThanOrEqualToAnchor:v98];

  *(void *)(v66 + 112) = v99;
  id v100 = [v25 leadingAnchor];
  id v101 = [v27 leadingAnchor];
  id v102 = [v100 constraintGreaterThanOrEqualToAnchor:v101];

  *(void *)(v66 + 120) = v102;
  id v103 = [v25 trailingAnchor];
  id v104 = [v27 trailingAnchor];
  id v105 = [v103 constraintLessThanOrEqualToAnchor:v104];

  *(void *)(v66 + 128) = v105;
  id v106 = [v25 centerXAnchor];
  id v107 = [v27 centerXAnchor];
  id v108 = [v106 constraintEqualToAnchor:v107];

  *(void *)(v66 + 136) = v108;
  id v109 = [v25 centerYAnchor];
  id v110 = [v27 centerYAnchor];
  id v111 = [v109 constraintEqualToAnchor:v110];

  *(void *)(v66 + 144) = v111;
  id v112 = [*(id *)&v21[v132] topAnchor];
  id v113 = [v28 topAnchor];
  id v114 = [v112 constraintGreaterThanOrEqualToAnchor:v113];

  *(void *)(v66 + 152) = v114;
  id v115 = [*(id *)&v21[v132] bottomAnchor];
  id v116 = [v28 bottomAnchor];
  id v117 = [v115 constraintLessThanOrEqualToAnchor:v116];

  *(void *)(v66 + 160) = v117;
  id v118 = [*(id *)&v21[v132] leadingAnchor];
  id v119 = [v28 leadingAnchor];
  id v120 = [v118 constraintGreaterThanOrEqualToAnchor:v119];

  *(void *)(v66 + 168) = v120;
  id v121 = [*(id *)&v21[v132] trailingAnchor];
  id v122 = [v28 trailingAnchor];
  id v123 = [v121 constraintLessThanOrEqualToAnchor:v122];

  *(void *)(v66 + 176) = v123;
  id v124 = [*(id *)&v21[v132] centerXAnchor];
  id v125 = [v28 centerXAnchor];
  id v126 = [v124 constraintEqualToAnchor:v125];

  *(void *)(v66 + 184) = v126;
  id v127 = [*(id *)&v21[v132] centerYAnchor];
  id v128 = [v28 centerYAnchor];
  id v129 = [v127 constraintEqualToAnchor:v128];

  *(void *)(v66 + 192) = v129;
  specialized Array._endMutation()();
  *(void *)&v21[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_AXConstraints] = v66;
  swift_bridgeObjectRelease();
  sub_1000243E8();

  return v21;
}

void sub_1000243E8()
{
  id v0 = [self currentTraitCollection];
  id v1 = [v0 preferredContentSizeCategory];

  UIContentSizeCategory.isAccessibilityCategory.getter();
  uint64_t v2 = self;
  sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 deactivateConstraints:isa];

  swift_bridgeObjectRetain();
  Class v4 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:v4];
}

uint64_t sub_1000245D4()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (!v2) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_13;
    }
  }
  uint64_t result = self;
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  Class v4 = (void *)result;
  uint64_t v5 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v1 + 8 * v5 + 32);
    }
    id v7 = v6;
    ++v5;
    id v8 = [v4 currentTraitCollection];
    id v9 = [v8 userInterfaceStyle];

    if (v9 == (id)2) {
      uint64_t v10 = 1;
    }
    else {
      uint64_t v10 = 2;
    }
    URL._bridgeToObjectiveC()((NSURL *)1);
    uint64_t v12 = v11;
    [v7 updateViewForAssetType:v10 adjustmentsURL:v11];
  }
  while (v2 != v5);
LABEL_13:

  return swift_bridgeObjectRelease();
}

void sub_100024734(void *a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  [super traitCollectionDidChange:a1];
  if (a1)
  {
    id v3 = [a1 preferredContentSizeCategory];
    char v4 = UIContentSizeCategory.isAccessibilityCategory.getter();

    int v5 = v4 & 1;
  }
  else
  {
    int v5 = 2;
  }
  id v6 = [self currentTraitCollection];
  id v7 = [v6 preferredContentSizeCategory];

  int v8 = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v5 == 2 || ((v8 ^ (v5 != 0)) & 1) != 0) {
    sub_1000243E8();
  }
}

uint64_t type metadata accessor for HeadphoneImageBatteryView()
{
  return self;
}

id sub_10002494C()
{
  unint64_t v1 = *v0;
  uint64_t v2 = *(void **)((char *)*v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView);
  if (!v2 || (id result = [v2 centerXAnchor]) == 0)
  {
    id v4 = [v1 centerXAnchor];
    return v4;
  }
  return result;
}

id sub_1000249C0()
{
  return sub_1000231E8();
}

unint64_t sub_1000249E4()
{
  return sub_1000232F8();
}

uint64_t sub_100024A08()
{
  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_batteryType);
}

void sub_100024A88()
{
}

uint64_t type metadata accessor for HeadphoneBudView()
{
  return self;
}

unint64_t sub_100024AE8(unint64_t result, __int16 a2, uint64_t a3, uint64_t a4, double a5)
{
  unint64_t v9 = result;
  if (!(result >> 62))
  {
    uint64_t v10 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
LABEL_12:
      swift_bridgeObjectRetain_n();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_100008EB0(0, &qword_1000D4EF0);
      uint64_t v16 = _swiftEmptyArrayStorage;
LABEL_13:
      swift_bridgeObjectRelease();
      id v17 = objc_allocWithZone((Class)type metadata accessor for HeadphoneImageBatteryView());
      return (unint64_t)sub_100023420((uint64_t)_swiftEmptyArrayStorage, (unint64_t)v16, a2 & 0xFF01, a3, a4, a5);
    }
LABEL_16:
    sub_100008EB0(0, &qword_1000D4EF0);
    swift_bridgeObjectRetain();
    uint64_t v16 = (void *)_bridgeCocoaArray<A>(_:)();
    goto LABEL_13;
  }
  id result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v10 >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(v9 + 8 * v11 + 32);
      }
      uint64_t v13 = v12;
      id v14 = [objc_allocWithZone((Class)SFAdjustedImageView) initWithImage:v12];
      [v14 setContentMode:4];
      id v15 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v11;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    while (v10 != v11);
    swift_bridgeObjectRelease();
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_12;
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_100024D3C()
{
  qword_1000D4EF8 = 0x405B800000000000;
}

void sub_100024DBC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HeadphoneViewModel(0);
  sub_100023048(a1 + *(int *)(v3 + 56), (uint64_t)v80);
  sub_100023048((uint64_t)v80, (uint64_t)v81);
  if (sub_1000230B0((uint64_t)v81) != 1)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    [v1 setTitle:v4];

    NSString v5 = String._bridgeToObjectiveC()();
    [v1 setSubtitle:v5];

    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1000259E0;
    aBlock[5] = v6;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100012FF0;
    aBlock[3] = &unk_1000C3418;
    int v8 = _Block_copy(aBlock);
    id v9 = [self actionWithTitle:v7 style:0 handler:v8];

    _Block_release(v8);
    swift_release();
    swift_release();
    id v77 = v9;

    uint64_t v10 = self;
    id v11 = [v10 configurationWithPointSize:2 weight:88.0];
    id v12 = self;
    id v13 = [v12 systemBlueColor];
    id v14 = [v10 configurationWithHierarchicalColor:v13];

    id v75 = v11;
    id v76 = v14;
    id v15 = [v11 configurationByApplyingConfiguration:v14];
    uint64_t v16 = sub_100006C58();
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v17 = v15;
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v19 = self;
    id v78 = [v19 systemImageNamed:v18 withConfiguration:v17];

    id v74 = v17;
    id v20 = [objc_allocWithZone((Class)UIImageView) initWithImage:v78];
    [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v21 = [v1 contentView];
    [v21 addSubview:v20];

    id v22 = [v10 configurationWithPointSize:4 weight:34.0];
    id v23 = [v12 systemGrayColor];
    id v24 = [v10 configurationWithHierarchicalColor:v23];

    id v72 = v24;
    id v73 = v22;
    id v25 = [v22 configurationByApplyingConfiguration:v24];
    swift_bridgeObjectRetain();
    id v26 = v25;
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v28 = [v19 _systemImageNamed:v27 withConfiguration:v26];

    id v71 = v26;
    id v29 = [objc_allocWithZone((Class)UIImageView) initWithImage:v28];
    [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v30 = [v1 contentView];
    [v30 addSubview:v29];

    id v70 = v28;
    id v31 = [objc_allocWithZone((Class)UIImageView) initWithImage:v28];
    [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v32 = [v1 contentView];
    [v32 addSubview:v31];

    if (v78)
    {
      id v33 = v78;
      [v33 size];
      double v35 = v34;
      [v33 size];
      double v37 = v36;

      double v38 = v35 / v37;
    }
    else
    {
      double v38 = 1.0;
    }
    id v39 = [v1 contentView];
    id v40 = [v39 mainContentGuide];

    id v69 = self;
    sub_100008E18((uint64_t *)&unk_1000D5090);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1000A19E0;
    id v42 = [v20 topAnchor];
    id v43 = [v40 topAnchor];
    id v44 = [v42 constraintEqualToAnchor:v43];

    *(void *)(v41 + 32) = v44;
    id v45 = [v20 bottomAnchor];
    id v46 = [v40 bottomAnchor];
    id v47 = [v45 constraintLessThanOrEqualToAnchor:v46];

    *(void *)(v41 + 40) = v47;
    id v48 = [v20 centerXAnchor];
    id v49 = [v40 centerXAnchor];
    id v50 = [v48 constraintEqualToAnchor:v49];

    *(void *)(v41 + 48) = v50;
    id v51 = [v20 heightAnchor];
    if (qword_1000D4358 != -1) {
      swift_once();
    }
    id v52 = [v51 constraintEqualToConstant:*(double *)&qword_1000D4EF8];

    *(void *)(v41 + 56) = v52;
    id v53 = [v20 widthAnchor];
    id v54 = [v20 heightAnchor];
    id v55 = [v53 constraintEqualToAnchor:v54 multiplier:v38];

    *(void *)(v41 + 64) = v55;
    id v56 = [v29 centerYAnchor];
    id v57 = [v20 centerYAnchor];
    id v58 = [v56 constraintEqualToAnchor:v57];

    *(void *)(v41 + 72) = v58;
    id v59 = [v29 trailingAnchor];
    id v60 = [v20 leadingAnchor];
    id v61 = [v59 constraintEqualToAnchor:v60];

    *(void *)(v41 + 80) = v61;
    id v62 = [v31 centerYAnchor];
    id v63 = [v20 centerYAnchor];
    id v64 = [v62 constraintEqualToAnchor:v63];

    *(void *)(v41 + 88) = v64;
    id v65 = [v31 leadingAnchor];
    id v66 = [v20 trailingAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66];

    *(void *)(v41 + 96) = v67;
    aBlock[0] = v41;
    specialized Array._endMutation()();
    sub_10000A968();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v69 activateConstraints:isa];
  }
}

void sub_10002579C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100008278(v3, (uint64_t)qword_1000D69F0);
      NSString v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested dismiss", v6, 2u);
        swift_slowDealloc();
      }

      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10003B97C();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneShareAudioDoneViewController()
{
  return self;
}

uint64_t sub_100025998()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneShareAudioDoneViewController_type);
}

uint64_t sub_1000259A8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000259E0()
{
}

uint64_t sub_1000259E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000259F8()
{
  return swift_release();
}

uint64_t destroy for HeadphoneLayoutMetrics()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeadphoneLayoutMetrics(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  long long v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  uint64_t v5 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v5;
  uint64_t v6 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v6;
  long long v7 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v7;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HeadphoneLayoutMetrics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v4;
  long long v5 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  return a1;
}

__n128 initializeWithTake for HeadphoneLayoutMetrics(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for HeadphoneLayoutMetrics(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  long long v5 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v5;
  uint64_t v6 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v7;
  swift_bridgeObjectRelease();
  long long v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneLayoutMetrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 216)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 152);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneLayoutMetrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 152) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneLayoutMetrics()
{
  return &type metadata for HeadphoneLayoutMetrics;
}

uint64_t sub_100025D9C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  unint64_t v3 = 0xD000000000000011;
  long long v4 = self;
  id v5 = [v4 beatsSoloPro];
  unsigned int v6 = [v5 productID];

  long long v7 = xmmword_1000A2AD0;
  unint64_t v8 = 0xD000000000000010;
  double v9 = 0.0;
  if (v6 != a1)
  {
    unint64_t v8 = 0x73646F70726961;
    id v25 = [v4 airPods];
    unsigned int v26 = [v25 productID];

    long long v16 = xmmword_1000A2B00;
    long long v12 = xmmword_1000A2B10;
    long long v13 = xmmword_1000A2B20;
    long long v17 = xmmword_1000A2B30;
    __asm
    {
      FMOV            V6.2D, #25.0
      FMOV            V7.2D, #24.0
    }
    if (v26 == a1)
    {
      char v18 = 0;
      uint64_t v10 = 0;
      char v11 = 0;
      unint64_t v3 = 0xD000000000000019;
      unint64_t v14 = 0x80000001000A6BA0;
      unint64_t v15 = 0xE700000000000000;
      char v19 = 1;
      uint64_t v20 = 0;
LABEL_7:
      long long v7 = xmmword_1000A2AD0;
      long long v21 = xmmword_1000A2AD0;
      uint64_t v24 = a2;
      goto LABEL_12;
    }
    long long v76 = _Q7;
    long long v78 = _Q6;
    id v31 = [v4 airPodsSecondGeneration];
    unsigned int v32 = [v31 productID];

    if (v32 == a1)
    {
      char v18 = 0;
      uint64_t v10 = 0;
      char v11 = 0;
      unint64_t v3 = 0xD000000000000022;
      unint64_t v14 = 0x80000001000A6BC0;
      unint64_t v15 = 0xE700000000000000;
      char v19 = 1;
      uint64_t v20 = 0;
      long long v7 = xmmword_1000A2AD0;
      long long v21 = xmmword_1000A2AD0;
      uint64_t v24 = a2;
      long long v12 = xmmword_1000A2B10;
      long long v17 = xmmword_1000A2B30;
      long long v16 = xmmword_1000A2B00;
      long long v13 = xmmword_1000A2B20;
      _Q7 = v76;
      _Q6 = v78;
      goto LABEL_12;
    }
    unint64_t v8 = 0x7073646F70726961;
    id v33 = [v4 airPodsPro];
    unsigned int v34 = [v33 productID];

    _Q6 = xmmword_1000A2B40;
    long long v21 = xmmword_1000A2B50;
    long long v16 = xmmword_1000A2B60;
    long long v12 = xmmword_1000A2B70;
    long long v13 = xmmword_1000A2B80;
    long long v17 = xmmword_1000A2B90;
    __asm { FMOV            V7.2D, #21.0 }
    if (v34 == a1)
    {
      char v18 = 0;
      char v19 = 0;
      char v11 = 0;
      unint64_t v3 = 0xD000000000000025;
      uint64_t v20 = 0;
      unint64_t v14 = 0x80000001000A6A20;
      double v9 = 10.0;
      uint64_t v10 = 0x406FF55810624DD3;
      uint64_t v24 = a2;
      long long v7 = xmmword_1000A2AD0;
      unint64_t v15 = 0xEA00000000006F72;
      goto LABEL_12;
    }
    long long v77 = _Q7;
    id v36 = [v4 beatsX];
    unsigned int v37 = [v36 productID];

    unint64_t v14 = 0x80000001000A6990;
    if (v37 == a1)
    {
      uint64_t v10 = 0;
      char v11 = 0;
      long long v12 = xmmword_1000A2BA0;
      long long v13 = xmmword_1000A2BB0;
      long long v16 = 0uLL;
      long long v17 = 0uLL;
      char v18 = 1;
      char v19 = 1;
      uint64_t v20 = 0;
      unint64_t v8 = 0x61652E7374616562;
      unint64_t v15 = 0xEF73656E6F687072;
LABEL_23:
      long long v7 = xmmword_1000A2AD0;
      goto LABEL_3;
    }
    id v38 = [v4 powerBeats3];
    unsigned int v39 = [v38 productID];

    long long v12 = xmmword_1000A2BC0;
    if (v39 == a1)
    {
      uint64_t v10 = 0;
      char v11 = 0;
      long long v13 = xmmword_1000A2BD0;
      unint64_t v15 = 0x80000001000A6B80;
      long long v16 = 0uLL;
      long long v17 = 0uLL;
      char v18 = 1;
      char v19 = 1;
      uint64_t v20 = 0;
      unint64_t v8 = 0xD000000000000011;
      goto LABEL_23;
    }
    id v40 = [v4 beatsSolo];
    unsigned int v41 = [v40 productID];

    unint64_t v14 = 0x80000001000A6990;
    unint64_t v15 = 0x80000001000A69B0;
    if (v41 == a1)
    {
      uint64_t v10 = 0;
      char v11 = 0;
      long long v12 = xmmword_1000A2BE0;
      long long v13 = xmmword_1000A2BF0;
LABEL_20:
      long long v16 = 0uLL;
      long long v17 = 0uLL;
      char v18 = 1;
      char v19 = 1;
      uint64_t v20 = 0;
      unint64_t v8 = 0xD000000000000010;
      goto LABEL_23;
    }
    id v42 = [v4 beatsStudio];
    unsigned int v43 = [v42 productID];

    if (v43 == a1)
    {
      uint64_t v10 = 0;
      char v11 = 0;
      long long v12 = xmmword_1000A2C00;
      long long v13 = xmmword_1000A2C10;
      long long v16 = 0uLL;
      long long v17 = 0uLL;
      char v18 = 1;
      char v19 = 1;
      uint64_t v20 = 0;
      unint64_t v8 = 0xD000000000000010;
      unint64_t v15 = 0x80000001000A69B0;
      goto LABEL_23;
    }
    id v44 = [v4 powerBeatsPro];
    unsigned int v45 = [v44 productID];

    if (v45 == a1)
    {
      char v18 = 0;
      uint64_t v10 = 0;
      char v11 = 0;
      unint64_t v8 = 0xD000000000000013;
      long long v16 = xmmword_1000A2C20;
      long long v12 = xmmword_1000A2C30;
      long long v13 = xmmword_1000A2C40;
      long long v17 = xmmword_1000A2C50;
      unint64_t v3 = 0xD000000000000025;
      unint64_t v14 = 0x80000001000A6B50;
      __asm { FMOV            V7.2D, #11.0 }
      unint64_t v15 = 0x80000001000A6B30;
      uint64_t v20 = 0;
      char v19 = 1;
      _Q6 = 0uLL;
      goto LABEL_7;
    }
    long long v12 = xmmword_1000A2C70;
    long long v13 = xmmword_1000A2C80;
    long long v17 = xmmword_1000A2C90;
    __asm { FMOV            V7.2D, #23.0 }
    if (a1 == 8221)
    {
      char v18 = 0;
      char v19 = 0;
      char v11 = 0;
      unint64_t v8 = 0xD000000000000020;
      long long v16 = xmmword_1000A2C60;
      unint64_t v3 = 0xD000000000000032;
      unint64_t v14 = 0x80000001000A6AF0;
      unint64_t v15 = 0x80000001000A6AC0;
      uint64_t v10 = 0x4069EAA7EF9DB22DLL;
      uint64_t v20 = 0;
      long long v7 = xmmword_1000A2AD0;
LABEL_28:
      long long v21 = v7;
      goto LABEL_4;
    }
    long long v75 = _Q7;
    id v46 = [v4 powerBeats4];
    unsigned int v47 = [v46 productID];

    unint64_t v14 = 0x80000001000A6990;
    if (v47 == a1)
    {
      uint64_t v10 = 0;
      char v11 = 0;
      long long v12 = xmmword_1000A2CA0;
      long long v13 = xmmword_1000A2CB0;
      unint64_t v15 = 0x80000001000A6AA0;
      goto LABEL_20;
    }
    id v48 = [v4 airPodsMax];
    unsigned int v49 = [v48 productID];

    unint64_t v15 = 0xEA00000000007861;
    long long v7 = xmmword_1000A2CC0;
    long long v13 = xmmword_1000A2CD0;
    if (v49 == a1)
    {
      uint64_t v10 = 0;
      long long v12 = 0uLL;
      char v18 = 1;
      long long v17 = 0uLL;
      uint64_t v20 = 0x4059000000000000;
      char v19 = 1;
      char v11 = 1;
      unint64_t v8 = 0x6D73646F70726961;
      long long v16 = 0uLL;
      _Q7 = 0uLL;
      goto LABEL_28;
    }
    id v50 = [v4 airPodsMax];
    unsigned int v51 = [v50 altProductID];

    unint64_t v14 = 0x80000001000A6990;
    if (v51 == a1)
    {
      uint64_t v10 = 0;
      long long v12 = 0uLL;
      char v18 = 1;
      long long v17 = 0uLL;
      uint64_t v20 = 0x4059000000000000;
      char v19 = 1;
      char v11 = 1;
      unint64_t v8 = 0x6D73646F70726961;
      unint64_t v15 = 0xEA00000000007861;
      long long v16 = 0uLL;
      long long v13 = xmmword_1000A2CD0;
      long long v7 = xmmword_1000A2CC0;
      _Q7 = 0uLL;
      goto LABEL_28;
    }
    id v52 = [v4 beatsFlex];
    unsigned int v53 = [v52 productID];

    if (v53 == a1)
    {
      uint64_t v10 = 0;
      char v11 = 0;
      long long v13 = xmmword_1000A2CE0;
      long long v16 = 0uLL;
      long long v17 = 0uLL;
      char v18 = 1;
      char v19 = 1;
      uint64_t v20 = 0;
      unint64_t v8 = 0x61652E7374616562;
      unint64_t v15 = 0xEF73656E6F687072;
      long long v12 = xmmword_1000A2BC0;
      goto LABEL_23;
    }
    id v54 = [v4 b688];
    unsigned int v55 = [v54 productID];

    long long v13 = xmmword_1000A2D10;
    long long v17 = xmmword_1000A2D20;
    unint64_t v14 = 0x80000001000A6A70;
    __asm { FMOV            V1.2D, #28.0 }
    if (v55 == a1)
    {
      char v18 = 0;
      char v19 = 0;
      char v11 = 0;
      long long v16 = xmmword_1000A2CF0;
      long long v12 = xmmword_1000A2D00;
      uint64_t v10 = 0x406C6AA7EF9DB22DLL;
      uint64_t v20 = 0;
      unint64_t v8 = 0x2E73646F70726961;
      unint64_t v15 = 0xEC000000336E6567;
      unint64_t v3 = 0xD000000000000027;
      _Q6 = 0uLL;
LABEL_42:
      _Q7 = _Q1;
      uint64_t v24 = a2;
      long long v7 = xmmword_1000A2AD0;
      long long v21 = xmmword_1000A2B50;
      goto LABEL_12;
    }
    if ((a1 - 8217) <= 7 && ((1 << (a1 - 25)) & 0xA5) != 0)
    {
      char v18 = 0;
      char v19 = 0;
      char v11 = 0;
      _Q6 = xmmword_1000A2D30;
      long long v16 = xmmword_1000A2D40;
      long long v12 = xmmword_1000A2D50;
      double v9 = 7.0;
      uint64_t v10 = 0x406C6AA7EF9DB22DLL;
      unint64_t v8 = 0x2E73646F70726961;
      unint64_t v15 = 0xEC000000336E6567;
      uint64_t v20 = 0;
      unint64_t v3 = 0xD000000000000027;
      goto LABEL_42;
    }
    id v57 = [v4 b507];
    unsigned int v58 = [v57 productID];

    if (v58 == a1)
    {
      char v18 = 0;
      uint64_t v10 = 0;
      char v11 = 0;
      long long v17 = xmmword_1000A2DA0;
      unint64_t v3 = 0xD000000000000022;
      unint64_t v14 = 0x80000001000A69F0;
      unint64_t v15 = 0x80000001000A69D0;
      char v19 = 1;
      uint64_t v20 = 0;
      unint64_t v8 = 0xD000000000000010;
      long long v13 = xmmword_1000A2D90;
      long long v12 = xmmword_1000A2D80;
      long long v16 = xmmword_1000A2D70;
      long long v7 = xmmword_1000A2AD0;
      long long v21 = xmmword_1000A2AD0;
      _Q6 = 0uLL;
      _Q7 = xmmword_1000A2D60;
      uint64_t v24 = a2;
      goto LABEL_12;
    }
    id v59 = [v4 b494];
    unsigned int v60 = [v59 productID];

    if (v60 == a1)
    {
      char v18 = 0;
      char v19 = 0;
      char v11 = 0;
      long long v16 = xmmword_1000A2DB0;
      unint64_t v3 = 0xD00000000000001FLL;
      unint64_t v14 = 0x80000001000A6A50;
      unint64_t v15 = 0xED00006F72702E74;
      unint64_t v8 = 0x69662E7374616562;
      uint64_t v10 = 0x4069EAA7EF9DB22DLL;
      uint64_t v20 = 0;
      long long v17 = xmmword_1000A2C90;
      long long v13 = xmmword_1000A2C80;
      long long v12 = xmmword_1000A2C70;
      _Q7 = v75;
      long long v7 = xmmword_1000A2AD0;
      long long v21 = xmmword_1000A2AD0;
      goto LABEL_4;
    }
    id v61 = [v4 b698];
    unsigned int v62 = [v61 productID];

    unint64_t v14 = 0x80000001000A6A20;
    if (v62 == a1
      || (id v63 = [v4 b698],
          unsigned int v64 = [v63 altProductID],
          v63,
          v64 == a1))
    {
      char v18 = 0;
      char v19 = 0;
      char v11 = 0;
      uint64_t v10 = 0x406FF55810624DD3;
      uint64_t v20 = 0;
      double v9 = 10.0;
      unint64_t v3 = 0xD000000000000025;
      uint64_t v24 = a2;
      long long v7 = xmmword_1000A2AD0;
      long long v12 = xmmword_1000A2B70;
      long long v17 = xmmword_1000A2B90;
      unint64_t v15 = 0xEA00000000006F72;
      long long v16 = xmmword_1000A2B60;
      long long v13 = xmmword_1000A2B80;
      _Q7 = v77;
      _Q6 = xmmword_1000A2B40;
      long long v21 = xmmword_1000A2DC0;
      goto LABEL_12;
    }
    id v65 = [v4 b607];
    unsigned int v66 = [v65 productID];

    if (v66 == a1)
    {
      char v18 = 0;
      char v19 = 0;
      char v11 = 0;
      unint64_t v3 = 0xD000000000000022;
      unint64_t v14 = 0x80000001000A69F0;
      unint64_t v15 = 0x80000001000A69D0;
      uint64_t v10 = 0x406FF55810624DD3;
      uint64_t v20 = 0;
      unint64_t v8 = 0xD000000000000010;
      long long v13 = xmmword_1000A2D90;
      long long v12 = xmmword_1000A2D80;
      long long v16 = xmmword_1000A2D70;
      long long v7 = xmmword_1000A2AD0;
      long long v21 = xmmword_1000A2AD0;
      _Q6 = 0uLL;
LABEL_52:
      _Q7 = xmmword_1000A2D60;
      uint64_t v24 = a2;
      long long v17 = xmmword_1000A2DD0;
      goto LABEL_12;
    }
    id v67 = [v4 b453];
    unsigned int v68 = [v67 productID];

    unint64_t v14 = 0x80000001000A6990;
    if (v68 == a1
      || (id v69 = [v4 b465],
          unsigned int v70 = [v69 productID],
          v69,
          v70 == a1))
    {
      uint64_t v10 = 0;
      char v11 = 0;
      long long v16 = 0uLL;
      long long v17 = 0uLL;
      char v18 = 1;
      char v19 = 1;
      uint64_t v20 = 0;
      unint64_t v8 = 0xD000000000000010;
      long long v7 = xmmword_1000A2AD0;
      long long v21 = xmmword_1000A2AD0;
      _Q7 = 0uLL;
      _Q6 = 0uLL;
      uint64_t v24 = a2;
      long long v12 = xmmword_1000A2DE0;
      unint64_t v15 = 0x80000001000A69B0;
    }
    else
    {
      id v71 = [v4 b463];
      unsigned int v72 = [v71 productID];

      if (v72 == a1)
      {
        char v18 = 0;
        char v19 = 0;
        char v11 = 0;
        _Q6 = 0uLL;
        uint64_t v10 = 0x406FF55810624DD3;
        uint64_t v20 = 0;
        unint64_t v3 = 0xD000000000000010;
        unint64_t v8 = 0xD000000000000010;
        unint64_t v15 = 0x80000001000A69B0;
        unint64_t v14 = 0x80000001000A69B0;
        long long v13 = xmmword_1000A2D90;
        long long v12 = xmmword_1000A2D80;
        long long v16 = xmmword_1000A2D70;
        long long v7 = xmmword_1000A2AD0;
        long long v21 = xmmword_1000A2AD0;
        goto LABEL_52;
      }
      id v73 = [v4 b487];
      unsigned int v74 = [v73 productID];

      if (v74 != a1)
      {
        sub_100026C34((uint64_t)v80);
        sub_100023048((uint64_t)v80, (uint64_t)v97);
        uint64_t v24 = a2;
        return sub_100023048((uint64_t)v97, v24);
      }
      uint64_t v10 = 0;
      char v11 = 0;
      unint64_t v14 = 0x80000001000A6990;
      long long v16 = 0uLL;
      long long v17 = 0uLL;
      char v18 = 1;
      char v19 = 1;
      uint64_t v20 = 0;
      unint64_t v8 = 0xD000000000000010;
      long long v7 = xmmword_1000A2AD0;
      long long v21 = xmmword_1000A2AD0;
      _Q7 = 0uLL;
      _Q6 = 0uLL;
      uint64_t v24 = a2;
      long long v12 = xmmword_1000A2DE0;
      unint64_t v15 = 0x80000001000A69B0;
    }
    long long v13 = xmmword_1000A2DF0;
    goto LABEL_12;
  }
  uint64_t v10 = 0;
  char v11 = 0;
  long long v12 = xmmword_1000A2AE0;
  long long v13 = xmmword_1000A2AF0;
  unint64_t v14 = 0x80000001000A6990;
  unint64_t v15 = 0x80000001000A69B0;
  long long v16 = 0uLL;
  long long v17 = 0uLL;
  char v18 = 1;
  char v19 = 1;
  uint64_t v20 = 0;
LABEL_3:
  long long v21 = v7;
  _Q7 = 0uLL;
LABEL_4:
  _Q6 = 0uLL;
  uint64_t v24 = a2;
LABEL_12:
  v80[0] = v13;
  v80[1] = v12;
  v80[2] = v17;
  char v81 = v18;
  uint64_t v82 = v10;
  uint64_t v83 = 0;
  char v84 = v19;
  long long v85 = v16;
  uint64_t v86 = v20;
  char v87 = v11;
  long long v88 = v21;
  long long v89 = v7;
  unint64_t v90 = v8;
  unint64_t v91 = v15;
  unint64_t v92 = v3;
  unint64_t v93 = v14;
  long long v94 = _Q7;
  long long v95 = _Q6;
  double v96 = v9;
  nullsub_1(v80);
  sub_100023048((uint64_t)v80, (uint64_t)v97);
  return sub_100023048((uint64_t)v97, v24);
}

double sub_100026C34(uint64_t a1)
{
  *(void *)(a1 + 208) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

__n128 initializeBufferWithCopyOfBuffer for HeadphoneLayoutMetrics.Mismatch(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneLayoutMetrics.Mismatch()
{
  return &type metadata for HeadphoneLayoutMetrics.Mismatch;
}

ValueMetadata *type metadata accessor for HeadphoneLayoutMetrics.VideoMetric()
{
  return &type metadata for HeadphoneLayoutMetrics.VideoMetric;
}

uint64_t getEnumTagSinglePayload for HeadphoneBatteryType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HeadphoneLayoutMetrics.VideoIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100026DECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_100026E14(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneLayoutMetrics.VideoIdentifier()
{
  return &type metadata for HeadphoneLayoutMetrics.VideoIdentifier;
}

unint64_t sub_100026E30()
{
  unint64_t result = qword_1000D4F38;
  if (!qword_1000D4F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4F38);
  }
  return result;
}

uint64_t sub_100026E84(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_100026F08(uint64_t a1, uint64_t a2)
{
  int v3 = *v2;
  v6[4] = a1;
  v6[5] = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100026E84;
  v6[3] = &unk_1000C3698;
  unsigned int v4 = _Block_copy(v6);
  swift_retain();
  swift_release();
  [v3 setAccessoryAttached:v4];
  _Block_release(v4);
  return [v3 start];
}

id sub_100026FD0()
{
  id v1 = *v0;
  [*v0 setAccessoryAttached:0];

  return [v1 stop];
}

uint64_t sub_100027020(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100027030()
{
  return swift_release();
}

char *sub_100027038(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  uint64_t v19 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_player;
  id v20 = objc_allocWithZone((Class)AVPlayer);
  long long v21 = v9;
  *(void *)&v9[v19] = [v20 initWithPlayerItem:0];
  uint64_t v22 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer;
  id v23 = [self playerLayerWithPlayer:0];
  [v23 setOpacity:0.0];
  *(void *)&v21[v22] = v23;
  uint64_t v24 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_videoPlayer;
  id v25 = [objc_allocWithZone((Class)AVQueuePlayer) init];
  [v25 setMuted:1];
  [v25 setAllowsExternalPlayback:0];
  *(void *)&v21[v24] = v25;
  unsigned int v26 = &v21[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_url];
  uint64_t v27 = type metadata accessor for URL();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v26, a1, v27);
  id v29 = (double *)&v21[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_desiredBounds];
  *id v29 = a6;
  v29[1] = a7;
  v29[2] = a8;
  v29[3] = a9;
  id v30 = [self sharedInstance];
  id value = 0;
  unsigned int v31 = [v30 setCategory:AVAudioSessionCategoryAmbient withOptions:1 error:&value];

  if (v31)
  {
    id v32 = value;
  }
  else
  {
    id v33 = value;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  [*(id *)&v21[v22] setPlayer:*(void *)&v21[v24]];
  unsigned int v34 = *(void **)&v21[v24];
  id v35 = objc_allocWithZone((Class)AVPlayerItem);
  id v36 = v34;
  URL._bridgeToObjectiveC()(v37);
  unsigned int v39 = v38;
  id v40 = [v35 initWithURL:v38];

  id v41 = [self playerLooperWithPlayer:v36 templateItem:v40];
  *(void *)&v21[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLooper] = v41;

  id v42 = (objc_class *)type metadata accessor for ProxMovieLoopPlayer();
  v59.receiver = v21;
  v59.super_class = v42;
  unsigned int v43 = (char *)objc_msgSendSuper2(&v59, "initWithFrame:", a2, a3, a4, a5);
  id v44 = *(void **)&v43[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_videoPlayer];
  CMTimeEpoch epoch = kCMTimeZero.epoch;
  id v46 = v43;
  id value = (id)kCMTimeZero.value;
  uint64_t v54 = *(void *)&kCMTimeZero.timescale;
  unsigned int v55 = (uint64_t (*)(uint64_t))epoch;
  [v44 seekToTime:&value];
  id v47 = [v46 layer];
  [v47 addSublayer:*(void *)&v46[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer]];

  id v48 = self;
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = v46;
  id v57 = sub_10002795C;
  uint64_t v58 = v49;
  id value = _NSConcreteStackBlock;
  uint64_t v54 = 1107296256;
  unsigned int v55 = sub_100046658;
  id v56 = &unk_1000C36E8;
  id v50 = _Block_copy(&value);
  unsigned int v51 = v46;
  swift_release();
  [v48 animateWithDuration:v50 animations:0.15];
  _Block_release(v50);

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a1, v27);
  return v51;
}

id sub_10002750C()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ProxMovieLoopPlayer();
  [super layoutSubviews];
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer;
  [*(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer] setBounds:*(double *)&v0[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_desiredBounds] *(double *)&v0[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_desiredBounds + 8] *(double *)&v0[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_desiredBounds + 16] *(double *)&v0[OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_desiredBounds + 24]];
  id v2 = [v0 layer];
  [v2 setMasksToBounds:0];

  id v3 = [v0 layer];
  [v3 setCornerRadius:0.0];

  id v4 = *(id *)&v0[v1];
  id v5 = [v0 layer];
  [v5 bounds];

  id v6 = [v0 layer];
  [v6 bounds];

  nullsub_1(v7);
  [v4 setPosition:];

  return [*(id *)&v0[v1] setVideoGravity:AVLayerVideoGravityResizeAspectFill];
}

id sub_100027738()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProxMovieLoopPlayer();
  return [super dealloc];
}

uint64_t sub_100027820()
{
  return type metadata accessor for ProxMovieLoopPlayer();
}

uint64_t type metadata accessor for ProxMovieLoopPlayer()
{
  uint64_t result = qword_1000D4F98;
  if (!qword_1000D4F98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100027874()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100027924()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10002795C(double a1)
{
  LODWORD(a1) = 1.0;
  return [*(id *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer) setOpacity:a1];
}

uint64_t sub_10002797C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002798C()
{
  return swift_release();
}

void sub_100027994()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_player;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)AVPlayer) initWithPlayerItem:0];
  uint64_t v2 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_playerLayer;
  id v3 = [self playerLayerWithPlayer:0];
  [v3 setOpacity:0.0];
  *(void *)&v0[v2] = v3;
  uint64_t v4 = OBJC_IVAR____TtC20HeadphoneProxService19ProxMovieLoopPlayer_videoPlayer;
  id v5 = [objc_allocWithZone((Class)AVQueuePlayer) init];
  [v5 setMuted:1];
  [v5 setAllowsExternalPlayback:0];
  *(void *)&v0[v4] = v5;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t sub_100027AB4()
{
  unint64_t result = qword_1000D4FA8;
  if (!qword_1000D4FA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D4FA8);
  }
  return result;
}

uint64_t sub_100027AF4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D91B0);
  sub_100008278(v0, (uint64_t)qword_1000D91B0);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100027B70(unsigned __int8 a1)
{
  unint64_t v3 = sub_100028C5C(a1);
  uint64_t v4 = v2;
  if (v3 != 0xD00000000000001BLL || v2 != 0x80000001000A7690)
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_5;
    }
    if (v3 != 0xD00000000000001ELL || v4 != 0x80000001000A7670)
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_5;
      }
      if (v3 != 0xD000000000000023 || v4 != 0x80000001000A7640)
      {
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_5;
        }
        if (v3 != 0xD000000000000013 || v4 != 0x80000001000A75E0)
        {
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v18) {
            goto LABEL_5;
          }
          if (v3 != 0xD000000000000016 || v4 != 0x80000001000A75C0)
          {
            char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v19) {
              goto LABEL_5;
            }
            if (v3 != 0xD000000000000019 || v4 != 0x80000001000A7620)
            {
              char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v20) {
                goto LABEL_5;
              }
              if (v3 != 0xD00000000000001CLL || v4 != 0x80000001000A7600)
              {
                char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v21) {
                  goto LABEL_5;
                }
                if (v3 == 0x4C4C41435F444E45 && v4 == 0xEE00454C5449545FLL) {
                  goto LABEL_28;
                }
                char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v22) {
                  goto LABEL_30;
                }
                if (v3 == 0xD000000000000011 && v4 == 0x80000001000A7CB0) {
                  goto LABEL_28;
                }
                char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v23) {
                  goto LABEL_30;
                }
                if (v3 == 0xD000000000000020 && v4 == 0x80000001000A7C80) {
                  goto LABEL_28;
                }
                char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v24) {
                  goto LABEL_30;
                }
                if (v3 == 0xD000000000000021 && v4 == 0x80000001000A7C50)
                {
LABEL_28:
                  swift_bridgeObjectRelease();
LABEL_30:
                  id v6 = [self mainBundle];
                  unint64_t v60 = 0xE000000000000000;
                  unint64_t v9 = 0x80000001000A81F0;
                  unint64_t v10 = v3;
                  uint64_t v11 = v4;
                  unint64_t v7 = 0xD000000000000013;
                  goto LABEL_7;
                }
                char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v25) {
                  goto LABEL_30;
                }
                if (v3 == 0x4C41435F4554554DLL && v4 == 0xEF454C5449545F4CLL) {
                  goto LABEL_42;
                }
                char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v26) {
                  goto LABEL_44;
                }
                if (v3 == 0xD000000000000012 && v4 == 0x80000001000A7C30) {
                  goto LABEL_42;
                }
                char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v27) {
                  goto LABEL_44;
                }
                if (v3 == 0xD00000000000001BLL && v4 == 0x80000001000A7C10) {
                  goto LABEL_42;
                }
                char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v28) {
                  goto LABEL_44;
                }
                if (v3 == 0xD00000000000001BLL && v4 == 0x80000001000A7BF0) {
                  goto LABEL_42;
                }
                char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v29) {
                  goto LABEL_44;
                }
                if (v3 == 0xD00000000000001BLL && v4 == 0x80000001000A7BD0) {
                  goto LABEL_42;
                }
                char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v30) {
                  goto LABEL_44;
                }
                if (v3 == 0xD00000000000001BLL && v4 == 0x80000001000A7BB0) {
                  goto LABEL_42;
                }
                char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v31) {
                  goto LABEL_44;
                }
                if (v3 == 0xD000000000000012 && v4 == 0x80000001000A7B70) {
                  goto LABEL_42;
                }
                char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v32) {
                  goto LABEL_44;
                }
                if (v3 == 0x4C41435F4554554DLL && v4 == 0xEE00454E4F445F4CLL)
                {
LABEL_42:
                  swift_bridgeObjectRelease();
LABEL_44:
                  id v6 = [self mainBundle];
                  unint64_t v7 = 0xD000000000000014;
                  unint64_t v60 = 0xE000000000000000;
                  int v8 = "Localizable-MuteCall";
                  goto LABEL_6;
                }
                char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v33) {
                  goto LABEL_44;
                }
                if (v3 == 0xD000000000000017 && v4 == 0x80000001000A7B50) {
                  goto LABEL_122;
                }
                char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v34) {
                  goto LABEL_123;
                }
                if (v3 == 0xD00000000000001ALL && v4 == 0x80000001000A7B30) {
                  goto LABEL_122;
                }
                char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v35) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000019 && v4 == 0x80000001000A7B10) {
                  goto LABEL_122;
                }
                char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v36) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000020 && v4 == 0x80000001000A7AE0) {
                  goto LABEL_122;
                }
                char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v37) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000023 && v4 == 0x80000001000A7AB0) {
                  goto LABEL_122;
                }
                char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v38) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000023 && v4 == 0x80000001000A7A80) {
                  goto LABEL_122;
                }
                char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v39) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000026 && v4 == 0x80000001000A7A50) {
                  goto LABEL_122;
                }
                char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v40) {
                  goto LABEL_123;
                }
                if (v3 == 0xD00000000000002ELL && v4 == 0x80000001000A7A20) {
                  goto LABEL_122;
                }
                char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v41) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000031 && v4 == 0x80000001000A79E0) {
                  goto LABEL_122;
                }
                char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v42) {
                  goto LABEL_123;
                }
                if (v3 == 0xD00000000000002ALL && v4 == 0x80000001000A79B0) {
                  goto LABEL_122;
                }
                char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v43) {
                  goto LABEL_123;
                }
                if (v3 == 0xD00000000000002DLL && v4 == 0x80000001000A7980) {
                  goto LABEL_122;
                }
                char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v44) {
                  goto LABEL_123;
                }
                if (v3 == 0xD00000000000002CLL && v4 == 0x80000001000A7950) {
                  goto LABEL_122;
                }
                char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v45) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000030 && v4 == 0x80000001000A7910) {
                  goto LABEL_122;
                }
                char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v46) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000033 && v4 == 0x80000001000A78D0) {
                  goto LABEL_122;
                }
                char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v47) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000032 && v4 == 0x80000001000A7890) {
                  goto LABEL_122;
                }
                char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v48) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000033 && v4 == 0x80000001000A7850) {
                  goto LABEL_122;
                }
                char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v49) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000036 && v4 == 0x80000001000A7810) {
                  goto LABEL_122;
                }
                char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v50) {
                  goto LABEL_123;
                }
                if (v3 == 0xD00000000000003ELL && v4 == 0x80000001000A77D0) {
                  goto LABEL_122;
                }
                char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v51)
                {
LABEL_123:
                  id v6 = [self mainBundle];
                  unint64_t v7 = 0xD00000000000001CLL;
                  unint64_t v60 = 0xE000000000000000;
                  int v8 = "Localizable-AdaptiveControls";
                  goto LABEL_6;
                }
                if (v3 == 0xD000000000000035 && v4 == 0x80000001000A7790)
                {
LABEL_122:
                  swift_bridgeObjectRelease();
                  goto LABEL_123;
                }
                char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v52) {
                  goto LABEL_123;
                }
                if (v3 == 0xD000000000000017 && v4 == 0x80000001000A7770) {
                  goto LABEL_133;
                }
                char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v53) {
                  goto LABEL_135;
                }
                if (v3 == 0xD000000000000012 && v4 == 0x80000001000A7750) {
                  goto LABEL_133;
                }
                char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v54)
                {
LABEL_135:
                  id v6 = [self mainBundle];
                  unint64_t v7 = 0xD000000000000014;
                  unint64_t v60 = 0xE000000000000000;
                  int v8 = "Localizable-WhatsNew";
                  goto LABEL_6;
                }
                if (v3 == 0xD000000000000011 && v4 == 0x80000001000A7730)
                {
LABEL_133:
                  swift_bridgeObjectRelease();
                  goto LABEL_135;
                }
                char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v55) {
                  goto LABEL_135;
                }
                if (v3 != 0xD000000000000013 || v4 != 0x80000001000A7710)
                {
                  char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v56) {
                    goto LABEL_149;
                  }
                  if (v3 != 0xD000000000000016 || v4 != 0x80000001000A76F0)
                  {
                    char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    if (v57) {
                      goto LABEL_149;
                    }
                    if (v3 != 0xD000000000000015 || v4 != 0x80000001000A76D0)
                    {
                      char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if ((v58 & 1) == 0)
                      {
                        if (v3 != 0xD000000000000015 || v4 != 0x80000001000A76B0)
                        {
                          char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
                          swift_bridgeObjectRelease();
                          if ((v59 & 1) == 0)
                          {
                            if (a1 - 122 < 0x1E)
                            {
                              id v6 = [self mainBundle];
                              unint64_t v60 = 0xE000000000000000;
                              unint64_t v9 = 0x80000001000A6610;
                              unint64_t v10 = v3;
                              uint64_t v11 = v4;
                              unint64_t v7 = 0xD000000000000011;
                              goto LABEL_7;
                            }
                            if (a1 - 106 > 0xF)
                            {
                              id v6 = [self mainBundle];
                              unint64_t v60 = 0xE000000000000000;
                              unint64_t v10 = v3;
                              uint64_t v11 = v4;
                              unint64_t v7 = 0x617A696C61636F4CLL;
                              unint64_t v9 = 0xEB00000000656C62;
                              goto LABEL_7;
                            }
                            id v6 = [self mainBundle];
                            unint64_t v7 = 0xD00000000000001CLL;
                            unint64_t v60 = 0xE000000000000000;
                            int v8 = "Localizable-HeartRateMonitor";
                            goto LABEL_6;
                          }
                          goto LABEL_149;
                        }
                        goto LABEL_147;
                      }
LABEL_149:
                      id v6 = [self mainBundle];
                      unint64_t v7 = 0xD000000000000018;
                      unint64_t v60 = 0xE000000000000000;
                      int v8 = "Localizable-HeadGestures";
                      goto LABEL_6;
                    }
                  }
                }
LABEL_147:
                swift_bridgeObjectRelease();
                goto LABEL_149;
              }
            }
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_5:
  id v6 = [self mainBundle];
  unint64_t v7 = 0xD000000000000017;
  unint64_t v60 = 0xE000000000000000;
  int v8 = "Localizable-Counterfeit";
LABEL_6:
  unint64_t v9 = (unint64_t)(v8 - 32) | 0x8000000000000000;
  unint64_t v10 = v3;
  uint64_t v11 = v4;
LABEL_7:
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  uint64_t v13 = 0;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v10, *(Swift::String_optional *)&v7, (NSBundle)v6, v12, *(Swift::String *)(&v60 - 1))._countAndFlagsBits;
  swift_bridgeObjectRelease();

  return countAndFlagsBits;
}

uint64_t sub_100028B5C(uint64_t a1)
{
  switch(SFDeviceClassCodeGet())
  {
    case 1u:
      uint64_t v6 = a1;
      swift_bridgeObjectRetain();
      unint64_t v2 = 0x454E4F4850495FLL;
      unint64_t v3 = 0xE700000000000000;
      goto LABEL_7;
    case 2u:
      uint64_t v6 = a1;
      swift_bridgeObjectRetain();
      uint64_t v4 = 1330661727;
      goto LABEL_6;
    case 3u:
      uint64_t v6 = a1;
      swift_bridgeObjectRetain();
      uint64_t v4 = 1095780703;
LABEL_6:
      unint64_t v2 = v4 & 0xFFFF0000FFFFFFFFLL | 0x4400000000;
      unint64_t v3 = 0xE500000000000000;
LABEL_7:
      String.append(_:)(*(Swift::String *)&v2);
      a1 = v6;
      break;
    default:
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

unint64_t sub_100028C5C(char a1)
{
  unint64_t result = 0x45554E49544E4F43;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x574F4E5F544F4ELL;
      break;
    case 2:
      unint64_t result = 1162760004;
      break;
    case 3:
      unint64_t result = 1346980691;
      break;
    case 4:
      unint64_t result = 0x4C5F50555F544553;
      break;
    case 5:
      unint64_t result = 0x494147415F595254;
      break;
    case 6:
      unint64_t result = 0x5455425F444C4F48;
      break;
    case 7:
      unint64_t result = 0x455341435F504154;
      break;
    case 8:
      unint64_t result = 0x5443454E4E4F43;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
    case 46:
    case 50:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 92:
    case 107:
    case 118:
    case -113:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 12:
      unint64_t result = 0x53444F50524941;
      break;
    case 13:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 15:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 16:
      unint64_t result = 0xD000000000000021;
      break;
    case 17:
      unint64_t result = 0xD000000000000024;
      break;
    case 18:
      unint64_t result = 0xD000000000000027;
      break;
    case 19:
      unint64_t result = 0xD000000000000021;
      break;
    case 20:
      unint64_t result = 0xD000000000000030;
      break;
    case 21:
      unint64_t result = 0x45434E554F4E4E41;
      break;
    case 22:
      unint64_t result = 0xD000000000000016;
      break;
    case 23:
      unint64_t result = 0xD000000000000013;
      break;
    case 24:
      unint64_t result = 0x4E5255545F43424FLL;
      break;
    case 25:
      unint64_t result = 0x4542414C5F43424FLL;
      break;
    case 26:
      unint64_t result = 0xD000000000000016;
      break;
    case 27:
      unint64_t result = 0xD000000000000019;
      break;
    case 28:
      unint64_t result = 0x5249415F5446454CLL;
      break;
    case 29:
      unint64_t result = 0x49415F5448474952;
      break;
    case 30:
      unint64_t result = 0x474E494752414843;
      break;
    case 31:
      unint64_t result = 0xD000000000000010;
      break;
    case 32:
      unint64_t result = 0xD000000000000011;
      break;
    case 33:
      unint64_t result = 0x43415F4F49445541;
      break;
    case 34:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 35:
      unint64_t result = 0x55415F4552414853;
      break;
    case 36:
      unint64_t result = 0x524148535F574F4ELL;
      break;
    case 37:
      unint64_t result = 0xD000000000000014;
      break;
    case 38:
      unint64_t result = 0x454E4E4F43534944;
      break;
    case 39:
      unint64_t result = 0x454E4E4F43534944;
      break;
    case 40:
      unint64_t result = 0x495443454E4E4F43;
      break;
    case 41:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 42:
      unint64_t result = 0xD000000000000022;
      break;
    case 43:
      unint64_t result = 0xD000000000000030;
      break;
    case 44:
      unint64_t result = 0xD000000000000029;
      break;
    case 45:
      unint64_t result = 0xD000000000000011;
      break;
    case 47:
      unint64_t result = 0xD000000000000018;
      break;
    case 48:
      unint64_t result = 0xD000000000000017;
      break;
    case 49:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 51:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 52:
      unint64_t result = 0xD000000000000022;
      break;
    case 53:
      unint64_t result = 0x4C4C41435F444E45;
      break;
    case 54:
      unint64_t result = 0xD000000000000011;
      break;
    case 55:
      unint64_t result = 0xD000000000000020;
      break;
    case 56:
      unint64_t result = 0xD000000000000021;
      break;
    case 57:
    case 65:
      unint64_t result = 0x4C41435F4554554DLL;
      break;
    case 58:
      unint64_t result = 0xD000000000000012;
      break;
    case 64:
      unint64_t result = 0xD000000000000012;
      break;
    case 66:
      unint64_t result = 0xD000000000000017;
      break;
    case 67:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 68:
      unint64_t result = 0xD000000000000019;
      break;
    case 69:
      unint64_t result = 0xD000000000000020;
      break;
    case 70:
      unint64_t result = 0xD000000000000023;
      break;
    case 71:
      unint64_t result = 0xD000000000000023;
      break;
    case 72:
      unint64_t result = 0xD000000000000026;
      break;
    case 73:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 74:
      unint64_t result = 0xD000000000000031;
      break;
    case 75:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 76:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 77:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 78:
      unint64_t result = 0xD000000000000030;
      break;
    case 79:
      unint64_t result = 0xD000000000000033;
      break;
    case 80:
      unint64_t result = 0xD000000000000032;
      break;
    case 81:
      unint64_t result = 0xD000000000000033;
      break;
    case 82:
      unint64_t result = 0xD000000000000036;
      break;
    case 83:
      unint64_t result = 0xD00000000000003ELL;
      break;
    case 84:
      unint64_t result = 0xD000000000000035;
      break;
    case 85:
      unint64_t result = 0xD000000000000017;
      break;
    case 86:
      unint64_t result = 0xD000000000000012;
      break;
    case 87:
      unint64_t result = 0xD000000000000011;
      break;
    case 88:
      unint64_t result = 0xD000000000000013;
      break;
    case 89:
      unint64_t result = 0xD000000000000016;
      break;
    case 90:
      unint64_t result = 0xD000000000000015;
      break;
    case 91:
      unint64_t result = 0xD000000000000015;
      break;
    case 93:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 94:
      unint64_t result = 0xD000000000000023;
      break;
    case 95:
      unint64_t result = 0xD000000000000019;
      break;
    case 96:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 97:
      unint64_t result = 0xD000000000000013;
      break;
    case 98:
      unint64_t result = 0xD000000000000016;
      break;
    case 99:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 100:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 101:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 102:
      unint64_t result = 0xD000000000000015;
      break;
    case 103:
      unint64_t result = 0xD000000000000017;
      break;
    case 104:
      unint64_t result = 0xD000000000000018;
      break;
    case 105:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 106:
      unint64_t result = 0xD000000000000018;
      break;
    case 108:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 109:
      unint64_t result = 0xD000000000000024;
      break;
    case 110:
      unint64_t result = 0xD000000000000019;
      break;
    case 111:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 112:
      unint64_t result = 0xD000000000000020;
      break;
    case 113:
      unint64_t result = 0xD000000000000025;
      break;
    case 114:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 115:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 116:
      unint64_t result = 0xD000000000000021;
      break;
    case 117:
      unint64_t result = 0xD000000000000026;
      break;
    case 119:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 120:
      unint64_t result = 0xD000000000000015;
      break;
    case 121:
      unint64_t result = 0xD000000000000014;
      break;
    case 122:
      unint64_t result = 0xD000000000000013;
      break;
    case 123:
      unint64_t result = 0xD000000000000026;
      break;
    case 124:
      unint64_t result = 0xD000000000000029;
      break;
    case 125:
      unint64_t result = 0xD000000000000020;
      break;
    case 126:
      unint64_t result = 0xD000000000000023;
      break;
    case 127:
      unint64_t result = 0xD000000000000026;
      break;
    case -128:
      unint64_t result = 0xD000000000000029;
      break;
    case -127:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case -126:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case -125:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case -124:
      unint64_t result = 0xD000000000000021;
      break;
    case -123:
      unint64_t result = 0xD000000000000020;
      break;
    case -122:
      unint64_t result = 0xD000000000000023;
      break;
    case -121:
      unint64_t result = 0xD000000000000028;
      break;
    case -120:
      unint64_t result = 0xD000000000000027;
      break;
    case -119:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case -118:
      unint64_t result = 0xD000000000000024;
      break;
    case -117:
      unint64_t result = 0xD000000000000027;
      break;
    case -116:
      unint64_t result = 0xD00000000000003BLL;
      break;
    case -115:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case -114:
      unint64_t result = 0xD000000000000018;
      break;
    case -112:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case -111:
      unint64_t result = 0xD000000000000024;
      break;
    case -110:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case -109:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case -108:
      unint64_t result = 0xD000000000000026;
      break;
    case -107:
      unint64_t result = 0xD000000000000029;
      break;
    case -106:
      unint64_t result = 0xD000000000000027;
      break;
    case -105:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100029D28(uint64_t a1, char a2)
{
  unint64_t v4 = sub_100028C5C(a2);
  char v5 = v3;
  if (v4 == 0xD000000000000013 && v3 == (void *)0x80000001000A6D20)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
LABEL_9:
      id v19 = [self mainBundle];
      v27._object = (void *)0xE000000000000000;
      v20._uint64_t countAndFlagsBits = v4;
      v20._object = v5;
      v21.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v21.value._object = (void *)0xEB00000000656C62;
      v22._uint64_t countAndFlagsBits = 0;
      v22._object = (void *)0xE000000000000000;
      v27._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v27);
      swift_bridgeObjectRelease();

      uint64_t countAndFlagsBits = String.init(format:arguments:)();
      swift_bridgeObjectRelease();
      return countAndFlagsBits;
    }
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_9;
  }
  sub_100017C14(a1 + 32, (uint64_t)&v24);
  sub_100008E18((uint64_t *)&unk_1000D4FB0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_9;
  }
  unint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  unint64_t v24 = 0xD000000000000010;
  unint64_t v25 = 0x80000001000A6D40;
  v7._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = v24;
  int v8 = (void *)v25;
  uint64_t v10 = String.init(format:arguments:)();
  Swift::String v12 = v11;
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [self bundleWithIdentifier:v13];

  if (v14)
  {
    v26._object = (void *)0xE000000000000000;
    v15._uint64_t countAndFlagsBits = v10;
    v15._object = v12;
    v16.value._uint64_t countAndFlagsBits = v9;
    v16.value._object = v8;
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v26._uint64_t countAndFlagsBits = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v26)._countAndFlagsBits;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return countAndFlagsBits;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10002A020()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D4FC0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D4FC0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10002A0E8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingController] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_type] = 15;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingItem] = a1;
  id v3 = objc_allocWithZone((Class)PRXCardContentView);
  id v4 = a1;
  id v5 = [v3 init];
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for HeadphoneMarketingUpsellViewController();
  id v6 = [super initWithContentView:v5];

  id v7 = v6;
  sub_10002A22C();

  return v7;
}

void sub_10002A22C()
{
  uint64_t v1 = v0;
  type metadata accessor for AMSMarketingOffersClient();
  *(void *)(swift_initStackObject() + 16) = 0;
  id v2 = sub_10007594C();
  swift_setDeallocating();
  swift_unknownObjectRelease();
  id v3 = [objc_allocWithZone((Class)AMSUIMarketingItemViewController) initWithMarketingItem:*(void *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingItem) bag:v2];
  [v3 setDelegate:v1];
  [v3 setAnonymousMetrics:1];
  id v4 = self;
  id v5 = v3;
  id v6 = [v4 ams_sharedAccountStore];
  id v7 = [v6 ams_activeiTunesAccount];

  [v5 setAccount:v7];
  if (qword_1000D4368 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100008278(v8, (uint64_t)qword_1000D4FC0);
  id v9 = v5;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    Swift::String v12 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)Swift::String v12 = 136315138;
    id v13 = [v9 metricsOverlay];
    if (v13)
    {
      id v14 = v13;
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    sub_100008E18(&qword_1000D5088);
    uint64_t v15 = String.init<A>(reflecting:)();
    sub_10005D8C8(v15, v16, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HeadphoneMarketingUpsellViewController: Creating AMSUIMarketingItemViewController with metrics= %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v17 = [v9 preload];
  aBlock[4] = (uint64_t)sub_10002A5E0;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10002A8B8;
  aBlock[3] = (uint64_t)&unk_1000C3750;
  char v18 = _Block_copy(aBlock);
  [v17 addFinishBlock:v18];
  _Block_release(v18);

  id v19 = *(void **)(v1
                 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingController);
  *(void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingController) = v9;
  swift_unknownObjectRelease();
}

void sub_10002A5E0(char a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_1000D4368 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100008278(v3, (uint64_t)qword_1000D4FC0);
    swift_errorRetain();
    swift_errorRetain();
    id v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)id v6 = 136315138;
      swift_errorRetain();
      sub_100008E18((uint64_t *)&unk_1000D50A0);
      uint64_t v7 = String.init<A>(describing:)();
      sub_10005D8C8(v7, v8, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "HeadphoneMarketingUpsellViewController: view controller preload error: %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  if (qword_1000D4368 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100008278(v9, (uint64_t)qword_1000D4FC0);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    Swift::String v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)Swift::String v12 = 67109120;
    LODWORD(v13) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HeadphoneMarketingUpsellViewController: view controller preload complete: %{BOOL}d", v12, 8u);
    swift_slowDealloc();
  }
}

void sub_10002A8B8(uint64_t a1, uint64_t a2, void *a3)
{
  os_log_type_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_10002A930()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_marketingController];
  if (v1)
  {
    id v2 = v0;
    id v3 = v1;
    char v36 = [v3 view];
    [v0 addChildViewController:v3];
    [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v4 = [v0 contentView];
    [v4 addSubview:v36];

    id v5 = [self currentDevice];
    id v6 = [v5 userInterfaceIdiom];

    id v7 = [v2 contentView];
    [v7 cardStyle];

    id v8 = [v2 traitCollection];
    [v8 prx_cardSizeClass];

    PRXCardPreferredSize();
    if (v6 == (id)1) {
      double v10 = v9;
    }
    else {
      double v10 = v9 * 1.1;
    }
    id v11 = [v2 contentView];
    id v12 = [v11 mainContentGuide];

    uint64_t v13 = self;
    sub_100008E18((uint64_t *)&unk_1000D5090);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1000A2130;
    id v15 = [v2 contentView];
    id v16 = [v15 heightAnchor];

    id v17 = [v16 constraintEqualToConstant:v10];
    *(void *)(v14 + 32) = v17;
    id v18 = [v36 heightAnchor];
    id v19 = [v18 constraintEqualToConstant:v10];

    *(void *)(v14 + 40) = v19;
    id v20 = [v36 topAnchor];
    id v21 = [v12 topAnchor];
    id v22 = [v20 constraintEqualToAnchor:v21];

    *(void *)(v14 + 48) = v22;
    id v23 = [v36 leadingAnchor];
    id v24 = [v12 leadingAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24];

    *(void *)(v14 + 56) = v25;
    id v26 = [v36 trailingAnchor];
    id v27 = [v12 trailingAnchor];
    id v28 = [v26 constraintEqualToAnchor:v27];

    *(void *)(v14 + 64) = v28;
    id v29 = [v36 bottomAnchor];
    id v30 = [v12 bottomAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    *(void *)(v14 + 72) = v31;
    specialized Array._endMutation()();
    sub_10000A968();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v13 activateConstraints:isa];

    [v3 didMoveToParentViewController:v2];
  }
  else
  {
    if (qword_1000D4368 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_100008278(v33, (uint64_t)qword_1000D4FC0);
    char v36 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v34))
    {
      char v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v34, "HeadphoneMarketingUpsellViewController: Marketing controller was not initilized properly", v35, 2u);
      swift_slowDealloc();
    }
  }
}

id sub_10002AE90()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneMarketingUpsellViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for HeadphoneMarketingUpsellViewController()
{
  return self;
}

uint64_t sub_10002AF44()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_type);
}

uint64_t sub_10002AF54(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v23 = a3;
  swift_errorRetain();
  sub_100008E18(&qword_1000D5080);
  uint64_t v6 = String.init<A>(reflecting:)();
  unint64_t v8 = v7;
  if (qword_1000D4368 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100008278(v9, (uint64_t)qword_1000D4FC0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  double v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315394;
    swift_bridgeObjectRetain();
    sub_100008E18(&qword_1000D5088);
    uint64_t v13 = String.init<A>(reflecting:)();
    sub_10005D8C8(v13, v14, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10005D8C8(v6, v8, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HeadphoneMarketingUpsellViewController: delegate didResolveWith called %s with error:%s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  [a1 willMoveToParentViewController:0];
  id v15 = [a1 view];
  [v15 removeFromSuperview];

  id v16 = [v4 presentingViewController];
  [v16 removeFromParentViewController];

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    if (qword_1000D4480 != -1) {
      swift_once();
    }
    sub_100008278(v9, (uint64_t)qword_1000D69F0);
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Requested marketing upsell finished", v21, 2u);
      swift_slowDealloc();
    }

    uint64_t v22 = *(void *)(v18 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
    *(unsigned char *)(v22
             + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 112)) = 0;
    sub_10008ADE4(0);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10002B3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002B3F4()
{
  return swift_release();
}

uint64_t sub_10002B3FC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D50B0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D50B0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10002B4C4()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HeadphoneModel();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  double v10 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v108 - v11;
  v122.receiver = v1;
  v122.super_class = ObjectType;
  [super viewDidLoad];
  [v1 setDismissalType:1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = Strong + 16;
    swift_beginAccess();
    sub_10000C744(v14, (uint64_t)v120);
    swift_unknownObjectRelease();
    uint64_t v15 = v121;
    if (v121)
    {
      id v16 = sub_10000C80C(v120, v121);
      uint64_t v17 = *(void *)(v15 - 8);
      __chkstk_darwin(v16);
      id v19 = (uint64_t *)((char *)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v19);
      sub_10000C7AC((uint64_t)v120);
      uint64_t v20 = *v19;
      uint64_t v119 = v4;
      uint64_t v21 = v20 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      uint64_t v22 = v21;
      uint64_t v23 = v119;
      sub_10000C850(v22, (uint64_t)v10);
      (*(void (**)(uint64_t *, uint64_t))(v17 + 8))(v19, v15);
      sub_10000C8B4((uint64_t)v10, (uint64_t)v12);
      type metadata accessor for HeadphoneProxFeatureManager();
      static HeadphoneProxFeatureManager.shared.getter();
      id v24 = *(void (**)(void))(v23 + 104);
      unsigned int v117 = enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:);
      id v116 = (void (*)(unint64_t, void, uint64_t))v24;
      v24(v6);
      swift_bridgeObjectRetain();
      id v25 = (void *)dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
      id v27 = v26;
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v3);
      if (v25)
      {
        uint64_t v112 = v23 + 104;
        id v113 = v27;
        id v114 = v25;
        uint64_t v115 = v3;
        uint64_t v28 = *((void *)v12 + 16);
        uint64_t v29 = *((void *)v12 + 17);
        swift_bridgeObjectRetain();
        BOOL v30 = sub_10001E0E8(v28, v29);
        swift_bridgeObjectRelease();
        uint64_t v118 = v28;
        if (v30)
        {
          id v110 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneYodelFeaturesViewController_builder];
          sub_10001DB4C();
          char v32 = v31;
          id v33 = [objc_allocWithZone((Class)UIImageView) initWithImage:v31];
          id v34 = [self systemBlueColor];
          [v33 setTintColor:v34];

          [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v33 setContentMode:1];

          swift_bridgeObjectRetain();
          char v35 = (void *)sub_10001E340();
          char v37 = v36;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_10001E340();
          uint64_t v39 = v38;
          char v41 = v40;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          objc_allocWithZone((Class)type metadata accessor for ProxCardBulletView());
          id v42 = v33;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10006EE00(v42, v35, v37, v39, v41);
          char v43 = v110;
          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v43[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v28 = v118;
        }
        swift_bridgeObjectRetain();
        BOOL v44 = sub_10001D89C(v28, v29);
        swift_bridgeObjectRelease();
        id v111 = v12;
        if (v44)
        {
          id v110 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneYodelFeaturesViewController_builder];
          sub_10001DB14();
          char v46 = v45;
          id v47 = [objc_allocWithZone((Class)UIImageView) initWithImage:v45];
          id v48 = [self systemBlueColor];
          [v47 setTintColor:v48];

          [v47 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v47 setContentMode:1];

          char v49 = self;
          id v50 = [v49 mainBundle];
          v51._uint64_t countAndFlagsBits = 0xD000000000000020;
          v123._object = (void *)0xE000000000000000;
          v51._object = (void *)0x80000001000A7240;
          v52.value._uint64_t countAndFlagsBits = 0xD000000000000011;
          v52.value._object = (void *)0x80000001000A6610;
          v53._uint64_t countAndFlagsBits = 0;
          v53._object = (void *)0xE000000000000000;
          v123._uint64_t countAndFlagsBits = 0;
          Swift::String v54 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, v52, (NSBundle)v50, v53, v123);
          uint64_t countAndFlagsBits = (void *)v54._countAndFlagsBits;

          id v55 = [v49 mainBundle];
          v56._uint64_t countAndFlagsBits = 0xD000000000000023;
          v124._object = (void *)0xE000000000000000;
          v56._object = (void *)0x80000001000A7210;
          v57.value._uint64_t countAndFlagsBits = 0xD000000000000011;
          v57.value._object = (void *)0x80000001000A6610;
          v58._uint64_t countAndFlagsBits = 0;
          v58._object = (void *)0xE000000000000000;
          v124._uint64_t countAndFlagsBits = 0;
          Swift::String v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, v57, (NSBundle)v55, v58, v124);

          objc_allocWithZone((Class)type metadata accessor for ProxCardBulletView());
          id v60 = v47;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10006EE00(v60, countAndFlagsBits, v54._object, v59._countAndFlagsBits, v59._object);
          id v61 = v110;
          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v61[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v61[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v28 = v118;
          uint64_t v12 = v111;
        }
        swift_bridgeObjectRetain();
        BOOL v62 = sub_10001D880(v28, v29);
        swift_bridgeObjectRelease();
        if (v62)
        {
          id v110 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneYodelFeaturesViewController_builder];
          sub_10001DB30();
          unsigned int v64 = v63;
          id v65 = [objc_allocWithZone((Class)UIImageView) initWithImage:v63];
          id v66 = [self systemBlueColor];
          [v65 setTintColor:v66];

          [v65 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v65 setContentMode:1];

          id v67 = self;
          id v68 = [v67 mainBundle];
          v69._uint64_t countAndFlagsBits = 0xD000000000000026;
          v125._object = (void *)0xE000000000000000;
          v69._object = (void *)0x80000001000A71E0;
          v70.value._uint64_t countAndFlagsBits = 0xD000000000000011;
          v70.value._object = (void *)0x80000001000A6610;
          v71._uint64_t countAndFlagsBits = 0;
          v71._object = (void *)0xE000000000000000;
          v125._uint64_t countAndFlagsBits = 0;
          Swift::String v72 = NSLocalizedString(_:tableName:bundle:value:comment:)(v69, v70, (NSBundle)v68, v71, v125);
          uint64_t countAndFlagsBits = (void *)v72._countAndFlagsBits;

          id v73 = [v67 mainBundle];
          v74._uint64_t countAndFlagsBits = 0xD000000000000034;
          v126._object = (void *)0xE000000000000000;
          v74._object = (void *)0x80000001000A8410;
          v75.value._uint64_t countAndFlagsBits = 0xD000000000000011;
          v75.value._object = (void *)0x80000001000A6610;
          v76._uint64_t countAndFlagsBits = 0;
          v76._object = (void *)0xE000000000000000;
          v126._uint64_t countAndFlagsBits = 0;
          Swift::String v77 = NSLocalizedString(_:tableName:bundle:value:comment:)(v74, v75, (NSBundle)v73, v76, v126);

          objc_allocWithZone((Class)type metadata accessor for ProxCardBulletView());
          id v78 = v65;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10006EE00(v78, countAndFlagsBits, v72._object, v77._countAndFlagsBits, v77._object);
          id v79 = v110;
          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v79[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v79[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v12 = v111;
        }
        id v80 = (void *)sub_10006FC3C();
        id v81 = [v1 contentView];
        [v81 addSubview:v80];

        id v82 = [v1 contentView];
        id v83 = [v82 mainContentGuide];

        id v110 = self;
        sub_100008E18((uint64_t *)&unk_1000D5090);
        uint64_t v84 = swift_allocObject();
        *(_OWORD *)(v84 + 16) = xmmword_1000A2750;
        id v85 = [v80 topAnchor];
        id v86 = [v83 topAnchor];
        id v87 = [v85 constraintEqualToAnchor:v86];

        *(void *)(v84 + 32) = v87;
        id v88 = [v80 bottomAnchor];
        id v89 = [v83 bottomAnchor];
        id v90 = [v88 constraintLessThanOrEqualToAnchor:v89];

        *(void *)(v84 + 40) = v90;
        id v91 = [v80 leadingAnchor];
        id v92 = [v83 leadingAnchor];
        id v93 = [v91 constraintEqualToAnchor:v92];

        *(void *)(v84 + 48) = v93;
        id v94 = [v80 trailingAnchor];
        id v95 = [v83 trailingAnchor];
        id v96 = [v94 constraintEqualToAnchor:v95];

        *(void *)(v84 + 56) = v96;
        v120[0] = v84;
        specialized Array._endMutation()();
        sub_10000A968();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v110 activateConstraints:isa];

        sub_100008E18(&qword_1000D47A0);
        unint64_t v98 = (*(unsigned __int8 *)(v119 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v119 + 80);
        uint64_t v99 = swift_allocObject();
        *(_OWORD *)(v99 + 16) = xmmword_1000A19D0;
        v116(v99 + v98, v117, v115);
        swift_bridgeObjectRetain();
        swift_retain();
        dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)();

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1000D4370 != -1) {
          swift_once();
        }
        uint64_t v104 = type metadata accessor for Logger();
        sub_100008278(v104, (uint64_t)qword_1000D50B0);
        id v105 = Logger.logObject.getter();
        os_log_type_t v106 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v105, v106))
        {
          id v107 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v107 = 0;
          _os_log_impl((void *)&_mh_execute_header, v105, v106, "Yodel: HeadphoneYodelFeaturesViewController Payload is nil, exiting", v107, 2u);
          swift_slowDealloc();
        }
      }
      sub_10000C918((uint64_t)v12);
      return;
    }
    sub_10000C7AC((uint64_t)v120);
  }
  if (qword_1000D4370 != -1) {
    swift_once();
  }
  uint64_t v100 = type metadata accessor for Logger();
  sub_100008278(v100, (uint64_t)qword_1000D50B0);
  id v101 = Logger.logObject.getter();
  os_log_type_t v102 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v101, v102))
  {
    id v103 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v103 = 0;
    _os_log_impl((void *)&_mh_execute_header, v101, v102, "Yodel: HeadphoneYodelFeaturesViewController Headphone Model is nil, exiting", v103, 2u);
    swift_slowDealloc();
  }
}

void sub_10002C4B8(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&aBlock - v7;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong + 16;
    swift_beginAccess();
    sub_10000C744(v10, (uint64_t)&aBlock);
    swift_unknownObjectRelease();
    uint64_t v11 = v42;
    if (v42)
    {
      uint64_t v12 = sub_10000C80C(&aBlock, (uint64_t)v42);
      uint64_t v13 = *(v11 - 1);
      __chkstk_darwin(v12);
      uint64_t v15 = (void ***)((char *)&aBlock - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(void *))(v13 + 16))(v15);
      sub_10000C7AC((uint64_t)&aBlock);
      uint64_t v16 = *v15 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v16, (uint64_t)v6);
      (*(void (**)(void *, void *))(v13 + 8))(v15, v11);
      sub_10000C8B4((uint64_t)v6, (uint64_t)v8);
      sub_10002CAC4(a1);
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setTitle:v17];

      uint64_t v18 = *((void *)v8 + 16);
      uint64_t v19 = *((void *)v8 + 17);
      swift_bridgeObjectRetain();
      LOBYTE(v18) = sub_10001D89C(v18, v19);
      swift_bridgeObjectRelease();
      uint64_t v20 = &off_1000A1000;
      if (v18)
      {
        uint64_t v21 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_bridgeObjectRetain();
        swift_retain();
        NSString v22 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        char v43 = sub_10002D1F0;
        uint64_t v44 = v21;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v40 = 1107296256;
        char v41 = sub_100012FF0;
        id v42 = &unk_1000C3808;
        uint64_t v23 = _Block_copy(&aBlock);
        id v24 = [self actionWithTitle:v22 style:0 handler:v23];

        uint64_t v20 = &off_1000A1000;
        _Block_release(v23);
        swift_release();
        swift_release();
        id v25 = [v1 addAction:v24];

        swift_bridgeObjectRetain();
      }
      else
      {
        id v30 = [self mainBundle];
        v31._uint64_t countAndFlagsBits = 0xD000000000000016;
        v45._object = (void *)0xE000000000000000;
        v31._object = (void *)0x80000001000A83B0;
        v32.value._object = (void *)0x80000001000A6610;
        v32.value._uint64_t countAndFlagsBits = 0xD000000000000011;
        v33._uint64_t countAndFlagsBits = 0;
        v33._object = (void *)0xE000000000000000;
        v45._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v45);
      }
      uint64_t v34 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      NSString v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      char v43 = sub_10002D1D0;
      uint64_t v44 = v34;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v40 = *((void *)v20 + 318);
      char v41 = sub_100012FF0;
      id v42 = &unk_1000C37E0;
      char v36 = _Block_copy(&aBlock);
      id v37 = [self actionWithTitle:v35 style:1 handler:v36];

      _Block_release(v36);
      swift_release();
      swift_release();
      id v38 = [v1 addAction:v37];

      sub_10000C918((uint64_t)v8);
      return;
    }
    sub_10000C7AC((uint64_t)&aBlock);
  }
  if (qword_1000D4370 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_100008278(v26, (uint64_t)qword_1000D50B0);
  id v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Yodel: HeadphoneYodelFeaturesViewController Headphone Model is nil, exiting", v29, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10002CAC4(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  uint64_t v6 = type metadata accessor for HeadphoneModel();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v43 - v10 + 40;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_6;
  }
  uint64_t v13 = Strong + 16;
  swift_beginAccess();
  sub_10000C744(v13, (uint64_t)v43);
  swift_unknownObjectRelease();
  uint64_t v14 = v44;
  if (!v44)
  {
    sub_10000C7AC((uint64_t)v43);
LABEL_6:
    if (qword_1000D4370 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_100008278(v25, (uint64_t)qword_1000D50B0);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Yodel: title(_ viewModel Headphone Model is nil, exiting with default", v28, 2u);
      swift_slowDealloc();
    }

    goto LABEL_11;
  }
  id v42 = a1;
  uint64_t v15 = sub_10000C80C(v43, v44);
  uint64_t v16 = *(void *)(v14 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (void *)((char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0) + 40);
  (*(void (**)(void *))(v16 + 16))(v18);
  sub_10000C7AC((uint64_t)v43);
  uint64_t v19 = *v18 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  sub_10000C850(v19, (uint64_t)v9);
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v14);
  sub_10000C8B4((uint64_t)v9, (uint64_t)v11);
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v2);
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
  NSString v22 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v20)
  {

    unsigned int v23 = [v22 hearingProtectionRegionStatus];
    BOOL v24 = v23 == 2;
  }
  else
  {
    BOOL v24 = 0;
  }
  uint64_t v30 = *((void *)v11 + 16);
  uint64_t v31 = *((void *)v11 + 17);
  swift_bridgeObjectRetain();
  BOOL v32 = sub_10001D880(v30, v31);
  swift_bridgeObjectRelease();
  a1 = v42;
  if (!v24)
  {
    id v33 = [self mainBundle];
    unint64_t v34 = 0xD000000000000017;
    unint64_t v41 = 0xE000000000000000;
    NSString v35 = "YODEL_FEATURE_LSR_TITLE";
LABEL_18:
    unint64_t v36 = (unint64_t)(v35 - 32) | 0x8000000000000000;
    v37.value._object = (void *)0x80000001000A6610;
    v37.value._uint64_t countAndFlagsBits = 0xD000000000000011;
    v38._uint64_t countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    uint64_t v39 = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v34, v37, (NSBundle)v33, v38, *(Swift::String *)(&v41 - 1))._countAndFlagsBits;

    sub_10000C918((uint64_t)v11);
    return countAndFlagsBits;
  }
  if (!v32)
  {
    id v33 = [self mainBundle];
    unint64_t v34 = 0xD000000000000013;
    unint64_t v41 = 0xE000000000000000;
    NSString v35 = "YODEL_PROTECT_TITLE";
    goto LABEL_18;
  }
  sub_10000C918((uint64_t)v11);
LABEL_11:
  uint64_t countAndFlagsBits = *a1;
  swift_bridgeObjectRetain();
  return countAndFlagsBits;
}

void sub_10002CFD4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10009D2C0();
      swift_unknownObjectRelease();
    }
  }
}

void sub_10002D048()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008ADE4(0);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneYodelFeaturesViewController()
{
  return self;
}

uint64_t sub_10002D188()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneYodelFeaturesViewController_type);
}

uint64_t sub_10002D198()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10002D1D0()
{
}

uint64_t sub_10002D1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002D1E8()
{
  return swift_release();
}

void sub_10002D1F0()
{
}

id sub_10002D1F8(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneYodelFeaturesViewController_headphoneProxFeatureManager;
  type metadata accessor for HeadphoneProxFeatureManager();
  uint64_t v5 = v1;
  *(void *)&v1[v4] = static HeadphoneProxFeatureManager.shared.getter();
  uint64_t v6 = OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneYodelFeaturesViewController_builder;
  type metadata accessor for ProxBulltedListBuilder();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v5[v6] = v7;
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneYodelFeaturesViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneYodelFeaturesViewController_type] = 30;

  v9.receiver = v5;
  v9.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_10002D2DC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D5110);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D5110);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10002D3A4()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController____lazy_storage___imageView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController____lazy_storage___imageView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController____lazy_storage___imageView);
  }
  else
  {
    sub_10002D404();
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_10002D404()
{
  if (qword_1000D4420 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1000D9268;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self _systemImageNamed:v1 withConfiguration:v0];

  if (v2)
  {
    id v3 = [objc_allocWithZone((Class)UIImageView) initWithImage:v2];
    id v4 = [self systemBlueColor];
    [v3 setTintColor:v4];

    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v3 setContentMode:1];
  }
  else
  {
    __break(1u);
  }
}

id sub_10002D550()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController____lazy_storage___topAsset;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController____lazy_storage___topAsset);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController____lazy_storage___topAsset);
  }
  else
  {
    id v4 = sub_10002D5B4();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10002D5B4()
{
  id v0 = [objc_allocWithZone((Class)UIView) init];
  id v1 = sub_10002D3A4();
  [v0 addSubview:v1];

  id v2 = sub_10002D3A4();
  [v2 pinToOther:v0];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v0 heightAnchor];
  id v4 = [v3 constraintEqualToConstant:180.0];

  [v4 setActive:1];
  return v0;
}

uint64_t sub_10002D6A8()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_100008E18(&qword_1000D4CC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v24 = (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25.receiver = v1;
  v25.super_class = ObjectType;
  [super viewDidLoad];
  [v1 setDismissalType:1];
  id v5 = [v1 contentView];
  id v6 = sub_10002D550();
  [v5 addSubview:v6];

  id v7 = sub_10002D550();
  id v8 = [v1 contentView];
  id v9 = [v8 mainContentGuide];

  [v7 pinToOtherWithLayoutGuide:v9];
  uint64_t v10 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_model];
  swift_beginAccess();
  uint64_t v11 = type metadata accessor for HeadphoneModel();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  uint64_t v22 = v12 + 48;
  unsigned int v23 = v13;
  uint64_t result = v13(v10, 1, v11);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_100008E18(&qword_1000D47A0);
    uint64_t v15 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
    uint64_t v16 = *(void *)(v15 - 8);
    unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1000A19D0;
    (*(void (**)(unint64_t, void, uint64_t))(v16 + 104))(v18 + v17, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v15);
    swift_bridgeObjectRetain();
    dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v24;
    sub_10001A248(v10, v24, &qword_1000D4CC0);
    uint64_t result = v23(v19, 1, v11);
    if (result != 1)
    {
      type metadata accessor for HeadphoneYodelHearingProtectionViewController();
      uint64_t v20 = &v1[OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_presenter];
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      sub_10001AF4C(v1, v19, Strong, *((void *)v20 + 1));
      swift_unknownObjectRelease();
      return sub_10000C918(v19);
    }
  }
  __break(1u);
  return result;
}

void sub_10002DAD8()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100008E18(&qword_1000D4CC0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HeadphoneModel();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v60 - v14;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v68 = v9;
    uint64_t v17 = Strong + 16;
    swift_beginAccess();
    sub_10001A248(v17, (uint64_t)&aBlock, &qword_1000D4798);
    swift_unknownObjectRelease();
    uint64_t v18 = v72;
    if (v72)
    {
      id v65 = v5;
      uint64_t v66 = v3;
      uint64_t v67 = v2;
      uint64_t v19 = sub_10000C80C(&aBlock, (uint64_t)v72);
      uint64_t v20 = (uint64_t)v15;
      uint64_t v21 = *(v18 - 1);
      __chkstk_darwin(v19);
      unsigned int v23 = (uint64_t *)((char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(void *))(v21 + 16))(v23);
      sub_10001A2AC((uint64_t)&aBlock, &qword_1000D4798);
      uint64_t v24 = *v23 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v24, (uint64_t)v13);
      (*(void (**)(void *, void *))(v21 + 8))(v23, v18);
      sub_10000C8B4((uint64_t)v13, v20);
      uint64_t v64 = v20;
      sub_10000C850(v20, (uint64_t)v8);
      uint64_t v25 = v68;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v68);
      uint64_t v26 = (uint64_t)v1
          + OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_model;
      swift_beginAccess();
      sub_10001A308((uint64_t)v8, v26);
      swift_endAccess();
      sub_10002E3F8();
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setTitle:v27];

      sub_10002E690();
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setSubtitle:v28];

      uint64_t v29 = self;
      id v30 = [v29 mainBundle];
      v31._uint64_t countAndFlagsBits = 0xD000000000000018;
      v75._object = (void *)0xE000000000000000;
      v31._object = (void *)0x80000001000A84B0;
      unint64_t v61 = (unint64_t)"YODEL_WHATS_NEW_LSR_SUBTITLE";
      v32.value._object = (void *)0x80000001000A6610;
      v32.value._uint64_t countAndFlagsBits = 0xD000000000000011;
      v33._uint64_t countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      v75._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v75);

      uint64_t v34 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      NSString v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v73 = sub_10002EDC8;
      uint64_t v74 = v34;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v70 = 1107296256;
      Swift::String v71 = sub_100012FF0;
      Swift::String v72 = &unk_1000C3898;
      unint64_t v36 = _Block_copy(&aBlock);
      id v62 = self;
      id v63 = [v62 actionWithTitle:v35 style:0 handler:v36];

      _Block_release(v36);
      swift_release();
      swift_release();
      type metadata accessor for HeadphoneProxFeatureManager();
      static HeadphoneProxFeatureManager.shared.getter();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v26, 1, v25) == 1)
      {
        __break(1u);
      }
      else
      {
        Swift::String_optional v37 = v65;
        uint64_t v38 = v66;
        uint64_t v39 = v67;
        (*(void (**)(char *, void, uint64_t))(v66 + 104))(v65, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v67);
        swift_bridgeObjectRetain();
        uint64_t v40 = (void *)dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
        id v42 = v41;
        swift_release();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
        if (v40
          && (v40,
              unsigned int v43 = [v42 hearingProtectionRegionStatus],
              v42,
              v43 == 2))
        {
          id v44 = [v29 mainBundle];
          unint64_t v45 = 0xD000000000000023;
          char v46 = "YODEL_YODEL_SWITCH_MODE_SKIP_BUTTON";
        }
        else
        {
          id v44 = [v29 mainBundle];
          unint64_t v45 = 0xD000000000000027;
          char v46 = "YODEL_YODEL_LSR_SWITCH_MODE_SKIP_BUTTON";
        }
        v76._object = (void *)0xE000000000000000;
        unint64_t v47 = (unint64_t)(v46 - 32) | 0x8000000000000000;
        v48.value._object = (void *)(v61 | 0x8000000000000000);
        v48.value._uint64_t countAndFlagsBits = 0xD000000000000011;
        v49._uint64_t countAndFlagsBits = 0;
        v49._object = (void *)0xE000000000000000;
        v76._uint64_t countAndFlagsBits = 0;
        NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v45, v48, (NSBundle)v44, v49, v76);

        uint64_t v50 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_retain();
        NSString v51 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v73 = sub_10002EDE8;
        uint64_t v74 = v50;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v70 = 1107296256;
        Swift::String v71 = sub_100012FF0;
        Swift::String v72 = &unk_1000C38C0;
        Swift::String_optional v52 = _Block_copy(&aBlock);
        id v53 = [v62 actionWithTitle:v51 style:1 handler:v52];

        _Block_release(v52);
        swift_release();
        swift_release();
        Swift::String v54 = v63;

        id v55 = [v1 addAction:v53];
        sub_10000C918(v64);
      }
      return;
    }
    sub_10001A2AC((uint64_t)&aBlock, &qword_1000D4798);
  }
  if (qword_1000D4378 != -1) {
    swift_once();
  }
  uint64_t v56 = type metadata accessor for Logger();
  sub_100008278(v56, (uint64_t)qword_1000D5110);
  Swift::String_optional v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v57, v58))
  {
    Swift::String v59 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v59 = 0;
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Hearing Protection: Headphone Model is nil, exiting", v59, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10002E3F8()
{
  uint64_t v1 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  uint64_t v5 = v0 + OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_model;
  swift_beginAccess();
  uint64_t v6 = type metadata accessor for HeadphoneModel();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v1);
    swift_bridgeObjectRetain();
    id v8 = (void *)dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
    uint64_t v10 = v9;
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v8
      && (v8,
          unsigned int v11 = [v10 hearingProtectionRegionStatus],
          v10,
          v11 == 2))
    {
      id v12 = [self mainBundle];
      unint64_t v13 = 0xD000000000000017;
      unint64_t v20 = 0xE000000000000000;
      uint64_t v14 = "YODEL_SWITCH_MODE_TITLE";
    }
    else
    {
      id v12 = [self mainBundle];
      unint64_t v13 = 0xD00000000000001BLL;
      unint64_t v20 = 0xE000000000000000;
      uint64_t v14 = "YODEL_LSR_SWITCH_MODE_TITLE";
    }
    unint64_t v15 = (unint64_t)(v14 - 32) | 0x8000000000000000;
    v16.value._object = (void *)0x80000001000A6610;
    v16.value._uint64_t countAndFlagsBits = 0xD000000000000011;
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    uint64_t v18 = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v13, v16, (NSBundle)v12, v17, *(Swift::String *)(&v20 - 1))._countAndFlagsBits;

    return countAndFlagsBits;
  }
  return result;
}

uint64_t sub_10002E690()
{
  uint64_t v1 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  uint64_t v5 = v0 + OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_model;
  swift_beginAccess();
  uint64_t v6 = type metadata accessor for HeadphoneModel();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v1);
    swift_bridgeObjectRetain();
    id v8 = (void *)dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
    uint64_t v10 = v9;
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v8
      && (v8,
          unsigned int v11 = [v10 hearingProtectionRegionStatus],
          v10,
          v11 == 2))
    {
      id v12 = [self mainBundle];
      unint64_t v13 = 0xD00000000000001ALL;
      unint64_t v20 = 0xE000000000000000;
      uint64_t v14 = "YODEL_SWITCH_MODE_SUBTITLE";
    }
    else
    {
      id v12 = [self mainBundle];
      unint64_t v13 = 0xD00000000000001ELL;
      unint64_t v20 = 0xE000000000000000;
      uint64_t v14 = "YODEL_LSR_SWITCH_MODE_SUBTITLE";
    }
    unint64_t v15 = (unint64_t)(v14 - 32) | 0x8000000000000000;
    v16.value._object = (void *)0x80000001000A6610;
    v16.value._uint64_t countAndFlagsBits = 0xD000000000000011;
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    uint64_t v18 = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v13, v16, (NSBundle)v12, v17, *(Swift::String *)(&v20 - 1))._countAndFlagsBits;

    return countAndFlagsBits;
  }
  return result;
}

uint64_t sub_10002E928()
{
  id v0 = [objc_allocWithZone((Class)AADeviceConfig) init];
  [v0 setListeningModeOffAllowed:2];
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_4;
  }
  uint64_t v2 = (void *)Strong;
  uint64_t v3 = Strong + OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_model;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for HeadphoneModel();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4);
  if (result != 1)
  {
    uint64_t v6 = *(void *)(v3 + 136);
    swift_bridgeObjectRetain();

    if (v6)
    {
LABEL_5:
      swift_retain();
      dispatch thunk of HeadphoneProxFeatureManager.updateDevice(for:deviceAddress:usecase:completion:)();
      swift_bridgeObjectRelease();
      swift_release();

      return swift_release();
    }
LABEL_4:
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_10002EAB8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008F158();
      swift_unknownObjectRelease();
    }
  }
}

void sub_10002EB2C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008F158();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10002EC6C()
{
  return type metadata accessor for HeadphoneYodelHearingSwitchListeningModeViewController();
}

uint64_t type metadata accessor for HeadphoneYodelHearingSwitchListeningModeViewController()
{
  uint64_t result = qword_1000D5168;
  if (!qword_1000D5168) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10002ECC0()
{
  sub_100019F2C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10002ED80()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_type);
}

uint64_t sub_10002ED90()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10002EDC8()
{
  return sub_10002E928();
}

uint64_t sub_10002EDD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10002EDE0()
{
  return swift_release();
}

void sub_10002EDE8()
{
}

void sub_10002EDF0()
{
}

id sub_10002EDF8(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_featureManager;
  type metadata accessor for HeadphoneProxFeatureManager();
  uint64_t v5 = v1;
  *(void *)&v1[v4] = static HeadphoneProxFeatureManager.shared.getter();
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController____lazy_storage___imageView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController____lazy_storage___topAsset] = 0;
  uint64_t v6 = &v5[OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_model];
  uint64_t v7 = type metadata accessor for HeadphoneModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_presenter
               + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_type] = 31;

  v9.receiver = v5;
  v9.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t getEnumTagSinglePayload for HeadphoneViewType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE0) {
    goto LABEL_17;
  }
  if (a2 + 32 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 32) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 32;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 32;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 32;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x21;
  int v8 = v6 - 33;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HeadphoneViewType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 32 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 32) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDF)
  {
    unsigned int v6 = ((a2 - 224) >> 8) + 1;
    *uint64_t result = a2 + 32;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10002F070);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 32;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneViewType()
{
  return &type metadata for HeadphoneViewType;
}

unint64_t sub_10002F0AC()
{
  unint64_t result = qword_1000D5178;
  if (!qword_1000D5178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5178);
  }
  return result;
}

uint64_t sub_10002F100()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D5180);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D5180);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10002F234()
{
  uint64_t v1 = v0;
  id v72 = [objc_allocWithZone((Class)ACAccountStore) init];
  id v2 = [v72 aa_primaryAppleAccount];
  if (!v2)
  {
    if (qword_1000D4380 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100008278(v11, (uint64_t)qword_1000D5180);
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "No iCloud account.", v14, 2u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectRelease();
      if (Strong)
      {
        if (qword_1000D43C8 != -1) {
          swift_once();
        }
        sub_100008278(v11, (uint64_t)qword_1000D55E0);
        Swift::String_optional v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v18 = 0;
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "Showing battery view", v18, 2u);
          swift_slowDealloc();
        }

        uint64_t v19 = *(void **)(Strong + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
        if (v19)
        {
          id v20 = v19;
          uint64_t v70 = sub_100089998();
          [v20 pushViewController:v70 animated:1];
          swift_unknownObjectRelease();

          uint64_t v21 = v70;
LABEL_45:

          return;
        }
        swift_unknownObjectRelease();
      }
    }
    uint64_t v21 = (char *)v72;
    goto LABEL_45;
  }
  int v3 = v2;
  id v4 = [objc_allocWithZone((Class)AAUIProfilePictureStore) initWithAppleAccount:v2 grandSlamAccount:0 accountStore:v72];
  id v5 = [v4 profilePictureForAccountOwner];
  id v6 = [v3 username];
  if (v6)
  {
    BOOL v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  uint64_t v22 = (uint64_t *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_appleIDInfo);
  unsigned int v23 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_appleIDInfo + 16);
  uint64_t *v22 = v8;
  v22[1] = v10;
  v22[2] = (uint64_t)v5;
  v22[3] = 0;
  v22[4] = 0;
  id v24 = v5;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  id v25 = [self sharedInstance];
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v3 accountPropertyForKey:v26];

  if (v27)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)Swift::String v75 = 0u;
    long long v76 = 0u;
  }
  sub_100030F54((uint64_t)v75, (uint64_t)&v77);
  if (!*((void *)&v78 + 1))
  {
    sub_100030FBC((uint64_t)&v77);
LABEL_26:
    if (qword_1000D4380 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_100008278(v33, (uint64_t)qword_1000D5180);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      unint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "altDSID not available", v36, 2u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v37 = swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectRelease();
      if (v37)
      {
        if (qword_1000D43C8 != -1) {
          swift_once();
        }
        sub_100008278(v33, (uint64_t)qword_1000D55E0);
        uint64_t v38 = Logger.logObject.getter();
        os_log_type_t v39 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v38, v39))
        {
          uint64_t v40 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v40 = 0;
          _os_log_impl((void *)&_mh_execute_header, v38, v39, "Showing battery view", v40, 2u);
          swift_slowDealloc();
        }

        unint64_t v41 = *(void **)(v37 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
        if (v41)
        {
          id v42 = v41;
          unsigned int v43 = sub_100089998();
          [v42 pushViewController:v43 animated:1];
          swift_unknownObjectRelease();

          return;
        }
        swift_unknownObjectRelease();
      }
    }
LABEL_64:

LABEL_65:
    return;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_26;
  }
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v29 = [v25 authKitAccountWithAltDSID:v28];

  if (!v29)
  {
    if (qword_1000D4380 != -1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    sub_100008278(v44, (uint64_t)qword_1000D5180);
    unint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      unint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "No AppleID account", v47, 2u);
      swift_slowDealloc();

      return;
    }

    goto LABEL_64;
  }
  id v30 = [v25 additionalInfoForAccount:v29];
  if (v30)
  {
    Swift::String v31 = v30;
    Swift::String_optional v32 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    Swift::String_optional v32 = 0;
  }
  Swift::String v69 = v4;
  unsigned int v67 = [v25 phoneAsAppleIDForAccount:v29];
  if (qword_1000D4380 != -1) {
    swift_once();
  }
  uint64_t v48 = type metadata accessor for Logger();
  sub_100008278(v48, (uint64_t)qword_1000D5180);
  swift_bridgeObjectRetain_n();
  Swift::String v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  Swift::String v71 = v24;
  uint64_t v68 = v25;
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    *(void *)&long long v77 = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 136315394;
    v75[0] = v32;
    swift_bridgeObjectRetain();
    sub_100008E18(&qword_1000D51E0);
    uint64_t v52 = String.init<A>(reflecting:)();
    v75[0] = (id)sub_10005D8C8(v52, v53, (uint64_t *)&v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 1024;
    LODWORD(v75[0]) = v67;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "Additional account info: %s, MAKO: %{BOOL}d", (uint8_t *)v51, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!v32) {
      goto LABEL_58;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if (!v32)
    {
LABEL_58:
      long long v77 = 0u;
      long long v78 = 0u;
LABEL_59:
      sub_100030FBC((uint64_t)&v77);
LABEL_60:
      swift_bridgeObjectRetain();
      uint64_t v56 = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v56, v57))
      {
        os_log_type_t v58 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v77 = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v58 = 136315138;
        v75[0] = v32;
        swift_bridgeObjectRetain();
        sub_100008E18(&qword_1000D51E0);
        uint64_t v59 = String.init<A>(reflecting:)();
        v75[0] = (id)sub_10005D8C8(v59, v60, (uint64_t *)&v77);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v56, v57, "Failed to decode phone number from: %s", v58, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }

      swift_bridgeObjectRelease_n();
      goto LABEL_65;
    }
  }
  if (!v32[2]) {
    goto LABEL_58;
  }
  swift_bridgeObjectRetain();
  unint64_t v54 = sub_10001D4A0(0x6D754E656E6F6870, 0xEC00000073726562);
  if (v55)
  {
    sub_10003101C(v32[7] + 32 * v54, (uint64_t)&v77);
  }
  else
  {
    long long v77 = 0u;
    long long v78 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v78 + 1)) {
    goto LABEL_59;
  }
  sub_100008EB0(0, &qword_1000D51E8);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_60;
  }
  id v61 = v75[0];
  if ([v75[0] firstObject])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)Swift::String v75 = 0u;
    long long v76 = 0u;
  }
  sub_100030F54((uint64_t)v75, (uint64_t)&v77);
  if (!*((void *)&v78 + 1))
  {

    goto LABEL_59;
  }
  sub_100008EB0(0, &qword_1000D51F0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_60;
  }
  v75[0] = (id)0x6D754E656E6F6870;
  v75[1] = (id)0xEB00000000726562;
  id v62 = [v73 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();
  if (v62)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)Swift::String v75 = 0u;
    long long v76 = 0u;
  }
  sub_100030F54((uint64_t)v75, (uint64_t)&v77);
  if (!*((void *)&v78 + 1))
  {

    sub_100030FBC((uint64_t)&v77);
    goto LABEL_60;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_60;
  }
  if (v67)
  {

    swift_bridgeObjectRelease();
    goto LABEL_60;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  id v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v63, v64))
  {
    id v65 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v77 = swift_slowAlloc();
    *(_DWORD *)id v65 = 136315138;
    swift_bridgeObjectRetain();
    v75[0] = (id)sub_10005D8C8((uint64_t)v73, v74, (uint64_t *)&v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    unint64_t v66 = v74;
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "Phone number: %s", v65, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    unint64_t v66 = v74;
    swift_bridgeObjectRelease_n();
  }
  v22[3] = (uint64_t)v73;
  v22[4] = v66;

  swift_bridgeObjectRelease();
}

void sub_100030118(uint64_t a1)
{
  id v2 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 setTitle:v4];

  if (*(void *)(a1 + 88)) {
    NSString v5 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v5 = 0;
  }
  [v2 setBottomTrayTitle:v5];

  sub_10002F234();
  id v6 = [objc_allocWithZone((Class)UIImageView) init];
  id v70 = v2;
  BOOL v7 = &v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_appleIDInfo];
  uint64_t v8 = (void *)*((void *)v7 + 2);
  if (v8)
  {
    id v9 = (id)*((void *)v7 + 2);
  }
  else
  {
    NSString v10 = String._bridgeToObjectiveC()();
    id v9 = [self systemImageNamed:v10];

    uint64_t v8 = 0;
  }
  id v11 = v8;
  [v6 setImage:v9];

  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v12 = *((void *)v7 + 1);
  uint64_t v13 = *((void *)v7 + 4);
  Swift::String v69 = v6;
  sub_100008E18(&qword_1000D4560);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A19D0;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  unint64_t v15 = self;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  Swift::String_optional v16 = NSForegroundColorAttributeName;
  id v67 = v15;
  id v17 = [v15 labelColor];
  uint64_t v18 = sub_100008EB0(0, (unint64_t *)&qword_1000D47F8);
  *(void *)(inited + 64) = v18;
  *(void *)(inited + 40) = v17;
  sub_100089034(inited);
  id v19 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100030EA4();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v71 = [v19 initWithString:v20 attributes:isa];

  if (v12)
  {
    swift_bridgeObjectRelease();
    if (v13)
    {
      id v22 = objc_allocWithZone((Class)NSAttributedString);
      NSString v23 = String._bridgeToObjectiveC()();
      id v24 = [v22 initWithString:v23];

      [v71 appendAttributedString:v24];
    }
  }
  uint64_t v25 = swift_initStackObject();
  *(_OWORD *)(v25 + 16) = xmmword_1000A19D0;
  *(void *)(v25 + 32) = v16;
  NSString v26 = v16;
  id v27 = [v67 secondaryLabelColor];
  *(void *)(v25 + 64) = v18;
  *(void *)(v25 + 40) = v27;
  sub_100089034(v25);
  id v28 = objc_allocWithZone((Class)NSAttributedString);
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class v30 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v31 = [v28 initWithString:v29 attributes:v30];

  [v71 appendAttributedString:v31];
  id v32 = [objc_allocWithZone((Class)UILabel) init];
  [v32 setAttributedText:v71];
  id v33 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v32 setFont:v33];

  [v32 setTextAlignment:1];
  [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v34 = [v70 contentView];
  [v34 addSubview:v69];

  id v35 = [v70 contentView];
  [v35 addSubview:v32];

  id v36 = [v70 contentView];
  id v37 = [v36 mainContentGuide];

  id v68 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1000A31C0;
  id v39 = [v69 widthAnchor];
  id v40 = [v39 constraintEqualToConstant:80.0];

  *(void *)(v38 + 32) = v40;
  id v41 = [v69 heightAnchor];
  id v42 = [v41 constraintEqualToConstant:80.0];

  *(void *)(v38 + 40) = v42;
  id v43 = [v69 topAnchor];
  id v44 = [v37 topAnchor];
  id v45 = [v43 constraintGreaterThanOrEqualToAnchor:v44];

  *(void *)(v38 + 48) = v45;
  id v46 = [v69 centerXAnchor];
  id v47 = [v37 centerXAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47];

  *(void *)(v38 + 56) = v48;
  id v49 = [v32 topAnchor];
  id v50 = [v69 bottomAnchor];
  id v51 = [v49 constraintEqualToAnchor:v50 constant:10.0];

  *(void *)(v38 + 64) = v51;
  id v52 = [v32 leadingAnchor];
  id v53 = [v37 leadingAnchor];
  id v54 = [v52 constraintEqualToAnchor:v53];

  *(void *)(v38 + 72) = v54;
  id v55 = [v32 trailingAnchor];
  id v56 = [v37 trailingAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56];

  *(void *)(v38 + 80) = v57;
  id v58 = [v32 bottomAnchor];
  id v59 = [v37 bottomAnchor];
  id v60 = [v58 constraintEqualToAnchor:v59];

  *(void *)(v38 + 88) = v60;
  specialized Array._endMutation()();
  sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
  Class v61 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v68 activateConstraints:v61];

  uint64_t v62 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v63 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100030F34;
  aBlock[5] = v62;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FF0;
  aBlock[3] = &unk_1000C39E0;
  os_log_type_t v64 = _Block_copy(aBlock);
  id v65 = [self actionWithTitle:v63 style:0 handler:v64];

  _Block_release(v64);
  swift_release();
  swift_release();
  id v66 = [v70 addAction:v65];
}

void sub_100030B0C()
{
  if (qword_1000D4380 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100008278(v0, (uint64_t)qword_1000D5180);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)int v3 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Continue Linking pressed in %ld", v3, 0xCu);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      sub_100008278(v0, (uint64_t)qword_1000D69F0);
      BOOL v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        id v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Requested to continue from Linking", v9, 2u);
        swift_slowDealloc();
      }

      uint64_t v10 = *(void *)(v6 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(unsigned char *)(v10
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 92)) = 0;
      sub_10008ADE4(0);
      swift_unknownObjectRelease();
    }
  }
}

id sub_100030DD4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadphoneLinkingViewController();
  [super dealloc];
}

uint64_t type metadata accessor for HeadphoneLinkingViewController()
{
  return self;
}

uint64_t sub_100030E94()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_type);
}

unint64_t sub_100030EA4()
{
  unint64_t result = qword_1000D4570;
  if (!qword_1000D4570)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4570);
  }
  return result;
}

uint64_t sub_100030EFC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100030F34()
{
}

uint64_t sub_100030F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100030F4C()
{
  return swift_release();
}

uint64_t sub_100030F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D51D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100030FBC(uint64_t a1)
{
  uint64_t v2 = sub_100008E18(&qword_1000D51D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10003101C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_100031078(char a1, double a2)
{
  id v5 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v5 setNumberStyle:3];
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  id v7 = [v5 stringForObjectValue:isa];

  if (v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v8 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v25 = [v8 initWithString:v9];

  uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_position];
  uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_position + 8];
  switch(v11)
  {
    case 0:
    case 3:
      break;
    default:
      uint64_t v12 = self;
      sub_100031F30(v10, v11);
      id v13 = [v12 configurationWithScale:1];
      id v14 = [objc_allocWithZone((Class)NSTextAttachment) init];
      id v15 = v13;
      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v17 = [self _systemImageNamed:v16 withConfiguration:v15];

      if (v17)
      {
        id v18 = [v17 imageWithRenderingMode:2];
      }
      else
      {
        id v18 = 0;
      }
      [v14 setImage:v18];

      id v19 = objc_allocWithZone((Class)NSAttributedString);
      NSString v20 = String._bridgeToObjectiveC()();
      id v21 = [v19 initWithString:v20];

      [v25 insertAttributedString:v21 atIndex:0];
      id v22 = [self attributedStringWithAttachment:v14];
      [v25 insertAttributedString:v22 atIndex:0];

      break;
  }
  NSString v23 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryPercentageLabel];
  [v23 setAttributedText:v25];
  id v24 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryView];
  [v24 setChargePercent:a2];
  [v24 setChargingState:a1 & 1];
  [v24 setHidden:a2 == 0.0];
  [v23 setHidden:a2 == 0.0];
  [v2 setNeedsLayout];
}

char *sub_10003143C(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v9 = objc_allocWithZone((Class)UILabel);
  uint64_t v10 = v4;
  id v11 = [v9 init];
  *(void *)&v10[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryPercentageLabel] = v11;
  id v12 = [objc_allocWithZone((Class)_UIBatteryView) init];
  *(void *)&v10[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryView] = v12;
  id v13 = &v10[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_position];
  *(void *)id v13 = a1;
  *((void *)v13 + 1) = a2;

  v66.receiver = v10;
  v66.super_class = ObjectType;
  id v14 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v15 = OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryPercentageLabel;
  NSString v16 = *(void **)&v14[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryPercentageLabel];
  id v17 = v14;
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v16 setAdjustsFontForContentSizeCategory:1];
  id v18 = self;
  id v19 = v16;
  id v20 = [v18 preferredFontForTextStyle:UIFontTextStyleBody];
  [v19 setFont:v20];

  id v21 = *(void **)&v14[v15];
  [v21 setNumberOfLines:0];
  id v22 = self;
  id v23 = v21;
  id v24 = [v22 labelColor];
  [v23 setTextColor:v24];

  id v25 = *(void **)&v14[v15];
  [v25 setTextAlignment:1];
  [v17 addSubview:v25];
  uint64_t v26 = OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryView;
  id v27 = *(void **)&v17[OBJC_IVAR____TtC20HeadphoneProxService19LabelledBatteryView_batteryView];
  [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v27 setSizeCategory:1];
  id v28 = v27;
  id v29 = [v22 systemGreenColor];
  [v28 setFillColor:v29];

  Class v30 = *(void **)&v17[v26];
  [v30 setChargePercent:a4];
  id v31 = v30;
  id v32 = [v22 tertiaryLabelColor];
  [v31 setBodyColor:v32];

  id v33 = *(void **)&v17[v26];
  [v33 setChargingState:a3 & 1];
  [v33 setShowsInlineChargingIndicator:1];
  [v17 addSubview:v33];
  id v64 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1000A19E0;
  id v35 = [v33 topAnchor];
  id v36 = [v17 topAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v34 + 32) = v37;
  id v38 = [*(id *)&v17[v26] leadingAnchor];
  id v39 = [v17 leadingAnchor];
  id v40 = [v38 constraintGreaterThanOrEqualToAnchor:v39];

  *(void *)(v34 + 40) = v40;
  id v41 = [*(id *)&v17[v26] trailingAnchor];
  id v42 = [v17 trailingAnchor];
  id v43 = [v41 constraintLessThanOrEqualToAnchor:v42];

  *(void *)(v34 + 48) = v43;
  id v44 = [*(id *)&v17[v26] centerXAnchor];
  id v45 = [v17 centerXAnchor];
  id v46 = [v44 constraintEqualToAnchor:v45];

  *(void *)(v34 + 56) = v46;
  id v47 = [*(id *)&v14[v15] topAnchor];
  id v48 = [*(id *)&v17[v26] bottomAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48 constant:5.0];

  *(void *)(v34 + 64) = v49;
  id v50 = [*(id *)&v14[v15] leadingAnchor];
  id v51 = [v17 leadingAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51];

  *(void *)(v34 + 72) = v52;
  id v53 = [*(id *)&v14[v15] trailingAnchor];
  id v54 = [v17 trailingAnchor];
  id v55 = [v53 constraintEqualToAnchor:v54];

  *(void *)(v34 + 80) = v55;
  id v56 = [*(id *)&v14[v15] centerXAnchor];
  id v57 = [*(id *)&v17[v26] centerXAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57];

  *(void *)(v34 + 88) = v58;
  id v59 = [*(id *)&v14[v15] bottomAnchor];
  id v60 = [v17 bottomAnchor];
  id v61 = [v59 constraintEqualToAnchor:v60];

  *(void *)(v34 + 96) = v61;
  specialized Array._endMutation()();
  sub_10000A968();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v64 activateConstraints:isa];

  sub_100031078(a3, a4);
  return v17;
}

uint64_t type metadata accessor for LabelledBatteryView()
{
  return self;
}

unint64_t destroy for LabelledBatteryView.Position(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if ((v2 + 1) <= 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s20HeadphoneProxService19LabelledBatteryViewC8PositionOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = *(void *)(a2 + 8);
  }
  if ((v4 + 1) > 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for LabelledBatteryView.Position(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  unsigned int v6 = v5 + 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  unsigned int v7 = v4 + 1;
  if (v6 > 1)
  {
    if (v7 <= 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_12:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LabelledBatteryView.Position(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if ((v5 + 1) > 1) {
    goto LABEL_9;
  }
  unint64_t v6 = *(void *)(a2 + 8);
  LODWORD(v7) = -1;
  if (v6 < 0xFFFFFFFF) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  if ((v7 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LabelledBatteryView.Position(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 3) {
    return (v3 - 2);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LabelledBatteryView.Position(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_100031ED0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_100031EF0(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = 0;
    result[1] = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LabelledBatteryView.Position()
{
  return &type metadata for LabelledBatteryView.Position;
}

uint64_t sub_100031F30(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100031F48(uint64_t a1, uint64_t a2)
{
  if (a2 != 3) {
    return sub_100031F58(a1, a2);
  }
  return a1;
}

uint64_t sub_100031F58(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_100031F70()
{
  v24.receiver = v0;
  v24.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  [v0 setDismissalType:1];
  id v1 = [self configurationWithPointSize:4 weight:72.0];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self systemImageNamed:v2 withConfiguration:v1];

  id v4 = [objc_allocWithZone((Class)UIImageView) initWithImage:v3];
  id v5 = [self systemRedColor];
  [v4 setTintColor:v5];

  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v6 = [v0 contentView];
  [v6 addSubview:v4];

  id v7 = [v0 contentView];
  id v8 = [v7 mainContentGuide];

  id v9 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000A2750;
  id v11 = [v4 topAnchor];
  id v12 = [v8 topAnchor];
  id v13 = [v11 constraintGreaterThanOrEqualToAnchor:v12];

  *(void *)(v10 + 32) = v13;
  id v14 = [v4 bottomAnchor];
  id v15 = [v8 bottomAnchor];
  id v16 = [v14 constraintLessThanOrEqualToAnchor:v15];

  *(void *)(v10 + 40) = v16;
  id v17 = [v4 centerXAnchor];
  id v18 = [v8 centerXAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v10 + 48) = v19;
  id v20 = [v4 centerYAnchor];
  id v21 = [v8 centerYAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v10 + 56) = v22;
  specialized Array._endMutation()();
  sub_10000A968();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 activateConstraints:isa];
}

void sub_10003239C()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1];

  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v7[4] = sub_1000326B8;
  v7[5] = v2;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_100012FF0;
  v7[3] = &unk_1000C3B00;
  id v4 = _Block_copy(v7);
  id v5 = [self actionWithTitle:v3 style:0 handler:v4];

  _Block_release(v4);
  swift_release();
  swift_release();
  id v6 = [v0 addAction:v5];
}

void sub_100032528()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008B2E4();
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10003C74C();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneErrorViewController()
{
  return self;
}

uint64_t sub_100032670()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneErrorViewController_type);
}

uint64_t sub_100032680()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000326B8()
{
}

uint64_t sub_1000326C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000326D0()
{
  return swift_release();
}

uint64_t sub_1000326D8()
{
  if ([v0 _remoteViewControllerProxy])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_100030F54((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    sub_100008E18((uint64_t *)&unk_1000D53D0);
    if (swift_dynamicCast()) {
      return v2;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)v4, &qword_1000D51D8);
    return 0;
  }
}

void sub_10003282C(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  NSString v3 = (void *)sub_1000326D8();
  if (v3)
  {
    [v3 setStatusBarHidden:1 withDuration:0.3];
    swift_unknownObjectRelease();
  }
  type metadata accessor for SoftwareUpdateRequiredViewController();
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v5 = [v1 presentProxCardFlowWithDelegate:v1 initialViewController:v4];
}

uint64_t type metadata accessor for SoftwareUpdateRequiredFlow()
{
  return self;
}

double sub_100032AEC()
{
  double result = 30.0 - PRXMainContentMargin;
  *(double *)&qword_1000D5270 = 30.0 - PRXMainContentMargin;
  return result;
}

void sub_100032B0C()
{
  qword_1000D5278 = 0x405A000000000000;
}

void sub_100032B1C()
{
  qword_1000D5280 = 0x4043000000000000;
}

void sub_100032B2C()
{
  qword_1000D5288 = 0x4026000000000000;
}

void sub_100032B3C()
{
  qword_1000D5290 = 0x4039000000000000;
}

void sub_100032B4C()
{
  NSString v1 = v0;
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v24._object = (void *)0xE000000000000000;
  v4._uint64_t countAndFlagsBits = 0x4552415754464F53;
  v4._object = (void *)0xEF4554414450555FLL;
  v5.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v5.value._object = (void *)0xEB00000000656C62;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v24);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v7];

  v23._uint64_t countAndFlagsBits = 0xD000000000000018;
  v23._object = (void *)0x80000001000A8870;
  if (PRXIsPad())
  {
    uint64_t v8 = 0x534F444150495FLL;
    unint64_t v9 = 0xE700000000000000;
  }
  else
  {
    uint64_t v8 = 1397705055;
    unint64_t v9 = 0xE400000000000000;
  }
  String.append(_:)(*(Swift::String *)&v8);
  id v10 = [v2 mainBundle];
  v25._object = (void *)0xE000000000000000;
  v11.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v11.value._object = (void *)0xEB00000000656C62;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v11, (NSBundle)v10, v12, v25);
  swift_bridgeObjectRelease();

  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setSubtitle:v13];

  [v1 setDismissalType:3];
  id v14 = [v2 mainBundle];
  v26._object = (void *)0xE000000000000000;
  v15._object = (void *)0x80000001000A8890;
  v15._uint64_t countAndFlagsBits = 0xD000000000000010;
  v16.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v16.value._object = (void *)0xEB00000000656C62;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v26._uint64_t countAndFlagsBits = 0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v26);

  uint64_t v18 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  swift_retain();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1000340E0;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FF0;
  aBlock[3] = &unk_1000C3B50;
  id v20 = _Block_copy(aBlock);
  id v21 = [self actionWithTitle:v19 style:0 handler:v20];

  _Block_release(v20);
  swift_release();
  swift_release();

  sub_1000333E4();
}

void sub_100032EE4()
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v2[4] = sub_100032F9C;
  v2[5] = 0;
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 1107296256;
  v2[2] = sub_100046658;
  _OWORD v2[3] = &unk_1000C3B78;
  NSString v1 = _Block_copy(v2);
  [Strong dismissViewControllerAnimated:1 completion:v1];
  _Block_release(v1);
}

uint64_t sub_100032F9C()
{
  uint64_t v0 = sub_100008E18(&qword_1000D4800);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_10001A2AC((uint64_t)v2, &qword_1000D4800);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  sub_100008E18(&qword_1000D5360);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A2760;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v9;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 64) = v10;
  *(unsigned char *)(inited + 72) = 1;
  unint64_t v11 = sub_1000892A8(inited);
  id v12 = [self defaultWorkspace];
  if (v12)
  {
    id v14 = v12;
    URL._bridgeToObjectiveC()(v13);
    Swift::String_optional v16 = v15;
    sub_10003B558(v11);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v28 = 0;
    unsigned __int8 v18 = [v14 openSensitiveURL:v16 withOptions:isa error:&v28];

    if (v18)
    {
      NSString v19 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
      id v20 = v28;
      return v19(v6, v3);
    }
    else
    {
      id v21 = v28;
      uint64_t v22 = _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_100008E18(&qword_1000D5368);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1000A19D0;
      id v28 = 0;
      unint64_t v29 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      v24._object = (void *)0x80000001000A8900;
      v24._uint64_t countAndFlagsBits = 0xD000000000000019;
      String.append(_:)(v24);
      v27[1] = v22;
      sub_100008E18((uint64_t *)&unk_1000D50A0);
      _print_unlocked<A, B>(_:_:)();
      id v25 = v28;
      unint64_t v26 = v29;
      *(void *)(v23 + 56) = &type metadata for String;
      *(void *)(v23 + 32) = v25;
      *(void *)(v23 + 40) = v26;
      print(_:separator:terminator:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
}

void sub_1000333E4()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)UILayoutGuide) init];
  id v3 = [v0 contentView];
  [v3 addLayoutGuide:v2];

  uint64_t v4 = self;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 imageNamed:v5];

  long long v78 = v6;
  id v7 = [objc_allocWithZone((Class)UIImageView) initWithImage:v6];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v8 = [v1 contentView];
  [v8 addSubview:v7];

  id v9 = [objc_allocWithZone((Class)UIView) init];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v10 = self;
  id v11 = [v10 systemRedColor];
  [v9 setBackgroundColor:v11];

  id v12 = [v9 layer];
  if (qword_1000D4398 != -1) {
    swift_once();
  }
  [v12 setCornerRadius:*(double *)&qword_1000D5280 * 0.5];

  id v13 = [v1 contentView];
  [v13 addSubview:v9];

  id v14 = [objc_allocWithZone((Class)UILabel) init];
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  Swift::String v15 = self;
  sub_100008EB0(0, (unint64_t *)&qword_1000D5350);
  Class isa = NSNumber.init(integerLiteral:)(1).super.super.isa;
  NSString v17 = [v15 localizedStringFromNumber:isa numberStyle:0];

  if (!v17)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v14 setText:v17];

  id v18 = [v10 whiteColor];
  [v14 setTextColor:v18];

  [v14 setTextAlignment:1];
  id v19 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleCaption1];
  id v20 = [v19 fontDescriptorWithSymbolicTraits:2];

  if (v20)
  {
    uint64_t v21 = qword_1000D43A8;
    id v22 = v20;
    if (v21 != -1) {
      swift_once();
    }
    id v23 = [self fontWithDescriptor:v22 size:*(double *)&qword_1000D5290];

    [v14 setFont:v23];
  }
  [v9 addSubview:v14];
  double v24 = 0.0;
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService36SoftwareUpdateRequiredViewController_offsetIcon) == 1)
  {
    if (qword_1000D4388 != -1) {
      swift_once();
    }
    double v24 = *(double *)&qword_1000D5270;
  }
  id v25 = [v1 contentView];
  id v26 = [v25 mainContentGuide];

  id v77 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1000A32B0;
  id v28 = [v2 centerXAnchor];
  id v29 = [v26 centerXAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v27 + 32) = v30;
  id v31 = [v2 topAnchor];
  id v32 = [v26 topAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32 constant:v24];

  *(void *)(v27 + 40) = v33;
  id v34 = [v2 bottomAnchor];
  id v35 = [v26 bottomAnchor];
  id v36 = [v34 constraintLessThanOrEqualToAnchor:v35];

  *(void *)(v27 + 48) = v36;
  id v37 = [v7 leadingAnchor];
  id v38 = [v2 leadingAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v27 + 56) = v39;
  id v40 = [v7 trailingAnchor];
  id v41 = [v2 trailingAnchor];
  if (qword_1000D43A0 != -1) {
    swift_once();
  }
  id v42 = [v40 constraintEqualToAnchor:v41 constant:-*(double *)&qword_1000D5288];

  *(void *)(v27 + 64) = v42;
  id v43 = [v7 topAnchor];
  id v44 = [v2 topAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 constant:*(double *)&qword_1000D5288];

  *(void *)(v27 + 72) = v45;
  id v46 = [v7 bottomAnchor];
  id v47 = [v2 bottomAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47];

  *(void *)(v27 + 80) = v48;
  id v49 = [v7 widthAnchor];
  if (qword_1000D4390 != -1) {
    swift_once();
  }
  id v50 = [v49 constraintEqualToConstant:*(double *)&qword_1000D5278];

  *(void *)(v27 + 88) = v50;
  id v51 = [v7 heightAnchor];
  id v52 = [v7 widthAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  *(void *)(v27 + 96) = v53;
  id v54 = [v9 topAnchor];
  id v55 = [v2 topAnchor];
  id v56 = [v54 constraintEqualToAnchor:v55];

  *(void *)(v27 + 104) = v56;
  id v57 = [v9 trailingAnchor];
  id v58 = [v2 trailingAnchor];
  id v59 = [v57 constraintEqualToAnchor:v58];

  *(void *)(v27 + 112) = v59;
  id v60 = [v9 widthAnchor];
  id v61 = [v60 constraintEqualToConstant:*(double *)&qword_1000D5280];

  *(void *)(v27 + 120) = v61;
  id v62 = [v9 heightAnchor];
  id v63 = [v9 widthAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63];

  *(void *)(v27 + 128) = v64;
  id v65 = [v14 leadingAnchor];
  id v66 = [v9 leadingAnchor];
  id v67 = [v65 constraintEqualToAnchor:v66];

  *(void *)(v27 + 136) = v67;
  id v68 = [v14 topAnchor];
  id v69 = [v9 topAnchor];
  id v70 = [v68 constraintEqualToAnchor:v69];

  *(void *)(v27 + 144) = v70;
  id v71 = [v14 bottomAnchor];
  id v72 = [v9 bottomAnchor];
  id v73 = [v71 constraintEqualToAnchor:v72];

  *(void *)(v27 + 152) = v73;
  id v74 = [v14 trailingAnchor];
  id v75 = [v9 trailingAnchor];
  id v76 = [v74 constraintEqualToAnchor:v75];

  *(void *)(v27 + 160) = v76;
  specialized Array._endMutation()();
  sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
  Class v79 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v77 activateConstraints:v79];
}

id sub_100034050()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SoftwareUpdateRequiredViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for SoftwareUpdateRequiredViewController()
{
  return self;
}

uint64_t sub_1000340A8()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000340E0()
{
}

uint64_t sub_1000340E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000340F8()
{
  return swift_release();
}

void sub_100034108()
{
  uint64_t v1 = v0;
  v37.receiver = v0;
  v37.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  [v0 setDismissalType:1];
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = [self bundleForClass:ObjCClassFromMetadata];
  id v4 = [v0 traitCollection];
  id v5 = [v4 userInterfaceStyle];

  BOOL v6 = v5 == (id)1;
  if (v5 == (id)1) {
    uint64_t v7 = 0x746867694CLL;
  }
  else {
    uint64_t v7 = 1802658116;
  }
  if (v6) {
    id v8 = (void *)0xE500000000000000;
  }
  else {
    id v8 = (void *)0xE400000000000000;
  }
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  id v10 = objc_allocWithZone((Class)BSUICAPackageView);
  id v11 = v3;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithPackageName:v12 inBundle:v11];

  if (v13)
  {
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 setState:v14 animated:1];

    [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v15 = [v1 contentView];
    [v15 addSubview:v13];

    id v16 = [v1 contentView];
    id v17 = [v16 mainContentGuide];

    id v18 = self;
    sub_100008E18((uint64_t *)&unk_1000D5090);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1000A2130;
    id v20 = [v13 topAnchor];
    id v21 = [v17 topAnchor];
    id v22 = [v20 constraintGreaterThanOrEqualToAnchor:v21];

    *(void *)(v19 + 32) = v22;
    id v23 = [v13 bottomAnchor];
    id v24 = [v17 bottomAnchor];
    id v25 = [v23 constraintLessThanOrEqualToAnchor:v24];

    *(void *)(v19 + 40) = v25;
    id v26 = [v13 heightAnchor];
    id v27 = [v26 constraintEqualToConstant:160.0];

    *(void *)(v19 + 48) = v27;
    id v28 = [v13 widthAnchor];
    id v29 = [v28 constraintEqualToConstant:320.0];

    *(void *)(v19 + 56) = v29;
    id v30 = [v13 centerYAnchor];
    id v31 = [v17 centerYAnchor];
    id v32 = [v30 constraintEqualToAnchor:v31];

    *(void *)(v19 + 64) = v32;
    id v33 = [v13 centerXAnchor];
    id v34 = [v17 centerXAnchor];
    id v35 = [v33 constraintEqualToAnchor:v34];

    *(void *)(v19 + 72) = v35;
    specialized Array._endMutation()();
    sub_10000A968();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 activateConstraints:isa, v19];
  }
  else
  {
    __break(1u);
  }
}

void sub_1000346E8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setSubtitle:v2];

  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = sub_100034B3C;
  uint64_t v18 = v3;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100012FF0;
  id v16 = &unk_1000C3C08;
  id v5 = _Block_copy(&v13);
  BOOL v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:0 handler:v5];

  _Block_release(v5);
  swift_release();
  swift_release();

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = sub_100034B74;
  uint64_t v18 = v8;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100012FF0;
  id v16 = &unk_1000C3C30;
  id v10 = _Block_copy(&v13);
  id v11 = [v6 actionWithTitle:v9 style:1 handler:v10];

  _Block_release(v10);
  swift_release();
  swift_release();
  id v12 = [v0 addAction:v11];
}

void sub_1000349C0(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      sub_10008C598(a3 & 1);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneAdaptiveControlsAdaptiveModeViewController()
{
  return self;
}

uint64_t sub_100034AF4()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService51HeadphoneAdaptiveControlsAdaptiveModeViewController_type);
}

uint64_t sub_100034B04()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100034B3C(uint64_t a1)
{
  sub_1000349C0(a1, v1, 1);
}

uint64_t sub_100034B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100034B6C()
{
  return swift_release();
}

void sub_100034B74(uint64_t a1)
{
  sub_1000349C0(a1, v1, 0);
}

uint64_t destroy for HeadphoneModel.AnnounceNotificationSources(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeadphoneModel.AnnounceNotificationSources(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void **)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v5;
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  NSString v9 = *(void **)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v8;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HeadphoneModel.AnnounceNotificationSources(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)(a1 + 40);
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  id v6 = v5;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v7 = *(void **)(a1 + 88);
  uint64_t v8 = *(void **)(a2 + 88);
  *(void *)(a1 + 88) = v8;
  id v9 = v8;

  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for HeadphoneModel.AnnounceNotificationSources(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for HeadphoneModel.AnnounceNotificationSources(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneModel.AnnounceNotificationSources(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneModel.AnnounceNotificationSources(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneModel.AnnounceNotificationSources()
{
  return &type metadata for HeadphoneModel.AnnounceNotificationSources;
}

uint64_t sub_100034F60(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    if (v7)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v7;
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v8;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      id v10 = (void *)a2[5];
      uint64_t v9 = a2[6];
      *(void *)(a1 + 40) = v10;
      *(void *)(a1 + 48) = v9;
      uint64_t v11 = a2[8];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = v11;
      *(void *)(a1 + 72) = a2[9];
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      id v13 = (void *)a2[11];
      uint64_t v12 = a2[12];
      *(void *)(a1 + 88) = v13;
      *(void *)(a1 + 96) = v12;
      *(void *)(a1 + 104) = a2[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v15 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v17 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v17;
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      long long v18 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v18;
      long long v19 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v19;
    }
    *(void *)(a1 + 112) = a2[14];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    uint64_t v20 = a2[16];
    uint64_t v21 = a2[17];
    *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
    *(_WORD *)(a1 + 145) = *(_WORD *)((char *)a2 + 145);
    uint64_t v22 = a3[11];
    __dst = (void *)(a1 + v22);
    id v23 = (char *)a2 + v22;
    *(void *)(a1 + 128) = v20;
    *(void *)(a1 + 136) = v21;
    uint64_t v24 = type metadata accessor for UUID();
    uint64_t v25 = *(void *)(v24 - 8);
    id v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      uint64_t v27 = sub_100008E18(&qword_1000D5450);
      memcpy(__dst, v23, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    uint64_t v28 = a3[13];
    *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)((char *)a2 + a3[12]);
    id v29 = (void *)(a1 + v28);
    id v30 = (uint64_t *)((char *)a2 + v28);
    uint64_t v31 = v30[1];
    *id v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = a3[14];
    uint64_t v33 = a1 + v32;
    id v34 = (_OWORD *)((char *)a2 + v32);
    unint64_t v35 = *(uint64_t *)((char *)a2 + v32 + 8);
    swift_bridgeObjectRetain();
    if (v35 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v33 = *v34;
    }
    else
    {
      uint64_t v36 = *(void *)v34;
      sub_10003548C(v36, v35);
      *(void *)uint64_t v33 = v36;
      *(void *)(v33 + 8) = v35;
    }
    uint64_t v37 = a3[16];
    *(void *)(a1 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    *(unsigned char *)(a1 + v37) = *((unsigned char *)a2 + v37);
    uint64_t v38 = a3[17];
    uint64_t v39 = a3[18];
    id v40 = (void *)(a1 + v38);
    id v41 = (uint64_t *)((char *)a2 + v38);
    uint64_t v72 = v41[1];
    *id v40 = *v41;
    v40[1] = v72;
    id v42 = (void *)(a1 + v39);
    id v43 = (uint64_t *)((char *)a2 + v39);
    __dsta = (void *)v43[1];
    *id v42 = *v43;
    v42[1] = __dsta;
    uint64_t v44 = a3[20];
    *(unsigned char *)(a1 + a3[19]) = *((unsigned char *)a2 + a3[19]);
    *(unsigned char *)(a1 + v44) = *((unsigned char *)a2 + v44);
    uint64_t v45 = a3[22];
    *(unsigned char *)(a1 + a3[21]) = *((unsigned char *)a2 + a3[21]);
    *(unsigned char *)(a1 + v45) = *((unsigned char *)a2 + v45);
    uint64_t v46 = a3[24];
    *(_DWORD *)(a1 + a3[23]) = *(_DWORD *)((char *)a2 + a3[23]);
    *(unsigned char *)(a1 + v46) = *((unsigned char *)a2 + v46);
    uint64_t v47 = a3[26];
    *(unsigned char *)(a1 + a3[25]) = *((unsigned char *)a2 + a3[25]);
    *(unsigned char *)(a1 + v47) = *((unsigned char *)a2 + v47);
    uint64_t v48 = a3[28];
    *(unsigned char *)(a1 + a3[27]) = *((unsigned char *)a2 + a3[27]);
    *(_DWORD *)(a1 + v48) = *(_DWORD *)((char *)a2 + v48);
    uint64_t v49 = a3[30];
    *(_DWORD *)(a1 + a3[29]) = *(_DWORD *)((char *)a2 + a3[29]);
    *(unsigned char *)(a1 + v49) = *((unsigned char *)a2 + v49);
    uint64_t v50 = a3[32];
    *(_DWORD *)(a1 + a3[31]) = *(_DWORD *)((char *)a2 + a3[31]);
    *(unsigned char *)(a1 + v50) = *((unsigned char *)a2 + v50);
    uint64_t v51 = a3[33];
    uint64_t v52 = a3[34];
    id v53 = *(void **)((char *)a2 + v51);
    *(void *)(a1 + v51) = v53;
    *(void *)(a1 + v52) = *(uint64_t *)((char *)a2 + v52);
    uint64_t v54 = a3[35];
    id v71 = (void *)(a1 + v54);
    id v55 = (char *)a2 + v54;
    uint64_t v56 = type metadata accessor for Date();
    uint64_t v57 = *(void *)(v56 - 8);
    id v58 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v57 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v59 = v53;
    swift_retain();
    if (v58(v55, 1, v56))
    {
      uint64_t v60 = sub_100008E18(&qword_1000D5458);
      memcpy(v71, v55, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v57 + 16))(v71, v55, v56);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v71, 0, 1, v56);
    }
    uint64_t v61 = a3[37];
    *(void *)(a1 + a3[36]) = *(uint64_t *)((char *)a2 + a3[36]);
    *(unsigned char *)(a1 + v61) = *((unsigned char *)a2 + v61);
    uint64_t v62 = a3[39];
    *(void *)(a1 + a3[38]) = *(uint64_t *)((char *)a2 + a3[38]);
    *(unsigned char *)(a1 + v62) = *((unsigned char *)a2 + v62);
    uint64_t v63 = a3[41];
    *(unsigned char *)(a1 + a3[40]) = *((unsigned char *)a2 + a3[40]);
    *(unsigned char *)(a1 + v63) = *((unsigned char *)a2 + v63);
    uint64_t v64 = a3[42];
    uint64_t v65 = a1 + v64;
    id v66 = (uint64_t *)((char *)a2 + v64);
    int v67 = *((unsigned __int8 *)v66 + 8);
    if (v67 == 255)
    {
      *(void *)uint64_t v65 = *v66;
      *(unsigned char *)(v65 + 8) = *((unsigned char *)v66 + 8);
    }
    else
    {
      char v68 = v67 & 1;
      uint64_t v69 = *v66;
      sub_100017D00((void *)*v66, v67 & 1);
      *(void *)uint64_t v65 = v69;
      *(unsigned char *)(v65 + 8) = v68;
    }
    *(void *)(a1 + a3[43]) = *(uint64_t *)((char *)a2 + a3[43]);
  }
  return a1;
}

uint64_t sub_10003548C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void sub_1000354E4(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[11];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t *)(a1 + a2[14]);
  unint64_t v8 = v7[1];
  if (v8 >> 60 != 15) {
    sub_10001FB5C(*v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v9 = a1 + a2[35];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = a1 + a2[42];
  int v13 = *(unsigned __int8 *)(v12 + 8);
  if (v13 != 255)
  {
    id v14 = *(void **)v12;
    sub_100017D0C(v14, v13 & 1);
  }
}

uint64_t sub_10003570C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v9 = *(void **)(a2 + 40);
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v8;
    uint64_t v10 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    uint64_t v12 = *(void **)(a2 + 88);
    uint64_t v11 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = v12;
    *(void *)(a1 + 96) = v11;
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    long long v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    long long v17 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v17;
  }
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v18 = *(void *)(a2 + 128);
  uint64_t v19 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  uint64_t v20 = a3[11];
  __dst = (void *)(a1 + v20);
  uint64_t v21 = (const void *)(a2 + v20);
  *(void *)(a1 + 128) = v18;
  *(void *)(a1 + 136) = v19;
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24(v21, 1, v22))
  {
    uint64_t v25 = sub_100008E18(&qword_1000D5450);
    memcpy(__dst, v21, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(__dst, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  uint64_t v26 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  uint64_t v29 = v28[1];
  void *v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = a3[14];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (_OWORD *)(a2 + v30);
  unint64_t v33 = *(void *)(a2 + v30 + 8);
  swift_bridgeObjectRetain();
  if (v33 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v31 = *v32;
  }
  else
  {
    uint64_t v34 = *(void *)v32;
    sub_10003548C(v34, v33);
    *(void *)uint64_t v31 = v34;
    *(void *)(v31 + 8) = v33;
  }
  uint64_t v35 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(a2 + v35);
  uint64_t v36 = a3[17];
  uint64_t v37 = a3[18];
  uint64_t v38 = (void *)(a1 + v36);
  uint64_t v39 = (void *)(a2 + v36);
  uint64_t v70 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v70;
  id v40 = (void *)(a1 + v37);
  id v41 = (void *)(a2 + v37);
  __dsta = (void *)v41[1];
  *id v40 = *v41;
  v40[1] = __dsta;
  uint64_t v42 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v42) = *(unsigned char *)(a2 + v42);
  uint64_t v43 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  uint64_t v44 = a3[24];
  *(_DWORD *)(a1 + a3[23]) = *(_DWORD *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  uint64_t v45 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v45) = *(unsigned char *)(a2 + v45);
  uint64_t v46 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(_DWORD *)(a1 + v46) = *(_DWORD *)(a2 + v46);
  uint64_t v47 = a3[30];
  *(_DWORD *)(a1 + a3[29]) = *(_DWORD *)(a2 + a3[29]);
  *(unsigned char *)(a1 + v47) = *(unsigned char *)(a2 + v47);
  uint64_t v48 = a3[32];
  *(_DWORD *)(a1 + a3[31]) = *(_DWORD *)(a2 + a3[31]);
  *(unsigned char *)(a1 + v48) = *(unsigned char *)(a2 + v48);
  uint64_t v49 = a3[33];
  uint64_t v50 = a3[34];
  uint64_t v51 = *(void **)(a2 + v49);
  *(void *)(a1 + v49) = v51;
  *(void *)(a1 + v50) = *(void *)(a2 + v50);
  uint64_t v52 = a3[35];
  uint64_t v69 = (void *)(a1 + v52);
  id v53 = (const void *)(a2 + v52);
  uint64_t v54 = type metadata accessor for Date();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v57 = v51;
  swift_retain();
  if (v56(v53, 1, v54))
  {
    uint64_t v58 = sub_100008E18(&qword_1000D5458);
    memcpy(v69, v53, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 16))(v69, v53, v54);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v55 + 56))(v69, 0, 1, v54);
  }
  uint64_t v59 = a3[37];
  *(void *)(a1 + a3[36]) = *(void *)(a2 + a3[36]);
  *(unsigned char *)(a1 + v59) = *(unsigned char *)(a2 + v59);
  uint64_t v60 = a3[39];
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  *(unsigned char *)(a1 + v60) = *(unsigned char *)(a2 + v60);
  uint64_t v61 = a3[41];
  *(unsigned char *)(a1 + a3[40]) = *(unsigned char *)(a2 + a3[40]);
  *(unsigned char *)(a1 + v61) = *(unsigned char *)(a2 + v61);
  uint64_t v62 = a3[42];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = (uint64_t *)(a2 + v62);
  int v65 = *((unsigned __int8 *)v64 + 8);
  if (v65 == 255)
  {
    *(void *)uint64_t v63 = *v64;
    *(unsigned char *)(v63 + 8) = *((unsigned char *)v64 + 8);
  }
  else
  {
    char v66 = v65 & 1;
    uint64_t v67 = *v64;
    sub_100017D00((void *)*v64, v65 & 1);
    *(void *)uint64_t v63 = v67;
    *(unsigned char *)(v63 + 8) = v66;
  }
  *(void *)(a1 + a3[43]) = *(void *)(a2 + a3[43]);
  return a1;
}

uint64_t sub_100035BE8(uint64_t a1, long long *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8))
  {
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v7 = *(void **)(a1 + 40);
      uint64_t v8 = (void *)*((void *)a2 + 5);
      *(void *)(a1 + 40) = v8;
      id v9 = v8;

      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(void *)(a1 + 56) = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *((void *)a2 + 8);
      *(void *)(a1 + 72) = *((void *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
      uint64_t v10 = *(void **)(a1 + 88);
      uint64_t v11 = (void *)*((void *)a2 + 11);
      *(void *)(a1 + 88) = v11;
      id v12 = v11;

      *(void *)(a1 + 96) = *((void *)a2 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *((void *)a2 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10000F754(a1);
      long long v18 = a2[1];
      long long v17 = a2[2];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v18;
      *(_OWORD *)(a1 + 32) = v17;
      long long v19 = a2[6];
      long long v21 = a2[3];
      long long v20 = a2[4];
      *(_OWORD *)(a1 + 80) = a2[5];
      *(_OWORD *)(a1 + 96) = v19;
      *(_OWORD *)(a1 + 48) = v21;
      *(_OWORD *)(a1 + 64) = v20;
    }
  }
  else if (v6)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(void *)(a1 + 24) = *((void *)a2 + 3);
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    id v13 = (void *)*((void *)a2 + 5);
    *(void *)(a1 + 40) = v13;
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(void *)(a1 + 56) = *((void *)a2 + 7);
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    *(void *)(a1 + 72) = *((void *)a2 + 9);
    *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    id v14 = (void *)*((void *)a2 + 11);
    *(void *)(a1 + 88) = v14;
    *(void *)(a1 + 96) = *((void *)a2 + 12);
    *(void *)(a1 + 104) = *((void *)a2 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v15 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *a2;
    long long v23 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v23;
    *(_OWORD *)a1 = v22;
    long long v24 = a2[3];
    long long v25 = a2[4];
    long long v26 = a2[6];
    *(_OWORD *)(a1 + 80) = a2[5];
    *(_OWORD *)(a1 + 96) = v26;
    *(_OWORD *)(a1 + 48) = v24;
    *(_OWORD *)(a1 + 64) = v25;
  }
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  *(void *)(a1 + 136) = *((void *)a2 + 17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *((unsigned char *)a2 + 144);
  *(unsigned char *)(a1 + 145) = *((unsigned char *)a2 + 145);
  *(unsigned char *)(a1 + 146) = *((unsigned char *)a2 + 146);
  uint64_t v27 = a3[11];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v31 + 8))(v28, v30);
LABEL_13:
    uint64_t v35 = sub_100008E18(&qword_1000D5450);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, char *, uint64_t))(v31 + 24))(v28, v29, v30);
LABEL_14:
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)((char *)a2 + a3[12]);
  uint64_t v36 = a3[13];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)((char *)a2 + v36);
  *uint64_t v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[14];
  id v40 = (uint64_t *)(a1 + v39);
  id v41 = (uint64_t *)((char *)a2 + v39);
  unint64_t v42 = *(void *)((char *)a2 + v39 + 8);
  if (*(void *)(a1 + v39 + 8) >> 60 == 15)
  {
    if (v42 >> 60 != 15)
    {
      uint64_t v43 = *v41;
      sub_10003548C(v43, v42);
      *id v40 = v43;
      v40[1] = v42;
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  if (v42 >> 60 == 15)
  {
    sub_100036408((uint64_t)v40);
LABEL_19:
    *(_OWORD *)id v40 = *(_OWORD *)v41;
    goto LABEL_21;
  }
  uint64_t v44 = *v41;
  sub_10003548C(v44, v42);
  uint64_t v45 = *v40;
  unint64_t v46 = v40[1];
  *id v40 = v44;
  v40[1] = v42;
  sub_10001FB5C(v45, v46);
LABEL_21:
  *(void *)(a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  uint64_t v47 = a3[17];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  void *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[18];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)((char *)a2 + v50);
  *uint64_t v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[19]) = *((unsigned char *)a2 + a3[19]);
  *(unsigned char *)(a1 + a3[20]) = *((unsigned char *)a2 + a3[20]);
  *(unsigned char *)(a1 + a3[21]) = *((unsigned char *)a2 + a3[21]);
  *(unsigned char *)(a1 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  uint64_t v53 = a3[23];
  uint64_t v54 = (unsigned char *)(a1 + v53);
  uint64_t v55 = (char *)a2 + v53;
  *uint64_t v54 = *v55;
  v54[1] = v55[1];
  v54[2] = v55[2];
  v54[3] = v55[3];
  *(unsigned char *)(a1 + a3[24]) = *((unsigned char *)a2 + a3[24]);
  *(unsigned char *)(a1 + a3[25]) = *((unsigned char *)a2 + a3[25]);
  *(unsigned char *)(a1 + a3[26]) = *((unsigned char *)a2 + a3[26]);
  *(unsigned char *)(a1 + a3[27]) = *((unsigned char *)a2 + a3[27]);
  *(_DWORD *)(a1 + a3[28]) = *(_DWORD *)((char *)a2 + a3[28]);
  *(_DWORD *)(a1 + a3[29]) = *(_DWORD *)((char *)a2 + a3[29]);
  *(unsigned char *)(a1 + a3[30]) = *((unsigned char *)a2 + a3[30]);
  *(_DWORD *)(a1 + a3[31]) = *(_DWORD *)((char *)a2 + a3[31]);
  *(unsigned char *)(a1 + a3[32]) = *((unsigned char *)a2 + a3[32]);
  uint64_t v56 = a3[33];
  id v57 = *(void **)(a1 + v56);
  uint64_t v58 = *(void **)((char *)a2 + v56);
  *(void *)(a1 + v56) = v58;
  id v59 = v58;

  *(void *)(a1 + a3[34]) = *(void *)((char *)a2 + a3[34]);
  swift_retain();
  swift_release();
  uint64_t v60 = a3[35];
  uint64_t v61 = (void *)(a1 + v60);
  uint64_t v62 = (char *)a2 + v60;
  uint64_t v63 = type metadata accessor for Date();
  uint64_t v64 = *(void *)(v63 - 8);
  int v65 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v64 + 48);
  int v66 = v65(v61, 1, v63);
  int v67 = v65(v62, 1, v63);
  if (v66)
  {
    if (!v67)
    {
      (*(void (**)(void *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v67)
  {
    (*(void (**)(void *, uint64_t))(v64 + 8))(v61, v63);
LABEL_26:
    uint64_t v68 = sub_100008E18(&qword_1000D5458);
    memcpy(v61, v62, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(void *, char *, uint64_t))(v64 + 24))(v61, v62, v63);
LABEL_27:
  *(void *)(a1 + a3[36]) = *(void *)((char *)a2 + a3[36]);
  *(unsigned char *)(a1 + a3[37]) = *((unsigned char *)a2 + a3[37]);
  *(void *)(a1 + a3[38]) = *(void *)((char *)a2 + a3[38]);
  *(unsigned char *)(a1 + a3[39]) = *((unsigned char *)a2 + a3[39]);
  *(unsigned char *)(a1 + a3[40]) = *((unsigned char *)a2 + a3[40]);
  *(unsigned char *)(a1 + a3[41]) = *((unsigned char *)a2 + a3[41]);
  uint64_t v69 = a3[42];
  uint64_t v70 = a1 + v69;
  uint64_t v71 = (uint64_t)a2 + v69;
  int v72 = *(unsigned __int8 *)(a1 + v69 + 8);
  int v73 = *((unsigned __int8 *)a2 + v69 + 8);
  if (v72 == 255)
  {
    if (v73 == 255)
    {
      id v75 = *(void **)v71;
      *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
      *(void *)uint64_t v70 = v75;
    }
    else
    {
      char v80 = v73 & 1;
      id v81 = *(void **)v71;
      sub_100017D00(v81, v73 & 1);
      *(void *)uint64_t v70 = v81;
      *(unsigned char *)(v70 + 8) = v80;
    }
  }
  else if (v73 == 255)
  {
    sub_10001A2AC(v70, &qword_1000D5460);
    char v74 = *(unsigned char *)(v71 + 8);
    *(void *)uint64_t v70 = *(void *)v71;
    *(unsigned char *)(v70 + 8) = v74;
  }
  else
  {
    char v76 = v73 & 1;
    id v77 = *(void **)v71;
    sub_100017D00(v77, v73 & 1);
    long long v78 = *(void **)v70;
    char v79 = *(unsigned char *)(v70 + 8);
    *(void *)uint64_t v70 = v77;
    *(unsigned char *)(v70 + 8) = v76;
    sub_100017D0C(v78, v79);
  }
  *(void *)(a1 + a3[43]) = *(void *)((char *)a2 + a3[43]);
  return a1;
}

uint64_t sub_100036408(uint64_t a1)
{
  return a1;
}

uint64_t sub_10003645C(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  long long v9 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  uint64_t v10 = a3[11];
  uint64_t v11 = (void *)(a1 + v10);
  id v12 = (const void *)(a2 + v10);
  *(_OWORD *)(a1 + 128) = v9;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100008E18(&qword_1000D5450);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  uint64_t v17 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v18) = *(_OWORD *)(a2 + v18);
  uint64_t v19 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[21];
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(_DWORD *)(a1 + v21) = *(_DWORD *)(a2 + v21);
  uint64_t v22 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  uint64_t v23 = a3[27];
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[29];
  *(_DWORD *)(a1 + a3[28]) = *(_DWORD *)(a2 + a3[28]);
  *(_DWORD *)(a1 + v24) = *(_DWORD *)(a2 + v24);
  uint64_t v25 = a3[31];
  *(unsigned char *)(a1 + a3[30]) = *(unsigned char *)(a2 + a3[30]);
  *(_DWORD *)(a1 + v25) = *(_DWORD *)(a2 + v25);
  uint64_t v26 = a3[33];
  *(unsigned char *)(a1 + a3[32]) = *(unsigned char *)(a2 + a3[32]);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  uint64_t v27 = a3[35];
  *(void *)(a1 + a3[34]) = *(void *)(a2 + a3[34]);
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(a2 + v27);
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_100008E18(&qword_1000D5458);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v31 + 32))(v28, v29, v30);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  uint64_t v33 = a3[37];
  *(void *)(a1 + a3[36]) = *(void *)(a2 + a3[36]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  uint64_t v34 = a3[39];
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  uint64_t v35 = a3[41];
  *(unsigned char *)(a1 + a3[40]) = *(unsigned char *)(a2 + a3[40]);
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(a2 + v35);
  uint64_t v36 = a3[42];
  uint64_t v37 = a3[43];
  uint64_t v38 = a1 + v36;
  uint64_t v39 = a2 + v36;
  *(void *)uint64_t v38 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = *(unsigned char *)(v39 + 8);
  *(void *)(a1 + v37) = *(void *)(a2 + v37);
  return a1;
}

uint64_t sub_1000367DC(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v6 = *(void *)(a2 + 8);
    if (v6)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v7;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      long long v8 = *(void **)(a1 + 40);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);

      uint64_t v9 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v9;
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v10;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      uint64_t v11 = *(void **)(a1 + 88);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);

      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_10000F754(a1);
  }
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v12;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
LABEL_6:
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v15 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for UUID();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
LABEL_11:
    uint64_t v24 = sub_100008E18(&qword_1000D5450);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
LABEL_12:
  uint64_t v25 = a3[13];
  *(_DWORD *)(a1 + a3[12]) = *(_DWORD *)(a2 + a3[12]);
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  void *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[14];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  unint64_t v33 = *(void *)(a1 + v30 + 8);
  if (v33 >> 60 == 15)
  {
LABEL_15:
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    goto LABEL_17;
  }
  unint64_t v34 = *(void *)(v32 + 8);
  if (v34 >> 60 == 15)
  {
    sub_100036408(v31);
    goto LABEL_15;
  }
  uint64_t v35 = *(void *)v31;
  *(void *)uint64_t v31 = *(void *)v32;
  *(void *)(v31 + 8) = v34;
  sub_10001FB5C(v35, v33);
LABEL_17:
  uint64_t v36 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v36) = *(unsigned char *)(a2 + v36);
  uint64_t v37 = a3[17];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  *uint64_t v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[18];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (uint64_t *)(a2 + v42);
  uint64_t v46 = *v44;
  uint64_t v45 = v44[1];
  *uint64_t v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v47) = *(unsigned char *)(a2 + v47);
  uint64_t v48 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v48) = *(unsigned char *)(a2 + v48);
  uint64_t v49 = a3[23];
  uint64_t v50 = a3[24];
  uint64_t v51 = (unsigned char *)(a1 + v49);
  uint64_t v52 = (unsigned char *)(a2 + v49);
  *uint64_t v51 = *v52;
  v51[1] = v52[1];
  v51[2] = v52[2];
  v51[3] = v52[3];
  *(unsigned char *)(a1 + v50) = *(unsigned char *)(a2 + v50);
  uint64_t v53 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v53) = *(unsigned char *)(a2 + v53);
  uint64_t v54 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(_DWORD *)(a1 + v54) = *(_DWORD *)(a2 + v54);
  uint64_t v55 = a3[30];
  *(_DWORD *)(a1 + a3[29]) = *(_DWORD *)(a2 + a3[29]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  uint64_t v56 = a3[32];
  *(_DWORD *)(a1 + a3[31]) = *(_DWORD *)(a2 + a3[31]);
  *(unsigned char *)(a1 + v56) = *(unsigned char *)(a2 + v56);
  uint64_t v57 = a3[33];
  uint64_t v58 = *(void **)(a1 + v57);
  *(void *)(a1 + v57) = *(void *)(a2 + v57);

  *(void *)(a1 + a3[34]) = *(void *)(a2 + a3[34]);
  swift_release();
  uint64_t v59 = a3[35];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (void *)(a2 + v59);
  uint64_t v62 = type metadata accessor for Date();
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
  int v65 = v64(v60, 1, v62);
  int v66 = v64(v61, 1, v62);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(void *, void *, uint64_t))(v63 + 32))(v60, v61, v62);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v66)
  {
    (*(void (**)(void *, uint64_t))(v63 + 8))(v60, v62);
LABEL_22:
    uint64_t v67 = sub_100008E18(&qword_1000D5458);
    memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(void *, void *, uint64_t))(v63 + 40))(v60, v61, v62);
LABEL_23:
  uint64_t v68 = a3[37];
  *(void *)(a1 + a3[36]) = *(void *)(a2 + a3[36]);
  *(unsigned char *)(a1 + v68) = *(unsigned char *)(a2 + v68);
  uint64_t v69 = a3[39];
  *(void *)(a1 + a3[38]) = *(void *)(a2 + a3[38]);
  *(unsigned char *)(a1 + v69) = *(unsigned char *)(a2 + v69);
  uint64_t v70 = a3[41];
  *(unsigned char *)(a1 + a3[40]) = *(unsigned char *)(a2 + a3[40]);
  *(unsigned char *)(a1 + v70) = *(unsigned char *)(a2 + v70);
  uint64_t v71 = a3[42];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = a2 + v71;
  int v74 = *(unsigned __int8 *)(a1 + v71 + 8);
  if (v74 != 255)
  {
    int v75 = *(unsigned __int8 *)(v73 + 8);
    if (v75 != 255)
    {
      char v76 = *(void **)v72;
      *(void *)uint64_t v72 = *(void *)v73;
      *(unsigned char *)(v72 + 8) = v75 & 1;
      sub_100017D0C(v76, v74 & 1);
      goto LABEL_28;
    }
    sub_10001A2AC(v72, &qword_1000D5460);
  }
  *(void *)uint64_t v72 = *(void *)v73;
  *(unsigned char *)(v72 + 8) = *(unsigned char *)(v73 + 8);
LABEL_28:
  *(void *)(a1 + a3[43]) = *(void *)(a2 + a3[43]);
  return a1;
}

uint64_t sub_100036DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100036DE4);
}

uint64_t sub_100036DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 112);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100008E18(&qword_1000D5450);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 44);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100008E18(&qword_1000D5458);
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 140);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100036F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100036F2C);
}

uint64_t sub_100036F2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 112) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100008E18(&qword_1000D5450);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 44);
      long long v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100008E18(&qword_1000D5458);
      long long v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 140);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneModel()
{
  uint64_t result = qword_1000D54C0;
  if (!qword_1000D54C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000370AC()
{
  sub_100037288(319, &qword_1000D54D0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_100037288(319, (unint64_t *)&unk_1000D54D8, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100037288(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for HeadphoneBatteryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000373A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneBatteryType()
{
  return &type metadata for HeadphoneBatteryType;
}

unint64_t sub_1000373E4()
{
  unint64_t result = qword_1000D55A0;
  if (!qword_1000D55A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55A0);
  }
  return result;
}

uint64_t sub_100037438()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D5418);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D5418);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100037500()
{
  uint64_t v0 = type metadata accessor for URL();
  sub_10000B7B0(v0, qword_1000D5430);
  sub_100008278(v0, (uint64_t)qword_1000D5430);
  return URL.init(fileURLWithPath:)();
}

void *sub_100037564()
{
  unint64_t result = (void *)sub_100089514((uint64_t)&off_1000C20B8);
  off_1000D5448 = result;
  return result;
}

Swift::Int sub_10003758C(int a1)
{
  return Hasher._finalize()();
}

Swift::Int sub_100037600()
{
  if (v0[3]) {
    int v1 = 0x1000000;
  }
  else {
    int v1 = 0;
  }
  if (v0[2]) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  if (v0[1]) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return sub_10003758C(v3 | *v0 | v2 | v1);
}

void sub_100037644()
{
  Swift::UInt8 v1 = v0[1];
  Swift::UInt8 v2 = v0[2];
  Swift::UInt8 v3 = v0[3];
  Hasher._combine(_:)(*v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
}

Swift::Int sub_1000376A4()
{
  Swift::UInt8 v1 = *v0;
  Swift::UInt8 v2 = v0[1];
  Swift::UInt8 v3 = v0[2];
  Swift::UInt8 v4 = v0[3];
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

BOOL sub_100037728(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a1[2] ^ a2[2] | a2[3] ^ a1[3]) & 1) == 0;
}

uint64_t sub_100037770()
{
  uint64_t v1 = sub_100008E18(&qword_1000D5450);
  uint64_t v2 = __chkstk_darwin(v1);
  Swift::UInt8 v4 = (char *)v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unsigned int v6 = (char *)v98 - v5;
  v99[0] = 0;
  v99[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v99[0] = 0xD000000000000011;
  v99[1] = 0x80000001000A89E0;
  uint64_t v7 = *(void **)(v0 + 136);
  v98[0] = *(id *)(v0 + 128);
  v98[1] = v7;
  swift_bridgeObjectRetain();
  sub_100008E18(&qword_1000D55A8);
  v8._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 32;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = v99[0];
  uint64_t v11 = (void *)v99[1];
  v99[0] = 0xD000000000000010;
  v99[1] = 0x80000001000A89C0;
  v10._object = v11;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  uint64_t v13 = v99[0];
  uint64_t v12 = v99[1];
  strcpy((char *)v99, "colorCode=");
  BYTE3(v99[1]) = 0;
  HIDWORD(v99[1]) = -369098752;
  LOBYTE(v98[0]) = *(unsigned char *)(v0 + 144);
  v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 32;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t v16 = v99[0];
  uint64_t v17 = (void *)v99[1];
  v99[0] = v13;
  v99[1] = v12;
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = v16;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v99[0];
  uint64_t v19 = v99[1];
  strcpy((char *)v99, "deviceID=");
  WORD1(v99[1]) = 0;
  HIDWORD(v99[1]) = -385875968;
  uint64_t v21 = (int *)type metadata accessor for HeadphoneModel();
  sub_10003A2F8(v0 + v21[11], (uint64_t)v6);
  sub_10003A2F8((uint64_t)v6, (uint64_t)v4);
  uint64_t v22 = String.init<A>(reflecting:)();
  uint64_t v24 = v23;
  sub_10001A2AC((uint64_t)v6, &qword_1000D5450);
  v25._uint64_t countAndFlagsBits = v22;
  v25._object = v24;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v26._uint64_t countAndFlagsBits = 32;
  v26._object = (void *)0xE100000000000000;
  String.append(_:)(v26);
  uint64_t v27 = v99[0];
  uint64_t v28 = (void *)v99[1];
  v99[0] = v20;
  v99[1] = v19;
  swift_bridgeObjectRetain();
  v29._uint64_t countAndFlagsBits = v27;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v99[0];
  uint64_t v30 = v99[1];
  v99[0] = 0;
  v99[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  strcpy((char *)v99, "deviceVersion=");
  HIBYTE(v99[1]) = -18;
  LODWORD(v98[0]) = *(_DWORD *)(v0 + v21[12]);
  v32._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = 32;
  v33._object = (void *)0xE100000000000000;
  String.append(_:)(v33);
  uint64_t v34 = v99[0];
  uint64_t v35 = (void *)v99[1];
  v99[0] = v31;
  v99[1] = v30;
  swift_bridgeObjectRetain();
  v36._uint64_t countAndFlagsBits = v34;
  v36._object = v35;
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = v99[0];
  uint64_t v37 = v99[1];
  strcpy((char *)v99, "deviceName=");
  HIDWORD(v99[1]) = -352321536;
  uint64_t v39 = (uint64_t *)(v0 + v21[13]);
  uint64_t v40 = *v39;
  uint64_t v41 = (void *)v39[1];
  swift_bridgeObjectRetain();
  v42._uint64_t countAndFlagsBits = v40;
  v42._object = v41;
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  v43._uint64_t countAndFlagsBits = 32;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  uint64_t v44 = v99[0];
  uint64_t v45 = (void *)v99[1];
  v99[0] = v38;
  v99[1] = v37;
  swift_bridgeObjectRetain();
  v46._uint64_t countAndFlagsBits = v44;
  v46._object = v45;
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = v99[0];
  uint64_t v48 = v99[1];
  v99[0] = 0;
  v99[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  v99[0] = 0xD000000000000012;
  v99[1] = 0x80000001000A8A00;
  if (*(unsigned char *)(v0 + v21[19])) {
    uint64_t v49 = 1702195828;
  }
  else {
    uint64_t v49 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + v21[19])) {
    unint64_t v50 = 0xE400000000000000;
  }
  else {
    unint64_t v50 = 0xE500000000000000;
  }
  unint64_t v51 = v50;
  String.append(_:)(*(Swift::String *)&v49);
  swift_bridgeObjectRelease();
  v52._uint64_t countAndFlagsBits = 32;
  v52._object = (void *)0xE100000000000000;
  String.append(_:)(v52);
  uint64_t v53 = v99[0];
  uint64_t v54 = (void *)v99[1];
  v99[0] = v47;
  v99[1] = v48;
  swift_bridgeObjectRetain();
  v55._uint64_t countAndFlagsBits = v53;
  v55._object = v54;
  String.append(_:)(v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = v99[0];
  uint64_t v57 = v99[1];
  v99[0] = 0;
  v99[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  v99[0] = 0xD000000000000022;
  v99[1] = 0x80000001000A8A20;
  if (*(unsigned char *)(v0 + v21[20])) {
    uint64_t v58 = 1702195828;
  }
  else {
    uint64_t v58 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + v21[20])) {
    unint64_t v59 = 0xE400000000000000;
  }
  else {
    unint64_t v59 = 0xE500000000000000;
  }
  unint64_t v60 = v59;
  String.append(_:)(*(Swift::String *)&v58);
  swift_bridgeObjectRelease();
  v61._uint64_t countAndFlagsBits = 32;
  v61._object = (void *)0xE100000000000000;
  String.append(_:)(v61);
  uint64_t v62 = v99[0];
  uint64_t v63 = (void *)v99[1];
  v99[0] = v56;
  v99[1] = v57;
  swift_bridgeObjectRetain();
  v64._uint64_t countAndFlagsBits = v62;
  v64._object = v63;
  String.append(_:)(v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v65 = v99[0];
  uint64_t v66 = v99[1];
  v99[0] = 0;
  v99[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  v67._uint64_t countAndFlagsBits = 0x65646F4D74736574;
  v67._object = (void *)0xEE003D6574617453;
  String.append(_:)(v67);
  LOBYTE(v98[0]) = *(unsigned char *)(v0 + v21[30]);
  _print_unlocked<A, B>(_:_:)();
  v68._uint64_t countAndFlagsBits = 32;
  v68._object = (void *)0xE100000000000000;
  String.append(_:)(v68);
  uint64_t v69 = v99[0];
  uint64_t v70 = (void *)v99[1];
  v99[0] = v65;
  v99[1] = v66;
  swift_bridgeObjectRetain();
  v71._uint64_t countAndFlagsBits = v69;
  v71._object = v70;
  String.append(_:)(v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v73 = v99[0];
  uint64_t v72 = v99[1];
  strcpy((char *)v99, "productID=");
  BYTE3(v99[1]) = 0;
  HIDWORD(v99[1]) = -369098752;
  LODWORD(v98[0]) = *(_DWORD *)(v0 + v21[31]);
  v74._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v74);
  swift_bridgeObjectRelease();
  v75._uint64_t countAndFlagsBits = 32;
  v75._object = (void *)0xE100000000000000;
  String.append(_:)(v75);
  uint64_t v76 = v99[0];
  id v77 = (void *)v99[1];
  v99[0] = v73;
  v99[1] = v72;
  swift_bridgeObjectRetain();
  v78._uint64_t countAndFlagsBits = v76;
  v78._object = v77;
  String.append(_:)(v78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v80 = v99[0];
  uint64_t v79 = v99[1];
  v99[0] = 0;
  v99[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v99[0] = 0x6572617774666F73;
  v99[1] = 0xEF3D656D756C6F56;
  if (*(unsigned char *)(v0 + v21[32])) {
    uint64_t v81 = 1702195828;
  }
  else {
    uint64_t v81 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + v21[32])) {
    unint64_t v82 = 0xE400000000000000;
  }
  else {
    unint64_t v82 = 0xE500000000000000;
  }
  unint64_t v83 = v82;
  String.append(_:)(*(Swift::String *)&v81);
  swift_bridgeObjectRelease();
  v84._uint64_t countAndFlagsBits = 32;
  v84._object = (void *)0xE100000000000000;
  String.append(_:)(v84);
  uint64_t v85 = v99[0];
  id v86 = (void *)v99[1];
  v99[0] = v80;
  v99[1] = v79;
  swift_bridgeObjectRetain();
  v87._uint64_t countAndFlagsBits = v85;
  v87._object = v86;
  String.append(_:)(v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v89 = v99[0];
  uint64_t v88 = v99[1];
  strcpy((char *)v99, "assetBundle=");
  BYTE5(v99[1]) = 0;
  HIWORD(v99[1]) = -5120;
  v98[0] = *(id *)(v0 + v21[33]);
  id v90 = v98[0];
  sub_100008E18(&qword_1000D55B0);
  v91._uint64_t countAndFlagsBits = String.init<A>(reflecting:)();
  String.append(_:)(v91);
  swift_bridgeObjectRelease();
  v92._uint64_t countAndFlagsBits = 32;
  v92._object = (void *)0xE100000000000000;
  String.append(_:)(v92);
  uint64_t v93 = v99[0];
  id v94 = (void *)v99[1];
  v99[0] = v89;
  v99[1] = v88;
  swift_bridgeObjectRetain();
  v95._uint64_t countAndFlagsBits = v93;
  v95._object = v94;
  String.append(_:)(v95);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v96._uint64_t countAndFlagsBits = 62;
  v96._object = (void *)0xE100000000000000;
  String.append(_:)(v96);
  swift_bridgeObjectRelease();
  return v99[0];
}

unint64_t sub_100037F5C(char a1)
{
  unint64_t result = 0x6441656369766564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x646F43726F6C6F63;
      break;
    case 2:
      unint64_t result = 0x4344454C65736163;
      break;
    case 3:
      unint64_t result = 0x7372655665736163;
      break;
    case 4:
      unint64_t result = 6580592;
      break;
    case 5:
      unint64_t result = 0x636954646E756F66;
      break;
    case 6:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 7:
      unint64_t result = 845441392;
      break;
    case 8:
      unint64_t result = 0x6574726F70707573;
      break;
    case 9:
      unint64_t result = 0x6572617774666F73;
      break;
    case 10:
      unint64_t result = 0x657461745363626FLL;
      break;
    case 11:
      unint64_t result = 0x5352726961706572;
      break;
    case 12:
      unint64_t result = 0x5374657364616568;
      break;
    case 13:
      unint64_t result = 0x6C46656369766564;
      break;
    case 14:
      unint64_t result = 1701667182;
      break;
    case 15:
      unint64_t result = 0x5472656767697274;
      break;
    case 16:
      unint64_t result = 0x6E69766172676E65;
      break;
    case 17:
      unint64_t result = 0x736143794D746F6ELL;
      break;
    case 19:
    case 30:
    case 31:
    case 33:
      unint64_t result = 0xD000000000000010;
      break;
    case 20:
      unint64_t result = 0x65707954627573;
      break;
    case 21:
      unint64_t result = 0x6F4D726961706572;
      break;
    case 22:
      unint64_t result = 0x65746F4E69726973;
      break;
    case 23:
      unint64_t result = 0x6E4F737574617473;
      break;
    case 24:
      unint64_t result = 0xD000000000000013;
      break;
    case 25:
      unint64_t result = 0x506C6C6143646E65;
      break;
    case 26:
      unint64_t result = 0x6C6C61436574756DLL;
      break;
    case 27:
      unint64_t result = 0xD000000000000014;
      break;
    case 28:
      unint64_t result = 0x7473654764616568;
      break;
    case 29:
      unint64_t result = 0x77654E7374616877;
      break;
    case 32:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

id sub_100038384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100008E18(&qword_1000D5450);
  __chkstk_darwin(v4 - 8);
  uint64_t v130 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  objc_super v122 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(void *)(a2 + 112) = _swiftEmptyArrayStorage;
  *(unsigned char *)(a2 + 120) = 7;
  Swift::String v9 = (int *)type metadata accessor for HeadphoneModel();
  *(void *)(a2 + 128) = 0;
  *(void *)(a2 + 136) = 0;
  uint64_t v10 = a2 + v9[11];
  uint64_t v131 = v7;
  uint64_t v11 = *(void (**)(void))(v7 + 56);
  uint64_t v119 = v10;
  uint64_t v132 = v6;
  uint64_t v121 = v7 + 56;
  id v120 = v11;
  v11();
  *(_DWORD *)(a2 + v9[12]) = 0;
  uint64_t v12 = (double *)(a2 + v9[13]);
  double *v12 = 0.0;
  v12[1] = -2.68156159e154;
  uint64_t v13 = (_OWORD *)(a2 + v9[14]);
  _OWORD *v13 = xmmword_1000A33A0;
  uint64_t v129 = v9[16];
  *(unsigned char *)(a2 + v129) = 0;
  Swift::String v14 = (double *)(a2 + v9[17]);
  *Swift::String v14 = 0.0;
  v14[1] = 0.0;
  Swift::String v15 = (double *)(a2 + v9[18]);
  double *v15 = 0.0;
  v15[1] = -2.68156159e154;
  id v127 = v15;
  uint64_t v134 = v9[19];
  *(unsigned char *)(a2 + v134) = 0;
  uint64_t v16 = v9[20];
  *(unsigned char *)(a2 + v16) = 0;
  *(unsigned char *)(a2 + v9[21]) = 0;
  *(unsigned char *)(a2 + v9[22]) = 0;
  *(unsigned char *)(a2 + v9[24]) = 0;
  uint64_t v128 = v9[25];
  *(unsigned char *)(a2 + v128) = 0;
  *(unsigned char *)(a2 + v9[26]) = MKBGetDeviceLockState() - 1 < 2;
  id result = (id)MobileGestalt_get_current_device();
  if (!result)
  {
    __break(1u);
    goto LABEL_237;
  }
  Swift::String v18 = result;
  uint64_t v19 = v9[27];
  char greenTeaDeviceCapability = MobileGestalt_get_greenTeaDeviceCapability();

  *(unsigned char *)(a2 + v19) = greenTeaDeviceCapability;
  uint64_t v21 = v9[30];
  *(unsigned char *)(a2 + v21) = 0;
  uint64_t v124 = v9[32];
  *(unsigned char *)(a2 + v124) = 0;
  *(void *)(a2 + v9[33]) = 0;
  *(void *)(a2 + v9[34]) = 0;
  uint64_t v22 = a2 + v9[35];
  uint64_t v23 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v125 = v9[36];
  *(void *)(a2 + v125) = 0;
  *(unsigned char *)(a2 + v9[37]) = 0;
  *(unsigned char *)(a2 + v9[39]) = 0;
  *(unsigned char *)(a2 + v9[40]) = 0;
  *(unsigned char *)(a2 + v9[41]) = 0;
  uint64_t v24 = a2 + v9[42];
  *(void *)uint64_t v24 = 0;
  *(unsigned char *)(v24 + 8) = -1;

  *(void *)&long long v137 = 0x6C46656369766564;
  *((void *)&v137 + 1) = 0xEB00000000736761;
  AnyHashable.init<A>(_:)();
  uint64_t v25 = *(void *)(a1 + 16);
  uint64_t v118 = v21;
  if (v25 && (unint64_t v26 = sub_10001D518((uint64_t)v136), (v27 & 1) != 0))
  {
    sub_10003101C(*(void *)(a1 + 56) + 32 * v26, (uint64_t)&v137);
  }
  else
  {
    long long v137 = 0u;
    long long v138 = 0u;
  }
  sub_10001F800((uint64_t)v136);
  if (!*((void *)&v138 + 1))
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    goto LABEL_10;
  }
  if (!swift_dynamicCast())
  {
LABEL_10:
    int v133 = 0;
    goto LABEL_11;
  }
  int v133 = LODWORD(v135[0]);
LABEL_11:
  strcpy((char *)&v137, "deviceAddress");
  HIWORD(v137) = -4864;
  AnyHashable.init<A>(_:)();
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v126 = v16;
  if (v28 && (unint64_t v29 = sub_10001D518((uint64_t)v136), (v30 & 1) != 0))
  {
    uint64_t v31 = v12;
    sub_10003101C(*(void *)(a1 + 56) + 32 * v29, (uint64_t)&v137);
  }
  else
  {
    uint64_t v31 = v12;
    long long v137 = 0u;
    long long v138 = 0u;
  }
  Swift::String v32 = v13;
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    Swift::String v33 = v14;
    int v34 = swift_dynamicCast();
    if (v34) {
      double v35 = v135[0];
    }
    else {
      double v35 = 0.0;
    }
    if (v34) {
      double v36 = v135[1];
    }
    else {
      double v36 = 0.0;
    }
  }
  else
  {
    Swift::String v33 = v14;
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    double v35 = 0.0;
    double v36 = 0.0;
  }
  swift_bridgeObjectRelease();
  *(double *)(a2 + 128) = v35;
  *(double *)(a2 + 136) = v36;
  *(void *)&long long v137 = 0x646F43726F6C6F63;
  *((void *)&v137 + 1) = 0xE900000000000065;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v37 = sub_10001D518((uint64_t)v136), (v38 & 1) != 0))
  {
    sub_10003101C(*(void *)(a1 + 56) + 32 * v37, (uint64_t)&v137);
  }
  else
  {
    long long v137 = 0u;
    long long v138 = 0u;
  }
  uint64_t v39 = v33;
  sub_10001F800((uint64_t)v136);
  uint64_t v40 = v32;
  if (*((void *)&v138 + 1))
  {
    uint64_t v41 = v31;
    if (swift_dynamicCast()) {
      char v42 = LOBYTE(v135[0]);
    }
    else {
      char v42 = 0;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    char v42 = 0;
    uint64_t v41 = v31;
  }
  *(unsigned char *)(a2 + 144) = v42;
  strcpy((char *)&v137, "caseLEDColor");
  BYTE13(v137) = 0;
  HIWORD(v137) = -5120;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v43 = sub_10001D518((uint64_t)v136), (v44 & 1) != 0))
  {
    sub_10003101C(*(void *)(a1 + 56) + 32 * v43, (uint64_t)&v137);
  }
  else
  {
    long long v137 = 0u;
    long long v138 = 0u;
  }
  sub_10001F800((uint64_t)v136);
  if (!*((void *)&v138 + 1))
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    goto LABEL_40;
  }
  if (!swift_dynamicCast())
  {
LABEL_40:
    char v45 = 0;
    goto LABEL_41;
  }
  char v45 = LOBYTE(v135[0]);
LABEL_41:
  *(unsigned char *)(a2 + 145) = v45;
  *(void *)&long long v137 = 0x7372655665736163;
  *((void *)&v137 + 1) = 0xE800000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v46 = sub_10001D518((uint64_t)v136), (v47 & 1) != 0))
  {
    sub_10003101C(*(void *)(a1 + 56) + 32 * v46, (uint64_t)&v137);
  }
  else
  {
    long long v137 = 0u;
    long long v138 = 0u;
  }
  sub_10001F800((uint64_t)v136);
  if (!*((void *)&v138 + 1))
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    goto LABEL_49;
  }
  if (!swift_dynamicCast())
  {
LABEL_49:
    char v48 = 0;
    goto LABEL_50;
  }
  char v48 = LOBYTE(v135[0]);
LABEL_50:
  *(unsigned char *)(a2 + 146) = v48;
  *(void *)&long long v137 = 6580592;
  *((void *)&v137 + 1) = 0xE300000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v49 = sub_10001D518((uint64_t)v136), (v50 & 1) != 0))
  {
    sub_10003101C(*(void *)(a1 + 56) + 32 * v49, (uint64_t)&v137);
  }
  else
  {
    long long v137 = 0u;
    long long v138 = 0u;
  }
  sub_10001F800((uint64_t)v136);
  if (!*((void *)&v138 + 1))
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    goto LABEL_58;
  }
  if (!swift_dynamicCast())
  {
LABEL_58:
    int v51 = 0;
    goto LABEL_59;
  }
  int v51 = LODWORD(v135[0]);
LABEL_59:
  uint64_t v52 = v9[31];
  *(_DWORD *)(a2 + v52) = v51;
  *(void *)&long long v137 = 0x636954646E756F66;
  *((void *)&v137 + 1) = 0xEA0000000000736BLL;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v53 = sub_10001D518((uint64_t)v136), (v54 & 1) != 0))
  {
    sub_10003101C(*(void *)(a1 + 56) + 32 * v53, (uint64_t)&v137);
  }
  else
  {
    long long v137 = 0u;
    long long v138 = 0u;
  }
  sub_10001F800((uint64_t)v136);
  if (!*((void *)&v138 + 1))
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    goto LABEL_67;
  }
  if (!swift_dynamicCast())
  {
LABEL_67:
    double v55 = 0.0;
    goto LABEL_68;
  }
  double v55 = v135[0];
LABEL_68:
  *(double *)(a2 + v9[15]) = v55;
  *(void *)&long long v137 = 0x6C65646F6DLL;
  *((void *)&v137 + 1) = 0xE500000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v56 = sub_10001D518((uint64_t)v136), (v57 & 1) != 0))
  {
    sub_10003101C(*(void *)(a1 + 56) + 32 * v56, (uint64_t)&v137);
  }
  else
  {
    long long v137 = 0u;
    long long v138 = 0u;
  }
  sub_10001F800((uint64_t)v136);
  uint64_t v123 = v52;
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      double v58 = v135[0];
      double v59 = v135[1];
      goto LABEL_77;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  double v58 = 0.0;
  double v59 = -2.68156159e154;
LABEL_77:
  unint64_t v60 = v127;
  swift_bridgeObjectRelease();
  *unint64_t v60 = v58;
  v60[1] = v59;
  *(void *)&long long v137 = 845441392;
  *((void *)&v137 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      int v61 = LODWORD(v135[0]);
      goto LABEL_82;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  int v61 = 0;
LABEL_82:
  *(_DWORD *)(a2 + v9[29]) = v61;
  *(void *)&long long v137 = 0x6574726F70707573;
  *((void *)&v137 + 1) = 0xEF65636976654464;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      char v62 = LOBYTE(v135[0]);
      goto LABEL_87;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  char v62 = 0;
LABEL_87:
  *(unsigned char *)(a2 + v134) = v62;
  strcpy((char *)&v137, "softwareVolume");
  HIBYTE(v137) = -18;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      char v63 = LOBYTE(v135[0]);
      goto LABEL_92;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  char v63 = 0;
LABEL_92:
  *(unsigned char *)(a2 + v124) = v63;
  *(void *)&long long v137 = 0x657461745363626FLL;
  *((void *)&v137 + 1) = 0xE800000000000000;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      int v64 = LOBYTE(v135[0]);
      goto LABEL_97;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  int v64 = 0;
LABEL_97:
  *(unsigned char *)(a2 + v126) = v64 == 2;
  *(void *)&long long v137 = 0x5352726961706572;
  *((void *)&v137 + 1) = 0xEA00000000004953;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      double v65 = v135[0];
      goto LABEL_102;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  double v65 = 0.0;
LABEL_102:
  *(double *)(a2 + v125) = v65;
  strcpy((char *)&v137, "headsetStatus");
  HIWORD(v137) = -4864;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      int v66 = LODWORD(v135[0]);
      goto LABEL_107;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  int v66 = 0;
LABEL_107:
  uint64_t v67 = v128;
  *(_DWORD *)(a2 + v9[28]) = v66;
  *(unsigned char *)(a2 + v67) = (v133 & 0x1000) != 0;
  Swift::String v68 = self;
  *(void *)(a2 + v9[38]) = [v68 announceCallsState];
  *(void *)&long long v137 = 1701667182;
  *((void *)&v137 + 1) = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      double v70 = v135[0];
      double v69 = v135[1];
      goto LABEL_112;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  double v70 = 0.0;
  double v69 = -2.68156159e154;
LABEL_112:
  swift_bridgeObjectRelease();
  *uint64_t v41 = v70;
  v41[1] = v69;
  strcpy((char *)&v137, "triggerTicks");
  BYTE13(v137) = 0;
  HIWORD(v137) = -5120;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast()) {
      double v71 = v135[0];
    }
    else {
      double v71 = 0.0;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    double v71 = 0.0;
  }
  *(double *)(a2 + v9[43]) = v71;
  strcpy((char *)&v137, "engravingData");
  HIWORD(v137) = -4864;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    int v72 = swift_dynamicCast();
    if (v72) {
      double v73 = v135[0];
    }
    else {
      double v73 = 0.0;
    }
    if (v72) {
      double v74 = v135[1];
    }
    else {
      double v74 = -3.10503618e231;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    double v73 = 0.0;
    double v74 = -3.10503618e231;
  }
  sub_10003AD58(*(void *)v40, *((void *)v40 + 1));
  *(double *)uint64_t v40 = v73;
  *((double *)v40 + 1) = v74;
  *(void *)&long long v137 = 0x736143794D746F6ELL;
  *((void *)&v137 + 1) = 0xE900000000000065;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    int v75 = swift_dynamicCast();
    uint64_t v76 = v123;
    if (v75) {
      char v77 = LOBYTE(v135[0]);
    }
    else {
      char v77 = 0;
    }
    uint64_t v78 = v129;
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    char v77 = 0;
    uint64_t v78 = v129;
    uint64_t v76 = v123;
  }
  *(unsigned char *)(a2 + v78) = v77;
  strcpy((char *)&v137, "deviceAddress2");
  HIBYTE(v137) = -18;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    int v79 = swift_dynamicCast();
    if (v79) {
      double v80 = v135[0];
    }
    else {
      double v80 = 0.0;
    }
    if (v79) {
      double v81 = v135[1];
    }
    else {
      double v81 = 0.0;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    double v80 = 0.0;
    double v81 = 0.0;
  }
  swift_bridgeObjectRelease();
  *uint64_t v39 = v80;
  v39[1] = v81;
  id v82 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:*(unsigned int *)(a2 + v76)];
  if (v82)
  {
    unint64_t v83 = v82;
    unsigned __int8 v84 = [v82 supportsSiri];
  }
  else
  {
    unsigned __int8 v84 = 0;
  }
  uint64_t v85 = v132;
  unsigned __int8 v86 = [v68 isSiriAllowedWhileLocked];
  unsigned __int8 v87 = [v68 isHeySiriEnabled];
  unsigned __int8 v88 = [v68 isCurrentLocaleSupported];
  uint64_t v89 = (unsigned __int8 *)(a2 + v9[23]);
  *uint64_t v89 = v86;
  v89[1] = v87;
  v89[2] = v88;
  v89[3] = v84;
  *(void *)&long long v137 = 0x65707954627573;
  *((void *)&v137 + 1) = 0xE700000000000000;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    int v90 = swift_dynamicCast();
    uint64_t v92 = (uint64_t)v130;
    uint64_t v91 = v131;
    if (v90) {
      int v93 = LOBYTE(v135[0]);
    }
    else {
      int v93 = 0;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    int v93 = 0;
    uint64_t v92 = (uint64_t)v130;
    uint64_t v91 = v131;
  }
  strcpy((char *)v135, "repairMode");
  BYTE3(v135[1]) = 0;
  HIDWORD(v135[1]) = -369098752;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if swift_dynamicCast() && (LOBYTE(v135[0]))
    {
      if ((v133 & 0x800) == 0) {
        goto LABEL_171;
      }
      id result = (id)MobileGestalt_get_current_device();
      if (result)
      {
        id v94 = result;
        char deviceSupportsWirelessSplitting = MobileGestalt_get_deviceSupportsWirelessSplitting();

        if (deviceSupportsWirelessSplitting)
        {
          char v96 = 12;
LABEL_172:
          *(unsigned char *)(a2 + 120) = v96;
          goto LABEL_173;
        }
LABEL_171:
        char v96 = 8;
        goto LABEL_172;
      }
LABEL_237:
      __break(1u);
      return result;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  strcpy((char *)v135, "siriNote");
  BYTE1(v135[1]) = 0;
  WORD1(v135[1]) = 0;
  HIDWORD(v135[1]) = -402653184;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if swift_dynamicCast() && (LOBYTE(v135[0]))
    {
      char v96 = 9;
      goto LABEL_172;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  if (v93 == 4)
  {
    char v96 = 6;
    goto LABEL_172;
  }
  strcpy((char *)v135, "statusOnly");
  BYTE3(v135[1]) = 0;
  HIDWORD(v135[1]) = -369098752;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if swift_dynamicCast() && (LOBYTE(v135[0]))
    {
      char v96 = 11;
      goto LABEL_172;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  v135[0] = -2.31584178e77;
  *(void *)&v135[1] = 0x80000001000A8A80;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if swift_dynamicCast() && (LOBYTE(v135[0]))
    {
      char v96 = 10;
      goto LABEL_172;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
LABEL_173:
  strcpy((char *)v135, "endCallProx");
  HIDWORD(v135[1]) = -352321536;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if swift_dynamicCast() && (LOBYTE(v135[0])) {
      *(unsigned char *)(a2 + 120) = 1;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  strcpy((char *)v135, "muteCallProx");
  BYTE5(v135[1]) = 0;
  HIWORD(v135[1]) = -5120;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if swift_dynamicCast() && (LOBYTE(v135[0])) {
      *(unsigned char *)(a2 + 120) = 2;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  v135[0] = -2.31584178e77;
  *(void *)&v135[1] = 0x80000001000A8AA0;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if swift_dynamicCast() && (LOBYTE(v135[0])) {
      *(unsigned char *)(a2 + 120) = 3;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  strcpy((char *)v135, "whatsNew");
  BYTE1(v135[1]) = 0;
  WORD1(v135[1]) = 0;
  HIDWORD(v135[1]) = -402653184;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if swift_dynamicCast() && (LOBYTE(v135[0]))
    {
      NSLog(_:_:)();
      *(unsigned char *)(a2 + 120) = 4;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  strcpy((char *)v135, "headGestures");
  BYTE5(v135[1]) = 0;
  HIWORD(v135[1]) = -5120;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if swift_dynamicCast() && (LOBYTE(v135[0]))
    {
      NSLog(_:_:)();
      *(unsigned char *)(a2 + 120) = 5;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  v135[0] = -2.31584178e77;
  *(void *)&v135[1] = 0x80000001000A8AC0;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (!*((void *)&v138 + 1))
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
    goto LABEL_203;
  }
  if (!swift_dynamicCast() || (LOBYTE(v135[0]) & 1) == 0)
  {
LABEL_203:
    if (*(unsigned char *)(a2 + 120) == 7) {
      goto LABEL_205;
    }
    goto LABEL_204;
  }
  *(unsigned char *)(a2 + 120) = 0;
LABEL_204:
  *(unsigned char *)(a2 + v134) = 1;
LABEL_205:
  v135[0] = -2.31584178e77;
  *(void *)&v135[1] = 0x80000001000A8AE0;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t v97 = *(void *)&v135[0];
      uint64_t v98 = *(void *)&v135[1];
      UUID.init(uuidString:)();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v92, 1, v85) == 1)
      {
        swift_bridgeObjectRelease();
        sub_10001A2AC(v92, &qword_1000D5450);
      }
      else
      {
        uint64_t v99 = v122;
        (*(void (**)(char *, uint64_t, uint64_t))(v91 + 32))(v122, v92, v85);
        uint64_t v100 = v119;
        sub_10001A2AC(v119, &qword_1000D5450);
        (*(void (**)(uint64_t, char *, uint64_t))(v91 + 16))(v100, v99, v85);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v120)(v100, 0, 1, v85);
        char v101 = sub_10003A144(v97, v98);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v91 + 8))(v99, v85);
        *(unsigned char *)(a2 + v118) = v101;
      }
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  v135[0] = -2.31584178e77;
  *(void *)&v135[1] = 0x80000001000A8B00;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      double v102 = v135[0];
      double v103 = fabs(v135[0]);
      uint64_t v104 = sub_10004BCB8(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v106 = v104[2];
      unint64_t v105 = v104[3];
      if (v106 >= v105 >> 1) {
        uint64_t v104 = sub_10004BCB8((void *)(v105 > 1), v106 + 1, 1, v104);
      }
      v104[2] = v106 + 1;
      id v107 = (double *)&v104[2 * v106];
      v107[4] = v103;
      *((unsigned char *)v107 + 40) = v102 > 0.0;
      *((unsigned char *)v107 + 41) = 2;
      goto LABEL_218;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  uint64_t v104 = _swiftEmptyArrayStorage;
LABEL_218:
  v135[0] = -2.31584178e77;
  *(void *)&v135[1] = 0x80000001000A8B20;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      double v108 = v135[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v104 = sub_10004BCB8(0, v104[2] + 1, 1, v104);
      }
      double v109 = fabs(v108);
      unint64_t v111 = v104[2];
      unint64_t v110 = v104[3];
      if (v111 >= v110 >> 1) {
        uint64_t v104 = sub_10004BCB8((void *)(v110 > 1), v111 + 1, 1, v104);
      }
      v104[2] = v111 + 1;
      uint64_t v112 = (double *)&v104[2 * v111];
      v112[4] = v109;
      *((unsigned char *)v112 + 40) = v108 > 0.0;
      *((unsigned char *)v112 + 41) = 1;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  v135[0] = -2.31584178e77;
  *(void *)&v135[1] = 0x80000001000A8B40;
  AnyHashable.init<A>(_:)();
  sub_1000758E8((uint64_t)v136, a1, &v137);
  swift_bridgeObjectRelease();
  sub_10001F800((uint64_t)v136);
  if (*((void *)&v138 + 1))
  {
    if (swift_dynamicCast())
    {
      double v113 = v135[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v104 = sub_10004BCB8(0, v104[2] + 1, 1, v104);
      }
      double v114 = fabs(v113);
      unint64_t v116 = v104[2];
      unint64_t v115 = v104[3];
      if (v116 >= v115 >> 1) {
        uint64_t v104 = sub_10004BCB8((void *)(v115 > 1), v116 + 1, 1, v104);
      }
      v104[2] = v116 + 1;
      unsigned int v117 = (double *)&v104[2 * v116];
      v117[4] = v114;
      *((unsigned char *)v117 + 40) = v113 > 0.0;
      *((unsigned char *)v117 + 41) = 0;
    }
  }
  else
  {
    sub_10001A2AC((uint64_t)&v137, &qword_1000D51D8);
  }
  id result = (id)swift_bridgeObjectRelease();
  *(void *)(a2 + 112) = v104;
  return result;
}

uint64_t sub_10003A144(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000024 && a2 == 0x80000001000A8BE0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 1;
  }
  if (a1 == 0xD000000000000024 && a2 == 0x80000001000A8C10
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 2;
  }
  if (a1 == 0xD000000000000024 && a2 == 0x80000001000A8C40
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 3;
  }
  if (a1 == 0xD000000000000024 && a2 == 0x80000001000A8C70
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 4;
  }
  uint64_t v4 = 5;
  if (a1 != 0xD000000000000024 || a2 != 0x80000001000A8CA0)
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      return 5;
    }
    else {
      return 0;
    }
  }
  return v4;
}

uint64_t sub_10003A2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D5450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_10003A360@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v86 = *(void *)(v3 - 8);
  uint64_t v87 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v85 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v82 - v7;
  __chkstk_darwin(v6);
  unsigned __int8 v88 = (char *)&v82 - v9;
  uint64_t v11 = a1[3];
  uint64_t v10 = a1[4];
  sub_10000C80C(a1, v11);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
  uint64_t v13 = v12(v11, v10);
  uint64_t v91 = v14;
  uint64_t v92 = v13;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_10000C80C(a1, v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  uint64_t v89 = v18;
  uint64_t v90 = v17;
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  sub_10000C80C(a1, v19);
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
  uint64_t v22 = v12(v11, v10);
  uint64_t v24 = v23;
  id v25 = [self currentDevice];
  id v26 = [v25 userInterfaceIdiom];

  if (v26 == (id)1)
  {
    if (v22 == 0xD000000000000012 && v24 == 0x80000001000A5D20) {
      char v27 = 1;
    }
    else {
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  else
  {
    char v27 = 0;
  }
  if (qword_1000D43C0 != -1) {
    swift_once();
  }
  if (!*((void *)off_1000D5448 + 2)) {
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  sub_10001D4A0(v22, v24);
  if ((v28 & 1) == 0)
  {
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    unint64_t v29 = self;
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v31 = [self mainScreen];
    [v31 scale];
    double v33 = v32;

    id v34 = [v29 _applicationIconImageForBundleIdentifier:v30 format:0 scale:v33];
LABEL_15:
    uint64_t v36 = v92;
    uint64_t v35 = v93;
    uint64_t v38 = v90;
    uint64_t v37 = v91;
    uint64_t v39 = v89;
LABEL_16:
    id result = (id)sub_100017BC4((uint64_t)a1);
    *(void *)uint64_t v35 = v36;
    *(void *)(v35 + 8) = v37;
    *(void *)(v35 + 16) = v38;
    *(void *)(v35 + 24) = v39;
    *(unsigned char *)(v35 + 32) = v21 & 1;
    *(void *)(v35 + 40) = v34;
    return result;
  }
  int v84 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v27)
  {
    LOBYTE(v21) = v84;
    goto LABEL_13;
  }
  if (qword_1000D43B8 != -1) {
    swift_once();
  }
  uint64_t v41 = v87;
  sub_100008278(v87, (uint64_t)qword_1000D5430);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  char v42 = v88;
  URL.appendingPathExtension(_:)();
  uint64_t v43 = v86 + 8;
  char v44 = *(void (**)(char *, uint64_t))(v86 + 8);
  v44(v8, v41);
  id v45 = objc_allocWithZone((Class)NSBundle);
  URL._bridgeToObjectiveC()(v46);
  char v48 = v47;
  id v49 = [v45 initWithURL:v47];

  unint64_t v83 = v44;
  if (!v49)
  {
    swift_bridgeObjectRelease();
LABEL_26:
    int v66 = v85;
    if (qword_1000D43B0 != -1) {
      swift_once();
    }
    uint64_t v67 = type metadata accessor for Logger();
    sub_100008278(v67, (uint64_t)qword_1000D5418);
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v66, v42, v41);
    Swift::String v68 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v86 = v43;
      double v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      *(_DWORD *)double v70 = 136315138;
      sub_100012B44();
      uint64_t v71 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v94 = sub_10005D8C8(v71, v72, &v95);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      double v73 = v83;
      v83(v66, v41);
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "No bundle found at %s", v70, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v73(v88, v41);
    }
    else
    {

      double v74 = v83;
      v83(v66, v41);
      v74(v42, v41);
    }
    id v34 = 0;
    goto LABEL_32;
  }
  char v50 = (char *)v49;
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v52 = [self imageNamed:v51 inBundle:v50];

  if (!v52)
  {

    uint64_t v41 = v87;
    char v42 = v88;
    goto LABEL_26;
  }
  uint64_t v85 = v50;
  id v53 = [v52 CGImage];
  id v82 = v52;
  [v52 scale];
  id v55 = [objc_allocWithZone((Class)IFImage) initWithCGImage:v53 scale:v54];

  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_1000A33B0;
  *(void *)(v56 + 32) = v55;
  uint64_t v95 = v56;
  specialized Array._endMutation()();
  id v57 = objc_allocWithZone((Class)ISIcon);
  sub_10003AD18();
  id v58 = v55;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v60 = [v57 initWithImages:isa];

  id v61 = [self imageDescriptorNamed:kISImageDescriptorTableUIName];
  id v62 = [v60 imageForDescriptor:v61];
  if (!v62)
  {
    uint64_t v86 = v43;
    if (qword_1000D43B0 != -1) {
      swift_once();
    }
    uint64_t v75 = type metadata accessor for Logger();
    sub_100008278(v75, (uint64_t)qword_1000D5418);
    uint64_t v76 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.error.getter();
    BOOL v78 = os_log_type_enabled(v76, v77);
    LOBYTE(v21) = v84;
    uint64_t v79 = v87;
    double v80 = v88;
    if (v78)
    {
      double v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v81 = 0;
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "Could not mask icon", v81, 2u);
      swift_slowDealloc();
    }

    v83(v80, v79);
    id v34 = 0;
    goto LABEL_15;
  }
  char v63 = v62;
  id result = [v62 CGImage];
  if (result)
  {
    int v64 = result;
    [v63 scale];
    id v34 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v64 scale:0 orientation:v65];

    v83(v88, v87);
LABEL_32:
    uint64_t v36 = v92;
    uint64_t v35 = v93;
    uint64_t v38 = v90;
    uint64_t v37 = v91;
    uint64_t v39 = v89;
    LOBYTE(v21) = v84;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

unint64_t sub_10003AD18()
{
  unint64_t result = qword_1000D55B8;
  if (!qword_1000D55B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D55B8);
  }
  return result;
}

uint64_t sub_10003AD58(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10001FB5C(a1, a2);
  }
  return a1;
}

void destroy for HeadphoneAnnounceSource(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for HeadphoneAnnounceSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for HeadphoneAnnounceSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)(a1 + 40);
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  id v6 = v5;

  return a1;
}

__n128 initializeWithTake for HeadphoneAnnounceSource(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for HeadphoneAnnounceSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v6 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneAnnounceSource(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneAnnounceSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneAnnounceSource()
{
  return &type metadata for HeadphoneAnnounceSource;
}

uint64_t getEnumTagSinglePayload for HeadphoneModel.TestMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HeadphoneModel.TestMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003B10CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneModel.TestMode()
{
  return &type metadata for HeadphoneModel.TestMode;
}

_DWORD *initializeBufferWithCopyOfBuffer for HeadphoneModel.SiriState(_DWORD *result, _DWORD *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneModel.SiriState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[4]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneModel.SiriState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneModel.SiriState()
{
  return &type metadata for HeadphoneModel.SiriState;
}

uint64_t getEnumTagSinglePayload for HeadphoneModel.Mode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HeadphoneModel.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *__n128 result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10003B350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneModel.Mode()
{
  return &type metadata for HeadphoneModel.Mode;
}

uint64_t initializeBufferWithCopyOfBuffer for HeadphoneBatteryInfo(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for HeadphoneBatteryInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneBatteryInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneBatteryInfo()
{
  return &type metadata for HeadphoneBatteryInfo;
}

unint64_t sub_10003B448()
{
  unint64_t result = qword_1000D55C0;
  if (!qword_1000D55C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55C0);
  }
  return result;
}

unint64_t sub_10003B4A0()
{
  unint64_t result = qword_1000D55C8;
  if (!qword_1000D55C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55C8);
  }
  return result;
}

unint64_t sub_10003B4F8()
{
  unint64_t result = qword_1000D55D0;
  if (!qword_1000D55D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D55D0);
  }
  return result;
}

unint64_t sub_10003B558(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_100008E18(&qword_1000D5658);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  unsigned int v6 = &v37;
  BOOL v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = (char *)&type metadata for Any + 8;
  uint64_t v11 = &type metadata for Bool;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_10003FDBC();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    uint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_10003FDAC(v6, v7);
    sub_10003FDAC(v7, v40);
    sub_10003FDAC(v40, &v38);
    unint64_t result = sub_10001D4A0(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      uint64_t v12 = v7;
      uint64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      uint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      unsigned int v6 = v13;
      BOOL v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_100017BC4((uint64_t)v18);
      unint64_t result = (unint64_t)sub_10003FDAC(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v27 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_10003FDAC(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_10003B8B4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D55E0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D55E0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10003B97C()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Dismissing flow", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v7 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(ObjectType, v7);
    swift_unknownObjectRelease();
    uint64_t v10 = (void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
    swift_beginAccess();
    uint64_t v11 = v10[3];
    if (v11)
    {
      sub_10000C80C(v10, v11);
      sub_10008A6B4(v9);
    }
  }
  uint64_t v12 = (void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
  swift_beginAccess();
  uint64_t v13 = v12[3];
  if (v13)
  {
    sub_10000C80C(v12, v13);
    swift_retain();
    swift_bridgeObjectRetain();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    sub_100040204();
    sub_10003F8B0();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    AnalyticsSendEvent();
    swift_release();
  }
  id result = *(id *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (result) {
    return [result dismissViewControllerAnimated:1 completion:0];
  }
  return result;
}

void sub_10003BBD0()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing announce intro view", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneAnnounceIntroViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneAnnounceIntroViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneAnnounceIntroViewController_type, (void (*)(char *))sub_10000D200, (uint64_t)&off_1000C2880);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003BD74()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing announce customize view", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneAnnounceCustomizeViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_type, (void (*)(char *))sub_1000703EC, (uint64_t)&off_1000C5398);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003BF18()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing heart rate monitor view", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadhponeHeartRateViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_type, (void (*)(char *))sub_10007784C, (uint64_t)&off_1000C5910);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003C0BC()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Yodel Card", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneYodelFeaturesViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneYodelFeaturesViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneYodelFeaturesViewController_type, (void (*)(char *))sub_10002C4B8, (uint64_t)&off_1000C3778);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003C260()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Yodel Hearing Protection Upsell", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneYodelHearingProtectionViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneYodelHearingProtectionViewController_type, (void (*)(char *))sub_10001C340, (uint64_t)&off_1000C3080);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003C404()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Yodel Hearing Switch Listening mode", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneYodelHearingSwitchListeningModeViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService54HeadphoneYodelHearingSwitchListeningModeViewController_type, (void (*)(char *))sub_10002DAD8, (uint64_t)&off_1000C3830);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003C5A8()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Yodel Hearing Test Upsell", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneYodelHearingTestViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService39HeadphoneYodelHearingTestViewController_type, (void (*)(char *))sub_10000C158, (uint64_t)&off_1000C27C8);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003C74C()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing connect view", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneConnectViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_type, (void (*)(char *))sub_100047064, (uint64_t)&off_1000C4428);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003C8F0()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing control center view", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneControlCenterTrainingViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_type, (void (*)(char *))sub_100083BAC, (uint64_t)&off_1000C5D48);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003CA94()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing end call", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneEndCallViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneEndCallViewController_type, (void (*)(char *))sub_1000143D8, (uint64_t)&off_1000C2A58);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003CC38()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Adaptive Controls Upsell", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneAdaptiveControlsUpsellViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneAdaptiveControlsUpsellViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService45HeadphoneAdaptiveControlsUpsellViewController_type, (void (*)(char *))sub_100007428, (uint64_t)&off_1000C2320);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003CDDC()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Adaptive Controls - Adaptive Mode Card", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneAdaptiveControlsAdaptiveModeViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService51HeadphoneAdaptiveControlsAdaptiveModeViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService51HeadphoneAdaptiveControlsAdaptiveModeViewController_type, (void (*)(char *))sub_1000346E8, (uint64_t)&off_1000C3BA0);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003CF80()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Adaptive Controls - Personalized Volume Card", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneAdaptiveControlsPersonalizedVolumeViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController_type, (void (*)(char *))sub_1000868E8, (uint64_t)&off_1000C5F18);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003D124()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Adaptive Controls - Conversation Awareness Card", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneAdaptiveControlsConversationAwarenessViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService60HeadphoneAdaptiveControlsConversationAwarenessViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService60HeadphoneAdaptiveControlsConversationAwarenessViewController_type, (void (*)(char *))sub_10001A958, (uint64_t)&off_1000C2FC8);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003D2C8()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Whats New", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneWhatsNewUpsellViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_type, (void (*)(char *))sub_10006D454, (uint64_t)&off_1000C5178);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003D46C()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Head Gestures", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneHeadGesturesUpsellViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_type, (void (*)(char *))sub_10006A318, (uint64_t)&off_1000C50C0);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003D610()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing error view", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneErrorViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneErrorViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneErrorViewController_type, (void (*)(char *))sub_10003239C, (uint64_t)&off_1000C3A98);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003D7B4(void *a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_marketingUpsell);
  if (v3)
  {
    os_log_type_t v4 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_marketingUpsell + 8);
    sub_10003F8B0();
    id v5 = v3;
    id v12 = v4;
    char v6 = static NSObject.== infix(_:_:)();

    if (v6) {
      goto LABEL_5;
    }
  }
  id v7 = objc_allocWithZone((Class)type metadata accessor for HeadphoneMarketingUpsellViewController());
  id v12 = sub_10002A0E8(a1);
LABEL_5:
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100008278(v8, (uint64_t)qword_1000D55E0);
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Showing marketing upsell view", v11, 2u);
    swift_slowDealloc();
  }

  sub_10003D934((uint64_t)v12);
}

void sub_10003D934(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for HeadphoneViewModel(0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v7)
  {
    uint64_t v8 = (void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
    swift_beginAccess();
    uint64_t v9 = v8[3];
    if (v9)
    {
      sub_10000C80C(v8, v9);
      *(void *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_presenter + 8) = &off_1000C62B8;
      swift_unknownObjectWeakAssign();
      int v10 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService38HeadphoneMarketingUpsellViewController_type);
      id v11 = v7;
      sub_10008F8D0(v10, (uint64_t)v6);
      sub_10003F854((uint64_t)v6);
    }
    else
    {
      id v12 = v7;
    }
    *(void *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView + 8) = &off_1000C3710;
    swift_unknownObjectWeakAssign();
    [v7 pushViewController:a1 animated:1];
  }
}

void sub_10003DA88(void *a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_marketingUpsell;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_marketingUpsell);
  if (!v4
    || (uint64_t v5 = *(void **)(v3 + 8),
        sub_10003F8B0(),
        id v6 = v4,
        id v7 = v5,
        char v8 = static NSObject.== infix(_:_:)(),
        v7,
        v6,
        (v8 & 1) == 0))
  {
    if (qword_1000D43C8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100008278(v9, (uint64_t)qword_1000D55E0);
    int v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Preloading request handled", v12, 2u);
      swift_slowDealloc();
    }

    id v13 = objc_allocWithZone((Class)type metadata accessor for HeadphoneMarketingUpsellViewController());
    id v14 = a1;
    id v15 = sub_10002A0E8(v14);
    uint64_t v17 = *(void **)v3;
    uint64_t v16 = *(void **)(v3 + 8);
    *(void *)uint64_t v3 = v14;
    *(void *)(v3 + 8) = v15;
    sub_10001F71C(v17, v16);
  }
}

void sub_10003DC0C()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing install FindMy App view", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneInstallFindMyViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneInstallFindMyViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneInstallFindMyViewController_type, (void (*)(char *))sub_10000AB54, (uint64_t)&off_1000C2710);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003DDB0()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing AirPods linking view", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneLinkingViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneLinkingViewController_type, (void (*)(char *))sub_100030118, (uint64_t)&off_1000C3978);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003DF54()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing not genuine view", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneNotGenuineViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_type, (void (*)(char *))sub_100018BBC, (uint64_t)&off_1000C2F10);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003E0F8()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing repair instructions view", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneRepairViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_type, (void (*)(char *))sub_10007FBD0, (uint64_t)&off_1000C5C70);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003E29C()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing Hey Siri training view", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneSiriViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneSiriViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneSiriViewController_type, (void (*)(char *))sub_100044FA4, (uint64_t)&off_1000C4330);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003E440()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing share audio done view", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneShareAudioDoneViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneShareAudioDoneViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneShareAudioDoneViewController_type, (void (*)(char *))sub_100024DBC, (uint64_t)&off_1000C33B0);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003E5E4()
{
  uint64_t v1 = v0;
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D55E0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Showing spatial audio profile view", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
  if (v6)
  {
    type metadata accessor for HeadphoneSpatialAudioProfileViewController();
    id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v8 = v6;
    id v9 = [v7 initWithNibName:0 bundle:0];
    sub_10003F3F0((uint64_t)v9, &OBJC_IVAR____TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController_type, (void (*)(char *))sub_1000879BC, (uint64_t)&off_1000C6010);
    [v8 pushViewController:v9 animated:1];
  }
}

void sub_10003E788(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  switch(*(unsigned char *)(a2 + 120))
  {
    case 1:
      type metadata accessor for HeadphoneEndCallUpsellViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneEndCallUpsellViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneEndCallUpsellViewController_type, (void (*)(char *))sub_1000726B0, (uint64_t)&off_1000C5478);
      unint64_t v6 = 0xE800000000000000;
      uint64_t v7 = 0x6C6C616320646E65;
      goto LABEL_18;
    case 2:
      type metadata accessor for HeadphoneMuteCallUpsellViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_type, (void (*)(char *))sub_1000444B4, (uint64_t)&off_1000C42A0);
      uint64_t v7 = 0x6C6163206574756DLL;
      unint64_t v6 = 0xE90000000000006CLL;
      goto LABEL_18;
    case 3:
      uint64_t v7 = 0xD000000000000011;
      type metadata accessor for HeadphoneAdaptiveControlsPersonalizedVolumeViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController_type, (void (*)(char *))sub_1000868E8, (uint64_t)&off_1000C5F18);
      id v8 = "adaptive controls";
      goto LABEL_17;
    case 4:
      type metadata accessor for HeadphoneWhatsNewUpsellViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_type, (void (*)(char *))sub_10006D454, (uint64_t)&off_1000C5178);
      unint64_t v6 = 0xE900000000000077;
      uint64_t v7 = 0x656E207374616877;
      goto LABEL_18;
    case 5:
      type metadata accessor for HeadphoneHeadGesturesUpsellViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_type, (void (*)(char *))sub_10006A318, (uint64_t)&off_1000C50C0);
      unint64_t v6 = 0xED00007365727574;
      uint64_t v7 = 0x7365672064616568;
      goto LABEL_18;
    case 6:
      type metadata accessor for HeadphoneMismatchViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F1F4((uint64_t)v5);
      unint64_t v6 = 0xED00007364756220;
      uint64_t v7 = 0x686374616D73696DLL;
      goto LABEL_18;
    case 7:
      if (*(unsigned char *)(a2 + *(int *)(type metadata accessor for HeadphoneModel() + 76)) == 1)
      {
        type metadata accessor for HeadphoneConnectViewController();
        uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
        sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_type, (void (*)(char *))sub_100047064, (uint64_t)&off_1000C4428);
        unint64_t v6 = 0xE700000000000000;
        uint64_t v7 = 0x7463656E6E6F63;
      }
      else
      {
        type metadata accessor for HeadphoneUnsupportedViewController();
        uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
        sub_10003EFEC((uint64_t)v5);
        uint64_t v7 = 0xD000000000000013;
        id v8 = "unsupported connect";
LABEL_17:
        unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      }
LABEL_18:
      if (qword_1000D43C8 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_100008278(v9, (uint64_t)qword_1000D55E0);
      swift_bridgeObjectRetain();
      int v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        id v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        *(_DWORD *)id v12 = 136315138;
        swift_bridgeObjectRetain();
        sub_10005D8C8(v7, v6, &v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Showing first view: %s", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      id v13 = [a1 presentProxCardFlowWithDelegate:v3 initialViewController:v5];
      id v14 = *(void **)(v3 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
      *(void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController) = v13;

      uint64_t v15 = mach_absolute_time();
      *(void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_initialCardDisplayUpTicks) = v15;
      return;
    case 8:
      type metadata accessor for HeadphoneNotYoursViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_type, (void (*)(char *))sub_1000883DC, (uint64_t)&off_1000C60C8);
      unint64_t v6 = 0xE900000000000073;
      uint64_t v7 = 0x72756F7920746F6ELL;
      goto LABEL_18;
    case 9:
      type metadata accessor for HeadphoneAnnounceIntroViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneAnnounceIntroViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneAnnounceIntroViewController_type, (void (*)(char *))sub_10000D200, (uint64_t)&off_1000C2880);
      uint64_t v7 = 0xD000000000000016;
      id v8 = "announce notifications";
      goto LABEL_17;
    case 0xA:
      type metadata accessor for HeadphoneSpatialAudioProfileViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController_type, (void (*)(char *))sub_1000879BC, (uint64_t)&off_1000C6010);
      uint64_t v7 = 0xD000000000000015;
      id v8 = "spatial audio profile";
      goto LABEL_17;
    case 0xB:
      uint64_t v5 = sub_100089998();
      unint64_t v6 = 0xE700000000000000;
      uint64_t v7 = 0x79726574746162;
      goto LABEL_18;
    case 0xC:
      uint64_t v7 = 0xD000000000000011;
      type metadata accessor for HeadphoneShareAudioViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_type, (void (*)(char *))sub_10007B9E4, (uint64_t)&off_1000C5B68);
      id v8 = "wireless splitter";
      goto LABEL_17;
    default:
      type metadata accessor for HeadphoneNotGenuineViewController();
      uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
      sub_10003F3F0((uint64_t)v5, &OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_presenter, &OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneNotGenuineViewController_type, (void (*)(char *))sub_100018BBC, (uint64_t)&off_1000C2F10);
      unint64_t v6 = 0xEB00000000656E69;
      uint64_t v7 = 0x756E656720746F6ELL;
      goto LABEL_18;
  }
}

uint64_t sub_10003EFEC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  os_log_type_t v11 = (void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
  swift_beginAccess();
  uint64_t v12 = v11[3];
  if (v12)
  {
    id v13 = sub_10000C80C(v11, v12);
    id v14 = (void *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_presenter);
    *id v14 = *v13;
    v14[1] = &off_1000C62B8;
    swift_retain();
    swift_unknownObjectRelease();
    sub_10008F8D0(*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_type), (uint64_t)v10);
    sub_10003FDC4((uint64_t)v10, (uint64_t)v6);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    uint64_t v15 = a1 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_viewModel;
    swift_beginAccess();
    sub_10003FE28((uint64_t)v6, v15);
    swift_endAccess();
    sub_10003F854((uint64_t)v10);
  }
  *(void *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView + 8) = &off_1000C5030;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_10003F1F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  os_log_type_t v11 = (void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
  swift_beginAccess();
  uint64_t v12 = v11[3];
  if (v12)
  {
    sub_10000C80C(v11, v12);
    *(void *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_presenter + 8) = &off_1000C62B8;
    swift_unknownObjectWeakAssign();
    sub_10008F8D0(*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_type), (uint64_t)v10);
    sub_10003FDC4((uint64_t)v10, (uint64_t)v6);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    uint64_t v13 = a1 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneMismatchViewController_viewModel;
    swift_beginAccess();
    sub_10003FE28((uint64_t)v6, v13);
    swift_endAccess();
    sub_10003F854((uint64_t)v10);
  }
  *(void *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView + 8) = &off_1000C3340;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_10003F3F0(uint64_t a1, void *a2, void *a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v10 = v5;
  uint64_t v12 = type metadata accessor for HeadphoneViewModel(0);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)(v5 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
  swift_beginAccess();
  uint64_t v16 = v15[3];
  if (v16)
  {
    sub_10000C80C(v15, v16);
    *(void *)(a1 + *a2 + 8) = &off_1000C62B8;
    swift_unknownObjectWeakAssign();
    sub_10008F8D0(*(unsigned __int8 *)(a1 + *a3), (uint64_t)v14);
    a4(v14);
    sub_10003F854((uint64_t)v14);
  }
  *(void *)(v10 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView + 8) = a5;
  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for HeadphoneRouter()
{
  return self;
}

uint64_t sub_10003F678()
{
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100008278(v0, (uint64_t)qword_1000D55E0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Flow did dismiss", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)(result + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor);
    swift_beginAccess();
    uint64_t v6 = v5[3];
    if (v6)
    {
      uint64_t v7 = sub_10000C80C(v5, v6);
      uint64_t v8 = *v7;
      [*(id *)(*v7 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery) invalidate];
      [*(id *)(v8 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery) invalidate];
      sub_10005192C(0);
    }
    uint64_t v9 = (void *)sub_1000326D8();
    if (v9)
    {
      [v9 dismiss];
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10003F854(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10003F8B0()
{
  unint64_t result = qword_1000D5650;
  if (!qword_1000D5650)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D5650);
  }
  return result;
}

uint64_t sub_10003F8F0()
{
  uint64_t v0 = sub_100008E18(&qword_1000D4800);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D43C8 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100008278(v7, (uint64_t)qword_1000D55E0);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Launching bluetooth settings", v10, 2u);
    swift_slowDealloc();
  }

  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1) {
    return sub_10001A2AC((uint64_t)v2, &qword_1000D4800);
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  sub_100008E18(&qword_1000D5360);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A2760;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v13;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 64) = v14;
  *(unsigned char *)(inited + 72) = 1;
  unint64_t v15 = sub_1000892A8(inited);
  id v16 = [self defaultWorkspace];
  if (v16)
  {
    uint64_t v18 = v16;
    URL._bridgeToObjectiveC()(v17);
    int64_t v20 = v19;
    sub_10003B558(v15);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v32 = 0;
    unsigned int v22 = [v18 openSensitiveURL:v20 withOptions:isa error:&v32];

    if (v22)
    {
      int64_t v23 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
      id v24 = v32;
      return v23(v6, v3);
    }
    else
    {
      id v25 = v32;
      uint64_t v26 = _convertNSErrorToError(_:)();

      swift_willThrow();
      sub_100008E18(&qword_1000D5368);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1000A19D0;
      id v32 = 0;
      unint64_t v33 = 0xE000000000000000;
      _StringGuts.grow(_:)(27);
      v28._uint64_t countAndFlagsBits = 0xD000000000000019;
      v28._object = (void *)0x80000001000A8900;
      String.append(_:)(v28);
      v31[1] = v26;
      sub_100008E18((uint64_t *)&unk_1000D50A0);
      _print_unlocked<A, B>(_:_:)();
      id v29 = v32;
      unint64_t v30 = v33;
      *(void *)(v27 + 56) = &type metadata for String;
      *(void *)(v27 + 32) = v29;
      *(void *)(v27 + 40) = v30;
      print(_:separator:terminator:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
}

_OWORD *sub_10003FDAC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10003FDBC()
{
  return swift_release();
}

uint64_t sub_10003FDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003FE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D5660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10003FE94()
{
  Hasher._combine(_:)(*v0 + 1);
}

uint64_t sub_10003FEC8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1000436FC(*a1);
  *a2 = result;
  return result;
}

void sub_10003FEF4(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

Swift::Int sub_10003FF04()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

Swift::Int sub_10003FF4C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

uint64_t sub_10003FF90@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100043724(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10003FFBC@<X0>(unsigned char *a1@<X8>)
{
  *a1 = 6;
  long long v2 = (int *)type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
  uint64_t v3 = &a1[v2[5]];
  uint64_t v4 = type metadata accessor for HeadphoneHardwareModel();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v6 = &a1[v2[6]];
  *(void *)uint64_t v6 = 0;
  v6[8] = 1;
  a1[v2[7]] = 2;
  uint64_t v7 = &a1[v2[8]];
  *(_DWORD *)uint64_t v7 = 0;
  v7[4] = 1;
  uint64_t v8 = &a1[v2[9]];
  *(_DWORD *)uint64_t v8 = 0;
  v8[4] = 1;
  a1[v2[10]] = 7;
  a1[v2[11]] = 7;
  a1[v2[12]] = 7;
  a1[v2[13]] = 7;
  a1[v2[14]] = 7;
  a1[v2[15]] = 7;
  a1[v2[16]] = 7;
  a1[v2[17]] = 7;
  a1[v2[18]] = 7;
  a1[v2[19]] = 7;
  a1[v2[20]] = 7;
  a1[v2[21]] = 7;
  a1[v2[22]] = 7;
  a1[v2[23]] = 7;
  a1[v2[24]] = 7;
  a1[v2[25]] = 7;
  a1[v2[26]] = 7;
  a1[v2[27]] = 7;
  a1[v2[28]] = 7;
  a1[v2[29]] = 7;
  a1[v2[30]] = 7;
  a1[v2[31]] = 7;
  a1[v2[32]] = 7;
  a1[v2[33]] = 7;
  a1[v2[34]] = 7;
  a1[v2[35]] = 7;
  a1[v2[36]] = 7;
  a1[v2[37]] = 7;
  a1[v2[38]] = 7;
  a1[v2[39]] = 7;
  a1[v2[40]] = 7;
  a1[v2[41]] = 7;
  a1[v2[42]] = 7;
  a1[v2[43]] = 7;
  return result;
}

uint64_t sub_100040194(uint64_t result, char a2)
{
  if result <= 0x1Du && ((0x3FFFBC1Fu >> result))
  {
    uint64_t v4 = qword_1000A39F8[(char)result];
    uint64_t v5 = v2 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
    uint64_t result = type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
    *(unsigned char *)(v5 + *(int *)(result + 4 * v4)) = a2;
  }
  return result;
}

void *sub_100040204()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  uint64_t v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics);
  if (v2 != 6)
  {
    sub_1000427B0();
    Class isa = NSNumber.init(integerLiteral:)(v2 + 1).super.super.isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v5 = (void *)sub_1000427F0((uint64_t)isa, 0x776F6C46786F7250, 0xEC00000065707954, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = (int *)type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
  uint64_t v7 = v1 + v6[6];
  if ((*(unsigned char *)(v7 + 8) & 1) == 0)
  {
    Swift::Int v8 = *(void *)v7;
    sub_1000427B0();
    Class v9 = NSNumber.init(integerLiteral:)(v8).super.super.isa;
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    os_log_type_t v11 = (void *)sub_1000427F0((uint64_t)v9, 4475216, 0xE300000000000000, v10);
    swift_bridgeObjectRelease();
  }
  int v12 = *(unsigned __int8 *)(v1 + v6[7]);
  if (v12 != 2)
  {
    Swift::Bool v13 = v12 & 1;
    sub_1000427B0();
    Class v14 = NSNumber.init(BOOLeanLiteral:)(v13).super.super.isa;
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    id v16 = (void *)sub_1000427F0((uint64_t)v14, 0x6C6C657370557349, 0xE800000000000000, v15);
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (int *)(v1 + v6[8]);
  if ((v17[1] & 1) == 0)
  {
    Swift::Int v18 = *v17;
    sub_1000427B0();
    Class v19 = NSNumber.init(integerLiteral:)(v18).super.super.isa;
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = (void *)sub_1000427F0((uint64_t)v19, 0x616D69747345494ELL, 0xEC0000006E6F6974, v20);
    swift_bridgeObjectRelease();
  }
  unsigned int v22 = (int *)(v1 + v6[9]);
  if ((v22[1] & 1) == 0)
  {
    Swift::Int v23 = *v22;
    sub_1000427B0();
    Class v24 = NSNumber.init(integerLiteral:)(v23).super.super.isa;
    char v25 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = (void *)sub_1000427F0((uint64_t)v24, 0xD000000000000011, 0x80000001000A9150, v25);
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = *(unsigned __int8 *)(v1 + v6[10]);
  if (v27 != 7)
  {
    sub_1000427B0();
    Class v28 = NSNumber.init(integerLiteral:)(v27 + 1).super.super.isa;
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v30 = (void *)sub_1000427F0((uint64_t)v28, 0x567463656E6E6F43, 0xEB00000000776569, v29);
    swift_bridgeObjectRelease();
  }
  uint64_t v31 = *(unsigned __int8 *)(v1 + v6[11]);
  if (v31 != 7)
  {
    sub_1000427B0();
    Class v32 = NSNumber.init(integerLiteral:)(v31 + 1).super.super.isa;
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v34 = (void *)sub_1000427F0((uint64_t)v32, 0x3165727574616546, 0xE800000000000000, v33);
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = *(unsigned __int8 *)(v1 + v6[12]);
  if (v35 != 7)
  {
    sub_1000427B0();
    Class v36 = NSNumber.init(integerLiteral:)(v35 + 1).super.super.isa;
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    long long v38 = (void *)sub_1000427F0((uint64_t)v36, 0x3265727574616546, 0xE800000000000000, v37);
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = *(unsigned __int8 *)(v1 + v6[14]);
  if (v39 != 7)
  {
    sub_1000427B0();
    Class v40 = NSNumber.init(integerLiteral:)(v39 + 1).super.super.isa;
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    char v42 = (void *)sub_1000427F0((uint64_t)v40, 0x566C6C6143646E45, 0xEB00000000776569, v41);
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = *(unsigned __int8 *)(v1 + v6[15]);
  if (v43 != 7)
  {
    sub_1000427B0();
    Class v44 = NSNumber.init(integerLiteral:)(v43 + 1).super.super.isa;
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v46 = (void *)sub_1000427F0((uint64_t)v44, 0xD000000000000019, 0x80000001000A9130, v45);
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = *(unsigned __int8 *)(v1 + v6[16]);
  if (v47 != 7)
  {
    sub_1000427B0();
    Class v48 = NSNumber.init(integerLiteral:)(v47 + 1).super.super.isa;
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    char v50 = (void *)sub_1000427F0((uint64_t)v48, 0xD000000000000013, 0x80000001000A9110, v49);
    swift_bridgeObjectRelease();
  }
  uint64_t v51 = *(unsigned __int8 *)(v1 + v6[17]);
  if (v51 != 7)
  {
    sub_1000427B0();
    Class v52 = NSNumber.init(integerLiteral:)(v51 + 1).super.super.isa;
    char v53 = swift_isUniquelyReferenced_nonNull_native();
    double v54 = (void *)sub_1000427F0((uint64_t)v52, 0xD000000000000011, 0x80000001000A90F0, v53);
    swift_bridgeObjectRelease();
  }
  uint64_t v55 = *(unsigned __int8 *)(v1 + v6[18]);
  if (v55 != 7)
  {
    sub_1000427B0();
    Class v56 = NSNumber.init(integerLiteral:)(v55 + 1).super.super.isa;
    char v57 = swift_isUniquelyReferenced_nonNull_native();
    id v58 = (void *)sub_1000427F0((uint64_t)v56, 0xD000000000000015, 0x80000001000A90D0, v57);
    swift_bridgeObjectRelease();
  }
  uint64_t v59 = *(unsigned __int8 *)(v1 + v6[19]);
  if (v59 != 7)
  {
    sub_1000427B0();
    Class v60 = NSNumber.init(integerLiteral:)(v59 + 1).super.super.isa;
    char v61 = swift_isUniquelyReferenced_nonNull_native();
    id v62 = (void *)sub_1000427F0((uint64_t)v60, 0xD000000000000015, 0x80000001000A90B0, v61);
    swift_bridgeObjectRelease();
  }
  uint64_t v63 = *(unsigned __int8 *)(v1 + v6[20]);
  if (v63 != 7)
  {
    sub_1000427B0();
    Class v64 = NSNumber.init(integerLiteral:)(v63 + 1).super.super.isa;
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    int v66 = (void *)sub_1000427F0((uint64_t)v64, 0xD000000000000017, 0x80000001000A9090, v65);
    swift_bridgeObjectRelease();
  }
  uint64_t v67 = *(unsigned __int8 *)(v1 + v6[21]);
  if (v67 != 7)
  {
    sub_1000427B0();
    Class v68 = NSNumber.init(integerLiteral:)(v67 + 1).super.super.isa;
    char v69 = swift_isUniquelyReferenced_nonNull_native();
    double v70 = (void *)sub_1000427F0((uint64_t)v68, 0xD000000000000018, 0x80000001000A9070, v69);
    swift_bridgeObjectRelease();
  }
  uint64_t v71 = *(unsigned __int8 *)(v1 + v6[22]);
  if (v71 != 7)
  {
    sub_1000427B0();
    Class v72 = NSNumber.init(integerLiteral:)(v71 + 1).super.super.isa;
    char v73 = swift_isUniquelyReferenced_nonNull_native();
    double v74 = (void *)sub_1000427F0((uint64_t)v72, 0xD000000000000011, 0x80000001000A9050, v73);
    swift_bridgeObjectRelease();
  }
  uint64_t v75 = *(unsigned __int8 *)(v1 + v6[23]);
  if (v75 != 7)
  {
    sub_1000427B0();
    Class v76 = NSNumber.init(integerLiteral:)(v75 + 1).super.super.isa;
    char v77 = swift_isUniquelyReferenced_nonNull_native();
    BOOL v78 = (void *)sub_1000427F0((uint64_t)v76, 0xD000000000000011, 0x80000001000A9030, v77);
    swift_bridgeObjectRelease();
  }
  uint64_t v79 = *(unsigned __int8 *)(v1 + v6[24]);
  if (v79 != 7)
  {
    sub_1000427B0();
    Class v80 = NSNumber.init(integerLiteral:)(v79 + 1).super.super.isa;
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    id v82 = (void *)sub_1000427F0((uint64_t)v80, 0xD000000000000013, 0x80000001000A9010, v81);
    swift_bridgeObjectRelease();
  }
  uint64_t v83 = *(unsigned __int8 *)(v1 + v6[25]);
  if (v83 != 7)
  {
    sub_1000427B0();
    Class v84 = NSNumber.init(integerLiteral:)(v83 + 1).super.super.isa;
    char v85 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v86 = (void *)sub_1000427F0((uint64_t)v84, 0xD000000000000010, 0x80000001000A8FF0, v85);
    swift_bridgeObjectRelease();
  }
  uint64_t v87 = *(unsigned __int8 *)(v1 + v6[26]);
  if (v87 != 7)
  {
    sub_1000427B0();
    Class v88 = NSNumber.init(integerLiteral:)(v87 + 1).super.super.isa;
    char v89 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v90 = (void *)sub_1000427F0((uint64_t)v88, 0xD000000000000016, 0x80000001000A8FD0, v89);
    swift_bridgeObjectRelease();
  }
  uint64_t v91 = *(unsigned __int8 *)(v1 + v6[27]);
  if (v91 != 7)
  {
    sub_1000427B0();
    Class v92 = NSNumber.init(integerLiteral:)(v91 + 1).super.super.isa;
    char v93 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v94 = (void *)sub_1000427F0((uint64_t)v92, 0xD000000000000019, 0x80000001000A8FB0, v93);
    swift_bridgeObjectRelease();
  }
  uint64_t v95 = *(unsigned __int8 *)(v1 + v6[28]);
  if (v95 != 7)
  {
    sub_1000427B0();
    Class v96 = NSNumber.init(integerLiteral:)(v95 + 1).super.super.isa;
    char v97 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v98 = (void *)sub_1000427F0((uint64_t)v96, 0xD000000000000013, 0x80000001000A8F90, v97);
    swift_bridgeObjectRelease();
  }
  uint64_t v99 = *(unsigned __int8 *)(v1 + v6[29]);
  if (v99 != 7)
  {
    sub_1000427B0();
    Class v100 = NSNumber.init(integerLiteral:)(v99 + 1).super.super.isa;
    char v101 = swift_isUniquelyReferenced_nonNull_native();
    double v102 = (void *)sub_1000427F0((uint64_t)v100, 0x5679726574746142, 0xEB00000000776569, v101);
    swift_bridgeObjectRelease();
  }
  uint64_t v103 = *(unsigned __int8 *)(v1 + v6[30]);
  if (v103 != 7)
  {
    sub_1000427B0();
    Class v104 = NSNumber.init(integerLiteral:)(v103 + 1).super.super.isa;
    char v105 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v106 = (void *)sub_1000427F0((uint64_t)v104, 0x6C6C61436574754DLL, 0xEC00000077656956, v105);
    swift_bridgeObjectRelease();
  }
  uint64_t v107 = *(unsigned __int8 *)(v1 + v6[31]);
  if (v107 != 7)
  {
    sub_1000427B0();
    Class v108 = NSNumber.init(integerLiteral:)(v107 + 1).super.super.isa;
    char v109 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v110 = (void *)sub_1000427F0((uint64_t)v108, 0x69756E6547746F4ELL, 0xEE0077656956656ELL, v109);
    swift_bridgeObjectRelease();
  }
  uint64_t v111 = *(unsigned __int8 *)(v1 + v6[32]);
  if (v111 != 7)
  {
    sub_1000427B0();
    Class v112 = NSNumber.init(integerLiteral:)(v111 + 1).super.super.isa;
    char v113 = swift_isUniquelyReferenced_nonNull_native();
    double v114 = (void *)sub_1000427F0((uint64_t)v112, 0x6374616D7373694DLL, 0xED00007765695668, v113);
    swift_bridgeObjectRelease();
  }
  uint64_t v115 = *(unsigned __int8 *)(v1 + v6[33]);
  if (v115 != 7)
  {
    sub_1000427B0();
    Class v116 = NSNumber.init(integerLiteral:)(v115 + 1).super.super.isa;
    char v117 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v118 = (void *)sub_1000427F0((uint64_t)v116, 0x7372756F59746F4ELL, 0xEC00000077656956, v117);
    swift_bridgeObjectRelease();
  }
  uint64_t v119 = *(unsigned __int8 *)(v1 + v6[34]);
  if (v119 != 7)
  {
    sub_1000427B0();
    Class v120 = NSNumber.init(integerLiteral:)(v119 + 1).super.super.isa;
    char v121 = swift_isUniquelyReferenced_nonNull_native();
    objc_super v122 = (void *)sub_1000427F0((uint64_t)v120, 0xD000000000000016, 0x80000001000A8F70, v121);
    swift_bridgeObjectRelease();
  }
  uint64_t v123 = *(unsigned __int8 *)(v1 + v6[35]);
  if (v123 != 7)
  {
    sub_1000427B0();
    Class v124 = NSNumber.init(integerLiteral:)(v123 + 1).super.super.isa;
    char v125 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v126 = (void *)sub_1000427F0((uint64_t)v124, 0x6475416572616853, 0xEE00776569566F69, v125);
    swift_bridgeObjectRelease();
  }
  uint64_t v127 = *(unsigned __int8 *)(v1 + v6[36]);
  if (v127 != 7)
  {
    sub_1000427B0();
    Class v128 = NSNumber.init(integerLiteral:)(v127 + 1).super.super.isa;
    char v129 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v130 = (void *)sub_1000427F0((uint64_t)v128, 0xD000000000000012, 0x80000001000A8F50, v129);
    swift_bridgeObjectRelease();
  }
  uint64_t v131 = *(unsigned __int8 *)(v1 + v6[37]);
  if (v131 != 7)
  {
    sub_1000427B0();
    Class v132 = NSNumber.init(integerLiteral:)(v131 + 1).super.super.isa;
    char v133 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v134 = (void *)sub_1000427F0((uint64_t)v132, 0x7765695669726953, 0xE800000000000000, v133);
    swift_bridgeObjectRelease();
  }
  uint64_t v135 = *(unsigned __int8 *)(v1 + v6[43]);
  if (v135 != 7)
  {
    sub_1000427B0();
    Class v136 = NSNumber.init(integerLiteral:)(v135 + 1).super.super.isa;
    char v137 = swift_isUniquelyReferenced_nonNull_native();
    long long v138 = (void *)sub_1000427F0((uint64_t)v136, 0xD000000000000015, 0x80000001000A8F30, v137);
    swift_bridgeObjectRelease();
  }
  uint64_t v139 = *(unsigned __int8 *)(v1 + v6[38]);
  if (v139 != 7)
  {
    sub_1000427B0();
    Class v140 = NSNumber.init(integerLiteral:)(v139 + 1).super.super.isa;
    char v141 = swift_isUniquelyReferenced_nonNull_native();
    v142 = (void *)sub_1000427F0((uint64_t)v140, 0xD000000000000010, 0x80000001000A8F10, v141);
    swift_bridgeObjectRelease();
  }
  uint64_t v143 = *(unsigned __int8 *)(v1 + v6[39]);
  if (v143 != 7)
  {
    sub_1000427B0();
    Class v144 = NSNumber.init(integerLiteral:)(v143 + 1).super.super.isa;
    char v145 = swift_isUniquelyReferenced_nonNull_native();
    id v146 = (void *)sub_1000427F0((uint64_t)v144, 0xD000000000000012, 0x80000001000A8EF0, v145);
    swift_bridgeObjectRelease();
  }
  uint64_t v147 = *(unsigned __int8 *)(v1 + v6[40]);
  if (v147 != 7)
  {
    sub_1000427B0();
    Class v148 = NSNumber.init(integerLiteral:)(v147 + 1).super.super.isa;
    char v149 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v150 = (void *)sub_1000427F0((uint64_t)v148, 0xD000000000000012, 0x80000001000A8ED0, v149);
    swift_bridgeObjectRelease();
  }
  uint64_t v151 = *(unsigned __int8 *)(v1 + v6[41]);
  if (v151 != 7)
  {
    sub_1000427B0();
    Class v152 = NSNumber.init(integerLiteral:)(v151 + 1).super.super.isa;
    char v153 = swift_isUniquelyReferenced_nonNull_native();
    v154 = (void *)sub_1000427F0((uint64_t)v152, 0xD000000000000010, 0x80000001000A8EB0, v153);
    swift_bridgeObjectRelease();
  }
  uint64_t v155 = *(unsigned __int8 *)(v1 + v6[42]);
  if (v155 != 7)
  {
    sub_1000427B0();
    Class v156 = NSNumber.init(integerLiteral:)(v155 + 1).super.super.isa;
    char v157 = swift_isUniquelyReferenced_nonNull_native();
    id v158 = (void *)sub_1000427F0((uint64_t)v156, 0x77654E7374616857, 0xEC00000077656956, v157);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptyDictionarySingleton;
}

uint64_t sub_100041300()
{
  sub_100043358(v0 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_100041364()
{
  return type metadata accessor for HeadphoneAnalyticsController(0);
}

uint64_t type metadata accessor for HeadphoneAnalyticsController(uint64_t a1)
{
  return sub_100010850(a1, qword_1000D56B0);
}

uint64_t sub_10004138C()
{
  uint64_t result = type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(uint64_t a1)
{
  return sub_100010850(a1, (uint64_t *)&unk_1000D5798);
}

void *sub_10004143C(unsigned char *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    Swift::Int v8 = &a1[v7];
    Class v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for HeadphoneHardwareModel();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_100008E18(&qword_1000D5738);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    id v16 = (char *)v4 + v14;
    uint64_t v17 = (char *)a2 + v14;
    *(void *)id v16 = *(void *)v17;
    v16[8] = v17[8];
    *((unsigned char *)v4 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    char v20 = (char *)v4 + v18;
    unint64_t v21 = (char *)a2 + v18;
    v20[4] = v21[4];
    *(_DWORD *)char v20 = *(_DWORD *)v21;
    unsigned int v22 = (char *)v4 + v19;
    Swift::Int v23 = (char *)a2 + v19;
    *(_DWORD *)unsigned int v22 = *(_DWORD *)v23;
    v22[4] = v23[4];
    uint64_t v24 = a3[11];
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)v4 + v24) = *((unsigned char *)a2 + v24);
    uint64_t v25 = a3[13];
    *((unsigned char *)v4 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *((unsigned char *)v4 + v25) = *((unsigned char *)a2 + v25);
    uint64_t v26 = a3[15];
    *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    *((unsigned char *)v4 + v26) = *((unsigned char *)a2 + v26);
    uint64_t v27 = a3[17];
    *((unsigned char *)v4 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    *((unsigned char *)v4 + v27) = *((unsigned char *)a2 + v27);
    uint64_t v28 = a3[19];
    *((unsigned char *)v4 + a3[18]) = *((unsigned char *)a2 + a3[18]);
    *((unsigned char *)v4 + v28) = *((unsigned char *)a2 + v28);
    uint64_t v29 = a3[21];
    *((unsigned char *)v4 + a3[20]) = *((unsigned char *)a2 + a3[20]);
    *((unsigned char *)v4 + v29) = *((unsigned char *)a2 + v29);
    uint64_t v30 = a3[23];
    *((unsigned char *)v4 + a3[22]) = *((unsigned char *)a2 + a3[22]);
    *((unsigned char *)v4 + v30) = *((unsigned char *)a2 + v30);
    uint64_t v31 = a3[25];
    *((unsigned char *)v4 + a3[24]) = *((unsigned char *)a2 + a3[24]);
    *((unsigned char *)v4 + v31) = *((unsigned char *)a2 + v31);
    uint64_t v32 = a3[27];
    *((unsigned char *)v4 + a3[26]) = *((unsigned char *)a2 + a3[26]);
    *((unsigned char *)v4 + v32) = *((unsigned char *)a2 + v32);
    uint64_t v33 = a3[29];
    *((unsigned char *)v4 + a3[28]) = *((unsigned char *)a2 + a3[28]);
    *((unsigned char *)v4 + v33) = *((unsigned char *)a2 + v33);
    uint64_t v34 = a3[31];
    *((unsigned char *)v4 + a3[30]) = *((unsigned char *)a2 + a3[30]);
    *((unsigned char *)v4 + v34) = *((unsigned char *)a2 + v34);
    uint64_t v35 = a3[33];
    *((unsigned char *)v4 + a3[32]) = *((unsigned char *)a2 + a3[32]);
    *((unsigned char *)v4 + v35) = *((unsigned char *)a2 + v35);
    uint64_t v36 = a3[35];
    *((unsigned char *)v4 + a3[34]) = *((unsigned char *)a2 + a3[34]);
    *((unsigned char *)v4 + v36) = *((unsigned char *)a2 + v36);
    uint64_t v37 = a3[37];
    *((unsigned char *)v4 + a3[36]) = *((unsigned char *)a2 + a3[36]);
    *((unsigned char *)v4 + v37) = *((unsigned char *)a2 + v37);
    uint64_t v38 = a3[39];
    *((unsigned char *)v4 + a3[38]) = *((unsigned char *)a2 + a3[38]);
    *((unsigned char *)v4 + v38) = *((unsigned char *)a2 + v38);
    uint64_t v39 = a3[41];
    *((unsigned char *)v4 + a3[40]) = *((unsigned char *)a2 + a3[40]);
    *((unsigned char *)v4 + v39) = *((unsigned char *)a2 + v39);
    uint64_t v40 = a3[43];
    *((unsigned char *)v4 + a3[42]) = *((unsigned char *)a2 + a3[42]);
    *((unsigned char *)v4 + v40) = *((unsigned char *)a2 + v40);
  }
  return v4;
}

uint64_t sub_10004175C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for HeadphoneHardwareModel();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

unsigned char *sub_100041830(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  Swift::Int v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for HeadphoneHardwareModel();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100008E18(&qword_1000D5738);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  a1[v13] = a2[v13];
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  v18[4] = v19[4];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  char v20 = &a1[v17];
  unint64_t v21 = &a2[v17];
  *(_DWORD *)char v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  uint64_t v22 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v22] = a2[v22];
  uint64_t v23 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v23] = a2[v23];
  uint64_t v24 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v24] = a2[v24];
  uint64_t v25 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  a1[v25] = a2[v25];
  uint64_t v26 = a3[19];
  a1[a3[18]] = a2[a3[18]];
  a1[v26] = a2[v26];
  uint64_t v27 = a3[21];
  a1[a3[20]] = a2[a3[20]];
  a1[v27] = a2[v27];
  uint64_t v28 = a3[23];
  a1[a3[22]] = a2[a3[22]];
  a1[v28] = a2[v28];
  uint64_t v29 = a3[25];
  a1[a3[24]] = a2[a3[24]];
  a1[v29] = a2[v29];
  uint64_t v30 = a3[27];
  a1[a3[26]] = a2[a3[26]];
  a1[v30] = a2[v30];
  uint64_t v31 = a3[29];
  a1[a3[28]] = a2[a3[28]];
  a1[v31] = a2[v31];
  uint64_t v32 = a3[31];
  a1[a3[30]] = a2[a3[30]];
  a1[v32] = a2[v32];
  uint64_t v33 = a3[33];
  a1[a3[32]] = a2[a3[32]];
  a1[v33] = a2[v33];
  uint64_t v34 = a3[35];
  a1[a3[34]] = a2[a3[34]];
  a1[v34] = a2[v34];
  uint64_t v35 = a3[37];
  a1[a3[36]] = a2[a3[36]];
  a1[v35] = a2[v35];
  uint64_t v36 = a3[39];
  a1[a3[38]] = a2[a3[38]];
  a1[v36] = a2[v36];
  uint64_t v37 = a3[41];
  a1[a3[40]] = a2[a3[40]];
  a1[v37] = a2[v37];
  uint64_t v38 = a3[43];
  a1[a3[42]] = a2[a3[42]];
  a1[v38] = a2[v38];
  return a1;
}

unsigned char *sub_100041B00(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  Swift::Int v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for HeadphoneHardwareModel();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100008E18(&qword_1000D5738);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)v17;
  v16[8] = v17[8];
  *(void *)uint64_t v16 = v18;
  a1[a3[7]] = a2[a3[7]];
  uint64_t v19 = a3[8];
  char v20 = &a1[v19];
  unint64_t v21 = &a2[v19];
  LODWORD(v18) = *(_DWORD *)v21;
  v20[4] = v21[4];
  *(_DWORD *)char v20 = v18;
  uint64_t v22 = a3[9];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  LODWORD(v18) = *(_DWORD *)v24;
  v23[4] = v24[4];
  *(_DWORD *)uint64_t v23 = v18;
  a1[a3[10]] = a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  a1[a3[13]] = a2[a3[13]];
  a1[a3[14]] = a2[a3[14]];
  a1[a3[15]] = a2[a3[15]];
  a1[a3[16]] = a2[a3[16]];
  a1[a3[17]] = a2[a3[17]];
  a1[a3[18]] = a2[a3[18]];
  a1[a3[19]] = a2[a3[19]];
  a1[a3[20]] = a2[a3[20]];
  a1[a3[21]] = a2[a3[21]];
  a1[a3[22]] = a2[a3[22]];
  a1[a3[23]] = a2[a3[23]];
  a1[a3[24]] = a2[a3[24]];
  a1[a3[25]] = a2[a3[25]];
  a1[a3[26]] = a2[a3[26]];
  a1[a3[27]] = a2[a3[27]];
  a1[a3[28]] = a2[a3[28]];
  a1[a3[29]] = a2[a3[29]];
  a1[a3[30]] = a2[a3[30]];
  a1[a3[31]] = a2[a3[31]];
  a1[a3[32]] = a2[a3[32]];
  a1[a3[33]] = a2[a3[33]];
  a1[a3[34]] = a2[a3[34]];
  a1[a3[35]] = a2[a3[35]];
  a1[a3[36]] = a2[a3[36]];
  a1[a3[37]] = a2[a3[37]];
  a1[a3[38]] = a2[a3[38]];
  a1[a3[39]] = a2[a3[39]];
  a1[a3[40]] = a2[a3[40]];
  a1[a3[41]] = a2[a3[41]];
  a1[a3[42]] = a2[a3[42]];
  a1[a3[43]] = a2[a3[43]];
  return a1;
}

unsigned char *sub_100041E80(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  Swift::Int v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for HeadphoneHardwareModel();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100008E18(&qword_1000D5738);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  a1[v13] = a2[v13];
  uint64_t v16 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v16];
  uint64_t v19 = &a2[v16];
  v18[4] = v19[4];
  *(_DWORD *)uint64_t v18 = *(_DWORD *)v19;
  char v20 = &a1[v17];
  unint64_t v21 = &a2[v17];
  *(_DWORD *)char v20 = *(_DWORD *)v21;
  v20[4] = v21[4];
  uint64_t v22 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v22] = a2[v22];
  uint64_t v23 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v23] = a2[v23];
  uint64_t v24 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v24] = a2[v24];
  uint64_t v25 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  a1[v25] = a2[v25];
  uint64_t v26 = a3[19];
  a1[a3[18]] = a2[a3[18]];
  a1[v26] = a2[v26];
  uint64_t v27 = a3[21];
  a1[a3[20]] = a2[a3[20]];
  a1[v27] = a2[v27];
  uint64_t v28 = a3[23];
  a1[a3[22]] = a2[a3[22]];
  a1[v28] = a2[v28];
  uint64_t v29 = a3[25];
  a1[a3[24]] = a2[a3[24]];
  a1[v29] = a2[v29];
  uint64_t v30 = a3[27];
  a1[a3[26]] = a2[a3[26]];
  a1[v30] = a2[v30];
  uint64_t v31 = a3[29];
  a1[a3[28]] = a2[a3[28]];
  a1[v31] = a2[v31];
  uint64_t v32 = a3[31];
  a1[a3[30]] = a2[a3[30]];
  a1[v32] = a2[v32];
  uint64_t v33 = a3[33];
  a1[a3[32]] = a2[a3[32]];
  a1[v33] = a2[v33];
  uint64_t v34 = a3[35];
  a1[a3[34]] = a2[a3[34]];
  a1[v34] = a2[v34];
  uint64_t v35 = a3[37];
  a1[a3[36]] = a2[a3[36]];
  a1[v35] = a2[v35];
  uint64_t v36 = a3[39];
  a1[a3[38]] = a2[a3[38]];
  a1[v36] = a2[v36];
  uint64_t v37 = a3[41];
  a1[a3[40]] = a2[a3[40]];
  a1[v37] = a2[v37];
  uint64_t v38 = a3[43];
  a1[a3[42]] = a2[a3[42]];
  a1[v38] = a2[v38];
  return a1;
}

unsigned char *sub_100042150(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  Swift::Int v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for HeadphoneHardwareModel();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100008E18(&qword_1000D5738);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v15];
  uint64_t v18 = &a2[v15];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  a1[v16] = a2[v16];
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  unint64_t v21 = &a1[v19];
  uint64_t v22 = &a2[v19];
  v21[4] = v22[4];
  *(_DWORD *)unint64_t v21 = *(_DWORD *)v22;
  uint64_t v23 = &a1[v20];
  uint64_t v24 = &a2[v20];
  *(_DWORD *)uint64_t v23 = *(_DWORD *)v24;
  v23[4] = v24[4];
  uint64_t v25 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  a1[v25] = a2[v25];
  uint64_t v26 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  a1[v26] = a2[v26];
  uint64_t v27 = a3[15];
  a1[a3[14]] = a2[a3[14]];
  a1[v27] = a2[v27];
  uint64_t v28 = a3[17];
  a1[a3[16]] = a2[a3[16]];
  a1[v28] = a2[v28];
  uint64_t v29 = a3[19];
  a1[a3[18]] = a2[a3[18]];
  a1[v29] = a2[v29];
  uint64_t v30 = a3[21];
  a1[a3[20]] = a2[a3[20]];
  a1[v30] = a2[v30];
  uint64_t v31 = a3[23];
  a1[a3[22]] = a2[a3[22]];
  a1[v31] = a2[v31];
  uint64_t v32 = a3[25];
  a1[a3[24]] = a2[a3[24]];
  a1[v32] = a2[v32];
  uint64_t v33 = a3[27];
  a1[a3[26]] = a2[a3[26]];
  a1[v33] = a2[v33];
  uint64_t v34 = a3[29];
  a1[a3[28]] = a2[a3[28]];
  a1[v34] = a2[v34];
  uint64_t v35 = a3[31];
  a1[a3[30]] = a2[a3[30]];
  a1[v35] = a2[v35];
  uint64_t v36 = a3[33];
  a1[a3[32]] = a2[a3[32]];
  a1[v36] = a2[v36];
  uint64_t v37 = a3[35];
  a1[a3[34]] = a2[a3[34]];
  a1[v37] = a2[v37];
  uint64_t v38 = a3[37];
  a1[a3[36]] = a2[a3[36]];
  a1[v38] = a2[v38];
  uint64_t v39 = a3[39];
  a1[a3[38]] = a2[a3[38]];
  a1[v39] = a2[v39];
  uint64_t v40 = a3[41];
  a1[a3[40]] = a2[a3[40]];
  a1[v40] = a2[v40];
  uint64_t v41 = a3[43];
  a1[a3[42]] = a2[a3[42]];
  a1[v41] = a2[v41];
  return a1;
}

uint64_t sub_100042484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100042498);
}

uint64_t sub_100042498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100008E18(&qword_1000D5738);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v12 >= 2) {
      int v13 = ((v12 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v13 = -2;
    }
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_10004257C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100042590);
}

uint64_t sub_100042590(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100008E18(&qword_1000D5738);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  }
  return result;
}

void sub_100042654()
{
  sub_100042758();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100042758()
{
  if (!qword_1000D57A8)
  {
    type metadata accessor for HeadphoneHardwareModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000D57A8);
    }
  }
}

unint64_t sub_1000427B0()
{
  unint64_t result = qword_1000D5350;
  if (!qword_1000D5350)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D5350);
  }
  return result;
}

uint64_t sub_1000427F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10001D4A0(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100042FBC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = *(void *)(v19 + 8 * v12);
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
    *uint64_t v23 = a2;
    v23[1] = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v24 = v18[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      swift_bridgeObjectRetain();
      return 0;
    }
    goto LABEL_14;
  }
  sub_100042940(v15, a4 & 1);
  unint64_t v21 = sub_10001D4A0(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    unint64_t v12 = v21;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100042940(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100008E18(&qword_1000D5870);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  char v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100042C50(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100008E18(&qword_1000D5658);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      int64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_10003FDAC(v24, v35);
      }
      else
      {
        sub_10003101C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_10003FDAC(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

_OWORD *sub_100042F50(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_10003FDAC(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

id sub_100042FBC()
{
  uint64_t v1 = v0;
  sub_100008E18(&qword_1000D5870);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100043170()
{
  uint64_t v1 = v0;
  sub_100008E18(&qword_1000D5658);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_10003101C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_10003FDAC(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100043358(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneAnalyticsController.ProxCardActionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HeadphoneAnalyticsController.ProxCardActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *id result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100043510);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneAnalyticsController.ProxCardActionType()
{
  return &type metadata for HeadphoneAnalyticsController.ProxCardActionType;
}

unsigned char *storeEnumTagSinglePayload for HeadphoneAnalyticsController.ProxFlowType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *id result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100043614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneAnalyticsController.ProxFlowType()
{
  return &type metadata for HeadphoneAnalyticsController.ProxFlowType;
}

unint64_t sub_100043650()
{
  unint64_t result = qword_1000D5878;
  if (!qword_1000D5878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5878);
  }
  return result;
}

unint64_t sub_1000436A8()
{
  unint64_t result = qword_1000D5880;
  if (!qword_1000D5880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5880);
  }
  return result;
}

uint64_t sub_1000436FC(unint64_t a1)
{
  if (a1 >= 8) {
    return 7;
  }
  else {
    return (0x605040302010007uLL >> (8 * a1));
  }
}

uint64_t sub_100043724(unint64_t a1)
{
  if (a1 >= 7) {
    return 6;
  }
  else {
    return (0x5040302010006uLL >> (8 * a1));
  }
}

uint64_t sub_100043754()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D5888);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D5888);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10004381C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v8 = (char *)&v74 - v7;
  v83.receiver = v1;
  v83.super_class = ObjectType;
  [super viewDidLoad];
  [v1 setDismissalType:1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong + 16;
    swift_beginAccess();
    sub_10001A248(v10, (uint64_t)v81, &qword_1000D4798);
    swift_unknownObjectRelease();
    uint64_t v11 = v82;
    if (v82)
    {
      unint64_t v12 = sub_10000C80C(v81, v82);
      uint64_t v13 = *(void *)(v11 - 8);
      __chkstk_darwin(v12);
      unint64_t v15 = (uint64_t *)((char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(void *))(v13 + 16))(v15);
      sub_10001A2AC((uint64_t)v81, &qword_1000D4798);
      uint64_t v16 = *v15 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v16, (uint64_t)v6);
      (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v11);
      sub_10000C8B4((uint64_t)v6, (uint64_t)v8);
      type metadata accessor for HeadphoneEndCallViewController();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v18 = [self bundleForClass:ObjCClassFromMetadata];
      id v19 = [v1 traitCollection];
      id v20 = [v19 userInterfaceStyle];

      if (v20 == (id)1) {
        uint64_t v21 = 0x746867694CLL;
      }
      else {
        uint64_t v21 = 1802658116;
      }
      if (v20 == (id)1) {
        int64_t v22 = (void *)0xE500000000000000;
      }
      else {
        int64_t v22 = (void *)0xE400000000000000;
      }
      v81[0] = 0x6C6C61436574754DLL;
      v81[1] = 0xE90000000000005FLL;
      LODWORD(v78) = *(_DWORD *)&v8[*(int *)(v3 + 124)];
      v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v23);
      swift_bridgeObjectRelease();
      v24._uint64_t countAndFlagsBits = 95;
      v24._object = (void *)0xE100000000000000;
      String.append(_:)(v24);
      v25._uint64_t countAndFlagsBits = v21;
      v25._object = v22;
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      id v26 = objc_allocWithZone((Class)BSUICAPackageView);
      id v27 = v18;
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v29 = [v26 initWithPackageName:v28 inBundle:v27];

      if (!v29)
      {
        if (qword_1000D43D0 != -1) {
          swift_once();
        }
        uint64_t v40 = type metadata accessor for Logger();
        sub_100008278(v40, (uint64_t)qword_1000D5888);
        Class isa = Logger.logObject.getter();
        os_log_type_t v42 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(isa, v42))
        {
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v43 = 0;
          _os_log_impl((void *)&_mh_execute_header, isa, v42, "Mute Call: Headphone Model is nil, exiting", v43, 2u);
          swift_slowDealloc();
        }

        goto LABEL_40;
      }
      NSString v30 = String._bridgeToObjectiveC()();
      [v29 setState:v30 animated:1];

      [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v31 = [v1 contentView];
      [v31 addSubview:v29];

      uint64_t v32 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_tintColor];
      id v77 = v27;
      if (v32)
      {
        id v33 = v32;
        NSString v34 = String._bridgeToObjectiveC()();
        id v35 = [v29 publishedObjectWithName:v34];

        if (v35)
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v78 = 0u;
          long long v79 = 0u;
        }
        sub_100030F54((uint64_t)&v78, (uint64_t)v81);
        if (v82)
        {
          sub_100008EB0(0, (unint64_t *)&unk_1000D58E0);
          if (swift_dynamicCast())
          {
            id v44 = v80;
            [v80 setBackgroundColor:v33];

            goto LABEL_36;
          }
        }
        else
        {

          sub_10001A2AC((uint64_t)v81, &qword_1000D51D8);
        }
      }
      if (qword_1000D43D0 != -1) {
        swift_once();
      }
      uint64_t v45 = type metadata accessor for Logger();
      sub_100008278(v45, (uint64_t)qword_1000D5888);
      id v44 = v29;
      unint64_t v46 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v46, v47))
      {
        Class v76 = v8;
        Class v48 = (uint8_t *)swift_slowAlloc();
        uint64_t v75 = (void *)swift_slowAlloc();
        id v80 = v75;
        *(_DWORD *)Class v48 = 136315138;
        NSString v49 = String._bridgeToObjectiveC()();
        id v50 = [v44 publishedObjectWithName:v49];

        if (v50)
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          long long v78 = 0u;
          long long v79 = 0u;
        }
        sub_100030F54((uint64_t)&v78, (uint64_t)v81);
        sub_10001A248((uint64_t)v81, (uint64_t)&v78, &qword_1000D51D8);
        sub_100008E18(&qword_1000D51D8);
        uint64_t v51 = String.init<A>(reflecting:)();
        unint64_t v53 = v52;
        sub_10001A2AC((uint64_t)v81, &qword_1000D51D8);
        v81[0] = sub_10005D8C8(v51, v53, (uint64_t *)&v80);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v46, v47, "Mute Call: mica is nil, %s", v48, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        int v8 = v76;
        goto LABEL_39;
      }

LABEL_36:
LABEL_39:
      id v54 = [v1 contentView];
      id v55 = [v54 mainContentGuide];

      Class v56 = self;
      sub_100008E18((uint64_t *)&unk_1000D5090);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_1000A2130;
      id v58 = [v29 topAnchor];
      id v59 = [v55 topAnchor];
      id v60 = [v58 constraintGreaterThanOrEqualToAnchor:v59];

      *(void *)(v57 + 32) = v60;
      id v61 = [v29 bottomAnchor];
      id v62 = [v55 bottomAnchor];
      id v63 = [v61 constraintLessThanOrEqualToAnchor:v62];

      *(void *)(v57 + 40) = v63;
      id v64 = [v29 heightAnchor];
      id v65 = [v64 constraintEqualToConstant:214.0];

      *(void *)(v57 + 48) = v65;
      id v66 = [v29 widthAnchor];
      id v67 = [v66 constraintEqualToConstant:320.0];

      *(void *)(v57 + 56) = v67;
      id v68 = [v29 centerYAnchor];
      id v69 = [v55 centerYAnchor];
      id v70 = [v68 constraintEqualToAnchor:v69];

      *(void *)(v57 + 64) = v70;
      id v71 = [v29 centerXAnchor];
      id v72 = [v55 centerXAnchor];
      id v73 = [v71 constraintEqualToAnchor:v72];

      *(void *)(v57 + 72) = v73;
      v81[0] = v57;
      specialized Array._endMutation()();
      sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v56 activateConstraints:isa];

LABEL_40:
      sub_10000C918((uint64_t)v8);
      return;
    }
    sub_10001A2AC((uint64_t)v81, &qword_1000D4798);
  }
  if (qword_1000D43D0 != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  sub_100008278(v36, (uint64_t)qword_1000D5888);
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "Mute Call: Headphone Model is nil, exiting", v39, 2u);
    swift_slowDealloc();
  }
}

void sub_1000444B4(uint64_t a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setTitle:v3];

  NSString v4 = String._bridgeToObjectiveC()();
  [v1 setSubtitle:v4];

  uint64_t v5 = *(void **)(a1 + *(int *)(type metadata accessor for HeadphoneViewModel(0) + 84));
  unsigned int v6 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_tintColor];
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_tintColor] = v5;
  id v7 = v5;

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v13[4] = sub_100044840;
  v13[5] = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100012FF0;
  v13[3] = &unk_1000C4308;
  uint64_t v10 = _Block_copy(v13);
  id v11 = [self actionWithTitle:v9 style:0 handler:v10];

  _Block_release(v10);
  swift_release();
  swift_release();
  id v12 = [v1 addAction:v11];
}

void sub_10004468C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008C2F8();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneMuteCallUpsellViewController()
{
  return self;
}

uint64_t sub_1000447F8()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneMuteCallUpsellViewController_type);
}

uint64_t sub_100044808()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100044840()
{
}

uint64_t sub_100044848(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100044858()
{
  return swift_release();
}

uint64_t sub_100044860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(a3 + *(int *)(type metadata accessor for HeadphoneModel() + 124));
  uint64_t v5 = self;
  id v6 = [v5 airPods];
  unsigned int v7 = [v6 productID];

  if (v4 == v7
    || (id v8 = [v5 airPodsSecondGeneration],
        unsigned int v9 = [v8 productID],
        v8,
        v4 == v9))
  {
    uint64_t v14 = a1;
    swift_bridgeObjectRetain();
    v10._uint64_t countAndFlagsBits = 0x53444F505249415FLL;
    v10._object = (void *)0xE800000000000000;
    String.append(_:)(v10);
  }
  else
  {
    uint64_t v14 = a1;
    swift_bridgeObjectRetain();
    v11._uint64_t countAndFlagsBits = 0x5F4449505FLL;
    v11._object = (void *)0xE500000000000000;
    String.append(_:)(v11);
    v12._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t sub_1000449B4(uint64_t a1, void *a2, int a3)
{
  NSString v6 = String._bridgeToObjectiveC()();
  unsigned int v7 = self;
  id v8 = [v7 bundleWithIdentifier:v6];

  if (!v8) {
    return 0;
  }
  unsigned int v9 = self;
  id v10 = [v9 airPods];
  unsigned int v11 = [v10 productID];

  if (v11 == a3
    || (id v12 = [v9 airPodsSecondGeneration],
        unsigned int v13 = [v12 productID],
        v12,
        v13 == a3))
  {
    id v14 = [v7 mainBundle];
    v24._object = (void *)0xE000000000000000;
    v15._uint64_t countAndFlagsBits = a1;
    v15._object = a2;
    v16.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v16.value._object = (void *)0xEB00000000656C62;
    v17._uint64_t countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v24._uint64_t countAndFlagsBits = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v24)._countAndFlagsBits;
  }
  else
  {
    _StringGuts.grow(_:)(18);
    swift_bridgeObjectRelease();
    v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    v20.value._uint64_t countAndFlagsBits = 0xD000000000000010;
    v25._object = (void *)0xE000000000000000;
    v21._uint64_t countAndFlagsBits = a1;
    v21._object = a2;
    v20.value._object = (void *)0x80000001000A6D40;
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v25._uint64_t countAndFlagsBits = 0;
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v20, (NSBundle)v8, v22, v25)._countAndFlagsBits;

    swift_bridgeObjectRelease();
  }
  return countAndFlagsBits;
}

uint64_t sub_100044BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HeadphoneModel();
  uint64_t v7 = ((uint64_t (*)(void))__chkstk_darwin)();
  unsigned int v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unsigned int v11 = (char *)&v34 - v10;
  if (a1 == 0x5F544355444F5250 && a2 == 0xEC000000454D414ELL)
  {
    sub_10000C850(a3, (uint64_t)&v34 - v10);
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_10000C850(a3, (uint64_t)v11);
    if ((v12 & 1) == 0)
    {
      sub_10000C918((uint64_t)v11);
      goto LABEL_10;
    }
  }
  int v13 = *(_DWORD *)&v11[*(int *)(v6 + 124)];
  id v14 = self;
  id v15 = [v14 airPods];
  unsigned int v16 = [v15 productID];

  if (v13 != v16)
  {
    id v17 = [v14 airPodsSecondGeneration];
    unsigned int v18 = [v17 productID];

    sub_10000C918((uint64_t)v11);
    if (v13 == v18) {
      return sub_100027B70(0xCu);
    }
LABEL_10:
    if (a1 == 0x52554F595F544F4ELL && a2 == 0xE800000000000000)
    {
      sub_10000C850(a3, (uint64_t)v9);
    }
    else
    {
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      sub_10000C850(a3, (uint64_t)v9);
      if ((v20 & 1) == 0)
      {
        sub_10000C918((uint64_t)v9);
        goto LABEL_19;
      }
    }
    int v21 = *(_DWORD *)&v9[*(int *)(v6 + 124)];
    Swift::String v22 = self;
    id v23 = [v22 airPods];
    unsigned int v24 = [v23 productID];

    if (v21 == v24)
    {
      sub_10000C918((uint64_t)v9);
LABEL_17:
      id v27 = [self mainBundle];
      v35._object = (void *)0xE000000000000000;
      v28._object = (void *)0x80000001000A91D0;
      v28._uint64_t countAndFlagsBits = 0xD000000000000010;
      v29.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v29.value._object = (void *)0xEB00000000656C62;
      v30._uint64_t countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      v35._uint64_t countAndFlagsBits = 0;
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v35)._countAndFlagsBits;

      return countAndFlagsBits;
    }
    id v25 = [v22 airPodsSecondGeneration];
    unsigned int v26 = [v25 productID];

    sub_10000C918((uint64_t)v9);
    if (v21 == v26) {
      goto LABEL_17;
    }
LABEL_19:
    uint64_t v31 = sub_100044860(a1, a2, a3);
    uint64_t countAndFlagsBits = sub_1000449B4(v31, v32, *(_DWORD *)(a3 + *(int *)(v6 + 124)));
    swift_bridgeObjectRelease();
    return countAndFlagsBits;
  }
  sub_10000C918((uint64_t)v11);
  return sub_100027B70(0xCu);
}

void sub_100044FA4(uint64_t a1)
{
  id v3 = [v1 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  int v4 = v3;
  [v3 setMaximumContentSizeCategory:UIContentSizeCategoryLarge];

  id v35 = [self sharedStyle];
  [v35 setAudioProductID:*(void *)(a1 + *(int *)(type metadata accessor for HeadphoneViewModel(0) + 80))];
  id v5 = [objc_allocWithZone((Class)VTUIProximityEnrollTrainingViewController) init];
  [v5 setDelegate:v1];
  id v6 = [v5 view];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v8 = [v1 view];
    if (v8)
    {
      unsigned int v9 = v8;
      [v8 addSubview:v7];

      [v1 addChildViewController:v5];
      [v5 didMoveToParentViewController:v1];
      sub_100008E18((uint64_t *)&unk_1000D5090);
      uint64_t v10 = swift_allocObject();
      *(_OWORD *)(v10 + 16) = xmmword_1000A19C0;
      id v11 = [v7 topAnchor];
      id v12 = [v1 view];
      if (v12)
      {
        int v13 = v12;
        id v14 = [v12 topAnchor];

        id v15 = [v11 constraintEqualToAnchor:v14];
        *(void *)(v10 + 32) = v15;
        id v16 = [v7 bottomAnchor];
        id v17 = [v1 view];
        if (v17)
        {
          unsigned int v18 = v17;
          id v19 = [v17 bottomAnchor];

          id v20 = [v16 constraintEqualToAnchor:v19];
          *(void *)(v10 + 40) = v20;
          id v21 = [v7 leadingAnchor];
          id v22 = [v1 view];
          if (v22)
          {
            id v23 = v22;
            id v24 = [v22 leadingAnchor];

            id v25 = [v21 constraintEqualToAnchor:v24 constant:-6.0];
            *(void *)(v10 + 48) = v25;
            id v26 = [v7 trailingAnchor];
            id v27 = [v1 view];
            if (v27)
            {
              Swift::String v28 = v27;
              Swift::String_optional v29 = self;
              id v30 = [v28 trailingAnchor];

              id v31 = [v26 constraintEqualToAnchor:v30 constant:6.0];
              *(void *)(v10 + 56) = v31;
              id v32 = [v7 heightAnchor];
              id v33 = [v32 constraintEqualToConstant:390.0];

              *(void *)(v10 + 64) = v33;
              specialized Array._endMutation()();
              sub_10000A968();
              Class isa = Array._bridgeToObjectiveC()().super.isa;
              swift_bridgeObjectRelease();
              [v29 activateConstraints:isa];

              goto LABEL_9;
            }
LABEL_17:
            __break(1u);
            return;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_9:
}

uint64_t type metadata accessor for HeadphoneSiriViewController()
{
  return self;
}

uint64_t sub_1000454BC()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneSiriViewController_type);
}

uint64_t sub_10004552C(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v6 = a1;
    a3();

    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1000455E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDelegate();
  return [super dealloc];
}

int main(int argc, const char **argv, const char **envp)
{
  type metadata accessor for AppDelegate();
  static CommandLine.unsafeArgv.getter();
  static CommandLine.argc.getter();
  static CommandLine.argc.getter();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  int v4 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LODWORD(v4) = UIApplicationMain(_:_:_:_:)();
  swift_bridgeObjectRelease();
  exit((int)v4);
}

uint64_t type metadata accessor for AppDelegate()
{
  return self;
}

id sub_1000456CC()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController____lazy_storage___topAsset;
  objc_super v2 = *(void **)(v0
                + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController____lazy_storage___topAsset);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController____lazy_storage___topAsset);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) init];
    id v5 = [self lightGrayColor];
    [v4 setBackgroundColor:v5];

    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v4 heightAnchor];
    id v7 = [v6 constraintEqualToConstant:450.0];

    [v7 setActive:1];
    id v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_1000457F8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_100008E18(&qword_1000D4CC0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  v26.receiver = v0;
  v26.super_class = ObjectType;
  [super viewDidLoad];
  [v0 setDismissalType:1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong + 16;
    swift_beginAccess();
    sub_10000C744(v6, (uint64_t)v24);
    swift_unknownObjectRelease();
    uint64_t v7 = v25;
    if (v25)
    {
      id v8 = sub_10000C80C(v24, v25);
      uint64_t v9 = *(void *)(v7 - 8);
      __chkstk_darwin(v8);
      id v11 = (void *)((char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 40);
      (*(void (**)(void *))(v9 + 16))(v11);
      sub_10001A2AC((uint64_t)v24, &qword_1000D4798);
      uint64_t v12 = *v11 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v12, (uint64_t)v4);
      (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v7);
      uint64_t v13 = type metadata accessor for HeadphoneModel();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 0, 1, v13);
      sub_10001A2AC((uint64_t)v4, &qword_1000D4CC0);
      id v14 = [v0 contentView];
      id v15 = sub_1000456CC();
      [v14 addSubview:v15];

      id v16 = sub_1000456CC();
      id v17 = [v0 contentView];
      unsigned int v18 = [v17 mainContentGuide];

      [v16 pinToOtherWithLayoutGuide:v18];
      goto LABEL_9;
    }
    sub_10001A2AC((uint64_t)v24, &qword_1000D4798);
  }
  uint64_t v19 = type metadata accessor for HeadphoneModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
  sub_10001A2AC((uint64_t)v4, &qword_1000D4CC0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100008278(v20, (uint64_t)qword_1000D91B0);
  unsigned int v18 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v21, "HeadhponeHeartRateTutorial2ViewController: Headphone Model is nil, exiting", v22, 2u);
    swift_slowDealloc();
  }
LABEL_9:
}

uint64_t sub_100045CDC(uint64_t a1)
{
  sub_100027B70(0x77u);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_subtitleLabel];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1000465C8;
  *(void *)(v6 + 24) = v5;
  v11[4] = sub_1000465E0;
  v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100089B20;
  v11[3] = &unk_1000C4400;
  uint64_t v7 = _Block_copy(v11);
  id v8 = v4;
  uint64_t v9 = v1;
  swift_retain();
  swift_release();
  [v9 perormTapActionWithRecognizer:a1 targetString:v3 inLabel:v8 action:v7];

  _Block_release(v7);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v9) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100045E80(void *a1)
{
  uint64_t v2 = sub_100008E18(&qword_1000D4800);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v30 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100008278(v8, (uint64_t)qword_1000D91B0);
  uint64_t v9 = a1;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v27 = v8;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v29 = v5;
    uint64_t v28 = v6;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v32 = v13;
    uint64_t v14 = *(void *)&v9[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink];
    unint64_t v15 = *(void *)&v9[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink
                       + 8];
    swift_bridgeObjectRetain();
    uint64_t v16 = v14;
    uint64_t v8 = v27;
    uint64_t v31 = sub_10005D8C8(v16, v15, &v32);
    uint64_t v6 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "HeadhponeHeartRateTutorial2ViewController: User tapped learn more, presenting support link %s", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v29;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    if (qword_1000D4480 != -1) {
      swift_once();
    }
    sub_100008278(v8, (uint64_t)qword_1000D69F0);
    id v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Requested dismiss", v19, 2u);
      swift_slowDealloc();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10003B97C();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10001A2AC((uint64_t)v4, &qword_1000D4800);
  }
  os_log_type_t v21 = v30;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v30, v4, v5);
  id v22 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v23);
  uint64_t v25 = v24;
  sub_1000893BC((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100046600();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 openURL:v25 options:isa completionHandler:0];

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v21, v5);
}

uint64_t type metadata accessor for HeadhponeHeartRateTutorial2ViewController()
{
  return self;
}

uint64_t sub_10004648C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_type);
}

id sub_10004649C(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = &v1[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_learnMoreLink];
  *(void *)id v4 = 0xD000000000000025;
  *((void *)v4 + 1) = 0x80000001000A6460;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController____lazy_storage___topAsset] = 0;
  uint64_t v5 = OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_subtitleLabel;
  id v6 = objc_allocWithZone((Class)PRXLabel);
  uint64_t v7 = v1;
  *(void *)&v1[v5] = [v6 initWithStyle:1];
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v7[OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial2ViewController_type] = 29;

  v9.receiver = v7;
  v9.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_100046590()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000465C8()
{
  return sub_100045E80(*(void **)(v0 + 16));
}

uint64_t sub_1000465D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000465E0()
{
  return sub_100089AF8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1000465E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000465F8()
{
  return swift_release();
}

unint64_t sub_100046600()
{
  unint64_t result = qword_1000D4610;
  if (!qword_1000D4610)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4610);
  }
  return result;
}

uint64_t sub_100046658(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_10004669C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D5A70);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D5A70);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100046764()
{
  qword_1000D5A88 = 0x4024000000000000;
}

void *sub_100046774()
{
  sub_100008E18(&qword_1000D4AD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A2760;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel);
  *(void *)(inited + 32) = v2;
  uint64_t v3 = (void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody);
  swift_beginAccess();
  id v4 = *v3;
  *(void *)(inited + 40) = *v3;
  specialized Array._endMutation()();
  uint64_t v5 = *(void **)(inited + 32);
  if (!v5)
  {
    id v10 = v4;
    id v11 = v2;
    objc_super v9 = *(void **)(inited + 40);
    if (!v9) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  id v6 = v5;
  id v7 = v2;
  id v8 = v4;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  objc_super v9 = *(void **)(inited + 40);
  if (v9)
  {
LABEL_7:
    id v12 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_100046970(char a1)
{
  uint64_t v2 = v1;
  v23.receiver = v2;
  v23.super_class = (Class)swift_getObjectType();
  [super viewWillAppear:a1 & 1];
  if (v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_shouldFadeInElements] != 1) {
    goto LABEL_15;
  }
  id v4 = [v2 contentView];
  id v5 = [v4 titleView];

  if (v5)
  {
    [v5 setAlpha:0.0];
  }
  id v6 = [v2 contentView];
  id v7 = [v6 auxiliaryViews];

  if (!v7) {
    goto LABEL_23;
  }
  sub_100008EB0(0, &qword_1000D4EF0);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (v9) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_7:
      if (v9 >= 1)
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0) {
            id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v11 = *(id *)(v8 + 8 * i + 32);
          }
          id v12 = v11;
          [v11 setAlpha:0.0];
        }
        goto LABEL_14;
      }
      __break(1u);
LABEL_23:
      __break(1u);
      return;
    }
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  uint64_t v13 = self;
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10004D68C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046658;
  aBlock[3] = &unk_1000C4670;
  unint64_t v15 = _Block_copy(aBlock);
  swift_release();
  [v13 animateWithDuration:65538 delay:v15 options:0 animations:1.5 completion:0.8];
  _Block_release(v15);
LABEL_15:
  if (qword_1000D43D8 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100008278(v16, (uint64_t)qword_1000D5A70);
  id v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Playing movie", v19, 2u);
    swift_slowDealloc();
  }

  uint64_t v20 = &v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView];
  swift_beginAccess();
  uint64_t v21 = *(void *)v20;
  if (*(void *)v20)
  {
    swift_getObjectType();
    void aBlock[6] = v21;
    dispatch thunk of VideoPlaybackControllable.play()();
  }
}

uint64_t sub_100046D68(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v5 - 8);
  id v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v22.receiver = v2;
  v22.super_class = ObjectType;
  [super viewDidDisappear:a1 & 1];
  if (qword_1000D43D8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100008278(v8, (uint64_t)qword_1000D5A70);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Stopping movie", v11, 2u);
    swift_slowDealloc();
  }

  id v12 = &v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView];
  swift_beginAccess();
  id v13 = *(id *)v12;
  if (*(void *)v12
    && (swift_getObjectType(), v21[0] = v13, dispatch thunk of VideoPlaybackControllable.stop()(), *(void *)v12))
  {
    [*(id *)v12 removeFromSuperview];
    id v14 = *(id *)v12;
  }
  else
  {
    id v14 = 0;
  }
  *(void *)id v12 = 0;
  *((void *)v12 + 1) = 0;

  uint64_t v15 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  uint64_t v16 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel];
  swift_beginAccess();
  sub_10003FE28((uint64_t)v7, v16);
  swift_endAccess();
  sub_10004D660((uint64_t)v20);
  uint64_t v17 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer];
  sub_10004BF88((uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer], (uint64_t)v21, &qword_1000D5B10);
  sub_10004BF88((uint64_t)v20, v17, &qword_1000D5B10);
  return sub_10004CE60((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004CEE4);
}

void sub_100047064(uint64_t a1)
{
  uint64_t v3 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HeadphoneViewModel(0);
  sub_10001A248(a1 + *(int *)(v10 + 44), (uint64_t)v5, &qword_1000D4810);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10001A2AC((uint64_t)v5, &qword_1000D4810);
    return;
  }
  sub_10004D058((uint64_t)v5, (uint64_t)v9, type metadata accessor for HeadphoneAssets);
  NSString v11 = String._bridgeToObjectiveC()();
  [v1 setTitle:v11];

  unint64_t v12 = *(void *)&v9[*(int *)(v6 + 32)];
  if (!(v12 >> 62))
  {
    if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
LABEL_13:
    sub_10004763C(a1);
    if (!*(void *)(a1 + 72)) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_13;
  }
LABEL_5:
  *((unsigned char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_shouldFadeInElements) = 0;
  if ((v12 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v13 = *(id *)(v12 + 32);
  }
  sub_100047300((uint64_t)v13);

  if (*(void *)(a1 + 72))
  {
LABEL_9:
    NSString v14 = String._bridgeToObjectiveC()();
    [v1 showActivityIndicatorWithStatus:v14];
  }
LABEL_10:
  sub_10004D0C0((uint64_t)v9, type metadata accessor for HeadphoneAssets);
}

void sub_100047300(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UIImageView) initWithImage:a1];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [self systemGray2Color];
  [v2 setTintColor:v3];

  id v4 = [v1 contentView];
  [v4 addSubview:v2];

  id v5 = [v1 contentView];
  id v6 = [v5 mainContentGuide];

  uint64_t v7 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000A2750;
  id v9 = [v2 topAnchor];
  id v10 = [v6 topAnchor];
  id v11 = [v9 constraintGreaterThanOrEqualToAnchor:v10];

  *(void *)(v8 + 32) = v11;
  id v12 = [v2 bottomAnchor];
  id v13 = [v6 bottomAnchor];
  id v14 = [v12 constraintLessThanOrEqualToAnchor:v13];

  *(void *)(v8 + 40) = v14;
  id v15 = [v2 centerYAnchor];
  id v16 = [v6 centerYAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v8 + 48) = v17;
  id v18 = [v2 centerXAnchor];
  id v19 = [v6 centerXAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v8 + 56) = v20;
  specialized Array._endMutation()();
  sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 activateConstraints:isa];
}

void sub_10004763C(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (int *)type metadata accessor for HeadphoneViewModel(0);
  sub_10004BF88(a1 + v10[14], (uint64_t)v82, &qword_1000D4E60);
  sub_10004BF88((uint64_t)v82, (uint64_t)v83, &qword_1000D4E60);
  if (sub_1000230B0((uint64_t)v83) == 1)
  {
    if (qword_1000D43D8 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100008278(v11, (uint64_t)qword_1000D5A70);
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "HeadphoneConnectViewController: setUpMovieLayout without layoutMetrics, returning", v14, 2u);
      swift_slowDealloc();
    }
    goto LABEL_25;
  }
  id v77 = v6;
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10004D19C(v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004D150);
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)&v81[32] = sub_10004D120;
  *(void *)&v81[40] = v15;
  *(void *)char v81 = _NSConcreteStackBlock;
  *(void *)&v81[8] = 1107296256;
  *(void *)&v81[16] = sub_100012FF0;
  *(void *)&v81[24] = &unk_1000C4620;
  id v17 = _Block_copy(v81);
  id v76 = self;
  id v18 = [v76 actionWithTitle:v16 style:0 handler:v17];

  _Block_release(v17);
  swift_release();
  swift_release();

  id v19 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_connectAction];
  *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_connectAction] = v18;
  id v20 = v18;

  sub_10001A248(a1 + v10[11], (uint64_t)v9, &qword_1000D4810);
  uint64_t v21 = type metadata accessor for HeadphoneAssets(0);
  int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v9, 1, v21);
  objc_super v23 = &stru_1000D0000;
  id v73 = v20;
  uint64_t v74 = a1;
  uint64_t v75 = v10;
  if (v22 == 1)
  {
    sub_10004D19C(v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10002313C);
    sub_10001A2AC((uint64_t)v9, &qword_1000D4810);
    goto LABEL_15;
  }
  id v24 = &v9[*(int *)(v21 + 40)];
  id v25 = *(id *)v24;
  uint64_t v26 = *((void *)v24 + 1);
  id v27 = *(id *)v24;
  sub_10004D0C0((uint64_t)v9, type metadata accessor for HeadphoneAssets);
  if (!v25)
  {
    sub_10004D19C(v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10002313C);
LABEL_15:
    id v49 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:4];
    [v49 v23[45].offs];
    [v49 setTextAlignment:1];
    id v50 = [v2 contentView];
    [v50 addSubview:v49];

    uint64_t v51 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel];
    *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel] = v49;
    id v72 = v49;

    id v52 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:5];
    [v52 v23[45].offs];
    [v52 setTextAlignment:1];
    id v53 = [v2 contentView];
    [v53 addSubview:v52];

    id v54 = (void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody];
    swift_beginAccess();
    id v55 = *v54;
    *id v54 = v52;
    id v56 = v52;

    uint64_t v57 = v74;
    uint64_t v58 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v59 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)&v81[32] = sub_10004D218;
    *(void *)&v81[40] = v58;
    *(void *)char v81 = _NSConcreteStackBlock;
    *(void *)&v81[8] = 1107296256;
    *(void *)&v81[16] = sub_100012FF0;
    *(void *)&v81[24] = &unk_1000C4648;
    id v60 = _Block_copy(v81);
    id v61 = [v76 actionWithTitle:v59 style:1 handler:v60];

    _Block_release(v60);
    swift_release();
    swift_release();
    id v62 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_skipAction];
    *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_skipAction] = v61;

    uint64_t v63 = (uint64_t)v77;
    sub_10004CD70(v57, (uint64_t)v77, type metadata accessor for HeadphoneViewModel);
    (*(void (**)(uint64_t, void, uint64_t))(*((void *)v75 - 1) + 56))(v63, 0, 1);
    uint64_t v64 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel];
    swift_beginAccess();
    sub_10003FE28(v63, v64);
    swift_endAccess();
    unint64_t v65 = (unint64_t)sub_100046774();
    unint64_t v66 = v65;
    if (v65 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
      if (v67) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v67 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v67)
      {
LABEL_17:
        if (v67 >= 1)
        {
          for (uint64_t i = 0; i != v67; ++i)
          {
            if ((v66 & 0xC000000000000001) != 0) {
              id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v69 = *(id *)(v66 + 8 * i + 32);
            }
            id v70 = v69;
            [v69 setAlpha:0.0];
          }
          goto LABEL_24;
        }
        __break(1u);
        goto LABEL_27;
      }
    }
LABEL_24:

    swift_bridgeObjectRelease_n();
    id v12 = v72;
LABEL_25:

    return;
  }
  uint64_t v28 = &v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView];
  swift_beginAccess();
  uint64_t v29 = *(void **)v28;
  *(void *)uint64_t v28 = v25;
  *((void *)v28 + 1) = v26;
  id v30 = v27;

  if (*(unsigned char *)(a1 + v10[22]))
  {
    id v31 = [v30 layer];
    CATransform3DMakeScale((CATransform3D *)v81, 0.85, 0.85, 1.0);
    [v31 setTransform:v81];
  }
  id v32 = objc_allocWithZone((Class)UILayoutGuide);
  sub_10004D19C(v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004D150);
  id v33 = v30;
  id v34 = [v32 init];
  sub_10004D19C(v82, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10002313C);
  double v35 = *(double *)v83;
  id v36 = [v34 heightAnchor];

  id v37 = [v36 constraintEqualToConstant:v35];
  *(void *)char v81 = v33;
  *(void *)&v81[8] = v34;
  *(_OWORD *)&v81[176] = v83[10];
  *(_OWORD *)&v81[192] = v83[11];
  *(_OWORD *)&v81[208] = v83[12];
  *(void *)&v81[224] = v84;
  *(_OWORD *)&v81[112] = v83[6];
  *(_OWORD *)&v81[128] = v83[7];
  *(_OWORD *)&unsigned char v81[144] = v83[8];
  *(_OWORD *)&v81[160] = v83[9];
  *(_OWORD *)&v81[48] = v83[2];
  *(_OWORD *)&v81[64] = v83[3];
  *(_OWORD *)&v81[80] = v83[4];
  *(_OWORD *)&v81[96] = v83[5];
  *(_OWORD *)&v81[16] = v83[0];
  *(_OWORD *)&v81[32] = v83[1];
  v81[232] = 0;
  *(void *)&v81[240] = v37;
  *(void *)&v81[248] = _swiftEmptyArrayStorage;
  *(void *)&v81[256] = _swiftEmptyArrayStorage;
  memcpy(v80, v81, sizeof(v80));
  sub_10004D248((uint64_t)v81);
  id v38 = [v2 view];
  if (!v38)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v39 = v38;
  [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v39 addLayoutGuide:v34];
  [v39 addSubview:v33];
  [v39 sendSubviewToBack:v33];

  sub_10000A9A8((uint64_t)v81);
  id v40 = [v2 contentView];
  id v41 = [self clearColor];
  [v40 setBackgroundColor:v41];

  id v42 = [v2 contentView];
  id v43 = [v42 mainContentGuide];

  id v44 = [v2 view];
  if (v44)
  {
    uint64_t v45 = v44;
    unint64_t v46 = self;
    sub_100081E98(v43, v45);

    sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v46 activateConstraints:isa];

    memcpy(v78, v80, sizeof(v78));
    nullsub_1(v78);
    uint64_t v48 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer];
    sub_10004BF88((uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer], (uint64_t)v79, &qword_1000D5B10);
    sub_10004BF88((uint64_t)v78, v48, &qword_1000D5B10);
    sub_10004CE60((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004CEE4);
    objc_super v23 = &stru_1000D0000;
    goto LABEL_15;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_100048244()
{
  uint64_t v1 = sub_100008E18(&qword_1000D4808);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for HeadphoneAssets.Feature(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel;
  swift_beginAccess();
  uint64_t v9 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9)
    || (uint64_t v10 = v8 + *(int *)(v9 + 44),
        uint64_t v11 = type metadata accessor for HeadphoneAssets(0),
        (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11)))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  else
  {
    sub_10001A248(v10 + *(int *)(v11 + 28), (uint64_t)v3, &qword_1000D4808);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      sub_10004D058((uint64_t)v3, (uint64_t)v7, type metadata accessor for HeadphoneAssets.Feature);
      sub_1000484BC((uint64_t)v7);
      return sub_10004D0C0((uint64_t)v7, type metadata accessor for HeadphoneAssets.Feature);
    }
  }
  sub_10001A2AC((uint64_t)v3, &qword_1000D4808);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10008DE70();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000484BC(uint64_t a1)
{
  *(void *)&long long v75 = a1;
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v74 = type metadata accessor for HeadphoneAssets.Feature(0);
  uint64_t v3 = *(void *)(v74 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v74);
  uint64_t v5 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel);
  if (!v6) {
    return;
  }
  uint64_t v7 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (!*v7) {
    return;
  }
  uint64_t v9 = v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel;
  swift_beginAccess();
  uint64_t v10 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10)) {
    return;
  }
  sub_10004BF88(v9 + *(int *)(v10 + 56), (uint64_t)v82, &qword_1000D4E60);
  sub_10004BF88((uint64_t)v82, (uint64_t)v83, &qword_1000D4E60);
  if (sub_1000230B0((uint64_t)v83) == 1) {
    return;
  }
  int v11 = v83[104];
  id v71 = v6;
  id v72 = v8;
  if (v11 == 1) {
    sub_100048CA8();
  }
  uint64_t v67 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  id v70 = type metadata accessor for HeadphoneAssets.Feature;
  sub_10004CD70(v75, (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeadphoneAssets.Feature);
  uint64_t v73 = v1;
  uint64_t v12 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = (v12 + 24) & ~v12;
  uint64_t v68 = v12 | 7;
  id v69 = (void **)(v4 + 7);
  unint64_t v14 = (v4 + 7 + v13) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v67;
  sub_10004D058((uint64_t)v5, v16 + v13, type metadata accessor for HeadphoneAssets.Feature);
  id v18 = v71;
  id v17 = v72;
  *(void *)(v16 + v14) = v71;
  *(void *)(v16 + v15) = v17;
  *(void *)(v16 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10004CD70(v75, (uint64_t)v5, v70);
  uint64_t v20 = (v12 + 16) & ~v12;
  unint64_t v21 = ((unint64_t)v69 + v20) & 0xFFFFFFFFFFFFFFF8;
  int v22 = (uint64_t (*)(uint64_t))swift_allocObject();
  uint64_t v23 = (uint64_t)v22 + v20;
  uint64_t v24 = v73;
  sub_10004D058((uint64_t)v5, v23, type metadata accessor for HeadphoneAssets.Feature);
  id v70 = v22;
  *(void *)((char *)v22 + v21) = v19;
  uint64_t v25 = v24 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView;
  swift_beginAccess();
  if (*(void *)v25)
  {
    uint64_t v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v27 = (void *)swift_allocObject();
    void v27[2] = v26;
    v27[3] = sub_10004B40C;
    v27[4] = v16;
    uint64_t v28 = *(void **)v25;
    uint64_t v29 = *(void *)(v25 + 8);
    swift_getObjectType();
    char v81 = v28;
    id v30 = v18;
    id v31 = v72;
    swift_retain();
    swift_retain();
    id v32 = v28;
    dispatch thunk of VideoPlaybackControllable.startedHandler.setter();
    id v33 = *(void **)v25;
    *(void *)uint64_t v25 = v81;
    *(void *)(v25 + 8) = v29;
    swift_release();

    uint64_t v34 = v16;
    if (*(void *)v25)
    {
      swift_allocObject();
      swift_unknownObjectWeakInit();
      double v35 = *(void **)v25;
      uint64_t v36 = *(void *)(v25 + 8);
      swift_getObjectType();
      char v81 = v35;
      swift_retain();
      id v37 = v35;
      dispatch thunk of VideoPlaybackControllable.completedHandler.setter();
      id v38 = *(void **)v25;
      *(void *)uint64_t v25 = v81;
      *(void *)(v25 + 8) = v36;
      swift_release();
    }
  }
  else
  {
    id v39 = v18;
    id v40 = v72;
    uint64_t v34 = v16;
  }
  swift_endAccess();
  unint64_t v74 = *(void *)(v75 + *(int *)(v74 + 20));
  id v69 = (void **)v25;
  if (v74 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v66 = v34;
    if (v41) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v41 = *(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v66 = v34;
    if (v41)
    {
LABEL_13:
      if (v41 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v42 = 0;
      unint64_t v43 = v74 & 0xC000000000000001;
      id v44 = _swiftEmptyArrayStorage;
      do
      {
        if (v43) {
          id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v45 = *(id *)(v74 + 8 * v42 + 32);
        }
        unint64_t v46 = v45;
        [v45 CMTimeRangeValue];
        os_log_type_t v47 = v76;
        uint64_t v48 = v77;
        long long v75 = v78;
        id v49 = v79;
        uint64_t v50 = v80;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v44 = sub_10004BDC8(0, v44[2] + 1, 1, v44);
        }
        unint64_t v52 = v44[2];
        unint64_t v51 = v44[3];
        if (v52 >= v51 >> 1) {
          id v44 = sub_10004BDC8((void *)(v51 > 1), v52 + 1, 1, v44);
        }
        v44[2] = v52 + 1;
        id v53 = &v44[6 * v52];
        v53[4] = v47;
        ++v42;
        v53[5] = v48;
        *((_OWORD *)v53 + 3) = v75;
        v53[8] = v49;
        v53[9] = v50;
      }
      while (v41 != v42);
    }
  }
  swift_bridgeObjectRelease();
  id v54 = v69;
  id v55 = (void **)*v69;
  if (*v69)
  {
    swift_getObjectType();
    id v76 = v55;
    uint64_t v56 = swift_allocObject();
    uint64_t v57 = v70;
    *(void *)(v56 + 16) = sub_10004B5FC;
    *(void *)(v56 + 24) = v57;
    uint64_t v58 = v55;
    swift_retain();
    dispatch thunk of VideoPlaybackControllable.setPlaybackNotificationTimeRanges(_:handler:)();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v59 = v72;
  id v60 = (void **)*v54;
  id v61 = v71;
  if (*v54)
  {
    swift_getObjectType();
    id v76 = v60;
    dispatch thunk of VideoPlaybackControllable.transitionToFeatures()();
  }
  id v62 = self;
  uint64_t v63 = swift_allocObject();
  swift_unknownObjectWeakInit();
  long long v79 = sub_10004BF50;
  uint64_t v80 = v63;
  id v76 = _NSConcreteStackBlock;
  uint64_t v77 = 1107296256;
  *(void *)&long long v78 = sub_100046658;
  *((void *)&v78 + 1) = &unk_1000C4558;
  uint64_t v64 = _Block_copy(&v76);
  swift_release();
  [v62 animateWithDuration:0 delay:v64 options:0 animations:0.5 completion:0.0];
  swift_release();
  swift_release();

  _Block_release(v64);
}

void sub_100048CA8()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)CAGradientLayer) init];
  uint64_t v3 = (id *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer);
  sub_10004BF88(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer, (uint64_t)v22, &qword_1000D5B10);
  sub_10004BF88((uint64_t)v22, (uint64_t)v23, &qword_1000D5B10);
  int v4 = sub_10004BFEC(v23);
  double v5 = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  double v8 = 0.0;
  if (v4 != 1) {
    [*v3 bounds];
  }
  [v2 setFrame:v7, v8, v5, v6];
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1000A2750;
  sub_100008EB0(0, (unint64_t *)&qword_1000D5350);
  *(NSNumber *)(v9 + 32) = NSNumber.init(floatLiteral:)(0.16825);
  *(NSNumber *)(v9 + 40) = NSNumber.init(floatLiteral:)(0.31596);
  *(NSNumber *)(v9 + 48) = NSNumber.init(floatLiteral:)(0.67362);
  *(NSNumber *)(v9 + 56) = NSNumber.init(floatLiteral:)(0.8865);
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setLocations:isa];

  id v11 = [self whiteColor];
  id v12 = [v11 CGColor];

  type metadata accessor for CGColor(0);
  uint64_t v21 = v13;
  v20[0] = (uint64_t)v12;
  uint64_t v14 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v14 + 16) = 4;
  sub_10003101C((uint64_t)v20, v14 + 32);
  sub_10003101C((uint64_t)v20, v14 + 64);
  sub_10003101C((uint64_t)v20, v14 + 96);
  sub_10003FDAC(v20, (_OWORD *)(v14 + 128));
  Class v15 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setColors:v15];

  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureGradient);
  *(void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureGradient) = v2;
  id v17 = v2;

  sub_10004BF88((uint64_t)v3, (uint64_t)v19, &qword_1000D5B10);
  sub_10004BF88((uint64_t)v19, (uint64_t)v20, &qword_1000D5B10);
  if (sub_10004BFEC(v20) != 1)
  {
    id v18 = [*v3 layer];
    [v18 setMask:v17];
  }
}

uint64_t sub_100048FA0(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      type metadata accessor for CGColor(0);
      uint64_t v4 = static Array._allocateBufferUninitialized(minimumCapacity:)();
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
      *(void *)(v5 + 16) = a2;
      id v11 = (void *)v4;
      *(void *)(v5 + 32) = a1;
      if (a2 != 1)
      {
        *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x28) = a1;
        uint64_t v6 = a2 - 2;
        if (v6)
        {
          double v7 = (void *)(v5 + 48);
          do
          {
            *v7++ = a1;
            id v8 = a1;
            --v6;
          }
          while (v6);
        }
        id v9 = a1;
      }
    }
    else
    {
      id v11 = _swiftEmptyArrayStorage;
    }
    specialized Array._endMutation()();
    return (uint64_t)v11;
  }
  return result;
}

void sub_100049094(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    if (swift_unknownObjectWeakLoadStrong())
    {
      a3();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_100049120(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  sub_10004BF88((uint64_t)Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer, (uint64_t)v68, &qword_1000D5B10);
  sub_10004CE60((uint64_t)v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004CDD8);

  sub_10004BF88((uint64_t)v68, (uint64_t)v69, &qword_1000D5B10);
  if (sub_10004BFEC(v69) == 1) {
    return;
  }
  id v9 = (void *)swift_unknownObjectUnownedLoadStrong();
  [v9 setTitle:0];

  uint64_t v10 = (char *)swift_unknownObjectUnownedLoadStrong();
  id v11 = *(void **)&v10[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_skipAction];
  id v12 = v11;

  if (v11)
  {
    uint64_t v13 = (void *)swift_unknownObjectUnownedLoadStrong();
    id v14 = [v13 addAction:v12];
  }
  uint64_t v15 = swift_unknownObjectUnownedLoadStrong();
  id v16 = *(id *)(v15 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_connectAction);
  id v17 = v16;

  if (v16)
  {
    uint64_t v15 = swift_unknownObjectUnownedLoadStrong();
    [(id)v15 removeAction:v17];
  }
  id v18 = (void *)swift_unknownObjectUnownedLoadStrong();
  [v18 hideActivityIndicator];

  if (*(void *)(*(void *)(a2 + *(int *)(type metadata accessor for HeadphoneAssets.Feature(0) + 24)) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v19 = String._bridgeToObjectiveC()();
    [a3 setText:v19];
    swift_bridgeObjectRelease();

    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a4 setText:v20];

    uint64_t v21 = (void *)swift_unknownObjectUnownedLoadStrong();
    id v22 = [v21 view];

    if (!v22)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      return;
    }
    uint64_t v23 = self;
    sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v23 deactivateConstraints:isa];

    Class v25 = Array._bridgeToObjectiveC()().super.isa;
    id v67 = v23;
    [v23 activateConstraints:v25];

    if ((v71[48] & 1) == 0)
    {
      uint64_t v26 = (double *)&v70;
      if (!v71[16]) {
        uint64_t v26 = (double *)v71;
      }
      [v72 setConstant:*v26];
    }
    id v66 = a4;

    sub_100008E18((uint64_t *)&unk_1000D5090);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1000A3C30;
    id v16 = [a3 topAnchor];
    id v4 = [(id)v69[1] bottomAnchor];
    if (qword_1000D43E0 == -1) {
      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_13:
  id v27 = [v16 constraintGreaterThanOrEqualToAnchor:v4 constant:*(double *)&qword_1000D5A88];

  *(void *)(v15 + 32) = v27;
  id v28 = [a3 leadingAnchor];
  uint64_t v29 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v30 = [v29 contentView];

  id v31 = [v30 mainContentGuide];
  id v32 = [v31 leadingAnchor];

  id v33 = [v28 constraintEqualToAnchor:v32];
  *(void *)(v15 + 40) = v33;
  id v34 = [a3 trailingAnchor];
  double v35 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v36 = [v35 contentView];

  id v37 = [v36 mainContentGuide];
  id v38 = [v37 trailingAnchor];

  id v39 = [v34 constraintEqualToAnchor:v38];
  *(void *)(v15 + 48) = v39;
  id v40 = [v66 topAnchor];
  id v41 = [a3 bottomAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41 constant:PRXMinimumInterItemMargin];

  *(void *)(v15 + 56) = v42;
  id v43 = [v66 leadingAnchor];
  id v44 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v45 = [v44 contentView];

  id v46 = [v45 mainContentGuide];
  id v47 = [v46 leadingAnchor];

  id v48 = [v43 constraintEqualToAnchor:v47];
  *(void *)(v15 + 64) = v48;
  id v49 = [v66 trailingAnchor];
  uint64_t v50 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v51 = [v50 contentView];

  id v52 = [v51 mainContentGuide];
  id v53 = [v52 trailingAnchor];

  id v54 = [v49 constraintEqualToAnchor:v53];
  *(void *)(v15 + 72) = v54;
  id v55 = [v66 bottomAnchor];
  uint64_t v56 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v57 = [v56 contentView];

  id v58 = [v57 mainContentGuide];
  id v59 = [v58 bottomAnchor];

  id v60 = [v55 constraintEqualToAnchor:v59];
  *(void *)(v15 + 80) = v60;
  specialized Array._endMutation()();
  Class v61 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v67 activateConstraints:v61];

  id v62 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v63 = [v62 navigationController];

  if (v63)
  {
    id v64 = [v63 parentViewController];

    if (v64)
    {
      id v65 = [v64 view];

      if (v65)
      {
        [v65 layoutIfNeeded];
        sub_10004CE60((uint64_t)v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004CEE4);

        return;
      }
      goto LABEL_22;
    }
  }
  sub_10004CE60((uint64_t)v68, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004CEE4);
}

void sub_1000499C4(unint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v78 = (uint64_t)v76 - v16;
  if (a2) {
    double v17 = 0.5;
  }
  else {
    double v17 = 0.1667;
  }
  uint64_t v18 = type metadata accessor for HeadphoneAssets.Feature(0);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v19 = *(void *)(a3 + *(int *)(v18 + 24));
  if (*(void *)(v19 + 16) <= a1)
  {
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v54 = v75 - 1;
    if (!__OFSUB__(v75, 1)) {
      goto LABEL_31;
    }
    goto LABEL_48;
  }
  uint64_t v80 = v18;
  uint64_t v81 = a4;
  double v20 = 0.0;
  if ((a2 & 1) == 0) {
    goto LABEL_29;
  }
  v76[0] = (uint64_t)v15;
  uint64_t v77 = a3;
  char v21 = a2;
  unint64_t v79 = a1;
  v76[1] = *(void *)(v19 + 32 * a1 + 48);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = (void *)Strong;
    uint64_t v24 = *(void **)(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel);
    if (v24)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      id v25 = v24;

      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v25 setText:v26];
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  uint64_t v27 = swift_unknownObjectWeakLoadStrong();
  a2 = v21;
  if (v27)
  {
    id v28 = (void *)v27;
    uint64_t v29 = (id *)(v27 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody);
    swift_beginAccess();
    a3 = v77;
    if (*v29)
    {
      id v30 = *v29;
      swift_bridgeObjectRelease();

      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v30 setText:v31];
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v77;
  }
  swift_beginAccess();
  uint64_t v32 = swift_unknownObjectWeakLoadStrong();
  a1 = v79;
  if (!v32)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    goto LABEL_22;
  }
  id v33 = (void *)v32;
  uint64_t v34 = v32 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel;
  swift_beginAccess();
  sub_10001A248(v34, (uint64_t)v10, &qword_1000D5660);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_22:
    sub_10001A2AC((uint64_t)v10, &qword_1000D5660);
    goto LABEL_26;
  }
  uint64_t v35 = (uint64_t)v10;
  uint64_t v36 = v78;
  sub_10004D058(v35, v78, type metadata accessor for HeadphoneViewModel);
  uint64_t v37 = *(void *)(v36 + *(int *)(v11 + 80));
  id v38 = self;
  id v39 = [v38 b768e];
  unsigned int v40 = [v39 productID];

  uint64_t v41 = v76[0];
  sub_10004CD70(v36, v76[0], type metadata accessor for HeadphoneViewModel);
  if (v37 == v40)
  {
    sub_10004D0C0(v41, type metadata accessor for HeadphoneViewModel);
    a1 = v79;
  }
  else
  {
    uint64_t v42 = *(void *)(v41 + *(int *)(v11 + 80));
    id v43 = [v38 b768e];
    uint64_t v44 = v41;
    unsigned int v45 = [v43 altProductID];

    sub_10004D0C0(v44, type metadata accessor for HeadphoneViewModel);
    a1 = v79;
    if (v42 != v45)
    {
LABEL_25:
      sub_10004D0C0(v36, type metadata accessor for HeadphoneViewModel);
      goto LABEL_26;
    }
  }
  if (a1) {
    goto LABEL_25;
  }
  swift_beginAccess();
  uint64_t v57 = swift_unknownObjectWeakLoadStrong();
  if (v57)
  {
    NSString v58 = (NSString)v57;
    id v59 = *(void **)(v57 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel);
    if (v59)
    {
      id v60 = v59;

      id v61 = [self mainBundle];
      v62._uint64_t countAndFlagsBits = 0xD000000000000018;
      v83._object = (void *)0xE000000000000000;
      v62._object = (void *)0x80000001000A94D0;
      v63.value._object = (void *)0x80000001000A94F0;
      v63.value._uint64_t countAndFlagsBits = 0xD000000000000011;
      v64._uint64_t countAndFlagsBits = 0;
      v64._object = (void *)0xE000000000000000;
      v83._uint64_t countAndFlagsBits = 0;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v62, v63, (NSBundle)v61, v64, v83);

      NSString v58 = String._bridgeToObjectiveC()();
      a1 = v79;
      swift_bridgeObjectRelease();
      [v60 setText:v58];
    }
  }
  swift_beginAccess();
  uint64_t v65 = swift_unknownObjectWeakLoadStrong();
  if (!v65) {
    goto LABEL_25;
  }
  id v66 = (void *)v65;
  id v67 = (void **)(v65 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody);
  swift_beginAccess();
  uint64_t v68 = *v67;
  if (*v67)
  {
    swift_endAccess();
    id v69 = v68;

    id v70 = [self mainBundle];
    v71._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v84._object = (void *)0xE000000000000000;
    v71._object = (void *)0x80000001000A9510;
    v72.value._object = (void *)0x80000001000A94F0;
    v72.value._uint64_t countAndFlagsBits = 0xD000000000000011;
    v73._uint64_t countAndFlagsBits = 0;
    v73._object = (void *)0xE000000000000000;
    v84._uint64_t countAndFlagsBits = 0;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v71, v72, (NSBundle)v70, v73, v84);

    NSString v74 = String._bridgeToObjectiveC()();
    a1 = v79;
    swift_bridgeObjectRelease();
    [v69 setText:v74];

    goto LABEL_25;
  }
  sub_10004D0C0(v36, type metadata accessor for HeadphoneViewModel);
  swift_endAccess();

LABEL_26:
  swift_beginAccess();
  id v46 = (void *)swift_unknownObjectWeakLoadStrong();
  double v20 = 1.0;
  if (v46)
  {
    id v47 = v46;
    id v48 = [v46 view];

    if (!v48)
    {
LABEL_49:
      __break(1u);
      return;
    }
    [v48 setNeedsLayout];
  }
LABEL_29:
  id v49 = self;
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v81;
  *(double *)(v50 + 24) = v20;
  aBlock[4] = sub_10004CD64;
  aBlock[5] = v50;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046658;
  aBlock[3] = &unk_1000C45F8;
  id v51 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v49 animateWithDuration:0 delay:v51 options:0 animations:v17 completion:0.0];
  _Block_release(v51);
  unint64_t v52 = *(void *)(a3 + *(int *)(v80 + 20));
  if (v52 >> 62) {
    goto LABEL_46;
  }
  uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v54 = v53 - 1;
  if (__OFSUB__(v53, 1))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
LABEL_31:
  if (v54 == a1 && (a2 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v55 = swift_unknownObjectWeakLoadStrong();
    if (v55)
    {
      uint64_t v56 = (void *)v55;
      sub_10004A5A8(0, 2.0);
    }
  }
}

void sub_10004A344(double a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    unint64_t v4 = (unint64_t)sub_100046774();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          uint64_t v8 = v7;
          [v7 setAlpha:a1];
        }
      }
    }
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v9 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v9) {
    return;
  }
  uint64_t v10 = v9;
  id v11 = [v9 contentView];

  id v12 = [v11 auxiliaryViews];
  if (!v12)
  {
LABEL_27:
    __break(1u);
    return;
  }
  sub_100008EB0(0, &qword_1000D4EF0);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    if (v14)
    {
LABEL_16:
      if (v14 >= 1)
      {
        for (uint64_t j = 0; j != v14; ++j)
        {
          if ((v13 & 0xC000000000000001) != 0) {
            id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v16 = *(id *)(v13 + 8 * j + 32);
          }
          double v17 = v16;
          [v16 setAlpha:1.0];
        }
        goto LABEL_23;
      }
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_16;
    }
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
}

void sub_10004A5A8(char a1, double a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureGradient);
  if (v3)
  {
    id v6 = v3;
    NSString v7 = String._bridgeToObjectiveC()();
    [v6 removeAnimationForKey:v7];

    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [self animationWithKeyPath:v8];

    specialized ContiguousArray.reserveCapacity(_:)();
    id v10 = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:1.0];
    id v11 = [v10 CGColor];

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    id v12 = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.949];
    id v13 = [v12 CGColor];

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    id v14 = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.3188];
    id v15 = [v14 CGColor];

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    id v16 = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.0];
    id v17 = [v16 CGColor];

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    id v18 = [self whiteColor];
    id v19 = [v18 CGColor];

    sub_100048FA0(v19, 4);
    type metadata accessor for CGColor(0);
    if (a1)
    {
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v9 setFromValue:isa];

      v21.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_release();
    }
    else
    {
      Class v22 = Array._bridgeToObjectiveC()().super.isa;
      swift_release();
      [v9 setFromValue:v22];

      v21.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    [v9 setToValue:v21.super.isa];

    [v9 setDuration:a2];
    uint64_t v23 = self;
    id v24 = v9;
    id v25 = [v23 functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
    [v24 setTimingFunction:v25];

    [v24 setRemovedOnCompletion:0];
    [v24 setFillMode:kCAFillModeForwards];
    id v26 = String._bridgeToObjectiveC()();
    [v6 addAnimation:v24 forKey:v26];
  }
}

void sub_10004AA90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    sub_10004A5A8(1, 0.5);
  }
  NSString v7 = self;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  aBlock[4] = sub_10004CD04;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046658;
  aBlock[3] = &unk_1000C45A8;
  id v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v7 animateWithDuration:0 delay:v9 options:0 animations:0.5 completion:0.0];
  _Block_release(v9);
}

void sub_10004ABC8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100008278(v3, (uint64_t)qword_1000D69F0);
      unint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        id v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested post pairing view", v6, 2u);
        swift_slowDealloc();
      }

      sub_10008ADE4(1);
      swift_unknownObjectRelease();
    }
  }
}

void sub_10004AD00(double a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    id v4 = [Strong contentView];

    id v5 = [v4 titleView];
    if (v5)
    {
      [v5 setAlpha:a1];
    }
  }
  swift_beginAccess();
  id v6 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    NSString v7 = v6;
    id v8 = [v6 contentView];

    id v9 = [v8 auxiliaryViews];
    if (!v9) {
      goto LABEL_18;
    }
    sub_100008EB0(0, &qword_1000D4EF0);
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      if (v11) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v11)
      {
LABEL_8:
        if (v11 >= 1)
        {
          for (uint64_t i = 0; i != v11; ++i)
          {
            if ((v10 & 0xC000000000000001) != 0) {
              id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v13 = *(id *)(v10 + 8 * i + 32);
            }
            id v14 = v13;
            [v13 setAlpha:a1];
          }
          goto LABEL_15;
        }
        __break(1u);
LABEL_18:
        __break(1u);
        return;
      }
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10004B028()
{
  return type metadata accessor for HeadphoneConnectViewController();
}

uint64_t type metadata accessor for HeadphoneConnectViewController()
{
  uint64_t result = qword_1000D5B00;
  if (!qword_1000D5B00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10004B07C()
{
  sub_100022D30();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10004B150()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_type);
}

void sub_10004B160(uint64_t a1)
{
  uint64_t v3 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004CD70(a1, (uint64_t)v5, type metadata accessor for HeadphoneViewModel);
  uint64_t v6 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  uint64_t v7 = (uint64_t)v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel;
  swift_beginAccess();
  sub_10003FE28((uint64_t)v5, v7);
  swift_endAccess();
  if (*(void *)(a1 + 72))
  {
    NSString v8 = String._bridgeToObjectiveC()();
    [v1 showActivityIndicatorWithStatus:v8];
  }
}

uint64_t sub_10004B29C()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004B2D4()
{
  uint64_t v1 = *(void *)(type metadata accessor for HeadphoneAssets.Feature(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v4);
}

void sub_10004B40C()
{
  uint64_t v1 = *(void *)(type metadata accessor for HeadphoneAssets.Feature(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  unint64_t v5 = *(void **)(v0 + v3);
  unint64_t v6 = *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100049120(v4, v0 + v2, v5, v6);
}

uint64_t sub_10004B4B4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10004B4EC()
{
  uint64_t v1 = *(void *)(type metadata accessor for HeadphoneAssets.Feature(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

void sub_10004B5FC(unint64_t a1, char a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for HeadphoneAssets.Feature(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1000499C4(a1, a2, v2 + v6, v7);
}

uint64_t sub_10004B6A8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10004B6E8()
{
  sub_10004AA90(v0[2], v0[3], v0[4]);
}

void sub_10004B6F4()
{
}

uint64_t sub_10004B6FC(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  unsigned char *v2 = result;
  *a2 = v2 + 1;
  return result;
}

char *sub_10004B70C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008E18(&qword_1000D5B28);
      unint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 5);
      id v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      id v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[32 * v8 + 32]) {
          memmove(v13, a4 + 32, 32 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10004C6C0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10004B81C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100008E18(&qword_1000D5B40);
  uint64_t v10 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10004C8C0(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_10004BA84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10004C360(a1, a2, a3, a4, &qword_1000D5B48, &qword_1000D4800);
}

char *sub_10004BA98(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008E18(&qword_1000D5B30);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 5);
      id v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      id v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[32 * v8 + 32]) {
          memmove(v13, a4 + 32, 32 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10004C7B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10004BBA8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008E18(&qword_1000D5B50);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      id v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10004CA18(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10004BCB8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008E18(&qword_1000D5B68);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      id v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10004CB24(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10004BDC8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008E18(&qword_1000D5B18);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10004CC10(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10004BEF0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10004BF28()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_10004BF50()
{
}

uint64_t sub_10004BF70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10004BF80()
{
  return swift_release();
}

uint64_t sub_10004BF88(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100008E18(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004BFEC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_10004C004(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008E18(&qword_1000D5B60);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 2);
      id v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      id v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= (void *)((char *)a4 + 4 * v8 + 32)) {
          memmove(v13, a4 + 4, 4 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10004CF6C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10004C114(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008E18(&qword_1000D5B20);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      id v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      id v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10004C5CC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10004C224(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100008E18(&qword_1000D5B70);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10004D410(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10004C34C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10004C360(a1, a2, a3, a4, &qword_1000D5B78, &qword_1000D5B80);
}

uint64_t sub_10004C360(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100008E18(a5);
  uint64_t v13 = *(void *)(sub_100008E18(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_100008E18(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10004D508(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_10004C5CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10004C6C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10004C7B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_100008E18(&qword_1000D5B38);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10004C8C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for URL() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10004CA18(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100008E18(&qword_1000D5B58);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10004CB24(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10004CC10(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 48 * a1 + 32);
    size_t v6 = 48 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10004CD04()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10004CD2C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10004CD64()
{
  sub_10004A344(*(double *)(v0 + 24));
}

uint64_t sub_10004CD70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_10004CDD8(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  if (result)
  {
    id v32 = result;
    id v33 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v34 = a31;
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10004CE60(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v4 = *(_OWORD *)(a1 + 224);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    *(void *)(a1 + 256));
  return a1;
}

void *sub_10004CEE4(void *result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_10004CF6C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10004D058(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004D0C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10004D120(uint64_t a1)
{
  sub_100049094(a1, v1, sub_10008B2E4);
}

uint64_t sub_10004D150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t result = a20;
  if (a20)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_10004D19C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26]);
  return a1;
}

void sub_10004D218(uint64_t a1)
{
  sub_100049094(a1, v1, (void (*)(void))sub_10008DE70);
}

uint64_t sub_10004D248(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a1 + 240);
  id v4 = *(id *)a1;
  id v5 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

id sub_10004D2C4(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_shouldFadeInElements] = 1;
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieContainer];
  sub_10004D660((uint64_t)v10);
  sub_10004BF88((uint64_t)v10, v4, &qword_1000D5B10);
  id v5 = &v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_movieView];
  void *v5 = 0;
  v5[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureTitleBody] = 0;
  id v6 = &v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_viewModel];
  uint64_t v7 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_connectAction] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_skipAction] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_featureGradient] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneConnectViewController_type] = 3;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_10004D410(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10004D508(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_100008E18(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

double sub_10004D660(uint64_t a1)
{
  *(void *)(a1 + 256) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void sub_10004D68C()
{
}

void *sub_10004D6D8(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  uint64_t v3 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      uint64_t v29 = _swiftEmptyArrayStorage;
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_10009C678(0, v7, 0);
      uint64_t v3 = _swiftEmptyArrayStorage;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = __DataStorage._bytes.getter();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = __DataStorage._offset.getter();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = __DataStorage._bytes.getter();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = __DataStorage._offset.getter();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        sub_100008E18(&qword_1000D5DD0);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1000A19D0;
        *(void *)(v16 + 56) = &type metadata for UInt8;
        *(void *)(v16 + 64) = &protocol witness table for UInt8;
        *(unsigned char *)(v16 + 32) = v13;
        unint64_t v2 = String.init(format:_:)();
        uint64_t v18 = v17;
        uint64_t v29 = v3;
        unint64_t v20 = v3[2];
        unint64_t v19 = v3[3];
        if (v20 >= v19 >> 1)
        {
          sub_10009C678(v19 > 1, v20 + 1, 1);
          uint64_t v3 = v29;
        }
        _OWORD v3[2] = v20 + 1;
        unint64_t v21 = &v3[2 * v20];
        v21[4] = v2;
        v21[5] = v18;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_10004DA7C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D5B88);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D5B88);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10004DB44()
{
  uint64_t result = sub_10006058C((uint64_t)&off_1000C2158);
  qword_1000D5BA0 = result;
  *(void *)algn_1000D5BA8 = v1;
  return result;
}

uint64_t sub_10004DB70(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  sub_10005F7C4(a1, v6);
  swift_endAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    sub_10000C850(v6, (uint64_t)v5);
    uint64_t v9 = v8 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess();
    sub_10005F7C4((uint64_t)v5, v9);
    swift_endAccess();
    sub_100090CE4();
    sub_100089E74();
    sub_100091178();
    swift_unknownObjectRelease();
    sub_10000C918((uint64_t)v5);
  }
  return sub_10000C918(a1);
}

uint64_t sub_10004DC94()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager))
  {
    uint64_t v4 = *(void *)(v0
                   + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager);
  }
  else
  {
    sub_100008EB0(0, &qword_1000D5E28);
    static CKContainer.AirTagsContainer.getter();
    static CKContainer.PersonalizationManateeContainer.getter();
    type metadata accessor for PersonalizationAssetManager();
    static PersonalizationAssetManager.defaultCacheDirectory.getter();
    uint64_t v4 = PersonalizationAssetManager.__allocating_init(container:manateeContainer:cacheDirectory:)();
    *(void *)(v1 + v3) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_10004DD94(uint64_t a1, uint64_t a2)
{
  return sub_10004F444(a1, a2, (void (*)(uint64_t))sub_10004DDAC);
}

void sub_10004DDAC(void *a1)
{
  Class v132 = (int *)type metadata accessor for HeadphoneModel();
  uint64_t v2 = __chkstk_darwin(v132);
  uint64_t v130 = (uint64_t)&v113 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v113 - v4;
  uint64_t v6 = sub_100008E18(&qword_1000D5E30);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100008E18(&qword_1000D5450);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v131 = (uint64_t)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t)&v113 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v113 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v134 = (uint64_t)&v113 - v19;
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)&v113 - v20;
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v136 = v22;
  uint64_t v137 = v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v113 - v28;
  __chkstk_darwin(v27);
  uint64_t v135 = (char *)&v113 - v30;
  long long v138 = a1;
  id v31 = [a1 bleDevice];
  if (!v31) {
    return;
  }
  id v32 = v31;
  id v33 = [v31 advertisementFields];

  if (!v33) {
    return;
  }
  uint64_t v129 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  id v34 = [v138 identifier];
  if (!v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 56))(v21, 1, 1, v136);
    goto LABEL_18;
  }
  uint64_t v35 = v34;
  uint64_t v123 = v6;
  Class v124 = v8;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v36 = v136;
  uint64_t v37 = v137;
  uint64_t v38 = v137 + 32;
  id v39 = *(void (**)(char *, char *, uint64_t))(v137 + 32);
  v39(v21, v29, v136);
  unsigned int v40 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56);
  uint64_t v126 = v37 + 56;
  char v125 = v40;
  v40((uint64_t)v21, 0, 1, v36);
  uint64_t v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v127(v21, 1, v36) == 1)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    sub_10001A2AC((uint64_t)v21, &qword_1000D5450);
    return;
  }
  Class v128 = v5;
  uint64_t v121 = v38;
  v39(v135, v21, v36);
  uint64_t v41 = v133;
  uint64_t v42 = (uint64_t)&v133[OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model];
  swift_beginAccess();
  uint64_t v122 = v42;
  if ((*(unsigned __int8 *)(v42 + 120) | 4) == 0xC
    && (v41[OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_hasAutoConnected] & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_100057710(v138);
    (*(void (**)(char *, uint64_t))(v137 + 8))(v135, v36);
    return;
  }
  Class v120 = (void (*)(char *, uint64_t, uint64_t))v39;
  uint64_t v43 = v134;
  sub_10001A248(v122 + v132[11], v134, &qword_1000D5450);
  sub_10001A248(v43, (uint64_t)v17, &qword_1000D5450);
  unsigned int v44 = v127(v17, 1, v36);
  sub_10001A2AC((uint64_t)v17, &qword_1000D5450);
  BOOL v45 = v44 == 1;
  uint64_t v47 = v136;
  uint64_t v46 = v137;
  id v48 = v124;
  uint64_t v49 = v123;
  if (!v45 || ([v138 needsSetup] & 1) != 0) {
    goto LABEL_27;
  }
  id v50 = [v138 bleDevice];
  if (v50
    && (id v51 = v50,
        id v52 = [v50 bluetoothAddress],
        v51,
        v52))
  {
    uint64_t v53 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v55 = v54;

    uint64_t v119 = (void (*)(char *, char *, uint64_t))sub_1000521C8(v53, v55);
    uint64_t v57 = v56;
    sub_10001FB5C(v53, v55);
    uint64_t v58 = *(void *)(v122 + 136);
    if (v57)
    {
      uint64_t v47 = v136;
      if (!v58)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      if (v119 == *(void (**)(char *, char *, uint64_t))(v122 + 128) && v58 == v57)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v101 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v101 & 1) == 0) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      uint64_t v47 = v136;
      if (v58) {
        goto LABEL_27;
      }
    }
  }
  else if (*(void *)(v122 + 136))
  {
    goto LABEL_27;
  }
  if (qword_1000D43E8 != -1) {
    goto LABEL_93;
  }
  while (1)
  {
    uint64_t v59 = type metadata accessor for Logger();
    sub_100008278(v59, (uint64_t)qword_1000D5B88);
    uint64_t v119 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
    uint64_t v118 = v46 + 16;
    v119(v26, v135, v47);
    id v117 = v138;
    id v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.default.getter();
    int v116 = v61;
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = swift_slowAlloc();
      os_log_t v115 = v60;
      uint64_t v63 = v62;
      v140[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 136315394;
      uint64_t v114 = v63 + 4;
      v119(v29, v26, v47);
      uint64_t v64 = String.init<A>(reflecting:)();
      *(void *)&long long v141 = sub_10005D8C8(v64, v65, v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v136);
      *(_WORD *)(v63 + 12) = 2080;
      uint64_t v114 = v63 + 14;
      id v66 = v117;
      *(void *)&long long v141 = [v117 bleDevice];
      sub_100008E18(&qword_1000D5E48);
      uint64_t v67 = String.init<A>(reflecting:)();
      *(void *)&long long v141 = sub_10005D8C8(v67, v68, v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      uint64_t v47 = v136;
      swift_bridgeObjectRelease();
      os_log_t v69 = v115;
      _os_log_impl((void *)&_mh_execute_header, v115, (os_log_type_t)v116, "Updating identifier to %s from %s", (uint8_t *)v63, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      id v70 = v117;

      (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v47);
    }
    uint64_t v71 = v134;
    sub_10001A2AC(v134, &qword_1000D5450);
    v119((char *)v71, v135, v47);
    v125(v71, 0, 1, v47);
LABEL_27:
    (*(void (**)(uint64_t, char *, uint64_t))(v46 + 16))(v14, v135, v47);
    v125(v14, 0, 1, v47);
    uint64_t v72 = (uint64_t)&v48[*(int *)(v49 + 48)];
    sub_10001A248(v134, (uint64_t)v48, &qword_1000D5450);
    sub_10001A248(v14, v72, &qword_1000D5450);
    Swift::String v73 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v127;
    if (v127(v48, 1, v47) == 1)
    {
      sub_10001A2AC(v14, &qword_1000D5450);
      int v74 = v73(v72, 1, v47);
      uint64_t v26 = v133;
      if (v74 != 1) {
        goto LABEL_32;
      }
      sub_10001A2AC((uint64_t)v48, &qword_1000D5450);
      uint64_t v75 = v129;
    }
    else
    {
      uint64_t v76 = v131;
      sub_10001A248((uint64_t)v48, v131, &qword_1000D5450);
      int v77 = v73(v72, 1, v47);
      uint64_t v26 = v133;
      if (v77 == 1)
      {
        sub_10001A2AC(v14, &qword_1000D5450);
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v76, v47);
LABEL_32:
        sub_10001A2AC((uint64_t)v48, &qword_1000D5E30);
LABEL_37:
        swift_bridgeObjectRelease();
        sub_10001A2AC(v134, &qword_1000D5450);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v135, v47);
        return;
      }
      v120(v29, v72, v47);
      sub_10005FE30(&qword_1000D5E40, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v78 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v79 = *(void (**)(char *, uint64_t))(v46 + 8);
      v79(v29, v47);
      sub_10001A2AC(v14, &qword_1000D5450);
      v79((char *)v76, v47);
      sub_10001A2AC((uint64_t)v48, &qword_1000D5450);
      uint64_t v75 = v129;
      if ((v78 & 1) == 0) {
        goto LABEL_37;
      }
    }
    *(void *)&long long v141 = 25452;
    *((void *)&v141 + 1) = 0xE200000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v75 + 16))
    {
      unint64_t v80 = sub_10001D518((uint64_t)v140);
      uint64_t v29 = (char *)&type metadata for Any;
      if (v81)
      {
        sub_10003101C(*(void *)(v75 + 56) + 32 * v80, (uint64_t)&v141);
      }
      else
      {
        long long v141 = 0u;
        long long v142 = 0u;
      }
      uint64_t v82 = (uint64_t)v128;
    }
    else
    {
      long long v141 = 0u;
      long long v142 = 0u;
      uint64_t v82 = (uint64_t)v128;
      uint64_t v29 = (char *)&type metadata for Any;
    }
    sub_10001F800((uint64_t)v140);
    if (*((void *)&v142 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v14 = v139;
        goto LABEL_46;
      }
    }
    else
    {
      sub_10001A2AC((uint64_t)&v141, &qword_1000D51D8);
    }
    uint64_t v14 = 0;
LABEL_46:
    *(void *)&long long v141 = 0x7375746174537368;
    *((void *)&v141 + 1) = 0xE800000000000000;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v75 + 16))
    {
      unint64_t v83 = sub_10001D518((uint64_t)v140);
      if (v84)
      {
        sub_10003101C(*(void *)(v75 + 56) + 32 * v83, (uint64_t)&v141);
      }
      else
      {
        long long v141 = 0u;
        long long v142 = 0u;
      }
      uint64_t v82 = (uint64_t)v128;
    }
    else
    {
      long long v141 = 0u;
      long long v142 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001F800((uint64_t)v140);
    if (*((void *)&v142 + 1))
    {
      if (swift_dynamicCast())
      {
        int v85 = v139;
        goto LABEL_57;
      }
    }
    else
    {
      sub_10001A2AC((uint64_t)&v141, &qword_1000D51D8);
    }
    int v85 = 0;
LABEL_57:
    uint64_t v86 = (char *)[v138 batteryInfo];
    if (!v86)
    {
      Class v88 = _swiftEmptyArrayStorage;
      goto LABEL_86;
    }
    id v48 = v86;
    LODWORD(v129) = v85;
    sub_100008EB0(0, &qword_1000D5E38);
    uint64_t v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    LODWORD(v131) = v14;
    if ((unint64_t)v49 >> 62)
    {
      if (v49 < 0) {
        id v48 = (char *)v49;
      }
      else {
        id v48 = (char *)(v49 & 0xFFFFFFFFFFFFFF8);
      }
      swift_bridgeObjectRetain();
      uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v46)
      {
LABEL_84:
        Class v88 = _swiftEmptyArrayStorage;
        goto LABEL_85;
      }
    }
    else
    {
      uint64_t v46 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v46) {
        goto LABEL_84;
      }
    }
    if (v46 >= 1) {
      break;
    }
    __break(1u);
LABEL_93:
    swift_once();
  }
  uint64_t v87 = 0;
  Class v88 = _swiftEmptyArrayStorage;
  unint64_t v89 = v49 & 0xC000000000000001;
  uint64_t v90 = v49;
  do
  {
    if (v89) {
      id v91 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v91 = *(id *)(v49 + 8 * v87 + 32);
    }
    Class v92 = v91;
    id v93 = [v91 batteryState];
    id v94 = [v92 batteryType];
    if ((unint64_t)v94 >= 5) {
      char v95 = 3;
    }
    else {
      char v95 = 0x201000203uLL >> (8 * v94);
    }
    [v92 batteryLevel];
    uint64_t v97 = v96;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Class v88 = sub_10004BCB8(0, v88[2] + 1, 1, v88);
    }
    unint64_t v99 = v88[2];
    unint64_t v98 = v88[3];
    if (v99 >= v98 >> 1) {
      Class v88 = sub_10004BCB8((void *)(v98 > 1), v99 + 1, 1, v88);
    }
    ++v87;
    v88[2] = v99 + 1;
    Class v100 = &v88[2 * v99];
    v100[4] = v97;
    *((unsigned char *)v100 + 40) = v93 == (id)2;
    *((unsigned char *)v100 + 41) = v95;

    uint64_t v82 = (uint64_t)v128;
    uint64_t v49 = v90;
  }
  while (v46 != v87);
LABEL_85:
  swift_bridgeObjectRelease();
  uint64_t v47 = v136;
  int v85 = v129;
  LOBYTE(v14) = v131;
LABEL_86:
  sub_10000C850(v122, v82);
  double v102 = v132;
  *(unsigned char *)(v82 + v132[22]) = v14;
  *(_DWORD *)(v82 + v102[28]) = v85;
  id v103 = [v138 bleDevice];
  Class v104 = v103;
  if (v103)
  {
    id v105 = [v103 name];

    if (v105)
    {
      Class v104 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v107 = v106;

      goto LABEL_91;
    }
    Class v104 = 0;
  }
  unint64_t v107 = 0xE000000000000000;
LABEL_91:
  Class v108 = v132;
  uint64_t v109 = (uint64_t)v128;
  unint64_t v110 = &v128[v132[13]];
  swift_bridgeObjectRelease();
  *(void *)unint64_t v110 = v104;
  *((void *)v110 + 1) = v107;
  swift_bridgeObjectRelease();
  *(void *)(v109 + 112) = v88;
  uint64_t v111 = v134;
  sub_10005FEB0(v134, v109 + v108[11], &qword_1000D5450);
  uint64_t v112 = v130;
  sub_10000C850(v109, v130);
  sub_10004DB70(v112);
  sub_10001A2AC(v111, &qword_1000D5450);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v135, v47);
  sub_10000C918(v109);
}

uint64_t sub_10004EE88(uint64_t a1, uint64_t a2)
{
  return sub_10004F444(a1, a2, (void (*)(uint64_t))sub_10004EEA0);
}

uint64_t sub_10004EEA0(void *a1)
{
  uint64_t v3 = sub_100008E18(&qword_1000D5450);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v45 - v7;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (char *)v45 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v45 - v17;
  id v19 = [a1 identifier];
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_6;
  }
  uint64_t v20 = v19;
  id v48 = a1;
  uint64_t v49 = v13;
  uint64_t v50 = v1;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v21(v8, v16, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v22(v8, 1, v9) == 1)
  {
LABEL_6:
    uint64_t v26 = (uint64_t)v8;
    return sub_10001A2AC(v26, &qword_1000D5450);
  }
  uint64_t v23 = v18;
  v21(v18, v8, v9);
  uint64_t v24 = v50 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  uint64_t v25 = type metadata accessor for HeadphoneModel();
  sub_10001A248(v24 + *(int *)(v25 + 44), (uint64_t)v6, &qword_1000D5450);
  if (v22(v6, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
    uint64_t v26 = (uint64_t)v6;
    return sub_10001A2AC(v26, &qword_1000D5450);
  }
  uint64_t v28 = v49;
  v21(v49, v6, v9);
  uint64_t v29 = v28;
  uint64_t v30 = v23;
  if (static UUID.== infix(_:_:)())
  {
    unsigned int v31 = *(unsigned __int8 *)(v24 + 120);
    if (v31 >= 6 && v31 - 9 >= 2)
    {
      if (qword_1000D43E8 != -1) {
        swift_once();
      }
      uint64_t v32 = type metadata accessor for Logger();
      sub_100008278(v32, (uint64_t)qword_1000D5B88);
      id v33 = v48;
      id v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.default.getter();
      int v36 = v35;
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v37 = swift_slowAlloc();
        int v47 = v36;
        uint64_t v38 = (uint8_t *)v37;
        id v48 = (id)swift_slowAlloc();
        id v52 = v48;
        uint64_t v46 = v38;
        *(_DWORD *)uint64_t v38 = 136315138;
        uint64_t v29 = v49;
        v45[1] = v38 + 4;
        id v39 = v33;
        id v40 = [v39 description];
        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v43 = v42;

        uint64_t v51 = sub_10005D8C8(v41, v43, (uint64_t *)&v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v47, "Auto dismiss on lost device %s", v46, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10003B97C();
        swift_unknownObjectRelease();
      }
    }
  }
  unsigned int v44 = *(void (**)(char *, uint64_t))(v10 + 8);
  v44(v29, v9);
  return ((uint64_t (*)(char *, uint64_t))v44)(v30, v9);
}

uint64_t sub_10004F3CC(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10004DDAC(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_10004F42C(uint64_t a1, uint64_t a2)
{
  return sub_10004F444(a1, a2, (void (*)(uint64_t))sub_10004F4B8);
}

uint64_t sub_10004F444(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3(a1);
    return swift_release();
  }
  return result;
}

id sub_10004F4B8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  id result = (id)swift_beginAccess();
  if ((*(unsigned char *)(v7 + *(int *)(v4 + 164)) & 1) == 0)
  {
    id result = [a1 btAddressData];
    if (result)
    {
      uint64_t v9 = result;
      uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v12 = v11;

      v62[0] = (uint64_t)sub_10004D6D8(v10, v12);
      sub_100008E18(&qword_1000D5DC0);
      sub_100017E30(&qword_1000D5DC8, &qword_1000D5DC0);
      BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
      Swift::String v13 = String.lowercased()();
      swift_bridgeObjectRelease();
      if (*(void *)(v7 + 136))
      {
        Swift::String v14 = String.lowercased()();
        if (v13._countAndFlagsBits == v14._countAndFlagsBits && v13._object == v14._object)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_9;
        }
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v15)
        {
LABEL_9:
          if ([a1 gapaFlags])
          {
            if (qword_1000D43E8 != -1) {
              swift_once();
            }
            uint64_t v30 = type metadata accessor for Logger();
            sub_100008278(v30, (uint64_t)qword_1000D5B88);
            id v31 = a1;
            uint64_t v32 = Logger.logObject.getter();
            os_log_type_t v33 = static os_log_type_t.default.getter();
            int v34 = v33;
            id v60 = v32;
            if (os_log_type_enabled(v32, v33))
            {
              unint64_t v59 = v12;
              os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
              uint64_t v58 = swift_slowAlloc();
              v62[0] = v58;
              LODWORD(v57) = v34;
              *(_DWORD *)os_log_type_t v35 = 136315138;
              unint64_t v55 = v35 + 4;
              uint64_t v56 = v35;
              id v36 = v31;
              uint64_t v37 = v10;
              id v38 = [v36 description];
              uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v41 = v40;

              uint64_t v10 = v37;
              uint64_t v42 = v39;
              unint64_t v12 = v59;
              uint64_t v61 = sub_10005D8C8(v42, v41, v62);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              unint64_t v43 = v60;
              _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v57, "CB Device, device is genuine %s", v56, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            *(unsigned char *)(v7 + *(int *)(v4 + 164)) = 1;
            uint64_t Strong = swift_unknownObjectWeakLoadStrong();
            if (Strong)
            {
              uint64_t v45 = Strong;
              sub_10000C850(v7, (uint64_t)v6);
              uint64_t v46 = v45 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
              swift_beginAccess();
              sub_10005F7C4((uint64_t)v6, v46);
              swift_endAccess();
              sub_100090CE4();
              sub_100089E74();
              sub_100091178();
              swift_unknownObjectRelease();
              sub_10000C918((uint64_t)v6);
            }
            sub_100055CC0();
          }
          else if (([a1 gapaFlags] & 2) != 0)
          {
            if (qword_1000D43E8 != -1) {
              swift_once();
            }
            uint64_t v16 = type metadata accessor for Logger();
            sub_100008278(v16, (uint64_t)qword_1000D5B88);
            id v17 = a1;
            uint64_t v18 = Logger.logObject.getter();
            os_log_type_t v19 = static os_log_type_t.default.getter();
            int v20 = v19;
            id v60 = v18;
            BOOL v21 = os_log_type_enabled(v18, v19);
            unint64_t v59 = v12;
            if (v21)
            {
              LODWORD(v58) = v20;
              uint64_t v22 = (uint8_t *)swift_slowAlloc();
              uint64_t v57 = swift_slowAlloc();
              v62[0] = v57;
              *(_DWORD *)uint64_t v22 = 136315138;
              unint64_t v55 = v22 + 4;
              uint64_t v56 = v22;
              id v23 = v17;
              uint64_t v24 = v10;
              id v25 = [v23 description];
              uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v28 = v27;

              uint64_t v10 = v24;
              uint64_t v61 = sub_10005D8C8(v26, v28, v62);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              uint64_t v29 = v60;
              _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v58, "CB Device, device is not genuine  %s", v56, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            *(unsigned char *)(v7 + *(int *)(v4 + 164)) = 1;
            uint64_t v47 = swift_unknownObjectWeakLoadStrong();
            if (v47)
            {
              uint64_t v48 = v47;
              sub_10000C850(v7, (uint64_t)v6);
              uint64_t v49 = v48 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
              swift_beginAccess();
              sub_10005F7C4((uint64_t)v6, v49);
              swift_endAccess();
              sub_100090CE4();
              sub_100089E74();
              sub_100091178();
              swift_unknownObjectRelease();
              sub_10000C918((uint64_t)v6);
            }
            uint64_t v50 = *(void *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession + 8);
            uint64_t ObjectType = swift_getObjectType();
            id v52 = *(void (**)(uint64_t, uint64_t))(v50 + 168);
            swift_unknownObjectRetain();
            v52(ObjectType, v50);
            swift_unknownObjectRelease();
            uint64_t v53 = swift_unknownObjectWeakLoadStrong();
            unint64_t v12 = v59;
            if (v53)
            {
              sub_10003DF54();
              swift_unknownObjectRelease();
            }
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return (id)sub_10001FB5C(v10, v12);
    }
  }
  return result;
}

uint64_t sub_10004FBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v8 = (void *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  void *v8 = a1;
  v8[1] = a2;
  sub_10005FEA0(v9);
  swift_retain();
  sub_10004FDF4();
  sub_1000500D0();
  sub_100051048();
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery);
  aBlock[4] = sub_1000518AC;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000518C0;
  aBlock[3] = &unk_1000C4A68;
  unint64_t v11 = _Block_copy(aBlock);
  [v10 activateWithCompletion:v11];
  _Block_release(v11);
  if (qword_1000D4468 != -1) {
    swift_once();
  }
  unint64_t v12 = (void *)qword_1000D9290;
  uint64_t v13 = v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  *(unsigned char *)(v13 + *(int *)(v5 + 160)) = sub_10007CD60(*(unsigned int *)(v13 + *(int *)(v5 + 124)), v12) & 1;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    sub_10000C850(v13, (uint64_t)v7);
    uint64_t v16 = v15 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess();
    sub_10005F7C4((uint64_t)v7, v16);
    swift_endAccess();
    sub_100090CE4();
    sub_100089E74();
    sub_100091178();
    swift_unknownObjectRelease();
    return sub_10000C918((uint64_t)v7);
  }
  return result;
}

uint64_t sub_10004FDF4()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_workingQueue);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100060930;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046658;
  aBlock[3] = &unk_1000C4B58;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_10005FE30((unint64_t *)&qword_1000D4C20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100008E18(&qword_1000D4C28);
  sub_100017E30((unint64_t *)&qword_1000D4C30, &qword_1000D4C28);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  swift_release();
  return swift_release();
}

void sub_1000500D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100008E18(&qword_1000D5DD8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100008E18(&qword_1000D5DE0);
  uint64_t v103 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v103 + 64);
  uint64_t v7 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v89 - v9;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  Swift::String v14 = (char *)v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  uint64_t v16 = type metadata accessor for HeadphoneModel();
  if (*(unsigned char *)(v15 + *(int *)(v16 + 76)) == 1)
  {
    uint64_t v17 = v16;
    uint64_t v99 = v12;
    uint64_t v100 = v11;
    uint64_t v97 = *(unsigned __int8 *)(v15 + 144);
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    uint64_t v101 = sub_100008278(v18, (uint64_t)qword_1000D5B88);
    os_log_type_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v102 = v1;
    if (v21)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Fetching assets", v22, 2u);
      uint64_t v1 = v102;
      swift_slowDealloc();
    }

    unint64_t v98 = v14;
    Date.init()();
    int v23 = *(_DWORD *)(v15 + *(int *)(v17 + 124));
    int v95 = *(unsigned __int8 *)(v15 + 146);
    uint64_t v24 = (uint64_t *)(v15 + *(int *)(v17 + 56));
    uint64_t v26 = *v24;
    unint64_t v25 = v24[1];
    int v96 = v23;
    if (v25 >> 60 == 15) {
      goto LABEL_7;
    }
    id v94 = (char *)v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v34 = v25 >> 62;
    switch(v25 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v26), v26))
        {
          __break(1u);
LABEL_53:
          __break(1u);
        }
        else
        {
          uint64_t v36 = HIDWORD(v26) - (int)v26;
LABEL_23:
          sub_10003548C(v26, v25);
          sub_10003548C(v26, v25);
          if (v36 == 17)
          {
LABEL_24:
            uint64_t v106 = v26;
            unint64_t v107 = v25;
            sub_10005FD08(v26, v25);
            uint64_t v39 = sub_10006058C((uint64_t)&off_1000C2190);
            unint64_t v41 = v40;
            Data.append(_:)();
            sub_10001FB5C(v39, v41);
            uint64_t v43 = v106;
            unint64_t v42 = v107;
            sub_10003548C(v106, v107);
            sub_10003548C(v43, v42);
            unsigned int v44 = Logger.logObject.getter();
            os_log_type_t v45 = static os_log_type_t.default.getter();
            int v46 = v45;
            if (os_log_type_enabled(v44, v45))
            {
              LODWORD(v93) = v46;
              uint64_t v47 = (uint8_t *)swift_slowAlloc();
              uint64_t v92 = swift_slowAlloc();
              v105[0] = v92;
              id v91 = v47;
              *(_DWORD *)uint64_t v47 = 136315138;
              uint64_t v90 = (uint64_t)(v47 + 12);
              v89[1] = v47 + 4;
              v89[0] = sub_10004D6D8(v43, v42);
              uint64_t v104 = v89[0];
              sub_100008E18(&qword_1000D5DC0);
              sub_100017E30(&qword_1000D5DC8, &qword_1000D5DC0);
              uint64_t v48 = BidirectionalCollection<>.joined(separator:)();
              unint64_t v50 = v49;
              swift_bridgeObjectRelease();
              uint64_t v104 = sub_10005D8C8(v48, v50, v105);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_10001FB5C(v43, v42);
              sub_10001FB5C(v43, v42);
              _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v93, "pairingEngravingData with 18 bytes for asset request: %s.", v91, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              sub_10001FB5C(v43, v42);
              sub_10001FB5C(v43, v42);
            }

            swift_beginAccess();
            uint64_t v51 = v106;
            unint64_t v52 = v107;
            sub_10003548C(v106, v107);
            PersonalizationAssetManager.PrePairingAssetInfo.init(scannedBluetoothData:)();
            sub_10003AD58(v26, v25);
            sub_10001FB5C(v51, v52);
            uint64_t v53 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v10, 0, 1, v53);
            uint64_t v8 = v94;
            goto LABEL_39;
          }
LABEL_16:
          if (!v34)
          {
            uint64_t v35 = BYTE6(v25);
            goto LABEL_30;
          }
          if (v34 != 1)
          {
            uint64_t v55 = *(void *)(v26 + 16);
            uint64_t v54 = *(void *)(v26 + 24);
            BOOL v56 = __OFSUB__(v54, v55);
            uint64_t v35 = v54 - v55;
            if (!v56) {
              goto LABEL_30;
            }
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
            JUMPOUT(0x100051028);
          }
          LODWORD(v35) = HIDWORD(v26) - v26;
          if (!__OFSUB__(HIDWORD(v26), v26))
          {
            uint64_t v35 = (int)v35;
LABEL_30:
            if (v35 != 18)
            {
LABEL_33:
              sub_10005FD08(v26, v25);
              sub_10005FD08(v26, v25);
              sub_10003548C(v26, v25);
              sub_10003548C(v26, v25);
              uint64_t v64 = Logger.logObject.getter();
              int v65 = static os_log_type_t.error.getter();
              if (os_log_type_enabled(v64, (os_log_type_t)v65))
              {
                LODWORD(v91) = v65;
                uint64_t v92 = (uint64_t)v64;
                uint64_t v66 = swift_slowAlloc();
                uint64_t v90 = swift_slowAlloc();
                uint64_t v106 = v90;
                *(_DWORD *)uint64_t v66 = 136315394;
                uint64_t v93 = v66 + 4;
                v105[0] = (uint64_t)sub_10004D6D8(v26, v25);
                sub_100008E18(&qword_1000D5DC0);
                sub_100017E30(&qword_1000D5DC8, &qword_1000D5DC0);
                uint64_t v67 = BidirectionalCollection<>.joined(separator:)();
                unint64_t v69 = v68;
                swift_bridgeObjectRelease();
                v105[0] = sub_10005D8C8(v67, v69, &v106);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                id v70 = (uint8_t *)v66;
                swift_bridgeObjectRelease();
                sub_10003AD58(v26, v25);
                sub_10003AD58(v26, v25);
                *(_WORD *)(v66 + 12) = 2048;
                uint64_t v71 = v34;
                uint64_t v8 = v94;
                switch(v71)
                {
                  case 0:
                    sub_10003AD58(v26, v25);
                    uint64_t v72 = BYTE6(v25);
                    goto LABEL_50;
                  case 1:
                    sub_10003AD58(v26, v25);
                    LODWORD(v72) = HIDWORD(v26) - v26;
                    uint64_t v1 = v102;
                    if (__OFSUB__(HIDWORD(v26), v26)) {
                      goto LABEL_56;
                    }
                    uint64_t v72 = (int)v72;
                    break;
                  case 2:
                    uint64_t v87 = *(void *)(v26 + 16);
                    uint64_t v86 = *(void *)(v26 + 24);
                    sub_10003AD58(v26, v25);
                    uint64_t v72 = v86 - v87;
                    uint64_t v1 = v102;
                    if (!__OFSUB__(v86, v87)) {
                      break;
                    }
                    __break(1u);
LABEL_49:
                    sub_10003AD58(v26, v25);
                    uint64_t v72 = 0;
LABEL_50:
                    uint64_t v1 = v102;
                    break;
                  case 3:
                    goto LABEL_49;
                  default:
                    JUMPOUT(0);
                }
                Class v88 = v92;
                v105[0] = v72;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                sub_10003AD58(v26, v25);
                _os_log_impl((void *)&_mh_execute_header, v88, (os_log_type_t)v91, "#Expected 18 bytes for pairingEngravingData: %s, but %ld bytes received.", v70, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                sub_10003AD58(v26, v25);
              }
              else
              {
                sub_10003AD58(v26, v25);
                sub_10003AD58(v26, v25);
                sub_10001FB5C(v26, v25);
                sub_10001FB5C(v26, v25);
                sub_10001FB5C(v26, v25);

                uint64_t v8 = v94;
                uint64_t v1 = v102;
              }
LABEL_7:
              uint64_t v27 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 1, 1, v27);
LABEL_40:
              uint64_t v74 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo;
              swift_beginAccess();
              sub_10005FEB0((uint64_t)v10, v74, &qword_1000D5DE0);
              swift_endAccess();
              uint64_t v75 = type metadata accessor for TaskPriority();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v4, 1, 1, v75);
              uint64_t v76 = swift_allocObject();
              swift_weakInit();
              sub_10001A248((uint64_t)v10, (uint64_t)v8, &qword_1000D5DE0);
              uint64_t v77 = (uint64_t)v8;
              unint64_t v78 = (*(unsigned __int8 *)(v103 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
              uint64_t v79 = swift_allocObject();
              *(void *)(v79 + 16) = 0;
              *(void *)(v79 + 24) = 0;
              *(void *)(v79 + 32) = v76;
              *(_DWORD *)(v79 + 40) = v96;
              *(unsigned char *)(v79 + 44) = v95;
              *(void *)(v79 + 48) = v97;
              *(void *)(v79 + 56) = v26;
              *(void *)(v79 + 64) = v25;
              sub_10004BF88(v77, v79 + v78, &qword_1000D5DE0);
              sub_10005FD08(v26, v25);
              sub_10005ACA0((uint64_t)v4, (uint64_t)&unk_1000D5E68, v79);
              swift_release();
              sub_10001A2AC((uint64_t)v4, &qword_1000D5DD8);
              unint64_t v80 = Logger.logObject.getter();
              os_log_type_t v81 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v80, v81))
              {
                uint64_t v82 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v82 = 0;
                _os_log_impl((void *)&_mh_execute_header, v80, v81, "Fetching assets finished", v82, 2u);
                swift_slowDealloc();
              }

              unint64_t v83 = v98;
              Date.timeIntervalSinceNow.getter();
              double v85 = v84;
              sub_10003AD58(v26, v25);
              sub_10001A2AC((uint64_t)v10, &qword_1000D5DE0);
              (*(void (**)(char *, uint64_t))(v99 + 8))(v83, v100);
              *(double *)(v102 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_assetFetchDuration) = -v85;
              return;
            }
            sub_10003548C(v26, v25);
            sub_10003548C(v26, v25);
            uint64_t v57 = Logger.logObject.getter();
            os_log_type_t v58 = static os_log_type_t.default.getter();
            int v59 = v58;
            if (os_log_type_enabled(v57, v58))
            {
              LODWORD(v93) = v59;
              id v60 = (uint8_t *)swift_slowAlloc();
              uint64_t v92 = swift_slowAlloc();
              uint64_t v106 = v92;
              id v91 = v60;
              *(_DWORD *)id v60 = 136315138;
              uint64_t v90 = (uint64_t)(v60 + 4);
              v105[0] = (uint64_t)sub_10004D6D8(v26, v25);
              sub_100008E18(&qword_1000D5DC0);
              sub_100017E30(&qword_1000D5DC8, &qword_1000D5DC0);
              uint64_t v61 = BidirectionalCollection<>.joined(separator:)();
              unint64_t v63 = v62;
              swift_bridgeObjectRelease();
              v105[0] = sub_10005D8C8(v61, v63, &v106);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_10003AD58(v26, v25);
              sub_10003AD58(v26, v25);
              _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v93, "pairingEngravingData with 18 bytes for asset request: %s.", v91, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              sub_10003AD58(v26, v25);
              sub_10003AD58(v26, v25);
            }

            uint64_t v8 = v94;
            PersonalizationAssetManager.PrePairingAssetInfo.init(scannedBluetoothData:)();
            uint64_t v73 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v10, 0, 1, v73);
LABEL_39:
            uint64_t v1 = v102;
            goto LABEL_40;
          }
        }
        __break(1u);
        goto LABEL_55;
      case 2uLL:
        uint64_t v38 = *(void *)(v26 + 16);
        uint64_t v37 = *(void *)(v26 + 24);
        uint64_t v36 = v37 - v38;
        if (!__OFSUB__(v37, v38)) {
          goto LABEL_23;
        }
        goto LABEL_53;
      case 3uLL:
        goto LABEL_33;
      default:
        if (BYTE6(v25) != 17) {
          goto LABEL_16;
        }
        goto LABEL_24;
    }
  }
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_100008278(v28, (uint64_t)qword_1000D5B88);
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    id v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Device is unsupported, not looking up assets", v31, 2u);
    swift_slowDealloc();
  }

  uint64_t v32 = *(void (**)(uint64_t))(v1
                                       + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  if (v32)
  {
    uint64_t v33 = swift_retain();
    v32(v33);
    sub_10005FEA0((uint64_t)v32);
  }
}

void sub_100051048()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100008E18(&qword_1000D5458);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_smartChargeClient);
  if (v8)
  {
    uint64_t v9 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess();
    if (*(void *)(v9 + 136))
    {
      uint64_t v10 = *(NSObject **)(v9 + 128);
      uint64_t v57 = v2;
      os_log_type_t v58 = v10;
      uint64_t v11 = qword_1000D43E8;
      id v12 = v8;
      swift_bridgeObjectRetain();
      if (v11 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      uint64_t v14 = sub_100008278(v13, (uint64_t)qword_1000D5B88);
      swift_retain_n();
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      BOOL v17 = os_log_type_enabled(v15, v16);
      uint64_t v55 = v14;
      BOOL v56 = v4;
      if (v17)
      {
        uint64_t v18 = swift_slowAlloc();
        id v54 = v12;
        os_log_type_t v19 = (uint8_t *)v18;
        uint64_t v20 = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v19 = 136315138;
        uint64_t v60 = v20;
        v53[1] = v19 + 4;
        BOOL v21 = *(void **)(v9 + 136);
        v59[0] = *(id *)(v9 + 128);
        v59[1] = v21;
        swift_bridgeObjectRetain();
        sub_100008E18(&qword_1000D55A8);
        uint64_t v22 = String.init<A>(reflecting:)();
        v59[0] = (id)sub_10005D8C8(v22, v23, &v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Fetching full charge deadline for %s", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        id v12 = v54;
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v59[0] = 0;
      id v38 = [v12 fullChargeDeadlineForDevice:v37 withError:v59];

      id v39 = v59[0];
      if (v38)
      {
        static Date._unconditionallyBridgeFromObjectiveC(_:)();
        id v40 = v39;

        uint64_t v41 = type metadata accessor for Date();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v7, 0, 1, v41);
        swift_beginAccess();
        sub_10005F884((uint64_t)v7, v9 + *(int *)(v57 + 140));
        swift_endAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v43 = Strong;
          uint64_t v44 = (uint64_t)v56;
          sub_10000C850(v9, (uint64_t)v56);
          uint64_t v45 = v43 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
          swift_beginAccess();
          sub_10005F7C4(v44, v45);
          swift_endAccess();
          sub_100090CE4();
          sub_100089E74();
          sub_100091178();
          swift_unknownObjectRelease();
          sub_10000C918(v44);
        }
      }
      else
      {
        id v46 = v59[0];
        uint64_t v47 = _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v48 = Logger.logObject.getter();
        os_log_type_t v49 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v48, v49))
        {
          unint64_t v50 = (uint8_t *)swift_slowAlloc();
          v59[0] = (id)swift_slowAlloc();
          *(_DWORD *)unint64_t v50 = 136315138;
          uint64_t v60 = v47;
          swift_errorRetain();
          sub_100008E18((uint64_t *)&unk_1000D50A0);
          uint64_t v51 = String.init<A>(describing:)();
          uint64_t v60 = sub_10005D8C8(v51, v52, (uint64_t *)v59);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v48, v49, "Failed to fetch full charge deadline: %s", v50, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
      }
    }
    else
    {
      uint64_t v28 = qword_1000D43E8;
      uint64_t v29 = v8;
      if (v28 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_100008278(v30, (uint64_t)qword_1000D5B88);
      swift_retain_n();
      id v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v31, v32))
      {
        os_log_type_t v58 = v29;
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        v59[0] = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 136315138;
        sub_10000C850(v9, (uint64_t)v4);
        uint64_t v34 = sub_100037770();
        unint64_t v36 = v35;
        sub_10000C918((uint64_t)v4);
        uint64_t v60 = sub_10005D8C8(v34, v36, (uint64_t *)v59);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "No bluetooth address: %s", v33, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
    }
  }
  else
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100008278(v24, (uint64_t)qword_1000D5B88);
    os_log_type_t v58 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v58, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v25, "Optimized battery charging is not enabled", v26, 2u);
      swift_slowDealloc();
    }
    uint64_t v27 = v58;
  }
}

void sub_1000518AC(uint64_t a1)
{
}

void sub_1000518C0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_10005192C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100008E18(&qword_1000D5458);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_didSubmitMetrics;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_didSubmitMetrics) & 1) == 0)
  {
    uint64_t v15 = v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess();
    uint64_t v16 = type metadata accessor for HeadphoneModel();
    if (!*(unsigned char *)(v15 + *(int *)(v16 + 120)) && ((1 << *(unsigned char *)(v15 + 120)) & 0x167F) == 0)
    {
      id v40 = (int *)v16;
      id v42 = [objc_allocWithZone((Class)SFHeadphoneProxPairingEvent) init];
      uint64_t v17 = v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate;
      swift_beginAccess();
      uint64_t v41 = v17;
      sub_10001A248(v17, (uint64_t)v13, &qword_1000D5458);
      id v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
      LODWORD(v38) = v39(v13, 1, v4) != 1;
      sub_10001A2AC((uint64_t)v13, &qword_1000D5458);
      id v18 = v42;
      [v42 setAttemptedPairing:v38];
      [v18 setColor:*(unsigned __int8 *)(v15 + 144)];
      [v18 setAssetFetchDuration:*(double *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_assetFetchDuration)];
      if (a1)
      {
        swift_errorRetain();
        os_log_type_t v19 = (void *)_convertErrorToNSError(_:)();
        id v38 = [v19 code];
        swift_errorRelease();

        id v20 = v38;
      }
      else
      {
        id v20 = 0;
      }
      id v21 = v42;
      [v42 setErrorCode:v20];
      sub_10001A248(v41, (uint64_t)v11, &qword_1000D5458);
      int v22 = v39(v11, 1, v4);
      unint64_t v23 = v40;
      if (v22 == 1)
      {
        sub_10001A2AC((uint64_t)v11, &qword_1000D5458);
        double v24 = -1.0;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
        Date.timeIntervalSinceNow.getter();
        double v26 = v25;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        double v24 = -v26;
      }
      [v21 setPairingDuration:v24];
      int v27 = *(unsigned __int8 *)(v15 + 120);
      if (v27 == 11) {
        uint64_t v28 = 2;
      }
      else {
        uint64_t v28 = v27 == 8;
      }
      [v21 setPairingType:v28];
      [v21 setProductID:*(unsigned int *)(v15 + v23[31])];
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      double v30 = -1.0;
      double v31 = -1.0;
      if (Strong)
      {
        unint64_t v32 = *(void *)(Strong + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_initialCardDisplayUpTicks);
        swift_unknownObjectRelease();
        unint64_t v33 = *(void *)(v15 + v23[15]);
        double v31 = -1.0;
        if (v33)
        {
          if (v32 < v33)
          {
            __break(1u);
            goto LABEL_24;
          }
          double v31 = (double)(unint64_t)UpTicksToMilliseconds();
        }
      }
      [v21 setFoundToFirstCardDuration:v31];
      uint64_t v34 = swift_unknownObjectWeakLoadStrong();
      if (!v34) {
        goto LABEL_21;
      }
      unint64_t v35 = *(void *)(v34 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_initialCardDisplayUpTicks);
      swift_unknownObjectRelease();
      unint64_t v36 = *(void *)(v15 + v23[43]);
      if (!v36) {
        goto LABEL_21;
      }
      if (v35 >= v36)
      {
        double v30 = (double)(unint64_t)UpTicksToMilliseconds();
LABEL_21:
        [v21 setTriggerToFirstCardDuration:v30];
        [v21 submitEvent];

        *(unsigned char *)(v2 + v14) = 1;
        return;
      }
LABEL_24:
      __break(1u);
    }
  }
}

uint64_t sub_100051DA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100008E18(&qword_1000D5458);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  if (*(unsigned char *)(v5 + 120) == 12) {
    uint64_t v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_wantsTemporaryPairing);
  }
  else {
    uint64_t v6 = 0;
  }
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100008278(v7, (uint64_t)qword_1000D5B88);
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v11 = *(void *)(v5 + 136);
    uint64_t v34 = *(void *)(v5 + 128);
    uint64_t v35 = v11;
    swift_bridgeObjectRetain();
    sub_100008E18(&qword_1000D55A8);
    uint64_t v12 = String.init<A>(reflecting:)();
    uint64_t v34 = sub_10005D8C8(v12, v13, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 1024;
    LODWORD(v34) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Connecting device bluetoothAddress = %s guestMode = %{BOOL}d", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  Date.init()();
  uint64_t v14 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 0, 1, v14);
  uint64_t v15 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate;
  swift_beginAccess();
  sub_10005F884((uint64_t)v4, v15);
  swift_endAccess();
  uint64_t v16 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession;
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v20 = *(void *)(v5 + 128);
  uint64_t v19 = *(void *)(v5 + 136);
  id v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v21(v20, v19, ObjectType, v17);
  swift_unknownObjectRelease();
  uint64_t v22 = *(void *)(v16 + 8);
  uint64_t v23 = swift_getObjectType();
  double v24 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v22 + 112);
  swift_retain();
  swift_unknownObjectRetain();
  v24(sub_10005F8EC, v1, v23, v22);
  swift_unknownObjectRelease();
  uint64_t v25 = *(void *)(v16 + 8);
  uint64_t v26 = swift_getObjectType();
  int v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 40);
  swift_unknownObjectRetain();
  v27(v6, v26, v25);
  swift_unknownObjectRelease();
  uint64_t v28 = *(void *)(v16 + 8);
  uint64_t v29 = swift_getObjectType();
  double v30 = *(void (**)(uint64_t, uint64_t))(v28 + 160);
  swift_unknownObjectRetain();
  v30(v29, v28);
  return swift_unknownObjectRelease();
}

uint64_t sub_1000521C8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Data.Iterator();
  uint64_t v19 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_10003548C(a1, a2);
      sub_10003548C(a1, a2);
      break;
    default:
      break;
  }
  Data.Iterator.init(_:at:)();
  sub_10001FB5C(a1, a2);
  sub_10005FE30(&qword_1000D5DB8, (void (*)(uint64_t))&type metadata accessor for Data.Iterator);
  dispatch thunk of IteratorProtocol.next()();
  if (v23)
  {
    uint64_t v7 = (char *)&_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = (char *)&_swiftEmptyArrayStorage;
    long long v20 = xmmword_1000A19D0;
    do
    {
      char v10 = v22;
      sub_100008E18(&qword_1000D5DD0);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = v20;
      *(void *)(v11 + 56) = &type metadata for UInt8;
      *(void *)(v11 + 64) = &protocol witness table for UInt8;
      *(unsigned char *)(v11 + 32) = v10;
      uint64_t v12 = String.init(format:_:)();
      uint64_t v14 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_10004C114(0, *((void *)v7 + 2) + 1, 1, v7);
      }
      unint64_t v16 = *((void *)v7 + 2);
      unint64_t v15 = *((void *)v7 + 3);
      if (v16 >= v15 >> 1) {
        uint64_t v7 = sub_10004C114((char *)(v15 > 1), v16 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v16 + 1;
      uint64_t v17 = &v7[16 * v16];
      *((void *)v17 + 4) = v12;
      *((void *)v17 + 5) = v14;
      dispatch thunk of IteratorProtocol.next()();
    }
    while (v23 != 1);
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
  id v21 = v7;
  sub_100008E18(&qword_1000D5DC0);
  sub_100017E30(&qword_1000D5DC8, &qword_1000D5DC0);
  uint64_t v8 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1000524DC()
{
  uint64_t v1 = v0;
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D5B88);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess();
    uint64_t v7 = *(void *)(v6 + 136);
    uint64_t v32 = *(void *)(v6 + 128);
    uint64_t v33 = v7;
    swift_bridgeObjectRetain();
    sub_100008E18(&qword_1000D55A8);
    uint64_t v8 = String.init<A>(reflecting:)();
    uint64_t v32 = sub_10005D8C8(v8, v9, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 1024;
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 120);
    swift_release();
    LODWORD(v32) = v6 == 12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Disconnecting device bluetoothAddress = %s guestMode = %{BOOL}d", (uint8_t *)v5, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v10 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession;
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 64);
  swift_unknownObjectRetain();
  v13(1, ObjectType, v11);
  swift_unknownObjectRelease();
  uint64_t v14 = *(void *)(v10 + 8);
  uint64_t v15 = swift_getObjectType();
  uint64_t v16 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  uint64_t v17 = *(void *)(v16 + 128);
  uint64_t v18 = *(void *)(v16 + 136);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v19(v17, v18, v15, v14);
  swift_unknownObjectRelease();
  uint64_t v20 = *(void *)(v10 + 8);
  uint64_t v21 = swift_getObjectType();
  char v22 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v20 + 112);
  swift_retain();
  swift_unknownObjectRetain();
  v22(sub_10005FDD4, v1, v21, v20);
  swift_unknownObjectRelease();
  uint64_t v23 = *(void *)(v10 + 8);
  uint64_t v24 = swift_getObjectType();
  BOOL v25 = *(unsigned __int8 *)(v16 + 120) == 12;
  uint64_t v26 = *(void (**)(BOOL, uint64_t, uint64_t))(v23 + 40);
  swift_unknownObjectRetain();
  v26(v25, v24, v23);
  swift_unknownObjectRelease();
  uint64_t v27 = *(void *)(v10 + 8);
  uint64_t v28 = swift_getObjectType();
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 160);
  swift_unknownObjectRetain();
  v29(v28, v27);
  return swift_unknownObjectRelease();
}

uint64_t sub_100052898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v7 - 8);
  __chkstk_darwin();
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin();
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v4;
  aBlock[4] = a3;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046658;
  aBlock[3] = v18;
  uint64_t v15 = _Block_copy(aBlock);
  swift_errorRetain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_10005FE30((unint64_t *)&qword_1000D4C20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100008E18(&qword_1000D4C28);
  sub_100017E30((unint64_t *)&qword_1000D4C30, &qword_1000D4C28);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

uint64_t sub_100052B80()
{
  uint64_t v1 = v0;
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D5B88);
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess();
    uint64_t v7 = *(void *)(v6 + 136);
    uint64_t v29 = *(void *)(v6 + 128);
    uint64_t v30 = v7;
    swift_bridgeObjectRetain();
    sub_100008E18(&qword_1000D55A8);
    uint64_t v8 = String.init<A>(reflecting:)();
    uint64_t v29 = sub_10005D8C8(v8, v9, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 1024;
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 120);
    swift_release();
    LODWORD(v29) = v6 == 12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unpairing device bluetoothAddress = %s guestMode = %{BOOL}d", (uint8_t *)v5, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  id v10 = [objc_allocWithZone((Class)SFBluetoothPairingSession) init];
  uint64_t v11 = (void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  *uint64_t v11 = v10;
  v11[1] = &off_1000C4C60;
  swift_unknownObjectRelease();
  uint64_t v12 = v11[1];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 88);
  swift_unknownObjectRetain();
  v14(1, ObjectType, v12);
  swift_unknownObjectRelease();
  uint64_t v15 = v11[1];
  uint64_t v16 = swift_getObjectType();
  uint64_t v17 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  uint64_t v19 = *(void *)(v17 + 128);
  uint64_t v18 = *(void *)(v17 + 136);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v20(v19, v18, v16, v15);
  swift_unknownObjectRelease();
  uint64_t v21 = v11[1];
  uint64_t v22 = swift_getObjectType();
  uint64_t v23 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v21 + 112);
  swift_retain();
  swift_unknownObjectRetain();
  v23(sub_10005F828, v1, v22, v21);
  swift_unknownObjectRelease();
  uint64_t v24 = v11[1];
  uint64_t v25 = swift_getObjectType();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v24 + 160);
  swift_unknownObjectRetain();
  v26(v25, v24);
  return swift_unknownObjectRelease();
}

uint64_t sub_100052F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  aBlock[4] = sub_10004CD04;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046658;
  aBlock[3] = &unk_1000C4838;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE30((unint64_t *)&qword_1000D4C20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100008E18(&qword_1000D4C28);
  sub_100017E30((unint64_t *)&qword_1000D4C30, &qword_1000D4C28);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

id sub_100053208(char a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0xD000000000000015 && a3 == 0x80000001000A9980
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    if (a1)
    {
      uint64_t v7 = v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      uint64_t v8 = type metadata accessor for HeadphoneModel();
      if (*(void *)(v7 + *(int *)(v8 + 152))) {
        unint64_t v9 = *(void *)(v7 + *(int *)(v8 + 152));
      }
      else {
        unint64_t v9 = 3;
      }
    }
    else
    {
      unint64_t v9 = 0;
    }
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100008278(v10, (uint64_t)qword_1000D5B88);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v14 = sub_10005F760(v9);
      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v17 = v16;

      sub_10005D8C8(v15, v17, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Setting Announce Calls to %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return [self setAnnounceCallsState:v9];
  }
  else if (a2 == 0x6C61626F6C67 && a3 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    uint64_t v19 = *(void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter + 24);
    uint64_t v20 = *(void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter + 32);
    sub_10000C80C((void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter), v19);
    return (id)(*(uint64_t (**)(void, uint64_t, uint64_t))(v20 + 8))(a1 & 1, v19, v20);
  }
  else
  {
    uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter + 24);
    uint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter + 32);
    sub_10000C80C((void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter), v21);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 16))(v26, a2, a3, v21, v22);
    uint64_t v23 = v27;
    uint64_t v24 = v28;
    sub_10000C80C(v26, v27);
    (*(void (**)(void, uint64_t, uint64_t))(v24 + 56))(a1 & 1, v23, v24);
    return (id)sub_100017BC4((uint64_t)v26);
  }
}

id sub_10005356C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  if (*(void *)(v1 + 136))
  {
    swift_bridgeObjectRetain();
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v2 = 0;
  }
  id v3 = [objc_allocWithZone((Class)HPHeadphoneEndCallManager) initWithBluetoothAddress:v2];

  uint64_t v4 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager);
  *(void *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager) = v3;

  uint64_t v6 = *(void **)(v0 + v4);
  if (v6) {
    return [v6 isStatusUnknown];
  }
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100008278(v8, (uint64_t)qword_1000D5B88);
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    sub_10005D8C8(0xD00000000000001CLL, 0x80000001000A9A10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "endCallManager is nil in %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return 0;
}

void sub_100053788()
{
}

void sub_1000537AC()
{
}

void sub_1000537D0()
{
}

void sub_1000537F4(const char **a1, uint64_t a2, unint64_t a3)
{
  if (*(void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager))
  {
    uint64_t v4 = *a1;
    uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager);
    [v5 v4];
  }
  else
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100008278(v8, (uint64_t)qword_1000D5B88);
    oslog = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v10 = 136315138;
      sub_10005D8C8(a2, a3, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "endCallManager is nil in %s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1000539E0()
{
}

void sub_100053A04(const char **a1, uint64_t a2, unint64_t a3)
{
  if (*(void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager))
  {
    uint64_t v4 = *a1;
    uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager);
    [v5 v4];
  }
  else
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100008278(v8, (uint64_t)qword_1000D5B88);
    oslog = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      os_log_type_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v10 = 136315138;
      sub_10005D8C8(a2, a3, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "headphoneFeatureManager is nil in %s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

id sub_100053BF0()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager;
  NSString v2 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager);
  if (v2) {
    return [v2 getColorCode];
  }
  uint64_t v3 = v0;
  uint64_t v4 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 136);
  uint64_t v6 = *(unsigned int *)(v4 + *(int *)(type metadata accessor for HeadphoneModel() + 124));
  if (v5)
  {
    swift_bridgeObjectRetain();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  id v8 = [objc_allocWithZone((Class)HPHeadphoneFeatureManager) initWithBluetoothAddress:v7 productID:v6];

  os_log_type_t v9 = *(void **)(v3 + v1);
  *(void *)(v3 + v1) = v8;

  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100008278(v10, (uint64_t)qword_1000D5B88);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Mute Call: Get Color Code, init Headphone Feature Manager", v13, 2u);
    swift_slowDealloc();
  }

  NSString v2 = *(void **)(v3 + v1);
  if (v2) {
    return [v2 getColorCode];
  }
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  sub_100008278(v10, (uint64_t)qword_1000D5B88);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v17 = 136315138;
    sub_10005D8C8(0x726F6C6F43746567, 0xEE00292865646F43, v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Mute Call: headphoneFeatureManager is nil in %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v18 = v3 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  return (id)(*(unsigned char *)(v18 + 144) & 0xF);
}

id sub_100053F0C()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager;
  NSString v2 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager);
  if (v2) {
    return [v2 shouldShowAdaptiveControlsProxCard];
  }
  uint64_t v3 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 136);
  uint64_t v5 = *(unsigned int *)(v3 + *(int *)(type metadata accessor for HeadphoneModel() + 124));
  if (v4)
  {
    swift_bridgeObjectRetain();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone((Class)HPHeadphoneFeatureManager) initWithBluetoothAddress:v6 productID:v5];

  id v8 = *(void **)(v0 + v1);
  *(void *)(v0 + v1) = v7;

  NSString v2 = *(void **)(v0 + v1);
  if (v2) {
    return [v2 shouldShowAdaptiveControlsProxCard];
  }
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100008278(v10, (uint64_t)qword_1000D5B88);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_10005D8C8(0xD000000000000025, 0x80000001000A9A30, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "headphoneFeatureManager is nil in %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return 0;
}

void sub_100054144()
{
}

void sub_100054168(char a1)
{
}

void sub_10005418C(char a1)
{
}

void sub_1000541B0(char a1)
{
}

void sub_1000541D4(char a1, const char **a2, uint64_t a3, unint64_t a4)
{
  if (*(void *)(v4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager))
  {
    uint64_t v5 = *a2;
    uint64_t v6 = a1 & 1;
    id v7 = *(void **)(v4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager);
    [v7 v5:v6];
  }
  else
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100008278(v10, (uint64_t)qword_1000D5B88);
    oslog = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v12 = 136315138;
      sub_10005D8C8(a3, a4, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "headphoneFeatureManager is nil in %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1000543C4()
{
  uint64_t v1 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_smartChargeClient);
  if (v4)
  {
    os_log_t v5 = (os_log_t)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model);
    swift_beginAccess();
    Class isa = v5[17].isa;
    uint64_t v53 = v3;
    if (isa)
    {
      os_log_t v54 = v5;
      Class v51 = v5[16].isa;
      uint64_t v7 = qword_1000D43E8;
      id v8 = v4;
      swift_bridgeObjectRetain();
      if (v7 != -1) {
        swift_once();
      }
      uint64_t v52 = v1;
      uint64_t v9 = type metadata accessor for Logger();
      uint64_t v10 = sub_100008278(v9, (uint64_t)qword_1000D5B88);
      swift_retain_n();
      os_log_type_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        id v49 = v8;
        uint64_t v50 = v10;
        *(_DWORD *)uint64_t v13 = 136315138;
        uint64_t v55 = v14;
        Class v15 = v54[17].isa;
        v56[0] = v54[16].isa;
        v56[1] = v15;
        swift_bridgeObjectRetain();
        sub_100008E18(&qword_1000D55A8);
        uint64_t v16 = String.init<A>(reflecting:)();
        v56[0] = (id)sub_10005D8C8(v16, v17, &v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "Disabling OBC for %s", v13, 0xCu);
        swift_arrayDestroy();
        id v8 = v49;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      NSString v33 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v56[0] = 0;
      unsigned int v34 = [v8 connectAndDisableOBCforDevice:v33 withError:v56];

      if (v34)
      {
        id v35 = v56[0];
      }
      else
      {
        id v36 = v56[0];
        uint64_t v37 = _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRetain();
        swift_errorRetain();
        id v38 = Logger.logObject.getter();
        os_log_type_t v39 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v38, v39))
        {
          id v40 = (uint8_t *)swift_slowAlloc();
          uint64_t v41 = (void *)swift_slowAlloc();
          uint64_t v55 = v37;
          v56[0] = v41;
          *(_DWORD *)id v40 = 136315138;
          swift_errorRetain();
          sub_100008E18((uint64_t *)&unk_1000D50A0);
          uint64_t v42 = String.init<A>(describing:)();
          uint64_t v55 = sub_10005D8C8(v42, v43, (uint64_t *)v56);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v38, v39, "Failed to disable OBC: %s", v40, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
      }
      uint64_t v1 = v52;
      os_log_t v5 = v54;
    }
    else
    {
      uint64_t v22 = qword_1000D43E8;
      id v23 = v4;
      if (v22 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      sub_100008278(v24, (uint64_t)qword_1000D5B88);
      swift_retain_n();
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        uint64_t v28 = (void *)swift_slowAlloc();
        os_log_t v54 = v5;
        v56[0] = v28;
        *(_DWORD *)uint64_t v27 = 136315138;
        uint64_t v52 = v1;
        sub_10000C850((uint64_t)v54, (uint64_t)v3);
        uint64_t v29 = sub_100037770();
        uint64_t v30 = (uint64_t)v3;
        unint64_t v32 = v31;
        sub_10000C918(v30);
        uint64_t v55 = sub_10005D8C8(v29, v32, (uint64_t *)v56);
        uint64_t v1 = v52;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "No bluetooth address: %s", v27, 0xCu);
        swift_arrayDestroy();
        os_log_t v5 = v54;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
    }
    *((unsigned char *)&v5->isa + *(int *)(v1 + 80)) = 0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v45 = Strong;
      uint64_t v46 = (uint64_t)v53;
      sub_10000C850((uint64_t)v5, (uint64_t)v53);
      uint64_t v47 = v45 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      sub_10005F7C4(v46, v47);
      swift_endAccess();
      sub_100090CE4();
      sub_100089E74();
      sub_100091178();
      swift_unknownObjectRelease();
      sub_10000C918(v46);
    }
  }
  else
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100008278(v18, (uint64_t)qword_1000D5B88);
    os_log_t v54 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v19, "Optimized battery charging is not enabled", v20, 2u);
      swift_slowDealloc();
    }
    os_log_t v21 = v54;
  }
}

void sub_100054B60(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100008278(v2, (uint64_t)qword_1000D5B88);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      os_log_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      swift_errorRetain();
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v5 = v10;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "### Restoring FindMy app failed: %@\n", v4, 0xCu);
      sub_100008E18(&qword_1000D5E58);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100008278(v6, (uint64_t)qword_1000D5B88);
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "### Restoring FindMy Install started", v8, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100054E0C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_100008E18(&qword_1000D5450);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_10001A2AC((uint64_t)v8, &qword_1000D5450);
}

uint64_t sub_100054F54(uint64_t a1)
{
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D5B88);
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Pairing did complete", v5, 2u);
    swift_slowDealloc();
  }

  if (a1)
  {
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)id v8 = 136315138;
      swift_errorRetain();
      sub_100008E18((uint64_t *)&unk_1000D50A0);
      uint64_t v9 = String.init<A>(describing:)();
      sub_10005D8C8(v9, v10, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to pair device: %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100090A48(0);
      swift_errorRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_errorRelease();
    }
  }
  else
  {
    sub_1000551F8();
  }
  sub_10005192C(a1);
  return sub_1000558E4();
}

uint64_t sub_1000551F8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v55 = *(void *)(v1 - 8);
  uint64_t v56 = v1;
  __chkstk_darwin(v1);
  os_log_type_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v54 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTimeInterval();
  uint64_t v53 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v57 = v0;
  uint64_t v17 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  if (*(unsigned char *)(v17 + *(int *)(type metadata accessor for HeadphoneModel() + 120)))
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100008278(v18, (uint64_t)qword_1000D5B88);
    os_log_type_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Skipping device authenticity check - test mode detected", v21, 2u);
      swift_slowDealloc();
    }

    return sub_100055CC0();
  }
  else
  {
    uint64_t v46 = v14;
    uint64_t v48 = v9;
    id v49 = v16;
    uint64_t v50 = v11;
    uint64_t v51 = v10;
    uint64_t v52 = v4;
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100008278(v23, (uint64_t)qword_1000D5B88);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v27 = v3;
    uint64_t v47 = v6;
    uint64_t v29 = v49;
    uint64_t v28 = v50;
    uint64_t v30 = v7;
    unint64_t v31 = v48;
    unint64_t v32 = v46;
    if (v26)
    {
      NSString v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Beginning device authenticity check", v33, 2u);
      swift_slowDealloc();
    }

    uint64_t v34 = v57;
    id v35 = *(void **)(v57 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery);
    unint64_t v62 = sub_100056A68;
    uint64_t v63 = 0;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256;
    uint64_t v60 = sub_1000518C0;
    uint64_t v61 = &unk_1000C4950;
    id v36 = _Block_copy(&aBlock);
    [v35 activateWithCompletion:v36];
    _Block_release(v36);
    sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
    uint64_t v45 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    void *v31 = 5;
    uint64_t v37 = v53;
    (*(void (**)(void *, void, uint64_t))(v53 + 104))(v31, enum case for DispatchTimeInterval.seconds(_:), v30);
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v37 + 8))(v31, v30);
    id v38 = *(void (**)(char *, uint64_t))(v28 + 8);
    uint64_t v39 = v51;
    v38(v32, v51);
    unint64_t v62 = sub_10005FD1C;
    uint64_t v63 = v34;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v59 = 1107296256;
    uint64_t v60 = sub_100046658;
    uint64_t v61 = &unk_1000C4978;
    id v40 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v41 = v47;
    static DispatchQoS.unspecified.getter();
    uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
    sub_10005FE30((unint64_t *)&qword_1000D4C20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100008E18(&qword_1000D4C28);
    sub_100017E30((unint64_t *)&qword_1000D4C30, &qword_1000D4C28);
    uint64_t v42 = v56;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unint64_t v43 = (void *)v45;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v55 + 8))(v27, v42);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v52);
    return ((uint64_t (*)(char *, uint64_t))v38)(v29, v39);
  }
}

uint64_t sub_1000558E4()
{
  uint64_t v1 = sub_100008E18(&qword_1000D5DD8);
  __chkstk_darwin(v1 - 8);
  os_log_type_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100008E18(&qword_1000D5DE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo;
  swift_beginAccess();
  sub_10001A248(v14, (uint64_t)v6, &qword_1000D5DE0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_10001A2AC((uint64_t)v6, &qword_1000D5DE0);
  }
  unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v31(v13, v6, v7);
  uint64_t v16 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  uint64_t v17 = *(void *)(v16 + 136);
  if (v17)
  {
    uint64_t v30 = *(void *)(v16 + 128);
    Swift::String v18 = String.lowercased()();
    unint64_t v32 = v3;
    Swift::String v37 = v18;
    uint64_t v35 = 58;
    unint64_t v36 = 0xE100000000000000;
    uint64_t v33 = 45;
    unint64_t v34 = 0xE100000000000000;
    unint64_t v28 = sub_10005F948();
    sub_10005F99C();
    uint64_t v29 = v0;
    swift_bridgeObjectRetain();
    RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
    swift_bridgeObjectRelease();
    unint64_t v27 = v39;
    unint64_t v28 = v38;
    uint64_t v19 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v32, 1, 1, v19);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    unint64_t v20 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v21 = (v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v22 = (char *)swift_allocObject();
    *((void *)v22 + 2) = 0;
    *((void *)v22 + 3) = 0;
    *((void *)v22 + 4) = v30;
    *((void *)v22 + 5) = v17;
    v31(&v22[v20], v11, v7);
    uint64_t v23 = (unint64_t *)&v22[v21];
    uint64_t v24 = v29;
    unint64_t v25 = v27;
    *uint64_t v23 = v28;
    v23[1] = v25;
    *(void *)&v22[(v21 + 23) & 0xFFFFFFFFFFFFFFF8] = v24;
    swift_retain();
    sub_10005B5E0((uint64_t)v32, (uint64_t)&unk_1000D5E00, (uint64_t)v22);
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
}

uint64_t sub_100055CC0()
{
  uint64_t v1 = (int *)type metadata accessor for HeadphoneModel();
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v55 = (uint64_t)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v53 - v4;
  uint64_t v6 = v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  uint64_t v7 = v0;
  uint64_t v54 = v0;
  swift_beginAccess();
  sub_10000C850(v6, (uint64_t)v5);
  uint64_t v8 = (uint64_t)&v5[v1[11]];
  sub_10001A2AC(v8, &qword_1000D5450);
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = v7 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession;
  uint64_t v11 = *(void *)(v10 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 128);
  swift_unknownObjectRetain();
  uint64_t v14 = v13(ObjectType, v11);
  unint64_t v16 = v15;
  swift_unknownObjectRelease();
  if (v16) {
    uint64_t v17 = v14;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v16) {
    unint64_t v18 = v16;
  }
  else {
    unint64_t v18 = 0xE000000000000000;
  }
  uint64_t v19 = &v5[v1[13]];
  swift_bridgeObjectRelease();
  *(void *)uint64_t v19 = v17;
  *((void *)v19 + 1) = v18;
  uint64_t v20 = *(void *)(v10 + 8);
  uint64_t v21 = swift_getObjectType();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 144);
  swift_unknownObjectRetain();
  LODWORD(v20) = v22(v21, v20);
  swift_unknownObjectRelease();
  *(_DWORD *)&v5[v1[12]] = v20;
  uint64_t v23 = *(void *)(v10 + 8);
  uint64_t v24 = swift_getObjectType();
  unint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 136);
  swift_unknownObjectRetain();
  LOBYTE(v23) = v25(v24, v23);
  swift_unknownObjectRelease();
  v5[v1[32]] = v23 & 1;
  uint64_t v26 = self;
  uint64_t v27 = *(unsigned int *)(v6 + v1[31]);
  uint64_t v28 = *(void *)(v10 + 8);
  uint64_t v56 = v10;
  uint64_t v29 = swift_getObjectType();
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 152);
  swift_unknownObjectRetain();
  char v31 = v30(v29, v28);
  swift_unknownObjectRelease();
  uint64_t v32 = v31 & 1;
  uint64_t v33 = (uint64_t)v5;
  uint64_t v34 = v27;
  uint64_t v35 = v54;
  unsigned __int8 v36 = [v26 shouldPromptForAnnounceCallsForProductID:v34 supportsInEarDetection:v32 isUpsellFlow:0];
  v5[v1[37]] = v36 | [v26 shouldPromptForAnnounceNotificationsForProductID:*(unsigned int *)(v6 + v1[31]) isUpsellFlow:0];
  uint64_t v37 = v55;
  sub_10000C850((uint64_t)v5, v55);
  sub_10004DB70(v37);
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  sub_100008278(v38, (uint64_t)qword_1000D5B88);
  swift_retain();
  unint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 67109120;
    int v57 = *(_DWORD *)(v6 + v1[31]);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "will attempt to fetch MI with model named %u", v41, 8u);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  sub_10000C80C((void *)(v35 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_offersClient), *(void *)(v35 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_offersClient + 24));
  int v42 = *(_DWORD *)(v6 + v1[31]);
  char v43 = sub_100088DD4(v42);
  uint64_t v44 = swift_allocObject();
  swift_weakInit();
  int v57 = v42;
  swift_retain();
  uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
  if (v43) {
    uint64_t v47 = 0xD000000000000018;
  }
  else {
    uint64_t v47 = 0xD000000000000016;
  }
  if (v43) {
    uint64_t v48 = 0x80000001000A9B10;
  }
  else {
    uint64_t v48 = 0x80000001000A9AF0;
  }
  sub_100015218(v45, v46, v47, v48, 0x636973756DLL, 0xE500000000000000, (uint64_t)sub_10005FD5C, v44);
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100090A48(1);
    swift_unknownObjectRelease();
  }
  uint64_t v49 = *(void *)(v56 + 8);
  uint64_t v50 = swift_getObjectType();
  uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v49 + 168);
  swift_unknownObjectRetain();
  v51(v50, v49);
  swift_unknownObjectRelease();
  return sub_10000C918(v33);
}

uint64_t sub_100056248(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  char v14 = a2 & 1;
  *(unsigned char *)(v13 + 24) = a2 & 1;
  *(void *)(v13 + 32) = a3;
  aBlock[4] = sub_10005FDAC;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046658;
  aBlock[3] = &unk_1000C49F0;
  unint64_t v15 = _Block_copy(aBlock);
  sub_100017D00(a1, v14);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE30((unint64_t *)&qword_1000D4C20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100008E18(&qword_1000D4C28);
  sub_100017E30((unint64_t *)&qword_1000D4C30, &qword_1000D4C28);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
}

void sub_100056550(void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100008278(v24, (uint64_t)qword_1000D5B88);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v40 = v4;
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      v42[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315138;
      uint64_t v41 = (uint64_t)a1;
      swift_errorRetain();
      sub_100008E18((uint64_t *)&unk_1000D50A0);
      uint64_t v28 = String.init<A>(describing:)();
      uint64_t v41 = sub_10005D8C8(v28, v29, v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v4 = v40;
      swift_bridgeObjectRelease();
      sub_100017D0C(a1, 1);
      sub_100017D0C(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "HeadphoneInteractor: Failed to fetch marketing item: %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100017D0C(a1, 1);
      sub_100017D0C(a1, 1);
    }

    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      uint64_t v31 = Strong + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      uint64_t v32 = v31 + *(int *)(v4 + 168);
      uint64_t v33 = *(void **)v32;
      *(void *)uint64_t v32 = a1;
      unsigned __int8 v34 = *(unsigned char *)(v32 + 8);
      *(unsigned char *)(v32 + 8) = 1;
      swift_errorRetain();
      sub_10005FDBC(v33, v34);
      uint64_t v35 = swift_unknownObjectWeakLoadStrong();
      if (v35)
      {
        uint64_t v36 = v35;
        sub_10000C850(v31, (uint64_t)v6);
        uint64_t v37 = v36 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
        swift_beginAccess();
        sub_10005F7C4((uint64_t)v6, v37);
        swift_endAccess();
        sub_100090CE4();
        sub_100089E74();
        sub_100091178();
        swift_unknownObjectRelease();
        sub_10000C918((uint64_t)v6);
      }
      uint64_t v22 = a1;
      char v23 = 1;
      goto LABEL_19;
    }
    uint64_t v38 = a1;
    char v39 = 1;
  }
  else
  {
    uint64_t v7 = qword_1000D43E8;
    id v8 = a1;
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100008278(v9, (uint64_t)qword_1000D5B88);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "HeadphoneInteractor: Successfully retrieved MI", v12, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    uint64_t v13 = swift_weakLoadStrong();
    if (v13)
    {
      uint64_t v14 = v13 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      uint64_t v15 = v14 + *(int *)(v4 + 168);
      unint64_t v16 = *(void **)v15;
      *(void *)uint64_t v15 = a1;
      unsigned __int8 v17 = *(unsigned char *)(v15 + 8);
      *(unsigned char *)(v15 + 8) = 0;
      id v18 = v8;
      sub_10005FDBC(v16, v17);
      uint64_t v19 = swift_unknownObjectWeakLoadStrong();
      if (v19)
      {
        uint64_t v20 = v19;
        sub_10000C850(v14, (uint64_t)v6);
        uint64_t v21 = v20 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
        swift_beginAccess();
        sub_10005F7C4((uint64_t)v6, v21);
        swift_endAccess();
        sub_100090CE4();
        sub_100089E74();
        sub_100091178();
        swift_unknownObjectRelease();
        sub_10000C918((uint64_t)v6);
      }
      uint64_t v22 = a1;
      char v23 = 0;
LABEL_19:
      sub_100017D0C(v22, v23);
      swift_release();
      return;
    }
    uint64_t v38 = a1;
    char v39 = 0;
  }
  sub_100017D0C(v38, v39);
}

void sub_100056A68(uint64_t a1)
{
}

void sub_100056A7C(uint64_t a1, const char *a2, const char *a3)
{
  if (a1)
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100008278(v4, (uint64_t)qword_1000D5B88);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_errorRetain();
      sub_100008E18(&qword_1000D5080);
      uint64_t v7 = String.init<A>(reflecting:)();
      sub_10005D8C8(v7, v8, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, a3, v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100008278(v10, (uint64_t)qword_1000D5B88);
    oslog = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, a2, v12, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100056D30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v2);
  uint64_t v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(v5 + *(int *)(v2 + 164)) & 1) == 0)
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100008278(v7, (uint64_t)qword_1000D5B88);
    unint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "CB Device genuine check timed out after 5 seconds", v10, 2u);
      swift_slowDealloc();
    }

    if (*(void *)(v5 + 136))
    {
      String.uppercased()();
      id v11 = objc_allocWithZone((Class)NSUserDefaults);
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [v11 initWithSuiteName:v12];

      if (v13)
      {
        NSString v14 = String._bridgeToObjectiveC()();
        id v15 = [v13 dictionaryForKey:v14];

        if (v15)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10008905C((uint64_t)&off_1000C21B8);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          NSString v20 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v13 setObject:isa forKey:v20];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      unint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v16, v17))
      {
        id v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "No bluetooth address found", v18, 2u);
        swift_slowDealloc();
      }
    }
    *(unsigned char *)(v5 + *(int *)(v2 + 164)) = 1;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v22 = Strong;
      sub_10000C850(v5, (uint64_t)v4);
      uint64_t v23 = v22 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      sub_10005F7C4((uint64_t)v4, v23);
      swift_endAccess();
      sub_100090CE4();
      sub_100089E74();
      sub_100091178();
      swift_unknownObjectRelease();
      sub_10000C918((uint64_t)v4);
    }
    return sub_100055CC0();
  }
  return result;
}

uint64_t sub_1000570D0(uint64_t a1, uint64_t a2)
{
  p_ivar_base_size = &HeadphonePresenter.ivar_base_size;
  if (a1)
  {
    swift_errorRetain();
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100008278(v4, (uint64_t)qword_1000D5B88);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      swift_errorRetain();
      sub_100008E18((uint64_t *)&unk_1000D50A0);
      uint64_t v8 = String.init<A>(describing:)();
      sub_10005D8C8(v8, v9, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to disconnect device: %s", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      p_ivar_base_size = (_DWORD *)(&HeadphonePresenter + 8);
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  if (*((void *)p_ivar_base_size + 125) != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100008278(v10, (uint64_t)qword_1000D5B88);
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Dismissing after disconnect", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession + 8);
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v16 = *(void (**)(uint64_t, uint64_t))(v14 + 168);
  swift_unknownObjectRetain();
  v16(ObjectType, v14);
  swift_unknownObjectRelease();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003B97C();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000573D8(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100008278(v2, (uint64_t)qword_1000D5B88);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315138;
      swift_errorRetain();
      sub_100008E18((uint64_t *)&unk_1000D50A0);
      uint64_t v5 = String.init<A>(reflecting:)();
      sub_10005D8C8(v5, v6, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Failed to unpair device: %s)", v4, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100008278(v8, (uint64_t)qword_1000D5B88);
    unint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Successfully unpaired device. Cleaning up pairing session", v11, 2u);
      swift_slowDealloc();
    }

    uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 168);
    swift_unknownObjectRetain();
    v14(ObjectType, v12);
    swift_unknownObjectRelease();
  }
}

void sub_100057710(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 bleDevice];
  if (!v7
    || (v8 = v7, id v9 = [v7 advertisementFields], v8, !v9))
  {
    long long v75 = 0u;
    long long v76 = 0u;
LABEL_7:
    sub_10001A2AC((uint64_t)&v75, &qword_1000D51D8);
LABEL_8:
    int v13 = 0;
    goto LABEL_9;
  }
  uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v75 = 25452;
  *((void *)&v75 + 1) = 0xE200000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_10001D518((uint64_t)v73), (v12 & 1) != 0))
  {
    sub_10003101C(*(void *)(v10 + 56) + 32 * v11, (uint64_t)&v75);
  }
  else
  {
    long long v75 = 0u;
    long long v76 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10001F800((uint64_t)v73);
  if (!*((void *)&v76 + 1)) {
    goto LABEL_7;
  }
  if (!swift_dynamicCast()) {
    goto LABEL_8;
  }
  int v13 = v73[0];
LABEL_9:
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_allowRepairAutoConnect) != 1) {
    return;
  }
  if (([a1 needsSetup] ^ 1 | v13)) {
    return;
  }
  uint64_t v14 = v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  if ((*(void *)(v14 + *(int *)(v4 + 144)) & 0x8000000000000000) == 0) {
    return;
  }
  id v15 = [a1 bleDevice];
  if (v15)
  {
    uint64_t v16 = v15;
    id v17 = [v15 rssiFloor];
  }
  else
  {
    id v17 = 0;
  }
  if ((sub_10005FE78((unint64_t)v17, *(void *)(v14 + *(int *)(v4 + 144))) & 0x80000000) != 0) {
    return;
  }
  id v18 = [a1 bleDevice];
  if (v18)
  {
    uint64_t v19 = v18;
    id v20 = [v18 bluetoothAddress];

    if (v20)
    {
      uint64_t v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v23 = v22;

      switch(v23 >> 62)
      {
        case 1uLL:
          sub_10001FB5C(v21, v23);
          LODWORD(v24) = HIDWORD(v21) - v21;
          if (__OFSUB__(HIDWORD(v21), v21))
          {
            __break(1u);
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
          uint64_t v24 = (int)v24;
LABEL_28:
          if (v24 == 6)
          {
            id v27 = [a1 bleDevice];
            if (v27)
            {
              uint64_t v28 = v27;
              id v29 = [v27 bluetoothAddress];

              if (v29)
              {
                uint64_t v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v32 = v31;

                uint64_t v33 = sub_1000521C8(v30, v32);
                uint64_t v35 = v34;
                sub_10001FB5C(v30, v32);
                if (qword_1000D43E8 != -1) {
                  swift_once();
                }
                uint64_t v36 = type metadata accessor for Logger();
                sub_100008278(v36, (uint64_t)qword_1000D5B88);
                uint64_t v37 = a1;
                uint64_t v38 = Logger.logObject.getter();
                os_log_type_t v39 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v38, v39))
                {
                  uint64_t v72 = v33;
                  uint64_t v40 = (uint8_t *)swift_slowAlloc();
                  unint64_t v69 = (void *)swift_slowAlloc();
                  id v70 = v40;
                  uint64_t v71 = v35;
                  *(_DWORD *)uint64_t v40 = 138412290;
                  *(void *)&long long v75 = v37;
                  uint64_t v41 = v37;
                  uint64_t v35 = v71;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *unint64_t v69 = v37;

                  uint64_t v33 = v72;
                  _os_log_impl((void *)&_mh_execute_header, v38, v39, "Triggering auto-pair for repair: %@", v70, 0xCu);
                  sub_100008E18(&qword_1000D5E58);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {

                  uint64_t v38 = v37;
                }

                *(void *)(v14 + 128) = v33;
                *(void *)(v14 + 136) = v35;
                swift_bridgeObjectRelease();
                uint64_t Strong = swift_unknownObjectWeakLoadStrong();
                if (Strong)
                {
                  uint64_t v64 = Strong;
                  sub_10000C850(v14, (uint64_t)v6);
                  uint64_t v65 = v64 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
                  swift_beginAccess();
                  sub_10005F7C4((uint64_t)v6, v65);
                  swift_endAccess();
                  sub_100090CE4();
                  sub_100089E74();
                  sub_100091178();
                  swift_unknownObjectRelease();
                  sub_10000C918((uint64_t)v6);
                }
                *(unsigned char *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_hasAutoConnected) = 1;
                uint64_t v66 = swift_unknownObjectWeakLoadStrong();
                if (v66)
                {
                  if (!*(unsigned char *)(v66 + 80))
                  {
                    sub_10008B2E4();
                    if (swift_unknownObjectWeakLoadStrong())
                    {
                      sub_10003C74C();
                      swift_unknownObjectRelease();
                    }
                  }
                  swift_unknownObjectRelease();
                }
                return;
              }
            }
            if (qword_1000D43E8 == -1)
            {
LABEL_47:
              uint64_t v56 = type metadata accessor for Logger();
              sub_100008278(v56, (uint64_t)qword_1000D5B88);
              id v43 = a1;
              uint64_t v44 = Logger.logObject.getter();
              os_log_type_t v57 = static os_log_type_t.error.getter();
              if (!os_log_type_enabled(v44, v57)) {
                goto LABEL_51;
              }
              uint64_t v46 = (uint8_t *)swift_slowAlloc();
              uint64_t v74 = swift_slowAlloc();
              *(_DWORD *)uint64_t v46 = 136315138;
              id v58 = [v43 bleDevice];
              uint64_t v59 = v58;
              if (v58)
              {
                id v60 = [v58 bluetoothAddress];

                if (v60)
                {
                  uint64_t v59 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v62 = v61;

LABEL_63:
                  *(void *)&long long v75 = v59;
                  *((void *)&v75 + 1) = v62;
                  sub_100008E18(&qword_1000D5E50);
                  uint64_t v67 = String.init<A>(reflecting:)();
                  *(void *)&long long v75 = sub_10005D8C8(v67, v68, &v74);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  os_log_type_t v54 = v57;
                  uint64_t v55 = "Could not convert device address to string: %s";
                  goto LABEL_45;
                }
                uint64_t v59 = 0;
              }
              unint64_t v62 = 0xF000000000000000;
              goto LABEL_63;
            }
LABEL_66:
            swift_once();
            goto LABEL_47;
          }
          break;
        case 2uLL:
          uint64_t v26 = *(void *)(v21 + 16);
          uint64_t v25 = *(void *)(v21 + 24);
          sub_10001FB5C(v21, v23);
          uint64_t v24 = v25 - v26;
          if (!__OFSUB__(v25, v26)) {
            goto LABEL_28;
          }
          goto LABEL_65;
        case 3uLL:
          sub_10001FB5C(v21, v23);
          break;
        default:
          sub_10001FB5C(v21, v23);
          uint64_t v24 = BYTE6(v23);
          goto LABEL_28;
      }
    }
  }
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v42 = type metadata accessor for Logger();
  sub_100008278(v42, (uint64_t)qword_1000D5B88);
  id v43 = a1;
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v44, v45))
  {
LABEL_51:

    return;
  }
  uint64_t v46 = (uint8_t *)swift_slowAlloc();
  uint64_t v74 = swift_slowAlloc();
  *(_DWORD *)uint64_t v46 = 136315138;
  id v47 = [v43 bleDevice];
  uint64_t v48 = v47;
  if (v47)
  {
    id v49 = [v47 bluetoothAddress];

    if (v49)
    {
      uint64_t v48 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v51 = v50;

      goto LABEL_44;
    }
    uint64_t v48 = 0;
  }
  unint64_t v51 = 0xF000000000000000;
LABEL_44:
  *(void *)&long long v75 = v48;
  *((void *)&v75 + 1) = v51;
  sub_100008E18(&qword_1000D5E50);
  uint64_t v52 = String.init<A>(reflecting:)();
  *(void *)&long long v75 = sub_10005D8C8(v52, v53, &v74);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  os_log_type_t v54 = v45;
  uint64_t v55 = "Invalid bluetooth address length: %s";
LABEL_45:
  _os_log_impl((void *)&_mh_execute_header, v44, v54, v55, v46, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();
}

uint64_t sub_100058058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 168) = v15;
  *(void *)(v8 + 176) = v16;
  *(void *)(v8 + 152) = a7;
  *(void *)(v8 + 160) = a8;
  *(unsigned char *)(v8 + 372) = a6;
  *(_DWORD *)(v8 + 368) = a5;
  *(void *)(v8 + 144) = a4;
  uint64_t v9 = type metadata accessor for HeadphonePairing2.AssetRequest();
  *(void *)(v8 + 184) = v9;
  *(void *)(v8 + 192) = *(void *)(v9 - 8);
  *(void *)(v8 + 200) = swift_task_alloc();
  sub_100008E18(&qword_1000D5E88);
  *(void *)(v8 + 208) = swift_task_alloc();
  sub_100008E18(&qword_1000D5DE0);
  *(void *)(v8 + 216) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
  *(void *)(v8 + 224) = v10;
  *(void *)(v8 + 232) = *(void *)(v10 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for HeadphonePairing2.Configuration();
  *(void *)(v8 + 248) = v11;
  *(void *)(v8 + 256) = *(void *)(v11 - 8);
  *(void *)(v8 + 264) = swift_task_alloc();
  *(void *)(v8 + 272) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for HeadphoneHardwareModel();
  *(void *)(v8 + 280) = v12;
  *(void *)(v8 + 288) = *(void *)(v12 - 8);
  *(void *)(v8 + 296) = swift_task_alloc();
  *(void *)(v8 + 304) = swift_task_alloc();
  *(void *)(v8 + 312) = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000582D0, 0, 0);
}

uint64_t sub_1000582D0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 320) = Strong;
  if (Strong)
  {
    uint64_t v2 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    *(void *)(v0 + 328) = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    uint64_t v3 = Strong + v2;
    swift_beginAccess();
    id v4 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:*(unsigned int *)(v3 + *(int *)(type metadata accessor for HeadphoneModel() + 124))];
    if (v4)
    {
      uint64_t v5 = v4;
      unsigned int v6 = [v4 supportsDigitalEngraving];

      if (v6)
      {
        id v7 = (void *)swift_task_alloc();
        *(void *)(v0 + 336) = v7;
        *id v7 = v0;
        v7[1] = sub_1000588DC;
        return sub_100059948();
      }
    }
    int v9 = *(_DWORD *)(v0 + 368);
    uint64_t v10 = self;
    id v11 = [v10 airPods];
    unsigned int v12 = [v11 productID];

    int v13 = *(unsigned __int8 *)(v0 + 372);
    if ((v12 == v9
       || (int v14 = *(_DWORD *)(v0 + 368),
           id v15 = [v10 airPodsSecondGeneration],
           unsigned int v16 = [v15 productID],
           v15,
           v16 == v14))
      && v13 == 1)
    {
      uint64_t v17 = *(void *)(v0 + 312);
      uint64_t v18 = *(void *)(v0 + 280);
      uint64_t v19 = *(void *)(v0 + 288);
      id v20 = (unsigned int *)&enum case for HeadphoneHardwareModel.airPodsSecondGeneration(_:);
    }
    else
    {
      int v21 = *(_DWORD *)(v0 + 368);
      id v22 = [v10 b698];
      unsigned int v23 = [v22 productID];

      if (v23 != v21)
      {
        int v24 = *(_DWORD *)(v0 + 368);
        id v25 = [v10 b698];
        unsigned int v26 = [v25 altProductID];

        if (v26 != v24)
        {
          HeadphoneHardwareModel.init(productID:)();
          (*(void (**)(void, void, void))(*(void *)(v0 + 288) + 32))(*(void *)(v0 + 312), *(void *)(v0 + 304), *(void *)(v0 + 280));
          goto LABEL_15;
        }
      }
      uint64_t v17 = *(void *)(v0 + 312);
      uint64_t v18 = *(void *)(v0 + 280);
      uint64_t v19 = *(void *)(v0 + 288);
      id v20 = (unsigned int *)&enum case for HeadphoneHardwareModel.b698(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v17, *v20, v18);
LABEL_15:
    (*(void (**)(void, void, void))(*(void *)(v0 + 288) + 16))(*(void *)(v0 + 296), *(void *)(v0 + 312), *(void *)(v0 + 280));
    DefaultAssetRequestTimeout.getter();
    HeadphonePairing2.Configuration.init(hardwareModel:color:timeout:)();
    (*(void (**)(void, void, void))(*(void *)(v0 + 256) + 16))(*(void *)(v0 + 264), *(void *)(v0 + 272), *(void *)(v0 + 248));
    HeadphonePairing2.AssetRequest.init(configuration:)();
    id v27 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v27;
    void *v27 = v0;
    v27[1] = sub_1000593BC;
    return HeadphonePairing2.AssetRequest.assets()();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1000588DC()
{
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_1000589D8, 0, 0);
}

uint64_t sub_1000589D8()
{
  int v1 = *(_DWORD *)(v0 + 368);
  uint64_t v2 = self;
  id v3 = [v2 airPods];
  unsigned int v4 = [v3 productID];

  int v5 = *(unsigned __int8 *)(v0 + 372);
  if (v4 == v1)
  {
    if (v5 == 1)
    {
LABEL_3:
      uint64_t v6 = *(void *)(v0 + 312);
      uint64_t v7 = *(void *)(v0 + 280);
      uint64_t v8 = *(void *)(v0 + 288);
      int v9 = (unsigned int *)&enum case for HeadphoneHardwareModel.airPodsSecondGeneration(_:);
LABEL_11:
      (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v6, *v9, v7);
      goto LABEL_12;
    }
  }
  else
  {
    int v10 = *(_DWORD *)(v0 + 368);
    id v11 = [v2 airPodsSecondGeneration];
    unsigned int v12 = [v11 productID];

    if (v12 == v10 && v5 == 1) {
      goto LABEL_3;
    }
  }
  int v14 = *(_DWORD *)(v0 + 368);
  id v15 = [v2 b698];
  unsigned int v16 = [v15 productID];

  if (v16 == v14
    || (int v17 = *(_DWORD *)(v0 + 368),
        id v18 = [v2 b698],
        unsigned int v19 = [v18 altProductID],
        v18,
        v19 == v17))
  {
    uint64_t v6 = *(void *)(v0 + 312);
    uint64_t v7 = *(void *)(v0 + 280);
    uint64_t v8 = *(void *)(v0 + 288);
    int v9 = (unsigned int *)&enum case for HeadphoneHardwareModel.b698(_:);
    goto LABEL_11;
  }
  HeadphoneHardwareModel.init(productID:)();
  (*(void (**)(void, void, void))(*(void *)(v0 + 288) + 32))(*(void *)(v0 + 312), *(void *)(v0 + 304), *(void *)(v0 + 280));
LABEL_12:
  (*(void (**)(void, void, void))(*(void *)(v0 + 288) + 16))(*(void *)(v0 + 296), *(void *)(v0 + 312), *(void *)(v0 + 280));
  DefaultAssetRequestTimeout.getter();
  HeadphonePairing2.Configuration.init(hardwareModel:color:timeout:)();
  if (qword_1000D43F0 != -1) {
    swift_once();
  }
  unint64_t v20 = *(void *)(v0 + 168);
  uint64_t v22 = qword_1000D5BA0;
  unint64_t v21 = *(void *)algn_1000D5BA8;
  sub_10003548C(qword_1000D5BA0, *(unint64_t *)algn_1000D5BA8);
  uint64_t v24 = *(void *)(v0 + 160);
  unint64_t v23 = *(void *)(v0 + 168);
  unint64_t v25 = v20 >> 60;
  if (v20 >> 60 == 15)
  {
    sub_10003AD58(*(void *)(v0 + 160), *(void *)(v0 + 168));
    sub_10003AD58(v22, v21);
  }
  else
  {
    sub_10005FD08(*(void *)(v0 + 160), *(void *)(v0 + 168));
    char v26 = sub_10005EF3C(v24, v23, v22, v21);
    sub_10001FB5C(v22, v21);
    sub_10003AD58(v24, v23);
    if ((v26 & 1) != 0 && IsAppleInternalBuild())
    {
      if (qword_1000D43E8 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_100008278(v27, (uint64_t)qword_1000D5B88);
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Found LiveOn engraving data, switching to sandbox environment", v30, 2u);
        swift_slowDealloc();
      }

      id v31 = objc_allocWithZone((Class)NSUserDefaults);
      NSString v32 = String._bridgeToObjectiveC()();
      id v33 = [v31 initWithSuiteName:v32];

      if (!v33) {
        id v33 = [self standardUserDefaults];
      }
      NSString v34 = String._bridgeToObjectiveC()();
      NSString v35 = String._bridgeToObjectiveC()();
      [v33 setValue:v34 forKey:v35];
    }
  }
  uint64_t v36 = *(void *)(v0 + 224);
  uint64_t v37 = *(void *)(v0 + 232);
  uint64_t v38 = *(void *)(v0 + 216);
  sub_10001A248(*(void *)(v0 + 176), v38, &qword_1000D5DE0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36) == 1)
  {
    sub_10001A2AC(*(void *)(v0 + 216), &qword_1000D5DE0);
    if (v25 > 0xE && *(void *)(*(void *)(v0 + 320) + *(void *)(v0 + 328) + 136))
    {
      uint64_t v39 = *(void *)(v0 + 208);
      *(Swift::String *)(v0 + 80) = String.lowercased()();
      *(void *)(v0 + 96) = 58;
      *(void *)(v0 + 104) = 0xE100000000000000;
      *(void *)(v0 + 112) = 45;
      *(void *)(v0 + 120) = 0xE100000000000000;
      sub_10005F948();
      sub_10005F99C();
      swift_bridgeObjectRetain();
      RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      PersonalizationAssetManager.PostPairingAssetInfo.init(stableBluetoothIdentifier:)();
      uint64_t v40 = enum case for PersonalizationAssetManager.AssetInfo.postPairing(_:);
      uint64_t v41 = type metadata accessor for PersonalizationAssetManager.AssetInfo();
      uint64_t v42 = *(void *)(v41 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 104))(v39, v40, v41);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      HeadphonePairing2.Configuration.personalizationAssetInfo.setter();
    }
  }
  else
  {
    uint64_t v44 = *(void *)(v0 + 232);
    uint64_t v43 = *(void *)(v0 + 240);
    uint64_t v45 = *(void *)(v0 + 224);
    uint64_t v46 = *(void *)(v0 + 208);
    (*(void (**)(uint64_t, void, uint64_t))(v44 + 32))(v43, *(void *)(v0 + 216), v45);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v46, v43, v45);
    uint64_t v47 = enum case for PersonalizationAssetManager.AssetInfo.prePairing(_:);
    uint64_t v48 = type metadata accessor for PersonalizationAssetManager.AssetInfo();
    uint64_t v49 = *(void *)(v48 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 104))(v46, v47, v48);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    HeadphonePairing2.Configuration.personalizationAssetInfo.setter();
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v45);
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 256) + 16))(*(void *)(v0 + 264), *(void *)(v0 + 272), *(void *)(v0 + 248));
  HeadphonePairing2.AssetRequest.init(configuration:)();
  unint64_t v50 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v50;
  *unint64_t v50 = v0;
  v50[1] = sub_1000593BC;
  return HeadphonePairing2.AssetRequest.assets()();
}

uint64_t sub_1000593BC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 352) = v1;
  swift_task_dealloc();
  if (v1)
  {
    int v5 = sub_100059634;
  }
  else
  {
    *(void *)(v4 + 360) = a1;
    int v5 = sub_1000594E4;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v5, 0, 0);
}

uint64_t sub_1000594E4()
{
  uint64_t v1 = v0[36];
  uint64_t v10 = v0[35];
  uint64_t v11 = v0[39];
  uint64_t v2 = v0[34];
  uint64_t v4 = v0[31];
  uint64_t v3 = v0[32];
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[25];
  uint64_t v7 = v0[23];
  sub_10005A6B8(v0[45]);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v11, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100059634()
{
  unint64_t v20 = v0;
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[36];
  uint64_t v4 = v0[34];
  uint64_t v5 = v0[31];
  uint64_t v6 = v0[32];
  (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = v0[44];
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100008278(v8, (uint64_t)qword_1000D5B88);
  swift_errorRetain();
  swift_errorRetain();
  int v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v19 = v12;
    v0[17] = v7;
    swift_errorRetain();
    sub_100008E18((uint64_t *)&unk_1000D50A0);
    uint64_t v13 = String.init<A>(reflecting:)();
    v0[16] = sub_10005D8C8(v13, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Could not fetch assets: %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  id v15 = *(void (**)(uint64_t))(v0[40]
                                       + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  if (v15)
  {
    uint64_t v16 = swift_retain();
    v15(v16);
    swift_errorRelease();
    sub_10005FEA0((uint64_t)v15);
  }
  else
  {
    swift_errorRelease();
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100059948()
{
  v1[34] = v0;
  sub_100008E18(&qword_1000D5E18);
  v1[35] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for ProductError();
  v1[36] = v2;
  v1[37] = *(void *)(v2 - 8);
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for PersonalizationAssetManager.PostPairingAssetInfo();
  v1[40] = v3;
  v1[41] = *(void *)(v3 - 8);
  v1[42] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
  v1[43] = v4;
  v1[44] = *(void *)(v4 - 8);
  v1[45] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_100059B00, 0, 0);
}

uint64_t sub_100059B00()
{
  uint64_t v1 = *(void *)(v0 + 272);
  id v2 = [objc_allocWithZone((Class)type metadata accessor for HeadphoneDigitalEngravingManager()) init];
  *(void *)(v0 + 368) = v2;
  uint64_t v3 = v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 136);
  if (!v4)
  {

LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  uint64_t v5 = *(void *)(v3 + 128);
  swift_bridgeObjectRetain();
  sub_100073334(v5, v4, v0 + 112);
  sub_10004BF88(v0 + 112, v0 + 64, &qword_1000D5E98);
  uint64_t v6 = *(void *)(v0 + 72);
  *(void *)(v0 + 376) = v6;
  if (!v6)
  {

    goto LABEL_9;
  }
  int v7 = *(unsigned __int8 *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  unint64_t v9 = *(void *)(v0 + 96);
  *(void *)(v0 + 384) = *(void *)(v0 + 64);
  *(void *)(v0 + 392) = v8;
  uint64_t v10 = *(void *)(v0 + 104);
  *(void *)(v0 + 400) = v9;
  *(void *)(v0 + 408) = v10;
  if (v7 != 1 || v10 > 2 || v9 >> 60 == 15)
  {

    sub_100060750((void *)(v0 + 112), (void (*)(void, void, void, void, void, void))sub_100060704);
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10005FD08(v8, v9);
  sub_10005FD08(v8, v9);
  sub_100060750((void *)(v0 + 112), (void (*)(void, void, void, void, void, void))sub_100060790);
  uint64_t v13 = qword_1000D43E8;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  *(void *)(v0 + 416) = sub_100008278(v14, (uint64_t)qword_1000D5B88);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    int v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Fetching pending engraved asset", v17, 2u);
    swift_slowDealloc();
  }

  sub_10003548C(v8, v9);
  PersonalizationAssetManager.PrePairingAssetInfo.init(scannedBluetoothData:)();
  *(Swift::String *)(v0 + 200) = String.lowercased()();
  *(void *)(v0 + 216) = 58;
  *(void *)(v0 + 224) = 0xE100000000000000;
  *(void *)(v0 + 232) = 45;
  *(void *)(v0 + 240) = 0xE100000000000000;
  sub_10005F948();
  sub_10005F99C();
  RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  PersonalizationAssetManager.PostPairingAssetInfo.init(stableBluetoothIdentifier:)();
  *(void *)(v0 + 424) = sub_10004DC94();
  id v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v18;
  *id v18 = v0;
  v18[1] = sub_100059F00;
  uint64_t v19 = *(void *)(v0 + 360);
  uint64_t v20 = *(void *)(v0 + 336);
  return PersonalizationAssetManager.storeAsset(from:to:)(v19, v20);
}

uint64_t sub_100059F00()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    id v2 = sub_10005A244;
  }
  else {
    id v2 = sub_10005A030;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v2, 0, 0);
}

uint64_t sub_10005A030()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Fetched pending engraved asset", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v7 = *(void *)(v0 + 336);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 320);
  uint64_t v9 = *(void *)(v0 + 328);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  uint64_t v10 = *(void *)(v0 + 392);
  uint64_t v11 = *(void **)(v0 + 368);
  uint64_t v12 = *(void *)(v0 + 376);
  *(void *)(v0 + 16) = *(void *)(v0 + 384);
  *(void *)(v0 + 24) = v12;
  *(unsigned char *)(v0 + 32) = 2;
  *(void *)(v0 + 40) = v10;
  long long v15 = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 48) = v15;
  swift_bridgeObjectRetain();
  sub_10005FD08(v10, v15);
  sub_10003AD58(v10, v15);
  swift_bridgeObjectRelease();
  sub_100072C88(v0 + 16);

  swift_bridgeObjectRelease();
  sub_10003AD58(v10, v15);
  sub_10003AD58(v10, v15);
  sub_100060750((void *)(v0 + 112), (void (*)(void, void, void, void, void, void))sub_100060704);
  swift_bridgeObjectRelease();
  sub_10003AD58(v10, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10005A244()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 344);
  (*(void (**)(void, void))(*(void *)(v0 + 328) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 320));
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void *)(v0 + 440);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    *(void *)(v0 + 256) = v6;
    swift_errorRetain();
    sub_100008E18((uint64_t *)&unk_1000D50A0);
    uint64_t v8 = String.init<A>(reflecting:)();
    *(void *)(v0 + 264) = sub_10005D8C8(v8, v9, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to fetch pending engraving: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v10 = *(void *)(v0 + 296);
  *(void *)(v0 + 248) = *(void *)(v0 + 440);
  swift_errorRetain();
  sub_100008E18((uint64_t *)&unk_1000D50A0);
  int v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v11)
  {
    uint64_t v14 = *(void *)(v0 + 304);
    uint64_t v13 = *(void *)(v0 + 312);
    uint64_t v15 = *(void *)(v0 + 288);
    uint64_t v16 = *(void *)(v0 + 296);
    uint64_t v17 = *(void *)(v0 + 280);
    v12(v17, 0, 1, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v13, v17, v15);
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v14, enum case for ProductError.assetNotFound(_:), v15);
    sub_10005FE30(&qword_1000D5E20, (void (*)(uint64_t))&type metadata accessor for ProductError);
    LOBYTE(v17) = dispatch thunk of static Equatable.== infix(_:_:)();
    swift_errorRelease();
    id v18 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v18(v14, v15);
    v18(v13, v15);
    if (v17)
    {
      uint64_t v19 = *(void *)(v0 + 408);
      char v20 = 2;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 280);
    v12(v21, 1, 1, *(void *)(v0 + 288));
    swift_errorRelease();
    sub_10001A2AC(v21, &qword_1000D5E18);
  }
  uint64_t v19 = *(void *)(v0 + 408) + 1;
  char v20 = 1;
LABEL_9:
  uint64_t v23 = *(void *)(v0 + 392);
  unint64_t v22 = *(void *)(v0 + 400);
  uint64_t v24 = *(void *)(v0 + 376);
  *(void *)(v0 + 16) = *(void *)(v0 + 384);
  unint64_t v25 = *(void **)(v0 + 368);
  *(void *)(v0 + 24) = v24;
  *(unsigned char *)(v0 + 32) = v20;
  *(void *)(v0 + 40) = v23;
  *(void *)(v0 + 48) = v22;
  *(void *)(v0 + 56) = v19;
  swift_bridgeObjectRetain();
  sub_10005FD08(v23, v22);
  sub_10003AD58(v23, v22);
  swift_bridgeObjectRelease();
  sub_100072C88(v0 + 16);

  swift_bridgeObjectRelease();
  sub_10003AD58(v23, v22);
  sub_10003AD58(v23, v22);
  sub_100060750((void *)(v0 + 112), (void (*)(void, void, void, void, void, void))sub_100060704);
  swift_bridgeObjectRelease();
  sub_10003AD58(v23, v22);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v26 = *(uint64_t (**)(void))(v0 + 8);
  return v26();
}

void sub_10005A6B8(uint64_t a1)
{
  uint64_t v3 = sub_100008E18(&qword_1000D5DD8);
  __chkstk_darwin(v3 - 8);
  NSString v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  int v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  *(void *)(v13 + 24) = a1;
  aBlock[4] = sub_10006083C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046658;
  aBlock[3] = &unk_1000C4B08;
  uint64_t v14 = _Block_copy(aBlock);
  uint64_t v33 = v1;
  swift_retain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10005FE30((unint64_t *)&qword_1000D4C20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100008E18(&qword_1000D4C28);
  sub_100017E30((unint64_t *)&qword_1000D4C30, &qword_1000D4C28);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v34);
  id v15 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 initWithSuiteName:v16];

  if (!v17) {
    id v17 = [self standardUserDefaults];
  }
  NSString v18 = String._bridgeToObjectiveC()();
  unsigned int v19 = [v17 BOOLForKey:v18];

  if (v19)
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100008278(v20, (uint64_t)qword_1000D5B88);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Manatee CloudKit migration SKIPPED, migration already ran", v23, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100008278(v24, (uint64_t)qword_1000D5B88);
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Manatee CloudKit migration START", v27, 2u);
      swift_slowDealloc();
    }

    uint64_t v28 = type metadata accessor for TaskPriority();
    uint64_t v29 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v32, 1, 1, v28);
    uint64_t v30 = (void *)swift_allocObject();
    v30[2] = 0;
    void v30[3] = 0;
    v30[4] = v33;
    swift_retain();
    sub_10005B5E0(v29, (uint64_t)&unk_1000D5EA8, (uint64_t)v30);
    swift_release();
  }
}

uint64_t sub_10005ACA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100008E18(&qword_1000D5DD8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001A248(a1, (uint64_t)v8, &qword_1000D5DD8);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10001A2AC((uint64_t)v8, &qword_1000D5DD8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_10005AE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadphoneModel();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  *(void *)(v8 + *(int *)(v5 + 144)) = a2;
  swift_retain();
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    sub_10000C850(v8, (uint64_t)v7);
    uint64_t v11 = v10 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess();
    sub_10005F7C4((uint64_t)v7, v11);
    swift_endAccess();
    sub_100090CE4();
    sub_100089E74();
    sub_100091178();
    swift_unknownObjectRelease();
    uint64_t result = sub_10000C918((uint64_t)v7);
  }
  uint64_t v12 = *(void (**)(uint64_t))(a1
                                       + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  if (v12)
  {
    uint64_t v13 = swift_retain();
    v12(v13);
    return sub_10005FEA0((uint64_t)v12);
  }
  return result;
}

uint64_t sub_10005AFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 32) = a4;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10005B01C, 0, 0);
}

uint64_t sub_10005B01C()
{
  *(void *)(v0 + 40) = sub_10004DC94();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_10005B0BC;
  return PersonalizationAssetManager.migrateToManateeContainer()();
}

uint64_t sub_10005B0BC()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10005B3B0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10005B1D8;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v2, 0, 0);
}

uint64_t sub_10005B1D8()
{
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100008278(v1, (uint64_t)qword_1000D5B88);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Manatee CloudKit migration END", v4, 2u);
    swift_slowDealloc();
  }

  id v5 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 initWithSuiteName:v6];

  if (!v7) {
    id v7 = [self standardUserDefaults];
  }
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v9 = String._bridgeToObjectiveC()();
  [v7 setValue:isa forKey:v9];

  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_10005B3B0()
{
  uint64_t v12 = v0;
  swift_release();
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100008278(v1, (uint64_t)qword_1000D5B88);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[7];
  if (v4)
  {
    NSString v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)NSString v6 = 136315138;
    v0[2] = v5;
    swift_errorRetain();
    sub_100008E18((uint64_t *)&unk_1000D50A0);
    uint64_t v7 = String.init<A>(reflecting:)();
    v0[3] = sub_10005D8C8(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Manatee CloudKit migration FAILED {error: %s}", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  NSString v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10005B5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10001A2AC(a1, &qword_1000D5DD8);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_10005B78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a8;
  v8[22] = v13;
  v8[19] = a6;
  v8[20] = a7;
  v8[17] = a4;
  v8[18] = a5;
  sub_100008E18(&qword_1000D5E18);
  v8[23] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ProductError();
  v8[24] = v9;
  v8[25] = *(void *)(v9 - 8);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for PersonalizationAssetManager.PostPairingAssetInfo();
  v8[28] = v10;
  v8[29] = *(void *)(v10 - 8);
  v8[30] = swift_task_alloc();
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10005B8F8, 0, 0);
}

uint64_t sub_10005B8F8()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 136);
  *(void *)(v0 + 248) = [objc_allocWithZone((Class)type metadata accessor for HeadphoneDigitalEngravingManager()) init];
  swift_bridgeObjectRetain();
  uint64_t v3 = PersonalizationAssetManager.PrePairingAssetInfo.scannedBluetoothData.getter();
  unint64_t v5 = v4;
  *(void *)(v0 + 256) = v3;
  *(void *)(v0 + 264) = v4;
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v1;
  *(unsigned char *)(v0 + 32) = 2;
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = v4;
  *(void *)(v0 + 56) = 0;
  swift_bridgeObjectRetain();
  sub_10003548C(v3, v5);
  swift_bridgeObjectRetain();
  sub_10005FD08(v3, v5);
  if (qword_1000D43E8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  *(void *)(v0 + 272) = sub_100008278(v6, (uint64_t)qword_1000D5B88);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Moving engraved asset", v9, 2u);
    swift_slowDealloc();
  }

  swift_bridgeObjectRetain();
  PersonalizationAssetManager.PostPairingAssetInfo.init(stableBluetoothIdentifier:)();
  *(void *)(v0 + 280) = sub_10004DC94();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_10005BB04;
  uint64_t v11 = *(void *)(v0 + 240);
  uint64_t v12 = *(void *)(v0 + 152);
  return PersonalizationAssetManager.storeAsset(from:to:)(v12, v11);
}

uint64_t sub_10005BB04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 256);
    unint64_t v3 = *(void *)(v2 + 264);
    swift_release();
    swift_bridgeObjectRelease();
    sub_10003AD58(v4, v3);
    unint64_t v5 = sub_10005BE34;
  }
  else
  {
    swift_release();
    unint64_t v5 = sub_10005BC58;
  }
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(v5, 0, 0);
}

uint64_t sub_10005BC58()
{
  unint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 256);
  sub_100072C88(v0 + 16);
  swift_bridgeObjectRelease();
  sub_10003AD58(v2, v1);
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Moved engraved asset", v5, 2u);
    swift_slowDealloc();
  }
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v8 = *(void *)(v0 + 224);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  uint64_t v10 = *(void *)(v0 + 256);
  unint64_t v9 = *(void *)(v0 + 264);
  uint64_t v11 = *(void **)(v0 + 248);
  uint64_t v12 = *(void *)(v0 + 144);
  *(void *)(v0 + 64) = *(void *)(v0 + 136);
  *(void *)(v0 + 72) = v12;
  *(unsigned char *)(v0 + 80) = 2;
  *(void *)(v0 + 88) = v10;
  *(void *)(v0 + 96) = v9;
  *(void *)(v0 + 104) = 0;
  swift_bridgeObjectRetain();
  sub_10005FD08(v10, v9);
  sub_10001FB5C(v10, v9);
  swift_bridgeObjectRelease();
  sub_100072C88(v0 + 64);

  swift_bridgeObjectRelease();
  sub_10003AD58(v10, v9);
  swift_bridgeObjectRelease();
  sub_10003AD58(v10, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10005BE34()
{
  uint64_t v27 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 240), *(void *)(v0 + 224));
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 296);
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 136315138;
    uint64_t v26 = v5;
    *(void *)(v0 + 120) = v3;
    swift_errorRetain();
    sub_100008E18((uint64_t *)&unk_1000D50A0);
    uint64_t v6 = String.init<A>(reflecting:)();
    *(void *)(v0 + 128) = sub_10005D8C8(v6, v7, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to store engraved asset: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v8 = *(void *)(v0 + 200);
  *(void *)(v0 + 112) = *(void *)(v0 + 296);
  swift_errorRetain();
  sub_100008E18((uint64_t *)&unk_1000D50A0);
  char v9 = swift_dynamicCast();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v9)
  {
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v11 = *(void *)(v0 + 216);
    uint64_t v13 = *(void *)(v0 + 192);
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v15 = *(void *)(v0 + 184);
    v10(v15, 0, 1, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v11, v15, v13);
    (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v12, enum case for ProductError.assetNotFound(_:), v13);
    sub_10005FE30(&qword_1000D5E20, (void (*)(uint64_t))&type metadata accessor for ProductError);
    LOBYTE(v15) = dispatch thunk of static Equatable.== infix(_:_:)();
    swift_errorRelease();
    NSString v16 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v16(v12, v13);
    v16(v11, v13);
    if (v15)
    {
      uint64_t v17 = 0;
      char v18 = 2;
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 184);
    v10(v19, 1, 1, *(void *)(v0 + 192));
    swift_errorRelease();
    sub_10001A2AC(v19, &qword_1000D5E18);
  }
  char v18 = 1;
  uint64_t v17 = 1;
LABEL_9:
  uint64_t v21 = *(void *)(v0 + 256);
  unint64_t v20 = *(void *)(v0 + 264);
  os_log_type_t v22 = *(void **)(v0 + 248);
  uint64_t v23 = *(void *)(v0 + 144);
  *(void *)(v0 + 64) = *(void *)(v0 + 136);
  *(void *)(v0 + 72) = v23;
  *(unsigned char *)(v0 + 80) = v18;
  *(void *)(v0 + 88) = v21;
  *(void *)(v0 + 96) = v20;
  *(void *)(v0 + 104) = v17;
  swift_bridgeObjectRetain();
  sub_10005FD08(v21, v20);
  sub_10001FB5C(v21, v20);
  swift_bridgeObjectRelease();
  sub_100072C88(v0 + 64);

  swift_bridgeObjectRelease();
  sub_10003AD58(v21, v20);
  swift_bridgeObjectRelease();
  sub_10003AD58(v21, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_10005C248()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v78 = result;
  if (result)
  {
    id v70 = v7;
    uint64_t v72 = v3;
    uint64_t v9 = swift_allocObject();
    uint64_t v69 = v9;
    *(void *)(v9 + 16) = _swiftEmptyArrayStorage;
    uint64_t v77 = (void **)(v9 + 16);
    uint64_t v10 = swift_allocObject();
    uint64_t v68 = v10;
    *(void *)(v10 + 16) = _swiftEmptyArrayStorage;
    uint64_t v11 = (void **)(v10 + 16);
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v71 = v5;
    uint64_t v12 = type metadata accessor for Logger();
    uint64_t v13 = sub_100008278(v12, (uint64_t)qword_1000D5B88);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      NSString v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Fetching notification sources", v16, 2u);
      swift_slowDealloc();
    }
    uint64_t v73 = v4;
    uint64_t v74 = v1;

    uint64_t v17 = *(void *)(v78 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter + 24);
    uint64_t v18 = *(void *)(v78 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter + 32);
    sub_10000C80C((void *)(v78 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter), v17);
    uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(v17, v18);
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v75 = v0;
    if (v20)
    {
      v66[1] = v13;
      char v21 = 0;
      v66[0] = v19;
      uint64_t v22 = v19 + 32;
      long long v76 = "igrationComplete";
      unint64_t v67 = 0x80000001000A9BA0;
      while (1)
      {
        sub_100017C14(v22, (uint64_t)aBlock);
        uint64_t v23 = v80;
        uint64_t v24 = v81;
        sub_10000C80C(aBlock, (uint64_t)v80);
        if ((*((uint64_t (**)(void *, uint64_t (*)()))v24 + 1))(v23, v24)) {
          goto LABEL_9;
        }
        unint64_t v25 = v80;
        uint64_t v26 = v81;
        sub_10000C80C(aBlock, (uint64_t)v80);
        uint64_t v27 = (*((uint64_t (**)(void *, uint64_t (*)()))v26 + 2))(v25, v26);
        unint64_t v29 = v28;
        swift_bridgeObjectRelease();
        uint64_t v30 = HIBYTE(v29) & 0xF;
        if ((v29 & 0x2000000000000000) == 0) {
          uint64_t v30 = v27 & 0xFFFFFFFFFFFFLL;
        }
        if (!v30) {
          goto LABEL_9;
        }
        uint64_t v31 = v80;
        NSString v32 = v81;
        sub_10000C80C(aBlock, (uint64_t)v80);
        if ((*((uint64_t (**)(void *, uint64_t (*)()))v32 + 3))(v31, v32) == 0xD000000000000015
          && v33 == 0x80000001000A9980)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v34 & 1) == 0)
          {
            NSString v35 = v80;
            uint64_t v36 = v81;
            sub_10000C80C(aBlock, (uint64_t)v80);
            if ((*((uint64_t (**)(void *, uint64_t (*)()))v36 + 3))(v35, v36) == 0xD000000000000013
              && v37 == v67)
            {
              swift_bridgeObjectRelease();
              goto LABEL_21;
            }
            char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v38)
            {
LABEL_21:
              uint64_t v39 = v80;
              uint64_t v40 = v81;
              sub_10000C80C(aBlock, (uint64_t)v80);
              char v21 = (*((uint64_t (**)(void *, uint64_t (*)()))v40 + 6))(v39, v40);
            }
            uint64_t v41 = v80;
            uint64_t v42 = v81;
            sub_10000C80C(aBlock, (uint64_t)v80);
            if ((*((uint64_t (**)(void *, uint64_t (*)()))v42 + 4))(v41, v42))
            {
              sub_100017C14((uint64_t)aBlock, (uint64_t)v83);
              sub_10003A360(v83, (uint64_t)v84);
              uint64_t v43 = v77;
              uint64_t v44 = *v77;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v43 = v44;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                uint64_t v44 = sub_10004C224(0, v44[2] + 1, 1, v44);
                *uint64_t v77 = v44;
              }
              unint64_t v47 = v44[2];
              unint64_t v46 = v44[3];
              if (v47 >= v46 >> 1)
              {
                uint64_t v44 = sub_10004C224((void *)(v46 > 1), v47 + 1, 1, v44);
                *uint64_t v77 = v44;
              }
              v44[2] = v47 + 1;
              uint64_t v48 = &v44[6 * v47];
              long long v49 = v84[0];
              long long v50 = v84[1];
              long long v51 = v84[2];
            }
            else
            {
              sub_100017C14((uint64_t)aBlock, (uint64_t)v83);
              sub_10003A360(v83, (uint64_t)v85);
              uint64_t v52 = *v11;
              char v53 = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v11 = v52;
              if ((v53 & 1) == 0)
              {
                uint64_t v52 = sub_10004C224(0, v52[2] + 1, 1, v52);
                *uint64_t v11 = v52;
              }
              unint64_t v55 = v52[2];
              unint64_t v54 = v52[3];
              if (v55 >= v54 >> 1)
              {
                uint64_t v52 = sub_10004C224((void *)(v54 > 1), v55 + 1, 1, v52);
                *uint64_t v11 = v52;
              }
              v52[2] = v55 + 1;
              uint64_t v48 = &v52[6 * v55];
              long long v49 = v85[0];
              long long v50 = v85[1];
              long long v51 = v85[2];
            }
            v48[3] = v50;
            v48[4] = v51;
            void v48[2] = v49;
          }
        }
LABEL_9:
        sub_100017BC4((uint64_t)aBlock);
        v22 += 40;
        if (!--v20)
        {
          swift_bridgeObjectRelease();
          goto LABEL_36;
        }
      }
    }
    swift_bridgeObjectRelease();
    char v21 = 0;
LABEL_36:
    uint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v56, v57))
    {
      id v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "Fetching notification sources finished", v58, 2u);
      swift_slowDealloc();
    }

    sub_10005CC30(v77);
    sub_10005CC30(v11);
    sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
    uint64_t v59 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = v78;
    *(unsigned char *)(v60 + 24) = v21 & 1;
    uint64_t v61 = v68;
    *(void *)(v60 + 32) = v69;
    *(void *)(v60 + 40) = v61;
    os_log_type_t v81 = sub_1000609B8;
    uint64_t v82 = v60;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100046658;
    unint64_t v80 = &unk_1000C4BD0;
    unint64_t v62 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    uint64_t v63 = v70;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10005FE30((unint64_t *)&qword_1000D4C20, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100008E18(&qword_1000D4C28);
    sub_100017E30((unint64_t *)&qword_1000D4C30, &qword_1000D4C28);
    uint64_t v64 = v72;
    uint64_t v65 = v75;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v62);
    swift_release();

    (*(void (**)(char *, uint64_t))(v74 + 8))(v64, v65);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v63, v73);
    swift_release();
    return swift_release();
  }
  return result;
}

Swift::Int sub_10005CC30(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10005ED98(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_10005DFD8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_10005CCA0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a1;
  uint64_t v8 = type metadata accessor for HeadphoneModel();
  uint64_t v9 = v8 - 8;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v41 = (uint64_t)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = a1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
  swift_beginAccess();
  sub_10000C850(v14, (uint64_t)v13);
  v13[*(int *)(v9 + 164)] = a2;
  uint64_t v15 = sub_100027B70(0x15u);
  uint64_t v36 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = sub_100027B70(0x16u);
  uint64_t v38 = v18;
  uint64_t v39 = v17;
  swift_beginAccess();
  uint64_t v19 = *(void *)(a3 + 16);
  swift_beginAccess();
  uint64_t v20 = *(void *)(a4 + 16);
  uint64_t v21 = *(void *)v13;
  uint64_t v22 = *((void *)v13 + 1);
  uint64_t v23 = *((void *)v13 + 2);
  uint64_t v24 = *((void *)v13 + 3);
  uint64_t v25 = *((void *)v13 + 4);
  uint64_t v26 = (void *)*((void *)v13 + 5);
  uint64_t v34 = *((void *)v13 + 6);
  uint64_t v35 = v21;
  uint64_t v33 = *((void *)v13 + 7);
  long long v32 = *((_OWORD *)v13 + 4);
  long long v31 = *((_OWORD *)v13 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000609C8(v35, v22, v23, v24, v25, v26, v34, v33, v32, *((uint64_t *)&v32 + 1), v31, *((void **)&v31 + 1));
  *(void *)uint64_t v13 = 0xD000000000000015;
  *((void *)v13 + 1) = 0x80000001000A9980;
  uint64_t v27 = v36;
  *((void *)v13 + 2) = v37;
  *((void *)v13 + 3) = v27;
  *((_OWORD *)v13 + 2) = xmmword_1000A3D60;
  *((_OWORD *)v13 + 3) = xmmword_1000A3D70;
  uint64_t v28 = v38;
  *((void *)v13 + 8) = v39;
  *((void *)v13 + 9) = v28;
  *((_OWORD *)v13 + 5) = xmmword_1000A3D60;
  *((void *)v13 + 12) = v19;
  *((void *)v13 + 13) = v20;
  uint64_t v29 = v41;
  sub_10000C850((uint64_t)v13, v41);
  sub_10004DB70(v29);
  return sub_10000C918((uint64_t)v13);
}

uint64_t sub_10005CEE0()
{
  sub_100008F00(v0 + 16);
  sub_10000C918(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model);
  sub_100008F00(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate);

  sub_10005FEA0(*(void *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler));
  swift_unknownObjectRelease();
  sub_100017BC4(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter);

  sub_100017BC4(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_offersClient);
  swift_release();

  sub_10001A2AC(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate, &qword_1000D5458);
  swift_release();
  sub_10001A2AC(v0 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo, &qword_1000D5DE0);
  return v0;
}

uint64_t sub_10005D024()
{
  sub_10005CEE0();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_10005D07C()
{
  return type metadata accessor for HeadphoneInteractor();
}

uint64_t type metadata accessor for HeadphoneInteractor()
{
  uint64_t result = qword_1000D5C68;
  if (!qword_1000D5C68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10005D0D0()
{
  type metadata accessor for HeadphoneModel();
  if (v0 <= 0x3F)
  {
    sub_10005D290(319, (unint64_t *)&unk_1000D54D8, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F)
    {
      sub_10005D290(319, (unint64_t *)&unk_1000D5C78, (void (*)(uint64_t))&type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10005D290(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10005D2E4(uint64_t a1, uint64_t a2)
{
  *(void *)(*v2 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_10005D334(uint64_t a1, uint64_t a2)
{
  *(void *)(*(void *)v2 + 24) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_10005D37C(uint64_t result)
{
  *(unsigned char *)(*v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_allowRepairAutoConnect) = result;
  return result;
}

uint64_t sub_10005D390(uint64_t result)
{
  *(unsigned char *)(*v1 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_wantsTemporaryPairing) = result;
  return result;
}

uint64_t sub_10005D3A4(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_10005D3E0@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  unint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_10003548C(a2, a3);
      uint64_t v10 = (char *)__DataStorage._bytes.getter();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = __DataStorage._offset.getter();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = __DataStorage._length.getter();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x10005D644);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_10001FB5C(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)__DataStorage._bytes.getter();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = __DataStorage._offset.getter();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = __DataStorage._length.getter();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_10005D654(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_10005D730;
  return v6(a1);
}

uint64_t sub_10005D730()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10005D828(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10005D850(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_10005D8C8(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_10005D8C8(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_10005D99C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_10003101C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_10003101C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100017BC4((uint64_t)v12);
  return v7;
}

uint64_t sub_10005D99C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_10005DB58(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_10005DB58(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_10005DBF0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10005DDD0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_10005DDD0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_10005DBF0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_10005DD68(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_10005DD68(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100008E18(&qword_1000D5DA8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_10005DDD0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008E18(&qword_1000D5DA8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  size_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unsigned char **sub_10005DF20(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  unsigned char *v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_10005DF30@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unsigned char *sub_10005DF60@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_1000603C8(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_10006048C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_100060508((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

Swift::Int sub_10005DFD8(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      return sub_10005E76C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_140;
  }
  Swift::Int v104 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    uint64_t v103 = _swiftEmptyArrayStorage;
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_98:
      if (v11 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_127;
          }
          if (!v94) {
            goto LABEL_139;
          }
          uint64_t v96 = *(void *)&v8[16 * v95 + 32];
          uint64_t v97 = *(void *)&v8[16 * v11 + 24];
          sub_10005E890((char *)(v94 + 48 * v96), (char *)(v94 + 48 * *(void *)&v8[16 * v11 + 16]), v94 + 48 * v97, __dst);
          if (v1) {
            break;
          }
          if (v97 < v96) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_10005ED84((uint64_t)v8);
          }
          if (v95 >= *((void *)v8 + 2)) {
            goto LABEL_129;
          }
          unint64_t v98 = &v8[16 * v95 + 32];
          *(void *)unint64_t v98 = v96;
          *((void *)v98 + 1) = v97;
          unint64_t v99 = *((void *)v8 + 2);
          if (v11 > v99) {
            goto LABEL_130;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v99 - v11));
          *((void *)v8 + 2) = v99 - 1;
          unint64_t v11 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      v103[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    uint64_t v103 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v102 = *a1 + 120;
  uint64_t v100 = *a1 + 40;
  uint64_t v8 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v105 = v3;
  while (1)
  {
    Swift::Int v12 = v9++;
    Swift::Int v106 = v12;
    if (v9 < v3)
    {
      sub_100008E5C();
      uint64_t v13 = StringProtocol.localizedCompare<A>(_:)();
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        uint64_t v14 = v102 + 48 * v12;
        while ((v13 == -1) != (StringProtocol.localizedCompare<A>(_:)() != -1))
        {
          v14 += 48;
          ++v9;
          Swift::Int v3 = v105;
          if (v105 == v9)
          {
            Swift::Int v9 = v105;
            goto LABEL_22;
          }
        }
        Swift::Int v3 = v105;
      }
LABEL_22:
      if (v13 == -1)
      {
        if (v9 < v12) {
          goto LABEL_135;
        }
        if (v12 < v9)
        {
          uint64_t v15 = 48 * v9;
          uint64_t v16 = 48 * v12;
          Swift::Int v17 = v9;
          Swift::Int v18 = v12;
          do
          {
            if (v18 != --v17)
            {
              if (!v10) {
                goto LABEL_138;
              }
              BOOL v19 = (_OWORD *)(v10 + v16);
              long long v20 = *(_OWORD *)(v10 + v16);
              uint64_t v21 = v10 + v15;
              uint64_t v22 = *(void *)(v10 + v16 + 16);
              uint64_t v23 = *(void *)(v10 + v16 + 24);
              char v24 = *(unsigned char *)(v10 + v16 + 32);
              uint64_t v25 = *(void *)(v10 + v16 + 40);
              long long v27 = *(_OWORD *)(v10 + v15 - 32);
              long long v26 = *(_OWORD *)(v10 + v15 - 16);
              _OWORD *v19 = *(_OWORD *)(v10 + v15 - 48);
              v19[1] = v27;
              v19[2] = v26;
              *(_OWORD *)(v21 - 48) = v20;
              *(void *)(v21 - 32) = v22;
              *(void *)(v21 - 24) = v23;
              *(unsigned char *)(v21 - 16) = v24;
              *(void *)(v21 - 8) = v25;
            }
            ++v18;
            v15 -= 48;
            v16 += 48;
          }
          while (v18 < v17);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_131;
      }
      if (v9 - v12 < v104) {
        break;
      }
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_10005EBB8(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v41 = *((void *)v8 + 2);
    unint64_t v40 = *((void *)v8 + 3);
    unint64_t v11 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v8 = sub_10005EBB8((char *)(v40 > 1), v41 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    uint64_t v42 = v8 + 32;
    uint64_t v43 = &v8[16 * v41 + 32];
    *(void *)uint64_t v43 = v12;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v11 - 1;
        if (v11 >= 4)
        {
          long long v49 = &v42[16 * v11];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_115;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_116;
          }
          unint64_t v56 = v11 - 2;
          os_log_type_t v57 = &v42[16 * v11 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_118;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_121;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_125;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v73 = *((void *)v8 + 4);
            uint64_t v74 = *((void *)v8 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_80;
          }
          uint64_t v46 = *((void *)v8 + 4);
          uint64_t v45 = *((void *)v8 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_117;
        }
        unint64_t v56 = v11 - 2;
        unint64_t v62 = &v42[16 * v11 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_120;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_123;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_124;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_86:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v67) {
          goto LABEL_119;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_122;
        }
        if (v78 < v66) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v10) {
          goto LABEL_137;
        }
        double v84 = v8;
        uint64_t v85 = v10;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        Class v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v85;
        sub_10005E890((char *)(v85 + 48 * *(void *)v86), (char *)(v85 + 48 * *(void *)v90), v85 + 48 * v91, __dst);
        if (v1) {
          goto LABEL_109;
        }
        if (v91 < v87) {
          goto LABEL_112;
        }
        if (v89 > *((void *)v84 + 2)) {
          goto LABEL_113;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v84 + 2);
        if (v89 >= v93) {
          goto LABEL_114;
        }
        uint64_t v8 = v84;
        unint64_t v11 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v84 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    Swift::Int v3 = v105;
    if (v9 >= v105) {
      goto LABEL_98;
    }
  }
  if (__OFADD__(v12, v104)) {
    goto LABEL_133;
  }
  if (v12 + v104 >= v3) {
    Swift::Int v28 = v3;
  }
  else {
    Swift::Int v28 = v12 + v104;
  }
  if (v28 >= v12)
  {
    if (v9 != v28)
    {
      sub_100008E5C();
      uint64_t v29 = v100 + 48 * v9;
      do
      {
        uint64_t v30 = v29;
        do
        {
          if (StringProtocol.localizedCompare<A>(_:)() != -1) {
            break;
          }
          if (!v10) {
            goto LABEL_136;
          }
          long long v31 = (_OWORD *)(v30 - 40);
          long long v32 = (_OWORD *)(v30 - 88);
          long long v34 = *(_OWORD *)(v30 - 72);
          long long v33 = *(_OWORD *)(v30 - 56);
          *(void *)(v30 - 48) = *(void *)v30;
          v30 -= 48;
          uint64_t v35 = *(void *)(v30 + 8);
          uint64_t v36 = *(void *)(v30 + 16);
          uint64_t v37 = *(void *)(v30 + 24);
          uint64_t v38 = *(void *)(v30 + 32);
          char v39 = *(unsigned char *)(v30 + 40);
          _OWORD *v31 = *v32;
          v31[1] = v34;
          void v31[2] = v33;
          *(void *)(v30 - 40) = v35;
          *(void *)(v30 - 32) = v36;
          *(void *)(v30 - 24) = v37;
          *(void *)(v30 - 16) = v38;
          *(unsigned char *)(v30 - 8) = v39;
          ++v12;
        }
        while (v9 != v12);
        ++v9;
        v29 += 48;
        Swift::Int v12 = v106;
      }
      while (v9 != v28);
      Swift::Int v9 = v28;
    }
    goto LABEL_48;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10005E76C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v19 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    sub_100008E5C();
    uint64_t v7 = v6 + 48 * v4 + 40;
LABEL_5:
    uint64_t v8 = v19;
    uint64_t v9 = v7;
    while (1)
    {
      Swift::Int result = StringProtocol.localizedCompare<A>(_:)();
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v7 += 48;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v6) {
        break;
      }
      uint64_t v10 = (_OWORD *)(v9 - 40);
      unint64_t v11 = (_OWORD *)(v9 - 88);
      long long v13 = *(_OWORD *)(v9 - 72);
      long long v12 = *(_OWORD *)(v9 - 56);
      *(void *)(v9 - 48) = *(void *)v9;
      v9 -= 48;
      uint64_t v14 = *(void *)(v9 + 8);
      uint64_t v15 = *(void *)(v9 + 16);
      uint64_t v16 = *(void *)(v9 + 24);
      uint64_t v17 = *(void *)(v9 + 32);
      char v18 = *(unsigned char *)(v9 + 40);
      *uint64_t v10 = *v11;
      v10[1] = v13;
      v10[2] = v12;
      *(void *)(v9 - 40) = v14;
      *(void *)(v9 - 32) = v15;
      *(void *)(v9 - 24) = v16;
      *(void *)(v9 - 16) = v17;
      *(unsigned char *)(v9 - 8) = v18;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10005E890(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 48;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 48;
  uint64_t v29 = __src;
  Swift::Int v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -47)
    {
      if (__dst != a2 || &a2[48 * v11] <= __dst) {
        memmove(__dst, a2, 48 * v11);
      }
      char v18 = &v4[48 * v11];
      long long v27 = v18;
      uint64_t v29 = v6;
      if (v7 < v6 && v10 >= 48)
      {
        sub_100008E5C();
        uint64_t v19 = (char *)(a3 - 48);
        do
        {
          long long v20 = v19 + 48;
          if (StringProtocol.localizedCompare<A>(_:)() == -1)
          {
            uint64_t v23 = v6 - 48;
            if (v20 != v6 || v19 >= v6)
            {
              long long v24 = *(_OWORD *)v23;
              long long v25 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v19 + 2) = v25;
              *(_OWORD *)uint64_t v19 = v24;
            }
            uint64_t v29 = v6 - 48;
            if (v23 <= v7) {
              break;
            }
          }
          else
          {
            long long v27 = v18 - 48;
            if (v20 < v18 || v19 >= v18 || v20 != v18)
            {
              long long v21 = *((_OWORD *)v18 - 3);
              long long v22 = *((_OWORD *)v18 - 1);
              *((_OWORD *)v19 + 1) = *((_OWORD *)v18 - 2);
              *((_OWORD *)v19 + 2) = v22;
              *(_OWORD *)uint64_t v19 = v21;
            }
            uint64_t v23 = v6;
            v18 -= 48;
            if (v6 <= v7) {
              break;
            }
          }
          v19 -= 48;
          uint64_t v6 = v23;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_10005ECB4((void **)&v29, &v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -47)
  {
    if (__dst != __src || &__src[48 * v9] <= __dst) {
      memmove(__dst, __src, 48 * v9);
    }
    long long v12 = &v4[48 * v9];
    long long v27 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      sub_100008E5C();
      long long v13 = v4;
      while (1)
      {
        if (StringProtocol.localizedCompare<A>(_:)() == -1)
        {
          uint64_t v15 = v6 + 48;
          uint64_t v14 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v4 = v13 + 48;
          uint64_t v14 = v13;
          uint64_t v15 = v6;
          if (v7 == v13)
          {
            v13 += 48;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 48;
          }
        }
        long long v16 = *(_OWORD *)v14;
        long long v17 = *((_OWORD *)v14 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v14 + 1);
        *((_OWORD *)v7 + 2) = v17;
        *(_OWORD *)uint64_t v7 = v16;
LABEL_18:
        v7 += 48;
        if (v13 < v12)
        {
          uint64_t v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        Swift::Int v28 = v4;
        uint64_t v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10005EBB8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008E18(&qword_1000D5EB0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  long long v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_10005ECB4(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -48)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 48;
    if (result != v3 || result >= &v3[48 * v6])
    {
      return (char *)memmove(result, v3, 48 * v6);
    }
  }
  return result;
}

char *sub_10005ED84(uint64_t a1)
{
  return sub_10005EBB8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_10005ED98(void *a1)
{
  return sub_10004C224(0, a1[2], 0, a1);
}

uint64_t sub_10005EDAC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_10005D3E0((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_10005EE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  __DataStorage._length.getter();
  sub_10005D3E0(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_10005EF3C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x10005F1A4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_10003548C(a3, a4);
                  sub_10003548C(a1, a2);
                  char v17 = sub_10005EE84((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_10001FB5C(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_10003548C(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_10005EE84(v21, v22, v20, a3, a4);
                  sub_10001FB5C(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_10003548C(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_10003548C(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_10005EDAC(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_10001FB5C(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

void *sub_10005F1D4(unint64_t a1)
{
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v4 = *(id *)(a1 + 8 * v3);
        }
        uint64_t v5 = v4;
        uint64_t v6 = v3 - 3;
        if (__OFADD__(v3 - 4, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        id v7 = [v4 btAddressData];
        if (!v7) {
          break;
        }
        uint64_t v8 = v7;
        uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v11 = v10;

        sub_1000521C8(v9, v11);
        sub_10001FB5C(v9, v11);
        Swift::String v12 = String.lowercased()();
        swift_bridgeObjectRelease();
        Swift::String v13 = String.lowercased()();
        if (!v12._object) {
          goto LABEL_5;
        }
        if (v12._countAndFlagsBits == v13._countAndFlagsBits && v12._object == v13._object)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return v5;
        }
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v15)
        {
          swift_bridgeObjectRelease();
          return v5;
        }

LABEL_6:
        ++v3;
        if (v6 == v2) {
          goto LABEL_24;
        }
      }
      String.lowercased()();
LABEL_5:

      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
LABEL_24:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10005F3E8()
{
  id v16 = 0;
  id v0 = [self devicesWithDiscoveryFlags:0x800000 error:&v16];
  id v1 = v16;
  if (!v0)
  {
    id v8 = v16;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1000D43E8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100008278(v9, (uint64_t)qword_1000D5B88);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      Swift::String v12 = (uint8_t *)swift_slowAlloc();
      id v16 = (id)swift_slowAlloc();
      *(_DWORD *)Swift::String v12 = 136315138;
      swift_errorRetain();
      sub_100008E18((uint64_t *)&unk_1000D50A0);
      uint64_t v13 = String.init<A>(reflecting:)();
      sub_10005D8C8(v13, v14, (uint64_t *)&v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to get paired devices: %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    return 0;
  }
  uint64_t v2 = v0;
  sub_100008EB0(0, &qword_1000D5DB0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = v1;

  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10005F1D4(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5) {
    return 0;
  }
  id v6 = [v5 name];

  if (!v6) {
    return 0;
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v7;
}

uint64_t sub_10005F710()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10005F748(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10005F758()
{
  return swift_release();
}

__CFString *sub_10005F760(unint64_t a1)
{
  if (a1 > 3)
  {
    id v1 = @"?";
    uint64_t v2 = @"?";
  }
  else
  {
    id v1 = off_1000C4C20[a1];
    uint64_t v2 = off_1000C4C40[a1];
  }
  unint64_t v3 = v1;

  return v2;
}

uint64_t sub_10005F7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadphoneModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005F828(uint64_t a1)
{
  return sub_100052898(a1, (uint64_t)&unk_1000C4870, (uint64_t)sub_10005F87C, (uint64_t)&unk_1000C4888);
}

uint64_t sub_10005F864()
{
  return sub_1000607F4((void (*)(void))&_swift_errorRelease);
}

void sub_10005F87C()
{
  sub_1000573D8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10005F884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D5458);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005F8EC(uint64_t a1)
{
  return sub_100052898(a1, (uint64_t)&unk_1000C48C0, (uint64_t)sub_10005F940, (uint64_t)&unk_1000C48D8);
}

uint64_t sub_10005F928()
{
  return sub_1000607F4((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_10005F940()
{
  return sub_100054F54(*(void *)(v0 + 16));
}

unint64_t sub_10005F948()
{
  unint64_t result = qword_1000D5DE8;
  if (!qword_1000D5DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D5DE8);
  }
  return result;
}

unint64_t sub_10005F99C()
{
  unint64_t result = qword_1000D5DF0;
  if (!qword_1000D5DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000D5DF0);
  }
  return result;
}

uint64_t sub_10005F9F0()
{
  uint64_t v1 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10005FAF4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = *(void *)((char *)v1 + v6);
  uint64_t v13 = *(void *)((char *)v1 + v6 + 8);
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *unint64_t v14 = v2;
  v14[1] = sub_100060A68;
  return sub_10005B78C(a1, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_10005FC50(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100060A68;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000D5E08 + dword_1000D5E08);
  return v6(a1, v4);
}

uint64_t sub_10005FD08(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_10003548C(a1, a2);
  }
  return a1;
}

uint64_t sub_10005FD1C()
{
  return sub_100056D30(v0);
}

uint64_t sub_10005FD24()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10005FD5C(void *a1, char a2)
{
  return sub_100056248(a1, a2 & 1, v2);
}

uint64_t sub_10005FD68()
{
  sub_100017D0C(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10005FDAC()
{
  sub_100056550(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void sub_10005FDBC(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_100017D0C(a1, a2 & 1);
  }
}

uint64_t sub_10005FDD4(uint64_t a1)
{
  return sub_100052898(a1, (uint64_t)&unk_1000C4A28, (uint64_t)sub_10005FE28, (uint64_t)&unk_1000C4A40);
}

uint64_t sub_10005FE10()
{
  return sub_1000607F4((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_10005FE28()
{
  return sub_1000570D0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10005FE30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10005FE78(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0x8000000000000000;
  if (a1 <= 0x8000000000000000) {
    unint64_t v3 = 0x8000000000000000;
  }
  else {
    unint64_t v3 = a1;
  }
  if (a2 > 0x8000000000000000) {
    unint64_t v2 = a2;
  }
  BOOL v4 = v3 >= v2;
  BOOL v5 = v3 > v2;
  int v6 = !v4;
  return (v5 - v6);
}

uint64_t sub_10005FEA0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10005FEB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100008E18(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005FF14()
{
  uint64_t v1 = *(void *)(sub_100008E18(&qword_1000D5DE0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  unint64_t v5 = *(void *)(v0 + 64);
  if (v5 >> 60 != 15) {
    sub_10001FB5C(*(void *)(v0 + 56), v5);
  }
  uint64_t v6 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v0 + v3, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v3, v6);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100060070(uint64_t a1)
{
  sub_100008E18(&qword_1000D5DE0);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  int v6 = *(_DWORD *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  char v9 = *(unsigned char *)(v1 + 44);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1000601A4;
  return sub_100058058(a1, v3, v4, v5, v6, v9, v7, v8);
}

uint64_t sub_1000601A4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_100060298()
{
  id v0 = objc_allocWithZone((Class)ASDSystemAppMetadata);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithBundleID:v1];

  [v2 setUserInitiated:1];
  uint64_t v3 = self;
  v6[4] = sub_100054B60;
  v6[5] = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100054E0C;
  v6[3] = &unk_1000C4BF8;
  uint64_t v4 = _Block_copy(v6);
  id v5 = v2;
  [v3 installApp:v5 withCompletionHandler:v4];
  _Block_release(v4);
}

uint64_t sub_1000603C8(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_10006048C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    type metadata accessor for Data.RangeReference();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_100060508(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  type metadata accessor for __DataStorage();
  swift_allocObject();
  uint64_t result = __DataStorage.init(bytes:length:)();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10006058C(uint64_t a1)
{
  uint64_t v9 = sub_100008E18(&qword_1000D5E70);
  uint64_t v10 = sub_100017E30(&qword_1000D5E78, &qword_1000D5E70);
  v8[0] = a1;
  uint64_t v2 = sub_10000C80C(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_10005DF60(v3, v4, &v7);
  uint64_t v5 = v7;
  sub_100017BC4((uint64_t)v8);
  return v5;
}

uint64_t sub_10006064C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_1000601A4;
  int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000D5E08 + dword_1000D5E08);
  return v6(a1, v4);
}

void sub_100060704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_10003AD58(a4, a5);
  }
}

void *sub_100060750(void *a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

void sub_100060790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_10005FD08(a4, a5);
  }
}

uint64_t sub_1000607DC()
{
  return sub_1000607F4((void (*)(void))&_swift_release);
}

uint64_t sub_1000607F4(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_10006083C()
{
  return sub_10005AE94(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100060844()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100060884()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100060A68;
  v3[4] = v2;
  return ((uint64_t (*)(uint64_t (*)(), void, void))_swift_task_switch)(sub_10005B01C, 0, 0);
}

uint64_t sub_100060930()
{
  return sub_10005C248();
}

uint64_t sub_100060938()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100060970()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1000609B8()
{
  return sub_10005CCA0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_1000609C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_100060ACC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v3 = 0;
  }
  [v2 setDeviceAddress:v3];
}

id sub_100060B38(char a1)
{
  return [v1 setGuestMode:a1 & 1];
}

id sub_100060B4C(char a1)
{
  return [v1 setDisconnectOnly:a1 & 1];
}

id sub_100060B60(char a1)
{
  return [v1 setUnpairOnly:a1 & 1];
}

void sub_100060B74(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    v4[4] = a1;
    v4[5] = a2;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 1107296256;
    v4[2] = sub_1000518C0;
    v4[3] = &unk_1000C4DE8;
    id v3 = _Block_copy(v4);
    swift_release();
  }
  else
  {
    id v3 = 0;
  }
  [v2 setCompletionHandler:v3];
  _Block_release(v3);
}

uint64_t sub_100060C1C()
{
  id v1 = [v0 name];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

id sub_100060C84()
{
  return [v0 softwareVolume];
}

id sub_100060CA8()
{
  return [v0 deviceVersion];
}

id sub_100060CB8()
{
  return [v0 inEarDetection];
}

id sub_100060CDC()
{
  return [v0 activate];
}

id sub_100060CEC()
{
  return [v0 invalidate];
}

uint64_t sub_100060CFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 81) == 1)
  {
    uint64_t v20 = *(void (**)(uint64_t))(v1 + 40);
    if (v20)
    {
      uint64_t v21 = *(void *)(v1 + 88);
      sub_10006143C(*(void *)(v1 + 40));
      swift_errorRetain();
      v20(v21);
      sub_10005FEA0((uint64_t)v20);
      return swift_errorRelease();
    }
  }
  else
  {
    sub_100061380();
    uint64_t v29 = v3;
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v19, enum case for DispatchQoS.QoSClass.background(_:), v15);
    uint64_t v28 = static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v22 = v31;
    uint64_t v23 = *(void (**)(char *, uint64_t))(v30 + 8);
    v23(v12, v31);
    long long v24 = v23;
    aBlock[4] = sub_1000613C0;
    aBlock[5] = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100046658;
    void aBlock[3] = &unk_1000C4DC0;
    long long v25 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    long long v34 = _swiftEmptyArrayStorage;
    sub_100017DD8();
    sub_100008E18(&qword_1000D4C28);
    sub_1000613E0();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    long long v26 = (void *)v28;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v33);
    v24(v14, v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_10006117C(uint64_t result)
{
  uint64_t v1 = *(void (**)(void))(result + 40);
  if (v1)
  {
    swift_retain();
    v1(0);
    return sub_10005FEA0((uint64_t)v1);
  }
  return result;
}

uint64_t sub_1000611DC()
{
  uint64_t v1 = (void (*)(uint64_t))v0[12];
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_10005FEA0((uint64_t)v1);
  }
  uint64_t v3 = v0[5];
  v0[5] = 0;
  v0[6] = 0;

  return sub_10005FEA0(v3);
}

uint64_t sub_100061244()
{
  swift_bridgeObjectRelease();
  sub_10005FEA0(*(void *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_errorRelease();
  sub_10005FEA0(*(void *)(v0 + 96));

  return _swift_deallocClassInstance(v0, 112, 7);
}

uint64_t type metadata accessor for HeadphoneFakePairingSession()
{
  return self;
}

double sub_1000612C0()
{
  *(_DWORD *)(v0 + 76) = 0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(_DWORD *)(v0 + 31) = 0;
  double result = 0.0;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(unsigned char *)(v0 + 72) = 0;
  *(_WORD *)(v0 + 80) = 1;
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 88) = 0;
  return result;
}

uint64_t sub_1000612F4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100061304(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t sub_10006130C(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t sub_100061314(uint64_t result)
{
  *(unsigned char *)(v1 + 34) = result;
  return result;
}

uint64_t sub_10006131C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 40);
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return sub_10005FEA0(v3);
}

uint64_t sub_100061330()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100061360()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_100061368()
{
  return *(unsigned int *)(v0 + 76);
}

uint64_t sub_100061370()
{
  return *(unsigned __int8 *)(v0 + 80);
}

unint64_t sub_100061380()
{
  unint64_t result = qword_1000D4BD0;
  if (!qword_1000D4BD0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000D4BD0);
  }
  return result;
}

uint64_t sub_1000613C0()
{
  return sub_10006117C(v0);
}

uint64_t sub_1000613C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000613D8()
{
  return swift_release();
}

unint64_t sub_1000613E0()
{
  unint64_t result = qword_1000D4C30;
  if (!qword_1000D4C30)
  {
    sub_1000175C0(&qword_1000D4C28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D4C30);
  }
  return result;
}

uint64_t sub_10006143C(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100061454()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D5FB0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D5FB0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10006151C()
{
  qword_1000D5FC8 = 0x3FF0000000000000;
}

void sub_10006152C()
{
  uint64_t v1 = v0;
  v28.receiver = v0;
  v28.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  [v0 setDismissalType:3];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerLayoutGuide];
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setIdentifier:v3];

  id v4 = [v1 contentView];
  [v4 addLayoutGuide:v2];

  id v5 = [v1 contentView];
  id v6 = [v5 mainContentGuide];

  id v7 = [v2 bottomAnchor];
  id v8 = [v6 bottomAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  uint64_t v10 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000A2750;
  id v12 = [v2 topAnchor];
  id v13 = [v6 topAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v11 + 32) = v14;
  id v15 = [v2 leadingAnchor];
  id v16 = [v6 leadingAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v11 + 40) = v17;
  id v18 = [v2 trailingAnchor];
  id v19 = [v6 trailingAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v11 + 48) = v20;
  *(void *)(v11 + 56) = v9;
  specialized Array._endMutation()();
  sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
  id v21 = v9;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 activateConstraints:isa];

  uint64_t v23 = (void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint];
  swift_beginAccess();
  long long v24 = *v23;
  *uint64_t v23 = v21;
  id v25 = v21;

  id v26 = sub_1000618C0();
  uint64_t v27 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer];
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer] = v26;
}

id sub_1000618C0()
{
  uint64_t v1 = v0;
  type metadata accessor for HeadphoneBatteryContainer();
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  NSString v3 = &v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel];
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
  {
    sub_100026C34((uint64_t)v24);
  }
  else
  {
    sub_100023048((uint64_t)&v3[*(int *)(v4 + 56)], (uint64_t)v24);
    sub_10004D19C(v24, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004D150);
  }
  sub_100023048((uint64_t)v24, (uint64_t)v25);
  uint64_t v5 = (uint64_t)v2 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_layoutMetrics;
  sub_100023048((uint64_t)v2 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_layoutMetrics, (uint64_t)v24);
  sub_100023048((uint64_t)v25, v5);
  sub_10004D19C(v24, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10002313C);
  id v6 = [v1 contentView];
  [v6 addSubview:v2];

  id v7 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000A2750;
  id v9 = [v2 topAnchor];
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerLayoutGuide];
  id v11 = [v10 topAnchor];
  id v12 = [v9 constraintGreaterThanOrEqualToAnchor:v11];

  *(void *)(v8 + 32) = v12;
  id v13 = [v2 bottomAnchor];
  id v14 = [v10 bottomAnchor];
  id v15 = [v13 constraintLessThanOrEqualToAnchor:v14];

  *(void *)(v8 + 40) = v15;
  id v16 = [v2 centerXAnchor];
  id v17 = [v10 centerXAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v8 + 48) = v18;
  id v19 = [v2 centerYAnchor];
  id v20 = [v10 centerYAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v8 + 56) = v21;
  specialized Array._endMutation()();
  sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v7 activateConstraints:isa, v8];

  return v2;
}

uint64_t sub_100061CB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess();
  uint64_t v10 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_10001A2AC((uint64_t)v4, &qword_1000D4810);
  }
  sub_10001A248(v9 + *(int *)(v10 + 44), (uint64_t)v4, &qword_1000D4810);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10001A2AC((uint64_t)v4, &qword_1000D4810);
  }
  sub_1000682AC((uint64_t)v4, (uint64_t)v8, type metadata accessor for HeadphoneAssets);
  sub_100008E18(&qword_1000D6058);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A3FB0;
  id v13 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
  swift_beginAccess();
  id v14 = *v13;
  *(void *)(inited + 32) = *v13;
  id v15 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView);
  swift_beginAccess();
  id v16 = *v15;
  *(void *)(inited + 40) = *v15;
  id v17 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView);
  swift_beginAccess();
  id v18 = *v17;
  *(void *)(inited + 48) = v18;
  uint64_t v54 = inited;
  specialized Array._endMutation()();
  v50[1] = v54;
  uint64_t v52 = v54 + 32;
  id v19 = v18;
  id v20 = v14;
  id v21 = v16;
  uint64_t v22 = 0;
  uint64_t v51 = v1;
  do
  {
    uint64_t v23 = *(char **)(v52 + 8 * v22);
    if (v23)
    {
      unint64_t v24 = *(void *)&v23[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews];
      id v53 = *(id *)(v52 + 8 * v22);
      if (v24 >> 62)
      {
        uint64_t v36 = v23;
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        if (v25) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
        id v26 = v23;
        swift_bridgeObjectRetain();
        if (v25)
        {
LABEL_11:
          uint64_t result = self;
          if (v25 < 1)
          {
            __break(1u);
            return result;
          }
          uint64_t v27 = (void *)result;
          uint64_t v28 = 0;
          do
          {
            if ((v24 & 0xC000000000000001) != 0) {
              id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v29 = *(id *)(v24 + 8 * v28 + 32);
            }
            uint64_t v30 = v29;
            ++v28;
            id v31 = [v27 currentTraitCollection];
            id v32 = [v31 userInterfaceStyle];

            if (v32 == (id)2) {
              uint64_t v33 = 1;
            }
            else {
              uint64_t v33 = 2;
            }
            URL._bridgeToObjectiveC()((NSURL *)1);
            uint64_t v35 = v34;
            [v30 updateViewForAssetType:v33 adjustmentsURL:v34];
          }
          while (v25 != v28);
        }
      }

      swift_bridgeObjectRelease();
      uint64_t v1 = v51;
    }
    ++v22;
  }
  while (v22 != 3);
  swift_bridgeObjectRelease();
  uint64_t v37 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView);
  swift_beginAccess();
  uint64_t v38 = (char *)*v37;
  if (*v37)
  {
    swift_endAccess();
    char v39 = *(void **)&v38[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView];
    self;
    uint64_t v40 = swift_dynamicCastObjCClass();
    if (v40)
    {
      unint64_t v41 = (void *)v40;
      uint64_t v42 = self;
      id v43 = v39;
      unint64_t v44 = v38;
      id v45 = [v42 currentTraitCollection];
      id v46 = [v45 userInterfaceStyle];

      if (v46 == (id)2) {
        uint64_t v47 = 1;
      }
      else {
        uint64_t v47 = 2;
      }
      URL._bridgeToObjectiveC()((NSURL *)1);
      long long v49 = v48;
      [v41 updateViewForAssetType:v47 adjustmentsURL:v48];
    }
    return sub_100023188((uint64_t)v8, type metadata accessor for HeadphoneAssets);
  }
  else
  {
    sub_100023188((uint64_t)v8, type metadata accessor for HeadphoneAssets);
    return swift_endAccess();
  }
}

uint64_t sub_1000622D4(char a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  [super viewDidDisappear:a1 & 1];
  uint64_t v3 = &v1[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView];
  uint64_t result = swift_beginAccess();
  if (*(void *)v3)
  {
    swift_getObjectType();
    return dispatch thunk of VideoPlaybackControllable.stop()();
  }
  return result;
}

void sub_1000623D4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100068314((uint64_t)a1, (uint64_t)v6, type metadata accessor for HeadphoneViewModel);
  uint64_t v7 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  uint64_t v8 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel];
  swift_beginAccess();
  sub_10003FE28((uint64_t)v6, v8);
  swift_endAccess();
  NSString v9 = String._bridgeToObjectiveC()();
  [v2 setTitle:v9];

  id v10 = [objc_allocWithZone((Class)UILabel) init];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 setAdjustsFontForContentSizeCategory:1];
  id v11 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v10 setFont:v11];

  [v10 setNumberOfLines:0];
  id v12 = [self labelColor];
  [v10 setTextColor:v12];

  [v10 setTextAlignment:1];
  id v13 = [v2 contentView];
  [v13 addSubview:v10];

  id v14 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel];
  *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel] = v10;
  id v15 = (char *)v10;

  unint64_t v16 = a1[5];
  uint64_t v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v17 = a1[4] & 0xFFFFFFFFFFFFLL;
  }
  if (v17)
  {
    uint64_t v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_100068284;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100012FF0;
    void aBlock[3] = &unk_1000C4E78;
    id v20 = _Block_copy(aBlock);
    id v21 = [self actionWithTitle:v19 style:0 handler:v20];

    _Block_release(v20);
    swift_release();
    swift_release();
    id v22 = [v2 addAction:v21];
  }
  unint64_t v23 = a1[7];
  uint64_t v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v24 = a1[6] & 0xFFFFFFFFFFFFLL;
  }
  if (v24)
  {
    id v25 = [self buttonWithProximityType:0];
    [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
    NSString v26 = String._bridgeToObjectiveC()();
    [v25 setTitle:v26 forState:0];

    sub_100008EB0(0, (unint64_t *)&qword_1000D63F0);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    [v25 addAction:v27 forControlEvents:0x2000];

    id v28 = [v2 contentView];
    [v28 addSubview:v25];

    id v29 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_turnOffOptimizedBatteryChargingButton];
    *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_turnOffOptimizedBatteryChargingButton] = v25;
  }
  uint64_t v30 = (void *)a1[12];
  if (v30)
  {
    id v31 = v30;
    [v15 setAttributedText:v31];
    sub_100062DA4();
    id v32 = (id *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint];
    swift_beginAccess();
    if (*v32)
    {
      id v33 = *v32;
      [v33 setActive:0];
    }
  }
  long long v34 = *(void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer];
  if (v34)
  {
    uint64_t v35 = (char *)a1 + *(int *)(v7 + 48);
    uint64_t v36 = *((void *)v35 + 1);
    uint64_t v37 = *((void *)v35 + 3);
    unsigned int v38 = *((unsigned __int16 *)v35 + 20);
    switch(v38 >> 13)
    {
      case 1u:
        double v44 = *(double *)v35;
        int v45 = v36 & 0xFFFFFF01;
        id v43 = v34;
        sub_1000653FC(v45, v43, v44);
        goto LABEL_20;
      case 2u:
        double v46 = *((double *)v35 + 4);
        double v47 = *(double *)v35;
        double v48 = *((double *)v35 + 2);
        int v49 = v36 & 0xFFFFFF01;
        int v50 = v37 & 0xFFFFFF01;
        int v51 = v38 & 0x1F01;
        id v43 = v34;
        sub_100065C44(v49, v50, v51, v43, v47, v48, v46);
        goto LABEL_20;
      case 3u:
        double v52 = *(double *)v35;
        double v53 = *((double *)v35 + 2);
        int v54 = v36 & 0xFFFFFF01;
        BOOL v55 = (__objc2_ivar *)(*((void *)v35 + 3) & 0xFFFFFF01);
        id v43 = v34;
        sub_1000667BC(v54, v55, v43, v52, v53);
        goto LABEL_20;
      case 4u:
        double v56 = *(double *)v35;
        unsigned int v57 = v36 & 0xFFFFFF01;
        id v43 = v34;
        sub_1000670F8(v57, v43, v56);
        goto LABEL_20;
      case 5u:
        break;
      default:
        double v39 = *(double *)v35;
        double v40 = *((double *)v35 + 2);
        int v41 = v36 & 0xFFFFFF01;
        unsigned int v42 = v37 & 0xFFFFFF01;
        id v43 = v34;
        sub_10006469C(v41, v42, v43, v39, v40);
LABEL_20:

        id v15 = v43;
        break;
    }
  }
}

void sub_100062AF0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100008278(v3, (uint64_t)qword_1000D69F0);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested battery status finished", v6, 2u);
        swift_slowDealloc();
      }

      uint64_t v7 = *(void *)(v2 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(unsigned char *)(v7
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 116)) = 0;
      sub_10008ADE4(0);
      swift_unknownObjectRelease();
    }
  }
}

void sub_100062C48()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100008278(v3, (uint64_t)qword_1000D69F0);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested turn off optimized battery charging", v6, 2u);
        swift_slowDealloc();
      }

      swift_beginAccess();
      uint64_t v7 = *(void *)(v2 + 40);
      if (v7)
      {
        sub_10000C80C((void *)(v2 + 16), v7);
        sub_1000543C4();
      }
      swift_unknownObjectRelease();
    }
  }
}

void sub_100062DA4()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel];
  if (v1)
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_turnOffOptimizedBatteryChargingButton];
    if (v2)
    {
      id v3 = v1;
      Class v33 = v2;
      id v4 = [v3 attributedText];
      if (v4)
      {
        os_log_type_t v5 = v4;
        uint64_t v6 = (uint64_t)[v4 length];

        if (v6 >= 1)
        {
          id v7 = [v0 contentView];
          id v8 = [v7 mainContentGuide];

          id v32 = self;
          sub_100008E18((uint64_t *)&unk_1000D5090);
          uint64_t v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_1000A3C30;
          id v10 = [v3 topAnchor];
          id v11 = [*(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerLayoutGuide] bottomAnchor];
          id v12 = [v10 constraintEqualToAnchor:v11 constant:20.0];

          *(void *)(v9 + 32) = v12;
          id v13 = [v3 leadingAnchor];
          id v14 = [v8 leadingAnchor];
          id v15 = [v13 constraintEqualToAnchor:v14];

          *(void *)(v9 + 40) = v15;
          id v16 = [v3 trailingAnchor];
          id v17 = [v8 trailingAnchor];
          id v18 = [v16 constraintEqualToAnchor:v17];

          *(void *)(v9 + 48) = v18;
          id v19 = [(objc_class *)v33 topAnchor];
          id v20 = [v3 bottomAnchor];
          id v21 = [v19 constraintEqualToAnchor:v20];

          *(void *)(v9 + 56) = v21;
          id v22 = [(objc_class *)v33 leadingAnchor];
          id v23 = [v8 leadingAnchor];
          id v24 = [v22 constraintEqualToAnchor:v23];

          *(void *)(v9 + 64) = v24;
          id v25 = [(objc_class *)v33 trailingAnchor];
          id v26 = [v8 trailingAnchor];
          id v27 = [v25 constraintEqualToAnchor:v26];

          *(void *)(v9 + 72) = v27;
          id v28 = [(objc_class *)v33 bottomAnchor];
          id v29 = [v8 bottomAnchor];
          id v30 = [v28 constraintLessThanOrEqualToAnchor:v29];

          *(void *)(v9 + 80) = v30;
          specialized Array._endMutation()();
          sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v32 activateConstraints:isa];

          id v3 = v8;
          Class v33 = isa;
        }
      }
    }
  }
}

void sub_1000631FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_100008E18(&qword_1000D5660);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v78 - v8;
  uint64_t v10 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v85 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  Class v88 = (char *)&v78 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v87 = (char *)&v78 - v17;
  uint64_t v84 = v18;
  __chkstk_darwin(v16);
  id v20 = (char *)&v78 - v19;
  id v21 = v2;
  uint64_t v22 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel];
  swift_beginAccess();
  sub_10001A248(v22, (uint64_t)v9, &qword_1000D5660);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10001A2AC((uint64_t)v9, &qword_1000D5660);
    return;
  }
  unint64_t v83 = v20;
  sub_1000682AC((uint64_t)v9, (uint64_t)v20, type metadata accessor for HeadphoneViewModel);
  uint64_t v23 = a1 + *(int *)(v10 + 48);
  int v24 = *(unsigned __int16 *)(v23 + 40);
  uint64_t v25 = a1;
  if ((v24 & 0xE000) == 0xA000 && v24 == 40960)
  {
    int8x16_t v26 = vorrq_s8(*(int8x16_t *)(v23 + 8), *(int8x16_t *)(v23 + 24));
    if (!(*(void *)&vorr_s8(*(int8x8_t *)v26.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v26, v26, 8uLL)) | *(void *)v23))
    {
      sub_100023188((uint64_t)v83, type metadata accessor for HeadphoneViewModel);
      return;
    }
  }
  sub_100068314(a1, (uint64_t)v7, type metadata accessor for HeadphoneViewModel);
  uint64_t v27 = v11;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  swift_beginAccess();
  sub_10003FE28((uint64_t)v7, v22);
  swift_endAccess();
  uint64_t v28 = (uint64_t)v83;
  unsigned int v29 = *(unsigned __int16 *)(v23 + 40);
  id v30 = v21;
  switch(*(unsigned __int16 *)&v83[*(int *)(v10 + 48) + 40] >> 13)
  {
    case 1:
      if ((v29 & 0xE000) != 0x2000) {
        goto LABEL_21;
      }
      break;
    case 2:
      if ((v29 & 0xE000) != 0x4000) {
        goto LABEL_21;
      }
      break;
    case 3:
      if ((v29 & 0xE000) != 0x6000) {
        goto LABEL_21;
      }
      break;
    case 4:
      if ((v29 & 0xE000) != 0x8000) {
        goto LABEL_21;
      }
      break;
    case 5:
      if ((v29 & 0xE000) != 0xA000
        || *(void *)(v23 + 8) | *(void *)v23 | *(void *)(v23 + 16) | *(void *)(v23 + 24) | *(void *)(v23 + 32)
        || v29 != 40960)
      {
        goto LABEL_21;
      }
      break;
    default:
      if (v29 >= 0x2000)
      {
LABEL_21:
        uint64_t v31 = OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_isTransitioning;
        if ((v30[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_isTransitioning] & 1) == 0)
        {
          if (qword_1000D43F8 != -1) {
            swift_once();
          }
          uint64_t v32 = type metadata accessor for Logger();
          sub_100008278(v32, (uint64_t)qword_1000D5FB0);
          uint64_t v33 = v28;
          long long v34 = v87;
          sub_100068314(v33, (uint64_t)v87, type metadata accessor for HeadphoneViewModel);
          uint64_t v35 = (uint64_t)v88;
          sub_100068314(v25, (uint64_t)v88, type metadata accessor for HeadphoneViewModel);
          uint64_t v36 = Logger.logObject.getter();
          int v37 = static os_log_type_t.debug.getter();
          BOOL v38 = os_log_type_enabled(v36, (os_log_type_t)v37);
          uint64_t v82 = v25;
          if (v38)
          {
            int v80 = v37;
            uint64_t v81 = v36;
            uint64_t v39 = swift_slowAlloc();
            uint64_t v79 = (void **)swift_slowAlloc();
            uint64_t aBlock = v79;
            *(_DWORD *)uint64_t v39 = 136315394;
            uint64_t v40 = *(unsigned __int16 *)&v34[*(int *)(v10 + 48) + 40] >> 13;
            unint64_t v41 = 0x80000001000A61D0;
            uint64_t v42 = 0xD000000000000012;
            uint64_t v43 = 0xD000000000000012;
            switch(v40)
            {
              case 1:
                uint64_t v42 = 0xD000000000000015;
                double v44 = "Combined without Case";
                goto LABEL_30;
              case 2:
                uint64_t v42 = 0x69772074696C7053;
                unint64_t v41 = 0xEF65736143206874;
                break;
              case 3:
                double v44 = "Split without Case";
LABEL_30:
                unint64_t v41 = (unint64_t)(v44 - 32) | 0x8000000000000000;
                break;
              case 4:
                uint64_t v42 = 0x2074657364616548;
                unint64_t v41 = 0xEC000000796C6E4FLL;
                break;
              case 5:
                unint64_t v41 = 0xE400000000000000;
                uint64_t v42 = 1701736270;
                break;
              default:
                break;
            }
            uint64_t v89 = sub_10005D8C8(v42, v41, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_100023188((uint64_t)v87, type metadata accessor for HeadphoneViewModel);
            *(_WORD *)(v39 + 12) = 2080;
            uint64_t v45 = (uint64_t)v88;
            unint64_t v46 = 0x80000001000A61D0;
            switch(*(unsigned __int16 *)&v88[*(int *)(v10 + 48) + 40] >> 13)
            {
              case 1:
                uint64_t v43 = 0xD000000000000015;
                double v47 = "Combined without Case";
                goto LABEL_37;
              case 2:
                uint64_t v43 = 0x69772074696C7053;
                unint64_t v46 = 0xEF65736143206874;
                break;
              case 3:
                double v47 = "Split without Case";
LABEL_37:
                unint64_t v46 = (unint64_t)(v47 - 32) | 0x8000000000000000;
                break;
              case 4:
                uint64_t v43 = 0x2074657364616548;
                unint64_t v46 = 0xEC000000796C6E4FLL;
                break;
              case 5:
                unint64_t v46 = 0xE400000000000000;
                uint64_t v43 = 1701736270;
                break;
              default:
                break;
            }
            uint64_t v89 = sub_10005D8C8(v43, v46, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_100023188(v45, type metadata accessor for HeadphoneViewModel);
            double v48 = v81;
            _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v80, "Transitioning battery configuration: %s -> %s", (uint8_t *)v39, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_100023188((uint64_t)v34, type metadata accessor for HeadphoneViewModel);
            sub_100023188(v35, type metadata accessor for HeadphoneViewModel);
          }
          int v49 = *(void **)&v30[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer];
          id v50 = v49;
          id v51 = sub_1000618C0();
          [v51 setAlpha:0.0];
          uint64_t v52 = *(void *)(v23 + 8);
          uint64_t v53 = *(void *)(v23 + 24);
          unsigned int v54 = *(unsigned __int16 *)(v23 + 40);
          switch(v54 >> 13)
          {
            case 1u:
              sub_1000653FC(v52 & 0xFFFFFF01, (char *)v51, *(double *)v23);
              goto LABEL_47;
            case 2u:
              sub_100065C44(v52 & 0xFFFFFF01, v53 & 0xFFFFFF01, v54 & 0x1F01, (char *)v51, *(double *)v23, *(double *)(v23 + 16), *(double *)(v23 + 32));
              goto LABEL_47;
            case 3u:
              sub_1000667BC(v52 & 0xFFFFFF01, (__objc2_ivar *)(*(void *)(v23 + 24) & 0xFFFFFF01), (char *)v51, *(double *)v23, *(double *)(v23 + 16));
              goto LABEL_47;
            case 4u:
              sub_1000670F8(v52 & 0xFFFFFF01, (char *)v51, *(double *)v23);
              goto LABEL_47;
            case 5u:
              goto LABEL_48;
            default:
              sub_10006469C(v52 & 0xFFFFFF01, v53 & 0xFFFFFF01, (char *)v51, *(double *)v23, *(double *)(v23 + 16));
LABEL_47:

LABEL_48:
              id v55 = [v30 contentView];
              [v55 layoutIfNeeded];

              v30[v31] = 1;
              Class v88 = (char *)self;
              uint64_t v56 = swift_allocObject();
              *(void *)(v56 + 16) = v49;
              uint64_t v94 = sub_1000683B4;
              unint64_t v95 = (void *)v56;
              uint64_t aBlock = _NSConcreteStackBlock;
              uint64_t v91 = 1107296256;
              uint64_t v92 = sub_100046658;
              unint64_t v93 = &unk_1000C4EC8;
              uint64_t v87 = (char *)_Block_copy(&aBlock);
              uint64_t v81 = v50;
              swift_release();
              uint64_t v57 = v82;
              uint64_t v58 = v85;
              sub_100068314(v82, v85, type metadata accessor for HeadphoneViewModel);
              unint64_t v59 = (*(unsigned __int8 *)(v27 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
              uint64_t v60 = v49;
              unint64_t v61 = (v84 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v62 = (void *)swift_allocObject();
              v62[2] = v51;
              uint64_t v62[3] = v30;
              v62[4] = v60;
              sub_1000682AC(v58, (uint64_t)v62 + v59, type metadata accessor for HeadphoneViewModel);
              *(void *)((char *)v62 + v61) = ObjectType;
              uint64_t v94 = sub_100068750;
              unint64_t v95 = v62;
              uint64_t aBlock = _NSConcreteStackBlock;
              uint64_t v91 = 1107296256;
              uint64_t v92 = sub_100014BC4;
              unint64_t v93 = &unk_1000C4F18;
              uint64_t v63 = _Block_copy(&aBlock);
              uint64_t v64 = v81;
              id v65 = v51;
              uint64_t v66 = v30;
              swift_release();
              char v67 = v87;
              [v88 animateWithDuration:0 delay:v87 options:v63 animations:0.333 completion:0.0];
              uint64_t v68 = v63;
              uint64_t v25 = v57;
              _Block_release(v68);
              _Block_release(v67);

              uint64_t v28 = (uint64_t)v83;
              break;
          }
        }
      }
      break;
  }
  [v30 updateBatteryLevels];
  uint64_t v69 = *(void **)(v25 + 96);
  if (!v69)
  {
    uint64_t v71 = (id *)&v30[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint];
    swift_beginAccess();
    if (*v71 && ([*v71 isActive] & 1) == 0)
    {
      BOOL v72 = self;
      uint64_t v73 = swift_allocObject();
      swift_unknownObjectUnownedInit();
      uint64_t v94 = sub_10006882C;
      unint64_t v95 = (void *)v73;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v91 = 1107296256;
      uint64_t v92 = sub_100046658;
      unint64_t v93 = &unk_1000C4F68;
      uint64_t v74 = _Block_copy(&aBlock);
      swift_release();
      [v72 animateWithDuration:v74 animations:0.3];
      _Block_release(v74);
    }
    goto LABEL_58;
  }
  uint64_t v70 = *(void **)&v30[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel];
  if (v70) {
    [v70 setAttributedText:v69];
  }
  else {
    id v75 = v69;
  }
  uint64_t v76 = (void **)&v30[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint];
  swift_beginAccess();
  uint64_t v77 = *v76;
  if (v77)
  {
    swift_endAccess();
    [v77 setActive:0];

LABEL_58:
    sub_100023188(v28, type metadata accessor for HeadphoneViewModel);
    return;
  }
  sub_100023188(v28, type metadata accessor for HeadphoneViewModel);
  swift_endAccess();
}

void sub_100063F74(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v25 = a4;
  uint64_t v8 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = self;
  if (qword_1000D4400 != -1) {
    swift_once();
  }
  double v12 = *(double *)&qword_1000D5FC8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  id v30 = sub_100068874;
  uint64_t v31 = (void *)v13;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_100046658;
  unsigned int v29 = &unk_1000C4FB8;
  uint64_t v14 = _Block_copy(&aBlock);
  id v15 = a2;
  id v16 = a3;
  swift_release();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100068314(a5, (uint64_t)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeadphoneViewModel);
  unint64_t v18 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  id v20 = v25;
  v19[2] = v25;
  uint64_t v19[3] = v17;
  v19[4] = v15;
  sub_1000682AC((uint64_t)v11, (uint64_t)v19 + v18, type metadata accessor for HeadphoneViewModel);
  id v30 = sub_100068BF0;
  uint64_t v31 = v19;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_100014BC4;
  unsigned int v29 = &unk_1000C5008;
  id v21 = _Block_copy(&aBlock);
  id v22 = v20;
  id v23 = v15;
  swift_release();
  [v24 animateWithDuration:0 delay:v14 options:v21 animations:v12 completion:0.0];
  _Block_release(v21);
  _Block_release(v14);
}

void sub_100064244(void *a1, void *a2)
{
  [a1 setAlpha:1.0];
  id v3 = [a2 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v4 = v3;
  [v3 setNeedsLayout];

  id v5 = [a2 navigationController];
  if (!v5) {
    return;
  }
  uint64_t v6 = v5;
  id v7 = [v5 parentViewController];

  if (!v7) {
    return;
  }
  id v8 = [v7 view];

  if (!v8)
  {
LABEL_10:
    __break(1u);
    return;
  }
  [v8 layoutIfNeeded];
}

void sub_100064358(int a1, id a2, uint64_t a3, void *a4, uint64_t a5)
{
  if (a2) {
    [a2 removeFromSuperview];
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = (void *)Strong;
    uint64_t v9 = *(void **)(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer);
    *(void *)(Strong + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer) = a4;

    id v10 = a4;
  }
  swift_beginAccess();
  uint64_t v11 = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (v11)
  {
    v11[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_isTransitioning] = 0;
  }
  if ((*(unsigned char *)(a5 + *(int *)(type metadata accessor for HeadphoneViewModel(0) + 60)) & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v12 = swift_unknownObjectWeakLoadStrong();
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      uint64_t v14 = (id *)(v12 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView);
      swift_beginAccess();
      if (*v14)
      {
        id v15 = (char *)*v14;

        id v16 = *(id *)&v15[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView];
        swift_getObjectType();
        dispatch thunk of VideoPlaybackControllable.stop()();
      }
      else
      {
      }
    }
  }
}

void sub_1000644C8()
{
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v1 = *(void **)&Strong[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel];
  if (v1)
  {
    uint64_t v2 = v1;

    [v2 removeFromSuperview];
    uint64_t Strong = v2;
  }

  id v3 = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_turnOffOptimizedBatteryChargingButton];
  if (v4)
  {
    id v5 = v4;

    [v5 removeFromSuperview];
    id v3 = v5;
  }

  uint64_t v6 = (char *)swift_unknownObjectUnownedLoadStrong();
  id v7 = (id *)&v6[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint];
  swift_beginAccess();
  if (*v7)
  {
    id v8 = (char *)*v7;

    [v8 setActive:1];
    uint64_t v6 = v8;
  }

  uint64_t v9 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v10 = [v9 view];

  if (!v10)
  {
    __break(1u);
    goto LABEL_14;
  }
  [v10 setNeedsLayout];

  uint64_t v11 = (void *)swift_unknownObjectUnownedLoadStrong();
  id v12 = [v11 navigationController];

  if (v12)
  {
    id v13 = [v12 parentViewController];

    if (v13)
    {
      id v14 = [v13 view];

      if (v14)
      {
        [v14 layoutIfNeeded];

        return;
      }
LABEL_14:
      __break(1u);
    }
  }
}

void sub_10006469C(int a1, unsigned int a2, char *a3, double a4, double a5)
{
  uint64_t v102 = a3;
  unsigned int v98 = a2;
  LODWORD(v100) = a1;
  uint64_t v8 = sub_100008E18(&qword_1000D4810);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v97 = (uint64_t)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v12 = (char *)&v96 - v11;
  uint64_t v13 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v99 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v103 = (uint64_t)&v96 - v17;
  uint64_t v18 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v18 - 8);
  id v20 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = (int *)type metadata accessor for HeadphoneViewModel(0);
  uint64_t v22 = *((void *)v21 - 1);
  __chkstk_darwin(v21);
  id v24 = (char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = v5;
  uint64_t v25 = v5 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess();
  sub_10001A248(v25, (uint64_t)v20, &qword_1000D5660);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_10001A2AC((uint64_t)v20, &qword_1000D5660);
    return;
  }
  sub_1000682AC((uint64_t)v20, (uint64_t)v24, type metadata accessor for HeadphoneViewModel);
  uint64_t v26 = (uint64_t)&v24[v21[11]];
  sub_10001A248(v26, (uint64_t)v12, &qword_1000D4810);
  unsigned int v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  id v28 = (id)(v14 + 48);
  uint64_t v27 = v29;
  if (v29((uint64_t)v12, 1, v13) == 1)
  {
    sub_100023188((uint64_t)v24, type metadata accessor for HeadphoneViewModel);
    sub_10001A2AC((uint64_t)v12, &qword_1000D4810);
    return;
  }
  uint64_t v30 = v103;
  sub_1000682AC((uint64_t)v12, v103, type metadata accessor for HeadphoneAssets);
  if (v24[v21[15]] == 1)
  {
    sub_100023048((uint64_t)&v24[v21[14]], (uint64_t)v106);
    sub_100023048((uint64_t)v106, (uint64_t)v107);
    if (sub_1000230B0((uint64_t)v107) != 1)
    {
      v111[10] = v107[10];
      v111[11] = v108;
      v111[12] = v109;
      uint64_t v112 = v110;
      v111[6] = v107[6];
      v111[7] = v107[7];
      v111[8] = v107[8];
      v111[9] = v107[9];
      v111[2] = v107[2];
      v111[3] = v107[3];
      v111[4] = v107[4];
      v111[5] = v107[5];
      v111[0] = v107[0];
      v111[1] = v107[1];
      uint64_t v31 = v97;
      sub_10001A248(v26, v97, &qword_1000D4810);
      if (v27(v31, 1, v13) == 1)
      {
        sub_10001A2AC(v31, &qword_1000D4810);
      }
      else
      {
        uint64_t v32 = v31 + *(int *)(v13 + 40);
        uint64_t v33 = *(void **)v32;
        uint64_t v34 = *(void *)(v32 + 8);
        sub_10004D19C(v106, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004D150);
        id v12 = v33;
        sub_100023188(v31, type metadata accessor for HeadphoneAssets);
        if (v33)
        {
          char v35 = v98;
          unsigned int v36 = v98 >> 8;
          char v37 = v100;
          unsigned int v38 = v100 >> 8;
          sub_100008E18(&qword_1000D5B68);
          uint64_t v39 = swift_allocObject();
          *(_OWORD *)(v39 + 16) = xmmword_1000A2760;
          *(double *)(v39 + 32) = a4;
          *(unsigned char *)(v39 + 40) = v37 & 1;
          *(unsigned char *)(v39 + 41) = v38;
          *(double *)(v39 + 48) = a5;
          *(unsigned char *)(v39 + 56) = v35 & 1;
          *(unsigned char *)(v39 + 57) = v36;
          objc_allocWithZone((Class)type metadata accessor for HeadphoneMovieBatteryView());
          uint64_t v40 = v12;
          unint64_t v41 = (void *)sub_100009544(v40, v34, (char *)v111, (char *)v39);
          uint64_t v42 = &v102[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
          swift_beginAccess();
          uint64_t v43 = *(void **)v42;
          double v44 = v41;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v42 = v43;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v43 = sub_10004BBA8(0, v43[2] + 1, 1, v43);
            *(void *)uint64_t v42 = v43;
          }
          unint64_t v47 = v43[2];
          unint64_t v46 = v43[3];
          if (v47 >= v46 >> 1)
          {
            uint64_t v43 = sub_10004BBA8((void *)(v46 > 1), v47 + 1, 1, v43);
            *(void *)uint64_t v42 = v43;
          }
          v43[2] = v47 + 1;
          double v48 = &v43[2 * v47];
          v48[4] = v44;
          v48[5] = &off_1000C26E0;
          swift_endAccess();
          [v44 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v102 addSubview:v44];

          sub_100023188(v103, type metadata accessor for HeadphoneAssets);
          sub_100023188((uint64_t)v24, type metadata accessor for HeadphoneViewModel);
          int v49 = (void **)(v101 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView);
          goto LABEL_47;
        }
        sub_10004D19C(v106, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10002313C);
      }
    }
  }
  unint64_t v50 = *(void *)(v30 + *(int *)(v13 + 32));
  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v61 < 3) {
      goto LABEL_18;
    }
  }
  else if (*(uint64_t *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) < 3)
  {
LABEL_18:
    if (qword_1000D43F8 != -1) {
      swift_once();
    }
    uint64_t v51 = type metadata accessor for Logger();
    sub_100008278(v51, (uint64_t)qword_1000D5FB0);
    uint64_t v52 = v99;
    sub_100068314(v30, (uint64_t)v99, type metadata accessor for HeadphoneAssets);
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v53, v54))
    {

      sub_100023188((uint64_t)v52, type metadata accessor for HeadphoneAssets);
      sub_100023188(v30, type metadata accessor for HeadphoneAssets);
      uint64_t v60 = (uint64_t)v24;
LABEL_40:
      sub_100023188(v60, type metadata accessor for HeadphoneViewModel);
      return;
    }
    id v55 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(_DWORD *)id v55 = 136315138;
    *(void *)&v107[0] = v56;
    uint64_t v100 = (uint64_t)v24;
    v106[0] = *(void *)&v52[*(int *)(v13 + 32)];
    swift_bridgeObjectRetain();
    sub_100008E18(&qword_1000D4A58);
    uint64_t v57 = String.init<A>(reflecting:)();
    v106[0] = sub_10005D8C8(v57, v58, (uint64_t *)v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100023188((uint64_t)v52, type metadata accessor for HeadphoneAssets);
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "Expected 3 images, only have: %s", v55, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v59 = v103;
LABEL_39:
    sub_100023188(v59, type metadata accessor for HeadphoneAssets);
    uint64_t v60 = v100;
    goto LABEL_40;
  }
  uint64_t v96 = v13;
  if ((v50 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
LABEL_28:
    sub_100008E18((uint64_t *)&unk_1000D5090);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_1000A2260;
    *(void *)(v67 + 32) = v65;
    *(void *)(v67 + 40) = v66;
    v105[0] = v67;
    specialized Array._endMutation()();
    unint64_t v68 = v105[0];
    __int16 v69 = v100 & 0xFF01;
    unint64_t v99 = (char *)v65;
    id v12 = (char *)v66;
    uint64_t v70 = (char *)sub_100024AE8(v68, v69, 0, 0, a4);
    sub_1000245D4();
    uint64_t v71 = v21[14];
    uint64_t v100 = (uint64_t)v24;
    sub_100023048((uint64_t)&v24[v71], (uint64_t)v106);
    sub_100023048((uint64_t)v106, (uint64_t)v107);
    int v72 = sub_1000230B0((uint64_t)v107);
    uint64_t v73 = *(void **)&v70[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView];
    if (v73)
    {
      double v74 = *(double *)&v108;
      if (v72 == 1) {
        double v74 = 0.0;
      }
      [v73 setSpacing:v74, v96];
    }
    id v28 = v102;
    id v24 = &v102[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
    swift_beginAccess();
    unint64_t v50 = *(void *)v24;
    id v21 = v70;
    char v75 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)id v24 = v50;
    if (v75) {
      goto LABEL_33;
    }
    goto LABEL_51;
  }
  uint64_t v62 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v62)
  {
    if (v62 != 1)
    {
      uint64_t v63 = *(void **)(v50 + 32);
      uint64_t v64 = *(void **)(v50 + 40);
      id v65 = v63;
      id v66 = v64;
      goto LABEL_28;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_51:
  unint64_t v50 = (unint64_t)sub_10004BBA8(0, *(void *)(v50 + 16) + 1, 1, (void *)v50);
  *(void *)id v24 = v50;
LABEL_33:
  unint64_t v77 = *(void *)(v50 + 16);
  unint64_t v76 = *(void *)(v50 + 24);
  if (v77 >= v76 >> 1)
  {
    unint64_t v50 = (unint64_t)sub_10004BBA8((void *)(v76 > 1), v77 + 1, 1, (void *)v50);
    *(void *)id v24 = v50;
  }
  *(void *)(v50 + 16) = v77 + 1;
  uint64_t v78 = (void *)(v50 + 16 * v77);
  v78[4] = v21;
  v78[5] = &off_1000C3380;
  swift_endAccess();
  [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v28 addSubview:v21];
  uint64_t v79 = (void **)(v101 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
  swift_beginAccess();
  int v80 = *v79;
  *uint64_t v79 = v21;

  uint64_t v81 = *(void **)(v30 + *(int *)(v96 + 36));
  if (!v81)
  {

    uint64_t v59 = v30;
    goto LABEL_39;
  }
  sub_100023048((uint64_t)v106, (uint64_t)v105);
  uint64_t v82 = v12;
  if (sub_1000230B0((uint64_t)v105) == 1)
  {
    uint64_t v83 = 0;
    uint64_t v84 = 0;
  }
  else
  {
    uint64_t v83 = v105[20];
    uint64_t v84 = v105[21];
    swift_bridgeObjectRetain();
  }
  uint64_t v85 = swift_allocObject();
  *(_OWORD *)(v85 + 16) = xmmword_1000A33B0;
  *(void *)(v85 + 32) = v81;
  unint64_t v104 = v85;
  id v86 = v81;
  specialized Array._endMutation()();
  unint64_t v87 = v104;
  id v88 = objc_allocWithZone((Class)type metadata accessor for HeadphoneImageBatteryView());
  uint64_t v89 = sub_100023420((uint64_t)_swiftEmptyArrayStorage, v87, v98 & 0xFF01, v83, v84, a5);
  sub_1000245D4();
  swift_beginAccess();
  uint64_t v90 = *(void **)v24;
  double v44 = v89;
  char v91 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)id v24 = v90;
  if ((v91 & 1) == 0)
  {
    uint64_t v90 = sub_10004BBA8(0, v90[2] + 1, 1, v90);
    *(void *)id v24 = v90;
  }
  unint64_t v93 = v90[2];
  unint64_t v92 = v90[3];
  if (v93 >= v92 >> 1)
  {
    uint64_t v90 = sub_10004BBA8((void *)(v92 > 1), v93 + 1, 1, v90);
    *(void *)id v24 = v90;
  }
  v90[2] = v93 + 1;
  uint64_t v94 = &v90[2 * v93];
  v94[4] = v44;
  v94[5] = &off_1000C3380;
  swift_endAccess();
  [v44 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v102 addSubview:v44];

  sub_100023188(v103, type metadata accessor for HeadphoneAssets);
  sub_100023188(v100, type metadata accessor for HeadphoneViewModel);
  int v49 = (void **)(v101 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView);
LABEL_47:
  swift_beginAccess();
  unint64_t v95 = *v49;
  *int v49 = v44;
}

void sub_1000653FC(int a1, char *a2, double a3)
{
  uint64_t v57 = a2;
  int v54 = a1;
  uint64_t v5 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v5 - 8);
  id v7 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v59 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v56 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  unint64_t v58 = &v53[-v11];
  uint64_t v12 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = (int *)type metadata accessor for HeadphoneViewModel(0);
  uint64_t v16 = *((void *)v15 - 1);
  __chkstk_darwin(v15);
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))&v53[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v55 = v3;
  uint64_t v19 = v3 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess();
  sub_10001A248(v19, (uint64_t)v14, &qword_1000D5660);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10001A2AC((uint64_t)v14, &qword_1000D5660);
    return;
  }
  sub_1000682AC((uint64_t)v14, (uint64_t)v18, type metadata accessor for HeadphoneViewModel);
  sub_10001A248((uint64_t)v18 + v15[11], (uint64_t)v7, &qword_1000D4810);
  if (v59[6](v7, 1, v8) == 1)
  {
    sub_100023188((uint64_t)v18, type metadata accessor for HeadphoneViewModel);
    sub_10001A2AC((uint64_t)v7, &qword_1000D4810);
    return;
  }
  id v20 = v58;
  sub_1000682AC((uint64_t)v7, (uint64_t)v58, type metadata accessor for HeadphoneAssets);
  uint64_t v21 = *(void *)&v20[*(int *)(v8 + 32)];
  if ((unint64_t)v21 >> 62)
  {
    if (v21 < 0) {
      uint64_t v19 = *(void *)&v20[*(int *)(v8 + 32)];
    }
    else {
      uint64_t v19 = v21 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v22 < 2) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22 < 2)
    {
LABEL_7:
      if (qword_1000D43F8 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_100008278(v23, (uint64_t)qword_1000D5FB0);
      id v24 = v56;
      sub_100068314((uint64_t)v20, (uint64_t)v56, type metadata accessor for HeadphoneAssets);
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v59 = v18;
        id v28 = (uint8_t *)v27;
        uint64_t v29 = swift_slowAlloc();
        *(_DWORD *)id v28 = 136315138;
        v61[0] = v29;
        uint64_t v57 = (char *)(v28 + 4);
        v60[0] = *(void *)&v24[*(int *)(v8 + 32)];
        swift_bridgeObjectRetain();
        sub_100008E18(&qword_1000D4A58);
        uint64_t v30 = String.init<A>(reflecting:)();
        v60[0] = sub_10005D8C8(v30, v31, v61);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100023188((uint64_t)v24, type metadata accessor for HeadphoneAssets);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Expected 2 images, only have: %s", v28, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100023188((uint64_t)v20, type metadata accessor for HeadphoneAssets);
        uint64_t v32 = (uint64_t)v59;
      }
      else
      {

        sub_100023188((uint64_t)v24, type metadata accessor for HeadphoneAssets);
        sub_100023188((uint64_t)v20, type metadata accessor for HeadphoneAssets);
        uint64_t v32 = (uint64_t)v18;
      }
      sub_100023188(v32, type metadata accessor for HeadphoneViewModel);
      return;
    }
  }
  if ((v21 & 0xC000000000000001) != 0)
  {
    uint64_t v34 = v15;
    char v35 = v18;
    swift_bridgeObjectRetain();
    id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
LABEL_21:
    sub_100008E18((uint64_t *)&unk_1000D5090);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000A2260;
    *(void *)(inited + 32) = v38;
    *(void *)(inited + 40) = v39;
    v61[0] = inited;
    specialized Array._endMutation()();
    unint64_t v41 = v61[0];
    __int16 v42 = v54 & 0xFF01;
    uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))v38;
    uint64_t v15 = (int *)v39;
    uint64_t v43 = (char *)sub_100024AE8(v41, v42, 0, 0, a3);
    sub_1000245D4();
    uint64_t v19 = (uint64_t)v35;
    sub_100023048((uint64_t)v35 + v34[14], (uint64_t)v60);
    sub_100023048((uint64_t)v60, (uint64_t)v61);
    int v44 = sub_1000230B0((uint64_t)v61);
    uint64_t v45 = *(void **)&v43[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_stackView];
    if (v45)
    {
      double v46 = *(double *)&v61[22];
      if (v44 == 1) {
        double v46 = 0.0;
      }
      [v45 setSpacing:v46];
    }
    id v7 = &v57[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
    swift_beginAccess();
    uint64_t v22 = *(void *)v7;
    uint64_t v21 = v43;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)id v7 = v22;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_26;
    }
    goto LABEL_32;
  }
  uint64_t v33 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v33)
  {
    if (v33 != 1)
    {
      uint64_t v34 = v15;
      char v35 = v18;
      unsigned int v36 = *(void **)(v21 + 32);
      char v37 = *(void **)(v21 + 40);
      id v38 = v36;
      id v39 = v37;
      goto LABEL_21;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_32:
  uint64_t v22 = (uint64_t)sub_10004BBA8(0, *(void *)(v22 + 16) + 1, 1, (void *)v22);
  *(void *)id v7 = v22;
LABEL_26:
  unint64_t v49 = *(void *)(v22 + 16);
  unint64_t v48 = *(void *)(v22 + 24);
  if (v49 >= v48 >> 1)
  {
    uint64_t v22 = (uint64_t)sub_10004BBA8((void *)(v48 > 1), v49 + 1, 1, (void *)v22);
    *(void *)id v7 = v22;
  }
  *(void *)(v22 + 16) = v49 + 1;
  uint64_t v50 = v22 + 16 * v49;
  *(void *)(v50 + 32) = v21;
  *(void *)(v50 + 40) = &off_1000C3380;
  swift_endAccess();
  [(id)v21 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v57 addSubview:v21];

  sub_100023188((uint64_t)v20, type metadata accessor for HeadphoneAssets);
  sub_100023188(v19, type metadata accessor for HeadphoneViewModel);
  uint64_t v51 = (void **)(v55 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
  swift_beginAccess();
  uint64_t v52 = *v51;
  *uint64_t v51 = (void *)v21;
}

void sub_100065C44(int a1, int a2, int a3, char *a4, double a5, double a6, double a7)
{
  long long v108 = a4;
  int v104 = a3;
  LODWORD(v106) = a2;
  LODWORD(v107) = a1;
  uint64_t v11 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = (void *)type metadata accessor for HeadphoneAssets(0);
  uint64_t v14 = *(v110 - 1);
  uint64_t v15 = __chkstk_darwin(v110);
  uint64_t v17 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v97 - v18;
  long long v109 = v7;
  id v20 = (char *)v7 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess();
  uint64_t v21 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v24 = v22 + 48;
  if (v23(v20, 1, v21))
  {
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v14 + 56))(v13, 1, 1, v110);
LABEL_4:
    sub_10001A2AC((uint64_t)v13, &qword_1000D4810);
    return;
  }
  uint64_t v102 = v23;
  uint64_t v103 = v17;
  uint64_t v101 = v24;
  uint64_t v25 = v109;
  Swift::Int v105 = v19;
  sub_10001A248((uint64_t)&v20[*(int *)(v21 + 44)], (uint64_t)v13, &qword_1000D4810);
  os_log_type_t v26 = v110;
  if ((*(unsigned int (**)(char *, uint64_t, void *))(v14 + 48))(v13, 1, v110) == 1) {
    goto LABEL_4;
  }
  uint64_t v27 = (uint64_t)v105;
  sub_1000682AC((uint64_t)v13, (uint64_t)v105, type metadata accessor for HeadphoneAssets);
  id v28 = (id *)*((int *)v26 + 8);
  unint64_t v29 = *(unint64_t *)((char *)v28 + v27);
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v31 = v25;
  int v32 = v107;
  uint64_t v33 = v108;
  if (v30 < 3)
  {
    uint64_t v34 = (uint64_t)v105;
    if (qword_1000D43F8 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_100008278(v35, (uint64_t)qword_1000D5FB0);
    unsigned int v36 = v103;
    sub_100068314(v34, (uint64_t)v103, type metadata accessor for HeadphoneAssets);
    char v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      id v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)id v39 = 136315138;
      v112[0] = v40;
      v111[0] = *(void *)&v36[*((int *)v26 + 8)];
      swift_bridgeObjectRetain();
      sub_100008E18(&qword_1000D4A58);
      uint64_t v41 = String.init<A>(reflecting:)();
      v111[0] = sub_10005D8C8(v41, v42, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100023188((uint64_t)v36, type metadata accessor for HeadphoneAssets);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Expected 3 images, only have: %s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100023188((uint64_t)v105, type metadata accessor for HeadphoneAssets);
    }
    else
    {

      sub_100023188((uint64_t)v36, type metadata accessor for HeadphoneAssets);
      sub_100023188(v34, type metadata accessor for HeadphoneAssets);
    }
    return;
  }
  unint64_t v99 = v20;
  uint64_t v100 = v21;
  if ((v29 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_45;
    }
    id v43 = *(id *)(v29 + 32);
  }
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t inited = swift_initStackObject();
  long long v107 = xmmword_1000A33B0;
  *(_OWORD *)(inited + 16) = xmmword_1000A33B0;
  *(void *)(inited + 32) = v43;
  v112[0] = inited;
  specialized Array._endMutation()();
  unint64_t v45 = v112[0];
  double v46 = (void *)(v32 & 0xFFFFFF01);
  unint64_t v47 = (char *)v43;
  unint64_t v29 = sub_100024AE8(v45, (__int16)v46, 0, 0, a5);
  uint64_t v48 = *(void *)(v29 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  uint64_t v103 = v47;
  if ((v48 & 0xC000000000000001) != 0)
  {
LABEL_45:
    id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_18:
    uint64_t v50 = v49;
    [v49 setTintColor:0];

    sub_1000245D4();
    unint64_t v47 = &v33[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
    swift_beginAccess();
    double v46 = *(void **)v47;
    long long v109 = (id *)(id)v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)unint64_t v47 = v46;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
  if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v49 = *(id *)(v48 + 32);
    goto LABEL_18;
  }
  __break(1u);
LABEL_47:
  double v46 = sub_10004BBA8(0, v46[2] + 1, 1, v46);
  *(void *)unint64_t v47 = v46;
LABEL_19:
  unint64_t v53 = v46[2];
  unint64_t v52 = v46[3];
  if (v53 >= v52 >> 1)
  {
    double v46 = sub_10004BBA8((void *)(v52 > 1), v53 + 1, 1, v46);
    *(void *)unint64_t v47 = v46;
  }
  v46[2] = v53 + 1;
  int v54 = &v46[2 * v53];
  uint64_t v55 = v109;
  v54[4] = v109;
  v54[5] = &off_1000C3380;
  swift_endAccess();
  [v55 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v33 addSubview:v55];
  unint64_t v56 = *(unint64_t *)((char *)v28 + (void)v105);
  if ((v56 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    __int16 v57 = (__int16)v106;
    id v28 = v31;
  }
  else
  {
    __int16 v57 = (__int16)v106;
    if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      goto LABEL_50;
    }
    id v28 = v31;
    id v58 = *(id *)(v56 + 40);
  }
  uint64_t v59 = swift_initStackObject();
  *(_OWORD *)(v59 + 16) = v107;
  *(void *)(v59 + 32) = v58;
  v112[0] = v59;
  specialized Array._endMutation()();
  unint64_t v60 = v112[0];
  uint64_t v61 = v58;
  unint64_t v56 = sub_100024AE8(v60, v57 & 0xFF01, 0, 0, a6);
  uint64_t v62 = *(void *)(v56 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  id v106 = v61;
  if ((v62 & 0xC000000000000001) != 0)
  {
LABEL_50:
    id v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_27;
  }
  if (!*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_52;
  }
  id v63 = *(id *)(v62 + 32);
LABEL_27:
  [v63 setTintColor:0];

  sub_1000245D4();
  swift_beginAccess();
  uint64_t v61 = *(void **)v47;
  unint64_t v56 = (unint64_t)(id)v56;
  char v64 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)unint64_t v47 = v61;
  unsigned int v98 = v47;
  if ((v64 & 1) == 0)
  {
LABEL_52:
    uint64_t v61 = sub_10004BBA8(0, v61[2] + 1, 1, v61);
    *(void *)unint64_t v47 = v61;
  }
  unint64_t v66 = v61[2];
  unint64_t v65 = v61[3];
  if (v66 >= v65 >> 1)
  {
    uint64_t v61 = sub_10004BBA8((void *)(v65 > 1), v66 + 1, 1, v61);
    *(void *)unsigned int v98 = v61;
  }
  v61[2] = v66 + 1;
  uint64_t v67 = &v61[2 * v66];
  v67[4] = v56;
  v67[5] = &off_1000C3380;
  swift_endAccess();
  [(id)v56 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v33 addSubview:v56];
  unint64_t v68 = (id *)((char *)v28 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
  swift_beginAccess();
  __int16 v69 = *v68;
  uint64_t v70 = v109;
  *unint64_t v68 = v109;
  uint64_t v71 = v70;

  int v72 = (id *)((char *)v28 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView);
  swift_beginAccess();
  uint64_t v73 = *v72;
  *int v72 = (void *)v56;
  double v74 = (id *)(id)v56;

  uint64_t v75 = (uint64_t)v105;
  unint64_t v76 = *(void **)&v105[*((int *)v26 + 9)];
  if (v76)
  {
    uint64_t v110 = v71;
    unint64_t v77 = v99;
    uint64_t v78 = v100;
    if (v102(v99, 1, v100)
      || (uint64_t v79 = (uint64_t)&v77[*(int *)(v78 + 56)],
          sub_100023048(v79, (uint64_t)v111),
          sub_100023048((uint64_t)v111, (uint64_t)v112),
          sub_1000230B0((uint64_t)v112) == 1))
    {
      uint64_t v80 = 0;
      uint64_t v81 = 0;
    }
    else
    {
      uint64_t v80 = *(void *)(v79 + 160);
      uint64_t v81 = *(void *)(v79 + 168);
      swift_bridgeObjectRetain();
    }
    __int16 v82 = v104;
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = v107;
    *(void *)(v83 + 32) = v76;
    v112[0] = v83;
    id v84 = v76;
    specialized Array._endMutation()();
    unint64_t v85 = v112[0];
    id v86 = objc_allocWithZone((Class)type metadata accessor for HeadphoneImageBatteryView());
    unint64_t v87 = sub_100023420((uint64_t)_swiftEmptyArrayStorage, v85, v82 & 0xFF01, v80, v81, a7);
    sub_1000245D4();
    id v88 = v98;
    swift_beginAccess();
    uint64_t v89 = *(void **)v88;
    uint64_t v90 = v87;
    char v91 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)id v88 = v89;
    if ((v91 & 1) == 0)
    {
      uint64_t v89 = sub_10004BBA8(0, v89[2] + 1, 1, v89);
      *(void *)unsigned int v98 = v89;
    }
    unint64_t v93 = v89[2];
    unint64_t v92 = v89[3];
    if (v93 >= v92 >> 1)
    {
      uint64_t v89 = sub_10004BBA8((void *)(v92 > 1), v93 + 1, 1, v89);
      *(void *)unsigned int v98 = v89;
    }
    void v89[2] = v93 + 1;
    uint64_t v94 = &v89[2 * v93];
    v94[4] = v90;
    v94[5] = &off_1000C3380;
    swift_endAccess();
    [v90 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v108 addSubview:v90];

    sub_100023188(v75, type metadata accessor for HeadphoneAssets);
    unint64_t v95 = (id *)((char *)v28 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView);
    swift_beginAccess();
    uint64_t v96 = *v95;
    void *v95 = v90;
  }
  else
  {
    sub_100023188((uint64_t)v105, type metadata accessor for HeadphoneAssets);
  }
}

void sub_1000667BC(int a1, __objc2_ivar *a2, char *a3, double a4, double a5)
{
  uint64_t v6 = v5;
  __int16 v69 = a3;
  uint64_t v11 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v20 = (char *)&v64 - v19;
  uint64_t v21 = (char *)v6 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess();
  uint64_t v22 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
LABEL_4:
    sub_10001A2AC((uint64_t)v13, &qword_1000D4810);
    return;
  }
  *(void *)&long long v66 = v18;
  LODWORD(v67) = a1;
  unint64_t v68 = v20;
  sub_10001A248((uint64_t)&v21[*(int *)(v22 + 44)], (uint64_t)v13, &qword_1000D4810);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    goto LABEL_4;
  }
  uint64_t v23 = v68;
  sub_1000682AC((uint64_t)v13, (uint64_t)v68, type metadata accessor for HeadphoneAssets);
  uint64_t v24 = (uint64_t *)*(int *)(v14 + 32);
  unint64_t v25 = *(uint64_t *)((char *)v24 + (void)v23);
  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v34 < 2) {
      goto LABEL_7;
    }
  }
  else if (*(uint64_t *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2)
  {
LABEL_7:
    if (qword_1000D43F8 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100008278(v26, (uint64_t)qword_1000D5FB0);
    uint64_t v27 = v66;
    sub_100068314((uint64_t)v23, v66, type metadata accessor for HeadphoneAssets);
    id v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      v71[0] = v31;
      uint64_t v70 = *(void *)(v27 + *(int *)(v14 + 32));
      swift_bridgeObjectRetain();
      sub_100008E18(&qword_1000D4A58);
      uint64_t v32 = String.init<A>(reflecting:)();
      uint64_t v70 = sub_10005D8C8(v32, v33, (uint64_t *)v71);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100023188(v27, type metadata accessor for HeadphoneAssets);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Expected 2 images, only have: %s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100023188(v27, type metadata accessor for HeadphoneAssets);
    }
    sub_100023188((uint64_t)v23, type metadata accessor for HeadphoneAssets);
    return;
  }
  if ((v25 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    int v35 = v67;
  }
  else
  {
    int v35 = v67;
    if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_35;
    }
    id v36 = *(id *)(v25 + 32);
  }
  uint64_t v37 = sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t inited = swift_initStackObject();
  long long v66 = xmmword_1000A33B0;
  *(_OWORD *)(inited + 16) = xmmword_1000A33B0;
  *(void *)(inited + 32) = v36;
  v71[0] = inited;
  specialized Array._endMutation()();
  unint64_t v39 = v71[0];
  uint64_t v40 = (id *)(v35 & 0xFFFFFF01);
  id v41 = v36;
  unint64_t v25 = sub_100024AE8(v39, v35 & 0xFF01, 0, 0, a4);
  uint64_t v42 = *(void *)(v25 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  id v65 = v41;
  uint64_t v67 = v37;
  if ((v42 & 0xC000000000000001) != 0)
  {
LABEL_35:
    uint64_t v37 = (uint64_t)v24;
    id v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    id v43 = v69;
LABEL_20:
    [v44 setTintColor:0];

    sub_1000245D4();
    uint64_t v24 = (uint64_t *)&v43[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
    swift_beginAccess();
    uint64_t v22 = *v24;
    uint64_t v40 = (id *)(id)v25;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v24 = v22;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_21;
    }
    goto LABEL_37;
  }
  id v43 = v69;
  if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v37 = (uint64_t)v24;
    id v44 = *(id *)(v42 + 32);
    goto LABEL_20;
  }
  __break(1u);
LABEL_37:
  uint64_t v22 = (uint64_t)sub_10004BBA8(0, *(void *)(v22 + 16) + 1, 1, (void *)v22);
  *uint64_t v24 = v22;
LABEL_21:
  unint64_t v47 = *(void *)(v22 + 16);
  unint64_t v46 = *(void *)(v22 + 24);
  if (v47 >= v46 >> 1)
  {
    uint64_t v22 = (uint64_t)sub_10004BBA8((void *)(v46 > 1), v47 + 1, 1, (void *)v22);
    *uint64_t v24 = v22;
  }
  *(void *)(v22 + 16) = v47 + 1;
  uint64_t v48 = v22 + 16 * v47;
  *(void *)(v48 + 32) = v40;
  *(void *)(v48 + 40) = &off_1000C3380;
  swift_endAccess();
  [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v69 addSubview:v40];

  unint64_t v49 = *(void *)&v23[v37];
  if ((v49 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (*(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      goto LABEL_40;
    }
    id v50 = *(id *)(v49 + 40);
  }
  uint64_t v51 = swift_initStackObject();
  *(_OWORD *)(v51 + 16) = v66;
  *(void *)(v51 + 32) = v50;
  v71[0] = v51;
  specialized Array._endMutation()();
  unint64_t v52 = v71[0];
  unint64_t v53 = (void *)(a2 & 0xFFFFFF01);
  uint64_t v23 = (char *)v50;
  unint64_t v49 = sub_100024AE8(v52, (unsigned __int16)a2 & 0xFF01, 0, 0, a5);
  uint64_t v54 = *(void *)(v49 + OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews);
  if ((v54 & 0xC000000000000001) != 0)
  {
LABEL_40:
    id v55 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    a2 = v6;
    goto LABEL_29;
  }
  if (!*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_42;
  }
  a2 = v6;
  id v55 = *(id *)(v54 + 32);
LABEL_29:
  [v55 setTintColor:0];

  sub_1000245D4();
  swift_beginAccess();
  unint64_t v53 = (void *)*v24;
  unint64_t v49 = (unint64_t)(id)v49;
  char v56 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v24 = (uint64_t)v53;
  uint64_t v6 = &stru_1000D0000;
  if ((v56 & 1) == 0)
  {
LABEL_42:
    unint64_t v53 = sub_10004BBA8(0, v53[2] + 1, 1, v53);
    *uint64_t v24 = (uint64_t)v53;
  }
  unint64_t v58 = v53[2];
  unint64_t v57 = v53[3];
  if (v58 >= v57 >> 1)
  {
    unint64_t v53 = sub_10004BBA8((void *)(v57 > 1), v58 + 1, 1, v53);
    *uint64_t v24 = (uint64_t)v53;
  }
  void v53[2] = v58 + 1;
  uint64_t v59 = &v53[2 * v58];
  v59[4] = v49;
  v59[5] = &off_1000C3380;
  swift_endAccess();
  [v49 v6[45].offs];
  [v69 addSubview:v49];

  sub_100023188((uint64_t)v68, type metadata accessor for HeadphoneAssets);
  unint64_t v60 = (void **)((char *)&a2->offs
                + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
  swift_beginAccess();
  uint64_t v61 = *v60;
  *unint64_t v60 = v40;

  uint64_t v62 = (void **)((char *)&a2->offs
                + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView);
  swift_beginAccess();
  id v63 = *v62;
  *uint64_t v62 = (void *)v49;
}

void sub_1000670F8(unsigned int a1, char *a2, double a3)
{
  uint64_t v64 = a2;
  unsigned int v63 = a1;
  uint64_t v5 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadphoneAssets(0);
  uint64_t v9 = *((void *)v8 - 1);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel);
  swift_beginAccess();
  uint64_t v13 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v14 = *(char **)(*(void *)(v13 - 8) + 48);
  if (((unsigned int (*)(void *, uint64_t, uint64_t))v14)(v12, 1, v13))
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v9 + 56))(v7, 1, 1, v8);
LABEL_4:
    sub_10001A2AC((uint64_t)v7, &qword_1000D4810);
    return;
  }
  uint64_t v61 = v3;
  uint64_t v62 = v11;
  uint64_t v15 = v64;
  sub_10001A248((uint64_t)v12 + *(int *)(v13 + 44), (uint64_t)v7, &qword_1000D4810);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v9 + 48))(v7, 1, v8) == 1) {
    goto LABEL_4;
  }
  uint64_t v16 = v62;
  sub_1000682AC((uint64_t)v7, (uint64_t)v62, type metadata accessor for HeadphoneAssets);
  unint64_t v17 = *(void *)&v16[v8[8]];
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v34)
    {
LABEL_7:
      if ((v17 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        uint64_t v14 = v15;
      }
      else
      {
        if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_35;
        }
        uint64_t v14 = v15;
        id v18 = *(id *)(v17 + 32);
      }
      __int16 v19 = v63;
      uint64_t v12 = [self systemGray2Color];
      sub_100008E18((uint64_t *)&unk_1000D5090);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1000A33B0;
      *(void *)(inited + 32) = v18;
      *(void *)&v68[0] = inited;
      specialized Array._endMutation()();
      unint64_t v21 = *(void *)&v68[0];
      uint64_t v8 = (int *)v18;
      uint64_t v22 = (char *)sub_100024AE8(v21, v19 & 0xFF01, 0, 0, a3);
      uint64_t v16 = v22;
      uint64_t v23 = *(void *)&v22[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneImageBatteryView_imageViews];
      if ((v23 & 0xC000000000000001) == 0)
      {
        uint64_t v24 = v61;
        if (!*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_37;
        }
        unint64_t v25 = *(void **)(v23 + 32);
        uint64_t v26 = v22;
        id v27 = v25;
LABEL_13:
        [v27 setTintColor:v12];

        uint64_t v8 = (int *)&v14[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
        swift_beginAccess();
        uint64_t v12 = *(void **)v8;
        uint64_t v16 = v16;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)uint64_t v8 = v12;
        if (isUniquelyReferenced_nonNull_native)
        {
LABEL_14:
          unint64_t v30 = v12[2];
          unint64_t v29 = v12[3];
          if (v30 >= v29 >> 1)
          {
            uint64_t v12 = sub_10004BBA8((void *)(v29 > 1), v30 + 1, 1, v12);
            *(void *)uint64_t v8 = v12;
          }
          v12[2] = v30 + 1;
          uint64_t v31 = &v12[2 * v30];
          v31[4] = v16;
          uint64_t v31[5] = &off_1000C3380;
          swift_endAccess();
          [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v14 addSubview:v16];

          sub_100023188((uint64_t)v62, type metadata accessor for HeadphoneAssets);
          uint64_t v32 = (void **)(v24 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
LABEL_17:
          swift_beginAccess();
          unint64_t v33 = *v32;
          *uint64_t v32 = v16;

          return;
        }
LABEL_37:
        uint64_t v12 = sub_10004BBA8(0, v12[2] + 1, 1, v12);
        *(void *)uint64_t v8 = v12;
        goto LABEL_14;
      }
LABEL_35:
      uint64_t v59 = v16;
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v24 = v61;
      goto LABEL_13;
    }
  }
  else if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_7;
  }
  if (!((unsigned int (*)(void *, uint64_t, uint64_t))v14)(v12, 1, v13))
  {
    sub_100023048((uint64_t)v12 + *(int *)(v13 + 56), (uint64_t)v65);
    sub_100023048((uint64_t)v65, (uint64_t)v66);
    if (sub_1000230B0((uint64_t)v66) != 1)
    {
      v68[4] = v66[4];
      v68[5] = v66[5];
      v68[2] = v66[2];
      v68[3] = v66[3];
      v68[8] = v66[8];
      v68[9] = v66[9];
      v68[6] = v66[6];
      v68[7] = v66[7];
      uint64_t v69 = v67;
      v68[11] = v66[11];
      v68[12] = v66[12];
      v68[10] = v66[10];
      v68[0] = v66[0];
      v68[1] = v66[1];
      int v35 = &v16[v8[10]];
      id v36 = *(void **)v35;
      if (*(void *)v35)
      {
        char v37 = v63;
        unsigned int v38 = v63 >> 8;
        uint64_t v39 = *((void *)v35 + 1);
        sub_100008E18(&qword_1000D5B68);
        uint64_t v40 = swift_initStackObject();
        *(_OWORD *)(v40 + 16) = xmmword_1000A19D0;
        *(double *)(v40 + 32) = a3;
        *(unsigned char *)(v40 + 40) = v37 & 1;
        *(unsigned char *)(v40 + 41) = v38;
        objc_allocWithZone((Class)type metadata accessor for HeadphoneMovieBatteryView());
        id v41 = v36;
        sub_10004D19C(v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004D150);
        uint64_t v42 = (char *)sub_100009544(v41, v39, (char *)v68, (char *)v40);
        id v43 = *(void **)&v42[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneMovieBatteryView_videoView];
        self;
        uint64_t v44 = swift_dynamicCastObjCClass();
        if (v44)
        {
          unint64_t v45 = (void *)v44;
          unint64_t v46 = self;
          id v47 = v43;
          id v48 = [v46 currentTraitCollection];
          id v49 = [v48 userInterfaceStyle];

          if (v49 == (id)2) {
            uint64_t v50 = 1;
          }
          else {
            uint64_t v50 = 2;
          }
          URL._bridgeToObjectiveC()((NSURL *)1);
          unint64_t v52 = v51;
          [v45 updateViewForAssetType:v50 adjustmentsURL:v51];
        }
        unint64_t v53 = &v15[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
        swift_beginAccess();
        uint64_t v54 = *(void **)v53;
        uint64_t v16 = v42;
        char v55 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)unint64_t v53 = v54;
        if ((v55 & 1) == 0)
        {
          uint64_t v54 = sub_10004BBA8(0, v54[2] + 1, 1, v54);
          *(void *)unint64_t v53 = v54;
        }
        unint64_t v57 = v54[2];
        unint64_t v56 = v54[3];
        if (v57 >= v56 >> 1)
        {
          uint64_t v54 = sub_10004BBA8((void *)(v56 > 1), v57 + 1, 1, v54);
          *(void *)unint64_t v53 = v54;
        }
        v54[2] = v57 + 1;
        unint64_t v58 = &v54[2 * v57];
        v58[4] = v16;
        v58[5] = &off_1000C26E0;
        swift_endAccess();
        [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
        [v15 addSubview:v16];

        sub_100023188((uint64_t)v62, type metadata accessor for HeadphoneAssets);
        uint64_t v32 = (void **)(v61 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView);
        goto LABEL_17;
      }
    }
  }
  sub_100023188((uint64_t)v16, type metadata accessor for HeadphoneAssets);
}

uint64_t sub_100067940()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel;
  swift_beginAccess();
  sub_10001A248(v9, (uint64_t)v4, &qword_1000D5660);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10001A2AC((uint64_t)v4, &qword_1000D5660);
  }
  sub_1000682AC((uint64_t)v4, (uint64_t)v8, type metadata accessor for HeadphoneViewModel);
  uint64_t v11 = &v8[*(int *)(v5 + 48)];
  double v12 = *(double *)v11;
  uint64_t v13 = *((void *)v11 + 1);
  double v14 = *((double *)v11 + 2);
  uint64_t v15 = *((void *)v11 + 3);
  unsigned int v16 = *((unsigned __int16 *)v11 + 20);
  switch(v16 >> 13)
  {
    case 1u:
      unint64_t v25 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
      swift_beginAccess();
      uint64_t v26 = *v25;
      if (!*v25) {
        goto LABEL_28;
      }
      char v27 = v13 & 1;
      double v28 = v12;
      goto LABEL_22;
    case 2u:
      double v28 = *((double *)v11 + 4);
      unint64_t v29 = (id *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
      swift_beginAccess();
      if (*v29)
      {
        id v30 = *v29;
        sub_100031078(v13 & 1, v12);
      }
      uint64_t v31 = (id *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView);
      swift_beginAccess();
      if (*v31)
      {
        id v32 = *v31;
        sub_100031078(v15 & 1, v14);
      }
      unint64_t v33 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView);
      swift_beginAccess();
      uint64_t v26 = *v33;
      if (!*v33) {
        goto LABEL_28;
      }
      char v27 = v16 & 1;
      goto LABEL_22;
    case 3u:
      uint64_t v34 = (id *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
      swift_beginAccess();
      if (*v34)
      {
        id v35 = *v34;
        sub_100031078(v13 & 1, v12);
      }
      id v36 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView);
      swift_beginAccess();
      uint64_t v26 = *v36;
      if (!*v36) {
        goto LABEL_28;
      }
      double v28 = v14;
      char v27 = v15 & 1;
LABEL_22:
      swift_endAccess();
      id v37 = v26;
      sub_100031078(v27, v28);

      goto LABEL_27;
    case 4u:
      unsigned int v38 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView);
      swift_beginAccess();
      uint64_t v39 = *v38;
      if (v39)
      {
        sub_100008E18(&qword_1000D5B68);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1000A19D0;
        *(double *)(inited + 32) = v12;
        *(unsigned char *)(inited + 40) = v13 & 1;
        *(unsigned char *)(inited + 41) = BYTE1(v13);
        id v41 = v39;
        sub_10000A46C(inited);
        swift_setDeallocating();
      }
      uint64_t v42 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
      swift_beginAccess();
      id v43 = *v42;
      if (!*v42) {
        goto LABEL_28;
      }
      swift_endAccess();
      id v44 = v43;
      sub_100031078(v13 & 1, v12);

      goto LABEL_27;
    case 5u:
      goto LABEL_27;
    default:
      unint64_t v17 = (id *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView);
      swift_beginAccess();
      if (*v17)
      {
        id v18 = *v17;
        sub_100031078(v13 & 1, v12);
      }
      __int16 v19 = (id *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView);
      swift_beginAccess();
      if (*v19)
      {
        id v20 = *v19;
        sub_100031078(v15 & 1, v14);
      }
      unint64_t v21 = (void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView);
      swift_beginAccess();
      uint64_t v22 = *v21;
      if (v22)
      {
        swift_endAccess();
        sub_100008E18(&qword_1000D5B68);
        uint64_t v23 = swift_initStackObject();
        *(_OWORD *)(v23 + 16) = xmmword_1000A2760;
        *(double *)(v23 + 32) = v12;
        *(unsigned char *)(v23 + 40) = v13 & 1;
        *(unsigned char *)(v23 + 41) = BYTE1(v13);
        *(double *)(v23 + 48) = v14;
        *(unsigned char *)(v23 + 56) = v15 & 1;
        *(unsigned char *)(v23 + 57) = BYTE1(v15);
        id v24 = v22;
        sub_10000A46C(v23);
        swift_setDeallocating();

LABEL_27:
        uint64_t result = sub_100023188((uint64_t)v8, type metadata accessor for HeadphoneViewModel);
      }
      else
      {
LABEL_28:
        sub_100023188((uint64_t)v8, type metadata accessor for HeadphoneViewModel);
        uint64_t result = swift_endAccess();
      }
      break;
  }
  return result;
}

uint64_t sub_100068110()
{
  return type metadata accessor for HeadphoneBatteryViewController();
}

uint64_t type metadata accessor for HeadphoneBatteryViewController()
{
  uint64_t result = qword_1000D6048;
  if (!qword_1000D6048) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100068164()
{
  sub_100022D30();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100068238()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_type);
}

uint64_t sub_10006824C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100068284()
{
}

uint64_t sub_10006828C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006829C()
{
  return swift_release();
}

void sub_1000682A4()
{
}

uint64_t sub_1000682AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100068314(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10006837C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000683B4()
{
  id result = *(id *)(v0 + 16);
  if (result) {
    return [result setAlpha:0.0];
  }
  return result;
}

uint64_t sub_1000683D0()
{
  uint64_t v1 = (int *)type metadata accessor for HeadphoneViewModel(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  uint64_t v5 = (char *)v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v6 = (char *)v0 + v3 + v1[11];
  uint64_t v7 = (int *)type metadata accessor for HeadphoneAssets(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {
    uint64_t v16 = v4;
    uint64_t v17 = (v2 + 40) & ~v2;
    uint64_t v18 = v2;
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void (**)(char *, uint64_t))(v9 + 8);
    v10(v6, v8);
    v10(&v6[v7[5]], v8);
    uint64_t v11 = &v6[v7[6]];
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
      v10(v11, v8);
    }
    double v12 = &v6[v7[7]];
    uint64_t v13 = type metadata accessor for HeadphoneAssets.Feature(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      v10(v12, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();

    uint64_t v3 = v17;
    uint64_t v2 = v18;
    uint64_t v4 = v16;
  }
  if (*(void *)&v5[v1[13] + 8])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)&v5[v1[14] + 152])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double v14 = &v5[v1[19]];
  if (*((void *)v14 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

void sub_100068750(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for HeadphoneViewModel(0) - 8);
  uint64_t v4 = (void *)v1[2];
  uint64_t v5 = (void *)v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100063F74(a1, v4, v5, v6, v7);
}

uint64_t sub_1000687F4()
{
  swift_unknownObjectUnownedDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10006882C()
{
}

uint64_t sub_100068834()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100068874()
{
  sub_100064244(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10006887C()
{
  uint64_t v1 = (int *)type metadata accessor for HeadphoneViewModel(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);

  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v6 = v0 + v3 + v1[11];
  uint64_t v7 = (int *)type metadata accessor for HeadphoneAssets(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {
    uint64_t v16 = v4;
    uint64_t v17 = (v2 + 40) & ~v2;
    uint64_t v18 = v2;
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v10(v6, v8);
    v10(v6 + v7[5], v8);
    uint64_t v11 = v6 + v7[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
      v10(v11, v8);
    }
    uint64_t v12 = v6 + v7[7];
    uint64_t v13 = type metadata accessor for HeadphoneAssets.Feature(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
    {
      v10(v12, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();

    uint64_t v3 = v17;
    uint64_t v2 = v18;
    uint64_t v4 = v16;
  }
  if (*(void *)(v5 + v1[13] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v5 + v1[14] + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v5 + v1[19];
  if (*(void *)(v14 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100068BF0(int a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for HeadphoneViewModel(0) - 8);
  uint64_t v4 = (void *)v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100064358(a1, v4, v5, v6, v7);
}

id sub_100068C68(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_optimizedBatteryChargingLabel] = 0;
  *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainer] = 0;
  uint64_t v5 = OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerLayoutGuide;
  id v6 = objc_allocWithZone((Class)UILayoutGuide);
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_batteryContainerVerticalConstraint] = 0;
  uint64_t v8 = &v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_viewModel];
  uint64_t v9 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_leftBatteryView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_caseBatteryView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_movieBatteryView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_turnOffOptimizedBatteryChargingButton] = 0;
  v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_isTransitioning] = 0;
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v7[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_type] = 2;

  v11.receiver = v7;
  v11.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_100068E08()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[OBJC_IVAR____TtC20HeadphoneProxService36SoftwareUpdateRequiredViewController_offsetIcon] = 0;
  v18.receiver = v0;
  v18.super_class = ObjectType;
  [super viewDidLoad];
  uint64_t v9 = (uint64_t)&v0[OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_viewModel];
  swift_beginAccess();
  sub_100069470(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_100069410((uint64_t)v4);
  }
  sub_100022FE4((uint64_t)v4, (uint64_t)v8);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_100069510;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100012FF0;
  void aBlock[3] = &unk_1000C5098;
  uint64_t v13 = _Block_copy(aBlock);
  id v14 = [self actionWithTitle:v12 style:1 handler:v13];

  _Block_release(v13);
  swift_release();
  swift_release();
  id v15 = [v0 addAction:v14];

  return sub_10003F854((uint64_t)v8);
}

void sub_1000690C8()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    if (*(void *)&Strong[OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_presenter])
    {
      swift_unknownObjectRetain();

      sub_10008B2E4();
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10003C74C();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_10006927C()
{
  sub_100069410(v0 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_viewModel);

  return swift_unknownObjectRelease();
}

uint64_t sub_100069308()
{
  return type metadata accessor for HeadphoneUnsupportedViewController();
}

uint64_t type metadata accessor for HeadphoneUnsupportedViewController()
{
  uint64_t result = qword_1000D6090;
  if (!qword_1000D6090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006935C()
{
  sub_100022D30();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100069400()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService34HeadphoneUnsupportedViewController_type);
}

uint64_t sub_100069410(uint64_t a1)
{
  uint64_t v2 = sub_100008E18(&qword_1000D5660);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100069470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D5660);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000694D8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100069510()
{
}

uint64_t sub_100069518(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100069528()
{
  return swift_release();
}

uint64_t sub_100069530()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D60A0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D60A0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000695F8(void *a1)
{
  uint64_t v2 = sub_100008E18(&qword_1000D4800);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - v10;
  id v12 = [a1 traitCollection];
  id v13 = [v12 userInterfaceStyle];

  if (v13 == (id)1) {
    uint64_t v14 = 19788;
  }
  else {
    uint64_t v14 = 19780;
  }
  swift_getObjectType();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = [self bundleForClass:ObjCClassFromMetadata];
  unint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  unint64_t v25 = 0xD000000000000010;
  unint64_t v26 = 0x80000001000A9FC0;
  v17._uint64_t countAndFlagsBits = v14;
  v17._object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v16 URLForResource:v18 withExtension:v19];

  if (v20)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v21(v4, v9, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if (result != 1)
    {
      v21(v11, v4, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      id v23 = objc_allocWithZone((Class)type metadata accessor for ProxMovieLoopPlayer());
      id v24 = sub_100027038((uint64_t)v9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 130.0, 130.0);
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      return (uint64_t)v24;
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  __break(1u);
  return result;
}

id sub_10006998C(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1000699F0()
{
  id v0 = [objc_allocWithZone((Class)UIView) init];
  id v1 = sub_10006998C(&OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___movieLoopView, (uint64_t (*)(uint64_t))sub_1000695F8);
  [v0 addSubview:v1];

  uint64_t v2 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000A2260;
  id v4 = sub_10006998C(&OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___movieLoopView, (uint64_t (*)(uint64_t))sub_1000695F8);
  id v5 = [v4 centerXAnchor];

  id v6 = [v0 centerXAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = sub_10006998C(&OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___movieLoopView, (uint64_t (*)(uint64_t))sub_1000695F8);
  id v9 = [v8 centerYAnchor];

  id v10 = [v0 centerYAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v3 + 40) = v11;
  specialized Array._endMutation()();
  sub_10000A968();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v13 = [v0 heightAnchor];
  id v14 = [v13 constraintEqualToConstant:180.0];

  [v14 setActive:1];
  return v0;
}

void sub_100069C68()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  __chkstk_darwin(v4);
  id v8 = (char *)v33 - v7 + 40;
  v35.receiver = v1;
  v35.super_class = ObjectType;
  [super viewDidLoad];
  [v1 setDismissalType:1];
  id v9 = &v1[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_presenter];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = Strong + 16;
    swift_beginAccess();
    sub_10000C744(v11, (uint64_t)v33);
    swift_unknownObjectRelease();
    uint64_t v12 = v34;
    if (v34)
    {
      id v13 = sub_10000C80C(v33, v34);
      uint64_t v14 = *(void *)(v12 - 8);
      __chkstk_darwin(v13);
      id v16 = (void *)((char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0) + 40);
      (*(void (**)(void *))(v14 + 16))(v16);
      sub_10000C7AC((uint64_t)v33);
      uint64_t v17 = *v16 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v17, (uint64_t)v6);
      (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v12);
      sub_10000C8B4((uint64_t)v6, (uint64_t)v8);
      id v18 = [v1 contentView];
      id v19 = sub_10006998C(&OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___topAsset, (uint64_t (*)(uint64_t))sub_1000699F0);
      [v18 addSubview:v19];

      id v20 = sub_10006998C(&OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___topAsset, (uint64_t (*)(uint64_t))sub_1000699F0);
      id v21 = [v1 contentView];
      id v22 = [v21 mainContentGuide];

      [v20 pinToOtherWithLayoutGuide:v22];
      sub_100008E18(&qword_1000D47A0);
      uint64_t v23 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
      uint64_t v24 = *(void *)(v23 - 8);
      unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1000A19D0;
      (*(void (**)(unint64_t, void, uint64_t))(v24 + 104))(v26 + v25, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.headGestures(_:), v23);
      swift_bridgeObjectRetain();
      swift_retain();
      dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for HeadphoneYodelHearingProtectionViewController();
      uint64_t v27 = swift_unknownObjectWeakLoadStrong();
      sub_10001AF4C(v1, (uint64_t)v8, v27, *((void *)v9 + 1));
      swift_unknownObjectRelease();
      sub_10000C918((uint64_t)v8);
      return;
    }
    sub_10000C7AC((uint64_t)v33);
  }
  if (qword_1000D4408 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_100008278(v28, (uint64_t)qword_1000D60A0);
  unint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Head Gestures: Headphone Model is nil, exiting", v31, 2u);
    swift_slowDealloc();
  }
}

void sub_10006A318()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setSubtitle:v2];

  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10006A798;
  uint64_t v18 = v3;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100012FF0;
  id v16 = &unk_1000C5128;
  uint64_t v5 = _Block_copy(&v13);
  id v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:0 handler:v5];

  _Block_release(v5);
  swift_release();
  swift_release();

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_10006A7E0;
  uint64_t v18 = v8;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100012FF0;
  id v16 = &unk_1000C5150;
  id v10 = _Block_copy(&v13);
  id v11 = [v6 actionWithTitle:v9 style:1 handler:v10];

  _Block_release(v10);
  swift_release();
  swift_release();
  id v12 = [v0 addAction:v11];
}

void sub_10006A5F0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      a3();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneHeadGesturesUpsellViewController()
{
  return self;
}

uint64_t sub_10006A750()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_type);
}

uint64_t sub_10006A760()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10006A798(uint64_t a1)
{
  sub_10006A5F0(a1, v1, (void (*)(void))sub_10008D0BC);
}

uint64_t sub_10006A7C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006A7D8()
{
  return swift_release();
}

void sub_10006A7E0(uint64_t a1)
{
  sub_10006A5F0(a1, v1, (void (*)(void))sub_10008D33C);
}

void sub_10006A810()
{
  if (qword_1000D4428 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1000D9270;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self _systemImageNamed:v1 withConfiguration:v0];

  if (!v2)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (qword_1000D4430 != -1) {
    swift_once();
  }
  id v3 = [v2 imageByApplyingSymbolConfiguration:qword_1000D9278];

  if (!v3) {
    goto LABEL_9;
  }
}

id sub_10006A934(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_headphoneProxFeatureManager;
  type metadata accessor for HeadphoneProxFeatureManager();
  uint64_t v5 = v1;
  *(void *)&v1[v4] = static HeadphoneProxFeatureManager.shared.getter();
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___movieLoopView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController____lazy_storage___topAsset] = 0;
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC20HeadphoneProxService41HeadphoneHeadGesturesUpsellViewController_type] = 13;

  v7.receiver = v5;
  v7.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_10006AA04()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D6108);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D6108);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL sub_10006AACC()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___forceShowWhatsNew;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___forceShowWhatsNew);
  if (v2 != 2) {
    return v2 & 1;
  }
  id v3 = (__CFString *)String._bridgeToObjectiveC()();
  CFPreferencesAppSynchronize(v3);

  uint64_t v4 = (__CFString *)String._bridgeToObjectiveC()();
  uint64_t v5 = (__CFString *)String._bridgeToObjectiveC()();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v4, v5, 0);

  BOOL result = AppBooleanValue != 0;
  *(unsigned char *)(v0 + v1) = result;
  return result;
}

uint64_t sub_10006ABA0()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___featureMap;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___featureMap))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___featureMap);
  }
  else
  {
    swift_unknownObjectWeakInit();
    sub_10006AC28();
    uint64_t v2 = v3;
    swift_unknownObjectWeakDestroy();
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_10006AC28()
{
  uint64_t v0 = sub_100008E18(&qword_1000D5B80);
  unint64_t v143 = *(void *)(v0 - 8);
  uint64_t v1 = *(void *)(v143 + 64);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v125 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v5 = __chkstk_darwin(v4);
  long long v138 = v3;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v136 = v3;
  __chkstk_darwin(v6);
  Class v144 = (uint64_t (*)())v3;
  uint64_t v7 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v148 = *(void *)(v7 - 8);
  uint64_t v149 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  long long v141 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  int v139 = (char *)&v125 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v137 = (char *)&v125 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v135 = (char *)&v125 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v125 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  long long v142 = v3;
  uint64_t v20 = __chkstk_darwin(v19);
  Class v140 = v3;
  uint64_t v21 = __chkstk_darwin(v20);
  id v146 = v3;
  uint64_t v22 = __chkstk_darwin(v21);
  char v145 = v3;
  __chkstk_darwin(v22);
  uint64_t v23 = (uint64_t)v3;
  uint64_t v24 = type metadata accessor for HeadphoneModel();
  uint64_t v134 = *(void *)(v24 - 8);
  uint64_t v25 = *(void *)(v134 + 64);
  uint64_t v26 = __chkstk_darwin(v24 - 8);
  uint64_t v27 = __chkstk_darwin(v26);
  unint64_t v29 = (char *)&v125 - v28;
  __chkstk_darwin(v27);
  uint64_t v147 = (uint64_t)&v125 - v30;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v32 = (char *)Strong;
    uint64_t v33 = swift_unknownObjectWeakLoadStrong();
    if (v33)
    {
      uint64_t v128 = (uint64_t)&v125 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v34 = v33 + 16;
      swift_beginAccess();
      sub_10001A248(v34, (uint64_t)&v150, &qword_1000D4798);
      swift_unknownObjectRelease();
      uint64_t v35 = v151;
      if (v151)
      {
        char v125 = v3;
        uint64_t v127 = v3;
        id v36 = sub_10000C80C(&v150, v151);
        char v133 = &v125;
        uint64_t v37 = *(void *)(v35 - 8);
        __chkstk_darwin(v36);
        uint64_t v39 = (char **)((char *)&v125 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
        (*(void (**)(void *))(v37 + 16))(v39);
        sub_10001A2AC((uint64_t)&v150, &qword_1000D4798);
        uint64_t v40 = v0;
        uint64_t v41 = *v39 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
        swift_beginAccess();
        sub_10000C850(v41, (uint64_t)v29);
        (*(void (**)(void *, uint64_t))(v37 + 8))(v39, v35);
        sub_10000C8B4((uint64_t)v29, v147);
        id v126 = v32;
        uint64_t v42 = *(uint64_t (**)())&v32[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_listBuilder];
        uint64_t v44 = v148;
        uint64_t v43 = v149;
        uint64_t v45 = *(void (**)(char *, void, uint64_t))(v148 + 104);
        uint64_t v131 = v148 + 104;
        uint64_t v130 = v45;
        v45(v18, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.headGestures(_:), v149);
        unint64_t v46 = v144;
        id v47 = (uint64_t (**)())((char *)v144 + *(int *)(v40 + 48));
        id v48 = *(void (**)(uint64_t (*)(), char *, uint64_t))(v44 + 32);
        v48(v144, v18, v43);
        *id v47 = sub_10006E964;
        v47[1] = v42;
        Class v132 = (void (*)(char *, char *, uint64_t))v48;
        v48((uint64_t (*)())v23, (char *)v46, v43);
        char v133 = (char **)v40;
        id v49 = (uint64_t (**)())(v23 + *(int *)(v40 + 48));
        uint64_t v50 = swift_allocObject();
        *(void *)(v50 + 16) = sub_10006E964;
        *(void *)(v50 + 24) = v42;
        *id v49 = sub_10004CD04;
        v49[1] = (uint64_t (*)())v50;
        Class v144 = v42;
        swift_retain_n();
        unint64_t v51 = sub_10004C34C(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
        unint64_t v53 = *(void *)(v51 + 16);
        unint64_t v52 = *(void *)(v51 + 24);
        unint64_t v54 = v51;
        uint64_t v148 = v44 + 32;
        if (v53 >= v52 >> 1) {
          unint64_t v54 = sub_10004C34C(v52 > 1, v53 + 1, 1, v51);
        }
        unint64_t v55 = v143;
        *(void *)(v54 + 16) = v53 + 1;
        unint64_t v143 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
        uint64_t v129 = *(void *)(v55 + 72);
        sub_10006E8FC(v23, v54 + v143 + v129 * v53);
        uint64_t v56 = v147;
        uint64_t v57 = *(void *)(v147 + 128);
        uint64_t v58 = *(void *)(v147 + 136);
        swift_bridgeObjectRetain();
        LOBYTE(v57) = sub_10001E0E8(v57, v58);
        swift_bridgeObjectRelease();
        if (v57)
        {
          uint64_t v59 = v135;
          uint64_t v60 = v149;
          v130(v135, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v149);
          uint64_t v61 = v128;
          sub_10000C850(v56, v128);
          unint64_t v62 = (*(unsigned __int8 *)(v134 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = v144;
          sub_10000C8B4(v61, v63 + v62);
          uint64_t v64 = v133;
          id v65 = v136;
          long long v66 = (uint64_t (**)())&v136[*((int *)v133 + 12)];
          uint64_t v67 = v132;
          v132(v136, v59, v60);
          *long long v66 = sub_10006EC58;
          v66[1] = (uint64_t (*)())v63;
          unint64_t v68 = v145;
          v67(v145, v65, v60);
          uint64_t v69 = (uint64_t (**)())&v68[*((int *)v64 + 12)];
          uint64_t v70 = swift_allocObject();
          *(void *)(v70 + 16) = sub_10006EC58;
          *(void *)(v70 + 24) = v63;
          *uint64_t v69 = sub_10006ECE0;
          v69[1] = (uint64_t (*)())v70;
          unint64_t v71 = *(void *)(v54 + 16);
          unint64_t v72 = *(void *)(v54 + 24);
          swift_retain();
          unint64_t v73 = v54;
          if (v71 >= v72 >> 1) {
            unint64_t v73 = sub_10004C34C(v72 > 1, v71 + 1, 1, v54);
          }
          *(void *)(v73 + 16) = v71 + 1;
          sub_10006E8FC((uint64_t)v145, v73 + v143 + v71 * v129);
        }
        else
        {
          unint64_t v73 = v54;
        }
        uint64_t v78 = *(void *)(v56 + 128);
        uint64_t v79 = *(void *)(v56 + 136);
        swift_bridgeObjectRetain();
        LOBYTE(v78) = sub_10001D89C(v78, v79);
        swift_bridgeObjectRelease();
        if (v78)
        {
          uint64_t v80 = v137;
          uint64_t v81 = v149;
          v130(v137, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v149);
          __int16 v82 = v133;
          uint64_t v83 = v138;
          id v84 = (uint64_t (**)())&v138[*((int *)v133 + 12)];
          unint64_t v85 = v132;
          v132(v138, v80, v81);
          id v86 = v144;
          *id v84 = sub_10006E9BC;
          v84[1] = v86;
          uint64_t v87 = (uint64_t)v146;
          v85(v146, v83, v81);
          id v88 = (uint64_t (**)())(v87 + *((int *)v82 + 12));
          uint64_t v89 = swift_allocObject();
          *(void *)(v89 + 16) = sub_10006E9BC;
          *(void *)(v89 + 24) = v86;
          *id v88 = sub_10006ECE0;
          v88[1] = (uint64_t (*)())v89;
          unint64_t v90 = *(void *)(v73 + 16);
          unint64_t v91 = *(void *)(v73 + 24);
          swift_retain();
          if (v90 >= v91 >> 1) {
            unint64_t v73 = sub_10004C34C(v91 > 1, v90 + 1, 1, v73);
          }
          *(void *)(v73 + 16) = v90 + 1;
          sub_10006E8FC((uint64_t)v146, v73 + v143 + v90 * v129);
        }
        uint64_t v92 = *(void *)(v56 + 128);
        uint64_t v93 = *(void *)(v56 + 136);
        swift_bridgeObjectRetain();
        LOBYTE(v92) = sub_10001D880(v92, v93);
        swift_bridgeObjectRelease();
        if (v92)
        {
          uint64_t v94 = v139;
          uint64_t v95 = v149;
          v130(v139, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v149);
          uint64_t v96 = v133;
          uint64_t v97 = v125;
          unsigned int v98 = (uint64_t (**)())&v125[*((int *)v133 + 12)];
          unint64_t v99 = v132;
          v132(v125, v94, v95);
          uint64_t v100 = v144;
          *unsigned int v98 = sub_10006E9B4;
          v98[1] = v100;
          uint64_t v101 = (uint64_t)v140;
          v99(v140, v97, v95);
          uint64_t v102 = (uint64_t (**)())(v101 + *((int *)v96 + 12));
          uint64_t v103 = swift_allocObject();
          *(void *)(v103 + 16) = sub_10006E9B4;
          *(void *)(v103 + 24) = v100;
          *uint64_t v102 = sub_10006ECE0;
          v102[1] = (uint64_t (*)())v103;
          unint64_t v104 = *(void *)(v73 + 16);
          unint64_t v105 = *(void *)(v73 + 24);
          swift_retain();
          if (v104 >= v105 >> 1) {
            unint64_t v73 = sub_10004C34C(v105 > 1, v104 + 1, 1, v73);
          }
          *(void *)(v73 + 16) = v104 + 1;
          sub_10006E8FC(v101, v73 + v143 + v104 * v129);
        }
        if (qword_1000D4428 != -1) {
          swift_once();
        }
        id v106 = (id)qword_1000D9270;
        NSString v107 = String._bridgeToObjectiveC()();
        id v108 = [self _systemImageNamed:v107 withConfiguration:v106];

        if (v108)
        {
          if (qword_1000D4430 != -1) {
            swift_once();
          }
          id v146 = (char *)v73;
          long long v109 = (char *)[v108 imageByApplyingSymbolConfiguration:qword_1000D9278];

          if (v109)
          {
            uint64_t v110 = v141;
            uint64_t v111 = v149;
            v130(v141, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.improvedVoiceQuality(_:), v149);
            uint64_t v112 = swift_allocObject();
            *(void *)(v112 + 16) = v144;
            *(void *)(v112 + 24) = v109;
            uint64_t v113 = v133;
            uint64_t v114 = v127;
            os_log_t v115 = (uint64_t (**)())&v127[*((int *)v133 + 12)];
            char v145 = v109;
            int v116 = v132;
            v132(v127, v110, v111);
            *os_log_t v115 = sub_10006E9AC;
            v115[1] = (uint64_t (*)())v112;
            uint64_t v117 = (uint64_t)v142;
            v116(v142, v114, v111);
            uint64_t v118 = (uint64_t (**)())(v117 + *((int *)v113 + 12));
            uint64_t v119 = swift_allocObject();
            *(void *)(v119 + 16) = sub_10006E9AC;
            *(void *)(v119 + 24) = v112;
            *uint64_t v118 = sub_10006ECE0;
            v118[1] = (uint64_t (*)())v119;
            unint64_t v120 = (unint64_t)v146;
            unint64_t v121 = *((void *)v146 + 2);
            unint64_t v122 = *((void *)v146 + 3);
            swift_retain();
            uint64_t v123 = v145;
            if (v121 >= v122 >> 1) {
              unint64_t v120 = sub_10004C34C(v122 > 1, v121 + 1, 1, v120);
            }
            uint64_t v124 = v147;
            *(void *)(v120 + 16) = v121 + 1;
            sub_10006E8FC(v117, v120 + v143 + v121 * v129);
            swift_release();

            sub_10000C918(v124);
            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        return;
      }
      sub_10001A2AC((uint64_t)&v150, &qword_1000D4798);
    }
  }
  if (qword_1000D4418 != -1) {
    swift_once();
  }
  uint64_t v74 = type metadata accessor for Logger();
  sub_100008278(v74, (uint64_t)qword_1000D9250);
  uint64_t v75 = Logger.logObject.getter();
  os_log_type_t v76 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v75, v76))
  {
    unint64_t v77 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v77 = 0;
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "no features we are dallocating", v77, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10006BB2C(uint64_t a1)
{
  sub_10006A810();
  uint64_t v3 = v2;
  id v4 = [objc_allocWithZone((Class)UIImageView) initWithImage:v2];
  id v5 = [self systemBlueColor];
  [v4 setTintColor:v5];

  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setContentMode:1];

  uint64_t v6 = self;
  id v7 = [v6 mainBundle];
  v19._object = (void *)0xE000000000000000;
  v8._uint64_t countAndFlagsBits = 0x5345475F44414548;
  v8._object = (void *)0xED00005345525554;
  v9.value._uint64_t countAndFlagsBits = 0xD000000000000014;
  v9.value._object = (void *)0x80000001000A8190;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v19);

  id v12 = [v6 mainBundle];
  v13._uint64_t countAndFlagsBits = 0xD000000000000016;
  v20._object = (void *)0xE000000000000000;
  v13._object = (void *)0x80000001000A76F0;
  v14.value._uint64_t countAndFlagsBits = 0xD000000000000014;
  v14.value._object = (void *)0x80000001000A8190;
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0;
  Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v20);

  objc_allocWithZone((Class)type metadata accessor for ProxCardBulletView());
  id v17 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10006EE00(v17, (void *)v11._countAndFlagsBits, v11._object, v16._countAndFlagsBits, v16._object);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006BDB0(uint64_t a1)
{
  sub_10001DB4C();
  uint64_t v3 = v2;
  id v4 = [objc_allocWithZone((Class)UIImageView) initWithImage:v2];
  id v5 = [self systemBlueColor];
  [v4 setTintColor:v5];

  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setContentMode:1];

  uint64_t v6 = (void *)sub_10001E340();
  Swift::String v8 = v7;
  swift_bridgeObjectRelease();
  sub_10001E340();
  uint64_t v10 = v9;
  id v12 = v11;
  swift_bridgeObjectRelease();
  objc_allocWithZone((Class)type metadata accessor for ProxCardBulletView());
  id v13 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10006EE00(v13, v6, v8, v10, v12);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006BF7C(uint64_t a1)
{
  sub_10001DB14();
  uint64_t v3 = v2;
  id v4 = [objc_allocWithZone((Class)UIImageView) initWithImage:v2];
  id v5 = [self systemBlueColor];
  [v4 setTintColor:v5];

  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setContentMode:1];

  uint64_t v6 = self;
  id v7 = [v6 mainBundle];
  v8._uint64_t countAndFlagsBits = 0xD000000000000020;
  v19._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001000A7240;
  v9.value._uint64_t countAndFlagsBits = 0xD000000000000011;
  v9.value._object = (void *)0x80000001000A6610;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v19);

  id v12 = [v6 mainBundle];
  v13._uint64_t countAndFlagsBits = 0xD000000000000023;
  v20._object = (void *)0xE000000000000000;
  v13._object = (void *)0x80000001000A7210;
  v14.value._uint64_t countAndFlagsBits = 0xD000000000000011;
  v14.value._object = (void *)0x80000001000A6610;
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0;
  Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v20);

  objc_allocWithZone((Class)type metadata accessor for ProxCardBulletView());
  id v17 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10006EE00(v17, (void *)v11._countAndFlagsBits, v11._object, v16._countAndFlagsBits, v16._object);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006C1F4(uint64_t a1)
{
  sub_10001DB30();
  uint64_t v3 = v2;
  id v4 = [objc_allocWithZone((Class)UIImageView) initWithImage:v2];
  id v5 = [self systemBlueColor];
  [v4 setTintColor:v5];

  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setContentMode:1];

  uint64_t v6 = self;
  id v7 = [v6 mainBundle];
  v8._uint64_t countAndFlagsBits = 0xD000000000000026;
  v19._object = (void *)0xE000000000000000;
  v8._object = (void *)0x80000001000A71E0;
  v9.value._uint64_t countAndFlagsBits = 0xD000000000000011;
  v9.value._object = (void *)0x80000001000A6610;
  v10._uint64_t countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0;
  Swift::String v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v19);

  id v12 = [v6 mainBundle];
  v13._uint64_t countAndFlagsBits = 0xD000000000000029;
  v20._object = (void *)0xE000000000000000;
  v13._object = (void *)0x80000001000A71B0;
  v14.value._uint64_t countAndFlagsBits = 0xD000000000000011;
  v14.value._object = (void *)0x80000001000A6610;
  v15._uint64_t countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v20._uint64_t countAndFlagsBits = 0;
  Swift::String v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v20);

  objc_allocWithZone((Class)type metadata accessor for ProxCardBulletView());
  id v17 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10006EE00(v17, (void *)v11._countAndFlagsBits, v11._object, v16._countAndFlagsBits, v16._object);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10006C46C(uint64_t a1, uint64_t a2)
{
  id v3 = [objc_allocWithZone((Class)UIImageView) initWithImage:a2];
  id v4 = [self systemBlueColor];
  [v3 setTintColor:v4];

  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v3 setContentMode:1];
  id v5 = self;
  id v6 = [v5 mainBundle];
  v18._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0x55515F4543494F56;
  v7._object = (void *)0xED00005954494C41;
  v8.value._uint64_t countAndFlagsBits = 0xD000000000000014;
  v8.value._object = (void *)0x80000001000A8190;
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v18._uint64_t countAndFlagsBits = 0;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v18);

  id v11 = [v5 mainBundle];
  v12._uint64_t countAndFlagsBits = 0xD000000000000016;
  v19._object = (void *)0xE000000000000000;
  v12._object = (void *)0x80000001000AA100;
  v13.value._uint64_t countAndFlagsBits = 0xD000000000000014;
  v13.value._object = (void *)0x80000001000A8190;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v19._uint64_t countAndFlagsBits = 0;
  Swift::String v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v19);

  objc_allocWithZone((Class)type metadata accessor for ProxCardBulletView());
  id v16 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10006EE00(v16, (void *)v10._countAndFlagsBits, v10._object, v15._countAndFlagsBits, v15._object);
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(a1 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_10006C6E8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v121 = sub_100008E18(&qword_1000D5B80);
  uint64_t v123 = *(void (**)(char *, char *, uint64_t))(v121 - 8);
  uint64_t v3 = __chkstk_darwin(v121);
  unint64_t v120 = (char *)v103 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v124 = (char *)v103 - v6;
  __chkstk_darwin(v5);
  uint64_t v119 = (char *)v103 - v7;
  uint64_t v8 = sub_100008E18(&qword_1000D4CC0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  id v11 = (char *)v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::String_optional v13 = (char *)v103 - v12;
  uint64_t v14 = type metadata accessor for HeadphoneModel();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  Swift::String v18 = (char *)v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  Swift::String v20 = (char *)v103 - v19;
  v127.receiver = v1;
  v127.super_class = ObjectType;
  [super viewDidLoad];
  [v1 setDismissalType:1];
  uint64_t v21 = &v1[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_presenter];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = Strong + 16;
    swift_beginAccess();
    sub_10001A248(v23, (uint64_t)v125, &qword_1000D4798);
    swift_unknownObjectRelease();
    uint64_t v24 = v126;
    if (v126)
    {
      uint64_t v110 = v21;
      uint64_t v113 = v11;
      uint64_t v25 = sub_10000C80C(v125, v126);
      unint64_t v122 = v103;
      uint64_t v26 = *(void *)(v24 - 8);
      __chkstk_darwin(v25);
      uint64_t v28 = (void *)((char *)v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(void *))(v26 + 16))(v28);
      sub_10001A2AC((uint64_t)v125, &qword_1000D4798);
      unint64_t v29 = v1;
      uint64_t v30 = v20;
      uint64_t v31 = v15;
      uint64_t v32 = *v28 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      uint64_t v33 = v32;
      uint64_t v34 = v31;
      uint64_t v35 = (uint64_t)v30;
      id v36 = v29;
      sub_10000C850(v33, (uint64_t)v18);
      (*(void (**)(void *, uint64_t))(v26 + 8))(v28, v24);
      sub_10000C8B4((uint64_t)v18, v35);
      sub_10000C850(v35, (uint64_t)v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v13, 0, 1, v14);
      uint64_t v37 = (uint64_t)v29 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_model;
      swift_beginAccess();
      sub_10001A308((uint64_t)v13, v37);
      swift_endAccess();
      uint64_t v38 = OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_headphoneProxFeatureManager;
      uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
      uint64_t v40 = v34 + 48;
      uint64_t v39 = v41;
      if (v41(v37, 1, v14) == 1)
      {
        __break(1u);
      }
      else
      {
        id v108 = v39;
        uint64_t v111 = v40;
        uint64_t v112 = v14;
        uint64_t v106 = v38;
        uint64_t v109 = v37;
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v42 = dispatch thunk of HeadphoneProxFeatureManager.getWhatsNewNotShowedFeatures(deviceAddress:)();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v43 = sub_10006ABA0();
        id v44 = v29;
        uint64_t v45 = sub_10006E1C0(v43, (uint64_t)v44, v42);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        unint64_t v46 = (void *)v45[2];
        NSString v107 = v36;
        uint64_t v105 = v35;
        if (v46)
        {
          id v104 = v44;
          id v47 = (char *)v45
              + ((*((unsigned __int8 *)v123 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v123 + 80));
          uint64_t v118 = *((void *)v123 + 9);
          uint64_t v116 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
          uint64_t v48 = *(void *)(v116 - 8);
          id v49 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
          v48 += 16;
          uint64_t v123 = v49;
          os_log_t v115 = (void (**)(char *, char *, uint64_t))(v48 + 16);
          uint64_t v117 = v48;
          uint64_t v114 = (void (**)(char *, uint64_t))(v48 - 8);
          v103[1] = v45;
          swift_bridgeObjectRetain();
          uint64_t v50 = v124;
          do
          {
            unint64_t v122 = v46;
            uint64_t v51 = v121;
            uint64_t v52 = *(int *)(v121 + 48);
            unint64_t v53 = v119;
            unint64_t v54 = &v119[v52];
            unint64_t v55 = &v47[v52];
            uint64_t v56 = v116;
            v123(v119, v47, v116);
            uint64_t v58 = *(void (**)(uint64_t))v55;
            uint64_t v57 = *((void *)v55 + 1);
            *(void *)unint64_t v54 = v58;
            *((void *)v54 + 1) = v57;
            (*v115)(v50, v53, v56);
            uint64_t v59 = *(int *)(v51 + 48);
            uint64_t v60 = (uint64_t (**)())&v50[v59];
            uint64_t v61 = swift_allocObject();
            *(void *)(v61 + 16) = v58;
            *(void *)(v61 + 24) = v57;
            *uint64_t v60 = sub_10006E87C;
            v60[1] = (uint64_t (*)())v61;
            unint64_t v62 = v120;
            uint64_t v63 = (uint64_t (**)())&v120[v59];
            v123(v120, v124, v56);
            *uint64_t v63 = sub_10006E87C;
            v63[1] = (uint64_t (*)())v61;
            uint64_t v50 = v124;
            swift_retain_n();
            uint64_t v64 = swift_retain();
            v58(v64);
            swift_release();
            swift_release();
            sub_10001A2AC((uint64_t)v50, &qword_1000D5B80);
            uint64_t v65 = v56;
            long long v66 = v122;
            (*v114)(v62, v65);
            v47 += v118;
            unint64_t v46 = (void *)((char *)v66 - 1);
          }
          while (v46);
          swift_bridgeObjectRelease();
          id v44 = v104;
        }
        swift_bridgeObjectRelease();
        uint64_t v67 = (char *)sub_10006FC3C();
        id v68 = [v44 contentView];
        [v68 addSubview:v67];

        id v69 = [v44 contentView];
        id v70 = [v69 mainContentGuide];

        unint64_t v71 = self;
        sub_100008E18((uint64_t *)&unk_1000D5090);
        uint64_t v72 = swift_allocObject();
        *(_OWORD *)(v72 + 16) = xmmword_1000A2750;
        id v73 = [v67 topAnchor];
        id v74 = [v70 topAnchor];
        id v75 = [v73 constraintEqualToAnchor:v74];

        *(void *)(v72 + 32) = v75;
        id v76 = [v67 bottomAnchor];
        id v77 = [v70 bottomAnchor];
        id v78 = [v76 constraintLessThanOrEqualToAnchor:v77];

        *(void *)(v72 + 40) = v78;
        id v79 = [v67 leadingAnchor];
        id v80 = [v70 leadingAnchor];
        id v81 = [v79 constraintEqualToAnchor:v80];

        *(void *)(v72 + 48) = v81;
        uint64_t v124 = v67;
        id v82 = [v67 trailingAnchor];
        uint64_t v123 = (void (*)(char *, char *, uint64_t))v70;
        id v83 = [v70 trailingAnchor];
        id v84 = [v82 constraintEqualToAnchor:v83];

        *(void *)(v72 + 56) = v84;
        v125[0] = v72;
        specialized Array._endMutation()();
        sub_10000A968();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v71 activateConstraints:isa];

        sub_100008E18(&qword_1000D47A0);
        uint64_t v86 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
        uint64_t v87 = *(void *)(v86 - 8);
        uint64_t v88 = *(void *)(v87 + 72);
        unint64_t v89 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
        uint64_t v90 = swift_allocObject();
        *(_OWORD *)(v90 + 16) = xmmword_1000A2760;
        unint64_t v91 = v90 + v89;
        uint64_t v92 = *(void (**)(unint64_t, void, uint64_t))(v87 + 104);
        v92(v91, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.whatsNew(_:), v86);
        v92(v91 + v88, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.improvedVoiceQuality(_:), v86);
        uint64_t v93 = v109;
        uint64_t v94 = (uint64_t)v113;
        sub_10001A248(v109, (uint64_t)v113, &qword_1000D4CC0);
        uint64_t v95 = v112;
        uint64_t v96 = v108;
        if (v108(v94, 1, v112) != 1)
        {
          type metadata accessor for HeadphoneYodelHearingProtectionViewController();
          uint64_t v97 = v110;
          uint64_t v98 = swift_unknownObjectWeakLoadStrong();
          sub_10001AF4C(v44, v94, v98, *((void *)v97 + 1));
          swift_unknownObjectRelease();
          sub_10000C918(v94);
          swift_beginAccess();
          if (v96(v93, 1, v95) != 1)
          {
            swift_endAccess();
            swift_bridgeObjectRetain();
            swift_retain();
            dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)();

            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10000C918(v105);
            return;
          }
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      __break(1u);
LABEL_19:
      swift_retain();
      swift_bridgeObjectRelease();
      __break(1u);
      return;
    }
    sub_10001A2AC((uint64_t)v125, &qword_1000D4798);
  }
  if (qword_1000D4410 != -1) {
    swift_once();
  }
  uint64_t v99 = type metadata accessor for Logger();
  sub_100008278(v99, (uint64_t)qword_1000D6108);
  uint64_t v100 = Logger.logObject.getter();
  os_log_type_t v101 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v100, v101))
  {
    uint64_t v102 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v102 = 0;
    _os_log_impl((void *)&_mh_execute_header, v100, v101, "Whats New: Headphone Model is nil, exiting", v102, 2u);
    swift_slowDealloc();
  }
}

void sub_10006D454()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1];

  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_10006E198;
  uint64_t v17 = v2;
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_100012FF0;
  uint64_t v15 = &unk_1000C51E0;
  uint64_t v4 = _Block_copy(&v12);
  uint64_t v5 = self;
  id v6 = [v5 actionWithTitle:v3 style:0 handler:v4];

  _Block_release(v4);
  swift_release();
  swift_release();

  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_10006E1B8;
  uint64_t v17 = v7;
  uint64_t v12 = _NSConcreteStackBlock;
  uint64_t v13 = 1107296256;
  uint64_t v14 = sub_100012FF0;
  uint64_t v15 = &unk_1000C5208;
  uint64_t v9 = _Block_copy(&v12);
  id v10 = [v5 actionWithTitle:v8 style:1 handler:v9];

  _Block_release(v9);
  swift_release();
  swift_release();
  id v11 = [v0 addAction:v10];
}

void sub_10006D708()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008CC8C();
      swift_unknownObjectRelease();
    }
  }
}

void sub_10006D77C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_22;
  }
  NSString v8 = (char *)Strong;
  uint64_t v43 = a2;
  type metadata accessor for HeadphoneProxFeatureManager();
  static HeadphoneProxFeatureManager.shared.getter();
  unint64_t v46 = v8;
  uint64_t v9 = &v8[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_model];
  swift_beginAccess();
  uint64_t v10 = type metadata accessor for HeadphoneModel();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v44 = v11 + 48;
  uint64_t v45 = v12;
  if (v12(v9, 1, v10) == 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.yodel(_:), v3);
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
  uint64_t v15 = v14;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (!v13)
  {

LABEL_22:
    if (qword_1000D4410 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100008278(v30, (uint64_t)qword_1000D6108);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "HeadphoneWhatsNewUpsellViewController: seondary button playload nil, skip add off mode alert!", v33, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    uint64_t v34 = swift_unknownObjectWeakLoadStrong();
    if (v34)
    {
      uint64_t v35 = (void *)v34;
      uint64_t v36 = swift_unknownObjectWeakLoadStrong();

      if (v36)
      {
        if (qword_1000D4480 != -1) {
          swift_once();
        }
        sub_100008278(v30, (uint64_t)qword_1000D69F0);
        uint64_t v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v39 = 0;
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "Requested Not Now for Whats New", v39, 2u);
          swift_slowDealloc();
        }

        if (swift_unknownObjectWeakLoadStrong())
        {
          sub_10003B97C();
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
    }
    return;
  }
  id v16 = v15;
  if ([v16 hearingProtectionCapability] == 1
    && [v16 hearingProtectionEnabled] == 1)
  {
    if (v45(v9, 1, v10) != 1)
    {
      unint64_t v17 = *((void *)v9 + 17);
      if (v17)
      {
        uint64_t v18 = *((void *)v9 + 16);
        unint64_t v19 = v17;
      }
      else
      {
        uint64_t v18 = 0;
        unint64_t v19 = 0xE000000000000000;
      }
      uint64_t v40 = v43;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v41 = v46;
      sub_10001EF28(v46, v18, v19, v16, v40);
      swift_bridgeObjectRelease();
      swift_release();

      goto LABEL_40;
    }
LABEL_43:
    __break(1u);
    return;
  }
  if (qword_1000D4410 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100008278(v20, (uint64_t)qword_1000D6108);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "HeadphoneWhatsNewUpsellViewController: seondary button: LSR hearingProtectionEnabled is OFF not adding the dismissal alrt!", v23, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t v24 = swift_unknownObjectWeakLoadStrong();
  if (!v24 || (uint64_t v25 = (void *)v24, v26 = swift_unknownObjectWeakLoadStrong(), v25, !v26))
  {

LABEL_40:
    return;
  }
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  sub_100008278(v20, (uint64_t)qword_1000D69F0);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    unint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Requested Not Now for Whats New", v29, 2u);
    swift_slowDealloc();
  }

  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10003B97C();

    swift_unknownObjectRelease();
  }
  else
  {
  }
  swift_unknownObjectRelease();
}

void sub_10006DE0C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100008278(v3, (uint64_t)qword_1000D69F0);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        id v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Not Now for Whats New", v6, 2u);
        swift_slowDealloc();
      }

      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10003B97C();
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_10006E024()
{
  return type metadata accessor for HeadphoneWhatsNewUpsellViewController();
}

uint64_t type metadata accessor for HeadphoneWhatsNewUpsellViewController()
{
  uint64_t result = qword_1000D6178;
  if (!qword_1000D6178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10006E078()
{
  sub_100019F2C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10006E150()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_type);
}

uint64_t sub_10006E160()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10006E198()
{
}

uint64_t sub_10006E1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10006E1B0()
{
  return swift_release();
}

void sub_10006E1B8(uint64_t a1)
{
  sub_10006D77C(a1, v1);
}

void *sub_10006E1C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v52 = a3;
  uint64_t v58 = a2;
  uint64_t v5 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100008E18(&qword_1000D5B80);
  uint64_t v9 = __chkstk_darwin(v57);
  uint64_t v67 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v60 = (uint64_t)&v47 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v56 = (char *)&v47 - v14;
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v47 - v16;
  uint64_t result = _swiftEmptyArrayStorage;
  id v68 = _swiftEmptyArrayStorage;
  uint64_t v55 = *(void *)(a1 + 16);
  if (!v55) {
    return result;
  }
  uint64_t v47 = v3;
  uint64_t v48 = v6;
  uint64_t v19 = 0;
  uint64_t v20 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v64 = *(void *)(v15 + 72);
  uint64_t v50 = (char *)&v47 - v16;
  uint64_t v51 = (v20 + 32) & ~v20;
  uint64_t v54 = a1 + v51;
  long long v66 = (void (**)(char *, char *, uint64_t))(v6 + 16);
  unint64_t v53 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v61 = v6 + 8;
  unint64_t v62 = v8;
  while (1)
  {
    sub_10001A248(v54 + v64 * v19, (uint64_t)v17, &qword_1000D5B80);
    uint64_t v23 = v56;
    uint64_t v22 = v57;
    uint64_t v24 = *(int *)(v57 + 48);
    uint64_t v25 = &v56[v24];
    uint64_t v26 = &v17[v24];
    uint64_t v65 = *v66;
    v65(v56, v17, v5);
    uint64_t v28 = *(void *)v26;
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = v28;
    *((void *)v25 + 1) = v27;
    unint64_t v29 = v67;
    (*v53)(v67, v23, v5);
    uint64_t v30 = *(int *)(v22 + 48);
    uint64_t v21 = (uint64_t)v29;
    uint64_t v31 = (uint64_t (**)())&v29[v30];
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v28;
    *(void *)(v32 + 24) = v27;
    NSObject *v31 = sub_10006ECBC;
    v31[1] = (uint64_t (*)())v32;
    swift_retain();
    if (sub_10006AACC()) {
      goto LABEL_16;
    }
    if (*(void *)(v52 + 16)) {
      break;
    }
LABEL_4:
    sub_10001A2AC(v21, &qword_1000D5B80);
    unint64_t v17 = v50;
    sub_10001A2AC((uint64_t)v50, &qword_1000D5B80);
LABEL_5:
    if (++v19 == v55) {
      return v68;
    }
  }
  uint64_t v63 = *(void *)(v52 + 16);
  uint64_t v33 = v48;
  unint64_t v49 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v34 = v62;
  v65(v62, (char *)(v52 + v49), v5);
  unint64_t v35 = sub_10006E8A4();
  swift_bridgeObjectRetain();
  char v36 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v33 + 8);
  v37(v34, v5);
  if (v36)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t)v67;
    unint64_t v17 = v50;
LABEL_16:
    sub_10001A2AC(v21, &qword_1000D5B80);
    sub_10006E8FC((uint64_t)v17, v60);
    uint64_t v44 = v68;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10009C6B8(0, v44[2] + 1, 1);
      uint64_t v44 = v68;
    }
    unint64_t v46 = v44[2];
    unint64_t v45 = v44[3];
    if (v46 >= v45 >> 1)
    {
      sub_10009C6B8(v45 > 1, v46 + 1, 1);
      uint64_t v44 = v68;
    }
    v44[2] = v46 + 1;
    sub_10006E8FC(v60, (uint64_t)v44 + v51 + v46 * v64);
    goto LABEL_5;
  }
  unint64_t v59 = v35;
  if (v63 == 1)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t)v67;
    goto LABEL_4;
  }
  uint64_t v38 = *(void *)(v48 + 72);
  unint64_t v39 = v52 + v38 + v49;
  uint64_t v40 = 1;
  while (1)
  {
    uint64_t v41 = v62;
    uint64_t result = (void *)((uint64_t (*)(char *, unint64_t, uint64_t))v65)(v62, v39, v5);
    uint64_t v42 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
    v37(v41, v5);
    if (v43) {
      goto LABEL_15;
    }
    ++v40;
    v39 += v38;
    if (v42 == v63) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

id sub_10006E6DC(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_sectionWidth] = 0x4074000000000000;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_estimatedSectionHeight] = 0x4056800000000000;
  uint64_t v4 = OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_headphoneProxFeatureManager;
  type metadata accessor for HeadphoneProxFeatureManager();
  uint64_t v5 = v1;
  *(void *)&v1[v4] = static HeadphoneProxFeatureManager.shared.getter();
  uint64_t v6 = OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_listBuilder;
  type metadata accessor for ProxBulltedListBuilder();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v5[v6] = v7;
  v5[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___forceShowWhatsNew] = 2;
  NSString v8 = &v5[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_model];
  uint64_t v9 = type metadata accessor for HeadphoneModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController____lazy_storage___featureMap] = 0;
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v5[OBJC_IVAR____TtC20HeadphoneProxService37HeadphoneWhatsNewUpsellViewController_type] = 12;

  v11.receiver = v5;
  v11.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_10006E844()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006E87C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_10006E8A4()
{
  unint64_t result = qword_1000D6188;
  if (!qword_1000D6188)
  {
    type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6188);
  }
  return result;
}

uint64_t sub_10006E8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D5B80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10006E964()
{
  return sub_10006BB2C(v0);
}

uint64_t sub_10006E96C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006E9AC()
{
  return sub_10006C46C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10006E9B4()
{
  return sub_10006C1F4(v0);
}

uint64_t sub_10006E9BC()
{
  return sub_10006BF7C(v0);
}

uint64_t sub_10006E9C4()
{
  uint64_t v1 = (int *)type metadata accessor for HeadphoneModel();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  if (*(void *)(v0 + v3 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + v1[11];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(v5 + v1[14]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_10001FB5C(*v9, v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v11 = v5 + v1[35];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v14 = v5 + v1[42];
  int v15 = *(unsigned __int8 *)(v14 + 8);
  if (v15 != 255) {
    sub_100017D0C(*(void **)v14, v15 & 1);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10006EC58()
{
  type metadata accessor for HeadphoneModel();
  uint64_t v1 = *(void *)(v0 + 16);

  return sub_10006BDB0(v1);
}

uint64_t sub_10006ECE4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D9250);
  sub_100008278(v0, (uint64_t)qword_1000D9250);
  return Logger.init(subsystem:category:)();
}

id sub_10006ED5C()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView____lazy_storage___heightConstraint;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView____lazy_storage___heightConstraint];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView____lazy_storage___heightConstraint];
  }
  else
  {
    id v4 = [v0 heightAnchor];
    id v5 = [v4 constraintEqualToConstant:100.0];

    uint64_t v6 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

uint64_t sub_10006EE00(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v80 = a4;
  id v79 = a2;
  id v81 = (void *)type metadata accessor for CharacterSet();
  uint64_t v9 = *(v81 - 1);
  __chkstk_darwin(v81);
  uint64_t v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_paddingConstraints] = _swiftEmptyArrayStorage;
  uint64_t v12 = OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView;
  id v13 = objc_allocWithZone((Class)UILabel);
  uint64_t v14 = v5;
  id v15 = [v13 init];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v5[v12] = v15;
  *(void *)&v14[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetViewSize] = 0x4053800000000000;
  *(void *)&v14[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView____lazy_storage___heightConstraint] = 0;
  *(void *)&v14[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetView] = a1;
  uint64_t v16 = a1;

  unint64_t v17 = (objc_class *)type metadata accessor for ProxCardBulletView();
  v84.receiver = v14;
  v84.super_class = v17;
  uint64_t v18 = (char *)objc_msgSendSuper2(&v84, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v19 = OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetView;
  uint64_t v20 = *(void **)&v18[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetView];
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v20 setFrame:0.0, 0.0, 0.0, 0.0];
  [v18 addSubview:v20];
  id v78 = [objc_allocWithZone((Class)UILabel) init];
  [v78 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v82 = (uint64_t)v79;
  id v83 = a3;
  swift_bridgeObjectRetain();
  v21._uint64_t countAndFlagsBits = 10;
  v21._object = (void *)0xE100000000000000;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v22._uint64_t countAndFlagsBits = v80;
  v22._object = a5;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = v83;
  static CharacterSet.newlines.getter();
  sub_100008E5C();
  uint64_t v24 = StringProtocol.components(separatedBy:)();
  (*(void (**)(char *, void *))(v9 + 8))(v11, v81);
  if (!*(void *)(v24 + 16))
  {
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_6;
  }
  id v81 = v16;
  uint64_t v25 = *(void **)(v24 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = self;
  id v27 = [v26 _preferredFontForTextStyle:UIFontTextStyleSubheadline variant:256];
  if (!v27)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v28 = v27;
  id v77 = v25;
  id v76 = v23;
  uint64_t v80 = v19;
  id v29 = [v27 fontDescriptor];
  id v30 = [v29 fontDescriptorWithSymbolicTraits:2];

  if (v30)
  {
    [v28 pointSize];
    id v31 = [v26 fontWithDescriptor:v30];

    sub_100008E18(&qword_1000D4560);
    uint64_t inited = swift_initStackObject();
    long long v73 = xmmword_1000A19D0;
    *(_OWORD *)(inited + 16) = xmmword_1000A19D0;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v33 = sub_100008EB0(0, &qword_1000D4568);
    *(void *)(inited + 64) = v33;
    *(void *)(inited + 40) = v31;
    uint64_t v34 = NSFontAttributeName;
    id v79 = v31;
    unint64_t v75 = sub_100089034(inited);
    NSString v35 = String._bridgeToObjectiveC()();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v74 = [v35 rangeOfString:v36];
    uint64_t v38 = v37;

    uint64_t v39 = swift_initStackObject();
    *(_OWORD *)(v39 + 16) = v73;
    *(void *)(v39 + 64) = v33;
    *(void *)(v39 + 32) = v34;
    *(void *)(v39 + 40) = v28;
    uint64_t v40 = v34;
    id v77 = v28;
    sub_100089034(v39);
    id v41 = objc_allocWithZone((Class)NSMutableAttributedString);
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_100030EA4();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v44 = [v41 initWithString:v42 attributes:isa];

    Class v45 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v76 = v44;
    [v44 addAttributes:v45 range:v74];

    id v46 = v78;
    [v78 setAttributedText:v44];
    id v47 = [self labelColor];
    [v46 setTextColor:v47];

    [v46 setNumberOfLines:0];
    [v46 sizeToFit];
    uint64_t v48 = *(void **)&v18[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView];
    *(void *)&v18[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView] = v46;
    id v49 = v46;

    [v18 addSubview:v49];
    id v78 = self;
    sub_100008E18((uint64_t *)&unk_1000D5090);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_1000A31C0;
    uint64_t v51 = v80;
    id v52 = [*(id *)&v18[v80] leadingAnchor];
    id v53 = [v18 leadingAnchor];
    id v54 = [v52 constraintEqualToAnchor:v53];

    *(void *)(v50 + 32) = v54;
    id v55 = [*(id *)&v18[v51] widthAnchor];
    id v56 = [v55 constraintEqualToConstant:78.0];

    *(void *)(v50 + 40) = v56;
    id v57 = [*(id *)&v18[v51] heightAnchor];
    id v58 = [v57 constraintEqualToConstant:78.0];

    *(void *)(v50 + 48) = v58;
    id v59 = [*(id *)&v18[v51] centerYAnchor];
    id v60 = [v49 centerYAnchor];
    id v61 = [v59 constraintEqualToAnchor:v60];

    *(void *)(v50 + 56) = v61;
    id v62 = [*(id *)&v18[v51] centerYAnchor];
    id v63 = [v18 centerYAnchor];
    id v64 = [v62 constraintEqualToAnchor:v63];

    *(void *)(v50 + 64) = v64;
    id v65 = [v49 leadingAnchor];
    id v66 = [*(id *)&v18[v51] trailingAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66 constant:15.0];

    *(void *)(v50 + 72) = v67;
    id v68 = [v49 trailingAnchor];
    id v69 = [v18 trailingAnchor];
    id v70 = [v68 constraintEqualToAnchor:v69];

    *(void *)(v50 + 80) = v70;
    *(void *)(v50 + 88) = sub_10006ED5C();
    uint64_t v82 = v50;
    specialized Array._endMutation()();
    sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
    Class v71 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v78 activateConstraints:v71];

    return (uint64_t)v18;
  }
LABEL_7:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10006F814()
{
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for ProxCardBulletView();
  [super layoutSubviews];
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView;
  [*(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView] bounds];
  CGFloat Height = CGRectGetHeight(v9);
  id v3 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetView];
  [v3 bounds:Height];
  CGRectGetHeight(v10);
  id v4 = sub_10006ED5C();
  [*(id *)&v0[v1] bounds];
  double v6 = v5;
  [v3 bounds];
  double v7 = CGRectGetHeight(v11);
  if (v6 > v7) {
    double v7 = v6;
  }
  [v4 setConstant:v7];
}

id sub_10006F988()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProxCardBulletView();
  return [super dealloc];
}

uint64_t type metadata accessor for ProxCardBulletView()
{
  return self;
}

void sub_10006FA50()
{
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1000A2260;
  uint64_t v1 = self;
  *(void *)(v0 + 32) = [v1 systemYellowColor];
  id v2 = [v1 systemBlueColor];
  id v3 = [v2 colorWithAlphaComponent:0.5];

  *(void *)(v0 + 40) = v3;
  specialized Array._endMutation()();
  sub_100008EB0(0, (unint64_t *)&qword_1000D47F8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [self configurationWithPaletteColors:isa];

  qword_1000D9268 = (uint64_t)v5;
}

void sub_10006FB80()
{
  id v0 = [self systemBlueColor];
  id v1 = [self configurationWithHierarchicalColor:v0];

  qword_1000D9270 = (uint64_t)v1;
}

id sub_10006FBF4()
{
  id result = [self configurationWithPointSize:5 weight:52.0];
  qword_1000D9278 = (uint64_t)result;
  return result;
}

uint64_t sub_10006FC3C()
{
  id v1 = [objc_allocWithZone((Class)UIStackView) init];
  [v1 setAlignment:1];
  [v1 setAxis:1];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  swift_beginAccess();
  unint64_t v2 = *(void *)(v0 + 16);
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    [v1 setSpacing:15.0];
    return (uint64_t)v1;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t result = self;
  id v19 = (id)result;
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    unint64_t v18 = v2 & 0xC000000000000001;
    long long v17 = xmmword_1000A2260;
    unint64_t v6 = v2;
    do
    {
      if (v18) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      objc_super v8 = v7;
      ++v5;
      [v1 addArrangedSubview:v7];
      sub_100008E18((uint64_t *)&unk_1000D5090);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = v17;
      id v10 = [v1 leadingAnchor];
      id v11 = [v8 leadingAnchor];
      id v12 = [v10 constraintEqualToAnchor:v11];

      *(void *)(v9 + 32) = v12;
      id v13 = [v1 trailingAnchor];
      id v14 = [v8 trailingAnchor];
      id v15 = [v13 constraintEqualToAnchor:v14];

      *(void *)(v9 + 40) = v15;
      specialized Array._endMutation()();
      sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v19 activateConstraints:isa];

      unint64_t v2 = v6;
    }
    while (v3 != v5);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10006FF20()
{
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for ProxBulltedListBuilder()
{
  return self;
}

void sub_10006FF7C()
{
  *(void *)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_paddingConstraints] = _swiftEmptyArrayStorage;
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_textView;
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v1] = v2;
  *(void *)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView_assetViewSize] = 0x4053800000000000;
  *(void *)&v0[OBJC_IVAR____TtC20HeadphoneProxServiceP33_DC0457E2CD3962CEA05B8D12B6872FEB18ProxCardBulletView____lazy_storage___heightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100070050(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = &v1[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_viewModel];
  uint64_t v5 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_type] = 1;
  id v6 = objc_allocWithZone((Class)UITableView);
  id v7 = v1;
  id v8 = [v6 initWithFrame:2 style:0.0, 0.0, 0.0, 0.0];
  id v9 = [objc_allocWithZone((Class)PRXScrollableContentView) initWithCardStyle:0 scrollView:v8];
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_tableView] = v8;
  id v10 = v8;

  v21.receiver = v7;
  v21.super_class = ObjectType;
  [super initWithContentView:v9];
  id v12 = self;
  id v13 = v10;
  id v14 = v11;
  id v15 = [v12 clearColor];
  [v13 setBackgroundColor:v15];

  [v13 setDataSource:v14];
  [v13 setDelegate:v14];
  [v13 setAllowsSelection:0];
  sub_100008EB0(0, &qword_1000D63E0);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_100008E18(&qword_1000D63E8);
  String.init<A>(describing:)();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v17];

  id v18 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 2.22507386e-308];
  [v13 setTableHeaderView:v18];

  id v19 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 2.22507386e-308];
  [v13 setTableFooterView:v19];

  return v14;
}

void sub_1000703EC(uint64_t a1)
{
  uint64_t v3 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003FDC4(a1, (uint64_t)v5);
  uint64_t v6 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 0, 1, v6);
  uint64_t v7 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_viewModel];
  swift_beginAccess();
  sub_10003FE28((uint64_t)v5, v7);
  swift_endAccess();
  NSString v8 = String._bridgeToObjectiveC()();
  [v1 setTitle:v8];

  NSString v9 = String._bridgeToObjectiveC()();
  [v1 setSubtitle:v9];

  if (*(void *)(a1 + 88)) {
    NSString v10 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v10 = 0;
  }
  [v1 setBottomTrayTitle:v10];

  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_100071600;
  uint64_t v25 = v11;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v21 = 1107296256;
  Swift::String v22 = sub_100012FF0;
  uint64_t v23 = &unk_1000C5400;
  id v13 = _Block_copy(&aBlock);
  id v14 = self;
  id v15 = [v14 actionWithTitle:v12 style:0 handler:v13];

  _Block_release(v13);
  swift_release();
  swift_release();
  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_100071620;
  uint64_t v25 = v16;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v21 = 1107296256;
  Swift::String v22 = sub_100012FF0;
  uint64_t v23 = &unk_1000C5428;
  id v18 = _Block_copy(&aBlock);
  id v19 = [v14 actionWithTitle:v17 style:1 handler:v18];

  _Block_release(v18);
  swift_release();
  swift_release();

  [*(id *)&v1[OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_tableView] reloadData];
}

void sub_1000707D0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100008278(v3, (uint64_t)qword_1000D69F0);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested customize announce notifications finished", v6, 2u);
        swift_slowDealloc();
      }

      uint64_t v7 = *(void *)(v2 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(unsigned char *)(v7
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 72)) = 0;
      sub_10008ADE4(0);
      swift_unknownObjectRelease();
    }
  }
}

void sub_100070928()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008EC7C();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1000709F8()
{
  return type metadata accessor for HeadphoneAnnounceCustomizeViewController();
}

uint64_t type metadata accessor for HeadphoneAnnounceCustomizeViewController()
{
  uint64_t result = qword_1000D62F8;
  if (!qword_1000D62F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100070A4C()
{
  sub_100022D30();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100070B00()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_type);
}

id sub_100070B40(void *a1)
{
  uint64_t v2 = sub_100008E18(&qword_1000D63D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v80 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UIListContentConfiguration();
  uint64_t v81 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  NSString v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83[0] = sub_100008EB0(0, &qword_1000D63E0);
  sub_100008E18(&qword_1000D63E8);
  String.init<A>(describing:)();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [a1 dequeueReusableCellWithIdentifier:v11];

  if (!v12) {
    id v12 = [objc_allocWithZone((Class)UITableViewCell) init];
  }
  IndexPath.section.getter();
  uint64_t v13 = v82 + OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_viewModel;
  swift_beginAccess();
  uint64_t v14 = type metadata accessor for HeadphoneViewModel(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    id v15 = (uint64_t *)(v13 + *(int *)(v14 + 76));
    uint64_t v16 = v15[1];
    if (v16)
    {
      uint64_t v17 = *v15;
      uint64_t v18 = v15[2];
      uint64_t v19 = v15[3];
      uint64_t v20 = v15[4];
      uint64_t v21 = (void *)v15[5];
      uint64_t v22 = v15[6];
      uint64_t v23 = v15[7];
      uint64_t v24 = v15[8];
      uint64_t v25 = v15[9];
      uint64_t v27 = v15[10];
      uint64_t v26 = (void *)v15[11];
      uint64_t v29 = v15[12];
      uint64_t v28 = v15[13];
      uint64_t v68 = v18;
      uint64_t v74 = v19;
      uint64_t v67 = v20;
      uint64_t v73 = v22;
      id v77 = v21;
      uint64_t v66 = v24;
      uint64_t v76 = v23;
      uint64_t v65 = v27;
      uint64_t v72 = v26;
      uint64_t v69 = v29;
      uint64_t v71 = v28;
      uint64_t v75 = v25;
      uint64_t v64 = v16;
      uint64_t v70 = v17;
      switch(v17)
      {
        case 0:
          unsigned int v62 = v20 & 1;
          uint64_t v30 = v18;
          uint64_t v31 = v19;
          uint64_t v32 = v21;
          sub_10007192C(v17, v16, v18, v19, v20, v21, v22, v23, v24, v25, v27, v26);
          swift_bridgeObjectRetain();
          id v79 = v32;
          uint64_t v61 = v70;
          uint64_t v63 = v16;
          goto LABEL_15;
        case 1:
          unsigned int v62 = v27 & 1;
          uint64_t v31 = v25;
          uint64_t v33 = v23;
          uint64_t v30 = v24;
          sub_10007192C(v17, v16, v18, v19, v20, v21, v22, v23, v24, v25, v27, v26);
          swift_bridgeObjectRetain();
          id v79 = v72;
          uint64_t v61 = v73;
          uint64_t v63 = v33;
          goto LABEL_15;
        case 2:
          id v34 = v26;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v35 = v77;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v36 = IndexPath.row.getter();
          if ((v36 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v36 < *(void *)(v69 + 16))
          {
            unint64_t v37 = v69 + 48 * v36;
LABEL_14:
            uint64_t v42 = *(void *)(v37 + 40);
            uint64_t v61 = *(void *)(v37 + 32);
            uint64_t v30 = *(void *)(v37 + 48);
            uint64_t v31 = *(void *)(v37 + 56);
            unsigned int v62 = *(unsigned __int8 *)(v37 + 64);
            id v79 = *(id *)(v37 + 72);
            uint64_t v63 = v42;
            swift_bridgeObjectRetain();
LABEL_15:
            uint64_t v78 = v31;
            swift_bridgeObjectRetain();
            id v43 = v79;
            id v44 = v79;
            id v79 = v43;
            id v45 = v44;
            static UIListContentConfiguration.cell()();
            swift_bridgeObjectRetain();
            uint64_t v59 = v30;
            UIListContentConfiguration.text.setter();
            id v60 = v45;
            UIListContentConfiguration.image.setter();
            v83[3] = v8;
            v83[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
            id v46 = sub_100071860(v83);
            (*(void (**)(uint64_t *, char *, uint64_t))(v81 + 16))(v46, v10, v8);
            UITableViewCell.contentConfiguration.setter();
            static UIBackgroundConfiguration.listGroupedCell()();
            id v47 = [self quaternarySystemFillColor];
            UIBackgroundConfiguration.backgroundColor.setter();
            uint64_t v48 = v80;
            (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v4, v7, v5);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v4, 0, 1, v5);
            UITableViewCell.backgroundConfiguration.setter();
            id v49 = [objc_allocWithZone((Class)UISwitch) init];
            char v50 = v62;
            [v49 setOn:v62];
            uint64_t v58 = sub_100008EB0(0, (unint64_t *)&qword_1000D63F0);
            uint64_t v51 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v52 = swift_allocObject();
            uint64_t v53 = v61;
            *(void *)(v52 + 16) = v51;
            *(void *)(v52 + 24) = v53;
            *(void *)(v52 + 32) = v63;
            uint64_t v82 = v5;
            uint64_t v54 = v78;
            *(void *)(v52 + 40) = v59;
            *(void *)(v52 + 48) = v54;
            *(unsigned char *)(v52 + 56) = v50;
            *(_DWORD *)(v52 + 57) = v83[0];
            *(_DWORD *)(v52 + 60) = *(_DWORD *)((char *)v83 + 3);
            *(void *)(v52 + 64) = v79;
            *(void *)(v52 + 72) = v49;
            id v79 = v60;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v55 = v49;
            id v56 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
            [v55 addAction:v56 forControlEvents:4096];
            [v12 setAccessoryView:v55];

            sub_1000609C8(v70, v64, v68, v74, v67, v77, v73, v76, v66, v75, v65, v72);
            (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v82);
            (*(void (**)(char *, uint64_t))(v81 + 8))(v10, v8);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v12;
          }
          __break(1u);
LABEL_19:
          __break(1u);
LABEL_20:
          __break(1u);
          JUMPOUT(0x1000713B0);
        case 3:
          id v38 = v26;
          uint64_t v39 = v71;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v40 = v77;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v41 = IndexPath.row.getter();
          if ((v41 & 0x8000000000000000) != 0) {
            goto LABEL_19;
          }
          if (v41 >= *(void *)(v39 + 16)) {
            goto LABEL_20;
          }
          unint64_t v37 = v39 + 48 * v41;
          goto LABEL_14;
        default:
          return v12;
      }
    }
  }
  return v12;
}

void sub_1000713C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();

    if (v8)
    {
      sub_10008E9E0(a3, (char)[a4 isOn]);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1000715C8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100071600()
{
}

uint64_t sub_100071608(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100071618()
{
  return swift_release();
}

void sub_100071620()
{
}

uint64_t sub_100071628(unint64_t a1)
{
  if (a1 > 3) {
    return 0;
  }
  unsigned __int8 v2 = a1;
  uint64_t v3 = v1 + OBJC_IVAR____TtC20HeadphoneProxService40HeadphoneAnnounceCustomizeViewController_viewModel;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for HeadphoneViewModel(0);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4);
  uint64_t result = 0;
  if (v5) {
    return result;
  }
  uint64_t v7 = v3 + *(int *)(v4 + 76);
  if (!*(void *)(v7 + 8)) {
    return 0;
  }
  if (v2 < 2u) {
    return 1;
  }
  uint64_t v8 = v7 + 96;
  uint64_t v9 = v7 + 104;
  if (v2 == 2) {
    uint64_t v9 = v8;
  }
  return *(void *)(*(void *)v9 + 16);
}

id sub_10007170C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UIListContentConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = 0;
  if ((a1 & 0xFFFFFFFFFFFFFFFELL) == 2)
  {
    id v6 = [objc_allocWithZone((Class)UITableViewHeaderFooterView) init];
    static UIListContentConfiguration.plainHeader()();
    if (a1 == 3) {
      unsigned __int8 v7 = 19;
    }
    else {
      unsigned __int8 v7 = 20;
    }
    sub_100027B70(v7);
    UIListContentConfiguration.text.setter();
    v11[3] = v2;
    v11[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    uint64_t v8 = sub_100071860(v11);
    (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v8, v5, v2);
    UITableViewHeaderFooterView.contentConfiguration.setter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v6;
}

uint64_t *sub_100071860(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1000718C4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10007191C(uint64_t a1)
{
  sub_1000713C0(a1, *(void *)(v1 + 16), v1 + 24, *(void **)(v1 + 72));
}

uint64_t sub_10007192C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  if (a2)
  {
    id v13 = a12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v14 = a6;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000719D0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D6460);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D6460);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100071A98()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = __chkstk_darwin(v3);
  id v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v78 - v7;
  v87.receiver = v1;
  v87.super_class = ObjectType;
  [super viewDidLoad];
  [v1 setDismissalType:1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong + 16;
    swift_beginAccess();
    sub_10000C744(v10, (uint64_t)&v84);
    swift_unknownObjectRelease();
    uint64_t v11 = v86;
    if (v86)
    {
      id v12 = sub_10000C80C(&v84, v86);
      uint64_t v13 = *(void *)(v11 - 8);
      __chkstk_darwin(v12);
      id v15 = (uint64_t *)((char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(void *))(v13 + 16))(v15);
      sub_10000C7AC((uint64_t)&v84);
      uint64_t v16 = *v15 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v16, (uint64_t)v6);
      (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v11);
      sub_10000C8B4((uint64_t)v6, (uint64_t)v8);
      uint64_t v84 = 0;
      unint64_t v85 = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      uint64_t v84 = 0x5F6C6C6143646E45;
      unint64_t v85 = 0xE800000000000000;
      int v17 = *(_DWORD *)&v8[*(int *)(v3 + 124)];
      int v83 = v17;
      v18._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      v19._uint64_t countAndFlagsBits = 1598833453;
      v19._object = (void *)0xE400000000000000;
      String.append(_:)(v19);
      LOBYTE(v83) = v8[144];
      v20._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      NSString v21 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v22 = self;
      id v23 = [v22 imageNamed:v21];

      id v81 = v23;
      if (v23)
      {
        id v24 = [objc_allocWithZone((Class)UIImageView) initWithImage:v23];
      }
      else
      {
        id v29 = [self b607];
        unsigned int v30 = [v29 productID];

        uint64_t v84 = 0x5F6C6C6143646E45;
        unint64_t v85 = 0xE800000000000000;
        int v83 = v17;
        v31._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v31);
        swift_bridgeObjectRelease();
        if (v17 == v30) {
          uint64_t v32 = 0x305F4C432DLL;
        }
        else {
          uint64_t v32 = 0x315F4C432DLL;
        }
        unint64_t v33 = 0xE500000000000000;
        String.append(_:)(*(Swift::String *)&v32);
        NSString v34 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v35 = [v22 imageNamed:v34];

        id v24 = [objc_allocWithZone((Class)UIImageView) initWithImage:v35];
      }
      uint64_t v82 = v8;
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      type metadata accessor for HeadphoneEndCallViewController();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v37 = [self bundleForClass:ObjCClassFromMetadata];
      uint64_t v84 = 0;
      unint64_t v85 = 0xE000000000000000;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      uint64_t v84 = 0x5F6C6C6143646E45;
      unint64_t v85 = 0xE800000000000000;
      int v83 = v17;
      v38._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v38);
      swift_bridgeObjectRelease();
      v39._uint64_t countAndFlagsBits = 0x50656C62756F445FLL;
      v39._object = (void *)0xEC00000073736572;
      String.append(_:)(v39);
      id v40 = objc_allocWithZone((Class)BSUICAPackageView);
      id v41 = v37;
      NSString v42 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v43 = [v40 initWithPackageName:v42 inBundle:v41];

      id v80 = v41;
      if (v43)
      {
        [v43 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v44 = [v1 contentView];
        [v44 addSubview:v24];

        id v45 = [v1 contentView];
        [v45 addSubview:v43];

        id v46 = [v1 contentView];
        id v47 = [v46 mainContentGuide];

        id v79 = self;
        sub_100008E18((uint64_t *)&unk_1000D5090);
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = xmmword_1000A24C0;
        id v49 = [v24 topAnchor];
        id v50 = [v47 topAnchor];
        id v51 = [v49 constraintGreaterThanOrEqualToAnchor:v50];

        *(void *)(v48 + 32) = v51;
        id v52 = [v24 bottomAnchor];
        id v53 = [v47 bottomAnchor];
        id v54 = [v52 constraintLessThanOrEqualToAnchor:v53];

        *(void *)(v48 + 40) = v54;
        id v55 = [v24 centerYAnchor];
        id v56 = [v47 centerYAnchor];
        id v57 = [v55 constraintEqualToAnchor:v56];

        *(void *)(v48 + 48) = v57;
        id v58 = [v24 centerXAnchor];
        id v59 = [v47 centerXAnchor];
        id v60 = [v58 constraintEqualToAnchor:v59];

        *(void *)(v48 + 56) = v60;
        id v61 = [v43 topAnchor];
        id v62 = [v47 topAnchor];
        id v63 = [v61 constraintGreaterThanOrEqualToAnchor:v62];

        *(void *)(v48 + 64) = v63;
        id v64 = [v43 bottomAnchor];
        id v65 = [v47 bottomAnchor];
        id v66 = [v64 constraintLessThanOrEqualToAnchor:v65];

        *(void *)(v48 + 72) = v66;
        id v67 = [v43 heightAnchor];
        id v68 = [v67 constraintEqualToConstant:180.0];

        *(void *)(v48 + 80) = v68;
        id v69 = [v43 widthAnchor];
        id v70 = [v69 constraintEqualToConstant:180.0];

        *(void *)(v48 + 88) = v70;
        id v71 = [v43 centerYAnchor];
        id v72 = [v47 centerYAnchor];
        id v73 = [v71 constraintEqualToAnchor:v72];

        *(void *)(v48 + 96) = v73;
        id v74 = [v43 centerXAnchor];
        id v75 = [v47 centerXAnchor];
        id v76 = [v74 constraintEqualToAnchor:v75];

        *(void *)(v48 + 104) = v76;
        uint64_t v84 = v48;
        specialized Array._endMutation()();
        sub_10000A968();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v79 activateConstraints:isa];

        sub_10000C918((uint64_t)v82);
      }
      else
      {
        __break(1u);
      }
      return;
    }
    sub_10000C7AC((uint64_t)&v84);
  }
  if (qword_1000D4438 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_100008278(v25, (uint64_t)qword_1000D6460);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Headphone Model is nil, exiting", v28, 2u);
    swift_slowDealloc();
  }
}

void sub_1000726B0()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setSubtitle:v2];

  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v17 = sub_100072BF8;
  uint64_t v18 = v3;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100012FF0;
  uint64_t v16 = &unk_1000C54E0;
  uint64_t v5 = _Block_copy(&v13);
  id v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:0 handler:v5];

  _Block_release(v5);
  swift_release();
  swift_release();

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v17 = sub_100072C48;
  uint64_t v18 = v8;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100012FF0;
  uint64_t v16 = &unk_1000C5508;
  uint64_t v10 = _Block_copy(&v13);
  id v11 = [v6 actionWithTitle:v9 style:1 handler:v10];

  _Block_release(v10);
  swift_release();
  swift_release();
  id v12 = [v0 addAction:v11];
}

void sub_100072988(uint64_t a1, uint64_t a2, const char *a3, void (*a4)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = (void *)Strong;
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();

    if (v8)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_100008278(v9, (uint64_t)qword_1000D69F0);
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        id v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, a3, v12, 2u);
        swift_slowDealloc();
      }

      swift_beginAccess();
      uint64_t v13 = *(void *)(v8 + 40);
      if (v13)
      {
        sub_10000C80C((void *)(v8 + 16), v13);
        a4();
      }
      sub_10008ADE4(0);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneEndCallUpsellViewController()
{
  return self;
}

uint64_t sub_100072BB0()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService36HeadphoneEndCallUpsellViewController_type);
}

uint64_t sub_100072BC0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100072BF8(uint64_t a1)
{
  sub_100072988(a1, v1, "Requested Press Twice for end call gesture", sub_1000537AC);
}

uint64_t sub_100072C30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100072C40()
{
  return swift_release();
}

void sub_100072C48(uint64_t a1)
{
  sub_100072988(a1, v1, "Requested Press Once for end call gesture", sub_100053788);
}

void sub_100072C88(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100073D20(&OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager____lazy_storage___encoder, (void (*)(void))&type metadata accessor for JSONEncoder, (uint64_t (*)(void))&JSONEncoder.init());
  long long v4 = *(_OWORD *)(a1 + 16);
  long long v27 = *(_OWORD *)a1;
  long long v28 = v4;
  long long v29 = *(_OWORD *)(a1 + 32);
  sub_10007482C();
  uint64_t v5 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v7 = v6;
  swift_release();
  uint64_t v8 = OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_localStorage;
  id v9 = *(id *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_localStorage);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 dictionaryForKey:v10];

  if (v11)
  {
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v13 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  *((void *)&v28 + 1) = &type metadata for Data;
  *(void *)&long long v27 = v5;
  *((void *)&v27 + 1) = v7;
  sub_10003FDAC(&v27, v26);
  swift_bridgeObjectRetain();
  sub_10003548C(v5, v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100074908(v26, v13, v12, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = *(id *)(v2 + v8);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  [v15 setObject:isa forKey:v17];

  if (qword_1000D4440 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_100008278(v18, (uint64_t)qword_1000D64B0);
  sub_10003548C(v5, v7);
  sub_100074880(a1);
  sub_10003548C(v5, v7);
  sub_100074880(a1);
  Swift::String v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    *(void *)&v26[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315394;
    *(void *)&long long v27 = v5;
    *((void *)&v27 + 1) = v7;
    sub_10003548C(v5, v7);
    uint64_t v22 = String.init<A>(reflecting:)();
    *(void *)&long long v27 = sub_10005D8C8(v22, v23, (uint64_t *)v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001FB5C(v5, v7);
    sub_10001FB5C(v5, v7);
    *(_WORD *)(v21 + 12) = 2080;
    *(void *)&long long v27 = v13;
    *((void *)&v27 + 1) = v12;
    swift_bridgeObjectRetain();
    uint64_t v24 = String.init<A>(reflecting:)();
    *(void *)&long long v27 = sub_10005D8C8(v24, v25, (uint64_t *)v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000748C4(a1);
    sub_1000748C4(a1);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Storing engraving data received from AACP %s for:%s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10001FB5C(v5, v7);
  }
  else
  {
    sub_10001FB5C(v5, v7);
    sub_10001FB5C(v5, v7);
    sub_10001FB5C(v5, v7);
    sub_1000748C4(a1);
    sub_1000748C4(a1);
  }
}

void sub_100073334(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v7 = *(id *)(v3 + OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_localStorage);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 dictionaryForKey:v8];

  long long v10 = 0uLL;
  if (!v9)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    goto LABEL_13;
  }
  uint64_t v11 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v11 + 16))
  {
    long long v20 = 0u;
    *(_OWORD *)uint64_t v21 = 0u;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_10001D4A0(a1, a2);
  if ((v13 & 1) == 0)
  {
    long long v20 = 0u;
    *(_OWORD *)uint64_t v21 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_10003101C(*(void *)(v11 + 56) + 32 * v12, (uint64_t)&v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)&v21[8])
  {
LABEL_11:
    sub_100030FBC((uint64_t)&v20);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    long long v10 = 0uLL;
    goto LABEL_13;
  }
  uint64_t v15 = v23;
  unint64_t v14 = v24;
  sub_100073D20(&OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager____lazy_storage___decoder, (void (*)(void))&type metadata accessor for JSONDecoder, (uint64_t (*)(void))&JSONDecoder.init());
  sub_100074A5C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_10001FB5C(v15, v14);
  swift_release();
  uint64_t v17 = *((void *)&v20 + 1);
  uint64_t v16 = v20;
  uint64_t v18 = v21[0];
  long long v10 = *(_OWORD *)&v21[8];
  uint64_t v19 = v22;
LABEL_13:
  *(void *)a3 = v16;
  *(void *)(a3 + 8) = v17;
  *(void *)(a3 + 16) = v18;
  *(_OWORD *)(a3 + 24) = v10;
  *(void *)(a3 + 40) = v19;
}

uint64_t sub_1000737B8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D64B0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D64B0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t *sub_100073880@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_100073898(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000738A4()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100073904()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100073954(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6574617473;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1000739E0()
{
  return sub_100073954(*v0);
}

uint64_t sub_1000739E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100074F34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100073A10()
{
  return 0;
}

void sub_100073A1C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_100073A28(uint64_t a1)
{
  unint64_t v2 = sub_100074E38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100073A64(uint64_t a1)
{
  unint64_t v2 = sub_100074E38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100073AA0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100008E18(&qword_1000D6520);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10000C80C(a1, a1[3]);
  sub_100074E38();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[0] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v11[0] = *(unsigned char *)(v3 + 16);
    char v12 = 1;
    sub_100074E8C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10004BF88(v3 + 24, (uint64_t)v13, &qword_1000D5E50);
    sub_10004BF88((uint64_t)v13, (uint64_t)v11, &qword_1000D5E50);
    char v12 = 2;
    sub_100074EE0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v11[0] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_100073CA0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1000750D4(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_100073CE4(void *a1)
{
  return sub_100073AA0(a1);
}

uint64_t sub_100073D20(uint64_t *a1, void (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(v3 + *a1);
  if (v5)
  {
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v8 = v3;
    a2();
    swift_allocObject();
    uint64_t v6 = a3();
    *(void *)(v8 + v4) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

void sub_100073E6C(uint64_t a1, void *a2, void *aBlock)
{
  uint64_t v4 = *(void (**)(void))(a1 + 32);
  uint64_t v5 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v5;
  swift_retain();
  id v6 = a2;
  v4();
  swift_release();
  swift_release();
}

void sub_100073F24(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  Class v5 = isa;
  (*(void (**)(uint64_t))(a3 + 16))(a3);
}

uint64_t sub_100074018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v9[4] = a2;
  v9[5] = a3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1000740DC;
  v9[3] = &unk_1000C55A8;
  id v6 = _Block_copy(v9);
  long long v7 = *(void (**)(uint64_t, uint64_t, void *))(a4 + 16);
  swift_retain();
  v7(a4, a1, v6);
  _Block_release(v6);
  return swift_release();
}

uint64_t sub_1000740DC(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = *(void (**)(void *, unint64_t))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v4 = v2;
    uint64_t v2 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;
  }
  else
  {
    swift_retain();
    unint64_t v6 = 0xF000000000000000;
  }
  v3(v2, v6);
  sub_10003AD58((uint64_t)v2, v6);

  return swift_release();
}

id sub_100074174()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager____lazy_storage___decoder] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager____lazy_storage___encoder] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  id v3 = objc_allocWithZone((Class)NSUserDefaults);
  id v4 = v0;
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 initWithSuiteName:v5];

  if (!v6) {
    id v6 = [self standardUserDefaults];
  }
  *(void *)&v4[OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_localStorage] = v6;

  v8.receiver = v4;
  v8.super_class = ObjectType;
  return [super init];
}

void sub_10007429C(void *a1)
{
  id v3 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:[a1 productIdentifier]];
  if (v3)
  {
    id v4 = v3;
    unsigned int v5 = [v3 supportsDigitalEngraving];

    if (v5)
    {
      id v6 = [a1 addressString];
      if (v6)
      {
        long long v7 = v6;
        uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v10 = v9;

        sub_100073334(v8, v10, (uint64_t)v14);
        sub_100074AB0((uint64_t)v14);
        sub_10004BF88((uint64_t)v14, (uint64_t)v15, &qword_1000D5E98);
        if (v16) {
          goto LABEL_5;
        }
        v17[0] = v8;
        v17[1] = v10;
        char v18 = 0;
        long long v19 = xmmword_1000A33A0;
        uint64_t v20 = 0;
        swift_bridgeObjectRetain();
        sub_100072C88((uint64_t)v17);
        swift_bridgeObjectRelease();
        sub_10003AD58(0, 0xF000000000000000);
        uint64_t v11 = *(void (**)(void *, void (*)(uint64_t, unint64_t), void *))(v1 + OBJC_IVAR____TtC20HeadphoneProxService32HeadphoneDigitalEngravingManager_fetchEngravingDataHandler);
        if (!v11)
        {
LABEL_5:
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v12 = swift_allocObject();
          swift_unknownObjectWeakInit();
          char v13 = (void *)swift_allocObject();
          v13[2] = v8;
          v13[3] = v10;
          v13[4] = v12;
          sub_10006143C((uint64_t)v11);
          swift_retain();
          v11(a1, sub_100074B60, v13);
          sub_10005FEA0((uint64_t)v11);
          swift_release();
          swift_release();
        }
      }
    }
  }
}

void sub_100074488(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    uint64_t v25 = v4;
    uint64_t v26 = v5;
    sub_10003548C(a1, a2);
    if (qword_1000D4440 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100008278(v10, (uint64_t)qword_1000D64B0);
    sub_10003548C(a1, a2);
    sub_10003548C(a1, a2);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      char v13 = (uint8_t *)swift_slowAlloc();
      v18[0] = swift_slowAlloc();
      *(_DWORD *)char v13 = 136315138;
      uint64_t v19 = a1;
      unint64_t v20 = a2;
      sub_10003548C(a1, a2);
      uint64_t v14 = String.init<A>(reflecting:)();
      uint64_t v19 = sub_10005D8C8(v14, v15, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10003AD58(a1, a2);
      sub_10003AD58(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Engraving data received from AACP %s", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10003AD58(a1, a2);
      sub_10003AD58(a1, a2);
    }

    uint64_t v19 = a3;
    unint64_t v20 = a4;
    char v21 = 1;
    uint64_t v22 = a1;
    unint64_t v23 = a2;
    uint64_t v24 = 0;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v17 = (void *)Strong;
      sub_10005FD08(a1, a2);
      swift_bridgeObjectRetain();
      sub_100072C88((uint64_t)&v19);
      sub_10003AD58(a1, a2);
      swift_bridgeObjectRelease();
      sub_10003AD58(a1, a2);
    }
    else
    {
      sub_10003AD58(a1, a2);
    }
  }
}

uint64_t type metadata accessor for HeadphoneDigitalEngravingManager()
{
  return self;
}

unint64_t sub_10007482C()
{
  unint64_t result = qword_1000D6510;
  if (!qword_1000D6510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6510);
  }
  return result;
}

uint64_t sub_100074880(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_10005FD08(v2, v3);
  return a1;
}

uint64_t sub_1000748C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a1 + 32);
  swift_bridgeObjectRelease();
  sub_10003AD58(v2, v3);
  return a1;
}

_OWORD *sub_100074908(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10001D4A0(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100043170();
      goto LABEL_7;
    }
    sub_100042C50(v15, a4 & 1);
    unint64_t v21 = sub_10001D4A0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    unint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_100017BC4((uint64_t)v19);
    return sub_10003FDAC(a1, v19);
  }
LABEL_13:
  sub_100042F50(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

unint64_t sub_100074A5C()
{
  unint64_t result = qword_1000D6518;
  if (!qword_1000D6518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6518);
  }
  return result;
}

uint64_t sub_100074AB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100074AE8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100074B20()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100074B60(uint64_t a1, unint64_t a2)
{
  sub_100074488(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100074B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100074018(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_100074B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100074B84()
{
  return swift_release();
}

uint64_t sub_100074B8C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100074BC4(uint64_t a1, unint64_t a2)
{
  sub_100073F24(a1, a2, *(void *)(v2 + 16));
}

uint64_t destroy for HeadphoneDigitalEngravingManager.Record(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    return sub_10001FB5C(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_10003548C(v7, v6);
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v6;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (uint64_t *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_10003548C(*v4, *(void *)(a2 + 32));
      uint64_t v8 = *(void *)(a1 + 24);
      unint64_t v9 = *(void *)(a1 + 32);
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v5;
      sub_10001FB5C(v8, v9);
      goto LABEL_8;
    }
    sub_100036408(a1 + 24);
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_10003548C(*v4, *(void *)(a2 + 32));
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
LABEL_8:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for HeadphoneDigitalEngravingManager.Record(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  unint64_t v5 = (void *)(a2 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v5;
      *(void *)(a1 + 32) = v7;
      sub_10001FB5C(v8, v6);
      goto LABEL_6;
    }
    sub_100036408(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v5;
LABEL_6:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record;
}

unint64_t sub_100074E38()
{
  unint64_t result = qword_1000D6528;
  if (!qword_1000D6528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6528);
  }
  return result;
}

unint64_t sub_100074E8C()
{
  unint64_t result = qword_1000D6530;
  if (!qword_1000D6530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6530);
  }
  return result;
}

unint64_t sub_100074EE0()
{
  unint64_t result = qword_1000D6538;
  if (!qword_1000D6538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6538);
  }
  return result;
}

uint64_t sub_100074F34(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001000AA520
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001000AA540 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001000AA560)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1000750D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100008E18(&qword_1000D6540);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000C80C(a1, a1[3]);
  sub_100074E38();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return sub_100017BC4((uint64_t)a1);
  }
  LOBYTE(v19) = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  char v22 = 1;
  sub_1000753E8();
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v21 = v19;
  char v22 = 2;
  sub_10007543C();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v12 = v19;
  LOBYTE(v19) = 3;
  unint64_t v17 = v20;
  uint64_t v18 = v12;
  sub_10005FD08(v12, v20);
  uint64_t v13 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  unint64_t v15 = v17;
  uint64_t v14 = v18;
  sub_10005FD08(v18, v17);
  sub_10003AD58(v14, v15);
  swift_bridgeObjectRelease();
  sub_100017BC4((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = sub_10003AD58(v14, v15);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = v13;
  return result;
}

unint64_t sub_1000753E8()
{
  unint64_t result = qword_1000D6548;
  if (!qword_1000D6548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6548);
  }
  return result;
}

unint64_t sub_10007543C()
{
  unint64_t result = qword_1000D6550;
  if (!qword_1000D6550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6550);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007555CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record.CodingKeys()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record.CodingKeys;
}

uint64_t getEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.State(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HeadphoneDigitalEngravingManager.Record.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000756F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneDigitalEngravingManager.Record.State()
{
  return &type metadata for HeadphoneDigitalEngravingManager.Record.State;
}

unint64_t sub_10007572C()
{
  unint64_t result = qword_1000D6558;
  if (!qword_1000D6558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6558);
  }
  return result;
}

unint64_t sub_100075784()
{
  unint64_t result = qword_1000D6560;
  if (!qword_1000D6560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6560);
  }
  return result;
}

unint64_t sub_1000757DC()
{
  unint64_t result = qword_1000D6568;
  if (!qword_1000D6568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6568);
  }
  return result;
}

unint64_t sub_100075834()
{
  unint64_t result = qword_1000D6570;
  if (!qword_1000D6570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6570);
  }
  return result;
}

unint64_t sub_100075888()
{
  unint64_t result = qword_1000D6578;
  if (!qword_1000D6578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6578);
  }
  return result;
}

double sub_1000758E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_10001D518(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_10003101C(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

id sub_10007594C()
{
  if (*(void *)(v0 + 16))
  {
    id v1 = *(id *)(v0 + 16);
  }
  else
  {
    NSString v2 = String._bridgeToObjectiveC()();
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [self bagForProfile:v2 profileVersion:v3];

    *(void *)(v0 + 16) = v4;
    id v1 = v4;
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v1;
}

uint64_t sub_100075A0C(uint64_t a1, uint64_t (*a2)(uint64_t, void))
{
  return a2(a1, 0);
}

uint64_t sub_100075A3C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  return a2(a1, 1);
}

void sub_100075A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSString a6, uint64_t a7, uint64_t a8)
{
  id v10 = sub_10007594C();
  id v11 = objc_allocWithZone((Class)AMSMarketingItemTask);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v11 initWithBag:v10 clientIdentifier:v12 clientVersion:v13 placement:v14 serviceType:v15];

  swift_unknownObjectRelease();
  id v17 = [self ams_sharedAccountStore];
  id v18 = [v17 ams_activeiTunesAccount];

  [v16 setAccount:v18];
  if (a6) {
    a6 = String._bridgeToObjectiveC()();
  }
  [v16 setOfferHints:a6, a5];

  id v19 = [v16 perform];
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a7;
  *(void *)(v20 + 24) = a8;
  unsigned int v30 = sub_1000766A4;
  uint64_t v31 = v20;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  long long v28 = sub_100012FF0;
  long long v29 = &unk_1000C5808;
  int v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v19 addSuccessBlock:v21];
  _Block_release(v21);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a7;
  *(void *)(v22 + 24) = a8;
  unsigned int v30 = sub_1000766E8;
  uint64_t v31 = v22;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  long long v28 = sub_1000177B0;
  long long v29 = &unk_1000C5858;
  unint64_t v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v19 addErrorBlock:v23];
  _Block_release(v23);
}

uint64_t sub_100075D90()
{
  swift_unknownObjectRelease();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for AMSMarketingOffersClient()
{
  return self;
}

uint64_t sub_100075DEC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D6580);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D6580);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  NSString v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_100075EB4(uint64_t a1)
{
  if (qword_1000D4448 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D6580);
  swift_bridgeObjectRetain_n();
  NSString v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  unint64_t v5 = &type metadata for Any;
  if (os_log_type_enabled(v3, v4))
  {
    char v6 = (uint8_t *)swift_slowAlloc();
    v37[0] = swift_slowAlloc();
    *(_DWORD *)char v6 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v7 = Dictionary.description.getter();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    uint64_t v10 = v7;
    unint64_t v5 = &type metadata for Any;
    *(void *)&long long v38 = sub_10005D8C8(v10, v9, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Decoding %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v11 = sub_10001D518((uint64_t)v37), (v12 & 1) != 0))
  {
    sub_10003101C(*(void *)(a1 + 56) + 32 * v11, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  sub_10001F800((uint64_t)v37);
  if (!*((void *)&v39 + 1))
  {
    sub_100030FBC((uint64_t)&v38);
LABEL_16:
    NSString v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      id v18 = "Cert list is missing";
      goto LABEL_49;
    }
    goto LABEL_50;
  }
  sub_100008E18(&qword_1000D6640);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  AnyHashable.init<A>(_:)();
  if (*(void *)(a1 + 16) && (unint64_t v13 = sub_10001D518((uint64_t)v37), (v14 & 1) != 0))
  {
    sub_10003101C(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  sub_10001F800((uint64_t)v37);
  if (!*((void *)&v39 + 1))
  {
    swift_bridgeObjectRelease();
    sub_100030FBC((uint64_t)&v38);
LABEL_47:
    NSString v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      id v18 = "Model is missing";
      goto LABEL_49;
    }
LABEL_50:

    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  uint64_t v36 = MEMORY[0xD00000000000002C];
  if (MEMORY[0xD00000000000002C])
  {
    uint64_t v19 = 0;
    uint64_t v20 = &type metadata for String;
    while (1)
    {
      uint64_t v21 = *(void *)(8 * v19 - 0x2FFFFFFFFFFFFFC4);
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)();
      if (*(void *)(v21 + 16) && (unint64_t v22 = sub_10001D518((uint64_t)v37), (v23 & 1) != 0))
      {
        sub_10003101C(*(void *)(v21 + 56) + 32 * v22, (uint64_t)&v38);
      }
      else
      {
        long long v38 = 0u;
        long long v39 = 0u;
      }
      sub_10001F800((uint64_t)v37);
      if (!*((void *)&v39 + 1))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100030FBC((uint64_t)&v38);
        goto LABEL_54;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_54:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        NSString v15 = Logger.logObject.getter();
        os_log_type_t v16 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v15, v16))
        {
          id v17 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v17 = 0;
          id v18 = "Serial missing";
LABEL_49:
          _os_log_impl((void *)&_mh_execute_header, v15, v16, v18, v17, 2u);
          swift_slowDealloc();
        }
        goto LABEL_50;
      }
      *(void *)&long long v38 = 0xD000000000000011;
      *((void *)&v38 + 1) = 0x80000001000AA620;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v21 + 16) && (unint64_t v24 = sub_10001D518((uint64_t)v37), (v25 & 1) != 0))
      {
        sub_10003101C(*(void *)(v21 + 56) + 32 * v24, (uint64_t)&v38);
      }
      else
      {
        long long v38 = 0u;
        long long v39 = 0u;
      }
      uint64_t v26 = v20;
      swift_bridgeObjectRelease();
      sub_10001F800((uint64_t)v37);
      if (!*((void *)&v39 + 1)) {
        break;
      }
      uint64_t v27 = v5;
      if (!swift_dynamicCast()) {
        goto LABEL_37;
      }
      uint64_t v29 = 0xD000000000000013;
      unint64_t v28 = 0x80000001000AA600;
LABEL_38:
      swift_bridgeObjectRetain();
      sub_10005FD08(v29, v28);
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      if (v28 >> 60 == 15)
      {
        Class isa = 0;
      }
      else
      {
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        sub_10003AD58(v29, v28);
      }
      id v33 = [objc_allocWithZone((Class)AMSDeviceOfferRegistrationItem) initWithSerialNumber:v30 model:v31 validationData:isa];

      id v34 = v33;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v19;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      sub_10003AD58(v29, v28);

      unint64_t v5 = v27;
      uint64_t v20 = v26;
      if (v36 == v19) {
        goto LABEL_44;
      }
    }
    uint64_t v27 = v5;
    sub_100030FBC((uint64_t)&v38);
LABEL_37:
    uint64_t v29 = 0;
    unint64_t v28 = 0xF000000000000000;
    goto LABEL_38;
  }
LABEL_44:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10007666C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000766A4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v1 + 16))(a1, 0);
}

uint64_t sub_1000766D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000766E0()
{
  return swift_release();
}

uint64_t sub_1000766E8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, 1);
}

unsigned char *storeEnumTagSinglePayload for AMSMarketingOffersClient.RegistrationError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000767B0);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AMSMarketingOffersClient.RegistrationError()
{
  return &type metadata for AMSMarketingOffersClient.RegistrationError;
}

unint64_t sub_1000767EC()
{
  unint64_t result = qword_1000D6648;
  if (!qword_1000D6648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6648);
  }
  return result;
}

void sub_10007684C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = __chkstk_darwin(v3);
  char v6 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v105 - v7;
  v116.receiver = v1;
  v116.super_class = ObjectType;
  [super viewDidLoad];
  [v1 setDismissalType:1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong + 16;
    swift_beginAccess();
    sub_10000C744(v10, (uint64_t)&v113);
    swift_unknownObjectRelease();
    uint64_t v11 = v115;
    if (v115)
    {
      char v12 = sub_10000C80C(&v113, v115);
      uint64_t v13 = *(void *)(v11 - 8);
      __chkstk_darwin(v12);
      NSString v15 = (uint64_t *)((char *)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(void *))(v13 + 16))(v15);
      sub_10000C7AC((uint64_t)&v113);
      uint64_t v16 = *v15 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v16, (uint64_t)v6);
      (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v11);
      sub_10000C8B4((uint64_t)v6, (uint64_t)v8);
      uint64_t v113 = 0;
      unint64_t v114 = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease();
      uint64_t v113 = 0x7461527472616548;
      unint64_t v114 = 0xEA00000000005F65;
      id v17 = (id)*(int *)(v3 + 124);
      LODWORD(v112) = *(_DWORD *)((char *)v17 + (void)v8);
      v18._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      v19._uint64_t countAndFlagsBits = 1598833503;
      v19._object = (void *)0xE400000000000000;
      String.append(_:)(v19);
      LOBYTE(v112) = v8[144];
      v20._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      uint64_t v22 = v113;
      unint64_t v21 = v114;
      if (qword_1000D4360 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      unint64_t v24 = (void *)sub_100008278(v23, (uint64_t)qword_1000D91B0);
      swift_bridgeObjectRetain_n();
      char v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        id v110 = v17;
        unint64_t v28 = (uint8_t *)v27;
        uint64_t v29 = swift_slowAlloc();
        id v109 = v24;
        uint64_t v113 = v29;
        *(_DWORD *)unint64_t v28 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v112 = sub_10005D8C8(v22, v21, &v113);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "Heart Rate: Image Name: %s", v28, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        id v17 = v110;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v35 = self;
      id v36 = [v35 imageNamed:v34];

      id v110 = v36;
      uint64_t v111 = v8;
      if (v36)
      {
        id v37 = [objc_allocWithZone((Class)UIImageView) initWithImage:v36];
      }
      else
      {
        uint64_t v113 = 0;
        unint64_t v114 = 0xE000000000000000;
        _StringGuts.grow(_:)(17);
        swift_bridgeObjectRelease();
        uint64_t v113 = 0x7461527472616548;
        unint64_t v114 = 0xEA00000000005F65;
        LODWORD(v112) = *(_DWORD *)((char *)v17 + (void)v8);
        v38._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v38);
        swift_bridgeObjectRelease();
        v39._uint64_t countAndFlagsBits = 0x315F4C435FLL;
        v39._object = (void *)0xE500000000000000;
        String.append(_:)(v39);
        uint64_t v41 = v113;
        unint64_t v40 = v114;
        swift_bridgeObjectRetain_n();
        NSString v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v43))
        {
          id v44 = (uint8_t *)swift_slowAlloc();
          uint64_t v113 = swift_slowAlloc();
          *(_DWORD *)id v44 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v112 = sub_10005D8C8(v41, v40, &v113);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Heart Rate: Fallback Image Name: %s", v44, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        NSString v45 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v46 = [v35 imageNamed:v45];

        id v37 = [objc_allocWithZone((Class)UIImageView) initWithImage:v46];
      }
      [v37 setContentMode:1];
      [v37 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v47 = [v1 contentView];
      [v47 addSubview:v37];

      id v48 = [v1 contentView];
      uint64_t v106 = OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_titleLabel;
      [v48 addSubview:*(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_titleLabel]];

      id v49 = [v1 contentView];
      uint64_t v107 = OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_subTitleLabel;
      [v49 addSubview:*(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_subTitleLabel]];

      id v109 = self;
      sub_100008E18((uint64_t *)&unk_1000D5090);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1000A24C0;
      id v51 = [v37 topAnchor];
      id v52 = [v1 contentView];
      id v53 = [v52 mainContentGuide];

      id v54 = [v53 topAnchor];
      id v55 = [v51 constraintGreaterThanOrEqualToAnchor:v54 constant:0.0];

      *(void *)(v50 + 32) = v55;
      id v56 = [v37 leadingAnchor];
      id v57 = [v1 contentView];
      id v58 = [v57 mainContentGuide];

      id v59 = [v58 leadingAnchor];
      id v60 = [v56 constraintEqualToAnchor:v59];

      *(void *)(v50 + 40) = v60;
      id v108 = v37;
      id v61 = [v37 trailingAnchor];
      id v62 = [v1 contentView];
      id v63 = [v62 mainContentGuide];

      id v64 = [v63 trailingAnchor];
      id v65 = [v61 constraintEqualToAnchor:v64];

      *(void *)(v50 + 48) = v65;
      uint64_t v66 = v106;
      id v67 = [*(id *)&v1[v106] topAnchor];
      id v68 = [v37 bottomAnchor];
      id v69 = [v67 constraintGreaterThanOrEqualToAnchor:v68 constant:PRXMainContentMargin];

      *(void *)(v50 + 56) = v69;
      id v70 = [*(id *)&v1[v66] leadingAnchor];
      id v71 = [v1 contentView];
      id v72 = [v71 mainContentGuide];

      id v73 = [v72 leadingAnchor];
      id v74 = [v70 constraintEqualToAnchor:v73];

      *(void *)(v50 + 64) = v74;
      id v75 = [*(id *)&v1[v66] trailingAnchor];
      id v76 = [v1 contentView];
      id v77 = [v76 mainContentGuide];

      id v78 = [v77 trailingAnchor];
      id v79 = [v75 constraintEqualToAnchor:v78];

      *(void *)(v50 + 72) = v79;
      uint64_t v80 = v107;
      id v81 = [*(id *)&v1[v107] topAnchor];
      id v82 = [*(id *)&v1[v66] bottomAnchor];
      id v83 = [v81 constraintEqualToAnchor:v82 constant:PRXMinimumInterItemMargin];

      *(void *)(v50 + 80) = v83;
      id v84 = [*(id *)&v1[v80] leadingAnchor];
      id v85 = [v1 contentView];
      id v86 = [v85 mainContentGuide];

      id v87 = [v86 leadingAnchor];
      id v88 = [v84 constraintEqualToAnchor:v87];

      *(void *)(v50 + 88) = v88;
      id v89 = [*(id *)&v1[v80] trailingAnchor];
      id v90 = [v1 contentView];
      id v91 = [v90 mainContentGuide];

      id v92 = [v91 trailingAnchor];
      id v93 = [v89 constraintEqualToAnchor:v92];

      *(void *)(v50 + 96) = v93;
      id v94 = [*(id *)&v1[v80] bottomAnchor];
      id v95 = [v1 contentView];
      id v96 = [v95 mainContentGuide];

      id v97 = [v96 bottomAnchor];
      id v98 = [v94 constraintEqualToAnchor:v97];

      *(void *)(v50 + 104) = v98;
      uint64_t v113 = v50;
      specialized Array._endMutation()();
      sub_10000A968();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v109 activateConstraints:isa];

      type metadata accessor for HeadphoneProxFeatureManager();
      static HeadphoneProxFeatureManager.shared.getter();
      uint64_t v100 = (uint64_t)v111;
      sub_100008E18(&qword_1000D47A0);
      uint64_t v101 = type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
      uint64_t v102 = *(void *)(v101 - 8);
      unint64_t v103 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
      uint64_t v104 = swift_allocObject();
      *(_OWORD *)(v104 + 16) = xmmword_1000A19D0;
      (*(void (**)(unint64_t, void, uint64_t))(v102 + 104))(v104 + v103, enum case for HeadphoneProxFeatureManager.HeadphoneProxFeature.heartRateMonitor(_:), v101);
      swift_bridgeObjectRetain();
      dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10000C918(v100);
      return;
    }
    sub_10000C7AC((uint64_t)&v113);
  }
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_100008278(v30, (uint64_t)qword_1000D91B0);
  NSString v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    id v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Heart Rate: Headphone Model is nil, exiting", v33, 2u);
    swift_slowDealloc();
  }
}

void sub_10007784C()
{
  id v1 = *(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_titleLabel];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setText:v2];

  id v3 = *(id *)&v0[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_subTitleLabel];
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setText:v4];

  [v0 setShouldCenterAlignText:1];
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v10[4] = sub_100077CB0;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100012FF0;
  v10[3] = &unk_1000C5978;
  uint64_t v7 = _Block_copy(v10);
  id v8 = [self actionWithTitle:v6 style:1 handler:v7];

  _Block_release(v7);
  swift_release();
  swift_release();
  id v9 = [v0 addAction:v8];
}

void sub_100077A48()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100008278(v3, (uint64_t)qword_1000D69F0);
      NSString v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        NSString v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)NSString v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested Not Now for HeartRate Monitor", v6, 2u);
        swift_slowDealloc();
      }

      sub_10008ADE4(0);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadhponeHeartRateViewController()
{
  return self;
}

uint64_t sub_100077C68()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_type);
}

uint64_t sub_100077C78()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100077CB0()
{
}

uint64_t sub_100077CB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100077CC8()
{
  return swift_release();
}

id sub_100077CD0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_trainingView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_horizontalConstraint] = 0;
  uint64_t v5 = OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_titleLabel;
  id v6 = objc_allocWithZone((Class)PRXLabel);
  uint64_t v7 = v2;
  id v8 = [v6 initWithStyle:4];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v8 setTextAlignment:1];
  *(void *)&v2[v5] = v8;
  uint64_t v9 = OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_subTitleLabel;
  id v10 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:1];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 setTextAlignment:1];
  *(void *)&v7[v9] = v10;
  *(void *)&v7[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v7[OBJC_IVAR____TtC20HeadphoneProxService32HeadhponeHeartRateViewController_type] = 27;

  v12.receiver = v7;
  v12.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_100077E24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_100077E30@<X0>(uint64_t *a1@<X8>)
{
  id v2 = [objc_allocWithZone((Class)HPConnectionInfoDelegate) init];
  uint64_t v3 = type metadata accessor for AMSMarketingOffersClient();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  v15[3] = v3;
  v15[4] = &off_1000C57C8;
  v15[0] = v4;
  uint64_t v5 = type metadata accessor for HeadphoneUpsellClient();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = sub_100079958((uint64_t)v15, v3);
  __chkstk_darwin(v7);
  uint64_t v9 = (void *)((char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  uint64_t v11 = *v9;
  swift_retain();
  uint64_t v12 = sub_100079A88((uint64_t)v2, v11, v6);
  sub_100017BC4((uint64_t)v15);
  uint64_t result = swift_release();
  a1[3] = v5;
  a1[4] = (uint64_t)&off_1000C2BD8;
  *a1 = v12;
  return result;
}

void sub_100077FB0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100078024()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D66A8);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D66A8);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1000780EC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = &v4[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor];
  *((void *)v8 + 4) = 0;
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  uint64_t v9 = &v4[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_presenter];
  *uint64_t v9 = 0;
  v9[1] = 0;
  v9[2] = 0;
  v4[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_homePressed] = 0;
  id v10 = objc_allocWithZone((Class)type metadata accessor for HeadphoneRouter());
  uint64_t v11 = v4;
  id v12 = [v10 init];
  uint64_t v13 = &v11[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router];
  *(void *)uint64_t v13 = v12;
  *((void *)v13 + 1) = &off_1000C4028;

  if (a2)
  {
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v14 = 0;
  }
  v17.receiver = v11;
  v17.super_class = ObjectType;
  id v15 = [super initWithNibName:v14 bundle:a3];

  return v15;
}

void *sub_10007830C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for HeadphoneModel();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v84 - v12;
  id v14 = [a1 userInfo];
  if (v14)
  {
    id v15 = v14;
    id v87 = v13;
    uint64_t v84 = a2;
    uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if (qword_1000D4450 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100008278(v17, (uint64_t)qword_1000D66A8);
    swift_bridgeObjectRetain();
    Swift::String v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v85 = a3;
    uint64_t v86 = v4;
    if (v20)
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v21 = 138412290;
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      *(void *)&long long v91 = isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v22 = isa;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Launched with userInfo: %@", v21, 0xCu);
      sub_100008E18(&qword_1000D5E58);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v29 = (uint64_t)v87;
    sub_100038384(v16, (uint64_t)v87);
    if (*(unsigned char *)(v29 + *(int *)(v8 + 120)))
    {
      sub_10000C850(v29, (uint64_t)v11);
      type metadata accessor for HeadphoneFakePairingSession();
      swift_allocObject();
      sub_1000612C0();
      uint64_t v31 = v30;
      sub_100077E30((uint64_t *)&v91);
      uint64_t v32 = sub_100079958((uint64_t)&v91, *((uint64_t *)&v92 + 1));
      __chkstk_darwin(v32);
      NSString v34 = (uint64_t *)((char *)&v84 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v35 + 16))(v34);
      uint64_t v36 = *v34;
      uint64_t v37 = type metadata accessor for HeadphoneUpsellClient();
      uint64_t v89 = v37;
      id v90 = &off_1000C2BD8;
      v88[0] = v36;
      uint64_t v38 = type metadata accessor for HeadphoneInteractor();
      uint64_t v39 = swift_allocObject();
      uint64_t v40 = sub_100079958((uint64_t)v88, v37);
      __chkstk_darwin(v40);
      NSString v42 = (uint64_t *)((char *)&v84 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v43 + 16))(v42);
      uint64_t v44 = sub_100079CFC((uint64_t)v11, v31, *v42, v39);
      swift_release();
    }
    else
    {
      sub_10000C850(v29, (uint64_t)v11);
      id v45 = [objc_allocWithZone((Class)SFBluetoothPairingSession) init];
      sub_100077E30((uint64_t *)&v91);
      uint64_t v46 = sub_100079958((uint64_t)&v91, *((uint64_t *)&v92 + 1));
      __chkstk_darwin(v46);
      id v48 = (uint64_t *)((char *)&v84 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v49 + 16))(v48);
      uint64_t v50 = *v48;
      uint64_t v51 = type metadata accessor for HeadphoneUpsellClient();
      uint64_t v89 = v51;
      id v90 = &off_1000C2BD8;
      v88[0] = v50;
      uint64_t v38 = type metadata accessor for HeadphoneInteractor();
      uint64_t v52 = swift_allocObject();
      uint64_t v53 = sub_100079958((uint64_t)v88, v51);
      __chkstk_darwin(v53);
      id v55 = (uint64_t *)((char *)&v84 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v56 + 16))(v55);
      uint64_t v44 = sub_10007A67C((uint64_t)v11, (uint64_t)v45, *v55, v52);
    }
    sub_100017BC4((uint64_t)v88);
    sub_100017BC4((uint64_t)&v91);
    *((void *)&v92 + 1) = v38;
    id v93 = &off_1000C4698;
    *(void *)&long long v91 = v44;
    uint64_t v57 = v86;
    uint64_t v58 = v86 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor;
    swift_beginAccess();
    sub_10007A5A4((uint64_t)&v91, v58, &qword_1000D4798);
    swift_endAccess();
    sub_10000C850(v29, (uint64_t)v11);
    type metadata accessor for HeadphonePresenter();
    swift_allocObject();
    uint64_t v59 = sub_10008A094((uint64_t)v11);
    id v60 = (uint64_t *)(v57 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_presenter);
    *id v60 = v59;
    v60[1] = (uint64_t)&off_1000C6278;
    v60[2] = (uint64_t)&off_1000C62B8;
    swift_unknownObjectRelease();
    uint64_t v61 = *v60;
    if (!*v60) {
      goto LABEL_23;
    }
    uint64_t v62 = v57 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor;
    swift_beginAccess();
    sub_10000C744(v62, (uint64_t)&v91);
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_10007A5A4((uint64_t)&v91, v61 + 16, &qword_1000D4798);
    swift_endAccess();
    swift_unknownObjectRelease();
    if (*v60)
    {
      *(void *)(*v60 + 64) = *(void *)(v57
                                         + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router
                                         + 8);
      swift_unknownObjectWeakAssign();
      if (*v60)
      {
        sub_10008A51C();
        uint64_t v63 = *v60;
        id v64 = (void *)(v57 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router);
        uint64_t v66 = (uint64_t *)(v57 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router + 8);
        uint64_t v65 = *(void *)(v57 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router);
        if (*v60)
        {
          uint64_t v67 = v60[2];
          *((void *)&v92 + 1) = swift_getObjectType();
          id v93 = *(_UNKNOWN ***)(v67 + 8);
          *(void *)&long long v91 = v63;
LABEL_26:
          uint64_t v69 = v65 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter;
          swift_beginAccess();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          sub_10007A5A4((uint64_t)&v91, v69, &qword_1000D5668);
          swift_endAccess();
          swift_unknownObjectRelease();
          *(void *)(*v64 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_delegate + 8) = &off_1000C59A0;
          swift_unknownObjectWeakAssign();
          uint64_t v70 = v57 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor;
          swift_beginAccess();
          uint64_t v71 = *(void *)(v70 + 24);
          if (v71)
          {
            if (*v60) {
              uint64_t v72 = v60[1];
            }
            else {
              uint64_t v72 = 0;
            }
            uint64_t v73 = *(void *)(v70 + 32);
            sub_100079958(v70, *(void *)(v70 + 24));
            id v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 16);
            uint64_t v75 = swift_unknownObjectRetain();
            v74(v75, v72, v71, v73);
            uint64_t v76 = *(void *)(v70 + 24);
            uint64_t v29 = (uint64_t)v87;
            if (v76)
            {
              uint64_t v77 = *v66;
              uint64_t v78 = *(void *)(v70 + 32);
              sub_100079958(v70, *(void *)(v70 + 24));
              id v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 40);
              uint64_t v80 = swift_unknownObjectRetain();
              v79(v80, v77, v76, v78);
            }
          }
          swift_endAccess();
          swift_beginAccess();
          if (*(void *)(v70 + 24))
          {
            sub_100017C14(v70, (uint64_t)&v91);
            swift_endAccess();
            sub_10000C80C(&v91, *((uint64_t *)&v92 + 1));
            uint64_t v81 = swift_allocObject();
            uint64_t v82 = v84;
            uint64_t v83 = v85;
            *(void *)(v81 + 16) = v84;
            *(void *)(v81 + 24) = v83;
            sub_10006143C(v82);
            sub_10004FBCC((uint64_t)sub_10007A648, v81);
            swift_release();
            sub_10000C918(v29);
            return (void *)sub_100017BC4((uint64_t)&v91);
          }
          else
          {
            sub_10000C918(v29);
            return (void *)swift_endAccess();
          }
        }
LABEL_25:
        id v93 = 0;
        long long v91 = 0u;
        long long v92 = 0u;
        goto LABEL_26;
      }
      uint64_t v68 = OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router;
    }
    else
    {
LABEL_23:
      uint64_t v68 = OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_router;
    }
    id v64 = (void *)(v57 + v68);
    uint64_t v66 = (uint64_t *)(v57 + v68 + 8);
    uint64_t v65 = *(void *)(v57 + v68);
    goto LABEL_25;
  }
  if (qword_1000D4450 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100008278(v24, (uint64_t)qword_1000D66A8);
  char v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "Received nil when trying to unwrap userInfo", v27, 2u);
    swift_slowDealloc();
  }

  uint64_t result = (void *)sub_1000326D8();
  if (result)
  {
    [result dismiss];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

id sub_100078EC0(char a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  uint64_t v3 = (void *)sub_1000326D8();
  if (v3)
  {
    [v3 setStatusBarHidden:1 withDuration:0.3];
    swift_unknownObjectRelease();
  }
  uint64_t v4 = (void *)sub_1000326D8();
  if (v4)
  {
    [v4 setAllowsBanners:1];
    swift_unknownObjectRelease();
  }
  id result = (id)sub_1000326D8();
  if (result)
  {
    uint64_t v6 = result;
    id result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      uint64_t v7 = result;
      int homeButtonType = MobileGestalt_get_homeButtonType();

      if (homeButtonType >= 0) {
        uint64_t v9 = 16 * (homeButtonType != 2);
      }
      else {
        uint64_t v9 = 16;
      }
      [v6 setDesiredHardwareButtonEvents:v9];
      return (id)swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100079018(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = type metadata accessor for HeadphoneModel();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v14[-v8];
  v15.receiver = v1;
  v15.super_class = ObjectType;
  [super viewWillAppear:a1 & 1];
  objc_super v10 = &v1[OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor];
  uint64_t result = swift_beginAccess();
  uint64_t v12 = *((void *)v10 + 3);
  if (v12)
  {
    uint64_t v13 = *sub_10000C80C(v10, v12) + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess();
    sub_10000C850(v13, (uint64_t)v7);
    sub_10000C8B4((uint64_t)v7, (uint64_t)v9);
    swift_unknownObjectRetain();
    sub_10003E788(v1, (uint64_t)v9);
    swift_unknownObjectRelease();
    return sub_10000C918((uint64_t)v9);
  }
  return result;
}

void sub_1000791E8(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_10007941C(v3);
    char v5 = v4;
    swift_bridgeObjectRelease();
    if (v5)
    {
      uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_interactor);
      swift_beginAccess();
      uint64_t v7 = v6[3];
      if (!v7
        || (uint64_t v8 = *sub_10000C80C(v6, v7) + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model,
            swift_beginAccess(),
            *(unsigned char *)(v8 + 120) != 11))
      {
        if (qword_1000D4450 != -1) {
          swift_once();
        }
        uint64_t v9 = type metadata accessor for Logger();
        sub_100008278(v9, (uint64_t)qword_1000D66A8);
        objc_super v10 = Logger.logObject.getter();
        os_log_type_t v11 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v12 = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, v11, "Home button pressed", v12, 2u);
          swift_slowDealloc();
        }

        uint64_t v13 = OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_homePressed;
        if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService27HeadphoneFlowViewController_homePressed) & 1) != 0
          || MKBGetDeviceLockState() - 1 > 1)
        {
          swift_unknownObjectRetain();
          sub_10003B97C();
          swift_unknownObjectRelease();
        }
        else
        {
          id v14 = Logger.logObject.getter();
          os_log_type_t v15 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v14, v15))
          {
            uint64_t v16 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v16 = 0;
            _os_log_impl((void *)&_mh_execute_header, v14, v15, "ignoring first home button press to unlock", v16, 2u);
            swift_slowDealloc();
          }

          *(unsigned char *)(v2 + v13) = 1;
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10007941C(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_100008EB0(0, &qword_1000D6708);
    sub_1000798A8();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    unint64_t v4 = v22;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v12 = v3;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_31;
    }
    sub_100008EB0(0, &qword_1000D6708);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v10 = v23;
    swift_unknownObjectRelease();
    if (!v23) {
      goto LABEL_31;
    }
LABEL_10:
    unsigned __int8 v11 = [v10 events];

    if ((v11 & 0x10) != 0) {
      goto LABEL_31;
    }
  }
  if (v4)
  {
    unint64_t v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v9 = v8 | (v3 << 6);
LABEL_9:
    id v10 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v10) {
      goto LABEL_31;
    }
    goto LABEL_10;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v16) {
      goto LABEL_31;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    ++v3;
    if (!v14)
    {
      uint64_t v3 = v12 + 2;
      if (v12 + 2 >= v16) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v3);
      if (!v14)
      {
        uint64_t v3 = v12 + 3;
        if (v12 + 3 >= v16) {
          goto LABEL_31;
        }
        unint64_t v14 = *(void *)(v17 + 8 * v3);
        if (!v14)
        {
          uint64_t v3 = v12 + 4;
          if (v12 + 4 >= v16) {
            goto LABEL_31;
          }
          unint64_t v14 = *(void *)(v17 + 8 * v3);
          if (!v14)
          {
            uint64_t v3 = v12 + 5;
            if (v12 + 5 >= v16) {
              goto LABEL_31;
            }
            unint64_t v14 = *(void *)(v17 + 8 * v3);
            if (!v14)
            {
              uint64_t v15 = v12 + 6;
              while (v16 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v3 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_31:
              sub_10003FDBC();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    unint64_t v4 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t type metadata accessor for HeadphoneFlowViewController()
{
  return self;
}

unint64_t sub_1000798A8()
{
  unint64_t result = qword_1000D6710;
  if (!qword_1000D6710)
  {
    sub_100008EB0(255, &qword_1000D6708);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6710);
  }
  return result;
}

uint64_t sub_100079910()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100079948()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_100079958(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1000799A8(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1000799D0(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v7;
  unint64_t v8 = *a2;
  if (*a2)
  {
    void *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_100079A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v10);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v11 - 8);
  uint64_t v18 = sub_100008EB0(0, &qword_1000D6738);
  uint64_t v19 = &off_1000C3680;
  *(void *)&long long v17 = a1;
  uint64_t v15 = type metadata accessor for AMSMarketingOffersClient();
  int64_t v16 = &off_1000C57C8;
  *(void *)&long long v14 = a2;
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  static DispatchQoS.unspecified.getter();
  v13[1] = _swiftEmptyArrayStorage;
  sub_10007AF24();
  sub_100008E18(&qword_1000D6720);
  sub_10007AF7C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v6);
  *(void *)(a3 + 96) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(a3 + 104) = 0;
  sub_10007B048(&v17, a3 + 16);
  sub_10007B048(&v14, a3 + 56);
  return a3;
}

uint64_t sub_100079CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a2;
  uint64_t v47 = a1;
  uint64_t v48 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v6 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v10 - 8);
  id v56[3] = type metadata accessor for HeadphoneUpsellClient();
  v56[4] = &off_1000C2BD8;
  v56[0] = a3;
  *(void *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_allowRepairAutoConnect) = 0;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_wantsTemporaryPairing) = 0;
  uint64_t v11 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_workingQueue;
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  static DispatchQoS.unspecified.getter();
  uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
  sub_10007AF24();
  sub_100008E18(&qword_1000D6720);
  sub_10007AF7C();
  uint64_t v12 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v48);
  *(void *)(a4 + v11) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  int64_t v13 = (void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  void *v13 = 0;
  v13[1] = 0;
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager) = 0;
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager) = 0;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_hasAutoConnected) = 0;
  uint64_t v14 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_settings;
  id v15 = objc_allocWithZone((Class)NSUbiquitousKeyValueStore);
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 initWithStoreIdentifier:v16 type:1];

  [v17 synchronize];
  *(void *)(a4 + v14) = v17;
  uint64_t v18 = a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate;
  uint64_t v19 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_assetFetchDuration) = 0;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_didSubmitMetrics) = 0;
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager) = 0;
  uint64_t v20 = a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo;
  uint64_t v21 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  sub_10000C850(v12, a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model);
  unint64_t v22 = (void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  void *v22 = v49;
  v22[1] = &off_1000C4D10;
  sub_100017C14((uint64_t)v56, a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_offersClient);
  uint64_t v23 = self;
  swift_unknownObjectRetain();
  id v24 = [v23 currentNotificationSettingsCenter];
  char v25 = (void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter);
  id v25[3] = sub_100008EB0(0, &qword_1000D6730);
  v25[4] = &off_1000C6788;
  *char v25 = v24;
  id v26 = 0;
  if (*(unsigned char *)(v12 + *(int *)(type metadata accessor for HeadphoneModel() + 80)) == 1)
  {
    id v27 = objc_allocWithZone((Class)PowerUISmartChargeClientAudioAccessories);
    NSString v28 = String._bridgeToObjectiveC()();
    id v26 = [v27 initWithClientName:v28];
  }
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_smartChargeClient) = v26;
  type metadata accessor for HeadphoneProxFeatureManager();
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager) = static HeadphoneProxFeatureManager.shared.getter();
  id v29 = [objc_allocWithZone((Class)CBDiscovery) init];
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery) = v29;
  [v29 setDiscoveryFlags:0x80000200000];
  [v29 setBleScanRate:50];
  id v30 = [objc_allocWithZone((Class)SFDeviceDiscovery) init];
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery) = v30;
  uint64_t v31 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery;
  [v30 setChangeFlags:13];
  [v30 setDiscoveryFlags:2];
  [v30 setScanRate:40];
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  uint64_t v54 = sub_10007B010;
  uint64_t v55 = v32;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v51 = 1107296256;
  uint64_t v52 = sub_100077FAC;
  uint64_t v53 = &unk_1000C5AC8;
  uint64_t v33 = _Block_copy(&aBlock);
  id v34 = v30;
  swift_release();
  [v34 setDeviceFoundHandler:v33];
  _Block_release(v33);

  uint64_t v35 = *(void **)(a4 + v31);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v54 = sub_10007B030;
  uint64_t v55 = v36;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v51 = 1107296256;
  uint64_t v52 = sub_100077FAC;
  uint64_t v53 = &unk_1000C5AF0;
  uint64_t v37 = _Block_copy(&aBlock);
  id v38 = v35;
  swift_release();
  [v38 setDeviceLostHandler:v37];
  _Block_release(v37);

  uint64_t v39 = *(void **)(a4 + v31);
  uint64_t v40 = swift_allocObject();
  swift_weakInit();
  uint64_t v54 = sub_10007B038;
  uint64_t v55 = v40;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v51 = 1107296256;
  uint64_t v52 = sub_100077FB0;
  uint64_t v53 = &unk_1000C5B18;
  uint64_t v41 = _Block_copy(&aBlock);
  id v42 = v39;
  swift_release();
  [v42 setDeviceChangedHandler:v41];
  _Block_release(v41);

  uint64_t v43 = *(void **)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery);
  uint64_t v44 = swift_allocObject();
  swift_weakInit();
  uint64_t v54 = sub_10007B040;
  uint64_t v55 = v44;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v51 = 1107296256;
  uint64_t v52 = sub_100077FAC;
  uint64_t v53 = &unk_1000C5B40;
  id v45 = _Block_copy(&aBlock);
  swift_release();
  [v43 setDeviceFoundHandler:v45];
  _Block_release(v45);
  sub_100017BC4((uint64_t)v56);
  sub_10000C918(v12);
  return a4;
}

uint64_t sub_10007A5A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100008E18(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_10007A608()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007A648()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  __break(1u);
  return result;
}

uint64_t sub_10007A67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a2;
  uint64_t v47 = a1;
  uint64_t v48 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v6 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v10 - 8);
  id v56[3] = type metadata accessor for HeadphoneUpsellClient();
  v56[4] = &off_1000C2BD8;
  v56[0] = a3;
  *(void *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_allowRepairAutoConnect) = 0;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_wantsTemporaryPairing) = 0;
  uint64_t v11 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_workingQueue;
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  static DispatchQoS.unspecified.getter();
  uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
  sub_10007AF24();
  sub_100008E18(&qword_1000D6720);
  sub_10007AF7C();
  uint64_t v12 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v48);
  *(void *)(a4 + v11) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  int64_t v13 = (void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_activationCompletionHandler);
  void *v13 = 0;
  v13[1] = 0;
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_endCallManager) = 0;
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneFeatureManager) = 0;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_hasAutoConnected) = 0;
  uint64_t v14 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_settings;
  id v15 = objc_allocWithZone((Class)NSUbiquitousKeyValueStore);
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v15 initWithStoreIdentifier:v16 type:1];

  [v17 synchronize];
  *(void *)(a4 + v14) = v17;
  uint64_t v18 = a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingStartDate;
  uint64_t v19 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_assetFetchDuration) = 0;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_didSubmitMetrics) = 0;
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor____lazy_storage___personalizationManager) = 0;
  uint64_t v20 = a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_prePairingAssetInfo;
  uint64_t v21 = type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  sub_10000C850(v12, a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model);
  unint64_t v22 = (void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_pairingSession);
  void *v22 = v49;
  v22[1] = &off_1000C4C60;
  sub_100017C14((uint64_t)v56, a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_offersClient);
  uint64_t v23 = self;
  swift_unknownObjectRetain();
  id v24 = [v23 currentNotificationSettingsCenter];
  char v25 = (void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter);
  id v25[3] = sub_100008EB0(0, &qword_1000D6730);
  v25[4] = &off_1000C6788;
  *char v25 = v24;
  id v26 = 0;
  if (*(unsigned char *)(v12 + *(int *)(type metadata accessor for HeadphoneModel() + 80)) == 1)
  {
    id v27 = objc_allocWithZone((Class)PowerUISmartChargeClientAudioAccessories);
    NSString v28 = String._bridgeToObjectiveC()();
    id v26 = [v27 initWithClientName:v28];
  }
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_smartChargeClient) = v26;
  type metadata accessor for HeadphoneProxFeatureManager();
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_headphoneProxFeatureManager) = static HeadphoneProxFeatureManager.shared.getter();
  id v29 = [objc_allocWithZone((Class)CBDiscovery) init];
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery) = v29;
  [v29 setDiscoveryFlags:0x80000200000];
  [v29 setBleScanRate:50];
  id v30 = [objc_allocWithZone((Class)SFDeviceDiscovery) init];
  *(void *)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery) = v30;
  uint64_t v31 = OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_deviceDiscovery;
  [v30 setChangeFlags:13];
  [v30 setDiscoveryFlags:2];
  [v30 setScanRate:40];
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  uint64_t v54 = sub_10007B010;
  uint64_t v55 = v32;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v51 = 1107296256;
  uint64_t v52 = sub_100077FAC;
  uint64_t v53 = &unk_1000C5A28;
  uint64_t v33 = _Block_copy(&aBlock);
  id v34 = v30;
  swift_release();
  [v34 setDeviceFoundHandler:v33];
  _Block_release(v33);

  uint64_t v35 = *(void **)(a4 + v31);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v54 = sub_10007B030;
  uint64_t v55 = v36;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v51 = 1107296256;
  uint64_t v52 = sub_100077FAC;
  uint64_t v53 = &unk_1000C5A50;
  uint64_t v37 = _Block_copy(&aBlock);
  id v38 = v35;
  swift_release();
  [v38 setDeviceLostHandler:v37];
  _Block_release(v37);

  uint64_t v39 = *(void **)(a4 + v31);
  uint64_t v40 = swift_allocObject();
  swift_weakInit();
  uint64_t v54 = sub_10007B038;
  uint64_t v55 = v40;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v51 = 1107296256;
  uint64_t v52 = sub_100077FB0;
  uint64_t v53 = &unk_1000C5A78;
  uint64_t v41 = _Block_copy(&aBlock);
  id v42 = v39;
  swift_release();
  [v42 setDeviceChangedHandler:v41];
  _Block_release(v41);

  uint64_t v43 = *(void **)(a4 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_cbDeviceDiscovery);
  uint64_t v44 = swift_allocObject();
  swift_weakInit();
  uint64_t v54 = sub_10007B040;
  uint64_t v55 = v44;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v51 = 1107296256;
  uint64_t v52 = sub_100077FAC;
  uint64_t v53 = &unk_1000C5AA0;
  id v45 = _Block_copy(&aBlock);
  swift_release();
  [v43 setDeviceFoundHandler:v45];
  _Block_release(v45);
  sub_100017BC4((uint64_t)v56);
  sub_10000C918(v12);
  return a4;
}

unint64_t sub_10007AF24()
{
  unint64_t result = qword_1000D6718;
  if (!qword_1000D6718)
  {
    type metadata accessor for OS_dispatch_queue.Attributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6718);
  }
  return result;
}

unint64_t sub_10007AF7C()
{
  unint64_t result = qword_1000D6728;
  if (!qword_1000D6728)
  {
    sub_1000175C0(&qword_1000D6720);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6728);
  }
  return result;
}

uint64_t sub_10007AFD8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007B010(uint64_t a1)
{
  return sub_10004DD94(a1, v1);
}

uint64_t sub_10007B018(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007B028()
{
  return swift_release();
}

uint64_t sub_10007B030(uint64_t a1)
{
  return sub_10004EE88(a1, v1);
}

uint64_t sub_10007B038(void *a1)
{
  return sub_10004F3CC(a1);
}

uint64_t sub_10007B040(uint64_t a1)
{
  return sub_10004F42C(a1, v1);
}

uint64_t sub_10007B048(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_10007B09C(void *a1)
{
  long long v2 = v1;
  unint64_t v4 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000A2750;
  id v6 = [v2 leadingAnchor];
  id v7 = [a1 leadingAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7];

  *(void *)(v5 + 32) = v8;
  id v9 = [v2 trailingAnchor];
  id v10 = [a1 trailingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v5 + 40) = v11;
  id v12 = [v2 topAnchor];
  id v13 = [a1 topAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v5 + 48) = v14;
  id v15 = [v2 bottomAnchor];
  id v16 = [a1 bottomAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v5 + 56) = v17;
  specialized Array._endMutation()();
  sub_10000A968();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 activateConstraints:isa];
}

uint64_t sub_10007B40C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9 = sub_100008E18(&qword_1000D4CC8);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t)[a4 attributedText];
  if (result)
  {
    id v13 = (void *)result;
    id v14 = [(id)result string];

    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = v16;

    uint64_t v28 = v15;
    uint64_t v29 = v17;
    uint64_t v26 = a2;
    uint64_t v27 = a3;
    uint64_t v18 = type metadata accessor for Locale();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
    sub_100008E5C();
    uint64_t v19 = StringProtocol.range<A>(of:options:range:locale:)();
    uint64_t v21 = v20;
    char v23 = v22;
    sub_10007B610((uint64_t)v11);
    if (v23)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v28 = v19;
      uint64_t v29 = v21;
      uint64_t v26 = v15;
      uint64_t v27 = v17;
      sub_100008E18(&qword_1000D4CD0);
      sub_10001A1A4();
      unint64_t v24 = _NSRange.init<A, B>(_:in:)();
      uint64_t result = (uint64_t)sub_100019AE8(a4, v24, v25);
      if (result) {
        return (*(uint64_t (**)(uint64_t))(a5 + 16))(a5);
      }
    }
  }
  return result;
}

uint64_t sub_10007B610(uint64_t a1)
{
  uint64_t v2 = sub_100008E18(&qword_1000D4CC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10007B674()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D6740);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D6740);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10007B7A0(char a1)
{
  return sub_10007B844(a1, (SEL *)&selRef_viewWillAppear_, "Playing movie", (SEL *)&selRef_play);
}

id sub_10007B828(char a1)
{
  return sub_10007B844(a1, (SEL *)&selRef_viewDidDisappear_, "Stopping movie", (SEL *)&selRef_stop);
}

id sub_10007B844(char a1, SEL *a2, const char *a3, SEL *a4)
{
  id v8 = v4;
  v15.receiver = v8;
  v15.super_class = (Class)swift_getObjectType();
  [super a1:a2 & 1];
  if (qword_1000D4458 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100008278(v10, (uint64_t)qword_1000D6740);
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, a3, v13, 2u);
    swift_slowDealloc();
  }

  id result = *(id *)&v8[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_movieView];
  if (result) {
    return [result *a4];
  }
  return result;
}

uint64_t sub_10007B9E4(uint64_t a1)
{
  uint64_t v3 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v65 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  os_log_type_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = (int *)__chkstk_darwin(v9);
  sub_10004BF88(a1 + v66[14], (uint64_t)v124, &qword_1000D4E60);
  sub_10004BF88((uint64_t)v124, (uint64_t)&v125, &qword_1000D4E60);
  uint64_t result = sub_1000230B0((uint64_t)&v125);
  if (result != 1)
  {
    uint64_t v61 = v5;
    uint64_t v62 = v6;
    id v64 = v8;
    sub_10004BF88((uint64_t)v124, (uint64_t)v103, &qword_1000D4E60);
    sub_10000A838((uint64_t)v103);
    NSString v14 = String._bridgeToObjectiveC()();
    [v1 setTitle:v14];

    NSString v15 = String._bridgeToObjectiveC()();
    [v1 setSubtitle:v15];

    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10003FDC4(a1, (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = v1;
    unint64_t v19 = (v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = swift_allocObject();
    sub_1000682AC((uint64_t)v12, v20 + v17, type metadata accessor for HeadphoneViewModel);
    *(void *)(v20 + v19) = v16;
    uint64_t v21 = v18;
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)&long long v107 = sub_10007CAEC;
    *((void *)&v107 + 1) = v20;
    uint64_t v104 = _NSConcreteStackBlock;
    uint64_t v105 = 1107296256;
    *(void *)&long long v106 = sub_100012FF0;
    *((void *)&v106 + 1) = &unk_1000C5BF8;
    char v23 = _Block_copy(&v104);
    unint64_t v24 = self;
    id v25 = [v24 actionWithTitle:v22 style:0 handler:v23];

    _Block_release(v23);
    swift_release();
    swift_release();
    id v63 = v25;

    uint64_t v26 = v66;
    if ((*(unsigned char *)(a1 + v66[16]) & 1) == 0)
    {
      uint64_t v27 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_bridgeObjectRetain();
      swift_retain();
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      *(void *)&long long v107 = sub_10007CBA0;
      *((void *)&v107 + 1) = v27;
      uint64_t v104 = _NSConcreteStackBlock;
      uint64_t v105 = 1107296256;
      *(void *)&long long v106 = sub_100012FF0;
      *((void *)&v106 + 1) = &unk_1000C5C20;
      uint64_t v29 = _Block_copy(&v104);
      id v30 = [v24 actionWithTitle:v28 style:1 handler:v29];

      _Block_release(v29);
      swift_release();
      swift_release();
      id v31 = [v21 addAction:v30];

      uint64_t v26 = v66;
    }
    uint64_t v32 = (uint64_t)v61;
    sub_10007CBA8(a1 + v26[11], (uint64_t)v61);
    if (v65[6](v32, 1, v62) == 1)
    {

      sub_10007CC70(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10002313C);
      return sub_10007CC10(v32);
    }
    else
    {
      sub_1000682AC(v32, (uint64_t)v64, type metadata accessor for HeadphoneAssets);
      id v33 = [objc_allocWithZone((Class)SFMediaPlayerView) init];
      id v34 = v21;
      id v35 = [self currentTraitCollection];
      id v36 = [v35 userInterfaceStyle];

      if (v36 == (id)2) {
        uint64_t v38 = 1;
      }
      else {
        uint64_t v38 = 2;
      }
      URL._bridgeToObjectiveC()(v37);
      uint64_t v40 = v39;
      [v33 updateViewForAssetType:v38 adjustmentsURL:v39];

      id v41 = objc_allocWithZone((Class)SFMediaPlayerItem);
      URL._bridgeToObjectiveC()(v42);
      uint64_t v44 = v43;
      id v45 = (int *)[v41 initWithURL:v43];
      uint64_t v66 = v45;

      [v45 setShouldLoop:1];
      [v33 addMovieItem:v45];
      id v46 = objc_allocWithZone((Class)UILayoutGuide);
      id v47 = v33;
      sub_10007CC70(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004D150);
      id v48 = v47;
      id v49 = [v46 init];
      sub_10007CC70(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10002313C);
      double v50 = *(double *)&v125;
      id v51 = [v49 heightAnchor];

      uint64_t v52 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))[v51 constraintEqualToConstant:v50];
      uint64_t v65 = v52;

      long long v78 = v135;
      long long v79 = v136;
      long long v80 = v137;
      long long v74 = v131;
      long long v75 = v132;
      long long v76 = v133;
      long long v77 = v134;
      long long v70 = v127;
      long long v71 = v128;
      long long v72 = v129;
      long long v73 = v130;
      long long v68 = v125;
      long long v69 = v126;
      long long v116 = v135;
      long long v117 = v136;
      long long v118 = v137;
      long long v112 = v131;
      long long v113 = v132;
      long long v114 = v133;
      long long v115 = v134;
      long long v108 = v127;
      long long v109 = v128;
      long long v110 = v129;
      long long v111 = v130;
      uint64_t v81 = v138;
      uint64_t v104 = (void **)v48;
      uint64_t v105 = (uint64_t)v49;
      uint64_t v119 = v138;
      long long v106 = v125;
      long long v107 = v126;
      char v120 = 0;
      uint64_t v121 = v52;
      unint64_t v122 = _swiftEmptyArrayStorage;
      uint64_t v123 = _swiftEmptyArrayStorage;
      id v53 = [v34 contentView];
      [v48 setTranslatesAutoresizingMaskIntoConstraints:0];
      [v53 addLayoutGuide:v49];
      [v53 addSubview:v48];
      [v53 sendSubviewToBack:v48];

      uint64_t v54 = self;
      id v55 = [v34 contentView];
      id v56 = [v55 mainContentGuide];

      sub_100082500(v56);
      sub_10000A968();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v54 activateConstraints:isa];

      sub_10007CCEC((uint64_t)v64);
      uint64_t v58 = *(void **)&v34[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_movieView];
      *(void *)&v34[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_movieView] = v48;

      v82[0] = v48;
      v82[1] = v49;
      long long v93 = v78;
      long long v94 = v79;
      long long v95 = v80;
      uint64_t v96 = v81;
      long long v89 = v74;
      long long v90 = v75;
      long long v91 = v76;
      long long v92 = v77;
      long long v85 = v70;
      long long v86 = v71;
      long long v87 = v72;
      long long v88 = v73;
      long long v83 = v68;
      long long v84 = v69;
      char v97 = 0;
      *(_DWORD *)id v98 = *(_DWORD *)v67;
      *(_DWORD *)&v98[3] = *(_DWORD *)&v67[3];
      uint64_t v99 = v65;
      uint64_t v100 = _swiftEmptyArrayStorage;
      uint64_t v101 = _swiftEmptyArrayStorage;
      nullsub_1(v82);
      uint64_t v59 = (uint64_t)&v34[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_movieContainer];
      sub_10004BF88((uint64_t)&v34[OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_movieContainer], (uint64_t)v102, &qword_1000D5B10);
      sub_10004BF88((uint64_t)v82, v59, &qword_1000D5B10);
      return sub_10007C6C4((uint64_t)v102);
    }
  }
  return result;
}

void sub_10007C3BC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + *(int *)(type metadata accessor for HeadphoneViewModel(0) + 64)) == 1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v3 = (void *)Strong;
      uint64_t v4 = swift_unknownObjectWeakLoadStrong();

      if (v4)
      {
        sub_10008BE14();
LABEL_8:
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      uint64_t v6 = (void *)v5;
      uint64_t v7 = swift_unknownObjectWeakLoadStrong();

      if (v7)
      {
        sub_10008D540(1);
        goto LABEL_8;
      }
    }
  }
}

void sub_10007C490()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008D540(0);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneShareAudioViewController()
{
  return self;
}

uint64_t sub_10007C650()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService33HeadphoneShareAudioViewController_type);
}

void sub_10007C660(uint64_t a1)
{
  if (*(void *)(a1 + 72))
  {
    id v2 = String._bridgeToObjectiveC()();
    [v1 showActivityIndicatorWithStatus:v2];
  }
}

uint64_t sub_10007C6C4(uint64_t a1)
{
  sub_10004CEE4(*(void **)a1, *(void **)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void **)(a1 + 240));
  return a1;
}

uint64_t sub_10007C740()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10007C778()
{
  uint64_t v1 = v0;
  id v2 = (int *)type metadata accessor for HeadphoneViewModel(0);
  uint64_t v3 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(*((void *)v2 - 1) + 64);
  uint64_t v6 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v7 = v0 + v4 + v2[11];
  id v8 = (int *)type metadata accessor for HeadphoneAssets(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8))
  {
    uint64_t v17 = v5;
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v11(v7, v9);
    v11(v7 + v8[5], v9);
    uint64_t v12 = v7 + v8[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9)) {
      v11(v12, v9);
    }
    uint64_t v13 = v7 + v8[7];
    uint64_t v14 = type metadata accessor for HeadphoneAssets.Feature(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
    {
      v11(v13, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();

    uint64_t v4 = (v3 + 16) & ~v3;
    uint64_t v1 = v0;
    uint64_t v5 = v17;
  }
  if (*(void *)(v6 + v2[13] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v6 + v2[14] + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v6 + v2[19];
  if (*(void *)(v15 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  swift_release();

  return _swift_deallocObject(v1, ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | 7);
}

void sub_10007CAEC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for HeadphoneViewModel(0) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_10007C3BC(a1, v4);
}

uint64_t sub_10007CB88(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10007CB98()
{
  return swift_release();
}

void sub_10007CBA0()
{
}

uint64_t sub_10007CBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D4810);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007CC10(uint64_t a1)
{
  uint64_t v2 = sub_100008E18(&qword_1000D4810);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_10007CC70(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26]);
  return a1;
}

uint64_t sub_10007CCEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for HeadphoneSettings()
{
  return &type metadata for HeadphoneSettings;
}

uint64_t sub_10007CD60(uint64_t a1, void *a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [a2 arrayForKey:v4];

  if (v5
    && (uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v5,
        uint64_t v7 = sub_10007D610(v6),
        swift_bridgeObjectRelease(),
        v7))
  {
    if (v7[2])
    {
      if (qword_1000D4460 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_100008278(v8, (uint64_t)qword_1000D67A0);
      swift_bridgeObjectRetain_n();
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v12 = Array.description.getter();
        unint64_t v14 = v13;
        swift_bridgeObjectRelease();
        sub_10005D8C8(v12, v14, &v21);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "User has seen tutorial cards for: %s", v11, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    char v19 = sub_10007D460(a1, (uint64_t)v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1000D4460 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100008278(v15, (uint64_t)qword_1000D67A0);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "No seen tutorial product IDs found", v18, 2u);
      swift_slowDealloc();
    }

    char v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_10007D090(uint64_t a1, void *a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [a2 arrayForKey:v4];

  if (v5
    && (uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v5,
        uint64_t v7 = sub_10007D610(v6),
        swift_bridgeObjectRelease(),
        v7))
  {
    uint64_t v8 = sub_10007F444((uint64_t)v7);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_10007ED8C(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  uint64_t v27 = v9;
  if ((sub_10007D460(a1, (uint64_t)v9) & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_10004C004(0, v9[2] + 1, 1, v9);
    }
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      uint64_t v9 = sub_10004C004((void *)(v10 > 1), v11 + 1, 1, v9);
    }
    v9[2] = v11 + 1;
    *((_DWORD *)v9 + v11 + 8) = a1;
    uint64_t v27 = v9;
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v13 = String._bridgeToObjectiveC()();
    [a2 setObject:isa forKey:v13];

    if (qword_1000D4460 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100008278(v14, (uint64_t)qword_1000D67A0);
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v17 = 136315138;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v18 = Array.description.getter();
      unint64_t v20 = v19;
      swift_bridgeObjectRelease();
      sub_10005D8C8(v18, v20, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Saved seen tutorial product IDs as %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [a2 longLongForKey:v21];

  if (!v22)
  {
    Class v23 = Int._bridgeToObjectiveC()().super.super.isa;
    NSString v24 = String._bridgeToObjectiveC()();
    [a2 setObject:v23 forKey:v24];
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10007D460(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  if (*(_DWORD *)(a2 + 32) == result) {
    return 1;
  }
  if (v2 == 1) {
    return 0;
  }
  for (uint64_t i = 9; ; ++i)
  {
    uint64_t v4 = i - 7;
    if (__OFADD__(i - 8, 1)) {
      break;
    }
    BOOL v6 = *(_DWORD *)(a2 + 4 * i) == result;
    BOOL v5 = v6;
    BOOL v6 = v6 || v4 == v2;
    if (v6) {
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10007D4C4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D67A0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D67A0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10007D58C()
{
  id v0 = objc_allocWithZone((Class)NSUbiquitousKeyValueStore);
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 initWithStoreIdentifier:v1 type:1];

  id result = [v2 synchronize];
  qword_1000D9290 = (uint64_t)v2;
  return result;
}

void *sub_10007D610(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t v10 = _swiftEmptyArrayStorage;
  sub_10009C658(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_10003101C(i, (uint64_t)v9);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10009C658(0, v3[2] + 1, 1);
        uint64_t v3 = v10;
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_10009C658(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v10;
      }
      _OWORD v3[2] = v6 + 1;
      *((_DWORD *)v3 + v6 + 8) = v8;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    return 0;
  }
  return v3;
}

uint64_t sub_10007D750(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100008EB0(0, &qword_1000D4BF8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_10007DAF4(v7, result + 1);
    NSString v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_10007DCEC();
      Class v23 = v28;
    }
    else
    {
      Class v23 = (void *)v22;
      id v24 = v8;
    }
    sub_10007E214((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100008EB0(0, &qword_1000D4BF8);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        unint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_10007E298((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_10007D9F0(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = static Hasher._hash(seed:bytes:count:)();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10007E420(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v10 + 4 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

Swift::Int sub_10007DAF4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100008E18(&qword_1000D4BF0);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v14 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_100008EB0(0, &qword_1000D4BF8);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10007DCEC();
          uint64_t v2 = v14;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_10007DCEC()
{
  NSString v1 = v0;
  uint64_t v2 = *v0;
  sub_100008E18(&qword_1000D4BF0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    NSString v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                NSString v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10007DF8C()
{
  NSString v1 = v0;
  uint64_t v2 = *v0;
  sub_100008E18(&qword_1000D67B8);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *unint64_t v6 = v26;
                }
                NSString v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      uint64_t result = static Hasher._hash(seed:bytes:count:)();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_10007E214(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

void sub_10007E298(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10007DCEC();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10007E548();
      goto LABEL_14;
    }
    sub_10007E88C();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100008EB0(0, &qword_1000D4BF8);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = static NSObject.== infix(_:_:)();

    if (v12)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = static NSObject.== infix(_:_:)();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_10007E420(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10007DF8C();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_10007E6F4();
      goto LABEL_14;
    }
    sub_10007EB08();
  }
  uint64_t v8 = *v3;
  unint64_t result = static Hasher._hash(seed:bytes:count:)();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

id sub_10007E548()
{
  NSString v1 = v0;
  sub_100008E18(&qword_1000D4BF0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10007E6F4()
{
  NSString v1 = v0;
  sub_100008E18(&qword_1000D67B8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10007E88C()
{
  NSString v1 = v0;
  uint64_t v2 = *v0;
  sub_100008E18(&qword_1000D4BF0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = NSObject._rawHashValue(seed:)(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    NSString v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10007EB08()
{
  NSString v1 = v0;
  uint64_t v2 = *v0;
  sub_100008E18(&qword_1000D67B8);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    uint64_t result = static Hasher._hash(seed:bytes:count:)();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    NSString v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void *sub_10007ED70(uint64_t a1)
{
  return sub_10007EE90(a1, &qword_1000D4BF8, (uint64_t)AMSDeviceOfferRegistrationGroup_ptr, &qword_1000D4C00);
}

void *sub_10007ED8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100008E18(&qword_1000D5B60);
  uint64_t v3 = swift_allocObject();
  int64_t v4 = j__malloc_size((const void *)v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 29;
  }
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * (v5 >> 2);
  uint64_t v6 = sub_10007EFB4(&v8, (_DWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_10003FDBC();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

void *sub_10007EE74(uint64_t a1)
{
  return sub_10007EE90(a1, &qword_1000D67C0, (uint64_t)UNNotificationSource_ptr, (unint64_t *)&qword_1000D67C8);
}

void *sub_10007EE90(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = __CocoaSet.count.getter();
    if (v8) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v8 <= 0)
  {
    unint64_t v9 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100008E18((uint64_t *)&unk_1000D5090);
    unint64_t v9 = (void *)swift_allocObject();
    int64_t v10 = j__malloc_size(v9);
    uint64_t v11 = v10 - 32;
    if (v10 < 32) {
      uint64_t v11 = v10 - 25;
    }
    v9[2] = v8;
    v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_10007F148(&v14, v9 + 4, v8, a1, a2, a3, a4);
  uint64_t result = (void *)sub_10003FDBC();
  if (v12 == (void *)v8) {
    return v9;
  }
  __break(1u);
  return result;
}

void *sub_10007EFB4(void *result, _DWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_DWORD *)(*(void *)(a4 + 48) + 4 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_10007F148(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  uint64_t v9 = a2;
  uint64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_100008EB0(0, a5);
    sub_10007F4B8(a7, a5);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    uint64_t v27 = v29;
LABEL_41:
    void *v27 = v7;
    v27[1] = v12;
    void v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_40;
      }
      sub_100008EB0(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      uint64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_10007F444(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned int *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_10007D9F0(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_10007F4B8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100008EB0(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007F508()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D67D0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D67D0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10007F634(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30.receiver = v2;
  v30.super_class = ObjectType;
  [super viewWillAppear:a1 & 1];
  uint64_t v12 = &v2[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_viewModel];
  swift_beginAccess();
  uint64_t v13 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_4:
    sub_10001A2AC((uint64_t)v7, &qword_1000D4810);
    goto LABEL_5;
  }
  sub_10007CBA8((uint64_t)&v12[*(int *)(v13 + 44)], (uint64_t)v7);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    goto LABEL_4;
  }
  sub_100081930((uint64_t)v7, (uint64_t)v11);
  int64_t v20 = (void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView];
  swift_beginAccess();
  unint64_t v21 = *v20;
  if (*v20)
  {
    swift_endAccess();
    int64_t v22 = self;
    id v23 = v21;
    id v24 = [v22 currentTraitCollection];
    id v25 = [v24 userInterfaceStyle];

    if (v25 == (id)2) {
      uint64_t v26 = 1;
    }
    else {
      uint64_t v26 = 2;
    }
    URL._bridgeToObjectiveC()((NSURL *)1);
    uint64_t v28 = v27;
    [v23 updateViewForAssetType:v26 adjustmentsURL:v27];

    sub_10007CCEC((uint64_t)v11);
  }
  else
  {
    sub_10007CCEC((uint64_t)v11);
    swift_endAccess();
  }
LABEL_5:
  if (qword_1000D4470 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100008278(v14, (uint64_t)qword_1000D67D0);
  unint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    unint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Playing movie", v17, 2u);
    swift_slowDealloc();
  }

  unint64_t v18 = (id *)&v2[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView];
  swift_beginAccess();
  id result = *v18;
  if (*v18) {
    return [result play];
  }
  return result;
}

id sub_10007FA38(char a1)
{
  uint64_t v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType();
  [super viewDidDisappear:a1 & 1];
  if (qword_1000D4470 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100008278(v4, (uint64_t)qword_1000D67D0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Stopping movie", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = (id *)&v2[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView];
  swift_beginAccess();
  id result = *v8;
  if (*v8) {
    return [result stop];
  }
  return result;
}

id sub_10007FBD0(uint64_t a1)
{
  uint64_t v3 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for HeadphoneViewModel(0);
  sub_10004BF88(a1 + *(int *)(v13 + 56), (uint64_t)v168, &qword_1000D4E60);
  sub_10004BF88((uint64_t)v168, (uint64_t)&v169, &qword_1000D4E60);
  id result = (id)sub_1000230B0((uint64_t)&v169);
  if (result != 1)
  {
    sub_10007CBA8(a1 + *(int *)(v13 + 44), (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
      return (id)sub_10001A2AC((uint64_t)v8, &qword_1000D4810);
    }
    sub_100081930((uint64_t)v8, (uint64_t)v12);
    sub_10003FDC4(a1, (uint64_t)v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 0, 1, v13);
    uint64_t v15 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_viewModel];
    swift_beginAccess();
    sub_10004BF88((uint64_t)v168, (uint64_t)v166, &qword_1000D4E60);
    sub_10000A838((uint64_t)v166);
    sub_10003FE28((uint64_t)v5, v15);
    swift_endAccess();
    NSString v16 = String._bridgeToObjectiveC()();
    [v1 setTitle:v16];

    id v17 = [objc_allocWithZone((Class)PRXLabel) initWithStyle:5];
    [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v17 setTextAlignment:1];
    NSString v18 = String._bridgeToObjectiveC()();
    [v17 setText:v18];

    id v19 = v1;
    id v20 = [v1 contentView];
    [v20 addSubview:v17];

    id v21 = [objc_allocWithZone((Class)SFMediaPlayerView) init];
    uint64_t v138 = v12;
    id v22 = objc_allocWithZone((Class)SFMediaPlayerItem);
    URL._bridgeToObjectiveC()(v23);
    id v25 = v24;
    id v26 = [v22 initWithURL:v24];

    [v26 setShouldLoop:1];
    id v141 = v21;
    id v137 = v26;
    [v21 addMovieItem:v26];
    id v136 = (id)sub_100008E18((uint64_t *)&unk_1000D5090);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1000A2930;
    id v28 = [v17 leadingAnchor];
    uint64_t v29 = v19;
    id v30 = [v19 contentView];
    id v31 = [v30 mainContentGuide];

    id v32 = [v31 leadingAnchor];
    id v33 = [v28 constraintEqualToAnchor:v32];

    *(void *)(v27 + 32) = v33;
    id v34 = [v17 trailingAnchor];
    id v35 = [v29 contentView];
    id v36 = [v35 mainContentGuide];

    id v37 = [v36 trailingAnchor];
    id v38 = [v34 constraintEqualToAnchor:v37];

    *(void *)(v27 + 40) = v38;
    id v140 = v17;
    id v39 = [v17 bottomAnchor];
    int v139 = v29;
    id v40 = [v29 contentView];
    id v41 = [v40 mainContentGuide];

    id v42 = [v41 bottomAnchor];
    id v43 = [v39 constraintEqualToAnchor:v42];

    *(void *)(v27 + 48) = v43;
    *(void *)id v167 = v27;
    specialized Array._endMutation()();
    uint64_t v44 = *(void **)v167;
    uint64_t v165 = *(void *)v167;
    if (BYTE8(v175) == 1)
    {
      id v45 = objc_allocWithZone((Class)UILayoutGuide);
      sub_10004D19C(v168, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004D150);
      id v46 = v141;
      id v47 = [v45 init];
      double v48 = *(double *)&v170;
      id v49 = [v47 heightAnchor];
      id v50 = [v49 constraintEqualToConstant:v48];

      *(void *)id v163 = v46;
      *(void *)&v163[8] = v47;
      *(_OWORD *)&v163[176] = v179;
      *(_OWORD *)&v163[192] = v180;
      *(_OWORD *)&v163[208] = v181;
      *(void *)&v163[224] = v182;
      *(_OWORD *)&v163[112] = v175;
      *(_OWORD *)&v163[128] = v176;
      *(_OWORD *)&v163[144] = v177;
      *(_OWORD *)&v163[160] = v178;
      *(_OWORD *)&v163[48] = v171;
      *(_OWORD *)&v163[64] = v172;
      *(_OWORD *)&v163[80] = v173;
      *(_OWORD *)&v163[96] = v174;
      *(_OWORD *)&v163[16] = v169;
      *(_OWORD *)&v163[32] = v170;
      v163[232] = 1;
      *(void *)&v163[240] = v50;
      *(void *)&v163[248] = _swiftEmptyArrayStorage;
      *(void *)&v163[256] = _swiftEmptyArrayStorage;
      memcpy(v167, v163, sizeof(v167));
      id v51 = v139;
      id result = [v139 view];
      if (result)
      {
        uint64_t v52 = result;
        id v53 = [v51 contentView];
        [v46 setTranslatesAutoresizingMaskIntoConstraints:0];
        [v53 addLayoutGuide:v47];
        [v52 addSubview:v46];
        [v52 sendSubviewToBack:v46];

        id v54 = [v51 contentView];
        id v55 = self;
        id v56 = [v55 clearColor];
        [v54 setBackgroundColor:v56];

        id v57 = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.0];
        id v58 = [v57 CGColor];

        id v59 = [objc_allocWithZone((Class)CAGradientLayer) init];
        [v46 bounds];
        id v135 = v59;
        [v59 setFrame:];
        uint64_t v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = xmmword_1000A2750;
        sub_100008EB0(0, (unint64_t *)&qword_1000D5350);
        id v136 = v46;
        *(NSNumber *)(v60 + 32) = NSNumber.init(floatLiteral:)(0.01);
        *(NSNumber *)(v60 + 40) = NSNumber.init(floatLiteral:)(0.32);
        *(NSNumber *)(v60 + 48) = NSNumber.init(floatLiteral:)(0.7);
        *(NSNumber *)(v60 + 56) = NSNumber.init(floatLiteral:)(0.99);
        v143[0] = v60;
        specialized Array._endMutation()();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v59 setLocations:isa];

        sub_100008E18(&qword_1000D5368);
        uint64_t v62 = swift_allocObject();
        *(_OWORD *)(v62 + 16) = xmmword_1000A24B0;
        type metadata accessor for CGColor(0);
        uint64_t v64 = v63;
        *(void *)(v62 + 56) = v63;
        *(void *)(v62 + 32) = v58;
        id v65 = v58;
        id v66 = [v55 whiteColor];
        id v67 = [v66 CGColor];

        *(void *)(v62 + 88) = v64;
        *(void *)(v62 + 64) = v67;
        id v68 = [v55 whiteColor];
        id v69 = [v68 CGColor];

        *(void *)(v62 + 96) = v69;
        *(void *)(v62 + 152) = v64;
        *(void *)(v62 + 120) = v64;
        *(void *)(v62 + 128) = v65;
        id v70 = v65;
        Class v71 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v72 = v135;
        [v135 setColors:v71];

        id v73 = [v136 layer];
        [v73 setMask:v72];

        long long v74 = *(void **)&v51[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_gradientLayer];
        *(void *)&v51[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_gradientLayer] = v72;
        id v75 = v72;

        memcpy(v142, v163, 0x108uLL);
        nullsub_1(v142);
        uint64_t v76 = (uint64_t)&v51[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer];
        sub_10004BF88((uint64_t)&v51[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer], (uint64_t)v143, &qword_1000D5B10);
        sub_10004BF88((uint64_t)v142, v76, &qword_1000D5B10);
        sub_10004D248((uint64_t)v163);
        sub_10007C6C4((uint64_t)v143);
        id result = [v51 view];
        if (result)
        {
          long long v77 = result;
          id v78 = [v51 contentView];
          id v79 = [v78 mainContentGuide];

          unint64_t v80 = sub_1000829E0(v77, v79);
          sub_100081008(v80);
          id v81 = [v140 topAnchor];
          id v82 = [v51 contentView];
          id v83 = [v82 mainContentGuide];

          id v84 = [v83 topAnchor];
          id v85 = [v81 constraintGreaterThanOrEqualToAnchor:v84 constant:*(double *)&v175];
          sub_10004D19C(v168, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10002313C);

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v86 = (uint64_t)v138;
          if (*(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          sub_10000A9A8((uint64_t)v163);
LABEL_20:
          uint64_t v124 = (void **)&v51[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView];
          swift_beginAccess();
          long long v125 = *v124;
          id v126 = v141;
          *uint64_t v124 = v141;
          id v127 = v126;

          long long v128 = self;
          sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
          Class v129 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v128 activateConstraints:v129];

          return (id)sub_10007CCEC(v86);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return result;
    }
    id v87 = [objc_allocWithZone((Class)UILayoutGuide) init];
    id v136 = v44;
    long long v88 = v87;
    long long v89 = v139;
    id v90 = [v139 contentView];
    [v90 addLayoutGuide:v88];

    id v91 = objc_allocWithZone((Class)UILayoutGuide);
    sub_10004D19C(v168, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004D150);
    id v92 = v141;
    id v93 = [v91 init];
    sub_10004D19C(v168, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10002313C);
    double v94 = *(double *)&v170;
    id v95 = [v93 heightAnchor];

    id v96 = [v95 constraintEqualToConstant:v94];
    v142[10] = v179;
    v142[11] = v180;
    v142[12] = v181;
    v142[6] = v175;
    v142[7] = v176;
    v142[8] = v177;
    v142[9] = v178;
    v142[2] = v171;
    v142[3] = v172;
    v142[4] = v173;
    v142[5] = v174;
    v142[0] = v169;
    v142[1] = v170;
    *(_OWORD *)&v167[176] = v179;
    *(_OWORD *)&v167[192] = v180;
    *(_OWORD *)&v167[208] = v181;
    *(_OWORD *)&v167[112] = v175;
    *(_OWORD *)&v167[128] = v176;
    *(_OWORD *)&v167[144] = v177;
    *(_OWORD *)&v167[160] = v178;
    *(_OWORD *)&v167[48] = v171;
    *(_OWORD *)&v167[64] = v172;
    *(_OWORD *)&v167[80] = v173;
    *(_OWORD *)&v167[96] = v174;
    *(void *)&v142[13] = v182;
    *(void *)id v167 = v92;
    *(void *)&v167[8] = v93;
    *(void *)&v167[224] = v182;
    *(_OWORD *)&v167[16] = v169;
    *(_OWORD *)&v167[32] = v170;
    v167[232] = 1;
    id v133 = v96;
    *(void *)&v167[240] = v96;
    *(void *)&v167[248] = _swiftEmptyArrayStorage;
    *(void *)&v167[256] = _swiftEmptyArrayStorage;
    id v97 = [v89 contentView];
    [v92 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v134 = v93;
    [v97 addLayoutGuide:v93];
    [v97 addSubview:v92];
    id v135 = v92;
    [v97 sendSubviewToBack:v92];

    id v98 = [v88 topAnchor];
    id v99 = [v89 contentView];
    uint64_t v100 = &stru_1000D0000;
    id v101 = [v99 mainContentGuide];

    id v102 = [v101 topAnchor];
    id v132 = [v98 constraintEqualToAnchor:v102];

    id v103 = [v88 leadingAnchor];
    id v104 = [v89 contentView];
    id v105 = [v104 mainContentGuide];

    id v106 = [v105 leadingAnchor];
    id v131 = [v103 constraintEqualToAnchor:v106];

    id v107 = [v88 trailingAnchor];
    id v108 = [v89 contentView];
    id v109 = [v108 mainContentGuide];

    id v110 = [v109 trailingAnchor];
    long long v111 = v88;
    unint64_t v112 = (unint64_t)v136;
    id v113 = [v107 constraintEqualToAnchor:v110];

    id v114 = [v111 bottomAnchor];
    id v115 = [v140 topAnchor];
    id v116 = [v114 constraintEqualToAnchor:v115 constant:-PRXMainContentMargin];

    if (v112 >> 62)
    {
      swift_bridgeObjectRetain();
      long long v117 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v118 = (uint64_t)v117 + 4;
      if (!__OFADD__(v117, 4))
      {
LABEL_12:
        long long v117 = v116;
        sub_10000A870(v118);
        specialized Array._endMutation()();
        uint64_t v100 = (__objc2_ivar *)v132;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_13:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v119 = v131;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          id v51 = v139;
          if (*(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v120 = v113;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          id v121 = v117;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v165 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          unint64_t v122 = sub_100082500(v111);
          sub_100081008(v122);

          v143[0] = v135;
          v143[1] = v134;
          long long v154 = v142[10];
          long long v155 = v142[11];
          long long v156 = v142[12];
          uint64_t v157 = *(void *)&v142[13];
          long long v150 = v142[6];
          long long v151 = v142[7];
          long long v152 = v142[8];
          long long v153 = v142[9];
          long long v146 = v142[2];
          long long v147 = v142[3];
          long long v148 = v142[4];
          long long v149 = v142[5];
          long long v144 = v142[0];
          long long v145 = v142[1];
          char v158 = 1;
          *(_DWORD *)id v159 = *(_DWORD *)v164;
          *(_DWORD *)&v159[3] = *(_DWORD *)&v164[3];
          id v160 = v133;
          id v161 = _swiftEmptyArrayStorage;
          id v162 = _swiftEmptyArrayStorage;
          nullsub_1(v143);
          uint64_t v123 = (uint64_t)&v51[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer];
          sub_10004BF88((uint64_t)&v51[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer], (uint64_t)v163, &qword_1000D5B10);
          sub_10004BF88((uint64_t)v143, v123, &qword_1000D5B10);
          sub_10007C6C4((uint64_t)v163);
          uint64_t v86 = (uint64_t)v138;
          goto LABEL_20;
        }
LABEL_25:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_13;
      }
    }
    else
    {
      long long v117 = *(void **)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v118 = (uint64_t)v117 + 4;
      if (!__OFADD__(v117, 4)) {
        goto LABEL_12;
      }
    }
    __break(1u);
    goto LABEL_25;
  }
  return result;
}

uint64_t sub_100081008(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    uint64_t *v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1000814DC(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

void sub_1000811D4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_gradientLayer);
  if (v1)
  {
    uint64_t v2 = (void **)(v0 + OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer);
    sub_10004BF88((uint64_t)v2, (uint64_t)v10, &qword_1000D5B10);
    sub_10004BF88((uint64_t)v10, (uint64_t)v11, &qword_1000D5B10);
    if (sub_10004BFEC(v11) == 1)
    {
      id v3 = v1;
      double v4 = 0.0;
      double v5 = 0.0;
      double v6 = 0.0;
      double v7 = 0.0;
    }
    else
    {
      uint64_t v8 = *v2;
      id v9 = v1;
      [v8 bounds];
    }
    [v1 setFrame:v6, v7, v4, v5];
  }
}

uint64_t sub_1000813BC()
{
  return type metadata accessor for HeadphoneRepairViewController();
}

uint64_t type metadata accessor for HeadphoneRepairViewController()
{
  uint64_t result = qword_1000D6830;
  if (!qword_1000D6830) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100081410()
{
  sub_100022D30();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1000814CC()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_type);
}

uint64_t sub_1000814DC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100081994();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100008E18(&qword_1000D6840);
          uint64_t v12 = sub_1000816F0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void (*sub_1000816F0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1000817A0(v6, a2, a3);
  return sub_100081758;
}

void sub_100081758(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1000817A0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return sub_100081820;
  }
  __break(1u);
  return result;
}

void sub_100081820(id *a1)
{
}

id sub_100081828(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieContainer];
  sub_10004D660((uint64_t)v9);
  sub_10004BF88((uint64_t)v9, v4, &qword_1000D5B10);
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_movieView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_gradientLayer] = 0;
  double v5 = &v1[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_viewModel];
  uint64_t v6 = type metadata accessor for HeadphoneViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_presenter + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC20HeadphoneProxService29HeadphoneRepairViewController_type] = 19;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  return [super initWithContentView:a1];
}

uint64_t sub_100081930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100081994()
{
  unint64_t result = qword_1000D6848;
  if (!qword_1000D6848)
  {
    sub_1000175C0(&qword_1000D6840);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6848);
  }
  return result;
}

uint64_t destroy for HeadphoneMovieContainer(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeadphoneMovieContainer(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  uint64_t v7 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v7;
  uint64_t v8 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v8;
  long long v9 = *(_OWORD *)(a2 + 192);
  long long v10 = *(_OWORD *)(a2 + 208);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(_OWORD *)(a1 + 192) = v9;
  *(_OWORD *)(a1 + 208) = v10;
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v12 = *(void **)(a2 + 240);
  uint64_t v11 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = v12;
  *(void *)(a1 + 248) = v11;
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  id v13 = v3;
  id v14 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HeadphoneMovieContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v10 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v10;
  long long v11 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v11;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v12 = *(void **)(a2 + 240);
  id v13 = *(void **)(a1 + 240);
  *(void *)(a1 + 240) = v12;
  id v14 = v12;

  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for HeadphoneMovieContainer(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x108uLL);
}

uint64_t assignWithTake for HeadphoneMovieContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  uint64_t v7 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v8;
  swift_bridgeObjectRelease();
  long long v9 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v9;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);

  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphoneMovieContainer(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 264)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadphoneMovieContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 264) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 264) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphoneMovieContainer()
{
  return &type metadata for HeadphoneMovieContainer;
}

uint64_t sub_100081E98(void *a1, void *a2)
{
  double v4 = *(double *)(v2 + 16);
  double v3 = *(double *)(v2 + 24);
  uint64_t v5 = v2;
  double v8 = *(double *)(v2 + 136);
  switch(*(unsigned char *)(v2 + 232))
  {
    case 1:
      double v4 = *(double *)(v2 + 32);
      double v3 = *(double *)(v2 + 40);
      goto LABEL_8;
    case 2:
      if (!*(unsigned char *)(v2 + 64))
      {
        double v3 = *(double *)(v2 + 56);
        double v4 = *(double *)(v2 + 48);
      }
      double v8 = *(double *)(v2 + 152);
      break;
    case 3:
      if (!*(unsigned char *)(v2 + 88))
      {
        double v3 = *(double *)(v2 + 80);
        double v4 = *(double *)(v2 + 72);
      }
LABEL_8:
      double v8 = *(double *)(v2 + 136);
      break;
    default:
      break;
  }
  uint64_t v9 = 128;
  if (*(unsigned char *)(v2 + 232) == 2)
  {
    uint64_t v9 = 144;
    double v10 = *(double *)(v2 + 152);
  }
  else
  {
    double v10 = *(double *)(v2 + 136);
  }
  double v11 = *(double *)(v2 + v9);
  double v12 = v8 * 0.5 - (v3 + v4 * 0.5);
  id v13 = *(void **)(v2 + 8);
  id v14 = [v13 centerYAnchor];
  id v59 = a1;
  id v15 = [a1 centerYAnchor];
  id v62 = [v14 constraintEqualToAnchor:v15];

  id v16 = [v13 topAnchor];
  id v17 = [a2 topAnchor];
  id v60 = [v16 constraintEqualToAnchor:v17];

  id v18 = [v13 topAnchor];
  id v19 = [a1 topAnchor];
  id v20 = [v18 constraintGreaterThanOrEqualToAnchor:v19];

  id v21 = *(id *)v5;
  id v22 = [*(id *)v5 centerYAnchor];
  id v23 = [v13 centerYAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23 constant:v12];

  id v25 = [v21 topAnchor];
  id v26 = [v13 topAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1000A2930;
  *(void *)(v28 + 32) = v24;
  *(void *)(v28 + 40) = v62;
  *(void *)(v28 + 48) = v20;
  uint64_t v64 = v28;
  specialized Array._endMutation()();
  id v29 = v24;
  id v57 = v62;
  id v30 = v20;
  swift_bridgeObjectRelease();
  *(void *)(v5 + 248) = v64;
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1000A2260;
  *(void *)(v31 + 32) = v60;
  *(void *)(v31 + 40) = v27;
  uint64_t v65 = v31;
  specialized Array._endMutation()();
  id v61 = v60;
  id v63 = v27;
  swift_bridgeObjectRelease();
  *(void *)(v5 + 256) = v65;
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1000A4990;
  id v33 = [v21 heightAnchor];
  id v34 = [v33 constraintEqualToConstant:v10];

  *(void *)(v32 + 32) = v34;
  id v35 = [v21 widthAnchor];
  id v36 = [v35 constraintEqualToConstant:v11];

  *(void *)(v32 + 40) = v36;
  *(void *)(v32 + 48) = v29;
  id v58 = v29;
  id v37 = [v21 centerXAnchor];
  id v38 = [v13 centerXAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v32 + 56) = v39;
  *(void *)(v32 + 64) = v30;
  id v40 = v30;
  id v41 = [v13 bottomAnchor];
  id v42 = [v59 bottomAnchor];
  id v43 = [v41 constraintLessThanOrEqualToAnchor:v42];

  uint64_t v44 = *(void **)(v5 + 240);
  *(void *)(v32 + 72) = v43;
  *(void *)(v32 + 80) = v44;
  *(void *)(v32 + 88) = v57;
  id v45 = v57;
  id v46 = v44;
  id v47 = [v13 centerXAnchor];
  id v48 = [v59 centerXAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  *(void *)(v32 + 96) = v49;
  id v50 = [v13 leadingAnchor];
  id v51 = [v59 leadingAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51];

  *(void *)(v32 + 104) = v52;
  id v53 = [v13 trailingAnchor];
  id v54 = [v59 trailingAnchor];
  id v55 = [v53 constraintEqualToAnchor:v54];

  *(void *)(v32 + 112) = v55;
  specialized Array._endMutation()();

  return v32;
}

uint64_t sub_100082500(void *a1)
{
  double v3 = *(double *)(v1 + 16);
  double v2 = *(double *)(v1 + 24);
  int v4 = *(unsigned __int8 *)(v1 + 232);
  double v6 = *(double *)(v1 + 136);
  switch(*(unsigned char *)(v1 + 232))
  {
    case 1:
      double v3 = *(double *)(v1 + 32);
      double v2 = *(double *)(v1 + 40);
      goto LABEL_8;
    case 2:
      if ((*(unsigned char *)(v1 + 64) & 1) == 0)
      {
        double v3 = *(double *)(v1 + 48);
        double v2 = *(double *)(v1 + 56);
      }
      double v6 = *(double *)(v1 + 152);
      break;
    case 3:
      if ((*(unsigned char *)(v1 + 88) & 1) == 0)
      {
        double v3 = *(double *)(v1 + 72);
        double v2 = *(double *)(v1 + 80);
      }
LABEL_8:
      double v6 = *(double *)(v1 + 136);
      break;
    default:
      break;
  }
  if (v4 == 2) {
    double v7 = *(double *)(v1 + 144);
  }
  else {
    double v7 = *(double *)(v1 + 128);
  }
  if (v4 == 2) {
    double v8 = *(double *)(v1 + 152);
  }
  else {
    double v8 = *(double *)(v1 + 136);
  }
  double v9 = v6 * 0.5 - (v2 + v3 * 0.5);
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000A4990;
  id v11 = *(id *)v1;
  id v12 = [*(id *)v1 heightAnchor];
  id v13 = [v12 constraintEqualToConstant:v8];

  *(void *)(v10 + 32) = v13;
  id v14 = [v11 widthAnchor];
  id v15 = [v14 constraintEqualToConstant:v7];

  *(void *)(v10 + 40) = v15;
  id v16 = [v11 centerYAnchor];
  id v17 = *(void **)(v1 + 8);
  id v18 = [v17 centerYAnchor];
  id v19 = [v16 constraintEqualToAnchor:v18 constant:v9];

  *(void *)(v10 + 48) = v19;
  id v20 = [v11 centerXAnchor];
  id v21 = [v17 centerXAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  *(void *)(v10 + 56) = v22;
  id v23 = [v17 topAnchor];
  id v24 = [a1 topAnchor];
  id v25 = [v23 constraintGreaterThanOrEqualToAnchor:v24];

  *(void *)(v10 + 64) = v25;
  id v26 = [v17 bottomAnchor];
  id v27 = [a1 bottomAnchor];
  id v28 = [v26 constraintLessThanOrEqualToAnchor:v27];

  *(void *)(v10 + 72) = v28;
  id v29 = [v17 heightAnchor];
  id v30 = [v29 constraintEqualToConstant:v3];

  *(void *)(v10 + 80) = v30;
  id v31 = [v17 centerYAnchor];
  id v32 = [a1 centerYAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  *(void *)(v10 + 88) = v33;
  id v34 = [v17 centerXAnchor];
  id v35 = [a1 centerXAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v10 + 96) = v36;
  id v37 = [v17 leadingAnchor];
  id v38 = [a1 leadingAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v10 + 104) = v39;
  id v40 = [v17 trailingAnchor];
  id v41 = [a1 trailingAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41];

  *(void *)(v10 + 112) = v42;
  specialized Array._endMutation()();
  return v10;
}

uint64_t sub_1000829E0(void *a1, void *a2)
{
  uint64_t v5 = 128;
  if (*(unsigned char *)(v2 + 232) == 2) {
    uint64_t v5 = 144;
  }
  uint64_t v6 = 136;
  if (*(unsigned char *)(v2 + 232) == 2) {
    uint64_t v6 = 152;
  }
  double v7 = *(double *)(v2 + v6);
  double v8 = *(double *)(v2 + v5);
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1000A4990;
  id v10 = *(id *)v2;
  id v11 = [*(id *)v2 heightAnchor];
  id v12 = [v11 constraintEqualToConstant:v7];

  *(void *)(v9 + 32) = v12;
  id v13 = [v10 widthAnchor];
  id v14 = [v13 constraintEqualToConstant:v8];

  *(void *)(v9 + 40) = v14;
  id v15 = [v10 topAnchor];
  id v16 = [a1 topAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v9 + 48) = v17;
  id v18 = [v10 centerXAnchor];
  id v19 = [a1 centerXAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v9 + 56) = v20;
  id v21 = *(void **)(v2 + 8);
  id v22 = [v21 topAnchor];
  id v23 = [a2 topAnchor];
  id v24 = [v22 constraintGreaterThanOrEqualToAnchor:v23];

  *(void *)(v9 + 64) = v24;
  id v25 = [v21 bottomAnchor];
  id v26 = [a2 bottomAnchor];
  id v27 = [v25 constraintLessThanOrEqualToAnchor:v26];

  *(void *)(v9 + 72) = v27;
  id v28 = [v21 centerYAnchor];
  id v29 = [a2 centerYAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  id v31 = *(void **)(v2 + 240);
  *(void *)(v9 + 80) = v30;
  *(void *)(v9 + 88) = v31;
  id v32 = v31;
  id v33 = [v21 centerXAnchor];
  id v34 = [a2 centerXAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v9 + 96) = v35;
  id v36 = [v21 leadingAnchor];
  id v37 = [a2 leadingAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v9 + 104) = v38;
  id v39 = [v21 trailingAnchor];
  id v40 = [a2 trailingAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40];

  *(void *)(v9 + 112) = v41;
  specialized Array._endMutation()();
  return v9;
}

uint64_t sub_100082E04(void *a1)
{
  double v2 = *(double *)(v1 + 16);
  double v3 = *(double *)(v1 + 24);
  double v4 = *(double *)(v1 + 128);
  double v5 = *(double *)(v1 + 136);
  double v6 = *(double *)(v1 + 144);
  double v7 = *(double *)(v1 + 152);
  double v8 = 1.0;
  switch(*(unsigned char *)(v1 + 232))
  {
    case 1:
      double v2 = *(double *)(v1 + 32);
      double v3 = *(double *)(v1 + 40);
      break;
    case 2:
      if ((*(unsigned char *)(v1 + 64) & 1) == 0)
      {
        double v2 = *(double *)(v1 + 48);
        double v3 = *(double *)(v1 + 56);
      }
      id v10 = [self mainScreen];
      [v10 bounds];
      double v12 = v11;

      double v5 = v7;
      if (v12 >= 375.0)
      {
        double v4 = v6;
      }
      else
      {
        double v4 = v6;
        double v8 = 298.0 / v6;
      }
      break;
    case 3:
      if ((*(unsigned char *)(v1 + 88) & 1) == 0)
      {
        double v2 = *(double *)(v1 + 72);
        double v3 = *(double *)(v1 + 80);
      }
      break;
    default:
      break;
  }
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000A19E0;
  id v14 = *(id *)v1;
  id v15 = [*(id *)v1 heightAnchor];
  id v16 = [v15 constraintEqualToConstant:v5 * v8];

  *(void *)(v13 + 32) = v16;
  id v17 = [v14 widthAnchor];
  id v18 = [v17 constraintEqualToConstant:v4 * v8];

  *(void *)(v13 + 40) = v18;
  id v19 = [v14 centerYAnchor];
  id v20 = *(void **)(v1 + 8);
  id v21 = [v20 centerYAnchor];
  id v22 = [v19 constraintEqualToAnchor:v21 constant:v8 * (v5 * 0.5 - (v3 + v2 * 0.5))];

  *(void *)(v13 + 48) = v22;
  id v23 = [v14 centerXAnchor];
  id v24 = [v20 centerXAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v13 + 56) = v25;
  id v26 = [v20 topAnchor];
  id v27 = [a1 topAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  *(void *)(v13 + 64) = v28;
  id v29 = [v20 heightAnchor];
  id v30 = [v29 constraintEqualToConstant:v2 * v8];

  *(void *)(v13 + 72) = v30;
  id v31 = [v20 centerXAnchor];
  id v32 = [a1 centerXAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  *(void *)(v13 + 80) = v33;
  id v34 = [v20 leadingAnchor];
  id v35 = [a1 leadingAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v13 + 88) = v36;
  id v37 = [v20 trailingAnchor];
  id v38 = [a1 trailingAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v13 + 96) = v39;
  specialized Array._endMutation()();
  return v13;
}

void *sub_10008328C()
{
  sub_100008E18(&qword_1000D4AD0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000A3FB0;
  *(void *)(inited + 32) = [v0 titleView];
  *(void *)(inited + 40) = [v0 bodyView];
  double v2 = *(void **)&v0[OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_trainingView];
  *(void *)(inited + 48) = v2;
  specialized Array._endMutation()();
  double v3 = *(void **)(inited + 32);
  if (!v3)
  {
    id v7 = v2;
    double v6 = *(void **)(inited + 40);
    if (!v6) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  id v4 = v3;
  id v5 = v2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  double v6 = *(void **)(inited + 40);
  if (v6)
  {
LABEL_7:
    id v8 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_10:
  uint64_t v9 = *(void **)(inited + 48);
  if (v9)
  {
    id v10 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_100083484()
{
  uint64_t v1 = v0;
  v29.receiver = v0;
  v29.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  [v0 setDismissalType:1];
  id v2 = [objc_allocWithZone((Class)ControlCenterTrainingView) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v0 contentView];
  [v3 addSubview:v2];

  id v4 = [v1 contentView];
  id v5 = [v4 mainContentGuide];

  id v6 = [v2 centerXAnchor];
  id v7 = [v5 centerXAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7 constant:195.0];

  uint64_t v9 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1000A2930;
  id v11 = [v2 topAnchor];
  id v12 = [v5 topAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v10 + 32) = v13;
  id v14 = [v2 bottomAnchor];
  id v15 = [v5 bottomAnchor];
  id v16 = [v14 constraintLessThanOrEqualToAnchor:v15];

  *(void *)(v10 + 40) = v16;
  *(void *)(v10 + 48) = v8;
  specialized Array._endMutation()();
  sub_100008EB0(0, (unint64_t *)&qword_1000D4550);
  id v17 = v8;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 activateConstraints:isa];

  id v19 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_trainingView];
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_trainingView] = v2;
  id v20 = v2;

  id v21 = *(void **)&v1[OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_horizontalConstraint];
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_horizontalConstraint] = v17;
  id v22 = v17;

  unint64_t v23 = (unint64_t)sub_10008328C();
  unint64_t v24 = v23;
  if (!(v23 >> 62))
  {
    uint64_t v25 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease_n();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  if (!v25) {
    goto LABEL_10;
  }
LABEL_3:
  if (v25 >= 1)
  {
    for (uint64_t i = 0; i != v25; ++i)
    {
      if ((v24 & 0xC000000000000001) != 0) {
        id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v27 = *(id *)(v24 + 8 * i + 32);
      }
      id v28 = v27;
      [v27 setAlpha:0.0];
    }
    goto LABEL_10;
  }
  __break(1u);
}

void sub_100083890()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v20 = sub_100084920;
  uint64_t v21 = v2;
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  id v18 = sub_100046658;
  id v19 = &unk_1000C5DD8;
  id v3 = _Block_copy(&v16);
  swift_release();
  [v1 animateWithDuration:0 delay:v3 options:0 animations:0.5 completion:0.0];
  _Block_release(v3);
  id v4 = objc_allocWithZone((Class)CAMediaTimingFunction);
  LODWORD(v5) = 1041865114;
  LODWORD(v6) = 0.75;
  LODWORD(v7) = 1.0;
  LODWORD(v8) = 1041865114;
  id v9 = [v4 initWithControlPoints:v5 :v6 :v8 :v7];
  uint64_t v10 = self;
  [v10 begin];
  [v10 setAnimationTimingFunction:v9];
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v20 = sub_100084940;
  uint64_t v21 = v11;
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  id v18 = sub_100046658;
  id v19 = &unk_1000C5E00;
  id v12 = _Block_copy(&v16);
  swift_release();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v0;
  id v20 = sub_100084980;
  uint64_t v21 = v13;
  id v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  id v18 = sub_100014BC4;
  id v19 = &unk_1000C5E50;
  id v14 = _Block_copy(&v16);
  id v15 = v0;
  swift_release();
  [v1 animateWithDuration:v12 animations:v14 completion:0.5];
  _Block_release(v14);
  _Block_release(v12);
  [v10 commit];
}

void sub_100083BAC()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitleText:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setBodyText:v2];

  [v0 setShouldCenterAlignText:1];
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v8[4] = sub_100084900;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100012FF0;
  void v8[3] = &unk_1000C5DB0;
  double v5 = _Block_copy(v8);
  id v6 = [self actionWithTitle:v4 style:1 handler:v5];

  _Block_release(v5);
  swift_release();
  swift_release();
  id v7 = [v0 addAction:v6];
}

void sub_100083D70()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008DE70();
      swift_unknownObjectRelease();
    }
  }
}

void sub_100083DE4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong
                  + OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_horizontalConstraint);
    if (v2)
    {
      id v3 = v2;

      [v3 setConstant:0.0];
      NSString v1 = v3;
    }
  }
  swift_beginAccess();
  NSString v4 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    double v5 = v4;
    id v6 = [v4 contentView];

    [v6 layoutIfNeeded];
  }
}

uint64_t sub_100083EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v5 - 8);
  uint64_t v24 = v5;
  __chkstk_darwin(v5);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v21 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v20 - v13;
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  id v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100084988;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100046658;
  void aBlock[3] = &unk_1000C5E78;
  id v18 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100017DD8();
  sub_100008E18(&qword_1000D4C28);
  sub_1000613E0();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v21);
}

void sub_100084234(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    NSString v4 = *(void **)(Strong
                  + OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_trainingView);
    if (v4)
    {
      id v5 = v4;

      aBlock[4] = sub_100084990;
      aBlock[5] = a1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100046658;
      void aBlock[3] = &unk_1000C5EA0;
      uint64_t v6 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v5 animateToInitialStateWithCompletionHandler:v6];
      _Block_release(v6);
      uint64_t v3 = v5;
    }
  }
}

void sub_100084344()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    sub_100084398();
  }
}

void sub_100084398()
{
  uint64_t v0 = self;
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = sub_100084998;
  uint64_t v10 = v1;
  id v5 = _NSConcreteStackBlock;
  uint64_t v6 = 1107296256;
  id v7 = sub_100046658;
  uint64_t v8 = &unk_1000C5EC8;
  uint64_t v2 = _Block_copy(&v5);
  swift_release();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = sub_1000849B8;
  uint64_t v10 = v3;
  id v5 = _NSConcreteStackBlock;
  uint64_t v6 = 1107296256;
  id v7 = sub_100014BC4;
  uint64_t v8 = &unk_1000C5EF0;
  NSString v4 = _Block_copy(&v5);
  swift_release();
  [v0 animateWithDuration:0 delay:v2 options:v4 animations:0.166666667 completion:0.0];
  _Block_release(v4);
  _Block_release(v2);
}

uint64_t sub_100084530(double a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)result;
    unint64_t v4 = (unint64_t)sub_10008328C();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v5 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v5)
      {
LABEL_4:
        if (v5 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v5; ++i)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * i + 32);
          }
          uint64_t v8 = v7;
          [v7 setAlpha:a1];
        }
      }
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

void sub_10008464C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100008278(v3, (uint64_t)qword_1000D69F0);
      unint64_t v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        uint64_t v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested control center training finished", v6, 2u);
        swift_slowDealloc();
      }

      uint64_t v7 = *(void *)(v2 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(unsigned char *)(v7
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 60)) = 0;
      sub_10008ADE4(0);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneControlCenterTrainingViewController()
{
  return self;
}

uint64_t sub_1000848B8()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService44HeadphoneControlCenterTrainingViewController_type);
}

uint64_t sub_1000848C8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100084900()
{
}

uint64_t sub_100084908(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100084918()
{
  return swift_release();
}

uint64_t sub_100084920()
{
  return sub_100084530(1.0);
}

void sub_100084940()
{
}

uint64_t sub_100084948()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100084980(uint64_t a1)
{
  return sub_100083EC4(a1, *(void *)(v1 + 16));
}

void sub_100084988()
{
  sub_100084234(v0);
}

void sub_100084990()
{
}

uint64_t sub_100084998()
{
  return sub_100084530(0.0);
}

void sub_1000849B8()
{
}

id sub_1000849F8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = &v0[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedConstraints];
  swift_beginAccess();
  if (*(void *)v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v72) {
      goto LABEL_51;
    }
  }
  else if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_51;
  }
  unint64_t v4 = &v1[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews];
  swift_beginAccess();
  uint64_t v5 = *(void *)v4;
  if (*(void *)(*(void *)v4 + 16))
  {
    uint64_t v83 = *(void *)v4;
    uint64_t v6 = *(void **)(v5 + 32);
    uint64_t v78 = *(void *)(v5 + 40);
    swift_bridgeObjectRetain();
    id v7 = v6;
    sub_100085DE4(0, 1);
    id v73 = ObjectType;
    if (v1[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_isUsingRows] == 1)
    {
      id v8 = [v7 topAnchor];
      id v9 = [v1 topAnchor];
      id v10 = [v8 constraintEqualToAnchor:v9];

      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      id v11 = [v7 leadingAnchor];
      id v12 = [v1 leadingAnchor];
      id v13 = [v11 constraintEqualToAnchor:v12];

      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      id v14 = [v7 trailingAnchor];
      id v15 = [v1 trailingAnchor];
      id v16 = [v14 constraintEqualToAnchor:v15];

      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      uint64_t v17 = *(void *)(v83 + 16);
      if (v17)
      {
        id v18 = (uint64_t *)(v83 + 40);
        do
        {
          id v19 = (void *)*(v18 - 1);
          uint64_t v20 = *v18;
          uint64_t v76 = swift_getObjectType();
          id v21 = v19;
          id v22 = [v21 topAnchor];
          uint64_t v75 = swift_getObjectType();
          id v23 = [v7 bottomAnchor];
          id v24 = [v22 constraintEqualToAnchor:v23 constant:20.0];

          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          id v25 = [v21 leadingAnchor];
          id v26 = [v1 leadingAnchor];
          id v27 = [v25 constraintEqualToAnchor:v26];

          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          id v28 = [v21 trailingAnchor];
          id v29 = [v1 trailingAnchor];
          id v30 = [v28 constraintEqualToAnchor:v29];

          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          v82[0] = v21;
          id v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v76, v20);
          v82[0] = v7;
          id v32 = (void *)(*(uint64_t (**)(uint64_t))(v78 + 16))(v75);
          id v33 = [v31 constraintEqualToAnchor:v32];

          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();

          v18 += 2;
          id v7 = v21;
          uint64_t v78 = v20;
          --v17;
        }
        while (v17);
      }
      else
      {
        id v21 = v7;
      }
      swift_bridgeObjectRelease();
      id v65 = [v21 bottomAnchor];
      id v66 = [v1 bottomAnchor];
      id v67 = [v65 constraintEqualToAnchor:v66];
    }
    else
    {
      id v34 = [v7 leftAnchor];
      id v35 = [v1 leftAnchor];
      id v36 = [v34 constraintGreaterThanOrEqualToAnchor:v35];
      id v21 = v7;

      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      id v37 = [v7 topAnchor];
      id v38 = [v1 topAnchor];
      id v39 = [v37 constraintEqualToAnchor:v38];

      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      id v40 = [v7 bottomAnchor];
      id v41 = [v1 bottomAnchor];
      id v42 = [v40 constraintEqualToAnchor:v41];

      swift_beginAccess();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      uint64_t v43 = *(void *)(v83 + 16);
      if (v43)
      {
        uint64_t v77 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_layoutMetrics];
        uint64_t v44 = (uint64_t *)(v83 + 40);
        id v45 = v7;
        uint64_t v46 = v78;
        long long v74 = v1;
        do
        {
          uint64_t v79 = v43;
          id v47 = (void *)*(v44 - 1);
          uint64_t v48 = *v44;
          uint64_t v49 = swift_getObjectType();
          unint64_t v80 = v45;
          v82[0] = v45;
          id v50 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v46 + 40);
          id v51 = v47;
          if (v50(v49, v46) > 1u
            || (uint64_t v52 = swift_getObjectType(),
                v82[0] = v51,
                (*(unsigned __int8 (**)(uint64_t, uint64_t))(v48 + 40))(v52, v48) > 1u))
          {
            sub_100023048(v77, (uint64_t)v81);
            sub_100023048((uint64_t)v81, (uint64_t)v82);
            double v53 = 0.0;
            if (sub_1000230B0((uint64_t)v82) != 1) {
              double v53 = *(double *)(v77 + 184);
            }
          }
          else
          {
            sub_100023048(v77, (uint64_t)v81);
            sub_100023048((uint64_t)v81, (uint64_t)v82);
            double v53 = 0.0;
            if (sub_1000230B0((uint64_t)v82) != 1) {
              double v53 = *(double *)(v77 + 176);
            }
          }
          uint64_t v1 = v74;
          id v54 = v51;
          uint64_t v55 = swift_getObjectType();
          v82[0] = v51;
          id v56 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v48 + 24))(v55, v48);
          v82[0] = v45;
          id v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v46 + 32))(v49, v46);
          id v58 = [v56 constraintEqualToAnchor:v57 constant:v53];

          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          id v59 = [v54 topAnchor];
          id v60 = [v74 topAnchor];
          id v61 = [v59 constraintEqualToAnchor:v60];

          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          id v21 = v54;
          if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          id v62 = [v54 bottomAnchor];
          id v63 = [v74 bottomAnchor];
          id v64 = [v62 constraintEqualToAnchor:v63];

          swift_beginAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();

          v44 += 2;
          id v45 = v54;
          uint64_t v46 = v48;
          uint64_t v43 = v79 - 1;
        }
        while (v79 != 1);
      }
      swift_bridgeObjectRelease();
      id v65 = [v21 rightAnchor];
      id v66 = [v1 rightAnchor];
      id v67 = [v65 constraintLessThanOrEqualToAnchor:v66];
    }
    id v68 = v67;

    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v3 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    uint64_t ObjectType = v73;
    id v69 = self;
    sub_10000A968();
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v69 activateConstraints:isa];
  }
LABEL_51:
  v84.receiver = v1;
  v84.super_class = ObjectType;
  return [super updateConstraints];
}

id sub_1000858F8(uint64_t a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  [super traitCollectionDidChange:a1];
  id v3 = [self currentTraitCollection];
  id v4 = [v3 preferredContentSizeCategory];

  LOBYTE(v3) = UIContentSizeCategory.isAccessibilityCategory.getter();
  v1[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_isUsingRows] = v3 & 1;
  uint64_t v5 = self;
  uint64_t v6 = &v1[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedConstraints];
  swift_beginAccess();
  sub_10000A968();
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 deactivateConstraints:isa];

  *(void *)uint64_t v6 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  return [v1 setNeedsUpdateConstraints];
}

id sub_100085AB4(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = (uint64_t)&v4[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_layoutMetrics];
  sub_100026C34((uint64_t)v18);
  sub_100023048((uint64_t)v18, v10);
  *(void *)&v4[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews] = _swiftEmptyArrayStorage;
  *(void *)&v4[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedConstraints] = _swiftEmptyArrayStorage;
  uint64_t v11 = OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_isUsingRows;
  id v12 = self;
  id v13 = v4;
  id v14 = [v12 currentTraitCollection];
  id v15 = [v14 preferredContentSizeCategory];

  LOBYTE(v14) = UIContentSizeCategory.isAccessibilityCategory.getter();
  v4[v11] = v14 & 1;

  v17.receiver = v13;
  v17.super_class = ObjectType;
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_100085C10(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_layoutMetrics];
  sub_100026C34((uint64_t)v13);
  sub_100023048((uint64_t)v13, v4);
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedSubviews] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_arrangedConstraints] = _swiftEmptyArrayStorage;
  uint64_t v5 = OBJC_IVAR____TtC20HeadphoneProxService25HeadphoneBatteryContainer_isUsingRows;
  uint64_t v6 = self;
  id v7 = v1;
  id v8 = [v6 currentTraitCollection];
  id v9 = [v8 preferredContentSizeCategory];

  LOBYTE(v8) = UIContentSizeCategory.isAccessibilityCategory.getter();
  v1[v5] = v8 & 1;

  v12.receiver = v7;
  v12.super_class = ObjectType;
  id v10 = [super initWithCoder:a1];

  return v10;
}

uint64_t type metadata accessor for HeadphoneBatteryContainer()
{
  return self;
}

uint64_t sub_100085DE4(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10004BBA8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_100008E18(&qword_1000D5B58);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    id v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100085F58()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D68E0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D68E0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100086020()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v57 - v7;
  v61.receiver = v1;
  v61.super_class = ObjectType;
  [super viewDidLoad];
  [v1 setDismissalType:1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong + 16;
    swift_beginAccess();
    sub_10000C744(v10, (uint64_t)&v58);
    swift_unknownObjectRelease();
    uint64_t v11 = v60;
    if (v60)
    {
      objc_super v12 = sub_10000C80C(&v58, v60);
      uint64_t v13 = *(void *)(v11 - 8);
      __chkstk_darwin(v12);
      uint64_t v15 = (uint64_t *)((char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(void *))(v13 + 16))(v15);
      sub_10000C7AC((uint64_t)&v58);
      uint64_t v16 = *v15 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v16, (uint64_t)v6);
      (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v11);
      sub_10000C8B4((uint64_t)v6, (uint64_t)v8);
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      id v18 = [self bundleForClass:ObjCClassFromMetadata];
      id v19 = [v1 traitCollection];
      id v20 = [v19 userInterfaceStyle];

      BOOL v21 = v20 == (id)1;
      if (v20 == (id)1) {
        uint64_t v22 = 0x746867694CLL;
      }
      else {
        uint64_t v22 = 1802658116;
      }
      if (v21) {
        id v23 = (void *)0xE500000000000000;
      }
      else {
        id v23 = (void *)0xE400000000000000;
      }
      unsigned int v24 = *(_DWORD *)&v8[*(int *)(v3 + 124)] - 8217;
      if (v24 <= 7 && ((1 << v24) & 0xA5) != 0)
      {
        unint64_t v58 = 0;
        unint64_t v59 = 0xE000000000000000;
        _StringGuts.grow(_:)(36);
        swift_bridgeObjectRelease();
        unint64_t v58 = 0xD000000000000022;
        unint64_t v59 = 0x80000001000AAB50;
      }
      else
      {
        unint64_t v58 = 0;
        unint64_t v59 = 0xE000000000000000;
        _StringGuts.grow(_:)(30);
        swift_bridgeObjectRelease();
        unint64_t v58 = 0xD00000000000001CLL;
        unint64_t v59 = 0x80000001000AAB30;
      }
      v25._uint64_t countAndFlagsBits = v22;
      v25._object = v23;
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      id v26 = objc_allocWithZone((Class)BSUICAPackageView);
      id v27 = v18;
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v29 = [v26 initWithPackageName:v28 inBundle:v27];

      if (v29)
      {
        NSString v30 = String._bridgeToObjectiveC()();
        [v29 setState:v30 animated:1];

        [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v31 = [v1 contentView];
        [v31 addSubview:v29];

        id v32 = [v1 contentView];
        id v33 = [v32 mainContentGuide];

        id v34 = self;
        sub_100008E18((uint64_t *)&unk_1000D5090);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_1000A2130;
        id v36 = [v29 topAnchor];
        id v37 = [v33 topAnchor];
        id v38 = [v36 constraintGreaterThanOrEqualToAnchor:v37];

        *(void *)(v35 + 32) = v38;
        id v39 = [v29 bottomAnchor];
        id v40 = [v33 bottomAnchor];
        id v41 = [v39 constraintLessThanOrEqualToAnchor:v40];

        *(void *)(v35 + 40) = v41;
        id v42 = [v29 heightAnchor];
        id v43 = [v42 constraintEqualToConstant:160.0];

        *(void *)(v35 + 48) = v43;
        id v44 = [v29 widthAnchor];
        id v45 = [v44 constraintEqualToConstant:320.0];

        *(void *)(v35 + 56) = v45;
        id v46 = [v29 centerYAnchor];
        id v47 = [v33 centerYAnchor];
        id v48 = [v46 constraintEqualToAnchor:v47];

        *(void *)(v35 + 64) = v48;
        id v49 = [v29 centerXAnchor];
        id v50 = [v33 centerXAnchor];
        id v51 = [v49 constraintEqualToAnchor:v50];

        *(void *)(v35 + 72) = v51;
        unint64_t v58 = v35;
        specialized Array._endMutation()();
        sub_10000A968();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v34 activateConstraints:isa];

        sub_10000C918((uint64_t)v8);
      }
      else
      {
        __break(1u);
      }
      return;
    }
    sub_10000C7AC((uint64_t)&v58);
  }
  if (qword_1000D4478 != -1) {
    swift_once();
  }
  uint64_t v53 = type metadata accessor for Logger();
  sub_100008278(v53, (uint64_t)qword_1000D68E0);
  id v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v54, v55))
  {
    id v56 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v56 = 0;
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "Headphone Model is nil, exiting", v56, 2u);
    swift_slowDealloc();
  }
}

void sub_1000868E8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setSubtitle:v2];

  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_100086D3C;
  uint64_t v18 = v3;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100012FF0;
  uint64_t v16 = &unk_1000C5F80;
  uint64_t v5 = _Block_copy(&v13);
  uint64_t v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:0 handler:v5];

  _Block_release(v5);
  swift_release();
  swift_release();

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_100086D74;
  uint64_t v18 = v8;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_100012FF0;
  uint64_t v16 = &unk_1000C5FA8;
  uint64_t v10 = _Block_copy(&v13);
  id v11 = [v6 actionWithTitle:v9 style:1 handler:v10];

  _Block_release(v10);
  swift_release();
  swift_release();
  id v12 = [v0 addAction:v11];
}

void sub_100086BC0(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = swift_unknownObjectWeakLoadStrong();

    if (v6)
    {
      sub_10008C78C(a3 & 1);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneAdaptiveControlsPersonalizedVolumeViewController()
{
  return self;
}

uint64_t sub_100086CF4()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService57HeadphoneAdaptiveControlsPersonalizedVolumeViewController_type);
}

uint64_t sub_100086D04()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100086D3C(uint64_t a1)
{
  sub_100086BC0(a1, v1, 1);
}

uint64_t sub_100086D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100086D6C()
{
  return swift_release();
}

void sub_100086D74(uint64_t a1)
{
  sub_100086BC0(a1, v1, 0);
}

id sub_100086D9C()
{
  uint64_t v1 = OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial1ViewController____lazy_storage___topAsset;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial1ViewController____lazy_storage___topAsset);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial1ViewController____lazy_storage___topAsset);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) init];
    id v5 = [self lightGrayColor];
    [v4 setBackgroundColor:v5];

    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v4 heightAnchor];
    id v7 = [v6 constraintEqualToConstant:450.0];

    [v7 setActive:1];
    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_100086EC8()
{
  uint64_t v1 = sub_100008E18(&qword_1000D4CC0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  id v4 = (objc_class *)type metadata accessor for HeadhponeHeartRateTutorial1ViewController();
  v26.receiver = v0;
  v26.super_class = v4;
  [super viewDidLoad];
  [v0 setDismissalType:1];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong + 16;
    swift_beginAccess();
    sub_10000C744(v6, (uint64_t)v24);
    swift_unknownObjectRelease();
    uint64_t v7 = v25;
    if (v25)
    {
      uint64_t v8 = sub_10000C80C(v24, v25);
      uint64_t v9 = *(void *)(v7 - 8);
      __chkstk_darwin(v8);
      id v11 = (void *)((char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 40);
      (*(void (**)(void *))(v9 + 16))(v11);
      sub_10001A2AC((uint64_t)v24, &qword_1000D4798);
      uint64_t v12 = *v11 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
      swift_beginAccess();
      sub_10000C850(v12, (uint64_t)v3);
      (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v7);
      uint64_t v13 = type metadata accessor for HeadphoneModel();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 0, 1, v13);
      sub_10001A2AC((uint64_t)v3, &qword_1000D4CC0);
      id v14 = [v0 contentView];
      id v15 = sub_100086D9C();
      [v14 addSubview:v15];

      id v16 = sub_100086D9C();
      id v17 = [v0 contentView];
      uint64_t v18 = [v17 mainContentGuide];

      [v16 pinToOtherWithLayoutGuide:v18];
      goto LABEL_9;
    }
    sub_10001A2AC((uint64_t)v24, &qword_1000D4798);
  }
  uint64_t v19 = type metadata accessor for HeadphoneModel();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v3, 1, 1, v19);
  sub_10001A2AC((uint64_t)v3, &qword_1000D4CC0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100008278(v20, (uint64_t)qword_1000D91B0);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v21, "HeadhponeHeartRateTutorial1ViewController: Headphone Model is nil, exiting", v22, 2u);
    swift_slowDealloc();
  }
LABEL_9:
}

id sub_100087420()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HeadhponeHeartRateTutorial1ViewController();
  [super dealloc];
}

uint64_t type metadata accessor for HeadhponeHeartRateTutorial1ViewController()
{
  return self;
}

uint64_t sub_1000874C4()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService41HeadhponeHeartRateTutorial1ViewController_type);
}

void sub_1000874D4()
{
  v34.receiver = v0;
  v34.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  [v0 setDismissalType:1];
  uint64_t v1 = self;
  NSString v2 = String._bridgeToObjectiveC()();
  id v33 = [v1 imageNamed:v2];

  id v3 = [objc_allocWithZone((Class)UIImageView) initWithImage:v33];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v0 contentView];
  [v4 addSubview:v3];

  id v32 = self;
  sub_100008E18((uint64_t *)&unk_1000D5090);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000A19C0;
  id v6 = [v3 topAnchor];
  id v7 = [v0 contentView];
  id v8 = [v7 mainContentGuide];

  id v9 = [v8 topAnchor];
  id v10 = [v6 constraintEqualToAnchor:v9];

  *(void *)(v5 + 32) = v10;
  id v11 = [v3 centerXAnchor];
  id v12 = [v0 contentView];
  id v13 = [v12 mainContentGuide];

  id v14 = [v13 centerXAnchor];
  id v15 = [v11 constraintEqualToAnchor:v14];

  *(void *)(v5 + 40) = v15;
  id v16 = [v3 leadingAnchor];
  id v17 = [v0 contentView];
  id v18 = [v17 mainContentGuide];

  id v19 = [v18 leadingAnchor];
  id v20 = [v16 constraintGreaterThanOrEqualToAnchor:v19];

  *(void *)(v5 + 48) = v20;
  id v21 = [v3 trailingAnchor];
  id v22 = [v0 contentView];
  id v23 = [v22 mainContentGuide];

  id v24 = [v23 trailingAnchor];
  id v25 = [v21 constraintLessThanOrEqualToAnchor:v24];

  *(void *)(v5 + 56) = v25;
  id v26 = [v3 bottomAnchor];
  id v27 = [v0 contentView];
  id v28 = [v27 mainContentGuide];

  id v29 = [v28 bottomAnchor];
  id v30 = [v26 constraintLessThanOrEqualToAnchor:v29];

  *(void *)(v5 + 64) = v30;
  specialized Array._endMutation()();
  sub_10000A968();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v32 activateConstraints:isa];
}

void sub_1000879BC()
{
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setTitle:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setSubtitle:v2];

  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = sub_100087F5C;
  uint64_t v18 = v3;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100012FF0;
  id v16 = &unk_1000C6078;
  uint64_t v5 = _Block_copy(&v13);
  id v6 = self;
  id v7 = [v6 actionWithTitle:v4 style:0 handler:v5];

  _Block_release(v5);
  swift_release();
  swift_release();

  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v17 = sub_100087F7C;
  uint64_t v18 = v8;
  id v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  id v15 = sub_100012FF0;
  id v16 = &unk_1000C60A0;
  id v10 = _Block_copy(&v13);
  id v11 = [v6 actionWithTitle:v9 style:1 handler:v10];

  _Block_release(v10);
  swift_release();
  swift_release();
  id v12 = [v0 addAction:v11];
}

void sub_100087C94()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008E594();
      swift_unknownObjectRelease();
    }
  }
}

void sub_100087D08()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100008278(v3, (uint64_t)qword_1000D69F0);
      NSString v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v5))
      {
        id v6 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v6 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v5, "Requested spatial audio profile not now", v6, 2u);
        swift_slowDealloc();
      }

      uint64_t v7 = *(void *)(v2 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      *(unsigned char *)(v7
               + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0)
                        + 80)) = 1;
      sub_10008ADE4(0);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t type metadata accessor for HeadphoneSpatialAudioProfileViewController()
{
  return self;
}

uint64_t sub_100087F14()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC20HeadphoneProxService42HeadphoneSpatialAudioProfileViewController_type);
}

uint64_t sub_100087F24()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100087F5C()
{
}

uint64_t sub_100087F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100087F74()
{
  return swift_release();
}

void sub_100087F7C()
{
}

id sub_100087FF0(char a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26.receiver = v2;
  v26.super_class = ObjectType;
  [super viewWillAppear:a1 & 1];
  id v12 = &v2[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_viewModel];
  swift_beginAccess();
  uint64_t v13 = type metadata accessor for HeadphoneViewModel(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_4:
    sub_10001A2AC((uint64_t)v7, &qword_1000D4810);
    goto LABEL_5;
  }
  sub_10007CBA8((uint64_t)&v12[*(int *)(v13 + 44)], (uint64_t)v7);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    goto LABEL_4;
  }
  sub_100081930((uint64_t)v7, (uint64_t)v11);
  id v16 = (void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_movieView];
  swift_beginAccess();
  id v17 = *v16;
  if (*v16)
  {
    swift_endAccess();
    uint64_t v18 = self;
    id v19 = v17;
    id v20 = [v18 currentTraitCollection];
    id v21 = [v20 userInterfaceStyle];

    if (v21 == (id)2) {
      uint64_t v22 = 1;
    }
    else {
      uint64_t v22 = 2;
    }
    URL._bridgeToObjectiveC()((NSURL *)1);
    id v24 = v23;
    [v19 updateViewForAssetType:v22 adjustmentsURL:v23];

    sub_10007CCEC((uint64_t)v11);
  }
  else
  {
    sub_10007CCEC((uint64_t)v11);
    swift_endAccess();
  }
LABEL_5:
  uint64_t v14 = (id *)&v2[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_movieView];
  swift_beginAccess();
  id result = *v14;
  if (*v14) {
    return [result play];
  }
  return result;
}

void sub_1000883DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100008E18(&qword_1000D5660);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100008E18(&qword_1000D4810);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for HeadphoneViewModel(0);
  sub_10007CBA8(a1 + *(int *)(v14 + 44), (uint64_t)v9);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10001A2AC((uint64_t)v9, &qword_1000D4810);
  }
  else
  {
    sub_100081930((uint64_t)v9, (uint64_t)v13);
    sub_100023048(a1 + *(int *)(v14 + 56), (uint64_t)v45);
    sub_100023048((uint64_t)v45, (uint64_t)v46);
    if (sub_1000230B0((uint64_t)v46) == 1)
    {
      sub_10007CCEC((uint64_t)v13);
    }
    else
    {
      sub_10003FDC4(a1, (uint64_t)v6);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v6, 0, 1, v14);
      uint64_t v15 = (uint64_t)&v2[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_viewModel];
      swift_beginAccess();
      sub_100023048((uint64_t)v45, (uint64_t)v43);
      sub_10000A838((uint64_t)v43);
      sub_10003FE28((uint64_t)v6, v15);
      swift_endAccess();
      NSString v16 = String._bridgeToObjectiveC()();
      [v2 setTitle:v16];

      NSString v17 = String._bridgeToObjectiveC()();
      [v2 setSubtitle:v17];

      uint64_t v18 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_bridgeObjectRetain();
      swift_retain();
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      v48[4] = sub_100088DB4;
      v48[5] = v18;
      v48[0] = _NSConcreteStackBlock;
      v48[1] = 1107296256;
      void v48[2] = sub_100012FF0;
      v48[3] = &unk_1000C6130;
      id v20 = _Block_copy(v48);
      id v21 = [self actionWithTitle:v19 style:1 handler:v20];

      _Block_release(v20);
      swift_release();
      swift_release();

      id v22 = objc_allocWithZone((Class)SFMediaPlayerItem);
      URL._bridgeToObjectiveC()(v23);
      id v25 = v24;
      id v26 = [v22 initWithURL:v24];

      [v26 setShouldLoop:1];
      id v27 = [objc_allocWithZone((Class)SFMediaPlayerView) init];
      [v27 addMovieItem:v26];
      id v28 = objc_allocWithZone((Class)UILayoutGuide);
      id v29 = v27;
      sub_10004D19C(v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10004D150);
      id v30 = v29;
      id v31 = [v28 init];
      sub_10004D19C(v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10002313C);
      double v32 = *(double *)v46;
      id v33 = [v31 heightAnchor];

      id v34 = [v33 constraintEqualToConstant:v32];
      *(void *)id v44 = v30;
      *(void *)&v44[8] = v31;
      *(_OWORD *)&v44[176] = v46[10];
      *(_OWORD *)&v44[192] = v46[11];
      *(_OWORD *)&v44[208] = v46[12];
      *(void *)&v44[224] = v47;
      *(_OWORD *)&v44[112] = v46[6];
      *(_OWORD *)&v44[128] = v46[7];
      *(_OWORD *)&v44[144] = v46[8];
      *(_OWORD *)&v44[160] = v46[9];
      *(_OWORD *)&v44[48] = v46[2];
      *(_OWORD *)&v44[64] = v46[3];
      *(_OWORD *)&v44[80] = v46[4];
      *(_OWORD *)&v44[96] = v46[5];
      *(_OWORD *)&v44[16] = v46[0];
      *(_OWORD *)&v44[32] = v46[1];
      v44[232] = 0;
      *(void *)&v44[240] = v34;
      *(void *)&v44[248] = _swiftEmptyArrayStorage;
      *(void *)&v44[256] = _swiftEmptyArrayStorage;
      memcpy(v48, v44, sizeof(v48));
      id v35 = [v2 contentView];
      [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
      [v35 addLayoutGuide:v31];
      [v35 addSubview:v30];
      [v35 sendSubviewToBack:v30];

      id v36 = self;
      id v37 = [v2 contentView];
      id v38 = [v37 mainContentGuide];

      sub_100082500(v38);
      sub_10000A968();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v36 activateConstraints:isa];

      sub_10000A9A8((uint64_t)v44);
      sub_10007CCEC((uint64_t)v13);
      id v40 = (void **)&v2[OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_movieView];
      swift_beginAccess();
      id v41 = *v40;
      *id v40 = v30;
    }
  }
}

void sub_100088AB8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10008D540(0);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100088C68()
{
  return type metadata accessor for HeadphoneNotYoursViewController();
}

uint64_t type metadata accessor for HeadphoneNotYoursViewController()
{
  uint64_t result = qword_1000D69E0;
  if (!qword_1000D69E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100088CBC()
{
  sub_100022D30();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100088D6C()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService31HeadphoneNotYoursViewController_type);
}

uint64_t sub_100088D7C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100088DB4()
{
}

uint64_t sub_100088DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100088DCC()
{
  return swift_release();
}

uint64_t sub_100088DD4(int a1)
{
  uint64_t v2 = self;
  id v3 = [v2 airPodsMax];
  unsigned int v4 = [v3 productID];

  if (v4 == a1) {
    return 1;
  }
  id v5 = [v2 airPodsMax];
  unsigned int v6 = [v5 altProductID];

  if (v6 == a1) {
    return 1;
  }
  id v7 = [v2 airPods];
  unsigned int v8 = [v7 productID];

  if (v8 == a1) {
    return 1;
  }
  id v9 = [v2 airPodsSecondGeneration];
  unsigned int v10 = [v9 productID];

  if (v10 == a1) {
    return 1;
  }
  if (sub_100088F50(a1)) {
    return 1;
  }
  id v11 = [v2 b688];
  unsigned int v12 = [v11 productID];

  if (v12 == a1) {
    return 1;
  }
  if ((a1 - 8217) > 7) {
    return 0;
  }
  return (0xA5u >> (a1 - 25)) & 1;
}

BOOL sub_100088F50(int a1)
{
  uint64_t v2 = self;
  id v3 = [v2 airPodsPro];
  unsigned int v4 = [v3 productID];

  if (v4 == a1) {
    return 1;
  }
  id v5 = [v2 b698];
  unsigned int v6 = [v5 productID];

  if (v6 == a1) {
    return 1;
  }
  id v8 = [v2 b698];
  unsigned int v9 = [v8 altProductID];

  return v9 == a1;
}

unint64_t sub_100089034(uint64_t a1)
{
  return sub_1000893E4(a1, &qword_1000D6BD8, &qword_1000D6BE0, (uint64_t (*)(uint64_t))sub_10001D40C);
}

unint64_t sub_10008905C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100008E18(&qword_1000D6BC8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10001D4A0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unsigned int v10 = (uint64_t *)(v2[6] + 16 * result);
    *unsigned int v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100089170(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100008E18(&qword_1000D5658);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001A248(v6, (uint64_t)&v15, &qword_1000D6BC0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10001D4A0(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10003FDAC(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    _OWORD v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000892A8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100008E18(&qword_1000D6BD0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10001D4A0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000893BC(uint64_t a1)
{
  return sub_1000893E4(a1, &qword_1000D6BF8, &qword_1000D6C00, (uint64_t (*)(uint64_t))sub_10001D40C);
}

unint64_t sub_1000893E4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100008E18(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001A248(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_10003FDAC(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100089514(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100008E18(&qword_1000D6BE8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10001D4A0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void *sub_100089638(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10009C638(0, v1, 0);
    uint64_t v3 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_100008E18(&qword_1000D5B38);
      sub_100008E18(&qword_1000D6BA8);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_10009C638(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_10009C638(v4 > 1, v5 + 1, 1);
      }
      v3 += 32;
      _swiftEmptyArrayStorage[2] = v5 + 1;
      uint64_t v6 = &_swiftEmptyArrayStorage[4 * v5];
      v6[4] = v8;
      v6[5] = v9;
      void v6[6] = v10;
      v6[7] = v11;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000897A4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10009C698(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v17;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v17 = v3;
        unint64_t v8 = v3[2];
        unint64_t v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_10009C698(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v17;
        }
        ++v5;
        uint64_t v15 = sub_100008EB0(0, &qword_1000D67C0);
        BOOL v16 = &off_1000C6748;
        *(void *)&long long v14 = v6;
        _OWORD v3[2] = v8 + 1;
        sub_10007B048(&v14, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      uint64_t v9 = (void **)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v17 = v3;
        unint64_t v12 = v3[2];
        unint64_t v11 = v3[3];
        id v13 = v10;
        if (v12 >= v11 >> 1)
        {
          sub_10009C698(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v17;
        }
        uint64_t v15 = sub_100008EB0(0, &qword_1000D67C0);
        BOOL v16 = &off_1000C6748;
        *(void *)&long long v14 = v13;
        _OWORD v3[2] = v12 + 1;
        sub_10007B048(&v14, (uint64_t)&v3[5 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

char *sub_100089998()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for HeadphoneViewModel(0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for HeadphoneBatteryViewController();
  uint64_t v5 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithNibName:0 bundle:0];
  uint64_t v6 = (void *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_presenter);
  swift_beginAccess();
  uint64_t v7 = v6[3];
  if (v7)
  {
    sub_10000C80C(v6, v7);
    *(void *)&v5[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_presenter + 8] = &off_1000C62B8;
    swift_unknownObjectWeakAssign();
    sub_10008F8D0(v5[OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_type], (uint64_t)v4);
    sub_1000623D4(v4);
    sub_10009D538((uint64_t)v4, type metadata accessor for HeadphoneViewModel);
  }
  *(void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView + 8) = &off_1000C4E10;
  swift_unknownObjectWeakAssign();
  return v5;
}

uint64_t sub_100089AF8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100089B20(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_100089B48()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B7B0(v0, qword_1000D69F0);
  uint64_t v1 = sub_100008278(v0, (uint64_t)qword_1000D69F0);
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100008278(v0, (uint64_t)qword_1000D91B0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100089C10()
{
  qword_1000D6A08 = (uint64_t)&off_1000C2208;
}

unint64_t sub_100089C24(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      unint64_t result = 0x6C6C6143646E45;
      break;
    case 1:
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x5469726953796548;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x466C6C6174736E49;
      break;
    case 6:
      unint64_t result = 0x676E696B6E694CLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x77654E7374616857;
      break;
    case 9:
      unint64_t result = 0x7473654764616548;
      break;
    case 10:
      unint64_t result = 0x79726574746142;
      break;
    case 11:
      unint64_t result = 0x7461527472616548;
      break;
    case 12:
      unint64_t result = 0x6C65646F59;
      break;
    default:
      unint64_t result = 0x6E6974656B72614DLL;
      break;
  }
  return result;
}

unint64_t sub_100089E00()
{
  return sub_100089C24(*v0);
}

uint64_t sub_100089E08@<X0>(void *a1@<X8>)
{
  if (qword_1000D4488 != -1) {
    swift_once();
  }
  *a1 = qword_1000D6A08;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100089E74()
{
  uint64_t v0 = type metadata accessor for HeadphoneViewModel(0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  *uint64_t v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  char v7 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v9 = result + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      uint64_t v11 = *(void *)(v9 + 8);
      uint64_t result = swift_unknownObjectRelease();
      if (Strong)
      {
        uint64_t ObjectType = swift_getObjectType();
        int v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(ObjectType, v11);
        sub_10008F8D0(v13, (uint64_t)v2);
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, ObjectType, v11);
        swift_unknownObjectRelease();
        return sub_10009D538((uint64_t)v2, type metadata accessor for HeadphoneViewModel);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10008A094(uint64_t a1)
{
  *(void *)(v1 + 64) = 0;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(void *)(v1 + 48) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v1 + 80) = 256;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_useMovieForNextBatteryView) = 1;
  *(void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_batteryDebounceTime) = 0;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_temporarilyPair) = 0;
  uint64_t v3 = OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep;
  *(void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep) = 13;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_hasAutoDismissed) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_spatialProfileEnrollmentViewController) = 0;
  uint64_t v4 = (void *)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_batteryVideoView);
  void *v4 = 0;
  v4[1] = 0;
  sub_10009D10C(a1, v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  uint64_t v5 = *(void **)(v1 + v3);
  *(void *)(v1 + v3) = qword_1000A4FD8[*(char *)(a1 + 120)];
  sub_1000933B4(v5);
  type metadata accessor for HeadphoneAnalyticsController(0);
  uint64_t v6 = swift_allocObject();
  sub_10003FFBC((unsigned char *)(v6 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics));
  sub_10009D538(a1, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  *(void *)(v1 + 72) = v6;
  char v7 = (void (**)(uint64_t, uint64_t))(v1
                                              + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_unlockDevice);
  *char v7 = sub_10008A1F0;
  v7[1] = 0;
  return v1;
}

void sub_10008A1F0(uint64_t a1, uint64_t a2)
{
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100008278(v4, (uint64_t)qword_1000D69F0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    char v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Requesting device unlock", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  v10[4] = sub_10009D650;
  v10[5] = v8;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10008A4C4;
  v10[3] = &unk_1000C6690;
  uint64_t v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  SBSRequestPasscodeUnlockUI();
  _Block_release(v9);
}

uint64_t sub_10008A380(char a1, uint64_t (*a2)(void))
{
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (uint64_t *)((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  *char v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  char v8 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if (v8) {
    return a2(a1 & 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_10008A4C4(uint64_t a1, int a2)
{
  uint64_t v2 = *(void (**)(BOOL))(a1 + 32);
  BOOL v3 = a2 != 0;
  swift_retain();
  v2(v3);

  return swift_release();
}

int *sub_10008A51C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = *(unsigned int *)(v2 + *(int *)(v3 + 124));
  uint64_t v5 = v1 + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  uint64_t result = (int *)type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0);
  uint64_t v7 = v5 + result[6];
  *(void *)uint64_t v7 = v4;
  *(unsigned char *)(v7 + 8) = 0;
  switch(*(unsigned char *)(v2 + 120))
  {
    case 0:
    case 3:
    case 4:
    case 9:
    case 0xA:
      char v8 = *(unsigned char **)(v0 + 72);
      uint64_t v9 = OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      char v10 = 3;
      goto LABEL_3;
    case 6:
      char v8 = (unsigned char *)(*(void *)(v0 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics);
      unsigned char *v8 = 5;
      uint64_t v9 = result[32];
      char v10 = 2;
      goto LABEL_3;
    case 7:
      char v8 = (unsigned char *)(*(void *)(v0 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics);
      if (*(unsigned char *)(v2 + *(int *)(v3 + 76)) == 1)
      {
        unsigned char *v8 = 2;
        v8[result[10]] = 2;
      }
      else
      {
        uint64_t v9 = result[43];
        char v10 = 2;
LABEL_3:
        v8[v9] = v10;
      }
      return result;
    case 8:
      char v8 = *(unsigned char **)(v0 + 72);
      uint64_t v9 = OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      char v10 = 1;
      goto LABEL_3;
    case 0xB:
      char v8 = (unsigned char *)(*(void *)(v0 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics);
      unsigned char *v8 = 0;
      uint64_t v9 = result[29];
      char v10 = 2;
      goto LABEL_3;
    case 0xC:
      char v8 = *(unsigned char **)(v0 + 72);
      uint64_t v9 = OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
      char v10 = 4;
      goto LABEL_3;
    default:
      return result;
  }
}

uint64_t sub_10008A6B4(uint64_t result)
{
  if (result <= 0x1Au && ((1 << result) & 0x7FF4FFF) != 0) {
    return sub_100040194(result, 2);
  }
  return result;
}

uint64_t sub_10008A700()
{
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100008278(v1, (uint64_t)qword_1000D69F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Requested announce continue, turning on all supported apps", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = v0[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v5
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 68)) = 0;
  uint64_t v6 = self;
  [v6 setHasUserSeenAnnounceCallsOptOutScreen:1];
  [v6 setHasUserSeenAnnounceNotificationsOptOutScreen:1];
  uint64_t v7 = (char *)v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if (v7[*(int *)(type metadata accessor for HeadphoneModel() + 92)] != 1)
  {
    long long v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Siri is not allowed on lock screen, not enabling apps", v21, 2u);
      swift_slowDealloc();
    }

    return sub_10008ADE4(0);
  }
  swift_beginAccess();
  uint64_t v8 = v0[5];
  if (!v8) {
    return sub_10008ADE4(0);
  }
  uint64_t v9 = (void *)(*sub_10000C80C(v0 + 2, v8)
                + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter);
  uint64_t v10 = v9[3];
  uint64_t v11 = v9[4];
  sub_10000C80C(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(1, v10, v11);
  if (!v0[5]) {
    return sub_10008ADE4(0);
  }
  sub_100017C14((uint64_t)(v0 + 2), (uint64_t)v23);
  unint64_t v12 = sub_10000C80C(v23, v23[3]);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = *(NSObject **)(*v12 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_workingQueue);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_10009D2A0;
  *(void *)(v15 + 24) = v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10009D834;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_10006ECE0;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100089B20;
  void aBlock[3] = &unk_1000C65A0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain();
  swift_release();
  dispatch_sync(v14, v17);
  _Block_release(v17);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release_n();
  swift_release();
  uint64_t result = swift_release();
  if ((v14 & 1) == 0)
  {
    sub_100017BC4((uint64_t)v23);
    return sub_10008ADE4(0);
  }
  __break(1u);
  return result;
}

uint64_t sub_10008AAFC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v1 = &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView;
  if (Strong)
  {
    uint64_t v2 = Strong + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess();
    if (*(void *)(v2 + 8))
    {
      uint64_t v3 = *(void *)(v2 + 96);
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v4 = *(void *)(v3 + 16);
      if (v4)
      {
        swift_beginAccess();
        uint64_t v5 = (void **)(v3 + 72);
        do
        {
          if (*(unsigned char *)(v5 - 1))
          {
            uint64_t v8 = (uint64_t)*(v5 - 5);
            uint64_t v7 = (uint64_t)*(v5 - 4);
            uint64_t v9 = *v5;
            uint64_t v10 = swift_weakLoadStrong();
            if (v10)
            {
              uint64_t v11 = v10;
              uint64_t v12 = v10 + 16;
              swift_beginAccess();
              if (*(void *)(v11 + 40))
              {
                sub_100017C14(v12, (uint64_t)v21);
                id v6 = v9;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_release();
                sub_10000C80C(v21, v22);
                sub_100053208(1, v8, v7);

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_100017BC4((uint64_t)v21);
              }
              else
              {
                swift_release();
              }
            }
          }
          v5 += 6;
          --v4;
        }
        while (v4);
        swift_bridgeObjectRelease();
        uint64_t v1 = &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_release();
    }
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result + v1[322];
    swift_beginAccess();
    uint64_t v15 = *(void *)(v14 + 8);
    if (v15)
    {
      uint64_t v16 = *(void *)v14;
      id v17 = *(id *)(v14 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      swift_beginAccess();
      uint64_t v18 = swift_weakLoadStrong();
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = v18 + 16;
        swift_beginAccess();
        if (*(void *)(v19 + 40))
        {
          sub_100017C14(v20, (uint64_t)v21);
          swift_release();
          sub_10000C80C(v21, v22);
          sub_100053208(1, v16, v15);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return sub_100017BC4((uint64_t)v21);
        }
        swift_release();
      }

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void sub_10008ADE4(char a1)
{
  uint64_t v2 = v1;
  if ((a1 & 1) == 0)
  {
    uint64_t v3 = OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep;
    uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep);
    sub_100093394(v4);
    uint64_t v5 = sub_10009123C((uint64_t)v4);
    sub_1000933B4(v4);
    id v6 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v5;
    sub_1000933B4(v6);
  }
  uint64_t v7 = OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep;
  while (1)
  {
    uint64_t v8 = *(void **)(v2 + v7);
    sub_100093394(v8);
    char v9 = sub_10009165C((uint64_t)v8);
    sub_1000933B4(v8);
    if (v9) {
      break;
    }
    uint64_t v10 = *(void **)(v2 + v7);
    if (v10 == (void *)13)
    {
LABEL_10:
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_100008278(v14, (uint64_t)qword_1000D69F0);
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, v16))
      {
        id v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "Nothing else to display after pairing, dismissing", v17, 2u);
        swift_slowDealloc();
      }

      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_10003B97C();
LABEL_16:
        swift_unknownObjectRelease();
      }
      return;
    }
    sub_1000933A4(*(id *)(v2 + v7));
    uint64_t v11 = sub_10009123C((uint64_t)v10);
    sub_1000933B4(v10);
    uint64_t v12 = *(void **)(v2 + v7);
    *(void *)(v2 + v7) = v11;
    sub_1000933B4(v12);
  }
  uint64_t v13 = *(void **)(v2 + v7);
  switch((unint64_t)v13)
  {
    case 0uLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003CA94();
      goto LABEL_16;
    case 1uLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003C8F0();
      goto LABEL_16;
    case 2uLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003E29C();
      goto LABEL_16;
    case 3uLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003BBD0();
      goto LABEL_16;
    case 4uLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003E5E4();
      goto LABEL_16;
    case 5uLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003DC0C();
      goto LABEL_16;
    case 6uLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003DDB0();
      goto LABEL_16;
    case 7uLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003CF80();
      goto LABEL_16;
    case 8uLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003D2C8();
      goto LABEL_16;
    case 9uLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003D46C();
      goto LABEL_16;
    case 0xAuLL:
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong) {
        return;
      }
      uint64_t v19 = Strong;
      if (qword_1000D43C8 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_100008278(v20, (uint64_t)qword_1000D55E0);
      id v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        id v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Showing battery view", v23, 2u);
        swift_slowDealloc();
      }

      id v24 = *(void **)(v19 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
      if (!v24) {
        goto LABEL_16;
      }
      id v25 = v24;
      id v26 = sub_100089998();
      [v25 pushViewController:v26 animated:1];
      swift_unknownObjectRelease();

      break;
    case 0xBuLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003BF18();
      goto LABEL_16;
    case 0xCuLL:
      if (!swift_unknownObjectWeakLoadStrong()) {
        return;
      }
      sub_10003C0BC();
      goto LABEL_16;
    case 0xDuLL:
      goto LABEL_10;
    default:
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_1000933A4(v13);
        sub_1000933A4(v13);
        sub_10003D7B4(v13);
        swift_unknownObjectRelease();
        sub_1000933B4(v13);
        sub_1000933B4(v13);
      }
      return;
  }
}

void sub_10008B2E4()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested device connect", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v0 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 40)) = 0;
  if (*(unsigned char *)(v0 + 80) == 1)
  {
    oslog = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "Already connecting", v8, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    swift_weakInit();
    uint64_t v10 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess();
    if (*(unsigned char *)(v10 + *(int *)(type metadata accessor for HeadphoneModel() + 104)) == 1)
    {
      uint64_t v11 = *(void (**)(uint64_t (*)(char), void *))(v1
                                                                          + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_unlockDevice);
      uint64_t v12 = swift_allocObject();
      swift_weakInit();
      uint64_t v13 = (void *)swift_allocObject();
      void v13[2] = sub_10009D598;
      v13[3] = v9;
      v13[4] = v12;
      swift_retain();
      swift_retain();
      swift_retain();
      v11(sub_10009D5A4, v13);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      swift_retain();
      sub_10008B5C4();
      swift_release_n();
    }
  }
}

uint64_t sub_10008B5C4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(unsigned char *)(Strong + 80) = 1;
    sub_100089E74();
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = result + 16;
    swift_beginAccess();
    if (*(void *)(v2 + 40))
    {
      sub_100017C14(v3, (uint64_t)v4);
      swift_release();
      sub_10000C80C(v4, v4[3]);
      sub_100051DA0();
      return sub_100017BC4((uint64_t)v4);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_10008B6A4()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested customize announce notifications", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = v1[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 68)) = 1;
  os_log_type_t v7 = self;
  [v7 setHasUserSeenAnnounceCallsOptOutScreen:1];
  [v7 setHasUserSeenAnnounceNotificationsOptOutScreen:1];
  uint64_t result = swift_beginAccess();
  uint64_t v9 = v1[5];
  if (v9)
  {
    uint64_t v10 = (void *)(*sub_10000C80C(v1 + 2, v9)
                   + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter);
    uint64_t v11 = v10[3];
    uint64_t v12 = v10[4];
    sub_10000C80C(v10, v11);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(1, v11, v12);
    if (v1[5])
    {
      sub_100017C14((uint64_t)(v1 + 2), (uint64_t)v20);
      uint64_t v13 = sub_10000C80C(v20, v20[3]);
      uint64_t v14 = swift_allocObject();
      swift_weakInit();
      uint64_t v15 = *(NSObject **)(*v13 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_workingQueue);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = sub_10009D268;
      *(void *)(v16 + 24) = v14;
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_10009D270;
      *(void *)(v17 + 24) = v16;
      v19[4] = sub_10004CD04;
      v19[5] = v17;
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 1107296256;
      v19[2] = sub_100089B20;
      uint64_t v19[3] = &unk_1000C6528;
      uint64_t v18 = _Block_copy(v19);
      swift_retain_n();
      swift_retain();
      swift_release();
      dispatch_sync(v15, v18);
      _Block_release(v18);
      LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
      swift_release_n();
      swift_release();
      uint64_t result = swift_release();
      if (v15) {
        __break(1u);
      }
      else {
        return sub_100017BC4((uint64_t)v20);
      }
    }
  }
  return result;
}

uint64_t sub_10008B9E8()
{
  uint64_t v0 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (uint64_t *)&v28[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
  *uint64_t v3 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v1 + 104))(v3, enum case for DispatchPredicate.onQueue(_:), v0);
  char v4 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v1 + 8))(v3, v0);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  os_log_type_t v7 = &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView;
  if (Strong)
  {
    uint64_t v8 = Strong + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess();
    if (*(void *)(v8 + 8))
    {
      uint64_t v9 = *(void *)(v8 + 96);
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        swift_beginAccess();
        uint64_t v11 = (void **)(v9 + 72);
        do
        {
          if (*(unsigned char *)(v11 - 1))
          {
            uint64_t v14 = (uint64_t)*(v11 - 5);
            uint64_t v13 = (uint64_t)*(v11 - 4);
            uint64_t v15 = *v11;
            uint64_t v16 = swift_weakLoadStrong();
            if (v16)
            {
              uint64_t v17 = v16;
              uint64_t v18 = v16 + 16;
              swift_beginAccess();
              if (*(void *)(v17 + 40))
              {
                sub_100017C14(v18, (uint64_t)v29);
                id v12 = v15;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_release();
                sub_10000C80C(v29, v30);
                sub_100053208(1, v14, v13);

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_100017BC4((uint64_t)v29);
              }
              else
              {
                swift_release();
              }
            }
          }
          v11 += 6;
          --v10;
        }
        while (v10);
        swift_bridgeObjectRelease();
        os_log_type_t v7 = &OBJC_IVAR____TtC20HeadphoneProxService30HeadphoneBatteryViewController_rightBatteryView;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_release();
    }
  }
  swift_beginAccess();
  uint64_t v19 = swift_weakLoadStrong();
  if (v19)
  {
    uint64_t v20 = v19 + v7[322];
    swift_beginAccess();
    uint64_t v21 = *(void *)(v20 + 8);
    if (v21)
    {
      uint64_t v22 = *(void *)v20;
      id v23 = *(id *)(v20 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      swift_beginAccess();
      uint64_t v24 = swift_weakLoadStrong();
      if (v24)
      {
        uint64_t v25 = v24;
        uint64_t v26 = v24 + 16;
        swift_beginAccess();
        if (*(void *)(v25 + 40))
        {
          sub_100017C14(v26, (uint64_t)v29);
          swift_release();
          sub_10000C80C(v29, v30);
          sub_100053208(1, v22, v21);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100017BC4((uint64_t)v29);
          goto LABEL_23;
        }
        swift_release();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
  }
LABEL_23:
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v27 = swift_unknownObjectWeakLoadStrong();
    uint64_t result = swift_release();
    if (v27)
    {
      sub_10003BD74();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10008BE14()
{
  return sub_10008BE44(sub_1000524DC);
}

uint64_t sub_10008BE2C()
{
  return sub_10008BE44(sub_100052B80);
}

uint64_t sub_10008BE44(uint64_t (*a1)(void))
{
  uint64_t v3 = v1;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100008278(v4, (uint64_t)qword_1000D69F0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Requested disconnect", v7, 2u);
    swift_slowDealloc();
  }

  *(unsigned char *)(v3 + 80) = 3;
  sub_100089E74();
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *(void *)(v3 + 40);
  if (v9)
  {
    sub_10000C80C((void *)(v3 + 16), v9);
    return a1();
  }
  return result;
}

uint64_t sub_10008BF78()
{
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100008278(v0, (uint64_t)qword_1000D69F0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Requested dismiss", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003B97C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10008C08C()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested launch of bluetooth settings", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 124)) = 1;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003F8F0();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10008C1C4()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested non genuine don't connect", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 124)) = 0;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003B97C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10008C2F8()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested Skip Config for Mute Call", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v1 + 40);
  if (v7)
  {
    sub_10000C80C((void *)(v1 + 16), v7);
    uint64_t result = (uint64_t)sub_100053F0C();
    if ((result & 1) == 0)
    {
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (!result) {
        return result;
      }
      sub_10003B97C();
      return swift_unknownObjectRelease();
    }
    uint64_t v8 = *(void *)(v1 + 40);
    if (v8)
    {
      sub_10000C80C((void *)(v1 + 16), v8);
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        sub_10003CC38();
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_10008C458()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested Skip Config for Adaptive Controls", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if ((*(unsigned char *)(v6 + 120) & 0xFE) == 2)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10003B97C();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_10008ADE4(0);
  }
}

uint64_t sub_10008C598(char a1)
{
  uint64_t v2 = v1;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100008278(v4, (uint64_t)qword_1000D69F0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    v12[0] = v8;
    if (a1) {
      uint64_t v9 = 0x6E4F206E727554;
    }
    else {
      uint64_t v9 = 0x776F4E20746F4ELL;
    }
    sub_10005D8C8(v9, 0xE700000000000000, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Requested %s For Adaptive Controls - Adaptive Mode", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (a1)
  {
    swift_beginAccess();
    uint64_t v10 = *(void *)(v2 + 40);
    if (v10)
    {
      sub_10000C80C((void *)(v2 + 16), v10);
      sub_100054168(1);
    }
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003CF80();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10008C78C(char a1)
{
  uint64_t v2 = v1;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100008278(v4, (uint64_t)qword_1000D69F0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    v18[0] = v8;
    if (a1) {
      uint64_t v9 = 0x6E4F206E727554;
    }
    else {
      uint64_t v9 = 0x776F4E20746F4ELL;
    }
    sub_10005D8C8(v9, 0xE700000000000000, v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Requested %s For Adaptive Controls - PersonalizedVolume", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v10 = v2[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  uint64_t v11 = *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 104);
  if (a1)
  {
    *(unsigned char *)(v10 + v11) = 0;
    swift_beginAccess();
    uint64_t v12 = v2[5];
    if (v12)
    {
      sub_10000C80C(v2 + 2, v12);
      sub_10005418C(1);
    }
  }
  else
  {
    *(unsigned char *)(v10 + v11) = 1;
  }
  uint64_t v13 = (char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  int v14 = *(_DWORD *)&v13[*(int *)(type metadata accessor for HeadphoneModel() + 124)];
  id v15 = [self b768e];
  unsigned int v16 = [v15 productID];

  if (v16 == v14) {
    return sub_10008ADE4(0);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003D124();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10008CA2C(char a1)
{
  uint64_t v2 = v1;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100008278(v4, (uint64_t)qword_1000D69F0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    v15[0] = v8;
    if (a1) {
      uint64_t v9 = 0x6E4F206E727554;
    }
    else {
      uint64_t v9 = 0x776F4E20746F4ELL;
    }
    sub_10005D8C8(v9, 0xE700000000000000, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Requested %s For Adaptive Controls - Conversation Awareness", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v10 = v2[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  uint64_t v11 = *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 108);
  if (a1)
  {
    *(unsigned char *)(v10 + v11) = 0;
    swift_beginAccess();
    uint64_t v12 = v2[5];
    if (v12)
    {
      sub_10000C80C(v2 + 2, v12);
      sub_1000541B0(1);
    }
  }
  else
  {
    *(unsigned char *)(v10 + v11) = 1;
  }
  uint64_t v13 = (char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if ((v13[120] & 0xFE) != 2) {
    return sub_10008ADE4(0);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003B97C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10008CC8C()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested Continue for Whats New", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = v1[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 168)) = 0;
  uint64_t v7 = (char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if (v7[120] != 4) {
    return sub_10008ADE4(0);
  }
  swift_beginAccess();
  uint64_t v8 = v1[5];
  if (!v8)
  {
LABEL_15:
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    sub_10003B97C();
    return swift_unknownObjectRelease();
  }
  sub_10000C80C(v1 + 2, v8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  char v9 = dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeadGesturesCard(deviceAddress:)();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v11 = v1[5];
  if ((v9 & 1) == 0)
  {
    if (v11)
    {
      sub_10000C80C(v1 + 2, v11);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_retain();
      char v12 = dispatch thunk of HeadphoneProxFeatureManager.shouldShowYodelCard(deviceAddress:)();
      swift_release();
      swift_bridgeObjectRelease();
      if (v12) {
        return sub_10008CF30();
      }
    }
    goto LABEL_15;
  }
  if (v11)
  {
    sub_10000C80C(v1 + 2, v11);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_10003D46C();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10008CF30()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 128);
  uint64_t v3 = *(void *)(v2 + 136);
  swift_bridgeObjectRetain();
  LOBYTE(v4) = sub_10001E0E8(v4, v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v6 = *(void *)(v1 + 40);
    if (v6)
    {
      sub_10000C80C((void *)(v1 + 16), v6);
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        sub_10003C260();
        return swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    if (qword_1000D4328 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100008278(v7, (uint64_t)qword_1000D9170);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "showing showHearingProtection false", v10, 2u);
      swift_slowDealloc();
    }

    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_10003B97C();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10008D0BC()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested Turn On for Head Gestures", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = v1[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 164)) = 0;
  swift_beginAccess();
  uint64_t v7 = v1[5];
  if (v7)
  {
    sub_10000C80C(v1 + 2, v7);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    dispatch thunk of HeadphoneProxFeatureManager.setHeadGesturesConfig(deviceAddress:enabled:)();
    swift_release();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = (char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if ((v8[120] & 0xFE) != 4) {
    return sub_10008ADE4(0);
  }
  uint64_t v9 = v1[5];
  if (v9)
  {
    sub_10000C80C(v1 + 2, v9);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char v10 = dispatch thunk of HeadphoneProxFeatureManager.shouldShowYodelCard(deviceAddress:)();
    swift_release();
    swift_bridgeObjectRelease();
    if (v10) {
      return sub_10008CF30();
    }
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003B97C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10008D33C()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested Not Now for Head Gestures", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = v1[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 164)) = 1;
  uint64_t v7 = (char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if ((v7[120] & 0xFE) != 4) {
    return sub_10008ADE4(0);
  }
  swift_beginAccess();
  uint64_t v8 = v1[5];
  if (v8)
  {
    sub_10000C80C(v1 + 2, v8);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    char v9 = dispatch thunk of HeadphoneProxFeatureManager.shouldShowYodelCard(deviceAddress:)();
    swift_release();
    swift_bridgeObjectRelease();
    if (v9) {
      return sub_10008CF30();
    }
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003B97C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10008D540(char a1)
{
  uint64_t v2 = v1;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100008278(v4, (uint64_t)qword_1000D69F0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Requested repair instructions", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = v2[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v8
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 132)) = 0;
  *((unsigned char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_temporarilyPair) = a1 & 1;
  swift_beginAccess();
  uint64_t v9 = v2[5];
  if (v9)
  {
    uint64_t v10 = v2[6];
    sub_100079958((uint64_t)(v2 + 2), v2[5]);
    (*(void (**)(void, uint64_t, uint64_t))(v10 + 96))(a1 & 1, v9, v10);
  }
  swift_endAccess();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  char v12 = (char *)v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if (v12[*(int *)(type metadata accessor for HeadphoneModel() + 104)] == 1)
  {
    uint64_t v13 = *(void (**)(uint64_t (*)(char), void *))((char *)v2
                                                                        + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_unlockDevice);
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    id v15 = (void *)swift_allocObject();
    void v15[2] = sub_10009D5C4;
    uint64_t v15[3] = v11;
    v15[4] = v14;
    swift_retain();
    swift_retain();
    swift_retain();
    v13(sub_10009D838, v15);
    swift_release();
    swift_release();
  }
  else
  {
    swift_retain();
    sub_10008D7EC();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_10008D7EC()
{
  uint64_t v35 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  id v31 = (char *)&v29 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v2 = (char *)&v29 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DispatchTime();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - v8;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_release();
    if (Strong)
    {
      sub_10003E0F8();
      swift_unknownObjectRelease();
    }
  }
  swift_beginAccess();
  uint64_t v11 = swift_weakLoadStrong();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = v11 + 16;
    swift_beginAccess();
    uint64_t v14 = *(void *)(v12 + 40);
    if (v14)
    {
      uint64_t v15 = v3;
      uint64_t v16 = *(void *)(v12 + 48);
      sub_100079958(v13, *(void *)(v12 + 40));
      uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 72);
      uint64_t v18 = v16;
      uint64_t v3 = v15;
      v17(1, v14, v18);
    }
    swift_endAccess();
    swift_release();
  }
  swift_beginAccess();
  uint64_t v19 = swift_weakLoadStrong();
  if (!v19
    || (uint64_t v20 = v19 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model,
        swift_beginAccess(),
        int v21 = *(unsigned __int8 *)(v20 + *(int *)(type metadata accessor for HeadphoneModel() + 120)),
        uint64_t result = swift_release(),
        v21))
  {
    sub_100008EB0(0, (unint64_t *)&qword_1000D4BD0);
    uint64_t v29 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    id v23 = v9;
    + infix(_:_:)();
    uint64_t v30 = *(void (**)(char *, uint64_t))(v4 + 8);
    v30(v7, v3);
    uint64_t v24 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    aBlock[4] = sub_10009D610;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100046658;
    void aBlock[3] = &unk_1000C6640;
    uint64_t v25 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    id v36 = _swiftEmptyArrayStorage;
    sub_100017DD8();
    uint64_t v26 = v31;
    sub_100008E18(&qword_1000D4C28);
    sub_100017E30((unint64_t *)&qword_1000D4C30, &qword_1000D4C28);
    uint64_t v27 = v35;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v28 = (void *)v29;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v2, v33);
    v30(v23, v3);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10008DD60()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(unsigned char *)(result + 80)) {
      return swift_release();
    }
    sub_10008B2E4();
    if (!swift_unknownObjectWeakLoadStrong())
    {
      return swift_release();
    }
    else
    {
      sub_10003C74C();
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10008DDEC(char a1, uint64_t (*a2)(void))
{
  if (a1) {
    return a2();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t result = swift_release();
    if (Strong)
    {
      sub_10003B97C();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10008DE70()
{
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100008278(v1, (uint64_t)qword_1000D69F0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Requested skip features", v4, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t v5 = *(void *)(v0 + 40);
  if (v5)
  {
    uint64_t v6 = *sub_10000C80C((void *)(v0 + 16), v5);
    if (qword_1000D4468 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_1000D9290;
    uint64_t v8 = v6 + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_model;
    swift_beginAccess();
    uint64_t v9 = type metadata accessor for HeadphoneModel();
    sub_10007D090(*(unsigned int *)(v8 + *(int *)(v9 + 124)), v7);
  }
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Requested post pairing view", v12, 2u);
    swift_slowDealloc();
  }

  return sub_10008ADE4(1);
}

void sub_10008E074()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested skip Hey Siri enrollment", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 148)) = 1;

  sub_10008ADE4(0);
}

void sub_10008E188()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested Hey Siri enrollment finished", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 148)) = 0;

  sub_10008ADE4(0);
}

uint64_t sub_10008E298()
{
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100008278(v0, (uint64_t)qword_1000D69F0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Requested Hey Siri enrollment privacy", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t result = swift_unknownObjectRelease();
    if (Strong)
    {
      self;
      uint64_t v6 = swift_dynamicCastObjCClass();
      if (v6)
      {
        uint64_t v7 = v6;
        NSString v8 = String._bridgeToObjectiveC()();
        id v9 = [self presenterForPrivacySplashWithIdentifier:v8];

        if (v9) {
          [v9 setPresentingViewController:v7];
        }
        [v9 present];
      }
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10008E464()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested to install Find My", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 88)) = 0;
  swift_beginAccess();
  if (*(void *)(v1 + 40)) {
    sub_100060298();
  }
  return sub_10008ADE4(0);
}

void sub_10008E594()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested spatial audio profile create", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 80)) = 0;
  id v7 = [self profileEnrollmentViewController];
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  v18[4] = sub_10009D2B8;
  v18[5] = v8;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100046658;
  uint64_t v18[3] = &unk_1000C65C8;
  id v9 = _Block_copy(v18);
  swift_release();
  [v7 setDismissalHandler:v9];
  _Block_release(v9);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v11 = *(void **)(Strong + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_navigationController);
    if (v11)
    {
      id v12 = v7;
      [v11 presentViewController:v12 animated:1 completion:0];

      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v13 = qword_1000D43C8;
      id v14 = v7;
      if (v13 != -1) {
        swift_once();
      }
      sub_100008278(v2, (uint64_t)qword_1000D55E0);
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "No navigation controller", v17, 2u);
        swift_slowDealloc();
      }

      swift_unknownObjectRelease();
    }
  }
  else
  {
  }
}

uint64_t sub_10008E8A0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (qword_1000D4480 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100008278(v2, (uint64_t)qword_1000D69F0);
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Spatial profile enrollment dismissed", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = *(void *)(v1 + 72) + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
    *(unsigned char *)(v6
             + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 80)) = 3;
    sub_10008ADE4(0);
    return swift_release();
  }
  return result;
}

id sub_10008E9E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100008278(v6, (uint64_t)qword_1000D69F0);
  uint64_t v7 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  long long v16 = *(_OWORD *)(a1 + 16);
  sub_10004BF88(a1 + 40, (uint64_t)&v15, &qword_1000D6BF0);
  swift_bridgeObjectRetain();
  sub_10009D658((uint64_t)&v16);
  sub_10009D684(&v15);
  swift_bridgeObjectRetain();
  sub_10009D658((uint64_t)&v16);
  sub_10009D684(&v15);
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v14[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_10005D8C8(v7, v8, v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    sub_10009D6B0((uint64_t)&v16);
    sub_10009D6DC(&v15);
    swift_bridgeObjectRelease();
    sub_10009D6B0((uint64_t)&v16);
    sub_10009D6DC(&v15);
    *(_WORD *)(v11 + 12) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Requested toggle announce for %s, enabled: %{BOOL}d", (uint8_t *)v11, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10009D6B0((uint64_t)&v16);
    sub_10009D6DC(&v15);
    swift_bridgeObjectRelease();
    sub_10009D6B0((uint64_t)&v16);
    sub_10009D6DC(&v15);
  }

  id result = (id)swift_beginAccess();
  uint64_t v13 = *(void *)(v3 + 40);
  if (v13)
  {
    sub_10000C80C((void *)(v3 + 16), v13);
    return sub_100053208(a2 & 1, v7, v8);
  }
  return result;
}

uint64_t sub_10008EC7C()
{
  uint64_t v1 = v0;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100008278(v2, (uint64_t)qword_1000D69F0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Requested turn off announce", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = v1[9] + OBJC_IVAR____TtC20HeadphoneProxService28HeadphoneAnalyticsController_metrics;
  *(unsigned char *)(v6
           + *(int *)(type metadata accessor for HeadphoneAnalyticsController.HeadphoneProxCardFeaturesEvent(0) + 72)) = 1;
  uint64_t v7 = (char *)v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if (v7[120] != 9)
  {
    id v9 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v9, v21)) {
      goto LABEL_23;
    }
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    id v23 = "Turning off Announce Notifications";
    uint64_t v24 = v9;
    os_log_type_t v25 = v21;
    goto LABEL_22;
  }
  int v8 = v7[*(int *)(type metadata accessor for HeadphoneModel() + 156)];
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  if (v8 == 1)
  {
    if (v11)
    {
      id v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Announce Messages enabled, turning off everything but Messages", v12, 2u);
      swift_slowDealloc();
    }

    if (*((void *)v7 + 1))
    {
      uint64_t v13 = *((void *)v7 + 12);
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14)
      {
        id v36 = v1;
        swift_bridgeObjectRetain();
        uint64_t v35 = v1 + 2;
        swift_beginAccess();
        id v15 = (uint64_t *)(v13 + 40);
        do
        {
          uint64_t v17 = *(v15 - 1);
          uint64_t v16 = *v15;
          uint64_t v18 = (void *)v15[4];
          if ((v17 != 0xD000000000000013 || v16 != 0x80000001000A9BA0)
            && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v19 = v36[5];
            if (v19)
            {
              sub_10000C80C(v35, v19);
              id v20 = v18;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_100053208(0, v17, v16);

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }
          v15 += 6;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        uint64_t v1 = v36;
      }
    }
    goto LABEL_25;
  }
  if (v11)
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    os_log_type_t v25 = v10;
    id v23 = "Announce Messages not enabled, turning off Announce Notifications";
    uint64_t v24 = v9;
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v24, v25, v23, v22, 2u);
    swift_slowDealloc();
  }
LABEL_23:

  swift_beginAccess();
  uint64_t v26 = v1[5];
  if (v26)
  {
    uint64_t v27 = (void *)(*sub_10000C80C(v1 + 2, v26)
                   + OBJC_IVAR____TtC20HeadphoneProxService19HeadphoneInteractor_notificationSettingsCenter);
    uint64_t v28 = v27[3];
    uint64_t v29 = v27[4];
    sub_10000C80C(v27, v28);
    (*(void (**)(void, uint64_t, uint64_t))(v29 + 8))(0, v28, v29);
  }
LABEL_25:
  if (!*(void *)&v7[*(int *)(type metadata accessor for HeadphoneModel() + 152)])
  {
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Announce Calls not originally enabled, turning off", v32, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    uint64_t v33 = v1[5];
    if (v33)
    {
      sub_10000C80C(v1 + 2, v33);
      sub_100053208(0, 0xD000000000000015, 0x80000001000A9980);
    }
  }
  return sub_10008ADE4(0);
}

uint64_t sub_10008F158()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 128);
  uint64_t v2 = *(void *)(v1 + 136);
  swift_bridgeObjectRetain();
  LOBYTE(v3) = sub_10001D89C(v3, v2);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      return result;
    }
    sub_10003C5A8();
    return swift_unknownObjectRelease();
  }
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100008278(v5, (uint64_t)qword_1000D69F0);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    int v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "showHearingTest denied, flase.", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003B97C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10008F2B8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if (*(void *)(v1 + 136))
  {
    uint64_t v2 = *(void *)(v1 + 128);
    unint64_t v3 = *(void *)(v1 + 136);
  }
  else
  {
    uint64_t v2 = 0;
    unint64_t v3 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  char v4 = sub_10001DC84(v2, v3);
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0) {
    return sub_10008F158();
  }
  if (qword_1000D4328 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100008278(v5, (uint64_t)qword_1000D9170);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    int v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "showing showYodelHearingSwitchListeningModeUpsellCard", v8, 2u);
    swift_slowDealloc();
  }

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10003C404();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10008F420(char a1)
{
  uint64_t v2 = v1;
  switch(a1)
  {
    case 5:
      swift_beginAccess();
      uint64_t v3 = *(void *)(v1 + 40);
      if (v3)
      {
        char v4 = (void *)(v1 + 16);
        goto LABEL_7;
      }
      break;
    case 6:
      swift_beginAccess();
      uint64_t v5 = *(void *)(v1 + 40);
      if (v5)
      {
        sub_10000C80C((void *)(v1 + 16), v5);
        sub_10005356C();
        uint64_t v3 = *(void *)(v1 + 40);
        if (v3)
        {
          char v4 = (void *)(v1 + 16);
LABEL_7:
          sub_10000C80C(v4, v3);
          sub_1000537D0();
        }
      }
      break;
    case 7:
      swift_beginAccess();
      uint64_t v6 = *(void *)(v1 + 40);
      if (v6)
      {
        sub_10000C80C((void *)(v1 + 16), v6);
        sub_1000539E0();
      }
      break;
    case 8:
      swift_beginAccess();
      uint64_t v7 = *(void *)(v1 + 40);
      if (v7)
      {
        sub_10000C80C((void *)(v1 + 16), v7);
        sub_100053F0C();
        uint64_t v8 = *(void *)(v1 + 40);
        if (v8)
        {
          sub_10000C80C((void *)(v1 + 16), v8);
          sub_100054144();
        }
      }
      break;
    case 13:
      swift_beginAccess();
      uint64_t v9 = *(void *)(v1 + 40);
      if (v9)
      {
        sub_10000C80C((void *)(v1 + 16), v9);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeadGesturesCard(deviceAddress:)();
        swift_release();
        swift_bridgeObjectRelease();
      }
      break;
    case 17:
      if (*(unsigned char *)(v1 + 80))
      {
        if (qword_1000D4480 != -1) {
          swift_once();
        }
        uint64_t v10 = type metadata accessor for Logger();
        sub_100008278(v10, (uint64_t)qword_1000D69F0);
        BOOL v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v13 = 0;
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "Non genuine card appeared, unpairing device", v13, 2u);
          swift_slowDealloc();
        }

        sub_10008BE44(sub_100052B80);
        id v14 = objc_allocWithZone((Class)NSUserDefaults);
        NSString v15 = String._bridgeToObjectiveC()();
        id v16 = [v14 initWithSuiteName:v15];

        if (v16)
        {
          sub_10008905C((uint64_t)&off_1000C2068);
          v17.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          uint64_t v18 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
          swift_beginAccess();
          if (*(void *)(v18 + 136))
          {
            String.uppercased()();
          }
          else
          {
            type metadata accessor for HeadphoneModel();
            swift_bridgeObjectRetain();
          }
          NSString v21 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v16 setObject:v17.super.isa forKey:v21];
        }
      }
      break;
    case 23:
      swift_beginAccess();
      uint64_t v19 = self;
      swift_bridgeObjectRetain();
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v19 setProxCardShowed:1 forDevice:v20];

      break;
    default:
      return;
  }
}

uint64_t sub_10008F8D0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100008E18(&qword_1000D4810);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = &v132[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v10 = &v132[-v9];
  switch((char)a1)
  {
    case 1:
      sub_100093704(a2);
      break;
    case 2:
      sub_10009689C(a2);
      break;
    case 3:
      sub_100093BF8(a2);
      break;
    case 4:
      sub_10009400C(a2);
      break;
    case 5:
    case 6:
      BOOL v11 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v12 = a2 + v11[11];
      uint64_t v13 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
      uint64_t v14 = a2 + v11[12];
      *(void *)(v14 + 32) = 0;
      *(_OWORD *)uint64_t v14 = 0u;
      *(_OWORD *)(v14 + 16) = 0u;
      *(_WORD *)(v14 + 40) = -24576;
      NSString v15 = (_OWORD *)(a2 + v11[13]);
      _OWORD *v15 = 0u;
      v15[1] = 0u;
      uint64_t v16 = a2 + v11[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v16, &qword_1000D4E60);
      *(unsigned char *)(a2 + v11[15]) = 0;
      *(unsigned char *)(a2 + v11[16]) = 0;
      *(void *)(a2 + v11[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v11[18]) = _swiftEmptyArrayStorage;
      NSDictionary v17 = (_OWORD *)(a2 + v11[19]);
      v17[5] = 0u;
      v17[6] = 0u;
      v17[3] = 0u;
      v17[4] = 0u;
      v17[1] = 0u;
      void v17[2] = 0u;
      *NSDictionary v17 = 0u;
      *(void *)(a2 + v11[20]) = 0;
      *(void *)(a2 + v11[21]) = 0;
      *(unsigned char *)(a2 + v11[22]) = 0;
      *(void *)a2 = sub_100027B70(0x35u);
      *(void *)(a2 + 8) = v18;
      *(void *)(a2 + 16) = sub_100027B70(0x36u);
      *(void *)(a2 + 24) = v19;
      *(void *)(a2 + 32) = sub_100027B70(0x38u);
      *(void *)(a2 + 40) = v20;
      unsigned __int8 v21 = 55;
      goto LABEL_28;
    case 7:
      sub_10009426C(a2);
      break;
    case 8:
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0xE000000000000000;
      uint64_t v29 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v30 = a2 + v29[11];
      uint64_t v31 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
      uint64_t v32 = a2 + v29[12];
      *(void *)(v32 + 32) = 0;
      *(_OWORD *)uint64_t v32 = 0u;
      *(_OWORD *)(v32 + 16) = 0u;
      *(_WORD *)(v32 + 40) = -24576;
      uint64_t v33 = (_OWORD *)(a2 + v29[13]);
      *uint64_t v33 = 0u;
      v33[1] = 0u;
      uint64_t v34 = a2 + v29[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v34, &qword_1000D4E60);
      *(unsigned char *)(a2 + v29[15]) = 0;
      *(unsigned char *)(a2 + v29[16]) = 0;
      *(void *)(a2 + v29[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v29[18]) = _swiftEmptyArrayStorage;
      uint64_t v35 = (_OWORD *)(a2 + v29[19]);
      v35[5] = 0u;
      v35[6] = 0u;
      v35[3] = 0u;
      v35[4] = 0u;
      v35[1] = 0u;
      _OWORD v35[2] = 0u;
      *uint64_t v35 = 0u;
      *(void *)(a2 + v29[20]) = 0;
      *(void *)(a2 + v29[21]) = 0;
      *(unsigned char *)(a2 + v29[22]) = 0;
      *(void *)a2 = sub_100027B70(0x42u);
      *(void *)(a2 + 8) = v36;
      unsigned __int8 v37 = 67;
      goto LABEL_13;
    case 9:
      id v38 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v39 = a2 + v38[11];
      uint64_t v40 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
      uint64_t v41 = a2 + v38[12];
      *(void *)(v41 + 32) = 0;
      *(_OWORD *)uint64_t v41 = 0u;
      *(_OWORD *)(v41 + 16) = 0u;
      *(_WORD *)(v41 + 40) = -24576;
      id v42 = (_OWORD *)(a2 + v38[13]);
      *id v42 = 0u;
      v42[1] = 0u;
      uint64_t v43 = a2 + v38[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v43, &qword_1000D4E60);
      *(unsigned char *)(a2 + v38[15]) = 0;
      *(unsigned char *)(a2 + v38[16]) = 0;
      *(void *)(a2 + v38[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v38[18]) = _swiftEmptyArrayStorage;
      id v44 = (_OWORD *)(a2 + v38[19]);
      v44[5] = 0u;
      v44[6] = 0u;
      v44[3] = 0u;
      v44[4] = 0u;
      v44[1] = 0u;
      v44[2] = 0u;
      *id v44 = 0u;
      *(void *)(a2 + v38[20]) = 0;
      *(void *)(a2 + v38[21]) = 0;
      *(unsigned char *)(a2 + v38[22]) = 0;
      *(void *)a2 = sub_100027B70(0x4Bu);
      *(void *)(a2 + 8) = v45;
      *(void *)(a2 + 16) = sub_100027B70(0x4Cu);
      *(void *)(a2 + 24) = v46;
      unsigned __int8 v37 = 77;
      goto LABEL_13;
    case 10:
      uint64_t v47 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v48 = a2 + v47[11];
      uint64_t v49 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 1, 1, v49);
      uint64_t v50 = a2 + v47[12];
      *(void *)(v50 + 32) = 0;
      *(_OWORD *)uint64_t v50 = 0u;
      *(_OWORD *)(v50 + 16) = 0u;
      *(_WORD *)(v50 + 40) = -24576;
      id v51 = (_OWORD *)(a2 + v47[13]);
      *id v51 = 0u;
      v51[1] = 0u;
      uint64_t v52 = a2 + v47[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v52, &qword_1000D4E60);
      *(unsigned char *)(a2 + v47[15]) = 0;
      *(unsigned char *)(a2 + v47[16]) = 0;
      *(void *)(a2 + v47[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v47[18]) = _swiftEmptyArrayStorage;
      uint64_t v53 = (_OWORD *)(a2 + v47[19]);
      v53[5] = 0u;
      v53[6] = 0u;
      v53[3] = 0u;
      v53[4] = 0u;
      v53[1] = 0u;
      void v53[2] = 0u;
      *uint64_t v53 = 0u;
      *(void *)(a2 + v47[20]) = 0;
      *(void *)(a2 + v47[21]) = 0;
      *(unsigned char *)(a2 + v47[22]) = 0;
      *(void *)a2 = sub_100027B70(0x4Eu);
      *(void *)(a2 + 8) = v54;
      *(void *)(a2 + 16) = sub_100027B70(0x4Fu);
      *(void *)(a2 + 24) = v55;
      unsigned __int8 v37 = 80;
LABEL_13:
      *(void *)(a2 + 32) = sub_100027B70(v37);
      *(void *)(a2 + 40) = v56;
      unsigned __int8 v21 = 68;
      goto LABEL_28;
    case 11:
      sub_1000945BC(a2);
      break;
    case 12:
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0xE000000000000000;
      uint64_t v57 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v58 = a2 + v57[11];
      uint64_t v59 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 1, 1, v59);
      uint64_t v60 = a2 + v57[12];
      *(void *)(v60 + 32) = 0;
      *(_OWORD *)uint64_t v60 = 0u;
      *(_OWORD *)(v60 + 16) = 0u;
      *(_WORD *)(v60 + 40) = -24576;
      objc_super v61 = (_OWORD *)(a2 + v57[13]);
      *objc_super v61 = 0u;
      v61[1] = 0u;
      uint64_t v62 = a2 + v57[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v62, &qword_1000D4E60);
      *(unsigned char *)(a2 + v57[15]) = 0;
      *(unsigned char *)(a2 + v57[16]) = 0;
      *(void *)(a2 + v57[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v57[18]) = _swiftEmptyArrayStorage;
      id v63 = (_OWORD *)(a2 + v57[19]);
      v63[5] = 0u;
      v63[6] = 0u;
      v63[3] = 0u;
      v63[4] = 0u;
      v63[1] = 0u;
      v63[2] = 0u;
      *id v63 = 0u;
      *(void *)(a2 + v57[20]) = 0;
      *(void *)(a2 + v57[21]) = 0;
      *(unsigned char *)(a2 + v57[22]) = 0;
      *(void *)a2 = sub_100027B70(0x55u);
      *(void *)(a2 + 8) = v64;
      *(void *)(a2 + 32) = sub_100027B70(0x56u);
      *(void *)(a2 + 40) = v65;
      unsigned __int8 v21 = 87;
      goto LABEL_28;
    case 13:
      id v66 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v67 = a2 + v66[11];
      uint64_t v68 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v67, 1, 1, v68);
      uint64_t v69 = a2 + v66[12];
      *(void *)(v69 + 32) = 0;
      *(_OWORD *)uint64_t v69 = 0u;
      *(_OWORD *)(v69 + 16) = 0u;
      *(_WORD *)(v69 + 40) = -24576;
      id v70 = (_OWORD *)(a2 + v66[13]);
      *id v70 = 0u;
      v70[1] = 0u;
      uint64_t v71 = a2 + v66[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v71, &qword_1000D4E60);
      *(unsigned char *)(a2 + v66[15]) = 0;
      *(unsigned char *)(a2 + v66[16]) = 0;
      *(void *)(a2 + v66[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v66[18]) = _swiftEmptyArrayStorage;
      uint64_t v72 = (_OWORD *)(a2 + v66[19]);
      v72[5] = 0u;
      v72[6] = 0u;
      v72[3] = 0u;
      v72[4] = 0u;
      v72[1] = 0u;
      v72[2] = 0u;
      *uint64_t v72 = 0u;
      *(void *)(a2 + v66[20]) = 0;
      *(void *)(a2 + v66[21]) = 0;
      *(unsigned char *)(a2 + v66[22]) = 0;
      *(void *)a2 = sub_100027B70(0x58u);
      *(void *)(a2 + 8) = v73;
      *(void *)(a2 + 16) = sub_100027B70(0x59u);
      *(void *)(a2 + 24) = v74;
      *(void *)(a2 + 32) = sub_100027B70(0x5Au);
      *(void *)(a2 + 40) = v75;
      unsigned __int8 v21 = 91;
      goto LABEL_28;
    case 14:
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0xE000000000000000;
      *(void *)(a2 + 48) = 0;
      *(void *)(a2 + 56) = 0xE000000000000000;
      uint64_t v76 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v77 = a2 + v76[11];
      uint64_t v78 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 1, 1, v78);
      uint64_t v79 = a2 + v76[12];
      *(void *)(v79 + 32) = 0;
      *(_OWORD *)uint64_t v79 = 0u;
      *(_OWORD *)(v79 + 16) = 0u;
      *(_WORD *)(v79 + 40) = -24576;
      unint64_t v80 = (_OWORD *)(a2 + v76[13]);
      _OWORD *v80 = 0u;
      v80[1] = 0u;
      uint64_t v81 = a2 + v76[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v81, &qword_1000D4E60);
      *(unsigned char *)(a2 + v76[15]) = 0;
      *(unsigned char *)(a2 + v76[16]) = 0;
      *(void *)(a2 + v76[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v76[18]) = _swiftEmptyArrayStorage;
      id v82 = (_OWORD *)(a2 + v76[19]);
      v82[5] = 0u;
      v82[6] = 0u;
      v82[3] = 0u;
      v82[4] = 0u;
      v82[1] = 0u;
      void v82[2] = 0u;
      *id v82 = 0u;
      *(void *)(a2 + v76[20]) = 0;
      *(void *)(a2 + v76[21]) = 0;
      *(unsigned char *)(a2 + v76[22]) = 0;
      *(void *)a2 = sub_100027B70(0x2Du);
      *(void *)(a2 + 8) = v83;
      unsigned __int8 v84 = 5;
      goto LABEL_24;
    case 15:
    case 22:
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0xE000000000000000;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0xE000000000000000;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 40) = 0xE000000000000000;
      *(void *)(a2 + 48) = 0;
      *(void *)(a2 + 56) = 0xE000000000000000;
      uint64_t v22 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v23 = a2 + v22[11];
      uint64_t v24 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
      uint64_t v25 = a2 + v22[12];
      *(void *)(v25 + 32) = 0;
      *(_OWORD *)uint64_t v25 = 0u;
      *(_OWORD *)(v25 + 16) = 0u;
      *(_WORD *)(v25 + 40) = -24576;
      uint64_t v26 = (_OWORD *)(a2 + v22[13]);
      _OWORD *v26 = 0u;
      v26[1] = 0u;
      uint64_t v27 = a2 + v22[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v27, &qword_1000D4E60);
      *(unsigned char *)(a2 + v22[15]) = 0;
      *(unsigned char *)(a2 + v22[16]) = 0;
      *(void *)(a2 + v22[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v22[18]) = _swiftEmptyArrayStorage;
      uint64_t v28 = (_OWORD *)(a2 + v22[19]);
      v28[5] = 0u;
      v28[6] = 0u;
      v28[3] = 0u;
      v28[4] = 0u;
      v28[1] = 0u;
      v28[2] = 0u;
      *uint64_t v28 = 0u;
      *(void *)(a2 + v22[20]) = 0;
      *(void *)(a2 + v22[21]) = 0;
      *(unsigned char *)(a2 + v22[22]) = 0;
      break;
    case 16:
      sub_100094888(a2);
      break;
    case 17:
      sub_100095950(a2);
      break;
    case 18:
      sub_100095B24(a2);
      break;
    case 19:
      sub_100095E84(a2);
      break;
    case 20:
      sub_100096214(a2);
      break;
    case 21:
      *(void *)(a2 + 48) = 0;
      *(void *)(a2 + 56) = 0xE000000000000000;
      id v85 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v86 = a2 + v85[11];
      uint64_t v87 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v86, 1, 1, v87);
      uint64_t v88 = a2 + v85[12];
      *(void *)(v88 + 32) = 0;
      *(_OWORD *)uint64_t v88 = 0u;
      *(_OWORD *)(v88 + 16) = 0u;
      *(_WORD *)(v88 + 40) = -24576;
      long long v89 = (_OWORD *)(a2 + v85[13]);
      *long long v89 = 0u;
      v89[1] = 0u;
      uint64_t v90 = a2 + v85[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v90, &qword_1000D4E60);
      *(unsigned char *)(a2 + v85[15]) = 0;
      *(unsigned char *)(a2 + v85[16]) = 0;
      *(void *)(a2 + v85[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v85[18]) = _swiftEmptyArrayStorage;
      id v91 = (_OWORD *)(a2 + v85[19]);
      v91[5] = 0u;
      v91[6] = 0u;
      v91[3] = 0u;
      v91[4] = 0u;
      v91[1] = 0u;
      v91[2] = 0u;
      *id v91 = 0u;
      *(void *)(a2 + v85[20]) = 0;
      *(void *)(a2 + v85[21]) = 0;
      *(unsigned char *)(a2 + v85[22]) = 0;
      *(void *)a2 = sub_100027B70(0x24u);
      *(void *)(a2 + 8) = v92;
      *(void *)(a2 + 16) = sub_100027B70(0x25u);
      *(void *)(a2 + 24) = v93;
      unsigned __int8 v84 = 2;
LABEL_24:
      *(void *)(a2 + 32) = sub_100027B70(v84);
      *(void *)(a2 + 40) = v94;
      break;
    case 23:
      id v95 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v96 = a2 + v95[11];
      uint64_t v97 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v96, 1, 1, v97);
      uint64_t v98 = a2 + v95[12];
      *(void *)(v98 + 32) = 0;
      *(_OWORD *)uint64_t v98 = 0u;
      *(_OWORD *)(v98 + 16) = 0u;
      *(_WORD *)(v98 + 40) = -24576;
      id v99 = (_OWORD *)(a2 + v95[13]);
      *id v99 = 0u;
      v99[1] = 0u;
      uint64_t v100 = a2 + v95[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v100, &qword_1000D4E60);
      *(unsigned char *)(a2 + v95[15]) = 0;
      *(unsigned char *)(a2 + v95[16]) = 0;
      *(void *)(a2 + v95[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v95[18]) = _swiftEmptyArrayStorage;
      id v101 = (_OWORD *)(a2 + v95[19]);
      v101[5] = 0u;
      v101[6] = 0u;
      v101[3] = 0u;
      v101[4] = 0u;
      v101[1] = 0u;
      v101[2] = 0u;
      _OWORD *v101 = 0u;
      *(void *)(a2 + v95[20]) = 0;
      *(void *)(a2 + v95[21]) = 0;
      *(unsigned char *)(a2 + v95[22]) = 0;
      *(void *)a2 = sub_100027B70(0x32u);
      *(void *)(a2 + 8) = v102;
      *(void *)(a2 + 16) = sub_100027B70(0x33u);
      *(void *)(a2 + 24) = v103;
      *(void *)(a2 + 32) = sub_100027B70(0x34u);
      *(void *)(a2 + 40) = v104;
      unsigned __int8 v21 = 1;
      goto LABEL_28;
    case 24:
      *(void *)a2 = 0;
      *(void *)(a2 + 8) = 0xE000000000000000;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0xE000000000000000;
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 40) = 0xE000000000000000;
      id v105 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v106 = a2 + v105[11];
      uint64_t v107 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v106, 1, 1, v107);
      uint64_t v108 = a2 + v105[12];
      *(void *)(v108 + 32) = 0;
      *(_OWORD *)uint64_t v108 = 0u;
      *(_OWORD *)(v108 + 16) = 0u;
      *(_WORD *)(v108 + 40) = -24576;
      id v109 = (_OWORD *)(a2 + v105[13]);
      *id v109 = 0u;
      v109[1] = 0u;
      uint64_t v110 = a2 + v105[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v110, &qword_1000D4E60);
      *(unsigned char *)(a2 + v105[15]) = 0;
      *(unsigned char *)(a2 + v105[16]) = 0;
      *(void *)(a2 + v105[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v105[18]) = _swiftEmptyArrayStorage;
      long long v111 = (_OWORD *)(a2 + v105[19]);
      v111[5] = 0u;
      v111[6] = 0u;
      v111[3] = 0u;
      v111[4] = 0u;
      v111[1] = 0u;
      v111[2] = 0u;
      _OWORD *v111 = 0u;
      *(void *)(a2 + v105[20]) = 0;
      *(void *)(a2 + v105[21]) = 0;
      *(unsigned char *)(a2 + v105[22]) = 0;
      unsigned __int8 v21 = 34;
      goto LABEL_28;
    case 25:
      unint64_t v112 = (int *)type metadata accessor for HeadphoneViewModel(0);
      *(_OWORD *)(a2 + 64) = 0u;
      *(_OWORD *)(a2 + 80) = 0u;
      *(void *)(a2 + 96) = 0;
      uint64_t v113 = a2 + v112[11];
      uint64_t v114 = type metadata accessor for HeadphoneAssets(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v113, 1, 1, v114);
      uint64_t v115 = a2 + v112[12];
      *(void *)(v115 + 32) = 0;
      *(_OWORD *)uint64_t v115 = 0u;
      *(_OWORD *)(v115 + 16) = 0u;
      *(_WORD *)(v115 + 40) = -24576;
      id v116 = (_OWORD *)(a2 + v112[13]);
      *id v116 = 0u;
      v116[1] = 0u;
      uint64_t v117 = a2 + v112[14];
      sub_100026C34((uint64_t)v133);
      sub_10004BF88((uint64_t)v133, v117, &qword_1000D4E60);
      *(unsigned char *)(a2 + v112[15]) = 0;
      *(unsigned char *)(a2 + v112[16]) = 0;
      *(void *)(a2 + v112[17]) = _swiftEmptyArrayStorage;
      *(void *)(a2 + v112[18]) = _swiftEmptyArrayStorage;
      uint64_t v118 = (_OWORD *)(a2 + v112[19]);
      v118[5] = 0u;
      v118[6] = 0u;
      v118[3] = 0u;
      v118[4] = 0u;
      v118[1] = 0u;
      v118[2] = 0u;
      *uint64_t v118 = 0u;
      *(void *)(a2 + v112[20]) = 0;
      *(void *)(a2 + v112[21]) = 0;
      *(unsigned char *)(a2 + v112[22]) = 0;
      *(void *)a2 = sub_100027B70(0x63u);
      *(void *)(a2 + 8) = v119;
      *(void *)(a2 + 16) = sub_100027B70(0x64u);
      *(void *)(a2 + 24) = v120;
      *(void *)(a2 + 32) = sub_100027B70(0x65u);
      *(void *)(a2 + 40) = v121;
      unsigned __int8 v21 = 3;
LABEL_28:
      *(void *)(a2 + 48) = sub_100027B70(v21);
      *(void *)(a2 + 56) = v122;
      break;
    case 26:
      sub_1000966B4(a2);
      break;
    case 27:
      sub_100096F68(27, a2);
      break;
    case 28:
      sub_100096F68(28, a2);
      break;
    case 29:
      sub_100096F68(29, a2);
      break;
    case 30:
      uint64_t v123 = a2;
      char v124 = 30;
      goto LABEL_36;
    case 31:
      uint64_t v123 = a2;
      char v124 = 31;
      goto LABEL_36;
    case 32:
      uint64_t v123 = a2;
      char v124 = 32;
LABEL_36:
      sub_1000971EC(v124, v123);
      break;
    default:
      sub_1000933FC((uint64_t *)a2);
      break;
  }
  long long v125 = (int *)type metadata accessor for HeadphoneViewModel(0);
  uint64_t v126 = a2 + v125[11];
  sub_10001A248(v126, (uint64_t)v10, &qword_1000D4810);
  uint64_t v127 = type metadata accessor for HeadphoneAssets(0);
  int v128 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v127 - 8) + 48))(v10, 1, v127);
  sub_10001A2AC((uint64_t)v10, &qword_1000D4810);
  if (v128 == 1)
  {
    sub_100097418(a1, (uint64_t)v8);
    sub_10007A5A4((uint64_t)v8, v126, &qword_1000D4810);
  }
  uint64_t v129 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  uint64_t v130 = type metadata accessor for HeadphoneModel();
  sub_100025D9C(*(_DWORD *)(v129 + *(int *)(v130 + 124)), (uint64_t)v133);
  uint64_t result = sub_10007A5A4((uint64_t)v133, a2 + v125[14], &qword_1000D4E60);
  *(void *)(a2 + v125[20]) = *(unsigned int *)(v129 + *(int *)(v130 + 124));
  return result;
}

void sub_100090A48(char a1)
{
  uint64_t v2 = v1;
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100008278(v4, (uint64_t)qword_1000D69F0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Device did finish connecting", v7, 2u);
    swift_slowDealloc();
  }

  if (a1) {
    char v8 = 2;
  }
  else {
    char v8 = 4;
  }
  *(unsigned char *)(v2 + 80) = v8;
  sub_100089E74();
  if ((a1 & 1) == 0)
  {
    if (!swift_unknownObjectWeakLoadStrong()) {
      return;
    }
    sub_10003D610();
    goto LABEL_14;
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_temporarilyPair) == 1)
  {
    if (!swift_unknownObjectWeakLoadStrong()) {
      return;
    }
    sub_10003E440();
LABEL_14:
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v9 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if (*(unsigned char *)(v9 + *(int *)(type metadata accessor for HeadphoneModel() + 160)) == 1)
  {
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "User has already seen tutorials for this product, skipping cards", v12, 2u);
      swift_slowDealloc();
    }

    sub_10008ADE4(1);
  }
  else
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v14 = Strong + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
      uint64_t v15 = swift_unknownObjectWeakLoadStrong();
      uint64_t v16 = *(void *)(v14 + 8);
      swift_unknownObjectRelease();
      if (v15)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v16 + 56))(ObjectType, v16);
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_100090CE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_hasAutoDismissed;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_hasAutoDismissed)) {
    return;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = Strong + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
    uint64_t v8 = swift_unknownObjectWeakLoadStrong();
    uint64_t v9 = *(void *)(v7 + 8);
    swift_unknownObjectRelease();
    if (v8)
    {
      uint64_t ObjectType = swift_getObjectType();
      int v11 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v9 + 32))(ObjectType, v9);
      swift_unknownObjectRelease();
      if (v11 == 15) {
        return;
      }
    }
  }
  uint64_t v12 = swift_unknownObjectWeakLoadStrong();
  if (v12)
  {
    uint64_t v13 = v12 + OBJC_IVAR____TtC20HeadphoneProxService15HeadphoneRouter_currentView;
    uint64_t v14 = swift_unknownObjectWeakLoadStrong();
    uint64_t v15 = *(void *)(v13 + 8);
    swift_unknownObjectRelease();
    if (v14)
    {
      uint64_t v16 = swift_getObjectType();
      int v17 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v15 + 32))(v16, v15);
      swift_unknownObjectRelease();
      if (v17 == 17) {
        return;
      }
    }
  }
  uint64_t v18 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  char v19 = *(unsigned char *)(v18 + 120);
  sub_10009D10C(v18, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  id v20 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:*(unsigned int *)&v4[v2[31]]];
  if (v20)
  {
    unsigned __int8 v21 = v20;
    unsigned __int8 v22 = [v20 hasLid];
  }
  else
  {
    unsigned __int8 v22 = 0;
  }
  sub_10009D538((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  if (*(unsigned char *)(v18 + v2[22]) != 1)
  {
    if (*(_DWORD *)(v18 + v2[28]) & 0x400 | (0x1181u >> v19) & 1) {
      char v27 = 1;
    }
    else {
      char v27 = v22;
    }
    if ((v27 & 1) != 0 || *(unsigned char *)(v18 + v2[30])) {
      return;
    }
    if (qword_1000D4480 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_100008278(v28, (uint64_t)qword_1000D69F0);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v29, v30)) {
      goto LABEL_34;
    }
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    uint64_t v32 = "Dismissing because device does not want status";
    goto LABEL_33;
  }
  if (*(unsigned char *)(v18 + v2[41]) & 1) == 0 && ((0x1181u >> v19))
  {
    if (qword_1000D4480 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100008278(v23, (uint64_t)qword_1000D69F0);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Skipping auto dismiss while waiting for genuine check", v26, 2u);
      swift_slowDealloc();
    }

    return;
  }
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v33 = type metadata accessor for Logger();
  sub_100008278(v33, (uint64_t)qword_1000D69F0);
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v31 = 0;
    uint64_t v32 = "Auto dismissing on lid close";
LABEL_33:
    _os_log_impl((void *)&_mh_execute_header, v29, v30, v32, v31, 2u);
    swift_slowDealloc();
  }
LABEL_34:

  *(unsigned char *)(v1 + v5) = 1;
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_10003B97C();
    swift_unknownObjectRelease();
  }
}

void sub_100091178()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  uint64_t v2 = v1 + *(int *)(type metadata accessor for HeadphoneModel() + 168);
  int v3 = *(unsigned __int8 *)(v2 + 8);
  if (v3 != 255)
  {
    uint64_t v4 = *(void **)v2;
    if (v3)
    {
      sub_100008E18((uint64_t *)&unk_1000D50A0);
      swift_willThrowTypedImpl();
    }
    else if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10003DA88(v4);
      swift_unknownObjectRelease();
      sub_10005FDBC(v4, v3);
    }
  }
}

uint64_t sub_10009123C(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      uint64_t v2 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      if (*(unsigned char *)(v2 + 120) == 1)
      {
        if (qword_1000D4480 != -1) {
          swift_once();
        }
        uint64_t v3 = type metadata accessor for Logger();
        sub_100008278(v3, (uint64_t)qword_1000D69F0);
        uint64_t v4 = Logger.logObject.getter();
        os_log_type_t v5 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v4, v5))
        {
          os_log_type_t v6 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v6 = 0;
          _os_log_impl((void *)&_mh_execute_header, v4, v5, "End Call upsell finished", v6, 2u);
          swift_slowDealloc();

          uint64_t v7 = 0;
          goto LABEL_20;
        }
        goto LABEL_30;
      }
      return 1;
    case 1:
      return 11;
    case 2:
      return 3;
    case 3:
      uint64_t v9 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      if (*(unsigned char *)(v9 + 120) != 9) {
        return 9;
      }
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_100008278(v10, (uint64_t)qword_1000D69F0);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v4, v11)) {
        goto LABEL_30;
      }
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v11, "Announce notifications upsell finished", v12, 2u);
      swift_slowDealloc();

      uint64_t v7 = 3;
      goto LABEL_20;
    case 4:
      uint64_t v13 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      if (*(unsigned char *)(v13 + 120) != 10) {
        return 7;
      }
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_100008278(v14, (uint64_t)qword_1000D69F0);
      uint64_t v4 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v4, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v4, v15, "Spatial audio profile upsell finished", v16, 2u);
        swift_slowDealloc();

        uint64_t v7 = 4;
LABEL_20:
        sub_1000933B4((id)v7);
      }
      else
      {
LABEL_30:
      }
      return 13;
    case 5:
      return 6;
    case 6:
      return 2;
    case 7:
      return 5;
    case 8:
      return 9;
    case 9:
      return 12;
    case 10:
      uint64_t v17 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      uint64_t v18 = v17 + *(int *)(type metadata accessor for HeadphoneModel() + 168);
      int v19 = *(unsigned __int8 *)(v18 + 8);
      if (v19 == 255) {
        return 13;
      }
      uint64_t v8 = *(void **)v18;
      if (v19)
      {
        sub_100008E18((uint64_t *)&unk_1000D50A0);
        swift_willThrowTypedImpl();
        return 13;
      }
      else
      {
        id v20 = v8;
      }
      return (uint64_t)v8;
    case 11:
      return 4;
    case 12:
      return 10;
    default:
      return 13;
  }
}

uint64_t sub_10009165C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for HeadphoneModel();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v124 - v8;
  LOBYTE(v10) = 0;
  switch(a1)
  {
    case 0:
      id v11 = objc_allocWithZone((Class)NSUserDefaults);
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [v11 initWithSuiteName:v12];

      if (!v13) {
        goto LABEL_85;
      }
      NSString v14 = String._bridgeToObjectiveC()();
      unsigned int v15 = [v13 BOOLForKey:v14];

      if (v15)
      {
        if (qword_1000D4480 != -1) {
          swift_once();
        }
        uint64_t v16 = type metadata accessor for Logger();
        sub_100008278(v16, (uint64_t)qword_1000D69F0);
        uint64_t v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v17, v18))
        {

          goto LABEL_107;
        }
        int v19 = (uint8_t *)swift_slowAlloc();
        v130[0] = swift_slowAlloc();
        *(_DWORD *)int v19 = 136315138;
        unint64_t v20 = sub_100089C24(0);
        v129[0] = sub_10005D8C8(v20, v21, v130);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "Should show %s? overridingEndCall prox", v19, 0xCu);
        LOBYTE(v10) = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

LABEL_85:
        swift_beginAccess();
        uint64_t v105 = *(void *)(v2 + 40);
        if (v105)
        {
          sub_10000C80C((void *)(v2 + 16), v105);
          unsigned int v106 = sub_10005356C();
          uint64_t v107 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
          swift_beginAccess();
          id v108 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:*(unsigned int *)(v107 + v4[31])];
          if (v108)
          {
            id v109 = v108;
            unsigned int v110 = [v108 supportsEndCallProx];
          }
          else
          {
            unsigned int v110 = 0;
          }
          if (qword_1000D4480 != -1) {
            swift_once();
          }
          uint64_t v115 = type metadata accessor for Logger();
          sub_100008278(v115, (uint64_t)qword_1000D69F0);
          id v116 = Logger.logObject.getter();
          os_log_type_t v117 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v116, v117))
          {
            uint64_t v118 = swift_slowAlloc();
            v128[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v118 = 136315906;
            unint64_t v119 = sub_100089C24(0);
            uint64_t v127 = sub_10005D8C8(v119, v120, v128);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v118 + 12) = 2080;
            LOBYTE(v10) = v110 & v106;
            if ((v110 & v106) != 0) {
              uint64_t v121 = 5457241;
            }
            else {
              uint64_t v121 = 20302;
            }
            if ((v110 & v106) != 0) {
              unint64_t v122 = 0xE300000000000000;
            }
            else {
              unint64_t v122 = 0xE200000000000000;
            }
            uint64_t v127 = sub_10005D8C8(v121, v122, v128);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(_WORD *)(v118 + 22) = 1024;
            LODWORD(v127) = v110;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v118 + 28) = 1024;
            LODWORD(v127) = v106 & 1;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v116, v117, "Should show %s? %s \n supportsEndCallProx:%{BOOL}d, endCallStatus:%{BOOL}d ", (uint8_t *)v118, 0x22u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            LOBYTE(v10) = v110 & v106;
          }
        }
        else
        {
          if (qword_1000D4480 != -1) {
            swift_once();
          }
          uint64_t v111 = type metadata accessor for Logger();
          sub_100008278(v111, (uint64_t)qword_1000D69F0);
          unint64_t v112 = Logger.logObject.getter();
          os_log_type_t v113 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v112, v113))
          {
            uint64_t v114 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v114 = 0;
            _os_log_impl((void *)&_mh_execute_header, v112, v113, "Should show endCall status is nil", v114, 2u);
            swift_slowDealloc();

            uint64_t v101 = 0;
            goto LABEL_93;
          }

          LOBYTE(v10) = 0;
        }
      }
      return v10 & 1;
    case 1:
      LOBYTE(v127) = 0;
      uint64_t v25 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      int v26 = *(_DWORD *)(v25 + v4[31]);
      if (v26 != 8217 && v26 != 8222)
      {
        uint64_t v28 = self;
        id v29 = [v28 b688];
        unsigned int v30 = [v29 productID];

        if (v26 != v30)
        {
          int v31 = *(_DWORD *)(v25 + v4[31]);
          id v32 = [v28 b487];
          unsigned int v33 = [v32 productID];

          if (v31 != v33)
          {
            if (qword_1000D4468 != -1) {
              swift_once();
            }
            if ((sub_10007CD60(*(unsigned int *)(v25 + v4[31]), (void *)qword_1000D9290) & 1) == 0) {
              LOBYTE(v127) = 1;
            }
          }
        }
      }
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      sub_100008278(v34, (uint64_t)qword_1000D69F0);
      int v35 = v127;
      uint64_t v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = swift_slowAlloc();
        v129[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 136315394;
        unint64_t v39 = sub_100089C24(1);
        v128[0] = sub_10005D8C8(v39, v40, v129);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v38 + 12) = 1024;
        LODWORD(v128[0]) = v35;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "Should show %s? %{BOOL}d", (uint8_t *)v38, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      swift_beginAccess();
      LOBYTE(v10) = v127;
      return v10 & 1;
    case 2:
      uint64_t v41 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      int v42 = *(unsigned __int8 *)(v41 + v4[25]);
      uint64_t v43 = (unsigned __int8 *)(v41 + v4[23]);
      int v44 = v43[1];
      int v45 = v43[2];
      int v46 = v43[3];
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v47 = type metadata accessor for Logger();
      sub_100008278(v47, (uint64_t)qword_1000D69F0);
      uint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        uint64_t v51 = swift_slowAlloc();
        int v126 = v42;
        v129[0] = v51;
        *(_DWORD *)uint64_t v50 = 136316162;
        unint64_t v52 = sub_100089C24(2);
        v128[0] = sub_10005D8C8(v52, v53, v129);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v50 + 12) = 1024;
        LODWORD(v128[0]) = v126 ^ 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v50 + 18) = 1024;
        LODWORD(v128[0]) = v44 ^ 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v50 + 24) = 1024;
        LODWORD(v128[0]) = v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v50 + 30) = 1024;
        LODWORD(v128[0]) = v46;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "Should show %s? not temporarily paired = %{BOOL}d, HS not enabled = %{BOOL}d, locale supported = %{BOOL}d, accessory supported = %{BOOL}d", (uint8_t *)v50, 0x24u);
        swift_arrayDestroy();
        LOBYTE(v42) = v126;
        swift_slowDealloc();
        swift_slowDealloc();
      }

      LOBYTE(v10) = v45 & ~(v42 | v44) & v46;
      return v10 & 1;
    case 3:
      uint64_t v54 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      LODWORD(v55) = *(unsigned __int8 *)(v54 + v4[25]);
      int v56 = *(unsigned __int8 *)(v54 + v4[32]);
      int v10 = *(unsigned __int8 *)(v54 + v4[37]);
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v57 = type metadata accessor for Logger();
      sub_100008278(v57, (uint64_t)qword_1000D69F0);
      uint64_t v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        int v126 = v55;
        uint64_t v55 = v60;
        uint64_t v125 = swift_slowAlloc();
        v129[0] = v125;
        *(_DWORD *)uint64_t v55 = 136315906;
        unint64_t v61 = sub_100089C24(3);
        v128[0] = sub_10005D8C8(v61, v62, v129);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v55 + 12) = 1024;
        LODWORD(v128[0]) = v126 ^ 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v55 + 18) = 1024;
        LODWORD(v128[0]) = v56;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v55 + 24) = 1024;
        LODWORD(v128[0]) = v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "Should show %s? not temporarily paired = %{BOOL}d, has software volume = %{BOOL}d, needs announce = %{BOOL}d", (uint8_t *)v55, 0x1Eu);
        swift_arrayDestroy();
        swift_slowDealloc();
        LOBYTE(v55) = v126;
        swift_slowDealloc();
      }

      if ((v55 & 1) != 0 || !*(unsigned char *)(v54 + v4[30]) && (v56 & 1) == 0) {
        goto LABEL_52;
      }
      return v10 & 1;
    case 4:
      uint64_t v63 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      int v71 = *(unsigned __int8 *)(v63 + v4[25]);
      uint64_t v72 = self;
      swift_bridgeObjectRetain();
      NSString v73 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unsigned int v74 = [v72 isProxCardEnrollmentSupportedForDevice:v73];

      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v75 = type metadata accessor for Logger();
      sub_100008278(v75, (uint64_t)qword_1000D69F0);
      uint64_t v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v78 = swift_slowAlloc();
        v129[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v78 = 136315650;
        unint64_t v79 = sub_100089C24(4);
        v128[0] = sub_10005D8C8(v79, v80, v129);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v78 + 12) = 1024;
        LODWORD(v128[0]) = v71 ^ 1;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v78 + 18) = 1024;
        LODWORD(v128[0]) = v74;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "Should show %s? not temporarily paired = %{BOOL}d, needs spatial profile setup = %{BOOL}d", (uint8_t *)v78, 0x18u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      LOBYTE(v10) = (v71 ^ 1) & v74;
      return v10 & 1;
    case 5:
      id v64 = objc_allocWithZone((Class)LSApplicationRecord);
      id v81 = sub_10009C434(0xD000000000000010, 0x80000001000A6050, 0);
      uint64_t v82 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      sub_10009D10C(v82, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
      id v83 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:*(unsigned int *)&v9[v4[31]]];
      if (v83)
      {
        unsigned __int8 v84 = v83;
        unsigned int v85 = [v83 supportsFindMyNetwork];

        sub_10009D538((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
        if (!v81 && v85)
        {
          if (qword_1000D4480 != -1) {
            swift_once();
          }
          uint64_t v86 = type metadata accessor for Logger();
          sub_100008278(v86, (uint64_t)qword_1000D69F0);
          uint64_t v87 = Logger.logObject.getter();
          os_log_type_t v88 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v87, v88))
          {
            long long v89 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)long long v89 = 0;
            _os_log_impl((void *)&_mh_execute_header, v87, v88, "FindMy not installed and device supports Find My, will show Install Find My view", v89, 2u);
            swift_slowDealloc();

            sub_1000933B4((id)5);
            goto LABEL_107;
          }
          goto LABEL_88;
        }
      }
      else
      {
        sub_10009D538((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
      }
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v97 = type metadata accessor for Logger();
      sub_100008278(v97, (uint64_t)qword_1000D69F0);
      uint64_t v98 = Logger.logObject.getter();
      os_log_type_t v99 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v98, v99))
      {
        uint64_t v100 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v100 = 0;
        _os_log_impl((void *)&_mh_execute_header, v98, v99, "FindMy is installed, won't show Install Find My view", v100, 2u);
        swift_slowDealloc();

        uint64_t v101 = 5;
        goto LABEL_93;
      }
      goto LABEL_83;
    case 6:
      id v65 = objc_allocWithZone((Class)LSApplicationRecord);
      id v81 = sub_10009C434(0xD000000000000010, 0x80000001000A6050, 0);
      uint64_t v90 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      sub_10009D10C(v90, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
      id v91 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:*(unsigned int *)&v7[v4[31]]];
      if (v91)
      {
        uint64_t v92 = v91;
        unsigned int v93 = [v91 supportsFindMyNetwork];

        sub_10009D538((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
        if (!v81 && v93)
        {
          if (qword_1000D4480 != -1) {
            swift_once();
          }
          uint64_t v94 = type metadata accessor for Logger();
          sub_100008278(v94, (uint64_t)qword_1000D69F0);
          uint64_t v87 = Logger.logObject.getter();
          os_log_type_t v95 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v87, v95))
          {
            uint64_t v96 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v96 = 0;
            _os_log_impl((void *)&_mh_execute_header, v87, v95, "FindMy not installed and device supports Find My, will show AirPods Linking view", v96, 2u);
            swift_slowDealloc();

            sub_1000933B4((id)6);
          }
          else
          {
LABEL_88:
          }
          goto LABEL_107;
        }
      }
      else
      {
        sub_10009D538((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
      }
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v102 = type metadata accessor for Logger();
      sub_100008278(v102, (uint64_t)qword_1000D69F0);
      uint64_t v98 = Logger.logObject.getter();
      os_log_type_t v103 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v98, v103))
      {
        uint64_t v104 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v104 = 0;
        _os_log_impl((void *)&_mh_execute_header, v98, v103, "FindMy is installed, won't show AirPods Linking view", v104, 2u);
        swift_slowDealloc();

        uint64_t v101 = 6;
LABEL_93:
        sub_1000933B4((id)v101);
        LOBYTE(v10) = 0;
      }
      else
      {
LABEL_83:

        LOBYTE(v10) = 0;
      }
      break;
    case 7:
      swift_beginAccess();
      uint64_t v66 = *(void *)(v2 + 40);
      if (!v66) {
        goto LABEL_52;
      }
      sub_10000C80C((void *)(v2 + 16), v66);
      LOBYTE(v10) = sub_100053F0C();
      return v10 & 1;
    case 8:
      swift_beginAccess();
      LOBYTE(v10) = 0;
      return v10 & 1;
    case 9:
      swift_beginAccess();
      uint64_t v67 = *(void *)(v2 + 40);
      if (!v67) {
        goto LABEL_52;
      }
      sub_10000C80C((void *)(v2 + 16), v67);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_retain();
      char v68 = dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeadGesturesCard(deviceAddress:)();
      goto LABEL_51;
    case 10:
      goto LABEL_107;
    case 11:
      swift_beginAccess();
      uint64_t v69 = *(void *)(v2 + 40);
      if (!v69) {
        goto LABEL_52;
      }
      sub_10000C80C((void *)(v2 + 16), v69);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_retain();
      char v68 = dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeartRateMonitor(deviceAddress:)();
      goto LABEL_51;
    case 12:
      swift_beginAccess();
      uint64_t v70 = *(void *)(v2 + 40);
      if (!v70) {
        goto LABEL_52;
      }
      sub_10000C80C((void *)(v2 + 16), v70);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_retain();
      char v68 = dispatch thunk of HeadphoneProxFeatureManager.shouldShowYodelCard(deviceAddress:)();
LABEL_51:
      LOBYTE(v10) = v68;
      swift_release();
      swift_bridgeObjectRelease();
      return v10 & 1;
    case 13:
      return v10 & 1;
    default:
      uint64_t v22 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
      swift_beginAccess();
      uint64_t v23 = v22 + v4[42];
      int v24 = *(unsigned __int8 *)(v23 + 8);
      if (v24 == 255)
      {
LABEL_52:
        LOBYTE(v10) = 0;
      }
      else if (v24)
      {
        v129[0] = *(void *)v23;
        sub_100008E18((uint64_t *)&unk_1000D50A0);
        swift_willThrowTypedImpl();
        LOBYTE(v10) = 0;
      }
      else
      {
LABEL_107:
        LOBYTE(v10) = 1;
      }
      break;
  }
  return v10 & 1;
}

uint64_t sub_100092CFC()
{
  sub_10001A2AC(v0 + 16, &qword_1000D4798);
  sub_100008F00(v0 + 56);
  swift_release();
  sub_10009D538(v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  sub_1000933B4(*(id *)(v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_postPairStep));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_spatialProfileEnrollmentViewController));

  swift_release();
  return v0;
}

uint64_t sub_100092D9C()
{
  sub_100092CFC();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_100092DF4()
{
  return type metadata accessor for HeadphonePresenter();
}

uint64_t type metadata accessor for HeadphonePresenter()
{
  uint64_t result = qword_1000D6A78;
  if (!qword_1000D6A78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100092E48()
{
  uint64_t result = type metadata accessor for HeadphoneModel();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for HeadphonePresenter.PostPairStep(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for HeadphonePresenter.PostPairStep(void **a1)
{
  unint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for HeadphonePresenter.PostPairStep(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void *initializeWithTake for HeadphonePresenter.PostPairStep(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void **assignWithTake for HeadphonePresenter.PostPairStep(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for HeadphonePresenter.PostPairStep(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF2 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483635);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 12;
  if (v4 >= 0xE) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for HeadphonePresenter.PostPairStep(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF3)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483635;
    if (a3 >= 0x7FFFFFF3) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF3) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 12;
    }
  }
  return result;
}

void *sub_10009313C(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePresenter.PostPairStep()
{
  return &type metadata for HeadphonePresenter.PostPairStep;
}

uint64_t getEnumTagSinglePayload for HeadphonePresenter.ConnectionState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HeadphonePresenter.ConnectionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000932C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePresenter.ConnectionState()
{
  return &type metadata for HeadphonePresenter.ConnectionState;
}

unint64_t sub_100093304()
{
  unint64_t result = qword_1000D6B68;
  if (!qword_1000D6B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B68);
  }
  return result;
}

uint64_t sub_100093358()
{
  return sub_100017E30(&qword_1000D6B70, &qword_1000D6B78);
}

id sub_100093394(id result)
{
  if (result != (id)13) {
    return sub_1000933A4(result);
  }
  return result;
}

id sub_1000933A4(id result)
{
  if ((unint64_t)result >= 0xD) {
    return result;
  }
  return result;
}

void sub_1000933B4(id a1)
{
  if (a1 != (id)13) {
    sub_1000933C4(a1);
  }
}

void sub_1000933C4(id a1)
{
  if ((unint64_t)a1 >= 0xD) {
}
  }

const char *sub_1000933D4()
{
  return "AppleAccount";
}

const char *sub_1000933E8()
{
  return "AABranding";
}

uint64_t sub_1000933FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  unsigned int v6 = v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 22;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0xE000000000000000;
  a1[12] = 0;
  BOOL v7 = (int *)type metadata accessor for HeadphoneViewModel(0);
  a1[8] = 0;
  a1[9] = 0;
  int v8 = (char *)a1 + v7[11];
  uint64_t v9 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  int v10 = (char *)a1 + v7[12];
  *((void *)v10 + 4) = 0;
  *(_OWORD *)int v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_WORD *)v10 + 20) = -24576;
  id v11 = (_OWORD *)((char *)a1 + v7[13]);
  *id v11 = 0u;
  v11[1] = 0u;
  uint64_t v12 = (uint64_t)a1 + v7[14];
  sub_100026C34((uint64_t)v34);
  sub_10004BF88((uint64_t)v34, v12, &qword_1000D4E60);
  *((unsigned char *)a1 + v7[15]) = 0;
  *((unsigned char *)a1 + v7[16]) = 0;
  *(uint64_t *)((char *)a1 + v7[17]) = (uint64_t)&_swiftEmptyArrayStorage;
  *(uint64_t *)((char *)a1 + v7[18]) = (uint64_t)&_swiftEmptyArrayStorage;
  id v13 = (_OWORD *)((char *)a1 + v7[19]);
  v13[5] = 0u;
  void v13[6] = 0u;
  v13[3] = 0u;
  v13[4] = 0u;
  v13[1] = 0u;
  void v13[2] = 0u;
  _OWORD *v13 = 0u;
  *(uint64_t *)((char *)a1 + v7[20]) = 0;
  *(uint64_t *)((char *)a1 + v7[21]) = 0;
  *((unsigned char *)a1 + v7[22]) = 0;
  *a1 = sub_100027B70(0xDu);
  a1[1] = v14;
  a1[10] = sub_100027B70(0x10u);
  a1[11] = v15;
  uint64_t v16 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if (*(unsigned char *)(v16 + *(int *)(v4 + 100)) == 1)
  {
    sub_100008E18(&qword_1000D5DD0);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1000A19D0;
    sub_10009D10C(v16, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
    uint64_t v18 = sub_100044BF4(0x5F544355444F5250, 0xEC000000454D414ELL, (uint64_t)v6);
    uint64_t v20 = v19;
    sub_10009D538((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_10009D0A4();
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v20;
    uint64_t v21 = sub_100029D28(v17, 14);
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1[2] = v21;
    a1[3] = v23;
    uint64_t v24 = sub_100027B70(0x11u);
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    a1[4] = v24;
    a1[5] = v26;
    uint64_t v27 = sub_100027B70(0x12u);
    uint64_t v29 = v28;
    uint64_t result = swift_bridgeObjectRelease();
    a1[6] = v27;
    a1[7] = v29;
  }
  else
  {
    a1[2] = sub_100027B70(0xFu);
    a1[3] = v31;
    uint64_t result = sub_100027B70(4u);
    a1[4] = result;
    a1[5] = v32;
  }
  return result;
}

uint64_t sub_100093704@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  unsigned int v6 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v7 = a1 + v6[11];
  uint64_t v8 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = a1 + v6[12];
  *(void *)(v9 + 32) = 0;
  *(_OWORD *)uint64_t v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_WORD *)(v9 + 40) = -24576;
  int v10 = (_OWORD *)(a1 + v6[13]);
  *int v10 = 0u;
  v10[1] = 0u;
  uint64_t v11 = a1 + v6[14];
  sub_100026C34((uint64_t)v58);
  sub_10004BF88((uint64_t)v58, v11, &qword_1000D4E60);
  *(unsigned char *)(a1 + v6[15]) = 0;
  *(unsigned char *)(a1 + v6[16]) = 0;
  *(void *)(a1 + v6[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v6[18]) = &_swiftEmptyArrayStorage;
  uint64_t v12 = a1 + v6[19];
  *(_OWORD *)(v12 + 80) = 0u;
  *(_OWORD *)(v12 + 96) = 0u;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_OWORD *)uint64_t v12 = 0u;
  *(void *)(a1 + v6[20]) = 0;
  *(void *)(a1 + v6[21]) = 0;
  *(unsigned char *)(a1 + v6[22]) = 0;
  *(void *)a1 = sub_100027B70(0xDu);
  *(void *)(a1 + 8) = v13;
  sub_100008E18(&qword_1000D5DD0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1000A19D0;
  uint64_t v15 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  sub_10009D10C(v15, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  uint64_t v16 = sub_100044BF4(0x5F544355444F5250, 0xEC000000454D414ELL, (uint64_t)v5);
  uint64_t v18 = v17;
  sub_10009D538((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_10009D0A4();
  *(void *)(v14 + 32) = v16;
  *(void *)(v14 + 40) = v18;
  uint64_t v19 = sub_100029D28(v14, 14);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v19;
  *(void *)(a1 + 24) = v21;
  uint64_t v22 = sub_100027B70(1u);
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = v22;
  *(void *)(a1 + 56) = v24;
  uint64_t v25 = *(void *)v15;
  uint64_t v26 = *(void *)(v15 + 8);
  uint64_t v27 = *(void *)(v15 + 16);
  uint64_t v28 = *(void *)(v15 + 24);
  uint64_t v29 = *(void *)(v15 + 32);
  int v42 = *(void **)(v15 + 40);
  uint64_t v30 = *(void *)(v15 + 56);
  uint64_t v41 = *(void *)(v15 + 48);
  uint64_t v40 = v30;
  uint64_t v44 = *(void *)(v15 + 64);
  uint64_t v53 = *(void *)(v15 + 72);
  uint64_t v54 = *(void *)(v15 + 80);
  uint64_t v55 = *(void **)(v15 + 88);
  uint64_t v56 = *(void *)(v15 + 96);
  uint64_t v57 = *(void *)(v15 + 104);
  uint64_t v52 = *(void *)v12;
  uint64_t v51 = *(void *)(v12 + 8);
  uint64_t v50 = *(void *)(v12 + 16);
  uint64_t v49 = *(void *)(v12 + 24);
  uint64_t v48 = *(void *)(v12 + 32);
  uint64_t v47 = *(void **)(v12 + 40);
  uint64_t v46 = *(void *)(v12 + 48);
  uint64_t v45 = *(void *)(v12 + 56);
  long long v43 = *(_OWORD *)(v12 + 64);
  long long v39 = *(_OWORD *)(v12 + 80);
  sub_10007192C(v25, v26, v27, v28, v29, v42, v41, v30, v44, v53, v54, v55);
  sub_1000609C8(v52, v51, v50, v49, v48, v47, v46, v45, v43, *((uint64_t *)&v43 + 1), v39, *((void **)&v39 + 1));
  *(void *)uint64_t v12 = v25;
  *(void *)(v12 + 8) = v26;
  *(void *)(v12 + 16) = v27;
  *(void *)(v12 + 24) = v28;
  uint64_t v31 = v42;
  *(void *)(v12 + 32) = v29;
  *(void *)(v12 + 40) = v31;
  *(void *)(v12 + 48) = v41;
  *(void *)(v12 + 56) = v40;
  *(void *)(v12 + 64) = v44;
  *(void *)(v12 + 72) = v53;
  *(void *)(v12 + 80) = v54;
  *(void *)(v12 + 88) = v55;
  *(void *)(v12 + 96) = v56;
  *(void *)(v12 + 104) = v57;
  uint64_t v32 = sub_100027B70(0x10u);
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = v32;
  *(void *)(a1 + 88) = v34;
  uint64_t v35 = sub_100027B70(2 * (*(unsigned char *)(v15 + 120) == 9));
  uint64_t v37 = v36;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = v35;
  *(void *)(a1 + 40) = v37;
  return result;
}

uint64_t sub_100093BF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100008E18(&qword_1000D6B88);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (int *)type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v7);
  uint64_t v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  int v10 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v11 = a1 + v10[11];
  uint64_t v12 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = a1 + v10[12];
  *(void *)(v13 + 32) = 0;
  *(_OWORD *)uint64_t v13 = 0u;
  *(_OWORD *)(v13 + 16) = 0u;
  *(_WORD *)(v13 + 40) = -24576;
  uint64_t v14 = (_OWORD *)(a1 + v10[13]);
  *uint64_t v14 = 0u;
  v14[1] = 0u;
  uint64_t v15 = a1 + v10[14];
  sub_100026C34((uint64_t)v39);
  sub_10004BF88((uint64_t)v39, v15, &qword_1000D4E60);
  *(unsigned char *)(a1 + v10[15]) = 0;
  *(unsigned char *)(a1 + v10[16]) = 0;
  *(void *)(a1 + v10[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v10[18]) = &_swiftEmptyArrayStorage;
  uint64_t v16 = (_OWORD *)(a1 + v10[19]);
  v16[5] = 0u;
  v16[6] = 0u;
  v16[3] = 0u;
  void v16[4] = 0u;
  v16[1] = 0u;
  v16[2] = 0u;
  *uint64_t v16 = 0u;
  *(void *)(a1 + v10[20]) = 0;
  *(void *)(a1 + v10[21]) = 0;
  uint64_t v17 = v10[22];
  *(unsigned char *)(a1 + v17) = 0;
  uint64_t v18 = v2 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if (*(unsigned char *)(v18 + v7[19]) == 1)
  {
    sub_10009D10C(v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
    uint64_t v19 = sub_100044BF4(0x5F544355444F5250, 0xEC000000454D414ELL, (uint64_t)v9);
    uint64_t v21 = v20;
    sub_10009D538((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  }
  else
  {
    uint64_t v19 = sub_100027B70(0x21u);
    uint64_t v21 = v22;
  }
  swift_bridgeObjectRelease();
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v21;
  if (*(unsigned char *)(v18 + v7[26])) {
    char v23 = 10;
  }
  else {
    char v23 = 8;
  }
  if (*(unsigned char *)(v18 + v7[26])) {
    char v24 = 11;
  }
  else {
    char v24 = 9;
  }
  if (*(unsigned char *)(v18 + v7[27])) {
    unsigned __int8 v25 = v24;
  }
  else {
    unsigned __int8 v25 = v23;
  }
  uint64_t v26 = sub_100027B70(v25);
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = v26;
  *(void *)(a1 + 40) = v28;
  uint64_t v29 = sub_100027B70(3u);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = v29;
  *(void *)(a1 + 56) = v31;
  if (*(void *)(v18 + v7[34]))
  {
    swift_retain();
    dispatch thunk of HeadphonePairing2.Assets.personalizationAsset.getter();
    swift_release();
    uint64_t v32 = type metadata accessor for PersonalizationAssetManager.Asset();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v6, 1, v32) != 1)
    {
      uint64_t result = sub_10001A2AC((uint64_t)v6, &qword_1000D6B88);
      *(unsigned char *)(a1 + v17) = 1;
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v34 = type metadata accessor for PersonalizationAssetManager.Asset();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v6, 1, 1, v34);
  }
  uint64_t result = sub_10001A2AC((uint64_t)v6, &qword_1000D6B88);
LABEL_18:
  if (*(unsigned char *)(v2 + 80) == 1)
  {
    uint64_t v35 = sub_100027B70(0x28u);
    uint64_t v37 = v36;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a1 + 64) = v35;
    *(void *)(a1 + 72) = v37;
  }
  return result;
}

uint64_t sub_10009400C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  uint64_t v3 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v4 = a1 + v3[11];
  uint64_t v5 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a1 + v3[12];
  *(void *)(v6 + 32) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_WORD *)(v6 + 40) = -24576;
  uint64_t v7 = (_OWORD *)(a1 + v3[13]);
  *uint64_t v7 = 0u;
  v7[1] = 0u;
  uint64_t v8 = a1 + v3[14];
  sub_100026C34((uint64_t)v23);
  sub_10004BF88((uint64_t)v23, v8, &qword_1000D4E60);
  *(unsigned char *)(a1 + v3[15]) = 0;
  *(unsigned char *)(a1 + v3[16]) = 0;
  *(void *)(a1 + v3[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v3[18]) = &_swiftEmptyArrayStorage;
  uint64_t v9 = (_OWORD *)(a1 + v3[19]);
  v9[5] = 0u;
  void v9[6] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  *uint64_t v9 = 0u;
  *(void *)(a1 + v3[20]) = 0;
  *(void *)(a1 + v3[21]) = 0;
  *(unsigned char *)(a1 + v3[22]) = 0;
  *(void *)a1 = sub_100027B70(0x29u);
  *(void *)(a1 + 8) = v10;
  uint64_t v11 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  int v12 = *(_DWORD *)(v11 + *(int *)(type metadata accessor for HeadphoneModel() + 124));
  uint64_t v13 = self;
  id v14 = [v13 b465];
  LODWORD(v8) = [v14 productID];

  if (v8 == v12)
  {
LABEL_5:
    unsigned __int8 v17 = 43;
    goto LABEL_6;
  }
  id v15 = [v13 b463];
  unsigned int v16 = [v15 productID];

  if (v16 != v12)
  {
    id v18 = [v13 b498];
    unsigned int v19 = [v18 productID];

    if (v19 != v12)
    {
      unsigned __int8 v17 = 42;
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  unsigned __int8 v17 = 44;
LABEL_6:
  *(void *)(a1 + 16) = sub_100027B70(v17);
  *(void *)(a1 + 24) = v20;
  uint64_t result = sub_100027B70(3u);
  *(void *)(a1 + 48) = result;
  *(void *)(a1 + 56) = v22;
  return result;
}

uint64_t sub_10009426C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  uint64_t v3 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v4 = a1 + v3[11];
  uint64_t v5 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a1 + v3[12];
  *(void *)(v6 + 32) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_WORD *)(v6 + 40) = -24576;
  uint64_t v7 = (_OWORD *)(a1 + v3[13]);
  *uint64_t v7 = 0u;
  v7[1] = 0u;
  uint64_t v8 = a1 + v3[14];
  sub_100026C34((uint64_t)v33);
  sub_10004BF88((uint64_t)v33, v8, &qword_1000D4E60);
  *(unsigned char *)(a1 + v3[15]) = 0;
  *(unsigned char *)(a1 + v3[16]) = 0;
  *(void *)(a1 + v3[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v3[18]) = &_swiftEmptyArrayStorage;
  uint64_t v9 = (_OWORD *)(a1 + v3[19]);
  v9[5] = 0u;
  void v9[6] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  *uint64_t v9 = 0u;
  *(void *)(a1 + v3[20]) = 0;
  uint64_t v10 = v3[21];
  *(void *)(a1 + v10) = 0;
  *(unsigned char *)(a1 + v3[22]) = 0;
  *(void *)a1 = sub_100027B70(0x39u);
  *(void *)(a1 + 8) = v11;
  uint64_t v12 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  int v13 = *(_DWORD *)(v12 + *(int *)(type metadata accessor for HeadphoneModel() + 124));
  id v14 = self;
  id v15 = [v14 airPodsMax];
  unsigned int v16 = [v15 productID];

  if (v16 == v13
    || (id v17 = [v14 airPodsMax],
        unsigned int v18 = [v17 altProductID],
        v17,
        v18 == v13))
  {
    unsigned __int8 v19 = 59;
  }
  else
  {
    id v20 = [v14 b688];
    unsigned int v21 = [v20 productID];

    if (v21 != v13 && v13 != 8219 && v13 != 8217)
    {
      id v25 = [v14 powerBeatsPro];
      unsigned int v26 = [v25 productID];

      if (v26 == v13 || v13 == 8221)
      {
        unsigned __int8 v27 = 61;
      }
      else
      {
        id v29 = [v14 b494];
        unsigned int v30 = [v29 productID];

        if (v30 == v13)
        {
          unsigned __int8 v27 = 62;
        }
        else
        {
          id v31 = [v14 b465];
          unsigned int v32 = [v31 productID];

          if (v32 != v13)
          {
            unsigned __int8 v19 = 58;
            goto LABEL_8;
          }
          unsigned __int8 v27 = 63;
        }
      }
      *(void *)(a1 + 16) = sub_100027B70(v27);
      *(void *)(a1 + 24) = v28;
      *(void *)(a1 + v10) = sub_10009AAA8();
      goto LABEL_9;
    }
    unsigned __int8 v19 = 60;
  }
LABEL_8:
  *(void *)(a1 + 16) = sub_100027B70(v19);
  *(void *)(a1 + 24) = v22;
LABEL_9:
  uint64_t result = sub_100027B70(0x40u);
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v24;
  return result;
}

uint64_t sub_1000945BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v4 = a1 + v3[11];
  uint64_t v5 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = a1 + v3[12];
  *(void *)(v6 + 32) = 0;
  *(_OWORD *)uint64_t v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_WORD *)(v6 + 40) = -24576;
  uint64_t v7 = (_OWORD *)(a1 + v3[13]);
  *uint64_t v7 = 0u;
  v7[1] = 0u;
  uint64_t v8 = a1 + v3[14];
  sub_100026C34((uint64_t)v33);
  sub_10004BF88((uint64_t)v33, v8, &qword_1000D4E60);
  *(unsigned char *)(a1 + v3[15]) = 0;
  *(unsigned char *)(a1 + v3[16]) = 0;
  *(void *)(a1 + v3[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v3[18]) = &_swiftEmptyArrayStorage;
  uint64_t v9 = (_OWORD *)(a1 + v3[19]);
  v9[5] = 0u;
  void v9[6] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  *uint64_t v9 = 0u;
  *(void *)(a1 + v3[20]) = 0;
  *(void *)(a1 + v3[21]) = 0;
  *(unsigned char *)(a1 + v3[22]) = 0;
  *(void *)a1 = sub_100027B70(0x51u);
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = sub_100027B70(0x52u);
  *(void *)(a1 + 24) = v11;
  uint64_t v12 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  uint64_t v13 = type metadata accessor for HeadphoneModel();
  int v14 = *(_DWORD *)(v12 + *(int *)(v13 + 124));
  id v15 = self;
  id v16 = [v15 b768e];
  unsigned int v17 = [v16 productID];

  if (v14 == v17) {
    goto LABEL_5;
  }
  int v18 = *(_DWORD *)(v12 + *(int *)(v13 + 124));
  id v19 = [v15 b768m];
  unsigned int v20 = [v19 productID];

  if (v18 == v20) {
    goto LABEL_5;
  }
  int v21 = *(_DWORD *)(v12 + *(int *)(v13 + 124));
  id v22 = [v15 b768e];
  unsigned int v23 = [v22 altProductID];

  if (v21 == v23
    || (int v24 = *(_DWORD *)(v12 + *(int *)(v13 + 124)),
        id v25 = [v15 b768m],
        unsigned int v26 = [v25 altProductID],
        v25,
        v24 == v26))
  {
LABEL_5:
    uint64_t v27 = sub_100027B70(0x53u);
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 16) = v27;
    *(void *)(a1 + 24) = v29;
  }
  *(void *)(a1 + 32) = sub_100027B70(0x54u);
  *(void *)(a1 + 40) = v30;
  uint64_t result = sub_100027B70(0x44u);
  *(void *)(a1 + 48) = result;
  *(void *)(a1 + 56) = v32;
  return result;
}

uint64_t sub_100094888@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v177 = (char *)&v172 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v175 = *(void *)(v6 - 8);
  uint64_t v176 = v6;
  __chkstk_darwin(v6);
  long long v172 = (char *)&v172 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  uint64_t v8 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v9 = *(void (**)(void))(v4 + 56);
  uint64_t v173 = a1 + v8[11];
  long long v174 = v9;
  v9();
  uint64_t v10 = a1 + v8[12];
  *(void *)(v10 + 32) = 0;
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_WORD *)(v10 + 40) = -24576;
  uint64_t v11 = (_OWORD *)(a1 + v8[13]);
  *uint64_t v11 = 0u;
  v11[1] = 0u;
  uint64_t v12 = a1 + v8[14];
  sub_100026C34((uint64_t)v194);
  sub_10004BF88((uint64_t)v194, v12, &qword_1000D4E60);
  *(unsigned char *)(a1 + v8[15]) = 0;
  *(unsigned char *)(a1 + v8[16]) = 0;
  uint64_t v13 = v8[17];
  *(void *)(a1 + v13) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v8[18]) = &_swiftEmptyArrayStorage;
  int v14 = (_OWORD *)(a1 + v8[19]);
  v14[5] = 0u;
  v14[6] = 0u;
  uint64_t v14[3] = 0u;
  v14[4] = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  *int v14 = 0u;
  *(void *)(a1 + v8[20]) = 0;
  *(void *)(a1 + v8[21]) = 0;
  *(unsigned char *)(a1 + v8[22]) = 0;
  uint64_t v15 = sub_100027B70(0x1Bu);
  uint64_t v17 = v16;
  *(void *)(a1 + 16) = v15;
  *(void *)(a1 + 24) = v16;
  id v192 = (uint64_t *)a1;
  uint64_t v190 = v1;
  uint64_t v18 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  id v19 = (int *)type metadata accessor for HeadphoneModel();
  int v20 = *(_DWORD *)(v18 + v19[28]);
  int v21 = *(_DWORD *)(v18 + v19[31]);
  uint64_t v182 = v13;
  uint64_t v178 = v4 + 56;
  long long v179 = (int *)v3;
  uint64_t v189 = v17;
  if ((v21 - 8217) <= 7 && ((1 << (v21 - 25)) & 0xA5) != 0)
  {
    sub_100088F50(v21);
    LODWORD(v185) = 1;
    goto LABEL_4;
  }
  if (sub_100088F50(v21))
  {
    LODWORD(v185) = 0;
LABEL_4:
    int v22 = *(_DWORD *)(v18 + v19[31]);
    int v23 = *(_DWORD *)(v18 + v19[29]);
    id v191 = self;
    id v24 = [v191 b698];
    unsigned int v25 = [v24 productID];

    if (v22 == v25)
    {
      if (v22 != v23 && *(unsigned char *)(v18 + 146) != 3)
      {
LABEL_7:
        if (v185) {
          goto LABEL_18;
        }
        goto LABEL_14;
      }
    }
    else if (v22 != v23)
    {
      goto LABEL_7;
    }
    int v26 = *(_DWORD *)(v18 + v19[31]);
    id v27 = [v191 airPodsPro];
    unsigned int v28 = [v27 productID];

    if (v26 != v28 || *(unsigned char *)(v18 + 146) != 3)
    {
      int v29 = *(_DWORD *)(v18 + v19[31]);
      id v30 = [v191 b698];
      unsigned int v31 = [v30 productID];

      if (v29 != v31 || *(unsigned char *)(v18 + 146) != 2)
      {
LABEL_18:
        uint64_t v45 = v191;
        id v46 = [v191 b698];
        int v47 = [v46 productID];

        uint64_t v48 = (void *)sub_1000449B4(0x52554F595F544F4ELL, (void *)0xE900000000000053, v47);
        uint64_t v50 = v49;
        int v51 = *(unsigned __int8 *)(v18 + v19[16]);
        LODWORD(v184) = v20;
        long long v181 = v48;
        if (v51 == 1)
        {
          uint64_t v52 = (uint64_t)v48;
          uint64_t v53 = self;
          swift_bridgeObjectRetain();
          id v188 = [v53 systemRedColor];
          id v54 = [v45 b698];
          uint64_t v55 = v50;
          int v56 = [v54 productID];

          uint64_t v57 = sub_1000449B4(0xD00000000000001CLL, (void *)0x80000001000AB050, v56);
          uint64_t v59 = v58;
          swift_bridgeObjectRelease();
          LODWORD(v183) = 0;
          uint64_t v60 = v192;
          v192[2] = v57;
          v60[3] = v59;
          uint64_t v61 = v52;
          uint64_t v62 = v55;
          int v63 = 2;
          uint64_t v186 = v61;
          uint64_t v64 = v55;
LABEL_38:
          uint64_t v98 = *(void *)(v18 + 136);
          LODWORD(v189) = v63;
          if (v98 && (uint64_t v99 = v190, swift_beginAccess(), *(void *)(v99 + 40)))
          {
            swift_bridgeObjectRetain();
            uint64_t v100 = sub_10005F3E8();
            uint64_t v102 = v101;
            swift_bridgeObjectRelease();
            uint64_t v103 = v102;
            if (v102) {
              uint64_t v77 = v100;
            }
            else {
              uint64_t v77 = 0;
            }
          }
          else
          {
            uint64_t v77 = 0;
            uint64_t v103 = 0;
          }
          uint64_t v104 = *(void *)(v18 + v19[17] + 8);
          uint64_t v187 = v64;
          if (v104 && (uint64_t v105 = v190, swift_beginAccess(), *(void *)(v105 + 40)))
          {
            swift_bridgeObjectRetain();
            uint64_t v106 = sub_10005F3E8();
            uint64_t v108 = v107;
            swift_bridgeObjectRelease();
            if (v108) {
              uint64_t v109 = v106;
            }
            else {
              uint64_t v109 = 0;
            }
          }
          else
          {
            uint64_t v109 = 0;
            uint64_t v108 = 0;
          }
          uint64_t v79 = v103;
          if ((v184 & 0x80) == 0)
          {
            if (v103)
            {
              id v82 = 0;
              if (v108)
              {
LABEL_53:
                swift_bridgeObjectRelease();
                id v110 = 0;
                uint64_t v80 = v77;
                uint64_t v62 = v79;
                uint64_t v77 = v109;
                uint64_t v79 = v108;
LABEL_66:
                uint64_t v92 = v191;
                unint64_t v125 = 0xD000000000000030;
                int v93 = v185;
                if (v185) {
                  unint64_t v125 = 0xD000000000000012;
                }
                int v126 = (void *)0x80000001000AAFF0;
                if (v185) {
                  int v126 = (void *)0x80000001000AB030;
                }
                unint64_t v180 = v125;
                long long v181 = v126;
                if (v183)
                {
                  id v83 = v110;
                  goto LABEL_72;
                }
                id v42 = v82;
                uint64_t v39 = v186;
                uint64_t v183 = v79;
                uint64_t v184 = v77;
                uint64_t v38 = v62;
                uint64_t v41 = v187;
                uint64_t v190 = v80;
                int v91 = v189;
                sub_100012C04(v186, v187, v188, v189);
                id v43 = v110;
                goto LABEL_75;
              }
            }
            else
            {
              unint64_t v122 = self;
              swift_bridgeObjectRetain();
              id v82 = [v122 systemRedColor];
              uint64_t v77 = (uint64_t)v181;
              uint64_t v79 = v62;
              if (v108) {
                goto LABEL_53;
              }
            }
            id v110 = [self systemRedColor];
            uint64_t v123 = v62;
            uint64_t v80 = v77;
            uint64_t v62 = v79;
            uint64_t v77 = (uint64_t)v181;
            uint64_t v79 = v123;
            goto LABEL_66;
          }
          if (v103)
          {
            id v110 = 0;
            if (v108)
            {
LABEL_56:
              swift_bridgeObjectRelease();
              id v82 = 0;
              uint64_t v80 = v109;
              uint64_t v62 = v108;
              goto LABEL_66;
            }
          }
          else
          {
            uint64_t v124 = self;
            swift_bridgeObjectRetain();
            id v110 = [v124 systemRedColor];
            uint64_t v77 = (uint64_t)v181;
            uint64_t v79 = v62;
            if (v108) {
              goto LABEL_56;
            }
          }
          id v82 = [self systemRedColor];
          uint64_t v80 = (uint64_t)v181;
          goto LABEL_66;
        }
        uint64_t v62 = v49;
        id v65 = [v45 b698];
        int v66 = [v65 productID];

        uint64_t v67 = sub_1000449B4(0xD00000000000001CLL, (void *)0x80000001000AAFD0, v66);
        uint64_t v69 = v68;
        swift_bridgeObjectRelease();
        uint64_t v70 = v192;
        v192[2] = v67;
        v70[3] = v69;
        if (*(void *)(v18 + 136) && (uint64_t v71 = v190, swift_beginAccess(), *(void *)(v71 + 40)))
        {
          swift_bridgeObjectRetain();
          uint64_t v72 = sub_10005F3E8();
          uint64_t v64 = v73;
          swift_bridgeObjectRelease();
          if (v64)
          {
            uint64_t v186 = v72;
            id v188 = 0;
            LODWORD(v183) = 0;
            int v63 = 2;
            goto LABEL_38;
          }
          uint64_t v186 = 0;
        }
        else
        {
          uint64_t v186 = 0;
          uint64_t v64 = 0;
        }
        id v188 = 0;
        int v63 = 255;
        LODWORD(v183) = 1;
        goto LABEL_38;
      }
    }
LABEL_14:
    if (v22 != v23)
    {
      if ((v20 & 0x80) != 0
        && (int v74 = *(_DWORD *)(v18 + v19[31]),
            id v75 = [v191 airPodsPro],
            unsigned int v76 = [v75 productID],
            v75,
            v74 == v76))
      {
        uint64_t v77 = sub_100027B70(0x1Fu);
        uint64_t v79 = v78;
        uint64_t v80 = sub_100027B70(0x20u);
        uint64_t v62 = v81;
        uint64_t v186 = 0;
        uint64_t v187 = 0;
        id v188 = 0;
        id v82 = 0;
        id v83 = 0;
        unint64_t v84 = 0x80000001000AAED0;
        BOOL v85 = *(unsigned char *)(v18 + 146) == 3;
        uint64_t v86 = "AirPodsPro_case-open_leftBud-1_rightBud-2_case-2";
      }
      else
      {
        uint64_t v77 = sub_100027B70(0x20u);
        uint64_t v79 = v94;
        uint64_t v80 = sub_100027B70(0x1Fu);
        uint64_t v62 = v95;
        uint64_t v186 = 0;
        uint64_t v187 = 0;
        id v188 = 0;
        id v82 = 0;
        id v83 = 0;
        unint64_t v84 = 0x80000001000AAE30;
        BOOL v85 = *(unsigned char *)(v18 + 146) == 3;
        uint64_t v86 = "AirPodsPro_case-open_leftBud-2_rightBud-1_case-2";
      }
      unint64_t v96 = (unint64_t)(v86 - 32) | 0x8000000000000000;
      if (v85) {
        uint64_t v97 = (void *)v96;
      }
      else {
        uint64_t v97 = (void *)v84;
      }
      unint64_t v180 = 0xD000000000000030;
      long long v181 = v97;
      uint64_t v92 = v191;
      LOBYTE(v93) = v185;
LABEL_72:
      sub_100008E18(&qword_1000D5B28);
      uint64_t v117 = swift_allocObject();
      *(_OWORD *)(v117 + 16) = xmmword_1000A2760;
      *(void *)(v117 + 32) = v77;
      *(void *)(v117 + 40) = v79;
      *(void *)(v117 + 48) = v83;
      *(unsigned char *)(v117 + 56) = 0;
      *(void *)(v117 + 64) = v80;
      *(void *)(v117 + 72) = v62;
      *(void *)(v117 + 80) = v82;
      *(unsigned char *)(v117 + 88) = 1;
      LODWORD(v189) = 255;
      uint64_t v127 = v83;
      if (v93)
      {
LABEL_73:
        id v191 = v127;
        sub_100012C04(v77, v79, v127, 0);
        uint64_t v190 = v80;
        sub_100012C04(v80, v62, v82, 1u);
        id v128 = [v92 airPods];
        int v129 = [v128 productID];

        uint64_t v130 = 0xD000000000000016;
        id v131 = "MISMATCH_AIRPODS_TITLE";
LABEL_77:
        uint64_t v137 = sub_1000449B4(v130, (void *)((unint64_t)(v131 - 32) | 0x8000000000000000), v129);
        uint64_t v138 = v192;
        *id v192 = v137;
        v138[1] = v139;
        NSString v140 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v141 = [self imageNamed:v140];

        if (v141)
        {
          long long v142 = v172;
          URL.init(fileURLWithPath:)();
          uint64_t v184 = v77;
          uint64_t v185 = v62;
          uint64_t v143 = v175;
          long long v144 = *(void (**)(char *, char *, uint64_t))(v175 + 16);
          uint64_t v145 = (uint64_t)v177;
          uint64_t v183 = v79;
          uint64_t v146 = v176;
          v144(v177, v142, v176);
          long long v181 = v82;
          long long v147 = v179;
          v144((char *)(v145 + v179[5]), v142, v146);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 56))(v145 + v147[6], 1, 1, v146);
          uint64_t v148 = v145 + v147[7];
          uint64_t v149 = type metadata accessor for HeadphoneAssets.Feature(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v149 - 8) + 56))(v148, 1, 1, v149);
          uint64_t v150 = v147[8];
          *(void *)(v145 + v150) = &_swiftEmptyArrayStorage;
          *(void *)(v145 + v147[9]) = 0;
          long long v151 = (void *)(v145 + v147[10]);
          *long long v151 = 0;
          v151[1] = 0;
          sub_100008E18((uint64_t *)&unk_1000D5090);
          uint64_t v152 = swift_allocObject();
          *(_OWORD *)(v152 + 16) = xmmword_1000A33B0;
          *(void *)(v152 + 32) = v141;
          uint64_t v193 = v152;
          specialized Array._endMutation()();
          uint64_t v153 = v193;
          sub_100012C60(v184, v183, v191, 0);
          sub_100012C60(v190, v185, v181, 1u);
          sub_10009D0F8(v186, v187, v188, v189);
          (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v146);
          swift_bridgeObjectRelease();
          *(void *)(v145 + v150) = v153;
          uint64_t v154 = v173;
          sub_10001A2AC(v173, &qword_1000D4810);
          sub_10009D10C(v145, v154, type metadata accessor for HeadphoneAssets);
          ((void (*)(uint64_t, void, uint64_t, int *))v174)(v154, 0, 1, v147);
          sub_10009D538(v145, type metadata accessor for HeadphoneAssets);
        }
        else
        {
          sub_10009D0F8(v186, v187, v188, v189);
          sub_100012C60(v190, v62, v82, 1u);
          sub_100012C60(v77, v79, v191, 0);
        }
        uint64_t v13 = v182;
        goto LABEL_87;
      }
LABEL_76:
      id v191 = v127;
      sub_100012C04(v77, v79, v127, 0);
      uint64_t v190 = v80;
      sub_100012C04(v80, v62, v82, 1u);
      id v136 = [v92 b698];
      int v129 = [v136 productID];

      uint64_t v130 = 0xD000000000000014;
      id v131 = "MISMATCH_AIRPODS_PRO";
      goto LABEL_77;
    }
    int v32 = *(_DWORD *)(v18 + v19[31]);
    id v33 = [v191 airPodsPro];
    unsigned int v34 = [v33 productID];

    if (v32 == v34 && *(unsigned char *)(v18 + 146) == 3)
    {
      uint64_t v35 = sub_100027B70(0x1Fu);
      uint64_t v183 = v36;
      uint64_t v184 = v35;
      uint64_t v190 = sub_100027B70(0x1Fu);
      uint64_t v38 = v37;
      uint64_t v39 = sub_100027B70(0x20u);
      uint64_t v41 = v40;
      swift_bridgeObjectRetain();
      id v188 = 0;
      id v42 = 0;
      id v43 = 0;
      uint64_t v44 = "AirPodsPro_case-open_leftBud-1_rightBud-1_case-2";
    }
    else
    {
      uint64_t v87 = sub_100027B70(0x20u);
      uint64_t v183 = v88;
      uint64_t v184 = v87;
      uint64_t v190 = sub_100027B70(0x20u);
      uint64_t v38 = v89;
      uint64_t v39 = sub_100027B70(0x1Fu);
      uint64_t v41 = v90;
      swift_bridgeObjectRetain();
      id v188 = 0;
      id v42 = 0;
      id v43 = 0;
      uint64_t v44 = "AirPodsPro_case-open_leftBud-2_rightBud-2_case-1";
    }
    int v91 = 2;
    unint64_t v180 = 0xD000000000000030;
    long long v181 = (void *)((unint64_t)(v44 - 32) | 0x8000000000000000);
    uint64_t v92 = v191;
    int v93 = v185;
LABEL_75:
    sub_100008E18(&qword_1000D5B28);
    uint64_t v117 = swift_allocObject();
    *(_OWORD *)(v117 + 16) = xmmword_1000A3FB0;
    uint64_t v133 = v183;
    uint64_t v132 = v184;
    *(void *)(v117 + 32) = v184;
    *(void *)(v117 + 40) = v133;
    *(void *)(v117 + 48) = v43;
    *(unsigned char *)(v117 + 56) = 0;
    uint64_t v134 = v190;
    *(void *)(v117 + 64) = v190;
    *(void *)(v117 + 72) = v38;
    *(void *)(v117 + 80) = v42;
    *(unsigned char *)(v117 + 88) = 1;
    uint64_t v186 = v39;
    uint64_t v187 = v41;
    *(void *)(v117 + 96) = v39;
    *(void *)(v117 + 104) = v41;
    *(void *)(v117 + 112) = v188;
    LODWORD(v189) = v91;
    *(unsigned char *)(v117 + 120) = v91;
    uint64_t v135 = v38;
    uint64_t v79 = v133;
    uint64_t v77 = v132;
    id v82 = v42;
    uint64_t v127 = v43;
    uint64_t v62 = v135;
    uint64_t v80 = v134;
    if (v93) {
      goto LABEL_73;
    }
    goto LABEL_76;
  }
  if ((v20 & 0x80) != 0
    && (int v111 = *(_DWORD *)(v18 + v19[31]),
        id v112 = [self airPods],
        unsigned int v113 = [v112 productID],
        v112,
        v111 == v113))
  {
    uint64_t v114 = sub_100027B70(0x1Fu);
    uint64_t v116 = v115;
    uint64_t v117 = (uint64_t)sub_10004B70C(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
    unint64_t v119 = *(void *)(v117 + 16);
    unint64_t v118 = *(void *)(v117 + 24);
    if (v119 >= v118 >> 1) {
      uint64_t v117 = (uint64_t)sub_10004B70C((char *)(v118 > 1), v119 + 1, 1, (char *)v117);
    }
    *(void *)(v117 + 16) = v119 + 1;
    uint64_t v120 = v117 + 32 * v119;
    *(void *)(v120 + 32) = v114;
    *(void *)(v120 + 40) = v116;
    *(void *)(v120 + 48) = 0;
    *(unsigned char *)(v120 + 56) = 0;
    unsigned __int8 v121 = 32;
  }
  else
  {
    uint64_t v155 = sub_100027B70(0x20u);
    uint64_t v157 = v156;
    uint64_t v117 = (uint64_t)sub_10004B70C(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
    unint64_t v159 = *(void *)(v117 + 16);
    unint64_t v158 = *(void *)(v117 + 24);
    if (v159 >= v158 >> 1) {
      uint64_t v117 = (uint64_t)sub_10004B70C((char *)(v158 > 1), v159 + 1, 1, (char *)v117);
    }
    *(void *)(v117 + 16) = v159 + 1;
    uint64_t v160 = v117 + 32 * v159;
    *(void *)(v160 + 32) = v155;
    *(void *)(v160 + 40) = v157;
    *(void *)(v160 + 48) = 0;
    *(unsigned char *)(v160 + 56) = 0;
    unsigned __int8 v121 = 31;
  }
  uint64_t v161 = sub_100027B70(v121);
  uint64_t v163 = v162;
  unint64_t v165 = *(void *)(v117 + 16);
  unint64_t v164 = *(void *)(v117 + 24);
  if (v165 >= v164 >> 1) {
    uint64_t v117 = (uint64_t)sub_10004B70C((char *)(v164 > 1), v165 + 1, 1, (char *)v117);
  }
  *(void *)(v117 + 16) = v165 + 1;
  uint64_t v166 = v117 + 32 * v165;
  *(void *)(v166 + 32) = v161;
  *(void *)(v166 + 40) = v163;
  v166 += 32;
  *(void *)(v166 + 16) = 0;
  *(unsigned char *)(v166 + 24) = 1;
  uint64_t v167 = sub_100027B70(0x1Au);
  id v168 = v192;
  *id v192 = v167;
  v168[1] = v169;
LABEL_87:
  long long v170 = v192;
  uint64_t result = swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v170 + v13) = v117;
  return result;
}

uint64_t sub_100095950@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + 32);
  *(void *)(a1 + 48) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 48);
  *(void *)(a1 + 56) = 0xE000000000000000;
  uint64_t v5 = (void *)(a1 + 56);
  uint64_t v6 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v7 = a1 + v6[11];
  uint64_t v8 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = a1 + v6[12];
  *(void *)(v9 + 32) = 0;
  *(_OWORD *)uint64_t v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_WORD *)(v9 + 40) = -24576;
  uint64_t v10 = (_OWORD *)(a1 + v6[13]);
  *uint64_t v10 = 0u;
  v10[1] = 0u;
  uint64_t v11 = a1 + v6[14];
  sub_100026C34((uint64_t)v21);
  sub_10004BF88((uint64_t)v21, v11, &qword_1000D4E60);
  *(unsigned char *)(a1 + v6[15]) = 0;
  *(unsigned char *)(a1 + v6[16]) = 0;
  *(void *)(a1 + v6[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v6[18]) = &_swiftEmptyArrayStorage;
  uint64_t v12 = (_OWORD *)(a1 + v6[19]);
  v12[5] = 0u;
  v12[6] = 0u;
  uint64_t v12[3] = 0u;
  v12[4] = 0u;
  v12[1] = 0u;
  v12[2] = 0u;
  _OWORD *v12 = 0u;
  *(void *)(a1 + v6[20]) = 0;
  *(void *)(a1 + v6[21]) = 0;
  *(unsigned char *)(a1 + v6[22]) = 0;
  *(void *)a1 = sub_100027B70(0x5Cu);
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = sub_100027B70(0x5Du);
  *(void *)(a1 + 24) = v14;
  uint64_t v15 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  uint64_t v16 = (void *)(a1 + 40);
  if (*(unsigned char *)(v15 + 120))
  {
    *uint64_t v3 = sub_100027B70(0x61u);
    *uint64_t v16 = v17;
    unsigned __int8 v18 = 98;
    uint64_t v3 = v4;
    uint64_t v16 = v5;
  }
  else
  {
    unsigned __int8 v18 = 2;
  }
  uint64_t result = sub_100027B70(v18);
  *uint64_t v3 = result;
  *uint64_t v16 = v20;
  return result;
}

uint64_t sub_100095B24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  uint64_t v7 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v8 = a1 + v7[11];
  uint64_t v9 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = a1 + v7[12];
  *(void *)(v10 + 32) = 0;
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_WORD *)(v10 + 40) = -24576;
  uint64_t v11 = (_OWORD *)(a1 + v7[13]);
  *uint64_t v11 = 0u;
  v11[1] = 0u;
  uint64_t v12 = a1 + v7[14];
  sub_100026C34((uint64_t)v38);
  sub_10004BF88((uint64_t)v38, v12, &qword_1000D4E60);
  *(unsigned char *)(a1 + v7[15]) = 0;
  *(unsigned char *)(a1 + v7[16]) = 0;
  *(void *)(a1 + v7[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v7[18]) = &_swiftEmptyArrayStorage;
  uint64_t v13 = (_OWORD *)(a1 + v7[19]);
  v13[5] = 0u;
  void v13[6] = 0u;
  v13[3] = 0u;
  v13[4] = 0u;
  v13[1] = 0u;
  void v13[2] = 0u;
  _OWORD *v13 = 0u;
  *(void *)(a1 + v7[20]) = 0;
  *(void *)(a1 + v7[21]) = 0;
  *(unsigned char *)(a1 + v7[22]) = 0;
  uint64_t v14 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  sub_10009D10C(v14, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  uint64_t v15 = sub_100044BF4(0x52554F595F544F4ELL, 0xE800000000000000, (uint64_t)v6);
  uint64_t v17 = v16;
  sub_10009D538((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  swift_bridgeObjectRelease();
  *(void *)a1 = v15;
  *(void *)(a1 + 8) = v17;
  if (*(unsigned char *)(v14 + v4[28])) {
    char v18 = 10;
  }
  else {
    char v18 = 8;
  }
  if (*(unsigned char *)(v14 + v4[28])) {
    char v19 = 11;
  }
  else {
    char v19 = 9;
  }
  if (*(unsigned char *)(v14 + v4[29])) {
    unsigned __int8 v20 = v19;
  }
  else {
    unsigned __int8 v20 = v18;
  }
  uint64_t v21 = sub_100027B70(v20);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = v21;
  *(void *)(a1 + 56) = v23;
  sub_10009D10C(v14, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  uint64_t v24 = sub_100044860(0x52554F595F544F4ELL, 0xE800000000000000, (uint64_t)v6);
  uint64_t v26 = v25;
  sub_10009D538((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  uint64_t v36 = v24;
  uint64_t v37 = v26;
  swift_bridgeObjectRetain();
  v27._uint64_t countAndFlagsBits = 0x4F464E495FLL;
  v27._object = (void *)0xE500000000000000;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_100028B5C(v36);
  id v30 = v29;
  swift_bridgeObjectRelease();
  sub_10009D10C(v14, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  uint64_t v31 = sub_1000449B4(v28, v30, *(_DWORD *)&v6[v4[33]]);
  uint64_t v33 = v32;
  sub_10009D538((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v31;
  *(void *)(a1 + 24) = v33;
  return result;
}

uint64_t sub_100095E84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v33[-v7];
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  uint64_t v9 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v10 = a1 + v9[11];
  uint64_t v11 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = a1 + v9[12];
  *(void *)(v12 + 32) = 0;
  *(_OWORD *)uint64_t v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_WORD *)(v12 + 40) = -24576;
  uint64_t v13 = (_OWORD *)(a1 + v9[13]);
  _OWORD *v13 = 0u;
  v13[1] = 0u;
  uint64_t v14 = a1 + v9[14];
  sub_100026C34((uint64_t)v34);
  sub_10004BF88((uint64_t)v34, v14, &qword_1000D4E60);
  *(unsigned char *)(a1 + v9[15]) = 0;
  *(unsigned char *)(a1 + v9[16]) = 0;
  *(void *)(a1 + v9[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v9[18]) = &_swiftEmptyArrayStorage;
  uint64_t v15 = (_OWORD *)(a1 + v9[19]);
  void v15[5] = 0u;
  v15[6] = 0u;
  uint64_t v15[3] = 0u;
  v15[4] = 0u;
  v15[1] = 0u;
  void v15[2] = 0u;
  _OWORD *v15 = 0u;
  uint64_t v16 = v9[20];
  *(void *)(a1 + v9[21]) = 0;
  *(unsigned char *)(a1 + v9[22]) = 0;
  uint64_t v17 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  uint64_t v18 = *(unsigned int *)(v17 + *(int *)(v3 + 124));
  *(void *)(a1 + v16) = v18;
  unsigned int v19 = v18 - 8217;
  if (v19 > 7 || ((1 << v19) & 0xA5) == 0)
  {
    *(void *)a1 = sub_100027B70(6u);
    *(void *)(a1 + 8) = v26;
    sub_10009D10C(v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
    id v27 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:*(unsigned int *)&v8[*(int *)(v3 + 124)]];
    if (v27)
    {
      uint64_t v28 = v27;
      id v29 = [v27 buttonLocation];

      sub_10009D538((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
      if (!v29)
      {
        unsigned __int8 v21 = 49;
        goto LABEL_4;
      }
    }
    else
    {
      sub_10009D538((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
    }
    sub_10009D10C(v17, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
    id v30 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:*(unsigned int *)&v6[*(int *)(v3 + 124)]];
    if (v30)
    {
      uint64_t v31 = v30;
      unsigned __int8 v32 = [v30 isAirPods];

      sub_10009D538((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
      if (v32)
      {
        unsigned __int8 v21 = 47;
        goto LABEL_4;
      }
    }
    else
    {
      sub_10009D538((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
    }
    unsigned __int8 v21 = 46;
    goto LABEL_4;
  }
  *(void *)a1 = sub_100027B70(7u);
  *(void *)(a1 + 8) = v20;
  unsigned __int8 v21 = 48;
LABEL_4:
  uint64_t v22 = sub_100027B70(v21);
  uint64_t v24 = v23;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v22;
  *(void *)(a1 + 24) = v24;
  return result;
}

uint64_t sub_100096214@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v3);
  uint64_t v5 = v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  uint64_t v6 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v7 = a1 + v6[11];
  uint64_t v8 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = a1 + v6[12];
  *(void *)(v9 + 32) = 0;
  *(_OWORD *)uint64_t v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_WORD *)(v9 + 40) = -24576;
  uint64_t v10 = (_OWORD *)(a1 + v6[13]);
  *uint64_t v10 = 0u;
  v10[1] = 0u;
  uint64_t v11 = a1 + v6[14];
  sub_100026C34((uint64_t)v46);
  sub_10004BF88((uint64_t)v46, v11, &qword_1000D4E60);
  *(unsigned char *)(a1 + v6[15]) = 0;
  uint64_t v12 = v6[16];
  *(unsigned char *)(a1 + v12) = 0;
  *(void *)(a1 + v6[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v6[18]) = &_swiftEmptyArrayStorage;
  uint64_t v13 = (_OWORD *)(a1 + v6[19]);
  v13[5] = 0u;
  void v13[6] = 0u;
  v13[3] = 0u;
  v13[4] = 0u;
  v13[1] = 0u;
  void v13[2] = 0u;
  _OWORD *v13 = 0u;
  *(void *)(a1 + v6[20]) = 0;
  *(void *)(a1 + v6[21]) = 0;
  *(unsigned char *)(a1 + v6[22]) = 0;
  uint64_t v45 = v1;
  uint64_t v14 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  uint64_t v15 = v3;
  swift_beginAccess();
  sub_10009D10C(v14, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  uint64_t v16 = sub_100044BF4(0x5F544355444F5250, 0xEC000000454D414ELL, (uint64_t)v5);
  uint64_t v18 = v17;
  sub_10009D538((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  swift_bridgeObjectRelease();
  *(void *)a1 = v16;
  *(void *)(a1 + 8) = v18;
  LODWORD(v16) = *(unsigned __int8 *)(v14 + *(int *)(v15 + 100));
  sub_10009D10C(v14, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  if (v16 == 1)
  {
    uint64_t v19 = sub_100044860(0xD000000000000010, 0x80000001000AB090, (uint64_t)v5);
    unsigned __int8 v21 = v20;
    sub_10009D538((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
    uint64_t v22 = sub_100027B70(0x26u);
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = v22;
    *(void *)(a1 + 40) = v24;
    *(unsigned char *)(a1 + v12) = 1;
  }
  else
  {
    uint64_t v25 = sub_100044860(0xD000000000000010, 0x80000001000AB070, (uint64_t)v5);
    sub_10009D538((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
    uint64_t v19 = sub_100028B5C(v25);
    unsigned __int8 v21 = v26;
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_100027B70(0x23u);
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = v27;
    *(void *)(a1 + 40) = v29;
    uint64_t v30 = sub_100028B5C(0x5F5443454E4E4F43);
    unsigned __int8 v32 = v31;
    id v33 = [self mainBundle];
    v47._object = (void *)0xE000000000000000;
    v34._uint64_t countAndFlagsBits = v30;
    v34._object = v32;
    v35.value._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v35.value._object = (void *)0xEB00000000656C62;
    v36._uint64_t countAndFlagsBits = 0;
    v36._object = (void *)0xE000000000000000;
    v47._uint64_t countAndFlagsBits = 0;
    Swift::String v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v47);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    *(Swift::String *)(a1 + 48) = v37;
  }
  sub_10009D10C(v14, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  uint64_t v38 = sub_1000449B4(v19, v21, *(_DWORD *)&v5[*(int *)(v15 + 124)]);
  uint64_t v40 = v39;
  sub_10009D538((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v38;
  *(void *)(a1 + 24) = v40;
  if (*(unsigned char *)(v45 + 80) == 3)
  {
    uint64_t v42 = sub_100027B70(0x27u);
    uint64_t v44 = v43;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a1 + 64) = v42;
    *(void *)(a1 + 72) = v44;
  }
  return result;
}

uint64_t sub_1000966B4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  uint64_t v2 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v3 = a1 + v2[11];
  uint64_t v4 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = a1 + v2[12];
  *(void *)(v5 + 32) = 0;
  *(_OWORD *)uint64_t v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_WORD *)(v5 + 40) = -24576;
  uint64_t v6 = (_OWORD *)(a1 + v2[13]);
  *uint64_t v6 = 0u;
  v6[1] = 0u;
  uint64_t v7 = a1 + v2[14];
  sub_100026C34((uint64_t)v23);
  sub_10004BF88((uint64_t)v23, v7, &qword_1000D4E60);
  *(unsigned char *)(a1 + v2[15]) = 0;
  *(unsigned char *)(a1 + v2[16]) = 0;
  *(void *)(a1 + v2[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v2[18]) = &_swiftEmptyArrayStorage;
  uint64_t v8 = (_OWORD *)(a1 + v2[19]);
  v8[5] = 0u;
  void v8[6] = 0u;
  void v8[3] = 0u;
  v8[4] = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  _OWORD *v8 = 0u;
  *(void *)(a1 + v2[20]) = 0;
  *(void *)(a1 + v2[21]) = 0;
  *(unsigned char *)(a1 + v2[22]) = 0;
  v22[3] = &type metadata for HeadphonePresenter.AppleAccountFeatureFlags;
  v22[4] = sub_10009D174();
  char v9 = isFeatureEnabled(_:)();
  sub_100017BC4((uint64_t)v22);
  if (v9) {
    unsigned __int8 v10 = 104;
  }
  else {
    unsigned __int8 v10 = 102;
  }
  if (v9) {
    unsigned __int8 v11 = 105;
  }
  else {
    unsigned __int8 v11 = 103;
  }
  uint64_t v12 = sub_100027B70(v10);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v14;
  uint64_t v15 = sub_100027B70(v11);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v17;
  uint64_t v18 = sub_100027B70(0);
  uint64_t v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = v18;
  *(void *)(a1 + 40) = v20;
  return result;
}

_OWORD *sub_10009689C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100008E18(&qword_1000D5458);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  __chkstk_darwin(v6);
  uint64_t v61 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v8);
  unsigned __int8 v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0xE000000000000000;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0xE000000000000000;
  unsigned __int8 v11 = (int *)type metadata accessor for HeadphoneViewModel(0);
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  uint64_t v12 = a1 + v11[11];
  uint64_t v13 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = a1 + v11[12];
  *(void *)(v14 + 32) = 0;
  *(_OWORD *)uint64_t v14 = 0u;
  *(_OWORD *)(v14 + 16) = 0u;
  *(_WORD *)(v14 + 40) = -24576;
  uint64_t v15 = (_OWORD *)(a1 + v11[13]);
  _OWORD *v15 = 0u;
  v15[1] = 0u;
  uint64_t v16 = a1 + v11[14];
  sub_100026C34((uint64_t)v66);
  sub_10004BF88((uint64_t)v66, v16, &qword_1000D4E60);
  uint64_t v64 = v11[15];
  *(unsigned char *)(a1 + v64) = 0;
  *(unsigned char *)(a1 + v11[16]) = 0;
  *(void *)(a1 + v11[17]) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + v11[18]) = &_swiftEmptyArrayStorage;
  uint64_t v17 = (_OWORD *)(a1 + v11[19]);
  v17[5] = 0u;
  v17[6] = 0u;
  v17[3] = 0u;
  v17[4] = 0u;
  v17[1] = 0u;
  void v17[2] = 0u;
  *uint64_t v17 = 0u;
  *(void *)(a1 + v11[20]) = 0;
  *(void *)(a1 + v11[21]) = 0;
  *(unsigned char *)(a1 + v11[22]) = 0;
  uint64_t v18 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  uint64_t v19 = (uint64_t *)(v18 + v8[13]);
  uint64_t v21 = *v19;
  unint64_t v20 = v19[1];
  uint64_t v22 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v22 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (v22)
  {
    swift_bridgeObjectRetain();
  }
  else if (*(unsigned char *)(v18 + v8[19]) == 1)
  {
    sub_10009D10C(v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
    uint64_t v21 = sub_100044BF4(0x5F544355444F5250, 0xEC000000454D414ELL, (uint64_t)v10);
    unint64_t v20 = v23;
    sub_10009D538((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
  }
  else
  {
    uint64_t v21 = sub_100027B70(0x21u);
    unint64_t v20 = v24;
  }
  swift_bridgeObjectRelease();
  *(void *)a1 = v21;
  *(void *)(a1 + 8) = v20;
  if (*(unsigned char *)(v18 + 120) != 11)
  {
    char v25 = *(unsigned char *)(v18 + v8[42] + 8);
    if (v25 == -1) {
      unsigned __int8 v26 = 0;
    }
    else {
      unsigned __int8 v26 = 2 * (v25 & 1);
    }
    uint64_t v27 = sub_100027B70(v26);
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 32) = v27;
    *(void *)(a1 + 40) = v29;
  }
  if (*(unsigned char *)(v18 + v8[20]) == 1)
  {
    uint64_t v30 = sub_100027B70(0x18u);
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = v30;
    *(void *)(a1 + 56) = v32;
    id v33 = [objc_allocWithZone((Class)NSTextAttachment) init];
    NSString v34 = String._bridgeToObjectiveC()();
    id v35 = [self systemImageNamed:v34];

    if (v35)
    {
      id v36 = [v35 imageWithRenderingMode:2];
    }
    else
    {
      id v36 = 0;
    }
    [v33 setImage:v36];

    sub_100008EB0(0, &qword_1000D6B98);
    id v37 = [(id)swift_getObjCClassFromMetadata() attributedStringWithAttachment:v33];
    sub_10001A248(v18 + v8[35], (uint64_t)v5, &qword_1000D5458);
    uint64_t v39 = v62;
    uint64_t v38 = v63;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v5, 1, v63) == 1)
    {

      sub_10001A2AC((uint64_t)v5, &qword_1000D5458);
    }
    else
    {
      uint64_t v40 = *(void (**)(void))(v39 + 32);
      uint64_t v59 = v1;
      v40();
      uint64_t v41 = v38;
      uint64_t v42 = self;
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v44 = [v42 localizedStringFromDate:isa dateStyle:0 timeStyle:1];

      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v60 = v37;
      uint64_t v46 = v39;
      uint64_t v48 = v47;

      *(void *)&v65[0] = 32;
      *((void *)&v65[0] + 1) = 0xE100000000000000;
      sub_100008E18(&qword_1000D5DD0);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1000A19D0;
      *(void *)(v49 + 56) = &type metadata for String;
      *(void *)(v49 + 64) = sub_10009D0A4();
      *(void *)(v49 + 32) = v45;
      *(void *)(v49 + 40) = v48;
      uint64_t v50 = sub_100029D28(v49, 25);
      uint64_t v52 = v51;
      swift_bridgeObjectRelease();
      v53._uint64_t countAndFlagsBits = v50;
      v53._object = v52;
      String.append(_:)(v53);
      swift_bridgeObjectRelease();
      id v54 = objc_allocWithZone((Class)NSAttributedString);
      NSString v55 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v56 = [v54 initWithString:v55];

      uint64_t v1 = v59;
      [v60 appendAttributedString:v56];

      (*(void (**)(char *, uint64_t))(v46 + 8))(v61, v41);
      id v37 = v60;
    }

    *(void *)(a1 + 96) = v37;
  }
  sub_10009B1D4((double *)v65);
  uint64_t result = sub_100012B2C(v65, (_OWORD *)v14);
  *(unsigned char *)(a1 + v64) = *(unsigned char *)(v1
                                  + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_useMovieForNextBatteryView);
  return result;
}

uint64_t sub_100096F68@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v4 = (int *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0xE000000000000000;
  *((void *)v6 + 2) = 0;
  uint64_t v7 = (uint64_t *)(v6 + 16);
  *((void *)v6 + 3) = 0xE000000000000000;
  uint64_t v8 = v6 + 24;
  *((void *)v6 + 4) = 0;
  uint64_t v9 = (uint64_t *)(v6 + 32);
  *((void *)v6 + 5) = 0xE000000000000000;
  unsigned __int8 v10 = v6 + 40;
  *((void *)v6 + 6) = 0;
  *((void *)v6 + 7) = 0xE000000000000000;
  *((_OWORD *)v6 + 4) = 0u;
  *((_OWORD *)v6 + 5) = 0u;
  *((void *)v6 + 12) = 0;
  unsigned __int8 v11 = &v6[v4[13]];
  uint64_t v12 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = &v6[v4[14]];
  *((void *)v13 + 4) = 0;
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_WORD *)v13 + 20) = -24576;
  uint64_t v14 = &v6[v4[15]];
  *(_OWORD *)uint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  uint64_t v15 = (uint64_t)&v6[v4[16]];
  sub_100026C34((uint64_t)v29);
  sub_10004BF88((uint64_t)v29, v15, &qword_1000D4E60);
  v6[v4[17]] = 0;
  v6[v4[18]] = 0;
  *(void *)&v6[v4[19]] = &_swiftEmptyArrayStorage;
  *(void *)&v6[v4[20]] = &_swiftEmptyArrayStorage;
  uint64_t v16 = &v6[v4[21]];
  *((_OWORD *)v16 + 5) = 0u;
  *((_OWORD *)v16 + 6) = 0u;
  *((_OWORD *)v16 + 3) = 0u;
  *((_OWORD *)v16 + 4) = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_OWORD *)v16 + 2) = 0u;
  *(_OWORD *)uint64_t v16 = 0u;
  *(void *)&v6[v4[22]] = 0;
  *(void *)&v6[v4[23]] = 0;
  v6[v4[24]] = 0;
  switch(a1)
  {
    case 29:
      *(void *)uint64_t v6 = sub_100027B70(0x72u);
      *((void *)v6 + 1) = v20;
      uint64_t v22 = sub_100027B70(0x73u);
      unsigned __int8 v18 = 117;
      unsigned __int8 v19 = 116;
LABEL_7:
      *((void *)v6 + 2) = v22;
      *((void *)v6 + 3) = v21;
      uint64_t v7 = (uint64_t *)(v6 + 32);
      uint64_t v8 = v6 + 40;
      uint64_t v9 = (uint64_t *)(v6 + 48);
      unsigned __int8 v10 = v6 + 56;
      goto LABEL_8;
    case 28:
      *(void *)uint64_t v6 = sub_100027B70(0x6Eu);
      *((void *)v6 + 1) = v23;
      uint64_t v22 = sub_100027B70(0x6Fu);
      unsigned __int8 v18 = 113;
      unsigned __int8 v19 = 112;
      goto LABEL_7;
    case 27:
      *(void *)uint64_t v6 = sub_100027B70(0x6Au);
      *((void *)v6 + 1) = v17;
      unsigned __int8 v18 = 109;
      unsigned __int8 v19 = 107;
LABEL_8:
      *uint64_t v7 = sub_100027B70(v19);
      void *v8 = v24;
      *uint64_t v9 = sub_100027B70(v18);
      *unsigned __int8 v10 = v25;
      break;
  }
  return sub_100022FE4((uint64_t)v6, v28);
}

uint64_t sub_1000971EC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for HeadphoneViewModel(0);
  uint64_t v5 = (int *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0xE000000000000000;
  *((void *)v7 + 2) = 0;
  *((void *)v7 + 3) = 0xE000000000000000;
  *((void *)v7 + 4) = 0;
  *((void *)v7 + 5) = 0xE000000000000000;
  *((void *)v7 + 6) = 0;
  *((void *)v7 + 7) = 0xE000000000000000;
  *((_OWORD *)v7 + 4) = 0u;
  *((_OWORD *)v7 + 5) = 0u;
  *((void *)v7 + 12) = 0;
  uint64_t v8 = &v7[v5[13]];
  uint64_t v9 = type metadata accessor for HeadphoneAssets(0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  unsigned __int8 v10 = &v7[v5[14]];
  *((void *)v10 + 4) = 0;
  *(_OWORD *)unsigned __int8 v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((_WORD *)v10 + 20) = -24576;
  unsigned __int8 v11 = &v7[v5[15]];
  *unsigned __int8 v11 = 0u;
  v11[1] = 0u;
  uint64_t v12 = (uint64_t)&v7[v5[16]];
  sub_100026C34((uint64_t)v25);
  sub_10004BF88((uint64_t)v25, v12, &qword_1000D4E60);
  v7[v5[17]] = 0;
  v7[v5[18]] = 0;
  *(void *)&v7[v5[19]] = &_swiftEmptyArrayStorage;
  *(void *)&v7[v5[20]] = &_swiftEmptyArrayStorage;
  uint64_t v13 = &v7[v5[21]];
  v13[5] = 0u;
  void v13[6] = 0u;
  v13[3] = 0u;
  v13[4] = 0u;
  v13[1] = 0u;
  void v13[2] = 0u;
  _OWORD *v13 = 0u;
  *(void *)&v7[v5[22]] = 0;
  *(void *)&v7[v5[23]] = 0;
  v7[v5[24]] = 0;
  switch(a1)
  {
    case 32:
      *(void *)uint64_t v7 = sub_100027B70(0x8Eu);
      *((void *)v7 + 1) = v17;
      *((void *)v7 + 2) = sub_100027B70(0x8Fu);
      *((void *)v7 + 3) = v18;
      unsigned __int8 v15 = -111;
      unsigned __int8 v16 = -112;
      goto LABEL_7;
    case 31:
      *(void *)uint64_t v7 = sub_100027B70(0x83u);
      *((void *)v7 + 1) = v19;
      *((void *)v7 + 2) = sub_100027B70(0x84u);
      *((void *)v7 + 3) = v20;
      unsigned __int8 v15 = -119;
      unsigned __int8 v16 = -121;
      goto LABEL_7;
    case 30:
      *(void *)uint64_t v7 = sub_100027B70(0x7Au);
      *((void *)v7 + 1) = v14;
      unsigned __int8 v15 = -126;
      unsigned __int8 v16 = -127;
LABEL_7:
      *((void *)v7 + 4) = sub_100027B70(v16);
      *((void *)v7 + 5) = v21;
      *((void *)v7 + 6) = sub_100027B70(v15);
      *((void *)v7 + 7) = v22;
      break;
  }
  return sub_100022FE4((uint64_t)v7, a2);
}

uint64_t sub_100097418@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  LODWORD(v435) = a1;
  uint64_t v439 = a2;
  uint64_t v410 = type metadata accessor for HeadphonePairing2.Assets.ViewIdentifier();
  uint64_t v409 = *(void *)(v410 - 8);
  __chkstk_darwin(v410);
  v408 = (char *)&v364 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v422._baseURL = (NSURL *)type metadata accessor for HeadphonePairing2.Assets.AdjustedImageIdentifier();
  v422._urlString = (NSString *)v422._baseURL[-1]._reserved;
  uint64_t v5 = __chkstk_darwin(v422._baseURL);
  v402 = (char *)&v364 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v422.super.Class isa = (Class)((char *)&v364 - v7);
  uint64_t v394 = type metadata accessor for HeadphonePairing2.Assets.VideoViewIdentifier();
  uint64_t v393 = *(void *)(v394 - 8);
  uint64_t v8 = __chkstk_darwin(v394);
  v392 = (char *)&v364 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v385 = (char *)&v364 - v10;
  uint64_t v434 = type metadata accessor for HeadphoneAssets(0);
  uint64_t v432 = *(void *)(v434 - 8);
  uint64_t v11 = __chkstk_darwin(v434);
  v421 = (char *)&v364 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v418 = (char *)&v364 - v14;
  __chkstk_darwin(v13);
  v395 = (char *)&v364 - v15;
  uint64_t v16 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v364 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v389 = type metadata accessor for HeadphonePairing2.Assets.FileIdentifier();
  uint64_t v388 = *(void *)(v389 - 8);
  __chkstk_darwin(v389);
  v387 = (char *)&v364 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100008E18(&qword_1000D4808);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  v381 = (char *)&v364 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v397 = (uint64_t)&v364 - v23;
  v422._reserved = (void *)type metadata accessor for GenericAsset();
  uint64_t v423 = *((void *)v422._reserved - 1);
  uint64_t v24 = __chkstk_darwin(v422._reserved);
  v386 = (char *)&v364 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v422._clients = (char *)&v364 - v26;
  uint64_t v428 = type metadata accessor for HeadphonePairing2.Assets.VideoIdentifier();
  uint64_t v436 = *(void *)(v428 - 8);
  __chkstk_darwin(v428);
  v427 = (char *)&v364 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v429 = type metadata accessor for AdjustedAsset();
  uint64_t v437 = *(void *)(v429 - 8);
  uint64_t v28 = __chkstk_darwin(v429);
  v401 = (char *)&v364 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  v407 = (char *)&v364 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v398 = (char *)&v364 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v404 = (char *)&v364 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  v382 = (char *)&v364 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  v396 = (char *)&v364 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  v406 = (char *)&v364 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v419 = (char *)&v364 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  v405 = (char *)&v364 - v45;
  __chkstk_darwin(v44);
  uint64_t v47 = (char *)&v364 - v46;
  uint64_t v48 = sub_100008E18(&qword_1000D4800);
  uint64_t v413 = *(void *)(v48 - 8);
  uint64_t v49 = __chkstk_darwin(v48 - 8);
  v425 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v364 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = __chkstk_darwin(v49);
  v431 = (id *)((char *)&v364 - v52);
  uint64_t v53 = __chkstk_darwin(v51);
  v416 = (char *)&v364 - v54;
  uint64_t v55 = __chkstk_darwin(v53);
  v415 = (char *)&v364 - v56;
  uint64_t v57 = __chkstk_darwin(v55);
  v403 = (char *)&v364 - v58;
  uint64_t v59 = __chkstk_darwin(v57);
  v411 = (char *)&v364 - v60;
  uint64_t v61 = __chkstk_darwin(v59);
  v384 = (char *)&v364 - v62;
  uint64_t v63 = __chkstk_darwin(v61);
  v391 = (char *)&v364 - v64;
  uint64_t v65 = __chkstk_darwin(v63);
  v400 = (char *)&v364 - v66;
  uint64_t v67 = __chkstk_darwin(v65);
  v414 = (char *)&v364 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v71 = (char *)&v364 - v70;
  uint64_t v72 = __chkstk_darwin(v69);
  int v74 = (char *)&v364 - v73;
  __chkstk_darwin(v72);
  unsigned int v76 = (char *)&v364 - v75;
  uint64_t v433 = type metadata accessor for URL();
  uint64_t v438 = *(void *)(v433 - 8);
  uint64_t v77 = __chkstk_darwin(v433);
  v420 = (char *)&v364 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __chkstk_darwin(v77);
  v430 = (char *)&v364 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  v424 = (char *)&v364 - v82;
  uint64_t v83 = __chkstk_darwin(v81);
  v417 = (char *)&v364 - v84;
  uint64_t v85 = __chkstk_darwin(v83);
  v380 = (char *)&v364 - v86;
  uint64_t v87 = __chkstk_darwin(v85);
  v383 = (char *)&v364 - v88;
  uint64_t v89 = __chkstk_darwin(v87);
  v390 = (char *)&v364 - v90;
  uint64_t v91 = __chkstk_darwin(v89);
  v399 = (char *)&v364 - v92;
  uint64_t v93 = __chkstk_darwin(v91);
  v412 = (char *)&v364 - v94;
  uint64_t v95 = __chkstk_darwin(v93);
  uint64_t v97 = (char *)&v364 - v96;
  uint64_t v98 = __chkstk_darwin(v95);
  uint64_t v100 = (char *)&v364 - v99;
  __chkstk_darwin(v98);
  v426 = (char *)&v364 - v101;
  uint64_t v102 = v3 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  if (*(unsigned char *)(v102 + *(int *)(v16 + 76)) != 1) {
    return sub_10009C054(v435, v439);
  }
  uint64_t v374 = v3;
  if (*(void *)(v102 + *(int *)(v16 + 136)))
  {
    v368 = v18;
    uint64_t v376 = v102;
    uint64_t v375 = v16;
    uint64_t v103 = v436;
    uint64_t v104 = *(void (**)(void))(v436 + 104);
    uint64_t v105 = v427;
    unsigned int v369 = enum case for HeadphonePairing2.Assets.VideoIdentifier.connectLoop(_:);
    uint64_t v106 = v428;
    uint64_t v372 = v436 + 104;
    v371 = (void (*)(char *, void, uint64_t))v104;
    v104(v427);
    swift_retain();
    dispatch thunk of HeadphonePairing2.Assets.video(_:)();
    swift_release();
    uint64_t v107 = v105;
    uint64_t v108 = *(void (**)(char *, uint64_t))(v103 + 8);
    uint64_t v436 = v103 + 8;
    v108(v107, v106);
    AdjustedAsset.adjustmentURL.getter();
    uint64_t v109 = *(void (**)(char *, unint64_t))(v437 + 8);
    v437 += 8;
    v373 = v109;
    v109(v47, v429);
    uint64_t v110 = v438;
    uint64_t v112 = v438 + 56;
    int v111 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v438 + 56);
    uint64_t v113 = v433;
    v111(v76, 0, 1, v433);
    uint64_t v114 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
    uint64_t v370 = v110 + 48;
    v379 = v114;
    if (v114((uint64_t)v76, 1, v113) != 1)
    {
      uint64_t v115 = *(void (**)(char *, char *, uint64_t))(v110 + 32);
      uint64_t v377 = v110 + 32;
      v378 = v115;
      v115(v426, v76, v113);
      uint64_t v116 = v113;
      switch((char)v435)
      {
        case 2:
          int v135 = *(unsigned __int8 *)(v376 + 145);
          v367 = v111;
          v365 = v108;
          if (v135 == 4 || v135 == 2)
          {
            if (*(void *)(v376 + *(int *)(v375 + 136)))
            {
              uint64_t v137 = v427;
              uint64_t v136 = v428;
              v371(v427, enum case for HeadphonePairing2.Assets.VideoIdentifier.loopCharging(_:), v428);
              swift_retain();
              uint64_t v138 = v404;
              dispatch thunk of HeadphonePairing2.Assets.video(_:)();
              swift_release();
              v108(v137, v136);
              clients = v422._clients;
              AdjustedAsset.asset.getter();
              v373(v138, v429);
              uint64_t v140 = (uint64_t)v411;
              GenericAsset.fileURL.getter();
              (*(void (**)(void *, void *))(v423 + 8))(clients, v422._reserved);
            }
            else
            {
              uint64_t v140 = (uint64_t)v411;
              v111(v411, 1, 1, v113);
            }
            unint64_t v232 = sub_10004BA84(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
            unint64_t v234 = *(void *)(v232 + 16);
            unint64_t v233 = *(void *)(v232 + 24);
            if (v234 >= v233 >> 1) {
              unint64_t v232 = sub_10004BA84(v233 > 1, v234 + 1, 1, v232);
            }
            *(void *)(v232 + 16) = v234 + 1;
            uint64_t v235 = *(unsigned __int8 *)(v413 + 80);
            unint64_t v435 = v232;
            uint64_t v236 = *(void *)(v413 + 72);
            sub_10004BF88(v140, v232 + ((v235 + 32) & ~v235) + v236 * v234, &qword_1000D4800);
            v420 = (char *)*((void *)v422._urlString + 13);
            ((void (*)(Class, void, NSURL *))v420)(v422.super.isa, enum case for HeadphonePairing2.Assets.AdjustedImageIdentifier.caseClosedCharging(_:), v422._baseURL);
            uint64_t v237 = v375;
            uint64_t v238 = v376;
            uint64_t v239 = *(void *)(v376 + *(int *)(v375 + 136));
            LODWORD(v419) = 1;
            if (v239)
            {
              v240 = (unsigned int *)&enum case for HeadphonePairing2.Assets.ViewIdentifier.caseClosedCharging(_:);
LABEL_71:
              uint64_t v253 = v409;
              id v254 = v408;
              uint64_t v255 = v410;
              (*(void (**)(char *, void, uint64_t))(v409 + 104))(v408, *v240, v410);
              swift_retain();
              v421 = (char *)dispatch thunk of HeadphonePairing2.Assets.view(_:)();
              swift_release();
              (*(void (**)(char *, uint64_t))(v253 + 8))(v254, v255);
              uint64_t v237 = v375;
              uint64_t v238 = v376;
              goto LABEL_73;
            }
          }
          else
          {
            if (*(void *)(v376 + *(int *)(v375 + 136)))
            {
              v228 = v427;
              uint64_t v227 = v428;
              v371(v427, enum case for HeadphonePairing2.Assets.VideoIdentifier.loopCharged(_:), v428);
              swift_retain();
              id v229 = v398;
              dispatch thunk of HeadphonePairing2.Assets.video(_:)();
              swift_release();
              v108(v228, v227);
              id v230 = v422._clients;
              AdjustedAsset.asset.getter();
              v373(v229, v429);
              uint64_t v231 = (uint64_t)v403;
              GenericAsset.fileURL.getter();
              (*(void (**)(void *, void *))(v423 + 8))(v230, v422._reserved);
            }
            else
            {
              uint64_t v231 = (uint64_t)v403;
              v111(v403, 1, 1, v113);
            }
            unint64_t v250 = sub_10004BA84(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
            unint64_t v252 = *(void *)(v250 + 16);
            unint64_t v251 = *(void *)(v250 + 24);
            if (v252 >= v251 >> 1) {
              unint64_t v250 = sub_10004BA84(v251 > 1, v252 + 1, 1, v250);
            }
            *(void *)(v250 + 16) = v252 + 1;
            uint64_t v235 = *(unsigned __int8 *)(v413 + 80);
            unint64_t v435 = v250;
            uint64_t v236 = *(void *)(v413 + 72);
            sub_10004BF88(v231, v250 + ((v235 + 32) & ~v235) + v236 * v252, &qword_1000D4800);
            v420 = (char *)*((void *)v422._urlString + 13);
            ((void (*)(Class, void, NSURL *))v420)(v422.super.isa, enum case for HeadphonePairing2.Assets.AdjustedImageIdentifier.caseClosedCharged(_:), v422._baseURL);
            LODWORD(v419) = 0;
            uint64_t v237 = v375;
            uint64_t v238 = v376;
            if (*(void *)(v376 + *(int *)(v375 + 136)))
            {
              v240 = (unsigned int *)&enum case for HeadphonePairing2.Assets.ViewIdentifier.caseClosedCharged(_:);
              goto LABEL_71;
            }
          }
          v421 = 0;
LABEL_73:
          uint64_t v256 = (uint64_t)v425;
          if (*(void *)(v238 + *(int *)(v237 + 136)))
          {
            id v258 = v427;
            uint64_t v257 = v428;
            v371(v427, v369, v428);
            swift_retain();
            id v259 = v407;
            dispatch thunk of HeadphonePairing2.Assets.video(_:)();
            swift_release();
            v365(v258, v257);
            id v260 = v422._clients;
            AdjustedAsset.asset.getter();
            v373(v259, v429);
            uint64_t v261 = (uint64_t)v415;
            GenericAsset.fileURL.getter();
            (*(void (**)(void *, void *))(v423 + 8))(v260, v422._reserved);
          }
          else
          {
            uint64_t v261 = (uint64_t)v415;
            v367(v415, 1, 1, v116);
          }
          uint64_t v262 = v435;
          unint64_t v264 = *(void *)(v435 + 16);
          unint64_t v263 = *(void *)(v435 + 24);
          uint64_t v366 = v112;
          if (v264 >= v263 >> 1) {
            uint64_t v262 = sub_10004BA84(v263 > 1, v264 + 1, 1, v435);
          }
          unint64_t v435 = v262;
          *(void *)(v262 + 16) = v264 + 1;
          uint64_t v265 = v262 + ((v235 + 32) & ~(unint64_t)v235);
          sub_10004BF88(v261, v265 + v236 * v264, &qword_1000D4800);
          uint64_t v266 = *(void *)(v435 + 16);
          id v267 = (char *)_swiftEmptyArrayStorage;
          if (v266)
          {
            swift_bridgeObjectRetain();
            id v268 = v424;
            do
            {
              id v269 = v431;
              sub_10001A248(v265, (uint64_t)v431, &qword_1000D4800);
              sub_10004BF88((uint64_t)v269, v256, &qword_1000D4800);
              if (v379(v256, 1, v116) == 1)
              {
                sub_10001A2AC(v256, &qword_1000D4800);
              }
              else
              {
                id v270 = v378;
                v378(v268, (char *)v256, v116);
                v270(v430, v268, v116);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  id v267 = (char *)sub_10004B81C(0, *((void *)v267 + 2) + 1, 1, (unint64_t)v267);
                }
                unint64_t v272 = *((void *)v267 + 2);
                unint64_t v271 = *((void *)v267 + 3);
                if (v272 >= v271 >> 1) {
                  id v267 = (char *)sub_10004B81C(v271 > 1, v272 + 1, 1, (unint64_t)v267);
                }
                *((void *)v267 + 2) = v272 + 1;
                v378(&v267[((*(unsigned __int8 *)(v438 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v438 + 80))+ *(void *)(v438 + 72) * v272], v430, v116);
                uint64_t v256 = (uint64_t)v425;
              }
              v265 += v236;
              --v266;
            }
            while (v266);
            swift_bridgeObjectRelease();
          }
          id v219 = (int *)v434;
          uint64_t v273 = v438;
          id v274 = v416;
          if (*((void *)v267 + 2))
          {
            (*(void (**)(char *, char *, uint64_t))(v438 + 16))(v416, &v267[(*(unsigned __int8 *)(v438 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v438 + 80)], v116);
            uint64_t v275 = 0;
          }
          else
          {
            uint64_t v275 = 1;
          }
          id v276 = v367;
          v367(v274, v275, 1, v116);
          swift_bridgeObjectRelease();
          if (v379((uint64_t)v274, 1, v116) != 1)
          {
            id v277 = v417;
            v378(v417, v274, v116);
            id v278 = *(void (**)(char *, char *, uint64_t))(v273 + 16);
            id v279 = v418;
            id v280 = v426;
            v278(v418, v426, v116);
            v278(&v279[v219[5]], v277, v116);
            v276(&v279[v219[6]], 1, 1, v116);
            id v281 = &v279[v219[7]];
            uint64_t v282 = type metadata accessor for HeadphoneAssets.Feature(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v282 - 8) + 56))(v281, 1, 1, v282);
            uint64_t v283 = v219[8];
            *(void *)&v279[v283] = _swiftEmptyArrayStorage;
            id v284 = (char *)v219[9];
            *(void *)&v284[(void)v279] = 0;
            id v285 = (id *)&v279[v219[10]];
            *id v285 = 0;
            v285[1] = 0;
            v431 = v285;
            uint64_t v286 = *(void *)(v376 + *(int *)(v375 + 136));
            if (v286)
            {
              uint64_t v428 = v283;
              v430 = v284;
              urlString = v422._urlString;
              v427 = (char *)(v422._urlString + 13);
              id v288 = v402;
              baseURL = v422._baseURL;
              ((void (*)(char *, void, NSURL *))v420)(v402, enum case for HeadphonePairing2.Assets.AdjustedImageIdentifier.leftBud(_:), v422._baseURL);
              swift_retain();
              id v290 = v401;
              uint64_t v436 = v286;
              dispatch thunk of HeadphonePairing2.Assets.adjustedImage(_:)();
              v424 = (char *)urlString[1];
              ((void (*)(char *, NSURL *))v424)(v288, baseURL);
              v416 = (char *)self;
              id v291 = v422._clients;
              AdjustedAsset.asset.getter();
              GenericAsset.fileName.getter();
              id v292 = *(void (**)(void *, void *))(v423 + 8);
              reserved = v422._reserved;
              v292(v291, v422._reserved);
              NSString v294 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              AdjustedAsset.asset.getter();
              id v295 = (void *)GenericAsset.bundle.getter();
              v292(v291, reserved);
              id v296 = v416;
              v425 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))[v416 imageNamed:v294 inBundle:v295];

              v373(v290, v429);
              id v297 = v422._baseURL;
              ((void (*)(char *, void, NSURL *))v420)(v288, enum case for HeadphonePairing2.Assets.AdjustedImageIdentifier.rightBud(_:), v422._baseURL);
              dispatch thunk of HeadphonePairing2.Assets.adjustedImage(_:)();
              ((void (*)(char *, NSURL *))v424)(v288, v297);
              AdjustedAsset.asset.getter();
              GenericAsset.fileName.getter();
              id v298 = v422._reserved;
              v292(v291, v422._reserved);
              NSString v299 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              AdjustedAsset.asset.getter();
              id v300 = (void *)GenericAsset.bundle.getter();
              v292(v291, v298);
              v301 = v296;
              v427 = (char *)[v296 imageNamed:v299 inBundle:v300];

              unint64_t v302 = v429;
              v373(v290, v429);
              dispatch thunk of HeadphonePairing2.Assets.adjustedImage(_:)();
              AdjustedAsset.asset.getter();
              GenericAsset.fileName.getter();
              v292(v291, v298);
              NSString v303 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              AdjustedAsset.asset.getter();
              v304 = (void *)GenericAsset.bundle.getter();
              v292(v291, v298);
              id v305 = [v301 imageNamed:v303 inBundle:v304];

              id v306 = v290;
              id v307 = v425;
              v373(v306, v302);
              uint64_t v441 = (uint64_t)_swiftEmptyArrayStorage;
              if (v307)
              {
                id v308 = v307;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v441 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v441 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              uint64_t v116 = v433;
              uint64_t v273 = v438;
              uint64_t v309 = v374;
              id v310 = v427;
              if (v427)
              {
                id v311 = v427;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v441 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v441 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              if (v305)
              {
                id v312 = v305;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v441 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v441 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              uint64_t v437 = v441;
              swift_bridgeObjectRelease();

              swift_release();
              id v219 = (int *)v434;
              id v280 = v426;
              id v284 = v430;
              uint64_t v283 = v428;
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v437 = (uint64_t)_swiftEmptyArrayStorage;
              uint64_t v309 = v374;
            }
            uint64_t v313 = v309 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_batteryVideoView;
            id v314 = *(void **)v313;
            if (*(void *)v313)
            {
              id v315 = *(void **)(v313 + 8);
              id v316 = *(void (**)(char *, uint64_t))(v273 + 8);
              id v317 = v314;
              v316(v417, v116);
              (*((void (**)(Class, NSURL *))v422._urlString + 1))(v422.super.isa, v422._baseURL);
              v316(v280, v116);
              v318 = v431;

              id *v318 = v314;
              v318[1] = v315;
            }
            else if (*(void *)(v376 + *(int *)(v375 + 136)))
            {
              v430 = v284;
              uint64_t v319 = v393;
              id v320 = *(void (**)(char *, uint64_t, uint64_t))(v393 + 104);
              uint64_t v321 = (unsigned int *)&enum case for HeadphonePairing2.Assets.VideoViewIdentifier.loopCharging(_:);
              if (!v419) {
                uint64_t v321 = (unsigned int *)&enum case for HeadphonePairing2.Assets.VideoViewIdentifier.loopCharged(_:);
              }
              uint64_t v322 = *v321;
              id v323 = v392;
              uint64_t v428 = v283;
              uint64_t v324 = v394;
              v320(v392, v322, v394);
              swift_retain();
              id v325 = (void *)dispatch thunk of HeadphonePairing2.Assets.videoView(_:)();
              uint64_t v438 = v326;
              swift_release();
              uint64_t v327 = v324;
              uint64_t v283 = v428;
              (*(void (**)(char *, uint64_t))(v319 + 8))(v323, v327);
              id v284 = v430;
              id v328 = *(void (**)(char *, uint64_t))(v273 + 8);
              v328(v417, v116);
              (*((void (**)(Class, NSURL *))v422._urlString + 1))(v422.super.isa, v422._baseURL);
              v328(v280, v116);
              v329 = v431;
              id v330 = *v431;
              id v331 = v325;

              v332 = (void *)v438;
              id *v329 = v325;
              v329[1] = v332;
              id v333 = *(void **)v313;
              *(void *)uint64_t v313 = v325;
              *(void *)(v313 + 8) = v332;
            }
            else
            {
              v335 = *(void (**)(char *, uint64_t))(v273 + 8);
              v335(v417, v116);
              (*((void (**)(Class, NSURL *))v422._urlString + 1))(v422.super.isa, v422._baseURL);
              v335(v280, v116);
            }
            uint64_t v336 = (uint64_t)v418;
            swift_bridgeObjectRelease();
            *(void *)(v336 + v283) = v437;

            *(void *)&v284[v336] = v421;
            goto LABEL_121;
          }
          (*((void (**)(Class, NSURL *))v422._urlString + 1))(v422.super.isa, v422._baseURL);
          swift_bridgeObjectRelease();

          (*(void (**)(char *, uint64_t))(v273 + 8))(v426, v116);
          uint64_t v226 = (uint64_t)v274;
LABEL_94:
          sub_10001A2AC(v226, &qword_1000D4800);
          int v129 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v432 + 56);
          uint64_t v130 = v439;
          uint64_t v131 = 1;
LABEL_95:
          uint64_t v134 = (uint64_t)v219;
          return v129(v130, v131, 1, v134);
        case 3:
          if (*(void *)(v376 + *(int *)(v375 + 136)))
          {
            v367 = v111;
            long long v142 = v427;
            uint64_t v141 = v428;
            v371(v427, enum case for HeadphonePairing2.Assets.VideoIdentifier.connectEngage(_:), v428);
            swift_retain();
            uint64_t v143 = v406;
            dispatch thunk of HeadphonePairing2.Assets.video(_:)();
            swift_release();
            v108(v142, v141);
            long long v144 = v422._clients;
            AdjustedAsset.asset.getter();
            v373(v143, v429);
            uint64_t v145 = v414;
            GenericAsset.fileURL.getter();
            uint64_t v146 = *(void (**)(void *, void *))(v423 + 8);
            v423 += 8;
            v146(v144, v422._reserved);
            unsigned int v147 = v379((uint64_t)v145, 1, v113);
            uint64_t v148 = v438;
            if (v147 != 1)
            {
              uint64_t v149 = v412;
              v378(v412, v145, v113);
              if (*(void *)(v376 + *(int *)(v375 + 136)))
              {
                uint64_t v150 = v108;
                uint64_t v152 = v427;
                uint64_t v151 = v428;
                v371(v427, v369, v428);
                swift_retain();
                uint64_t v153 = v396;
                dispatch thunk of HeadphonePairing2.Assets.video(_:)();
                swift_release();
                v150(v152, v151);
                uint64_t v154 = v422._clients;
                AdjustedAsset.asset.getter();
                v373(v153, v429);
                uint64_t v155 = (uint64_t)v400;
                GenericAsset.fileURL.getter();
                uint64_t v156 = v154;
                uint64_t v149 = v412;
                v146(v156, v422._reserved);
                unsigned int v157 = v379(v155, 1, v113);
                uint64_t v158 = v434;
                if (v157 != 1)
                {
                  v378(v399, (char *)v155, v116);
                  uint64_t v159 = type metadata accessor for HeadphoneAssets.Feature(0);
                  uint64_t v160 = *(void *)(v159 - 8);
                  uint64_t v161 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56);
                  v431 = (id *)(v160 + 56);
                  v161(v397, 1, 1, v159);
                  uint64_t v162 = *(void *)(v376 + *(int *)(v375 + 136));
                  unint64_t v435 = v159;
                  if (v162)
                  {
                    v425 = v161;
                    uint64_t v163 = v388;
                    unint64_t v164 = v387;
                    uint64_t v165 = v389;
                    (*(void (**)(char *, void, uint64_t))(v388 + 104))(v387, enum case for HeadphonePairing2.Assets.FileIdentifier.featureTimings(_:), v389);
                    swift_retain();
                    uint64_t v166 = v386;
                    dispatch thunk of HeadphonePairing2.Assets.file(_:)();
                    swift_release();
                    (*(void (**)(char *, uint64_t))(v163 + 8))(v164, v165);
                    uint64_t v161 = v425;
                    uint64_t v167 = v391;
                    GenericAsset.fileURL.getter();
                    v146(v166, v422._reserved);
                    if (v379((uint64_t)v167, 1, v116) != 1)
                    {
                      v378(v390, v167, v116);
                      if (*(void *)(v376 + *(int *)(v375 + 136)))
                      {
                        uint64_t v169 = v427;
                        uint64_t v168 = v428;
                        v371(v427, enum case for HeadphonePairing2.Assets.VideoIdentifier.features(_:), v428);
                        swift_retain();
                        long long v170 = v382;
                        dispatch thunk of HeadphonePairing2.Assets.video(_:)();
                        swift_release();
                        long long v171 = v169;
                        uint64_t v161 = v425;
                        v150(v171, v168);
                        long long v172 = v422._clients;
                        AdjustedAsset.asset.getter();
                        v373(v170, v429);
                        uint64_t v173 = v384;
                        GenericAsset.fileURL.getter();
                        v146(v172, v422._reserved);
                        if (v379((uint64_t)v173, 1, v116) != 1)
                        {
                          v378(v383, v173, v116);
                          URL._bridgeToObjectiveC()(&v422);
                          uint64_t v175 = v174;
                          id v176 = (id)SFPlaybackTimeRangesFromFeaturesTimeURL();

                          sub_100008EB0(0, &qword_1000D6BA0);
                          unint64_t v177 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

                          uint64_t v428 = v177;
                          if (v177 >> 62)
                          {
                            swift_bridgeObjectRetain();
                            uint64_t v178 = _CocoaArrayWrapper.endIndex.getter();
                          }
                          else
                          {
                            uint64_t v178 = *(void *)((v428 & 0xFFFFFFFFFFFFFF8) + 0x10);
                            swift_bridgeObjectRetain();
                          }
                          uint64_t v366 = v112;
                          if (v178)
                          {
                            if (v178 < 1)
                            {
                              __break(1u);
                              JUMPOUT(0x10009AA5CLL);
                            }
                            long long v179 = 0;
                            unint64_t v429 = v428 & 0xC000000000000001;
                            unint64_t v180 = (char *)_swiftEmptyArrayStorage;
                            v430 = (char *)v178;
                            uint64_t v181 = v376;
                            uint64_t v182 = (uint64_t)v368;
                            do
                            {
                              if (v429)
                              {
                                specialized _ArrayBuffer._getElementSlowPath(_:)();
                                swift_unknownObjectRelease();
                              }
                              uint64_t v441 = 0;
                              unint64_t v442 = 0xE000000000000000;
                              _StringGuts.grow(_:)(16);
                              swift_bridgeObjectRelease();
                              v440 = v179;
                              uint64_t v441 = 0x5F45525554414546;
                              unint64_t v442 = 0xE800000000000000;
                              v183._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
                              String.append(_:)(v183);
                              swift_bridgeObjectRelease();
                              v184._uint64_t countAndFlagsBits = 0x454C5449545FLL;
                              v184._object = (void *)0xE600000000000000;
                              String.append(_:)(v184);
                              uint64_t v185 = v441;
                              uint64_t v186 = v442;
                              sub_10009D10C(v181, v182, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
                              uint64_t v187 = sub_100044BF4(v185, v186, v182);
                              uint64_t v436 = v188;
                              uint64_t v437 = v187;
                              sub_10009D538(v182, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
                              swift_bridgeObjectRelease();
                              uint64_t v441 = 0;
                              unint64_t v442 = 0xE000000000000000;
                              _StringGuts.grow(_:)(22);
                              swift_bridgeObjectRelease();
                              v440 = v179;
                              uint64_t v441 = 0x5F45525554414546;
                              unint64_t v442 = 0xE800000000000000;
                              v189._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
                              String.append(_:)(v189);
                              swift_bridgeObjectRelease();
                              v190._uint64_t countAndFlagsBits = 0x504952435345445FLL;
                              v190._object = (void *)0xEC0000004E4F4954;
                              String.append(_:)(v190);
                              uint64_t v191 = v441;
                              uint64_t v192 = v442;
                              sub_10009D10C(v181, v182, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
                              uint64_t v193 = sub_100044BF4(v191, v192, v182);
                              uint64_t v195 = v194;
                              sub_10009D538(v182, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
                              swift_bridgeObjectRelease();
                              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                                unint64_t v180 = sub_10004BA98(0, *((void *)v180 + 2) + 1, 1, v180);
                              }
                              unint64_t v197 = *((void *)v180 + 2);
                              unint64_t v196 = *((void *)v180 + 3);
                              if (v197 >= v196 >> 1) {
                                unint64_t v180 = sub_10004BA98((char *)(v196 > 1), v197 + 1, 1, v180);
                              }
                              ++v179;
                              *((void *)v180 + 2) = v197 + 1;
                              id v198 = &v180[32 * v197];
                              uint64_t v199 = v436;
                              *((void *)v198 + 4) = v437;
                              *((void *)v198 + 5) = v199;
                              *((void *)v198 + 6) = v193;
                              *((void *)v198 + 7) = v195;
                            }
                            while (v430 != v179);
                          }
                          else
                          {
                            unint64_t v180 = (char *)_swiftEmptyArrayStorage;
                          }
                          uint64_t v355 = v428;
                          swift_bridgeObjectRelease();
                          uint64_t v148 = v438;
                          v356 = v380;
                          v357 = v383;
                          uint64_t v116 = v433;
                          (*(void (**)(char *, char *, uint64_t))(v438 + 16))(v380, v383, v433);
                          v358 = sub_100089638((uint64_t)v180);
                          swift_bridgeObjectRelease();
                          v359 = *(void (**)(char *, uint64_t))(v148 + 8);
                          v359(v357, v116);
                          v359(v390, v116);
                          uint64_t v360 = v397;
                          sub_10001A2AC(v397, &qword_1000D4808);
                          uint64_t v361 = (uint64_t)v381;
                          v378(v381, v356, v116);
                          uint64_t v362 = v355;
                          uint64_t v340 = v360;
                          unint64_t v363 = v435;
                          *(void *)(v361 + *(int *)(v435 + 20)) = v362;
                          *(void *)(v361 + *(int *)(v363 + 24)) = v358;
                          uint64_t v161 = v425;
                          ((void (*)(uint64_t, void, uint64_t))v425)(v361, 0, 1);
                          sub_10004BF88(v361, v360, &qword_1000D4808);
                          uint64_t v339 = v426;
LABEL_127:
                          v341 = *(void (**)(char *, char *, uint64_t))(v148 + 16);
                          unint64_t v342 = v395;
                          v341(v395, v339, v116);
                          id v219 = (int *)v434;
                          v341(&v342[*(int *)(v434 + 20)], v412, v116);
                          uint64_t v343 = &v342[v219[6]];
                          v341(v343, v399, v116);
                          v367(v343, 0, 1, v116);
                          uint64_t v344 = (uint64_t)&v342[v219[7]];
                          v161(v344, 1, 1, v435);
                          *(void *)&v342[v219[8]] = _swiftEmptyArrayStorage;
                          *(void *)&v342[v219[9]] = 0;
                          v345 = &v342[v219[10]];
                          *(void *)v345 = 0;
                          *((void *)v345 + 1) = 0;
                          sub_10009D1C8(v340, v344);
                          uint64_t v346 = v376;
                          swift_beginAccess();
                          if (*(void *)(v346 + *(int *)(v375 + 136)))
                          {
                            swift_endAccess();
                            uint64_t v347 = v393;
                            uint64_t v348 = v340;
                            double v349 = v385;
                            uint64_t v350 = v394;
                            (*(void (**)(char *, void, uint64_t))(v393 + 104))(v385, enum case for HeadphonePairing2.Assets.VideoViewIdentifier.intro(_:), v394);
                            swift_retain();
                            uint64_t v438 = dispatch thunk of HeadphonePairing2.Assets.videoView(_:)();
                            uint64_t v352 = v351;
                            swift_release();
                            (*(void (**)(char *, uint64_t))(v347 + 8))(v349, v350);
                            sub_10001A2AC(v348, &qword_1000D4808);
                            v353 = *(void (**)(char *, uint64_t))(v148 + 8);
                            v353(v399, v116);
                            v353(v412, v116);
                            v353(v426, v116);

                            *(void *)v345 = v438;
                            *((void *)v345 + 1) = v352;
                          }
                          else
                          {
                            sub_10001A2AC(v340, &qword_1000D4808);
                            v354 = *(void (**)(char *, uint64_t))(v148 + 8);
                            v354(v399, v116);
                            v354(v412, v116);
                            v354(v426, v116);
                            swift_endAccess();
                          }
                          uint64_t v336 = (uint64_t)v395;
LABEL_121:
                          uint64_t v337 = v439;
                          sub_10009D10C(v336, v439, type metadata accessor for HeadphoneAssets);
                          (*(void (**)(uint64_t, void, uint64_t, int *))(v432 + 56))(v337, 0, 1, v219);
                          return sub_10009D538(v336, type metadata accessor for HeadphoneAssets);
                        }
                      }
                      else
                      {
                        uint64_t v173 = v384;
                        v367(v384, 1, 1, v116);
                      }
                      (*(void (**)(char *, uint64_t))(v148 + 8))(v390, v116);
                      uint64_t v338 = (uint64_t)v173;
LABEL_126:
                      sub_10001A2AC(v338, &qword_1000D4800);
                      uint64_t v339 = v426;
                      uint64_t v340 = v397;
                      goto LABEL_127;
                    }
                  }
                  else
                  {
                    uint64_t v167 = v391;
                    v367(v391, 1, 1, v116);
                  }
                  uint64_t v338 = (uint64_t)v167;
                  goto LABEL_126;
                }
              }
              else
              {
                uint64_t v155 = (uint64_t)v400;
                v367(v400, 1, 1, v113);
                uint64_t v158 = v434;
              }
              id v334 = *(void (**)(char *, uint64_t))(v148 + 8);
              v334(v149, v116);
              v334(v426, v116);
              sub_10001A2AC(v155, &qword_1000D4800);
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v432 + 56))(v439, 1, 1, v158);
            }
          }
          else
          {
            uint64_t v145 = v414;
            v111(v414, 1, 1, v113);
            uint64_t v148 = v438;
          }
          (*(void (**)(char *, uint64_t))(v148 + 8))(v426, v113);
          uint64_t v133 = (uint64_t)v145;
          goto LABEL_11;
        case 16:
          id v200 = v420;
          URL.init(fileURLWithPath:)();
          v201 = *(void (**)(char *, char *, uint64_t))(v438 + 16);
          id v202 = v421;
          v201(v421, v426, v116);
          id v203 = (int *)v434;
          v201(&v202[*(int *)(v434 + 20)], v200, v116);
          v111(&v202[v203[6]], 1, 1, v116);
          id v204 = &v202[v203[7]];
          uint64_t v205 = type metadata accessor for HeadphoneAssets.Feature(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v205 - 8) + 56))(v204, 1, 1, v205);
          id v206 = _swiftEmptyArrayStorage;
          uint64_t v437 = v203[8];
          *(void *)&v202[v437] = _swiftEmptyArrayStorage;
          *(void *)&v202[v203[9]] = 0;
          id v207 = &v202[v203[10]];
          *(void *)id v207 = 0;
          *((void *)v207 + 1) = 0;
          int v208 = *(_DWORD *)(v376 + *(int *)(v375 + 124));
          id v209 = self;
          id v210 = [v209 airPods];
          unsigned int v211 = [v210 productID];

          if (v208 != v211)
          {
            id v212 = [v209 airPodsSecondGeneration];
            [v212 productID];
          }
          NSString v241 = String._bridgeToObjectiveC()();
          id v242 = [self imageNamed:v241];

          uint64_t v441 = (uint64_t)_swiftEmptyArrayStorage;
          if (v242)
          {
            id v243 = v242;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            id v244 = v426;
            uint64_t v245 = v437;
            if (*(void *)((v441 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v441 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            id v206 = (void *)v441;
          }
          else
          {
            id v244 = v426;
            uint64_t v245 = v437;
          }

          id v246 = *(void (**)(char *, uint64_t))(v438 + 8);
          v246(v420, v116);
          v246(v244, v116);
          uint64_t v247 = v439;
          uint64_t v248 = v432;
          id v249 = v421;
          swift_bridgeObjectRelease();
          *(void *)&v249[v245] = v206;
          sub_10009D10C((uint64_t)v249, v247, type metadata accessor for HeadphoneAssets);
          (*(void (**)(uint64_t, void, uint64_t, int *))(v248 + 56))(v247, 0, 1, v203);
          return sub_10009D538((uint64_t)v249, type metadata accessor for HeadphoneAssets);
        case 18:
        case 20:
          if (*(void *)(v376 + *(int *)(v375 + 136)))
          {
            uint64_t v117 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v111;
            unint64_t v119 = v427;
            uint64_t v118 = v428;
            v371(v427, v369, v428);
            swift_retain();
            uint64_t v120 = v419;
            dispatch thunk of HeadphonePairing2.Assets.video(_:)();
            swift_release();
            v108(v119, v118);
            unsigned __int8 v121 = v422._clients;
            AdjustedAsset.asset.getter();
            v373(v120, v429);
            GenericAsset.fileURL.getter();
            (*(void (**)(void *, void *))(v423 + 8))(v121, v422._reserved);
            unsigned int v122 = v379((uint64_t)v71, 1, v113);
            uint64_t v123 = (int *)v434;
            if (v122 != 1)
            {
              uint64_t v124 = (void (*)(uint64_t, char *, uint64_t))v378;
              v378(v97, v71, v113);
              uint64_t v125 = v439;
              v124(v439, v426, v116);
              v124(v125 + v123[5], v97, v116);
              v117(v125 + v123[6], 1, 1, v116);
              uint64_t v126 = v125 + v123[7];
              uint64_t v127 = type metadata accessor for HeadphoneAssets.Feature(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v126, 1, 1, v127);
              *(void *)(v125 + v123[8]) = _swiftEmptyArrayStorage;
              *(void *)(v125 + v123[9]) = 0;
              id v128 = (void *)(v125 + v123[10]);
              *id v128 = 0;
              v128[1] = 0;
              int v129 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v432 + 56);
              uint64_t v130 = v125;
              uint64_t v131 = 0;
              goto LABEL_48;
            }
          }
          else
          {
            v111(v71, 1, 1, v113);
            uint64_t v123 = (int *)v434;
          }
          (*(void (**)(char *, uint64_t))(v438 + 8))(v426, v113);
          sub_10001A2AC((uint64_t)v71, &qword_1000D4800);
          int v129 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v432 + 56);
          uint64_t v130 = v439;
          uint64_t v131 = 1;
LABEL_48:
          uint64_t v134 = (uint64_t)v123;
          return v129(v130, v131, 1, v134);
        case 19:
          if (*(void *)(v376 + *(int *)(v375 + 136)))
          {
            id v213 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v111;
            id v215 = v427;
            uint64_t v214 = v428;
            v371(v427, enum case for HeadphonePairing2.Assets.VideoIdentifier.repairLoop(_:), v428);
            swift_retain();
            id v216 = v405;
            dispatch thunk of HeadphonePairing2.Assets.video(_:)();
            swift_release();
            v108(v215, v214);
            id v217 = v422._clients;
            AdjustedAsset.asset.getter();
            v373(v216, v429);
            GenericAsset.fileURL.getter();
            (*(void (**)(void *, void *))(v423 + 8))(v217, v422._reserved);
            unsigned int v218 = v379((uint64_t)v74, 1, v113);
            id v219 = (int *)v434;
            uint64_t v220 = v438;
            if (v218 != 1)
            {
              double v221 = (void (*)(uint64_t, char *, uint64_t))v378;
              v378(v100, v74, v113);
              uint64_t v222 = v439;
              v221(v439, v426, v116);
              v221(v222 + v219[5], v100, v116);
              v213(v222 + v219[6], 1, 1, v116);
              uint64_t v223 = v222 + v219[7];
              uint64_t v224 = type metadata accessor for HeadphoneAssets.Feature(0);
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v224 - 8) + 56))(v223, 1, 1, v224);
              *(void *)(v222 + v219[8]) = _swiftEmptyArrayStorage;
              *(void *)(v222 + v219[9]) = 0;
              id v225 = (void *)(v222 + v219[10]);
              *id v225 = 0;
              v225[1] = 0;
              int v129 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v432 + 56);
              uint64_t v130 = v222;
              uint64_t v131 = 0;
              goto LABEL_95;
            }
          }
          else
          {
            v111(v74, 1, 1, v113);
            id v219 = (int *)v434;
            uint64_t v220 = v438;
          }
          (*(void (**)(char *, uint64_t))(v220 + 8))(v426, v113);
          uint64_t v226 = (uint64_t)v74;
          goto LABEL_94;
        default:
          (*(void (**)(char *, uint64_t))(v438 + 8))(v426, v113);
          goto LABEL_12;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v438 + 56))(v76, 1, 1, v433);
  }
  uint64_t v133 = (uint64_t)v76;
LABEL_11:
  sub_10001A2AC(v133, &qword_1000D4800);
LABEL_12:
  int v129 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v432 + 56);
  uint64_t v130 = v439;
  uint64_t v131 = 1;
  uint64_t v134 = v434;
  return v129(v130, v131, 1, v134);
}

CGColorRef sub_10009AAA8()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1)
  {
    sub_10000C80C((void *)(v0 + 16), v1);
    unsigned __int8 v2 = sub_100053BF0();
    uint64_t v3 = v0 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
    swift_beginAccess();
    int v4 = *(_DWORD *)(v3 + *(int *)(type metadata accessor for HeadphoneModel() + 124));
    uint64_t v5 = self;
    id v6 = [v5 powerBeatsPro];
    unsigned int v7 = [v6 productID];

    if (v7 == v4)
    {
      if ((v2 & 0xFu) > 0xD) {
        unsigned int v8 = 0;
      }
      else {
        unsigned int v8 = dword_1000A5068[v2 & 0xF];
      }
      if (qword_1000D4480 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_100008278(v16, (uint64_t)qword_1000D69F0);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v17, v18)) {
        goto LABEL_33;
      }
      uint64_t v19 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 16777986;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 5) = 256;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 8) = 2080;
      sub_100008E18(&qword_1000D5DD0);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1000A19D0;
      *(void *)(v20 + 56) = &type metadata for UInt32;
      *(void *)(v20 + 64) = &protocol witness table for UInt32;
      *(_DWORD *)(v20 + 32) = v8;
      uint64_t v21 = String.init(format:_:)();
      sub_10005D8C8(v21, v22, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v23 = "Mute Call: B444 Color Code: %hhu, Color ID: %hhu, Color Hex: %s";
    }
    else
    {
      id v14 = [v5 b494];
      unsigned int v15 = [v14 productID];

      if (v15 == v4)
      {
        if ((v2 & 0xFu) > 9) {
          unsigned int v8 = 0;
        }
        else {
          unsigned int v8 = dword_1000A5040[v2 & 0xF];
        }
        if (qword_1000D4480 != -1) {
          swift_once();
        }
        uint64_t v24 = type metadata accessor for Logger();
        sub_100008278(v24, (uint64_t)qword_1000D69F0);
        uint64_t v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v17, v18)) {
          goto LABEL_33;
        }
        uint64_t v19 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 16777986;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v19 + 5) = 256;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v19 + 8) = 2080;
        sub_100008E18(&qword_1000D5DD0);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1000A19D0;
        *(void *)(v25 + 56) = &type metadata for UInt32;
        *(void *)(v25 + 64) = &protocol witness table for UInt32;
        *(_DWORD *)(v25 + 32) = v8;
        uint64_t v26 = String.init(format:_:)();
        sub_10005D8C8(v26, v27, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v23 = "Mute Call: B494 Color Code: %hhu, Color ID: %hhu, Color Hex: %s";
      }
      else
      {
        if (v4 != 8221)
        {
          unsigned int v8 = 0;
          return CGColorCreateGenericRGB((double)HIWORD(v8) / 255.0, (double)BYTE1(v8) / 255.0, (double)v8 / 255.0, 1.0);
        }
        if ((v2 & 0xFu) > 0xD) {
          unsigned int v8 = 0;
        }
        else {
          unsigned int v8 = dword_1000A5068[v2 & 0xF];
        }
        if (qword_1000D4480 != -1) {
          swift_once();
        }
        uint64_t v28 = type metadata accessor for Logger();
        sub_100008278(v28, (uint64_t)qword_1000D69F0);
        uint64_t v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v17, v18))
        {
LABEL_33:

          return CGColorCreateGenericRGB((double)HIWORD(v8) / 255.0, (double)BYTE1(v8) / 255.0, (double)v8 / 255.0, 1.0);
        }
        uint64_t v19 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 16777986;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v19 + 5) = 256;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v19 + 8) = 2080;
        sub_100008E18(&qword_1000D5DD0);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1000A19D0;
        *(void *)(v29 + 56) = &type metadata for UInt32;
        *(void *)(v29 + 64) = &protocol witness table for UInt32;
        *(_DWORD *)(v29 + 32) = v8;
        uint64_t v30 = String.init(format:_:)();
        sub_10005D8C8(v30, v31, &v32);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v23 = "Mute Call: B498 Color Code: %hhu, Color ID: %hhu, Color Hex: %s";
      }
    }
    _os_log_impl((void *)&_mh_execute_header, v17, v18, v23, (uint8_t *)v19, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    goto LABEL_33;
  }
  if (qword_1000D4480 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100008278(v9, (uint64_t)qword_1000D69F0);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Cannot Get Tint Color", v12, 2u);
    swift_slowDealloc();
  }

  return 0;
}

void sub_10009B1D4(double *a1@<X8>)
{
  uint64_t v4 = type metadata accessor for HeadphoneModel();
  __chkstk_darwin(v4);
  id v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = v1;
  uint64_t v7 = v1 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_model;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 112);
  uint64_t v9 = *(void *)(v8 + 16);
  double v10 = 0.0;
  uint64_t v83 = a1;
  if (!v9)
  {
    unsigned int v20 = 2;
    double v21 = 0.0;
    double v17 = 0.0;
    int v16 = 2;
    unint64_t v22 = 2;
    goto LABEL_34;
  }
  uint64_t v11 = v8 + 32;
  uint64_t v12 = (unsigned __int8 *)(v8 + 40);
  int v13 = *(unsigned __int8 *)(v8 + 41);
  uint64_t v14 = v8 + 32;
  unsigned int v15 = (unsigned __int8 *)(v8 + 40);
  if (!*(unsigned char *)(v8 + 41))
  {
LABEL_22:
    int v16 = *v15;
    double v17 = *(double *)v14;
    if (v13 == 1)
    {
LABEL_23:
      uint64_t v18 = v8 + 32;
      uint64_t v19 = (unsigned __int8 *)(v8 + 40);
      goto LABEL_25;
    }
    goto LABEL_12;
  }
  if (v9 != 1)
  {
    uint64_t v14 = v8 + 48;
    uint64_t v23 = 1;
    do
    {
      uint64_t v24 = v23 + 1;
      if (__OFADD__(v23, 1))
      {
        __break(1u);
        goto LABEL_153;
      }
      if (!*(unsigned char *)(v14 + 9))
      {
        unsigned int v15 = (unsigned __int8 *)(v14 + 8);
        goto LABEL_22;
      }
      v14 += 16;
      ++v23;
    }
    while (v24 != v9);
    int v16 = 2;
    double v17 = 0.0;
    if (v13 == 1) {
      goto LABEL_23;
    }
LABEL_12:
    if (v9 != 1)
    {
      uint64_t v18 = v8 + 48;
      uint64_t v25 = 1;
      while (1)
      {
        uint64_t v26 = v25 + 1;
        if (__OFADD__(v25, 1)) {
          break;
        }
        if (*(unsigned char *)(v18 + 9) == 1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 8);
          goto LABEL_25;
        }
        v18 += 16;
        ++v25;
        if (v26 == v9)
        {
          unsigned int v20 = 2;
          double v21 = 0.0;
          if (v13 != 2) {
            goto LABEL_26;
          }
          goto LABEL_33;
        }
      }
LABEL_153:
      __break(1u);
      goto LABEL_154;
    }
LABEL_13:
    unsigned int v20 = 2;
    double v21 = 0.0;
    double v10 = 0.0;
    unint64_t v22 = 2;
    if (v13 != 2)
    {
LABEL_34:
      uint64_t v29 = &_ss26DefaultStringInterpolationVN_ptr;
      unint64_t v2 = (unint64_t)&stru_1000D0000;
      id v30 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:*(unsigned int *)(v7 + *(int *)(v4 + 124))];
      if (v30)
      {
        unint64_t v31 = v30;
        sub_10009D10C(v7, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
        id v32 = [objc_allocWithZone((Class)SFHeadphoneProduct) initWithProductID:*(unsigned int *)&v6[*(int *)(v4 + 124)]];
        if (v32)
        {
          uint64_t v33 = v32;
          unsigned __int8 v34 = [v32 hasSplitBattery];

          sub_10009D538((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
          if (v34)
          {
            uint64_t v35 = OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_batteryDebounceTime;
            uint64_t v36 = v84;
            if (!*(void *)(v84 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_batteryDebounceTime)) {
              *(void *)(v36 + v35) = mach_absolute_time();
            }
            if (mach_absolute_time() < *(void *)(v36 + v35))
            {
              __break(1u);
              goto LABEL_156;
            }
            if ((unint64_t)UpTicksToSeconds() > 2)
            {

              LODWORD(v2) = v16 & 1;
              if (v16 == 2) {
                double v17 = 0.0;
              }
              if (v20 == 2) {
                double v21 = 0.0;
              }
              unsigned int v47 = v20 & 1;
              if (v20 == 2) {
                unsigned int v49 = 1;
              }
              else {
                unsigned int v49 = v20 >> 8;
              }
              if (v22 != 2) {
                goto LABEL_147;
              }
              unsigned int v46 = 0;
              unsigned int v50 = 2;
              double v10 = 0.0;
            }
            else
            {
              if (qword_1000D4480 != -1) {
                swift_once();
              }
              uint64_t v37 = type metadata accessor for Logger();
              sub_100008278(v37, (uint64_t)qword_1000D69F0);
              uint64_t v38 = Logger.logObject.getter();
              os_log_type_t v39 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v38, v39))
              {
                uint64_t v40 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v40 = 0;
                _os_log_impl((void *)&_mh_execute_header, v38, v39, "Workaround for invalid battery data soon after powering on", v40, 2u);
                swift_slowDealloc();
              }

              if (v16 == 2 || v17 < 0.01)
              {
                if (v20 == 2 || v21 < 0.01)
                {
                  unsigned int v41 = [v31 hasCaseWithoutBattery:v83];
                  BOOL v42 = v41;
                  double v10 = 1.0;
                  if (v41) {
                    double v21 = 0.0;
                  }
                  else {
                    double v21 = 1.0;
                  }
                  uint64_t v43 = Logger.logObject.getter();
                  os_log_type_t v44 = static os_log_type_t.debug.getter();
                  if (os_log_type_enabled(v43, v44))
                  {
                    uint64_t v45 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v45 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Use default battery levels for invalid left, right and case battery data", v45, 2u);
                    swift_slowDealloc();
                  }

                  unsigned int v46 = 0;
                  unsigned int v47 = 0;
                  LODWORD(v2) = 0;
                  BOOL v48 = vabdd_f64(1.0, v21) > 0.1;
                  unsigned int v49 = 1;
                  unsigned int v50 = 2;
                  double v17 = 1.0;
                  goto LABEL_84;
                }
                unsigned int v47 = v20 & 1;
                if (v16 == 2 || v17 < 0.01)
                {
                  if (objc_msgSend(v31, "hasCaseWithoutBattery", v83)) {
                    double v17 = 0.0;
                  }
                  else {
                    double v17 = v21;
                  }
                  int v74 = Logger.logObject.getter();
                  os_log_type_t v75 = static os_log_type_t.debug.getter();
                  if (os_log_type_enabled(v74, v75))
                  {
                    unsigned int v76 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)unsigned int v76 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v74, v75, "Use right battery for invalid left battery data", v76, 2u);
                    swift_slowDealloc();
                  }

                  LODWORD(v2) = 0;
                }
                else
                {
                  LODWORD(v2) = v16 & 1;
                }
                if (v22 != 2 && v10 >= 0.01)
                {
                  unsigned int v49 = v20 >> 8;
LABEL_146:

LABEL_147:
                  unsigned int v50 = v22 >> 8;
                  unsigned int v46 = v22 & 1;
                  goto LABEL_73;
                }
                uint64_t v80 = Logger.logObject.getter();
                os_log_type_t v81 = static os_log_type_t.debug.getter();
                unsigned int v49 = v20 >> 8;
                if (os_log_type_enabled(v80, v81))
                {
                  unsigned int v50 = 2;
                  uint64_t v82 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v82 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v80, v81, "Use right battery for invalid case battery data", v82, 2u);
                  swift_slowDealloc();

                  unsigned int v46 = 0;
                }
                else
                {

                  unsigned int v46 = 0;
                  unsigned int v50 = 2;
                }
                double v10 = v21;
              }
              else
              {
                LODWORD(v2) = v16 & 1;
                if (v20 == 2 || v21 < 0.01)
                {
                  uint64_t v71 = Logger.logObject.getter();
                  os_log_type_t v72 = static os_log_type_t.debug.getter();
                  if (os_log_type_enabled(v71, v72))
                  {
                    uint64_t v73 = (uint8_t *)swift_slowAlloc();
                    *(_WORD *)uint64_t v73 = 0;
                    _os_log_impl((void *)&_mh_execute_header, v71, v72, "Use left battery for invalid right battery data", v73, 2u);
                    swift_slowDealloc();
                  }

                  unsigned int v47 = 0;
                  unsigned int v49 = 1;
                  double v21 = v17;
                }
                else
                {
                  unsigned int v47 = v20 & 1;
                  unsigned int v49 = v20 >> 8;
                }
                if (v22 != 2 && v10 >= 0.01) {
                  goto LABEL_146;
                }
                if (objc_msgSend(v31, "hasCaseWithoutBattery", v83)) {
                  double v10 = 0.0;
                }
                else {
                  double v10 = v17;
                }
                uint64_t v77 = Logger.logObject.getter();
                os_log_type_t v78 = static os_log_type_t.debug.getter();
                if (os_log_type_enabled(v77, v78))
                {
                  unsigned int v50 = 2;
                  uint64_t v79 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v79 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v77, v78, "Use left battery for case right battery data", v79, 2u);
                  swift_slowDealloc();

                  unsigned int v46 = 0;
                }
                else
                {

                  unsigned int v46 = 0;
                  unsigned int v50 = 2;
                }
              }
            }
LABEL_73:
            BOOL v42 = v21 == 0.0;
            if (v17 == 0.0 && v21 == 0.0)
            {
              unint64_t v2 = v46 | ((unint64_t)v50 << 8);
              if (qword_1000D4480 == -1) {
                goto LABEL_76;
              }
              goto LABEL_155;
            }
            double v57 = vabdd_f64(v17, v21);
            BOOL v48 = v57 > 0.1;
            if (v17 == 0.0)
            {
              if (v57 <= 0.1 && v21 == 0.0 && v47 == v2)
              {
LABEL_87:
                if (v10 <= 0.0)
                {
                  unint64_t v2 = v2;
                  uint64_t v36 = v84;
                  if (qword_1000D4480 != -1) {
                    swift_once();
                  }
                  uint64_t v64 = type metadata accessor for Logger();
                  sub_100008278(v64, (uint64_t)qword_1000D69F0);
                  uint64_t v52 = Logger.logObject.getter();
                  os_log_type_t v65 = static os_log_type_t.debug.getter();
                  if (!os_log_type_enabled(v52, v65))
                  {
                    unint64_t v22 = 0;
                    LOBYTE(v29) = 0;
                    __int16 v56 = 0x2000;
                    double v21 = 0.0;
                    double v10 = 0.0;
                    goto LABEL_102;
                  }
                  uint64_t v66 = (uint8_t *)swift_slowAlloc();
                  *(_DWORD *)uint64_t v66 = 134217984;
                  double v85 = v17;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  _os_log_impl((void *)&_mh_execute_header, v52, v65, "Create battery configuration: combined buds without case(combined l&r: %f)", v66, 0xCu);
                  unint64_t v22 = 0;
                  LOBYTE(v29) = 0;
                  __int16 v56 = 0x2000;
                  double v21 = 0.0;
                  goto LABEL_100;
                }
                uint64_t v36 = v84;
                LOBYTE(v29) = *(unsigned char *)(v84
                                       + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_useMovieForNextBatteryView);
                unint64_t v2 = v2;
                unint64_t v22 = v46 | ((unint64_t)v50 << 8);
                if (qword_1000D4480 == -1)
                {
LABEL_89:
                  uint64_t v58 = type metadata accessor for Logger();
                  sub_100008278(v58, (uint64_t)qword_1000D69F0);
                  uint64_t v52 = Logger.logObject.getter();
                  os_log_type_t v59 = static os_log_type_t.debug.getter();
                  if (!os_log_type_enabled(v52, v59))
                  {
                    __int16 v56 = 0;
                    double v21 = v10;
                    double v10 = 0.0;
                    goto LABEL_102;
                  }
                  uint64_t v60 = swift_slowAlloc();
                  *(_DWORD *)uint64_t v60 = 134218240;
                  double v85 = v17;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v60 + 12) = 2048;
                  double v85 = v10;
                  uint64_t v36 = v84;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  _os_log_impl((void *)&_mh_execute_header, v52, v59, "Create battery configuration: combined buds with case(combined l&r: %f, c: %f)", (uint8_t *)v60, 0x16u);
                  __int16 v56 = 0;
                  double v21 = v10;
                  goto LABEL_100;
                }
LABEL_156:
                swift_once();
                goto LABEL_89;
              }
LABEL_91:
              unint64_t v2 = v2;
              unint64_t v22 = v47 | ((unint64_t)v49 << 8);
              if (v10 <= 0.0)
              {
                if (qword_1000D4480 != -1) {
                  swift_once();
                }
                uint64_t v68 = type metadata accessor for Logger();
                sub_100008278(v68, (uint64_t)qword_1000D69F0);
                uint64_t v52 = Logger.logObject.getter();
                os_log_type_t v69 = static os_log_type_t.debug.getter();
                if (!os_log_type_enabled(v52, v69))
                {
                  LOBYTE(v29) = 0;
                  __int16 v56 = 24576;
                  double v10 = 0.0;
                  uint64_t v36 = v84;
                  goto LABEL_102;
                }
                uint64_t v70 = swift_slowAlloc();
                *(_DWORD *)uint64_t v70 = 134218240;
                double v85 = v17;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *(_WORD *)(v70 + 12) = 2048;
                double v85 = v21;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                _os_log_impl((void *)&_mh_execute_header, v52, v69, "Create battery configuration: split without case(l: %f, r: %f)", (uint8_t *)v70, 0x16u);
                LOBYTE(v29) = 0;
                __int16 v56 = 24576;
                double v10 = 0.0;
                uint64_t v36 = v84;
              }
              else
              {
                __int16 v56 = v46 | ((_WORD)v50 << 8) | 0x4000;
                if (qword_1000D4480 != -1) {
                  swift_once();
                }
                uint64_t v61 = type metadata accessor for Logger();
                sub_100008278(v61, (uint64_t)qword_1000D69F0);
                uint64_t v52 = Logger.logObject.getter();
                os_log_type_t v62 = static os_log_type_t.debug.getter();
                if (!os_log_type_enabled(v52, v62))
                {
                  LOBYTE(v29) = 0;
                  uint64_t v36 = v84;
                  goto LABEL_102;
                }
                uint64_t v63 = swift_slowAlloc();
                *(_DWORD *)uint64_t v63 = 134218496;
                double v85 = v17;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *(_WORD *)(v63 + 12) = 2048;
                double v85 = v21;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *(_WORD *)(v63 + 22) = 2048;
                double v85 = v10;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                _os_log_impl((void *)&_mh_execute_header, v52, v62, "Create battery configuration: split with case(l: %f, r: %f, c: %f)", (uint8_t *)v63, 0x20u);
                LOBYTE(v29) = 0;
                uint64_t v36 = v84;
              }
              goto LABEL_101;
            }
LABEL_84:
            if (!v42 && !v48 && ((v47 ^ v2) & 1) == 0) {
              goto LABEL_87;
            }
            goto LABEL_91;
          }
        }
        else
        {
          sub_10009D538((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for HeadphoneModel);
        }
      }
      LODWORD(v2) = v16 & 1;
      if (v16 == 2) {
        double v17 = 0.0;
      }
      if (v20 == 2) {
        double v21 = 0.0;
      }
      unsigned int v47 = v20 & 1;
      if (v20 == 2) {
        unsigned int v49 = 1;
      }
      else {
        unsigned int v49 = v20 >> 8;
      }
      if (v22 == 2) {
        unsigned int v50 = 2;
      }
      else {
        unsigned int v50 = v22 >> 8;
      }
      if (v22 == 2) {
        unsigned int v46 = 0;
      }
      else {
        unsigned int v46 = v22 & 1;
      }
      if (v22 == 2) {
        double v10 = 0.0;
      }
      goto LABEL_73;
    }
LABEL_33:
    double v10 = *(double *)v11;
    unint64_t v22 = *v12 | 0x200u;
    goto LABEL_34;
  }
  int v16 = 2;
  double v17 = 0.0;
  uint64_t v18 = v8 + 32;
  uint64_t v19 = (unsigned __int8 *)(v8 + 40);
  if (v13 != 1) {
    goto LABEL_13;
  }
LABEL_25:
  double v21 = *(double *)v18;
  unsigned int v20 = *v19 | 0x100;
  if (v13 == 2) {
    goto LABEL_33;
  }
LABEL_26:
  if (v9 == 1)
  {
LABEL_31:
    unint64_t v22 = 2;
    goto LABEL_34;
  }
  uint64_t v11 = v8 + 48;
  uint64_t v27 = 1;
  while (1)
  {
    uint64_t v28 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (*(unsigned char *)(v11 + 9) == 2)
    {
      uint64_t v12 = (unsigned __int8 *)(v11 + 8);
      goto LABEL_33;
    }
    v11 += 16;
    ++v27;
    if (v28 == v9) {
      goto LABEL_31;
    }
  }
LABEL_154:
  __break(1u);
LABEL_155:
  swift_once();
LABEL_76:
  uint64_t v51 = type metadata accessor for Logger();
  sub_100008278(v51, (uint64_t)qword_1000D69F0);
  uint64_t v52 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.debug.getter();
  BOOL v54 = os_log_type_enabled(v52, v53);
  uint64_t v36 = v84;
  if (v54)
  {
    uint64_t v55 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v55 = 134217984;
    double v85 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v52, v53, "Create battery configuration: headset only(battery: %f)", v55, 0xCu);
    unint64_t v22 = 0;
    LOBYTE(v29) = 0;
    __int16 v56 = 0x8000;
    double v21 = 0.0;
    double v17 = v10;
LABEL_100:
    double v10 = 0.0;
LABEL_101:
    swift_slowDealloc();
    goto LABEL_102;
  }
  unint64_t v22 = 0;
  LOBYTE(v29) = 0;
  __int16 v56 = 0x8000;
  double v21 = 0.0;
  double v17 = v10;
  double v10 = 0.0;
LABEL_102:

  *(unsigned char *)(v36 + OBJC_IVAR____TtC20HeadphoneProxService18HeadphonePresenter_useMovieForNextBatteryView) = (_BYTE)v29;
  uint64_t v67 = v83;
  double *v83 = v17;
  *((void *)v67 + 1) = v2;
  v67[2] = v21;
  *((void *)v67 + 3) = v22;
  v67[4] = v10;
  *((_WORD *)v67 + 20) = v56;
}

uint64_t sub_10009C054@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for HeadphoneAssets(0);
  uint64_t v23 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  id v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  double v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xFE) == 2)
  {
    URL.init(fileURLWithPath:)();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v11(v6, v10, v7);
    v11(&v6[v4[5]], v10, v7);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(&v6[v4[6]], 1, 1, v7);
    uint64_t v12 = &v6[v4[7]];
    uint64_t v13 = type metadata accessor for HeadphoneAssets.Feature(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = v4[8];
    *(void *)&v6[v14] = _swiftEmptyArrayStorage;
    *(void *)&v6[v4[9]] = 0;
    unsigned int v15 = &v6[v4[10]];
    *(void *)unsigned int v15 = 0;
    *((void *)v15 + 1) = 0;
    id v16 = [self configurationWithPointSize:88.0];
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [self systemImageNamed:v17 withConfiguration:v16];

    if (v18)
    {
      sub_100008E18((uint64_t *)&unk_1000D5090);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1000A33B0;
      *(void *)(v19 + 32) = v18;
      uint64_t v24 = v19;
      specialized Array._endMutation()();
      uint64_t v20 = v24;

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_bridgeObjectRelease();
      *(void *)&v6[v14] = v20;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    sub_10009D10C((uint64_t)v6, a2, type metadata accessor for HeadphoneAssets);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v23 + 56))(a2, 0, 1, v4);
    return sub_10009D538((uint64_t)v6, type metadata accessor for HeadphoneAssets);
  }
  else
  {
    double v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v23 + 56);
    return v21(a2, 1, 1, v4);
  }
}

id sub_10009C434(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

void *sub_10009C510(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_10009C5B4(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_10009C5E0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10009C608@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_10009C638(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009C6D8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10009C658(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009C864(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10009C678(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009C9C4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10009C698(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009CB30(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10009C6B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10009CE5C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10009C6D8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008E18(&qword_1000D6BB0);
    id v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    id v10 = &_swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_100008E18(&qword_1000D6BA8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10009C864(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008E18(&qword_1000D5B60);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10009C9C4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008E18(&qword_1000D5B20);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10009CB30(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008E18(&qword_1000D6C08);
    id v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    id v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_100008E18(&qword_1000D6C10);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10009CCD4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100008E18(&qword_1000D5B70);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10009CE5C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100008E18(&qword_1000D5B78);
  uint64_t v10 = *(void *)(sub_100008E18(&qword_1000D5B80) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100008E18(&qword_1000D5B80) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  id v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  double v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_10009D0A4()
{
  unint64_t result = qword_1000D6B80;
  if (!qword_1000D6B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B80);
  }
  return result;
}

void sub_10009D0F8(uint64_t a1, uint64_t a2, void *a3, unsigned __int8 a4)
{
  if (a4 != 0xFF) {
    sub_100012C60(a1, a2, a3, a4);
  }
}

uint64_t sub_10009D10C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_10009D174()
{
  unint64_t result = qword_1000D6B90;
  if (!qword_1000D6B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6B90);
  }
  return result;
}

uint64_t sub_10009D1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100008E18(&qword_1000D4808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009D230()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009D268()
{
  return sub_10008B9E8();
}

uint64_t sub_10009D270()
{
  return sub_100052F20(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10009D278()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009D288(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10009D298()
{
  return swift_release();
}

uint64_t sub_10009D2A0()
{
  return sub_10008AAFC();
}

uint64_t sub_10009D2A8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009D2B8()
{
  return sub_10008E8A0();
}

id sub_10009D2C0()
{
  uint64_t v0 = sub_100008E18(&qword_1000D4800);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v16[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  URL.init(string:)();
  id result = (id)(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v6, v2, v3);
    id result = [self defaultWorkspace];
    if (result)
    {
      uint64_t v9 = result;
      URL._bridgeToObjectiveC()(v8);
      uint64_t v11 = v10;
      sub_100008E18(&qword_1000D6BB8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1000A2760;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v13;
      *(void *)(inited + 72) = &type metadata for Bool;
      *(unsigned char *)(inited + 48) = 1;
      *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 88) = v14;
      *(void *)(inited + 120) = &type metadata for Bool;
      *(unsigned char *)(inited + 96) = 1;
      sub_100089170(inited);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v9 openSensitiveURL:v11 withOptions:isa];

      return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10009D538(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10009D598()
{
  return sub_10008B5C4();
}

uint64_t sub_10009D5A4(char a1)
{
  return sub_10008DDEC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10009D5C4()
{
  return sub_10008D7EC();
}

uint64_t sub_10009D5D0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10009D610()
{
  return sub_10008DD60();
}

uint64_t sub_10009D618()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009D650(char a1)
{
  return sub_10008A380(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10009D658(uint64_t a1)
{
  return a1;
}

id *sub_10009D684(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_10009D6B0(uint64_t a1)
{
  return a1;
}

id *sub_10009D6DC(id *a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for HeadphonePresenter.AppleAccountFeatureFlags(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10009D7A4);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadphonePresenter.AppleAccountFeatureFlags()
{
  return &type metadata for HeadphonePresenter.AppleAccountFeatureFlags;
}

unint64_t sub_10009D7E0()
{
  unint64_t result = qword_1000D6C18;
  if (!qword_1000D6C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D6C18);
  }
  return result;
}

id sub_10009D868()
{
  return [*v0 isHiddenFromSettings];
}

uint64_t sub_10009D88C(uint64_t a1, uint64_t a2)
{
  return sub_10009D8A4(a1, a2, (SEL *)&selRef_displayName);
}

uint64_t sub_10009D898(uint64_t a1, uint64_t a2)
{
  return sub_10009D8A4(a1, a2, (SEL *)&selRef_sourceIdentifier);
}

uint64_t sub_10009D8A4(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v5;
}

BOOL sub_10009D8F8()
{
  return sub_10009D920();
}

BOOL sub_10009D920()
{
  id v1 = [v0 sourceSettings];
  id v2 = [v1 notificationSettings];

  id v3 = [v2 timeSensitiveSetting];
  if (v3) {
    return 1;
  }
  id v5 = [v0 sourceSettings];
  id v6 = [v5 notificationSettings];

  id v7 = [v6 directMessagesSetting];
  return v7 != 0;
}

BOOL sub_10009D9F8()
{
  id v1 = [*v0 sourceSettings];
  id v2 = [v1 notificationSettings];

  id v3 = [v2 announcementSetting];
  return v3 == (id)2 || sub_10009D920();
}

BOOL sub_10009DA88()
{
  id v1 = [*v0 sourceSettings];
  id v2 = [v1 notificationSettings];

  id v3 = [v2 announcementSetting];
  return v3 == (id)2;
}

void sub_10009DAFC(char a1)
{
}

void sub_10009DB20(char a1)
{
  id v2 = v1;
  id v4 = [v2 sourceSettings];
  id v5 = [v4 notificationSettings];

  [v5 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100008EB0(0, &qword_1000D6C28);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_19;
  }
  id v6 = v27;
  if (a1) {
    uint64_t v7 = 2;
  }
  else {
    uint64_t v7 = 1;
  }
  [v27 setAnnouncementSetting:v7];
  uint64_t v8 = &selRef_code;
  if ((a1 & 1) == 0)
  {
    if (qword_1000D4360 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100008278(v19, (uint64_t)qword_1000D91B0);
    id v10 = v2;
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      id v26 = v27;
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      v28[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      id v20 = [v10 sourceIdentifier];
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v23 = v22;

      uint64_t v8 = &selRef_code;
      sub_10005D8C8(v21, v23, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      id v18 = "Disabling Announce Notification for %s";
      goto LABEL_14;
    }
LABEL_15:

    goto LABEL_16;
  }
  if (qword_1000D4360 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100008278(v9, (uint64_t)qword_1000D91B0);
  id v10 = v2;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v11, v12)) {
    goto LABEL_15;
  }
  id v26 = v27;
  uint64_t v13 = (uint8_t *)swift_slowAlloc();
  v28[0] = swift_slowAlloc();
  *(_DWORD *)uint64_t v13 = 136315138;
  id v14 = [v10 sourceIdentifier];
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  uint64_t v8 = &selRef_code;
  sub_10005D8C8(v15, v17, v28);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();

  swift_bridgeObjectRelease();
  id v18 = "Enabling Announce Notification for %s";
LABEL_14:
  _os_log_impl((void *)&_mh_execute_header, v11, v12, v18, v13, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  id v6 = v26;
  swift_slowDealloc();

LABEL_16:
  id v24 = [self currentNotificationSettingsCenter];
  NSString v25 = [v2 v8[113]];
  if (!v25)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v24 replaceNotificationSettings:v6 forNotificationSourceIdentifier:v25];

LABEL_19:
}

void sub_10009DF6C(char a1)
{
  id v2 = v1;
  id v4 = [v2 notificationSystemSettings];
  [v4 mutableCopy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100008EB0(0, &qword_1000D6C20);
  if (swift_dynamicCast())
  {
    [v12 setShowPreviewsSetting:[v4 showPreviewsSetting]];
    if (a1) {
      uint64_t v5 = 2;
    }
    else {
      uint64_t v5 = 1;
    }
    [v12 setAnnouncementSetting:v5];
    [v12 setAnnouncementHeadphonesSetting:v5];
    if (a1)
    {
      if (qword_1000D4360 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_100008278(v6, (uint64_t)qword_1000D91B0);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v7, v8)) {
        goto LABEL_15;
      }
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      id v10 = "Enabling Announce Notifications";
    }
    else
    {
      if (qword_1000D4360 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_100008278(v11, (uint64_t)qword_1000D91B0);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v7, v8)) {
        goto LABEL_15;
      }
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      id v10 = "Disabling Announce Notifications";
    }
    _os_log_impl((void *)&_mh_execute_header, v7, v8, v10, v9, 2u);
    swift_slowDealloc();
LABEL_15:

    [v2 setNotificationSystemSettings:v12];
  }
}

void sub_10009E1D4(char a1)
{
}

uint64_t sub_10009E1F8@<X0>(void *a1@<X8>)
{
  id v3 = *v1;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 notificationSourceWithIdentifier:v4];

  uint64_t result = sub_100008EB0(0, &qword_1000D67C0);
  a1[3] = result;
  a1[4] = &off_1000C6748;
  *a1 = v5;
  return result;
}

uint64_t sub_10009E278()
{
  id v1 = [*v0 allNotificationSources];
  sub_100008EB0(0, &qword_1000D67C0);
  sub_10009E314();
  uint64_t v2 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = sub_10007EE74(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1000897A4((unint64_t)v3);
  swift_release();
  return v4;
}

unint64_t sub_10009E314()
{
  unint64_t result = qword_1000D67C8;
  if (!qword_1000D67C8)
  {
    sub_100008EB0(255, &qword_1000D67C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000D67C8);
  }
  return result;
}

uint64_t sub_10009E37C()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_10009E3B0(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unhandled TUConfigurationAnnounceCalls state %d, assume Never", (uint8_t *)v2, 8u);
}

void sub_10009E428(int a1, NSObject *a2)
{
  v2[0] = 67109120;
  v2[1] = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unhandled SFAnnounceCallsState state %d, assume Never", (uint8_t *)v2, 8u);
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t static CharacterSet.newlines.getter()
{
  return static CharacterSet.newlines.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

uint64_t __DataStorage.init(bytes:length:)()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

uint64_t type metadata accessor for __DataStorage()
{
  return type metadata accessor for __DataStorage();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t URL.appendingPathExtension(_:)()
{
  return URL.appendingPathExtension(_:)();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t type metadata accessor for Data.RangeReference()
{
  return type metadata accessor for Data.RangeReference();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.append(_:)()
{
  return Data.append(_:)();
}

uint64_t type metadata accessor for Data.Iterator()
{
  return type metadata accessor for Data.Iterator();
}

uint64_t Data.Iterator.init(_:at:)()
{
  return Data.Iterator.init(_:at:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t NSLog(_:_:)()
{
  return NSLog(_:_:)();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t IndexPath.row.getter()
{
  return IndexPath.row.getter();
}

uint64_t IndexPath.section.getter()
{
  return IndexPath.section.getter();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t type metadata accessor for ProductError()
{
  return type metadata accessor for ProductError();
}

uint64_t GenericAsset.bundle.getter()
{
  return GenericAsset.bundle.getter();
}

uint64_t GenericAsset.fileURL.getter()
{
  return GenericAsset.fileURL.getter();
}

uint64_t GenericAsset.fileName.getter()
{
  return GenericAsset.fileName.getter();
}

uint64_t type metadata accessor for GenericAsset()
{
  return type metadata accessor for GenericAsset();
}

uint64_t AdjustedAsset.adjustmentURL.getter()
{
  return AdjustedAsset.adjustmentURL.getter();
}

uint64_t AdjustedAsset.asset.getter()
{
  return AdjustedAsset.asset.getter();
}

uint64_t type metadata accessor for AdjustedAsset()
{
  return type metadata accessor for AdjustedAsset();
}

uint64_t HeadphonePairing2.AssetRequest.init(configuration:)()
{
  return HeadphonePairing2.AssetRequest.init(configuration:)();
}

uint64_t type metadata accessor for HeadphonePairing2.AssetRequest()
{
  return type metadata accessor for HeadphonePairing2.AssetRequest();
}

uint64_t HeadphonePairing2.Configuration.init(hardwareModel:color:timeout:)()
{
  return HeadphonePairing2.Configuration.init(hardwareModel:color:timeout:)();
}

uint64_t HeadphonePairing2.Configuration.personalizationAssetInfo.setter()
{
  return HeadphonePairing2.Configuration.personalizationAssetInfo.setter();
}

uint64_t type metadata accessor for HeadphonePairing2.Configuration()
{
  return type metadata accessor for HeadphonePairing2.Configuration();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.adjustedImage(_:)()
{
  return dispatch thunk of HeadphonePairing2.Assets.adjustedImage(_:)();
}

uint64_t type metadata accessor for HeadphonePairing2.Assets.FileIdentifier()
{
  return type metadata accessor for HeadphonePairing2.Assets.FileIdentifier();
}

uint64_t type metadata accessor for HeadphonePairing2.Assets.ViewIdentifier()
{
  return type metadata accessor for HeadphonePairing2.Assets.ViewIdentifier();
}

uint64_t type metadata accessor for HeadphonePairing2.Assets.VideoIdentifier()
{
  return type metadata accessor for HeadphonePairing2.Assets.VideoIdentifier();
}

uint64_t type metadata accessor for HeadphonePairing2.Assets.VideoViewIdentifier()
{
  return type metadata accessor for HeadphonePairing2.Assets.VideoViewIdentifier();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.personalizationAsset.getter()
{
  return dispatch thunk of HeadphonePairing2.Assets.personalizationAsset.getter();
}

uint64_t type metadata accessor for HeadphonePairing2.Assets.AdjustedImageIdentifier()
{
  return type metadata accessor for HeadphonePairing2.Assets.AdjustedImageIdentifier();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.file(_:)()
{
  return dispatch thunk of HeadphonePairing2.Assets.file(_:)();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.view(_:)()
{
  return dispatch thunk of HeadphonePairing2.Assets.view(_:)();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.video(_:)()
{
  return dispatch thunk of HeadphonePairing2.Assets.video(_:)();
}

uint64_t dispatch thunk of HeadphonePairing2.Assets.videoView(_:)()
{
  return dispatch thunk of HeadphonePairing2.Assets.videoView(_:)();
}

uint64_t HeadphoneHardwareModel.init(productID:)()
{
  return HeadphoneHardwareModel.init(productID:)();
}

uint64_t type metadata accessor for HeadphoneHardwareModel()
{
  return type metadata accessor for HeadphoneHardwareModel();
}

uint64_t dispatch thunk of VideoPlaybackControllable.setPlaybackNotificationTimeRanges(_:handler:)()
{
  return dispatch thunk of VideoPlaybackControllable.setPlaybackNotificationTimeRanges(_:handler:)();
}

uint64_t dispatch thunk of VideoPlaybackControllable.startedHandler.setter()
{
  return dispatch thunk of VideoPlaybackControllable.startedHandler.setter();
}

uint64_t dispatch thunk of VideoPlaybackControllable.completedHandler.setter()
{
  return dispatch thunk of VideoPlaybackControllable.completedHandler.setter();
}

uint64_t dispatch thunk of VideoPlaybackControllable.transitionToFeatures()()
{
  return dispatch thunk of VideoPlaybackControllable.transitionToFeatures()();
}

uint64_t dispatch thunk of VideoPlaybackControllable.play()()
{
  return dispatch thunk of VideoPlaybackControllable.play()();
}

uint64_t dispatch thunk of VideoPlaybackControllable.stop()()
{
  return dispatch thunk of VideoPlaybackControllable.stop()();
}

uint64_t DefaultAssetRequestTimeout.getter()
{
  return DefaultAssetRequestTimeout.getter();
}

uint64_t PersonalizationAssetManager.PrePairingAssetInfo.scannedBluetoothData.getter()
{
  return PersonalizationAssetManager.PrePairingAssetInfo.scannedBluetoothData.getter();
}

uint64_t PersonalizationAssetManager.PrePairingAssetInfo.init(scannedBluetoothData:)()
{
  return PersonalizationAssetManager.PrePairingAssetInfo.init(scannedBluetoothData:)();
}

uint64_t type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo()
{
  return type metadata accessor for PersonalizationAssetManager.PrePairingAssetInfo();
}

uint64_t PersonalizationAssetManager.PostPairingAssetInfo.init(stableBluetoothIdentifier:)()
{
  return PersonalizationAssetManager.PostPairingAssetInfo.init(stableBluetoothIdentifier:)();
}

uint64_t type metadata accessor for PersonalizationAssetManager.PostPairingAssetInfo()
{
  return type metadata accessor for PersonalizationAssetManager.PostPairingAssetInfo();
}

uint64_t type metadata accessor for PersonalizationAssetManager.Asset()
{
  return type metadata accessor for PersonalizationAssetManager.Asset();
}

uint64_t type metadata accessor for PersonalizationAssetManager.AssetInfo()
{
  return type metadata accessor for PersonalizationAssetManager.AssetInfo();
}

uint64_t static PersonalizationAssetManager.defaultCacheDirectory.getter()
{
  return static PersonalizationAssetManager.defaultCacheDirectory.getter();
}

uint64_t PersonalizationAssetManager.__allocating_init(container:manateeContainer:cacheDirectory:)()
{
  return PersonalizationAssetManager.__allocating_init(container:manateeContainer:cacheDirectory:)();
}

uint64_t type metadata accessor for PersonalizationAssetManager()
{
  return type metadata accessor for PersonalizationAssetManager();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)()
{
  return dispatch thunk of HeadphoneProxFeatureManager.setProxCardShowedFeatures(deviceAddress:showedFeatures:)();
}

uint64_t type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature()
{
  return type metadata accessor for HeadphoneProxFeatureManager.HeadphoneProxFeature();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.updateDevice(for:deviceAddress:usecase:completion:)()
{
  return dispatch thunk of HeadphoneProxFeatureManager.updateDevice(for:deviceAddress:usecase:completion:)();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.updateRecord(configs:deviceAddress:usecase:completion:)()
{
  return dispatch thunk of HeadphoneProxFeatureManager.updateRecord(configs:deviceAddress:usecase:completion:)();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.connectedDevices.getter()
{
  return dispatch thunk of HeadphoneProxFeatureManager.connectedDevices.getter();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.shouldShowYodelCard(deviceAddress:)()
{
  return dispatch thunk of HeadphoneProxFeatureManager.shouldShowYodelCard(deviceAddress:)();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.setHeadGesturesConfig(deviceAddress:enabled:)()
{
  return dispatch thunk of HeadphoneProxFeatureManager.setHeadGesturesConfig(deviceAddress:enabled:)();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)()
{
  return dispatch thunk of HeadphoneProxFeatureManager.hearingRecordWithDevice(for:feature:)();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeadGesturesCard(deviceAddress:)()
{
  return dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeadGesturesCard(deviceAddress:)();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeartRateMonitor(deviceAddress:)()
{
  return dispatch thunk of HeadphoneProxFeatureManager.shouldShowHeartRateMonitor(deviceAddress:)();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.getWhatsNewNotShowedFeatures(deviceAddress:)()
{
  return dispatch thunk of HeadphoneProxFeatureManager.getWhatsNewNotShowedFeatures(deviceAddress:)();
}

uint64_t static HeadphoneProxFeatureManager.shared.getter()
{
  return static HeadphoneProxFeatureManager.shared.getter();
}

uint64_t type metadata accessor for HeadphoneProxFeatureManager()
{
  return type metadata accessor for HeadphoneProxFeatureManager();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t UIApplicationMain(_:_:_:_:)()
{
  return UIApplicationMain(_:_:_:_:)();
}

uint64_t UIBackgroundConfiguration.backgroundColor.setter()
{
  return UIBackgroundConfiguration.backgroundColor.setter();
}

uint64_t static UIBackgroundConfiguration.listGroupedCell()()
{
  return static UIBackgroundConfiguration.listGroupedCell()();
}

uint64_t type metadata accessor for UIBackgroundConfiguration()
{
  return type metadata accessor for UIBackgroundConfiguration();
}

uint64_t static UIListContentConfiguration.plainHeader()()
{
  return static UIListContentConfiguration.plainHeader()();
}

uint64_t static UIListContentConfiguration.cell()()
{
  return static UIListContentConfiguration.cell()();
}

uint64_t UIListContentConfiguration.text.setter()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t UIListContentConfiguration.image.setter()
{
  return UIListContentConfiguration.image.setter();
}

uint64_t type metadata accessor for UIListContentConfiguration()
{
  return type metadata accessor for UIListContentConfiguration();
}

uint64_t CurrentValueSubject.value.getter()
{
  return CurrentValueSubject.value.getter();
}

uint64_t CurrentValueSubject.value.setter()
{
  return CurrentValueSubject.value.setter();
}

uint64_t CurrentValueSubject.init(_:)()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t Publisher.sink(receiveCompletion:receiveValue:)()
{
  return Publisher.sink(receiveCompletion:receiveValue:)();
}

uint64_t Publisher.first(where:)()
{
  return Publisher.first(where:)();
}

uint64_t Publisher.timeout<A>(_:scheduler:options:customError:)()
{
  return Publisher.timeout<A>(_:scheduler:options:customError:)();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init(format:arguments:)()
{
  return String.init(format:arguments:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t String.init<A>(reflecting:)()
{
  return String.init<A>(reflecting:)();
}

Swift::String __swiftcall String.uppercased()()
{
  uint64_t v0 = String.uppercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)Double._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)()
{
  return RangeReplaceableCollection<>.replacing<A, B>(_:with:maxReplacements:)();
}

uint64_t UITableViewHeaderFooterView.contentConfiguration.setter()
{
  return UITableViewHeaderFooterView.contentConfiguration.setter();
}

uint64_t static CKContainer.AirTagsContainer.getter()
{
  return static CKContainer.AirTagsContainer.getter();
}

uint64_t static CKContainer.PersonalizationManateeContainer.getter()
{
  return static CKContainer.PersonalizationManateeContainer.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t UITableViewCell.contentConfiguration.setter()
{
  return UITableViewCell.contentConfiguration.setter();
}

uint64_t UITableViewCell.backgroundConfiguration.setter()
{
  return UITableViewCell.backgroundConfiguration.setter();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t UIContentSizeCategory.isAccessibilityCategory.getter()
{
  return UIContentSizeCategory.isAccessibilityCategory.getter();
}

NSNumber __swiftcall NSNumber.init(floatLiteral:)(Swift::Double floatLiteral)
{
  return (NSNumber)NSNumber.init(floatLiteral:)(floatLiteral);
}

NSNumber __swiftcall NSNumber.init(BOOLeanLiteral:)(Swift::Bool BOOLeanLiteral)
{
  return (NSNumber)NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t _NSRange.init<A, B>(_:in:)()
{
  return _NSRange.init<A, B>(_:in:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components(separatedBy:)()
{
  return StringProtocol.components(separatedBy:)();
}

uint64_t StringProtocol.localizedCompare<A>(_:)()
{
  return StringProtocol.localizedCompare<A>(_:)();
}

uint64_t StringProtocol.range<A>(of:options:range:locale:)()
{
  return StringProtocol.range<A>(of:options:range:locale:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static CommandLine.unsafeArgv.getter()
{
  return static CommandLine.unsafeArgv.getter();
}

uint64_t static CommandLine.argc.getter()
{
  return static CommandLine.argc.getter();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t print(_:separator:terminator:)()
{
  return print(_:separator:terminator:)();
}

uint64_t static Hasher._hash(seed:bytes:count:)()
{
  return static Hasher._hash(seed:bytes:count:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t AnalyticsSendEvent()
{
  return _AnalyticsSendEvent();
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DMakeScale(retstr, sx, sy, sz);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

uint64_t CFPrefs_CopyTypedValue()
{
  return _CFPrefs_CopyTypedValue();
}

CFTypeID CFStringGetTypeID(void)
{
  return _CFStringGetTypeID();
}

CGColorRef CGColorCreateGenericRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return _CGColorCreateGenericRGB(red, green, blue, alpha);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

uint64_t IsAppleInternalBuild()
{
  return _IsAppleInternalBuild();
}

uint64_t LogPrintF()
{
  return _LogPrintF();
}

uint64_t MKBGetDeviceLockState()
{
  return _MKBGetDeviceLockState();
}

uint64_t MobileGestalt_get_current_device()
{
  return _MobileGestalt_get_current_device();
}

uint64_t MobileGestalt_get_deviceSupportsWirelessSplitting()
{
  return _MobileGestalt_get_deviceSupportsWirelessSplitting();
}

uint64_t MobileGestalt_get_greenTeaDeviceCapability()
{
  return _MobileGestalt_get_greenTeaDeviceCapability();
}

uint64_t MobileGestalt_get_homeButtonType()
{
  return _MobileGestalt_get_homeButtonType();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t PRXCardPreferredSize()
{
  return _PRXCardPreferredSize();
}

uint64_t PRXIsPad()
{
  return _PRXIsPad();
}

uint64_t SBSRequestPasscodeUnlockUI()
{
  return _SBSRequestPasscodeUnlockUI();
}

uint64_t SFDeviceClassCodeGet()
{
  return _SFDeviceClassCodeGet();
}

uint64_t SFPlaybackTimeRangesFromFeaturesTimeURL()
{
  return _SFPlaybackTimeRangesFromFeaturesTimeURL();
}

uint64_t UpTicksToMilliseconds()
{
  return _UpTicksToMilliseconds();
}

uint64_t UpTicksToSeconds()
{
  return _UpTicksToSeconds();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _LogCategory_Initialize()
{
  return __LogCategory_Initialize();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void exit(int a1)
{
}

void free(void *a1)
{
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_enumerationMutation(id obj)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return [a1 URLForResource:withExtension:];
}

id objc_msgSend__isAudioProductCertsProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isAudioProductCertsProtocol:");
}

id objc_msgSend__isBluetoothClassicTransport_(void *a1, const char *a2, ...)
{
  return [a1 _isBluetoothClassicTransport];
}

id objc_msgSend__typeOfCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 _typeOfCurrentDevice];
}

id objc_msgSend_accessoryAttached(void *a1, const char *a2, ...)
{
  return _[a1 accessoryAttached];
}

id objc_msgSend_accessoryInfoForConnection_withReply_(void *a1, const char *a2, ...)
{
  return [a1 accessoryInfoForConnection:withReply:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _[a1 address];
}

id objc_msgSend_allowedEndpointUUIDs(void *a1, const char *a2, ...)
{
  return _[a1 allowedEndpointUUIDs];
}

id objc_msgSend_ams_dictionaryByAddingEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_dictionaryByAddingEntriesFromDictionary:");
}

id objc_msgSend_announceCalls(void *a1, const char *a2, ...)
{
  return _[a1 announceCalls];
}

id objc_msgSend_announceCallsState(void *a1, const char *a2, ...)
{
  return _[a1 announceCallsState];
}

id objc_msgSend_announcementHeadphonesSetting(void *a1, const char *a2, ...)
{
  return _[a1 announcementHeadphonesSetting];
}

id objc_msgSend_announcementSetting(void *a1, const char *a2, ...)
{
  return _[a1 announcementSetting];
}

id objc_msgSend_assistantIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistantIsEnabled];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return [a1 bundleForClass];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentNotificationSettingsCenter(void *a1, const char *a2, ...)
{
  return _[a1 currentNotificationSettingsCenter];
}

id objc_msgSend_disableAssistantWhilePasscodeLocked(void *a1, const char *a2, ...)
{
  return _[a1 disableAssistantWhilePasscodeLocked];
}

id objc_msgSend_getAACPCapabilityBit_(void *a1, const char *a2, ...)
{
  return [a1 getAACPCapabilityBit:];
}

id objc_msgSend_getCallManagementConfig(void *a1, const char *a2, ...)
{
  return _[a1 getCallManagementConfig];
}

id objc_msgSend_getDeviceColor_(void *a1, const char *a2, ...)
{
  return [a1 getDeviceColor];
}

id objc_msgSend_getFeatureName_(void *a1, const char *a2, ...)
{
  return [a1 getFeatureName:];
}

id objc_msgSend_hasUserSeenAnnounceCallsOptOutScreen(void *a1, const char *a2, ...)
{
  return _[a1 hasUserSeenAnnounceCallsOptOutScreen];
}

id objc_msgSend_hasUserSeenAnnounceMessagesOptOutScreen(void *a1, const char *a2, ...)
{
  return _[a1 hasUserSeenAnnounceMessagesOptOutScreen];
}

id objc_msgSend_hasUserSeenAnnounceNotificationsOptOutScreen(void *a1, const char *a2, ...)
{
  return _[a1 hasUserSeenAnnounceNotificationsOptOutScreen];
}

id objc_msgSend_hasW1Chip(void *a1, const char *a2, ...)
{
  return _[a1 hasW1Chip];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_initWithProductID_(void *a1, const char *a2, ...)
{
  return [a1 initWithProductID:];
}

id objc_msgSend_isAnnounceEnabledForHeadphones(void *a1, const char *a2, ...)
{
  return _[a1 isAnnounceEnabledForHeadphones];
}

id objc_msgSend_isAnnounceMessagesEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAnnounceMessagesEnabled];
}

id objc_msgSend_isAnnounceMessagesSupported(void *a1, const char *a2, ...)
{
  return _[a1 isAnnounceMessagesSupported];
}

id objc_msgSend_isAnnounceSupported(void *a1, const char *a2, ...)
{
  return _[a1 isAnnounceSupported];
}

id objc_msgSend_isCurrentLocaleNativelySupported(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentLocaleNativelySupported];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isProxCardEnrollmentSupportedForDevice_(void *a1, const char *a2, ...)
{
  return [a1 isProxCardEnrollmentSupportedForDevice:];
}

id objc_msgSend_isProxCardShowedForFeature_(void *a1, const char *a2, ...)
{
  return [a1 isProxCardShowedForFeature:];
}

id objc_msgSend_isProxCardSupportedForFeature_(void *a1, const char *a2, ...)
{
  return [a1 isProxCardSupportedForFeature:];
}

id objc_msgSend_isSiriAllowedWhileLocked(void *a1, const char *a2, ...)
{
  return _[a1 isSiriAllowedWhileLocked];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_notificationSystemSettings(void *a1, const char *a2, ...)
{
  return _[a1 notificationSystemSettings];
}

id objc_msgSend_packageWithContentsOfURL_type_options_error_(void *a1, const char *a2, ...)
{
  return [a1 packageWithContentsOfURL:type:options:error:];
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return _[a1 pairedDevices];
}

id objc_msgSend_productHasW1Chip_(void *a1, const char *a2, ...)
{
  return [a1 productHasW1Chip];
}

id objc_msgSend_registerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 registerDelegate];
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _[a1 semanticContentAttribute];
}

id objc_msgSend_setAdaptiveVolumeMode_(void *a1, const char *a2, ...)
{
  return [a1 setAdaptiveVolumeMode:];
}

id objc_msgSend_setAllowedEndpointUUIDs_(void *a1, const char *a2, ...)
{
  return [a1 setAllowedEndpointUUIDs:];
}

id objc_msgSend_setAnnounceCalls_(void *a1, const char *a2, ...)
{
  return [a1 setAnnounceCalls:];
}

id objc_msgSend_setAnnouncementSetting_(void *a1, const char *a2, ...)
{
  return [a1 setAnnouncementSetting:];
}

id objc_msgSend_setListeningMode_(void *a1, const char *a2, ...)
{
  return [a1 setListeningMode:];
}

id objc_msgSend_setListeningModeConfigs_(void *a1, const char *a2, ...)
{
  return [a1 setListeningModeConfigs:];
}

id objc_msgSend_setNotificationSystemSettings_(void *a1, const char *a2, ...)
{
  return [a1 setNotificationSystemSettings:];
}

id objc_msgSend_setProxCardShowed_forDevice_(void *a1, const char *a2, ...)
{
  return [a1 setProxCardShowed:forDevice:];
}

id objc_msgSend_setShowPreviewsSetting_(void *a1, const char *a2, ...)
{
  return [a1 setShowPreviewsSetting:];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferences];
}

id objc_msgSend_showPreviewsSetting(void *a1, const char *a2, ...)
{
  return _[a1 showPreviewsSetting];
}

id objc_msgSend_siriNotificationsPrompted(void *a1, const char *a2, ...)
{
  return _[a1 siriNotificationsPrompted];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_symbolForTypeIdentifier_error_(void *a1, const char *a2, ...)
{
  return [a1 symbolForTypeIdentifier:error:];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userInterfaceLayoutDirectionForSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return [a1 userInterfaceLayoutDirectionForSemanticContentAttribute:];
}

id objc_msgSend_voiceTriggerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 voiceTriggerEnabled];
}