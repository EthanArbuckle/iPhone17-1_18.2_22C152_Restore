id sub_1000056B4(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = a2;
  if (objc_opt_isKindOfClass()) {
    v3 = v2;
  }
  else {
    v3 = 0;
  }
  v4 = v3;

  return v4;
}

void sub_1000060D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000060F4(uint64_t a1, void *a2)
{
  v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleFaceAttentionEvent:v3];
}

void sub_100006240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100006260(uint64_t a1, void *a2)
{
  v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleTouchAttentionEvent:v3];
}

void sub_1000063AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000063CC(uint64_t a1, void *a2)
{
  v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _handleButtonPressAttentionEvent:v3];
}

void sub_100006660(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = [WeakRetained delegate];
    id v3 = objc_loadWeakRetained((id *)(a1 + 32));
    [v2 userAttentionController:v3 didLoseAttentionWithEvent:*(void *)(a1 + 40)];
  }
  else
  {
    if (!*(void *)(a1 + 48)) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = [WeakRetained delegate];
    id v3 = objc_loadWeakRetained((id *)(a1 + 32));
    [v2 userAttentionController:v3 didGainAttentionWithEvent:*(void *)(a1 + 48)];
  }
}

void sub_100006810(uint64_t a1)
{
  if (*(void *)(a1 + 40))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = [WeakRetained delegate];
    id v3 = objc_loadWeakRetained((id *)(a1 + 32));
    [v2 userAttentionController:v3 didLoseAttentionWithEvent:*(void *)(a1 + 40)];
  }
  else
  {
    if (!*(void *)(a1 + 48)) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = [WeakRetained delegate];
    id v3 = objc_loadWeakRetained((id *)(a1 + 32));
    [v2 userAttentionController:v3 didGainAttentionWithEvent:*(void *)(a1 + 48)];
  }
}

void sub_1000069D8(uint64_t a1)
{
  if (*(void *)(a1 + 48))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v2 = [WeakRetained delegate];
    id v3 = objc_loadWeakRetained((id *)(a1 + 40));
    [v2 userAttentionController:v3 didGainAttentionWithEvent:*(void *)(a1 + 48)];
  }
  else
  {
    if (*(void *)(a1 + 32)) {
      return;
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v2 = [WeakRetained delegate];
    id v3 = objc_loadWeakRetained((id *)(a1 + 40));
    [v2 userAttentionController:v3 didLoseAttentionWithEvent:0];
  }
}

void sub_100006C44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if ((unint64_t)(v1 - 2) >= 2)
  {
    if (v1 == 1)
    {
      v7 = (id *)(a1 + 32);
      id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
      [WeakRetained _setDeviceLowered:0];

      id v9 = objc_loadWeakRetained(v7);
      id v14 = 0;
      unsigned __int8 v10 = [v9 stopIfNeededForTypes:1 error:&v14];
      id v6 = v14;

      if ((v10 & 1) == 0 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
        sub_1000B6E9C();
      }
      id v11 = objc_loadWeakRetained(v7);
      v12 = [v11 delegate];
      id v13 = objc_loadWeakRetained(v7);
      [v12 userAttentionController:v13 didGainAttentionWithEvent:2];
    }
    else
    {
      id v6 = 0;
    }
  }
  else
  {
    v2 = (id *)(a1 + 32);
    id v3 = objc_loadWeakRetained((id *)(a1 + 32));
    [v3 _setDeviceLowered:1];

    id v4 = objc_loadWeakRetained(v2);
    id v15 = 0;
    unsigned __int8 v5 = [v4 _restartFaceAttentionAwarenessClient:&v15];
    id v6 = v15;

    if ((v5 & 1) == 0 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000B6E28();
    }
  }
}

void sub_1000070F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v3 = *(void *)(a1 + 56);
  id v11 = 0;
  [WeakRetained startIfNeededForTypes:v3 error:&v11];
  id v4 = v11;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000071CC;
  block[3] = &unk_100142D48;
  unsigned __int8 v5 = *(NSObject **)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v9 = v4;
  id v10 = v6;
  id v7 = v4;
  dispatch_async(v5, block);
}

uint64_t sub_1000071CC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000071F4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

double sub_100007210(double a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v3 = +[NSProcessInfo processInfo];
  [v3 systemUptime];
  double v5 = a1 - (Current - v4);

  return v5;
}

void sub_100008154(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    double v4 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = *(void *)(a1 + 32);
      int v6 = 136315650;
      id v7 = "+[SRUIDSurveyNotificationUtility postSiriInternalUIDSurveyNotification:activationHistory:requestSource:dismis"
           "salReason:]_block_invoke";
      __int16 v8 = 2112;
      uint64_t v9 = v5;
      __int16 v10 = 2112;
      id v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s Failed to post notification %@ with error %@", (uint8_t *)&v6, 0x20u);
    }
  }
}

void sub_100008A90(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 216) setAdditionalSafeAreaInsets:*(double *)(a1 + 40), 0.0, 0.0, 0.0];
  v2 = [*(id *)(*(void *)(a1 + 32) + 216) view];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(*(void *)(a1 + 32) + 216) view];
  [v3 layoutIfNeeded];
}

void sub_100008ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100008EF8(uint64_t a1)
{
  id v3 = [objc_alloc((Class)SASRequestOptions) initWithRequestSource:48 uiPresentationIdentifier:@"com.apple.siri.SystemAssistantExperience"];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleVoiceActivationRequestWithRequestOptions:v3];
}

id sub_1000097A0()
{
  v2[0] = UIKeyboardWillChangeFrameNotification;
  v2[1] = UIKeyboardDidChangeFrameNotification;
  v0 = +[NSArray arrayWithObjects:v2 count:2];

  return v0;
}

uint64_t sub_10000A88C(uint64_t a1)
{
  v2 = (id *)(a1 + 48);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  double v4 = [WeakRetained viewState];
  uint64_t v5 = [v4 activeSmartDialogView];
  id v6 = [*(id *)(a1 + 32) copy];
  [v5 setConversationSnippetViews:v6];

  id v7 = objc_loadWeakRetained(v2);
  __int16 v8 = [v7 viewState];
  uint64_t v9 = [v8 activeSmartDialogView];
  [v9 setNeedsLayout];

  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    id v11 = *(uint64_t (**)(void))(result + 16);
    return v11();
  }
  return result;
}

void sub_10000AC10(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _performResultAnimation:*(unsigned __int8 *)(a1 + 40)];
}

id sub_10000B140(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 128);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10000B21C;
  v6[3] = &unk_100142E60;
  char v7 = *(unsigned char *)(a1 + 40);
  v6[4] = v1;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000B310;
  v4[3] = &unk_100142EB0;
  v4[4] = v1;
  char v5 = v7;
  return +[UIView _animateUsingSpringBehavior:v2 tracking:0 animations:v6 completion:v4];
}

void sub_10000B21C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = [*(id *)(a1 + 32) containerView];
    id v3 = [v2 blurrableView];
    [v3 setAlpha:1.0];

    double v4 = [*(id *)(a1 + 32) containerView];
    [v4 frame];
    double v6 = v5;
    char v7 = [*(id *)(a1 + 32) containerView];
    [v7 frame];
    double v9 = v8;
    __int16 v10 = [*(id *)(a1 + 32) containerView];
    [v10 setFrame:0.0, 0.0, v6, v9];
  }
  id v11 = [*(id *)(a1 + 32) containerView];
  [v11 transitionToResult];
}

id *sub_10000B310(id *result, int a2)
{
  if (a2)
  {
    uint64_t v2 = result;
    id v3 = [result[4] containerView];
    [v3 applyDestOverFilter:0];

    double v4 = [v2[4] containerView];
    [v4 cleanupLoadingTransitionIfNeeded];

    double v5 = [*((id *)v2[4] + 25) activeSmartDialogView];
    [v5 animateAppearanceIfNeeded];

    [*((id *)v2[4] + 25) setSmartDialogAnimationInProgress:0];
    [v2[4] _executePendingBlocksForTransition];
    if (*((unsigned char *)v2 + 40))
    {
      [v2[4] _addFeedbackButton];
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_10000B434;
      v6[3] = &unk_100142E88;
      v6[4] = v2[4];
      +[UIView animateWithDuration:v6 animations:1.0];
    }
    return (id *)[v2[4] setRevealRecognizedSpeech:0];
  }
  return result;
}

void sub_10000B434(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) containerView];
  [v1 firstSnippetMaterialAnimation];
}

void sub_10000B6C0(uint64_t a1)
{
  [*(id *)(a1 + 32) _executePendingBlocksForTransition];
  uint64_t v2 = +[UIViewSpringAnimationBehavior behaviorWithDampingRatio:1.0 response:0.0];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10000B7CC;
  v5[3] = &unk_100142E88;
  uint64_t v6 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10000B830;
  v3[3] = &unk_100142EB0;
  v3[4] = v6;
  char v4 = *(unsigned char *)(a1 + 40);
  +[UIView _animateUsingSpringBehavior:v2 tracking:0 animations:v5 completion:v3];
}

void sub_10000B7CC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) containerView];
  [v2 setTransitionLoadingToResultWithResultSize:*(double *)(*(void *)(a1 + 32) + 312), *(double *)(*(void *)(a1 + 32) + 320)];
}

void *sub_10000B830(void *result, int a2)
{
  if (a2)
  {
    uint64_t v2 = result[4];
    uint64_t v3 = *(void *)(v2 + 128);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10000B910;
    v6[3] = &unk_100142E88;
    v6[4] = v2;
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_10000B9A8;
    v4[3] = &unk_100142EB0;
    v4[4] = v2;
    char v5 = *((unsigned char *)result + 40);
    return +[UIView _animateUsingSpringBehavior:v3 tracking:0 animations:v6 completion:v4];
  }
  return result;
}

void sub_10000B910(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) containerView];
  [v2 transitionToResult];

  uint64_t v3 = [*(id *)(*(void *)(a1 + 32) + 200) activeSmartDialogView];
  [v3 setNeedsLayout];

  id v4 = [*(id *)(*(void *)(a1 + 32) + 200) activeSmartDialogView];
  [v4 layoutIfNeeded];
}

void sub_10000B9A8(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 136315138;
      uint64_t v6 = "-[SRSystemAssistantExperienceViewController performSinglePillExpandAnimation]_block_invoke_5";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #droplet expanding latency pill, no previous smart dialog", (uint8_t *)&v5, 0xCu);
    }
    [*(id *)(*(void *)(a1 + 32) + 200) setSmartDialogAnimationInProgress:0];
    id v4 = [*(id *)(a1 + 32) containerView];
    [v4 applyDestOverFilter:0];

    if (*(unsigned char *)(a1 + 40)) {
      [*(id *)(a1 + 32) _addFeedbackButton];
    }
  }
}

void sub_10000BC40(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) containerView];
  [v1 transitionFromResultToCollapseLoading];
}

void sub_10000BC84(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) containerView];
  [v2 startLatencyLightOnActivePill];

  id v3 = [*(id *)(a1 + 32) containerView];
  [v3 cleanupResultTransitionIfNeeded];
}

id sub_10000BEFC(uint64_t a1)
{
  if (SiriSharedUIReducedMotionEnabled())
  {
    uint64_t v2 = [*(id *)(a1 + 32) containerView];
    double v3 = SiriSharedUIMitosisDuration * 1.5;
    *(float *)&double v3 = SiriSharedUIMitosisDuration * 1.5;
    [v2 reduceMotionCarouselWithDuration:0 isFirstSnippet:v3];
  }
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(v4 + 136);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10000C010;
  v8[3] = &unk_100142E88;
  v8[4] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10000C078;
  v7[3] = &unk_100142ED8;
  v7[4] = v4;
  return +[UIView _animateUsingSpringBehavior:v5 tracking:1 animations:v8 completion:v7];
}

void sub_10000C010(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) containerView];
  [v2 transitionMergedResults];

  id v3 = [*(id *)(a1 + 32) containerView];
  [v3 postPillMergeBounce];
}

id sub_10000C078(uint64_t a1)
{
  return [*(id *)(a1 + 32) _executePendingBlocksForTransition];
}

void sub_10000C080(uint64_t a1)
{
  uint64_t v2 = +[UIViewSpringAnimationBehavior behaviorWithDampingRatio:1.0 response:0.0];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000C17C;
  v4[3] = &unk_100142E88;
  uint64_t v5 = *(void *)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10000C1C0;
  v3[3] = &unk_100142ED8;
  v3[4] = v5;
  +[UIView _animateUsingSpringBehavior:v2 tracking:0 animations:v4 completion:v3];
}

void sub_10000C17C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) containerView];
  [v1 setMergedResultsForTransition];
}

id sub_10000C1C0(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 120) = 1;
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 144);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10000C2A4;
  v5[3] = &unk_100142E88;
  void v5[4] = v1;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000C33C;
  v4[3] = &unk_100142ED8;
  void v4[4] = v1;
  return +[UIView _animateUsingSpringBehavior:v2 tracking:0 animations:v5 completion:v4];
}

void sub_10000C2A4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) containerView];
  [v2 transitionToResult];

  id v3 = [*(id *)(*(void *)(a1 + 32) + 200) activeSmartDialogView];
  [v3 setNeedsLayout];

  id v4 = [*(id *)(*(void *)(a1 + 32) + 200) activeSmartDialogView];
  [v4 layoutIfNeeded];
}

void sub_10000C33C(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = 136315138;
    uint64_t v6 = "-[SRSystemAssistantExperienceViewController performPillMergeAndCrossfadeAnimation]_block_invoke_8";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s #droplet merging latency pill with existing smart dialog", (uint8_t *)&v5, 0xCu);
  }
  id v3 = [*(id *)(a1 + 32) containerView];
  [v3 cleanupResultTransitionIfNeeded];

  [*(id *)(a1 + 32) _trimFinalSmartDialogs];
  [*(id *)(*(void *)(a1 + 32) + 200) setSmartDialogAnimationInProgress:0];
  id v4 = [*(id *)(a1 + 32) containerView];
  [v4 applyDestOverFilter:0];
}

id sub_10000C5FC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 128);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10000C68C;
  v4[3] = &unk_100142E88;
  void v4[4] = v1;
  return +[UIView _animateUsingSpringBehavior:v2 tracking:0 animations:v4 completion:0];
}

void sub_10000C68C(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) containerView];
  [v1 transitionVoiceLoadingToLoading];
}

void sub_10000C8A0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000C8B8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10000C8C8(uint64_t a1)
{
}

void sub_10000C8D0(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) containerView];
  uint64_t v2 = [v5 transitionToRemovedResponseElements:*(void *)(a1 + 48)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10000C93C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) containerView];
  [v2 cleanupResponseElementsByIds:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];

  [*(id *)(*(void *)(a1 + 32) + 200) removeResponseElements:*(void *)(a1 + 48)];
  uint64_t v3 = [*(id *)(a1 + 32) delegate];
  unsigned int v4 = [v3 isPresentingVisualIntelligenceCamera];

  if (v4)
  {
    id v5 = [*(id *)(a1 + 32) containerView];
    [v5 didDismissResults];
  }
}

void sub_10000CC34(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) textFieldContainerView];
  [v1 transitionToSuggestionsCollapsed];
}

void sub_10000D394(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) textFieldContainerView];
  [v2 transitionToUpdatedContentInset];

  id v3 = [*(id *)(a1 + 32) containerView];
  [v3 transitionToUpdatedContentInset];
}

void sub_10000DB14(id a1, SiriSharedUIViewControlling *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector()) {
    [(SiriSharedUIViewControlling *)v2 siriDidDeactivate];
  }
}

void sub_10000E1BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000E1E8(uint64_t a1)
{
  id v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained view];
  unsigned int v4 = [v3 traitCollection];
  unsigned int v5 = [v4 isAmbientPresented];

  if (v5)
  {
    id v6 = objc_loadWeakRetained(v1);
    [v6 _updateAmbientAvailability];
  }
}

void sub_10000EB40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10000EB64(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10000EC28;
  block[3] = &unk_100142FB8;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  __int16 v8 = *(_WORD *)(a1 + 40);
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v7);
}

void sub_10000EC28(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      id v4 = *(void **)(a1 + 32);
      unsigned int v5 = v3;
      id v6 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v4 count]);
      int v7 = 136315394;
      __int16 v8 = "-[SRSystemAssistantExperienceViewController _setUpConversationStarterSuggestions:isVoiceTrigger:invocationSou"
           "rce:]_block_invoke_2";
      __int16 v9 = 2112;
      __int16 v10 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s #suggestions - %@ views fetched", (uint8_t *)&v7, 0x16u);
    }
    objc_storeStrong(WeakRetained + 8, *(id *)(a1 + 32));
    if (*((unsigned char *)WeakRetained + 42) || *(unsigned char *)(a1 + 48) || !*(unsigned char *)(a1 + 49))
    {
      [WeakRetained _addSuggestionsToContainer];
      if (!*(unsigned char *)(a1 + 49)) {
        [WeakRetained[13] setBool:1 forKey:SRUIFPreferencesConversationStartersShownSinceOSInstalled];
      }
    }
  }
}

id sub_10000EF24(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 256) transitionToSuggestionsExpanded];
}

void sub_10000F180(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) containerView];
  [v1 transitionToSuggestionsCollapsed];
}

void sub_10000F1C4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v3 = *(void *)(a1 + 40);
    unsigned int v5 = *(void **)(v4 + 48);
    uint64_t v6 = *(void *)(a1 + 48);
    uint64_t v7 = *(unsigned __int8 *)(a1 + 64);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10000F268;
    v8[3] = &unk_100143008;
    v8[4] = WeakRetained;
    void v8[5] = v4;
    [v5 fetchConversationContinuerViewsWithRequestId:v3 currentMode:v6 deviceLocked:v7 completion:v8];
  }
}

void sub_10000F268(uint64_t a1, void *a2)
{
  id v4 = a2;
  unsigned int v5 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v12 = "-[SRSystemAssistantExperienceViewController _setUpConversationContinuerSuggestions:forRequestId:currentMode:]_block_invoke_3";
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s #suggestions: Adding suggestions continuer views to container", buf, 0xCu);
  }
  uint64_t v6 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v6 + 45))
  {
    objc_storeStrong((id *)(v6 + 64), a2);
    uint64_t v7 = [*(id *)(a1 + 32) textFieldContainerView];
    [v7 setSuggestions:*(void *)(*(void *)(a1 + 32) + 64)];

    uint64_t v6 = *(void *)(a1 + 32);
  }
  *(unsigned char *)(v6 + 41) = 1;
  [*(id *)(a1 + 32) _suggestionsWereShown];
  if ([*(id *)(*(void *)(a1 + 32) + 64) count])
  {
    uint64_t v8 = *(void *)(a1 + 40);
    if (*(unsigned char *)(v8 + 192))
    {
      uint64_t v9 = *(void *)(v8 + 152);
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_10000F430;
      v10[3] = &unk_100142E88;
      v10[4] = *(void *)(a1 + 32);
      +[UIView _animateUsingSpringBehavior:v9 tracking:0 animations:v10 completion:0];
    }
  }
}

void sub_10000F430(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) textFieldContainerView];
  [v1 transitionToSuggestionsExpanded];
}

void sub_10000F5C4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_10000F5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v6 = WeakRetained;
    [WeakRetained[32] suggestionTapAnimationWithIndex:a4 isTouchUp:0];
    id WeakRetained = v6;
  }
}

void sub_10000F654(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  id v7 = a2;
  id v8 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  __int16 v10 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained[32] suggestionTapAnimationWithIndex:a4 isTouchUp:1];
    if (([v10[25] activeSmartDialogIsLatencyPill] & 1) == 0)
    {
      *((unsigned char *)v10 + 44) = 1;
      [v10[33] setText:v7];
      [v10[33] makeTextViewVisible:0];
      id v11 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315394;
        v17 = "-[SRSystemAssistantExperienceViewController createSuggestionsViewProvider]_block_invoke_2";
        __int16 v18 = 2048;
        uint64_t v19 = a4;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "%s #droplet animating suggestion #%ld to middle", buf, 0x16u);
      }
      id v12 = v10[32];
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_10000F82C;
      v13[3] = &unk_100143080;
      v13[4] = v10;
      id v14 = v7;
      id v15 = v8;
      [v12 transitionToSuggestionsCollapsedWithIndex:a4 animated:1 completionBlock:v13];
    }
  }
}

id sub_10000F82C(void *a1)
{
  [*(id *)(a1[4] + 256) removeSuggestions];
  [*(id *)(a1[4] + 264) makeTextViewVisible:1];
  [*(id *)(a1[4] + 264) setText:a1[5]];
  uint64_t v2 = *(void **)(a1[4] + 264);
  uint64_t v3 = a1[6];

  return _[v2 promptEntryViewDidSubmitWithoutViewForSuggestionWithInvocationText:v3];
}

void sub_10000F9FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 siriDidStartSpeakingWithIdentifier:*(void *)(a1 + 32)];
  }
}

void sub_10000FB34(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 siriDidStopSpeakingWithIdentifier:*(void *)(a1 + 32) speechQueueIsEmpty:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_10000FC60(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 siriDidUpdateASRWithRecognition:*(void *)(a1 + 32)];
  }
}

void sub_10000FD2C(id a1, SiriSharedUIViewControlling *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector()) {
    [(SiriSharedUIViewControlling *)v2 siriDidTapOutsideContent];
  }
}

void sub_10000FDE8(id a1, SiriSharedUIViewControlling *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector()) {
    [(SiriSharedUIViewControlling *)v2 siriWillStartRequest];
  }
}

void sub_10000FEA4(id a1, SiriSharedUIViewControlling *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector())
  {
    id v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 136315138;
      unsigned int v5 = "-[SRSystemAssistantExperienceViewController siriIsIdleAndQuiet]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #compact: Calling Siri Idle", (uint8_t *)&v4, 0xCu);
    }
    [(SiriSharedUIViewControlling *)v2 siriIsIdleAndQuiet];
  }
}

void sub_100012C90(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) containerView];
  [v2 updateLoadingPillSizeWithCandidateSize:*(double *)(a1 + 40), *(double *)(a1 + 48)];
}

void sub_100012CE4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40)) {
    return;
  }
  if ([*(id *)(a1 + 32) alwaysShowRecognizedSpeech])
  {
    if (![*(id *)(*(void *)(a1 + 32) + 200) activeSmartDialogIsLatencyPill]) {
      return;
    }
LABEL_4:
    id v2 = *(void **)(*(void *)(a1 + 32) + 248);
    [v2 startLatencyLightOnActivePill];
    return;
  }
  id v4 = [*(id *)(*(void *)(a1 + 32) + 200) activeSmartDialogView];
  if ([v4 revealRecognizedSpeech])
  {
    unsigned __int8 v3 = [*(id *)(*(void *)(a1 + 32) + 200) activeSmartDialogIsLatencyPill];

    if ((v3 & 1) == 0) {
      return;
    }
    goto LABEL_4;
  }
}

id sub_100012DC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void *)(v1 + 128);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100012E9C;
  v5[3] = &unk_100143158;
  void v5[4] = v1;
  long long v6 = *(_OWORD *)(a1 + 40);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100012EF0;
  v4[3] = &unk_100142ED8;
  void v4[4] = v1;
  return +[UIView _animateUsingSpringBehavior:v2 tracking:0 animations:v5 completion:v4];
}

void sub_100012E9C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) containerView];
  [v2 updateResultSizeWithResultSize:*(double *)(a1 + 40), *(double *)(a1 + 48)];
}

void sub_100012EF0(uint64_t a1, int a2)
{
  if (a2)
  {
    unsigned __int8 v3 = [*(id *)(a1 + 32) containerView];
    [v3 cleanupLoadingTransitionIfNeeded];

    id v4 = [*(id *)(*(void *)(a1 + 32) + 200) activeSmartDialogView];
    [v4 animateAppearanceIfNeeded];
  }
}

void sub_100013828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001384C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    unint64_t v5 = (unint64_t)[v3 count];
    long long v6 = WeakRetained + 7;
    if ((unint64_t)[WeakRetained[7] count] | v5)
    {
      id v8 = +[NSMutableArray arrayWithCapacity:v5];
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      v21[2] = sub_100013BDC;
      v21[3] = &unk_100143180;
      id v9 = v8;
      id v22 = v9;
      [v3 enumerateObjectsUsingBlock:v21];
      if ((id)v5 == [*v6 count] && objc_msgSend(*v6, "isEqualToArray:", v9))
      {
        __int16 v10 = AFSiriLogContextConnection;
        if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEBUG)) {
          sub_1000B7020(v10);
        }
      }
      else
      {
        objc_storeStrong(WeakRetained + 7, v8);
        id v11 = +[NSMutableArray arrayWithCapacity:v5];
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        v19[2] = sub_100013C34;
        v19[3] = &unk_100143180;
        id v12 = v11;
        id v20 = v12;
        [v3 enumerateObjectsUsingBlock:v19];
        id v13 = AFSiriLogContextConnection;
        if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
        {
          id v14 = *v6;
          *(_DWORD *)buf = 136315394;
          v24 = "-[SRSystemAssistantExperienceViewController didChangeText:]_block_invoke_2";
          __int16 v25 = 2112;
          id v26 = v14;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s #suggestions: Adding suggestions autocomplete views to container, %@", buf, 0x16u);
        }
        objc_storeStrong(WeakRetained + 8, v11);
        if (*(unsigned char *)(*(void *)(a1 + 32) + 45))
        {
          id v15 = [WeakRetained textFieldContainerView];
          [v15 setSuggestions:WeakRetained[8]];

          *((unsigned char *)WeakRetained + 41) = 1;
        }
        [WeakRetained _suggestionsWereShown];
        uint64_t v16 = *(void *)(a1 + 32);
        if (*(unsigned char *)(v16 + 192))
        {
          uint64_t v17 = *(void *)(v16 + 152);
          v18[0] = _NSConcreteStackBlock;
          v18[1] = 3221225472;
          v18[2] = sub_100013C8C;
          v18[3] = &unk_100142E88;
          v18[4] = WeakRetained;
          +[UIView _animateUsingSpringBehavior:v17 tracking:0 animations:v18 completion:0];
        }
        else
        {
          [WeakRetained[32] transitionToSuggestionsCollapsedWithIndex:-1 animated:0 completionBlock:&stru_1001431C0];
        }
      }
    }
    else
    {
      id v7 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEBUG)) {
        sub_1000B6F9C(v7);
      }
    }
  }
}

void sub_100013BDC(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 suggestionText];
  [v2 addObject:v3];
}

void sub_100013C34(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = [a2 view];
  [v2 addObject:v3];
}

id sub_100013C8C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 256) transitionToSuggestionsExpanded];
}

void sub_100013D3C(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 32);
  int v2 = v1[192];
  id v3 = [v1 textFieldContainerView];
  id v4 = v3;
  if (v2) {
    [v3 transitionToSuggestionsExpanded];
  }
  else {
    [v3 transitionToSuggestionsCollapsedWithIndex:-1 animated:1 completionBlock:&stru_100143208];
  }
}

void sub_100013F58(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) textFieldContainerView];
  [v1 transitionToSuggestionsCollapsedWithIndex:-1 animated:1 completionBlock:&stru_100143228];
}

void sub_100013FB0(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) delegate];
  [v2 viewController:*(void *)(a1 + 32) willChangeKeyboardVisibility:0];

  id v3 = [*(id *)(a1 + 32) textFieldContainerView];
  [v3 removeSuggestions];

  id v4 = [*(id *)(a1 + 32) textFieldContainerView];
  unint64_t v5 = [v4 keyboardLayoutGuide];
  [v5 removeLightEffectsView];

  long long v6 = [*(id *)(a1 + 32) textFieldContainerView];
  [v6 setTextFieldHeight:0.0];

  id v7 = [*(id *)(a1 + 32) textFieldContainerView];
  [v7 setTextFieldWithTextFieldView:0];
}

void sub_100014298(uint64_t a1)
{
  [*(id *)(a1 + 32) _teardownTypeToSiriUI];
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 siriResultsDidDismissInTamale];
}

void sub_100014894(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v2 = [WeakRetained viewState];
  id v3 = [v2 activeSmartDialogView];
  [v3 setServerUtterances:*(void *)(a1 + 32)];
}

void sub_100014C8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100014CB0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v3 = *(id *)(a1 + 32);
    id v4 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v14;
      do
      {
        id v7 = 0;
        do
        {
          if (*(void *)v14 != v6) {
            objc_enumerationMutation(v3);
          }
          id v8 = *(void **)(*((void *)&v13 + 1) + 8 * (void)v7);
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            id v9 = v8;
            __int16 v10 = [v9 view];
            id v11 = [WeakRetained view];
            unsigned int v12 = [v10 isDescendantOfView:v11];

            if (v12) {
              [v9 updateBackgroundIfNeeded];
            }
          }
          id v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        id v5 = [v3 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v5);
    }
  }
}

uint64_t sub_100015B7C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100015D14(uint64_t a1)
{
  id v2 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v4 = 136315394;
    id v5 = "+[SRSiriDebugManager _notifySiriDebugAppWithMessage:completionHandler:]_block_invoke";
    __int16 v6 = 2112;
    uint64_t v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s SiriDebug: %@ task delivered.", (uint8_t *)&v4, 0x16u);
  }
}

void sub_100015DD0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v10 = 136315906;
    id v11 = "+[SRSiriDebugManager _notifySiriDebugAppWithMessage:completionHandler:]_block_invoke";
    __int16 v12 = 2112;
    uint64_t v13 = v8;
    __int16 v14 = 2112;
    id v15 = v5;
    __int16 v16 = 2112;
    id v17 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s SiriDebug: %@ completed with response %@ and error %@.", (uint8_t *)&v10, 0x2Au);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    (*(void (**)(uint64_t, BOOL))(v9 + 16))(v9, v6 == 0);
  }
}

void sub_100015EDC(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v4;
  if (v3 && v4)
  {
    if (qword_100171DE8 != -1) {
      dispatch_once(&qword_100171DE8, &stru_1001432C0);
    }
    id v6 = qword_100171DE0;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10001600C;
    v7[3] = &unk_100143310;
    id v8 = v3;
    id v9 = v5;
    dispatch_async(v6, v7);
  }
}

void sub_100015FCC(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("com.apple.siri.SerialUserAttentionSupportQueue", 0);
  uint64_t v2 = qword_100171DE0;
  qword_100171DE0 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_10001600C(uint64_t a1)
{
  id v2 = +[AWAttentionAwarenessConfiguration supportedEvents];
  unsigned __int8 v3 = +[CMWakeGestureManager isWakeGestureAvailable];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000160C4;
  block[3] = &unk_1001432E8;
  id v4 = *(NSObject **)(a1 + 32);
  id v6 = *(id *)(a1 + 40);
  id v7 = v2;
  unsigned __int8 v8 = v3;
  dispatch_async(v4, block);
}

uint64_t sub_1000160C4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

void sub_100016740(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100016768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  qword_100172C70 = *(void *)(a1 + 48);
  *(unsigned char *)(*(void *)(a1 + 32) + 16) = *(unsigned char *)(a1 + 56);
  id v6 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _cancelUserTouchInteractionTimeout];

  id v10 = +[SUICAutoDismissalStrategy strategyWithMode:*(void *)(a1 + 48) supportedAttentionAwarenessEvents:a2 deviceSupportsRaiseGestureDetection:a3 isWiredMicOrBTHeadsetOrWx:*(unsigned __int8 *)(a1 + 56)];
  [v10 setMinimumIdleTimeInterval:*(double *)(*(void *)(a1 + 32) + 32)];
  id v8 = objc_loadWeakRetained(v6);
  [v10 setDelegate:v8];

  id v9 = objc_loadWeakRetained(v6);
  [v9 _setAutoDismissalStrategy:v10];
}

void sub_100017218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10001723C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v8 = [WeakRetained userAttentionController];

  if (!v8)
  {
    id v9 = objc_loadWeakRetained(v6);
    id v10 = [v9 _autoDismissalStrategy];
    [v10 idleTimeInterval];
    double v12 = v11;

    uint64_t v13 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      v27 = "-[SRCompactAutoDismissController _startUserAttentionControllerIfNeededForTypes:]_block_invoke";
      __int16 v28 = 2048;
      double v29 = v12;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s #autodismiss Creating user attention controller with attention loss timeout=%.1f", buf, 0x16u);
    }
    __int16 v14 = [[SRUserAttentionController alloc] initWithSamplingInterval:a2 attentionLossTimeout:a3 supportedAttentionAwarenessEvents:2.0 deviceSupportsRaiseGestureDetection:v12];
    id v15 = objc_loadWeakRetained(v6);
    [(SRUserAttentionController *)v14 setDelegate:v15];

    id v16 = objc_loadWeakRetained(v6);
    [v16 setUserAttentionController:v14];
  }
  id v17 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v18 = v17;
    uint64_t v19 = SRUIFStringForUserAttentionType();
    *(_DWORD *)buf = 136315394;
    v27 = "-[SRCompactAutoDismissController _startUserAttentionControllerIfNeededForTypes:]_block_invoke";
    __int16 v28 = 2112;
    double v29 = *(double *)&v19;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "%s #autodismiss Starting user attention controller if needed for types=%@", buf, 0x16u);
  }
  id v20 = objc_loadWeakRetained(v6);
  v21 = [v20 userAttentionController];
  uint64_t v22 = *(void *)(a1 + 40);
  id v23 = &_dispatch_main_q;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 3221225472;
  v24[2] = sub_100017514;
  v24[3] = &unk_100143360;
  objc_copyWeak(&v25, v6);
  [v21 startIfNeededForTypes:v22 completionQueue:&_dispatch_main_q completion:v24];

  objc_destroyWeak(&v25);
}

void sub_1000174F8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100017514(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000B73A8(a1, v4, (uint64_t)v3);
    }
  }
  else
  {
    id v5 = +[AFPreferences sharedPreferences];
    [v5 autoDismissalMaxAttentionSamplingTime];
    double v7 = v6;

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _stopUserAttentionControllerIfNeededAfterDelay:v7];
  }
}

void sub_1000177C0(id a1)
{
  byte_100171DF0 = MGGetBoolAnswer();
}

void sub_100018188(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void sub_1000185A8(id a1, BGTask *a2)
{
}

void sub_1000188E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100018908(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setTaskCompletedWithSuccess:0];
  id v2 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
  {
    int v4 = 136315394;
    id v5 = "+[SRAssetsUtilities _runAssetCheckWithTask:]_block_invoke";
    __int16 v6 = 2048;
    uint64_t v7 = 0x409C200000000000;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "%s Download timer expired. Schedule asset check after %lf seconds", (uint8_t *)&v4, 0x16u);
  }
  id v3 = +[NSDate dateWithTimeIntervalSinceNow:1800.0];
  +[SRAssetsUtilities _scheduleAssetCheckWithEarliestBeginDate:v3];
}

void sub_100018A18(uint64_t a1, uint64_t a2)
{
  if (a2 == 4)
  {
    +[SRNotificationUtility postStorageLowNotification];
    __int16 v6 = objc_alloc_init(SRPreferences);
    [(SRPreferences *)v6 setHasPresentedSiriAssetsNotification:1];
    [*(id *)(a1 + 32) setTaskCompletedWithSuccess:1];
  }
  else if (a2 == 3)
  {
    id v3 = *(void **)(a1 + 32);
    [v3 setTaskCompletedWithSuccess:1];
  }
  else
  {
    int v4 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      id v8 = "+[SRAssetsUtilities _runAssetCheckWithTask:]_block_invoke";
      __int16 v9 = 2048;
      uint64_t v10 = 0x409C200000000000;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "%s Download not finished. Schedule asset check after %lf seconds", buf, 0x16u);
    }
    [*(id *)(a1 + 32) setTaskCompletedWithSuccess:0];
    id v5 = +[NSDate dateWithTimeIntervalSinceNow:1800.0];
    +[SRAssetsUtilities _scheduleAssetCheckWithEarliestBeginDate:v5];
  }
}

void sub_100018FF8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_10001901C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [*(id *)(a1 + 32) operation];
    id WeakRetained = v3;
  }
}

void sub_100019070(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v4 = WeakRetained;
    id v2 = objc_loadWeakRetained(WeakRetained + 2);
    id v3 = [v2 transitionController];
    [v3 setOperation:0];

    id WeakRetained = v4;
  }
}

void sub_10001A2E8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _iconImageForGuideDomainSnippet:*(void *)(a1 + 40)];
  id v3 = +[NSOperationQueue mainQueue];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10001A3E8;
  v6[3] = &unk_1001434B0;
  int v4 = *(void **)(a1 + 40);
  v6[4] = *(void *)(a1 + 32);
  id v7 = v2;
  id v8 = v4;
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 56);
  id v5 = v2;
  [v3 addOperationWithBlock:v6];
}

void sub_10001A3E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  id v3 = *(void **)(*(void *)(a1 + 32) + 8);
  int v4 = [*(id *)(a1 + 48) aceId];
  [v3 setObject:v2 forKey:v4];

  id v5 = *(void **)(a1 + 56);
  __int16 v6 = [*(id *)(a1 + 64) aceId];
  LODWORD(v5) = [v5 isEqualToString:v6];

  if (v5) {
    [*(id *)(a1 + 64) setIconImage:*(void *)(a1 + 40)];
  }
  id v7 = *(void **)(*(void *)(a1 + 32) + 56);
  id v8 = [*(id *)(a1 + 48) aceId];
  [v7 removeObject:v8];
}

uint64_t sub_10001B0E0(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 8);
  return result;
}

void sub_10001B67C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [*((id *)WeakRetained + 4) outputDevices];
    if ([v3 count])
    {
      long long v13 = 0u;
      long long v14 = 0u;
      long long v11 = 0u;
      long long v12 = 0u;
      id v4 = v3;
      id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v5)
      {
        id v6 = v5;
        uint64_t v7 = *(void *)v12;
        do
        {
          for (i = 0; i != v6; i = (char *)i + 1)
          {
            if (*(void *)v12 != v7) {
              objc_enumerationMutation(v4);
            }
            unint64_t v9 = [*(id *)(*((void *)&v11 + 1) + 8 * i) deviceType:v11];
            if (v9 <= 4 && ((1 << v9) & 0x13) != 0) {
              v2[8] = 1;
            }
          }
          id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
        }
        while (v6);
      }
    }
  }
}

void sub_10001B970(id a1)
{
  uint64_t v1 = +[NSUserDefaults standardUserDefaults];
  uint64_t v2 = qword_100171E00;
  qword_100171E00 = v1;

  _objc_release_x1(v1, v2);
}

void sub_10001D6CC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10001D6F0(uint64_t a1, int a2)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && a2)
  {
    id v4 = WeakRetained;
    [WeakRetained[6] becomeFirstResponder];
    id WeakRetained = v4;
  }
}

id sub_10001E5D8(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

void sub_10001F348(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 112) setAdditionalSafeAreaInsets:*(double *)(a1 + 40), 0.0, 0.0, 0.0];
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 112) view];
  [v2 setNeedsLayout];

  id v3 = [*(id *)(*(void *)(a1 + 32) + 112) view];
  [v3 layoutIfNeeded];
}

id sub_100020200(uint64_t a1)
{
  return [*(id *)(a1 + 32) layout];
}

id sub_100020208(uint64_t a1)
{
  return [*(id *)(a1 + 32) layout];
}

void sub_1000208C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1000208F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (WeakRetained)
  {
    id v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 136315138;
      id v10 = "-[SRCompactViewController compactViewModelDidChange:withDiff:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #compact Applying updates", (uint8_t *)&v9, 0xCu);
    }
    if (*(unsigned char *)(a1 + 88)) {
      unsigned int v4 = [WeakRetained _updateActiveTranscriptItems:*(void *)(a1 + 32)];
    }
    else {
      unsigned int v4 = 0;
    }
    [WeakRetained _setInputType:*(void *)(a1 + 80)];
    [WeakRetained _setActiveConversationTranscriptItems:*(void *)(a1 + 40)];
    [WeakRetained _setActiveAdditionalPlatterTranscriptItems:*(void *)(a1 + 48)];
    [WeakRetained _setSpeechRecognitionHypothesis:*(void *)(a1 + 56)];
    [WeakRetained _setServerUtterances:*(void *)(a1 + 64)];
    if (*(unsigned char *)(a1 + 89))
    {
      if (*(unsigned char *)(a1 + 90)) {
        BOOL v5 = v4 == 0;
      }
      else {
        BOOL v5 = 1;
      }
      uint64_t v6 = !v5;
      uint64_t v7 = [WeakRetained _compactView];
      [v7 contentDidUpdate:v6];

      if (*(unsigned char *)(a1 + 91))
      {
        id v8 = [WeakRetained _compactView];
        [v8 contentDidUpdateForAdditionalContentView:v6];
      }
    }
  }
}

void sub_100021D94(id a1, SiriSharedUIViewControlling *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector()) {
    [(SiriSharedUIViewControlling *)v2 siriDidDeactivate];
  }
}

void sub_1000222AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000222D8(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v3 = [WeakRetained view];
  unsigned int v4 = [v3 traitCollection];
  unsigned int v5 = [v4 isAmbientPresented];

  if (v5)
  {
    id v6 = objc_loadWeakRetained(v1);
    [v6 _updateAmbientAvailability];
  }
}

void sub_100022DF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 siriDidStartSpeakingWithIdentifier:*(void *)(a1 + 32)];
  }
}

void sub_100022F2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 siriDidStopSpeakingWithIdentifier:*(void *)(a1 + 32) speechQueueIsEmpty:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_100023058(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (objc_opt_respondsToSelector()) {
    [v3 siriDidUpdateASRWithRecognition:*(void *)(a1 + 32)];
  }
}

void sub_100023124(id a1, SiriSharedUIViewControlling *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector()) {
    [(SiriSharedUIViewControlling *)v2 siriDidTapOutsideContent];
  }
}

void sub_1000231E0(id a1, SiriSharedUIViewControlling *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector()) {
    [(SiriSharedUIViewControlling *)v2 siriWillStartRequest];
  }
}

void sub_10002329C(id a1, SiriSharedUIViewControlling *a2)
{
  uint64_t v2 = a2;
  if (objc_opt_respondsToSelector())
  {
    id v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 136315138;
      unsigned int v5 = "-[SRCompactViewController siriIsIdleAndQuiet]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #compact: Calling Siri Idle", (uint8_t *)&v4, 0xCu);
    }
    [(SiriSharedUIViewControlling *)v2 siriIsIdleAndQuiet];
  }
}

void sub_100025054(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100025070(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned int v3 = [WeakRetained _shouldMoveViewStackForTapToEdit];

  if (v3)
  {
    id v6 = objc_loadWeakRetained(v1);
    int v4 = [v6 _viewStackContainerController];
    unsigned int v5 = [v4 viewStackContainer];
    [v5 willPresentModalContent];
  }
}

void sub_100025470(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) view];
  [v4 layoutIfNeeded];
  uint64_t v2 = [*(id *)(a1 + 32) contentViewController];
  unsigned int v3 = [v2 view];
  [v3 layoutIfNeeded];
}

void sub_1000257C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(void **)(v1 + 160);
  *(void *)(v1 + 160) = 0;
}

void sub_10002599C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Block_object_dispose((const void *)(v3 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1000259CC(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  unsigned int v4 = [WeakRetained _shouldMoveViewStackForTapToEdit];

  if (v4)
  {
    id v5 = objc_loadWeakRetained(v2);
    id v6 = [v5 _viewStackContainerController];
    uint64_t v7 = [v6 viewStackContainer];
    [v7 willDismissModalContent];

    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
  }
}

void sub_100025A58(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    id v9 = v3;
    unsigned int v4 = [v3 isCancelled];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v6 = [WeakRetained _viewStackContainerController];
    uint64_t v7 = [v6 viewStackContainer];
    id v8 = v7;
    if (v4) {
      [v7 willPresentModalContent];
    }
    else {
      [v7 didDismissModalContent];
    }

    id v3 = v9;
  }
}

void sub_100027B18(uint64_t a1)
{
  id v8 = +[BMStreams discoverabilitySignal];
  uint64_t v2 = [v8 source];
  [*(id *)(a1 + 40) _checkAndEmitHSSignalsWithSource:v2 forRequestOptions:*(void *)(a1 + 32)];
  id v3 = +[EAAccessoryManager sharedAccessoryManager];
  [*(id *)(a1 + 40) _checkAndEmitCarPlayInvocationSourcePerVehicle:v2 forRequestOptions:*(void *)(a1 + 32) accessoryManager:v3];
  uint64_t v6 = a1 + 32;
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v6 + 8);
  uint64_t v7 = +[BluetoothManager sharedInstance];
  [v5 _checkAndEmitBluetoothInvocationSourcePerVehicle:v2 forRequestOptions:v4 btManager:v7];
}

void sub_100028394(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

id sub_10002A574(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) cancelAutoDismissalForTouchOutsideOfSiri];
}

void sub_10002AD8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10002ADAC(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v2);
  [v3 siriPresentation:v4 didPresentViewController:*(void *)(a1 + 32)];
}

void sub_10002B018(uint64_t a1, int a2, int a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  long long v11 = v10;
  if (!a3)
  {
    [*(id *)(a1 + 32) recordDismissalMetricWithContext:*(void *)(a1 + 40) inputType:*(void *)(a1 + 56) previousLongPressBehavior:-1 longPressBehavior:-1];
    goto LABEL_26;
  }
  id v37 = v10;
  id v12 = objc_alloc((Class)SRUIFPreferences);
  id v13 = [v12 initWithSuiteName:SRUIFPreferencesDefaultDomain];
  uint64_t v14 = [v13 objectForKey:@"SiriHardwareButtonLongPressBehavior"];
  id v15 = (void *)v14;
  id v16 = &off_100149AC0;
  if (v14) {
    id v16 = (_UNKNOWN **)v14;
  }
  id v17 = v16;

  __int16 v18 = [v13 objectForKey:@"SiriHardwareButtonLongPressBehaviorModificationDate"];
  id v19 = [v17 integerValue];

  if (v18)
  {
    id v20 = +[NSCalendar currentCalendar];
    v21 = +[NSDate date];
    uint64_t v22 = [v20 components:16 fromDate:v18 toDate:v21 options:0];

    uint64_t v23 = (uint64_t)[v22 day];
  }
  else
  {
    uint64_t v23 = -1;
  }
  if (v19) {
    BOOL v24 = 1;
  }
  else {
    BOOL v24 = a2 == 0;
  }
  if (v24)
  {
    uint64_t v25 = (uint64_t)v19;
    if (v19 != (id)1) {
      goto LABEL_23;
    }
    uint64_t v25 = 1;
    if (a2) {
      goto LABEL_23;
    }
    if (!*(unsigned char *)(a1 + 64))
    {
      id v26 = +[NSNumber numberWithInteger:0];
      [v13 setObject:v26 forKey:@"SiriHardwareButtonLongPressBehavior"];

      v27 = +[NSDate date];
      [v13 setObject:v27 forKey:@"SiriHardwareButtonLongPressBehaviorModificationDate"];

      __int16 v28 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315394;
        v42 = "-[SRSystemAssistantExperiencePresentation siriDidDeactivateWithCompletion:]_block_invoke";
        __int16 v43 = 2048;
        uint64_t v44 = v23;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation disabling button press mitigation after %ld days", buf, 0x16u);
      }
      [*(id *)(a1 + 32) recordMitigationEndMetricWithContext:*(void *)(a1 + 40) activationHistory:v9 numberOfDaysSinceLastChange:v23];
      uint64_t v25 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    double v29 = +[NSNumber numberWithInteger:1];
    [v13 setObject:v29 forKey:@"SiriHardwareButtonLongPressBehavior"];

    v30 = +[NSDate date];
    [v13 setObject:v30 forKey:@"SiriHardwareButtonLongPressBehaviorModificationDate"];

    v31 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      v42 = "-[SRSystemAssistantExperiencePresentation siriDidDeactivateWithCompletion:]_block_invoke";
      __int16 v43 = 2048;
      uint64_t v44 = v23;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation enabling button press mitigation after %ld days", buf, 0x16u);
    }
    [*(id *)(a1 + 32) recordMitigationStartMetricWithContext:*(void *)(a1 + 40) activationHistory:v9 numberOfDaysSinceLastChange:v23];
  }
  uint64_t v25 = 1;
LABEL_23:
  v33 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315650;
    v42 = "-[SRSystemAssistantExperiencePresentation siriDidDeactivateWithCompletion:]_block_invoke";
    __int16 v43 = 2048;
    uint64_t v44 = v25;
    __int16 v45 = 2048;
    id v46 = v19;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation current behavior: %ld, previous behavior: %ld", buf, 0x20u);
  }
  [*(id *)(a1 + 32) recordDismissalMetricWithContext:*(void *)(a1 + 40) inputType:*(void *)(a1 + 56) previousLongPressBehavior:v19 longPressBehavior:v25];

  long long v11 = v38;
LABEL_26:
  if (*(unsigned char *)(a1 + 64)
    && [*(id *)(a1 + 32) canPresentSurveyForContext:*(void *)(a1 + 40)])
  {
    v34 = *(void **)(a1 + 32);
    uint64_t v35 = *(void *)(a1 + 40);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_10002B4A0;
    v39[3] = &unk_100143690;
    id v40 = *(id *)(a1 + 48);
    [v34 presentSurveyNotificationWithContext:v35 activationHistory:v9 withCompletion:v39];
  }
  else
  {
    uint64_t v36 = *(void *)(a1 + 48);
    if (v36) {
      (*(void (**)(void))(v36 + 16))();
    }
  }
}

uint64_t sub_10002B4A0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

id sub_10002BD48(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 104), *(id *)(a1 + 40));
  id result = *(id *)(*(void *)(a1 + 32) + 168);
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    return _[result setPreviousConversation:v3];
  }
  return result;
}

void sub_10002C3D8(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 168), *(id *)(a1 + 40));
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 104);
  if (v2)
  {
    id v7 = [v2 lastItem];
    if ([v7 isPersistentAcrossInvocations])
    {
      unsigned __int8 v3 = [*(id *)(*(void *)(a1 + 32) + 8) isInAmbient];

      if ((v3 & 1) == 0)
      {
        uint64_t v4 = *(void *)(a1 + 32);
        id v5 = *(void **)(v4 + 168);
        uint64_t v6 = *(void *)(v4 + 104);
        _[v5 setPreviousConversation:v6];
      }
    }
    else
    {
    }
  }
}

id sub_10002CB84(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) cancelAutoDismissalForTouchOutsideOfSiri];
}

void sub_10002D374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

void sub_10002D39C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_10002D3B4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24));
}

id sub_10002F364(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 24);
  if (qword_100171E10 != -1) {
    dispatch_once(&qword_100171E10, &stru_100143750);
  }
  double v2 = *(double *)&qword_100171E18;

  return _[v1 scheduleAutoDismissalForTouchOutsideOfSiri:v2];
}

void sub_10002F7F0(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) delegate];
  [v2 siriPresentation:*(void *)(a1 + 32) setStatusBarHidden:0 animated:1];

  id v3 = [*(id *)(a1 + 32) delegate];
  [v3 siriPresentation:*(void *)(a1 + 32) setStatusViewHidden:0];
}

void sub_10002F9D0(id a1)
{
  id v1 = objc_alloc((Class)SRUIFPreferences);
  id v3 = [v1 initWithSuiteName:SRUIFPreferencesDefaultDomain];
  [v3 doubleForKey:@"TouchDismissalTimeout"];
  if (v2 <= 0.0) {
    double v2 = 3.0;
  }
  qword_100171E18 = *(void *)&v2;
}

void sub_100030A28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100030A48(uint64_t a1)
{
  double v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained delegate];
  id v4 = objc_loadWeakRetained(v2);
  [v3 siriPresentation:v4 didPresentViewController:*(void *)(a1 + 32)];
}

void sub_100030CB4(uint64_t a1, int a2, int a3, void *a4, void *a5)
{
  id v9 = a4;
  id v10 = a5;
  long long v11 = v10;
  if (!a3)
  {
    [*(id *)(a1 + 32) recordDismissalMetricWithContext:*(void *)(a1 + 40) inputType:*(void *)(a1 + 56) previousLongPressBehavior:-1 longPressBehavior:-1];
    goto LABEL_26;
  }
  id v37 = v10;
  id v12 = objc_alloc((Class)SRUIFPreferences);
  id v13 = [v12 initWithSuiteName:SRUIFPreferencesDefaultDomain];
  uint64_t v14 = [v13 objectForKey:@"SiriHardwareButtonLongPressBehavior"];
  id v15 = (void *)v14;
  id v16 = &off_100149AD8;
  if (v14) {
    id v16 = (_UNKNOWN **)v14;
  }
  id v17 = v16;

  __int16 v18 = [v13 objectForKey:@"SiriHardwareButtonLongPressBehaviorModificationDate"];
  id v19 = [v17 integerValue];

  if (v18)
  {
    id v20 = +[NSCalendar currentCalendar];
    v21 = +[NSDate date];
    uint64_t v22 = [v20 components:16 fromDate:v18 toDate:v21 options:0];

    uint64_t v23 = (uint64_t)[v22 day];
  }
  else
  {
    uint64_t v23 = -1;
  }
  if (v19) {
    BOOL v24 = 1;
  }
  else {
    BOOL v24 = a2 == 0;
  }
  if (v24)
  {
    uint64_t v25 = (uint64_t)v19;
    if (v19 != (id)1) {
      goto LABEL_23;
    }
    uint64_t v25 = 1;
    if (a2) {
      goto LABEL_23;
    }
    if (!*(unsigned char *)(a1 + 64))
    {
      id v26 = +[NSNumber numberWithInteger:0];
      [v13 setObject:v26 forKey:@"SiriHardwareButtonLongPressBehavior"];

      v27 = +[NSDate date];
      [v13 setObject:v27 forKey:@"SiriHardwareButtonLongPressBehaviorModificationDate"];

      __int16 v28 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 136315394;
        v42 = "-[SRCompactPresentation siriDidDeactivateWithCompletion:]_block_invoke";
        __int16 v43 = 2048;
        uint64_t v44 = v23;
        _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation disabling button press mitigation after %ld days", buf, 0x16u);
      }
      [*(id *)(a1 + 32) recordMitigationEndMetricWithContext:*(void *)(a1 + 40) activationHistory:v9 numberOfDaysSinceLastChange:v23];
      uint64_t v25 = 0;
      goto LABEL_23;
    }
  }
  else
  {
    double v29 = +[NSNumber numberWithInteger:1];
    [v13 setObject:v29 forKey:@"SiriHardwareButtonLongPressBehavior"];

    v30 = +[NSDate date];
    [v13 setObject:v30 forKey:@"SiriHardwareButtonLongPressBehaviorModificationDate"];

    v31 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      v42 = "-[SRCompactPresentation siriDidDeactivateWithCompletion:]_block_invoke";
      __int16 v43 = 2048;
      uint64_t v44 = v23;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation enabling button press mitigation after %ld days", buf, 0x16u);
    }
    [*(id *)(a1 + 32) recordMitigationStartMetricWithContext:*(void *)(a1 + 40) activationHistory:v9 numberOfDaysSinceLastChange:v23];
  }
  uint64_t v25 = 1;
LABEL_23:
  v33 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315650;
    v42 = "-[SRCompactPresentation siriDidDeactivateWithCompletion:]_block_invoke";
    __int16 v43 = 2048;
    uint64_t v44 = v25;
    __int16 v45 = 2048;
    id v46 = v19;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation current behavior: %ld, previous behavior: %ld", buf, 0x20u);
  }
  [*(id *)(a1 + 32) recordDismissalMetricWithContext:*(void *)(a1 + 40) inputType:*(void *)(a1 + 56) previousLongPressBehavior:v19 longPressBehavior:v25];

  long long v11 = v38;
LABEL_26:
  if (*(unsigned char *)(a1 + 64)
    && [*(id *)(a1 + 32) canPresentSurveyForContext:*(void *)(a1 + 40)])
  {
    v34 = *(void **)(a1 + 32);
    uint64_t v35 = *(void *)(a1 + 40);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_10003113C;
    v39[3] = &unk_100143690;
    id v40 = *(id *)(a1 + 48);
    [v34 presentSurveyNotificationWithContext:v35 activationHistory:v9 withCompletion:v39];
  }
  else
  {
    uint64_t v36 = *(void *)(a1 + 48);
    if (v36) {
      (*(void (**)(void))(v36 + 16))();
    }
  }
}

uint64_t sub_10003113C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100032050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
}

void sub_100032078(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

uint64_t sub_100032090(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24));
}

void sub_100033BE4(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) delegate];
  [v2 siriPresentation:*(void *)(a1 + 32) setStatusBarHidden:0 animated:1];

  id v3 = [*(id *)(a1 + 32) delegate];
  [v3 siriPresentation:*(void *)(a1 + 32) setStatusViewHidden:0];
}

void sub_1000340A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1000340CC(uint64_t a1, void *a2, unsigned char *a3)
{
  id v5 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [v5 isFirstResponder])
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a3 = 1;
  }
}

void sub_10003429C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  [WeakRetained setAlpha:0.0];

  id v3 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [v3 setAlpha:1.0];
}

uint64_t sub_10003431C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  [WeakRetained removeFromSuperview];

  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

void sub_1000344D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  [WeakRetained setAlpha:1.0];

  id v3 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [v3 setAlpha:0.0];
}

uint64_t sub_100034558(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 24));
  [WeakRetained removeFromSuperview];

  id v3 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v3();
}

void sub_100034C18(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 siriViewControllerHeightDidChange:*(void *)(a1 + 32)];
}

void sub_100035CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100035D00(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v7 = a2;
  if (([v7 isDescendantOfView:*(void *)(a1 + 32)] & 1) != 0
    || [*(id *)(a1 + 32) isDescendantOfView:v7])
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass())) {
      *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a3;
    }
  }
  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL) {
    *a4 = 1;
  }
}

void sub_100035F50(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 184) = 0;
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 siriViewControllerHeightDidChange:*(void *)(a1 + 32)];
}

void sub_10003607C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 siriViewControllerHeightDidChange:*(void *)(a1 + 32)];

  id v3 = [*(id *)(a1 + 32) _privateDelegate];
  [v3 siriViewControllerRequestToPin:*(void *)(a1 + 32)];
}

int64_t sub_1000373D8(id a1, id a2, id a3)
{
  uint64_t v4 = AFUserUtteranceConfidenceIndexKey;
  id v5 = a3;
  uint64_t v6 = [a2 objectForKey:v4];
  id v7 = [v6 integerValue];

  id v8 = [v5 objectForKey:v4];

  id v9 = [v8 integerValue];
  if ((uint64_t)v7 < (uint64_t)v9) {
    return -1;
  }
  else {
    return (uint64_t)v7 > (uint64_t)v9;
  }
}

void sub_100037468(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = +[NSCharacterSet whitespaceCharacterSet];
  id v5 = [v3 stringByTrimmingCharactersInSet:v4];
  unsigned __int8 v6 = [v5 isEqualToString:*(void *)(a1 + 32)];

  if ((v6 & 1) == 0)
  {
    id v7 = [*(id *)(a1 + 40) objectForKey:v3];
    id v8 = [v7 objectForKey:AFUserUtteranceConfidenceAverageKey];
    id v9 = [v7 objectForKey:AFUserUtteranceConfidenceIndexKey];
    id v37 = [v7 objectForKey:AFUserUtteranceSourceKey];
    id v38 = [v37 integerValue];
    BOOL v10 = v38 == (id)2;
    *(unsigned char *)(*(void *)(a1 + 48) + 120) |= v10;
    [*(id *)(*(void *)(a1 + 48) + 40) addObject:v3];
    id v11 = objc_alloc_init((Class)SRUIFAlternativeInfo);
    [v11 setOriginalRank:v9];
    [v11 setOriginalScore:v8];
    id v12 = +[NSNumber numberWithBool:v10];
    [v11 setIsFromDevice:v12];

    [*(id *)(*(void *)(a1 + 48) + 112) setObject:v11 forKey:v3];
    id v13 = objc_alloc((Class)NSMutableAttributedString);
    uint64_t v14 = v13;
    if (v9)
    {
      id v15 = +[NSCharacterSet whitespaceCharacterSet];
      id v16 = [v3 stringByTrimmingCharactersInSet:v15];
      id v17 = [v14 initWithString:v16 attributes:*(void *)(a1 + 56)];

      uint64_t v36 = v8;
      if (*(unsigned char *)(a1 + 88))
      {
        __int16 v18 = [*(id *)(a1 + 48) _userUtterance];
        id v19 = [v18 speechTokensForUtteranceAtIndex:0];

        id v20 = [*(id *)(a1 + 64) speechTokensForUtteranceAtIndex:[v9 integerValue]];
        v21 = [*(id *)(a1 + 64) rangeListOfDifferingTextFromTargetTokenList:v20 comparedToBaseTokenList:v19];
      }
      else
      {
        v21 = [*(id *)(a1 + 64) rangeListOfDifferingTextFromUtteranceAtIndex:[v9 integerValue] comparedToBaseUtteranceAtIndex:0];
      }
      long long v41 = 0u;
      long long v42 = 0u;
      long long v39 = 0u;
      long long v40 = 0u;
      id v22 = v21;
      id v23 = [v22 countByEnumeratingWithState:&v39 objects:v53 count:16];
      if (v23)
      {
        id v24 = v23;
        uint64_t v25 = *(void *)v40;
        do
        {
          for (i = 0; i != v24; i = (char *)i + 1)
          {
            if (*(void *)v40 != v25) {
              objc_enumerationMutation(v22);
            }
            id v27 = [*(id *)(*((void *)&v39 + 1) + 8 * i) rangeValue];
            [v17 setAttributes:*(void *)(a1 + 72) range:v27, v28];
          }
          id v24 = [v22 countByEnumeratingWithState:&v39 objects:v53 count:16];
        }
        while (v24);
      }

      id v8 = v36;
    }
    else
    {
      id v17 = [v13 initWithString:v3 attributes:*(void *)(a1 + 72)];
    }
    if (*(unsigned char *)(a1 + 89))
    {
      CFStringRef v29 = @"FIDES ";
      if (v38 != (id)2) {
        CFStringRef v29 = &stru_1001463E0;
      }
      v30 = +[NSString stringWithFormat:@" (%@%@)", v29, v8];
    }
    else
    {
      v30 = 0;
    }
    v31 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      CFStringRef v32 = @"Server";
      *(_DWORD *)buf = 136316162;
      uint64_t v44 = "-[SRUserUtteranceViewController _processUserUtterance:isCombined:displayedText:withScore:]_block_invoke_2";
      if (v38 == (id)2) {
        CFStringRef v32 = @"Client";
      }
      __int16 v45 = 2112;
      id v46 = v3;
      __int16 v47 = 2112;
      CFStringRef v48 = v32;
      if (v17) {
        CFStringRef v33 = &stru_1001463E0;
      }
      else {
        CFStringRef v33 = @"(removing dupe)";
      }
      __int16 v49 = 2112;
      v50 = v8;
      __int16 v51 = 2112;
      CFStringRef v52 = v33;
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEFAULT, "%s Speech alternative utterance: %@ (%@ %@%@)", buf, 0x34u);
    }
    id v34 = v17;
    if (v30)
    {
      id v35 = [objc_alloc((Class)NSAttributedString) initWithString:v30 attributes:*(void *)(a1 + 72)];
      [v34 appendAttributedString:v35];
    }
    if (v34) {
      [*(id *)(a1 + 80) addObject:v34];
    }
  }
}

id sub_100038FB0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) layer];
  [v2 setCornerRadius:*(double *)(a1 + 72)];

  [*(id *)(a1 + 32) setFrame:*(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104)];
  [*(id *)(a1 + 40) setFrame:*(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104)];
  id v3 = *(void **)(a1 + 48);
  [v3 center];
  double v5 = v4;
  [*(id *)(a1 + 48) center];
  [v3 setCenter:v5, v6 - *(double *)(a1 + 112)];
  [*(id *)(a1 + 48) setAlpha:0.0];
  [*(id *)(a1 + 56) setEffect:0];
  id v7 = *(void **)(a1 + 64);
  CGAffineTransformMakeTranslation(&v9, 0.0, -*(double *)(a1 + 112));
  [v7 setTransform:&v9];
  return [*(id *)(a1 + 64) setAlpha:1.0];
}

id sub_100039090(uint64_t a1)
{
  [*(id *)(a1 + 32) setHidden:1];
  [*(id *)(a1 + 40) removeFromSuperview];
  id v2 = *(void **)(a1 + 48);
  uint64_t v3 = [v2 transitionWasCancelled] ^ 1;

  return [v2 completeTransition:v3];
}

void sub_1000398B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 184));
  _Unwind_Resume(a1);
}

id *sub_1000398D8(id *result)
{
  id v1 = result;
  id v2 = result[10];
  if (v2 == (id)1)
  {
    double v5 = [result[4] layer];
    [v5 setCornerRadius:SiriSharedUISmartDialogPlatterCornerRadius];

    [v1[4] setFrame:*((double *)v1 + 11), *((double *)v1 + 12), *((double *)v1 + 13), *((double *)v1 + 14)];
    [v1[5] setFrame:*((double *)v1 + 11), *((double *)v1 + 12), *((double *)v1 + 13), *((double *)v1 + 14)];
    [v1[6] setAlpha:1.0];
    [v1[7] setAlpha:1.0];
    id v6 = v1[8];
    id v7 = +[UIBlurEffect effectWithStyle:4];
    [v6 setEffect:v7];

    return (id *)[v1[9] setAlpha:0.0];
  }
  else if (!v2)
  {
    [result[4] setAlpha:0.0];
    [v1[5] setAlpha:0.0];
    memset(&v9, 0, sizeof(v9));
    CGAffineTransformMakeScale(&v9, 0.9, 0.9);
    id v3 = v1[4];
    CGAffineTransform v8 = v9;
    [v3 setTransform:&v8];
    id v4 = v1[5];
    CGAffineTransform v8 = v9;
    return (id *)[v4 setTransform:&v8];
  }
  return result;
}

void sub_100039A20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  if (WeakRetained)
  {
    [*(id *)(a1 + 32) finalizePopAnimationOfType:*(void *)(a1 + 96)];
    [*(id *)(a1 + 40) removeFromSuperview];
    [*(id *)(a1 + 48) removeFromSuperview];
    [*(id *)(a1 + 56) removeFromSuperview];
    [*(id *)(a1 + 64) removeFromSuperview];
    [*(id *)(a1 + 72) removeFromSuperview];
    id v2 = [WeakRetained _navigationController];
    [v2 setAnimatingBackgroundView:0];

    id v3 = [WeakRetained _navigationController];
    [v3 setShadowView:0];

    id v4 = [WeakRetained _navigationController];
    [v4 setBlurrableView:0];

    [*(id *)(a1 + 80) completeTransition:[*(id *)(a1 + 80) transitionWasCancelled] ^ 1];
  }
}

void sub_10003A3C0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_10003A3E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v4 = WeakRetained;
    id v2 = [WeakRetained operation];
    if (v2 == (id)2)
    {
      [v4 _performPopAnimations];
    }
    else
    {
      BOOL v3 = v2 == (id)1;
      id WeakRetained = v4;
      if (!v3) {
        goto LABEL_8;
      }
      [v4 _performPushAnimations];
    }
    id WeakRetained = v4;
  }
LABEL_8:
}

void sub_10003A450(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  LODWORD(v2) = [v3 isCancelled];

  if (v2)
  {
    id v4 = [WeakRetained _navigationController];
    double v5 = [v4 viewControllers];
    id v6 = [v5 count];

    if (v6 == (id)2)
    {
      id v7 = [WeakRetained delegate];
      [v7 blurFromRootNavigationTransitionController:WeakRetained requestBackgroundBlurViewVisible:1];
    }
  }
  [WeakRetained _updateBlurVisibility];
}

id sub_10003AA6C(uint64_t a1)
{
  CFStringRef v1 = @"Voice";
  if (a1 == 1) {
    CFStringRef v1 = @"Mixed";
  }
  if (a1 == 2) {
    CFStringRef v2 = @"Silent";
  }
  else {
    CFStringRef v2 = v1;
  }
  return [@"SRMode" stringByAppendingString:v2];
}

__CFString *sub_10003AFDC(uint64_t a1)
{
  CFStringRef v1 = @"Voice";
  if (a1 == 1) {
    CFStringRef v1 = @"Mixed";
  }
  if (a1 == 2) {
    return @"Silent";
  }
  else {
    return v1;
  }
}

id sub_10003B2AC(void *a1)
{
  id v1 = a1;
  CFStringRef v2 = sub_10003B688();
  id v3 = sub_10003B754();
  id v4 = [v2 setByAddingObjectsFromSet:v3];

  double v5 = [v1 name];

  id v6 = [v4 containsObject:v5];
  return v6;
}

id sub_10003B688()
{
  v3[0] = UIKeyboardWillShowNotification;
  v3[1] = UIKeyboardWillHideNotification;
  v3[2] = UIKeyboardWillChangeFrameNotification;
  v0 = +[NSArray arrayWithObjects:v3 count:3];
  id v1 = +[NSSet setWithArray:v0];

  return v1;
}

id sub_10003B754()
{
  v3[0] = UIKeyboardDidShowNotification;
  v3[1] = UIKeyboardDidHideNotification;
  v3[2] = UIKeyboardDidChangeFrameNotification;
  v0 = +[NSArray arrayWithObjects:v3 count:3];
  id v1 = +[NSSet setWithArray:v0];

  return v1;
}

void sub_10003B820(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x16u);
}

BOOL sub_10003C9BC(id a1, NSURL *a2, NSError *a3)
{
  id v4 = a2;
  double v5 = a3;
  id v6 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B8014((uint64_t)v4, (uint64_t)v5, v6);
  }

  return 1;
}

id sub_10003D224(void *a1)
{
  id v1 = a1;
  CFStringRef v2 = +[SRBundleUtilities getSiriAppBundle];
  id v3 = [v2 siriUILocalizedStringForKey:v1 table:0];

  return v3;
}

void sub_10003D7CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003D7F0(uint64_t a1, void *a2)
{
  CFStringRef v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained siriSessionDidReceiveAddViewsCommand:v3 completion:0];
}

void sub_10003DA3C(id a1, UIViewControllerTransitionCoordinatorContext *a2)
{
}

void sub_10003DBE0(uint64_t a1)
{
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  CFStringRef v2 = WeakRetained;
  if (WeakRetained && WeakRetained[23])
  {
    id v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 136315138;
      double v5 = "-[SRSiriViewController _setupXPCListener]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #xpcSiriApp Resuming XPC Connection", (uint8_t *)&v4, 0xCu);
    }
    [v2[23] resume];
  }
}

void sub_10003DFD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003E008(uint64_t a1)
{
  id v1 = *(NSObject **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10003E098;
  block[3] = &unk_100143410;
  objc_copyWeak(&v3, (id *)(a1 + 40));
  dispatch_async(v1, block);
  objc_destroyWeak(&v3);
}

void sub_10003E098(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _connectionWasInvalidated];
}

void sub_10003E0D8(uint64_t a1)
{
  id v1 = *(NSObject **)(a1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10003E168;
  block[3] = &unk_100143410;
  objc_copyWeak(&v3, (id *)(a1 + 40));
  dispatch_async(v1, block);
  objc_destroyWeak(&v3);
}

void sub_10003E168(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _connectionWasInterrupted];
}

void sub_10003E764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003E7A0(uint64_t a1, uint64_t a2, char a3)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v7 = WeakRetained;
    double v5 = [WeakRetained _host];
    id v6 = v5;
    if (a3) {
      [v5 serviceDidEnterUITrackingMode];
    }
    else {
      [v5 serviceDidExitUITrackingMode];
    }

    id WeakRetained = v7;
  }
}

void sub_10003F318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10003F330(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10003F340(uint64_t a1)
{
}

void sub_10003F348(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  id v7 = [v9 identifier];
  unsigned int v8 = [v7 isEqual:*(void *)(a1 + 32)];

  if (v8)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }
}

void sub_10003F6CC(id a1, BOOL a2, NSError *a3)
{
  int v4 = a3;
  if (!a2)
  {
    double v5 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000B81C0((uint64_t)v4, v5, v6);
    }
  }
}

void sub_10003F9CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10003F9F8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v7 = AFSiriLogContextConnection;
  if (a2)
  {
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      uint64_t v8 = *(void *)(a1 + 32);
      uint64_t v9 = *(void *)(a1 + 40);
      int v14 = 136315650;
      id v15 = "-[SRSiriViewController _saveConversationWithCompletion:]_block_invoke";
      __int16 v16 = 2112;
      uint64_t v17 = v8;
      __int16 v18 = 2112;
      uint64_t v19 = v9;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "%s #conversation Conversation successfully saved to store { identifier: %@, conversation: %@ }", (uint8_t *)&v14, 0x20u);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
  {
    sub_1000B8258();
  }
  uint64_t v10 = [WeakRetained _presentation];
  char v11 = objc_opt_respondsToSelector();

  if (v11)
  {
    id v12 = [WeakRetained _presentation];
    [v12 attemptedToSaveConversation:*(void *)(a1 + 40) withResult:a2];
  }
  uint64_t v13 = *(void *)(a1 + 48);
  if (v13) {
    (*(void (**)(void))(v13 + 16))();
  }
}

id sub_10003FC98(uint64_t a1, void *a2)
{
  id v3 = [a2 identifier];
  id v4 = [v3 isEqual:*(void *)(a1 + 32)];

  return v4;
}

void sub_100040004(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100040028(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_copyWeak(&v9, (id *)(a1 + 32));
  id v7 = v6;
  id v8 = v5;
  SiriUIInvokeOnMainQueue();

  objc_destroyWeak(&v9);
}

void sub_100040100(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100040114(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    id v3 = (uint64_t *)(a1 + 4);
    if (a1[4])
    {
      id v4 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
        sub_1000B82D0(v3, v4, v5);
      }
    }
    else
    {
      [a1[5] setDelegate:WeakRetained];
      id v6 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        id v7 = a1[5];
        *(_DWORD *)buf = 136315650;
        id v27 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
        __int16 v28 = 2112;
        id v29 = (id)AFUIPreviousConversationIdentifier;
        __int16 v30 = 2112;
        id v31 = v7;
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s #conversation Loaded previous conversation { identifier: %@, conversation: %@ }", buf, 0x20u);
      }
      if ([WeakRetained _languageMatchesConversation:a1[5]])
      {
        if ([a1[5] isSynchronizedWithServer]) {
          [WeakRetained _cancelLastRootProvisionalSnippetFromLastRequestInConversation:a1[5]];
        }
        id v8 = [WeakRetained _conversations];
        [v8 insertObject:a1[5] atIndex:0];

        id v9 = AFSiriLogContextConnection;
        if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
        {
          id v10 = a1[5];
          *(_DWORD *)buf = 136315394;
          id v27 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
          __int16 v28 = 2112;
          id v29 = v10;
          _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s #conversation Inserted previous conversation into conversation list { conversation: %@ }", buf, 0x16u);
        }
        char v11 = [WeakRetained _presentation];
        char v12 = objc_opt_respondsToSelector();

        if (v12)
        {
          uint64_t v13 = AFSiriLogContextConnection;
          if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136315138;
            id v27 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
            _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s #conversation Notifying presentation that our conversation list changed", buf, 0xCu);
          }
          int v14 = [WeakRetained _presentation];
          [v14 conversationListDidChange];
        }
        id v15 = [WeakRetained _presentation];
        char v16 = objc_opt_respondsToSelector();

        if (v16)
        {
          uint64_t v17 = AFSiriLogContextConnection;
          if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 136315138;
            id v27 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
            _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%s #conversation Notifying presentation that the previous conversation was loaded from disk", buf, 0xCu);
          }
          __int16 v18 = [WeakRetained _presentation];
          [v18 previousConversationDidLoad:a1[5]];
        }
      }
      else
      {
        uint64_t v19 = AFSiriLogContextConnection;
        if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
        {
          id v20 = a1[5];
          *(_DWORD *)buf = 136315394;
          id v27 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
          __int16 v28 = 2112;
          id v29 = v20;
          _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "%s #conversation Previous conversation language doesn't match current language; removing from the store { co"
            "nversation: %@ }",
            buf,
            0x16u);
        }
        v21 = [WeakRetained _conversationStore];
        uint64_t v22 = AFUIPreviousConversationIdentifier;
        v23[0] = _NSConcreteStackBlock;
        v23[1] = 3221225472;
        v23[2] = sub_100040510;
        v23[3] = &unk_100143B08;
        id v24 = a1[5];
        id v25 = a1[4];
        [v21 removeConversationWithIdentifier:v22 completionBlock:v23];
      }
    }
  }
}

void sub_100040510(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  if ((a2 & 1) == 0)
  {
    id v6 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000B836C(a1, v6, v7);
    }
  }
}

void sub_10004117C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1000411A8(uint64_t a1)
{
}

void sub_1000411B0(uint64_t a1)
{
}

void sub_1000411B8(uint64_t a1)
{
  CFStringRef v2 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    int v6 = 136315394;
    uint64_t v7 = "-[SRSiriViewController siriDidDeactivateWithCompletion:]_block_invoke";
    __int16 v8 = 2112;
    uint64_t v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s Releasing %@", (uint8_t *)&v6, 0x16u);
  }
  uint64_t v4 = *(void *)(*(void *)(a1 + 32) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = 0;
}

uint64_t sub_100041290(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000416E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004170C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v7 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 136315650;
    id v10 = "-[SRSiriViewController showAppUnlockForAppId:completion:]_block_invoke";
    __int16 v11 = 1026;
    int v12 = a2;
    __int16 v13 = 2112;
    id v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s APGuard complete for App Unlock, success=%{public, BOOL}d, error=%@", (uint8_t *)&v9, 0x1Cu);
  }
  if (v5) {
    uint64_t v8 = 1;
  }
  else {
    uint64_t v8 = a2 ^ 1u;
  }
  [WeakRetained siriWillHidePasscodeUnlockForResult:v8];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  [WeakRetained siriDidHidePasscodeUnlock];
}

void sub_100042124(id a1, NSError *a2)
{
  CFStringRef v2 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B85D0();
  }
}

uint64_t sub_1000435A4(uint64_t a1)
{
  CFStringRef v2 = *(void **)(a1 + 32);
  if (v2)
  {
    [v2 willMoveToParentViewController:0];
    [*(id *)(a1 + 32) removeFromParentViewController];
  }
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    uint64_t v4 = *(uint64_t (**)(void))(result + 16);
    return v4();
  }
  return result;
}

void sub_100043AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100043AE4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_100043B00(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    id v5 = [WeakRetained _presentation];
    char v6 = objc_opt_respondsToSelector();

    if (v6)
    {
      id v7 = objc_loadWeakRetained((id *)(a1 + 64));
      uint64_t v8 = [v7 _presentation];
      [v8 siriDidOpenURL:*(void *)(a1 + 32) bundleId:*(void *)(a1 + 40) inPlace:*(unsigned __int8 *)(a1 + 72)];
    }
  }
  uint64_t v9 = *(void *)(a1 + 56);
  if (v9) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v9, a2);
  }
  id v10 = objc_loadWeakRetained((id *)(a1 + 64));
  if (v10 && a2)
  {
    id v12 = v10;
    __int16 v11 = +[SAUIAppPunchOutEvent sruif_appPunchOutEventWithRefId:*(void *)(a1 + 48) URL:*(void *)(a1 + 32) appDisplayName:0 bundleId:*(void *)(a1 + 40)];
    [v12 _performGenericAceCommand:v11 turnIdentifier:0 completion:0];
    if (!*(unsigned char *)(a1 + 72))
    {
      [v12 _setRequestActive:0];
      [v12 _checkAndUpdateSiriIdleAndQuietStatusOrRescheduleIdleTimerIfNeeded];
    }

    id v10 = v12;
  }
}

void sub_100043E00(uint64_t a1)
{
  CFStringRef v2 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v4 = *(void **)(a1 + 32);
    id v5 = v2;
    char v6 = [v4 aceId];
    int v8 = 136315650;
    uint64_t v9 = "-[SRSiriViewController _delayAceCommandSuccess:forDuration:]_block_invoke";
    __int16 v10 = 2048;
    uint64_t v11 = v3;
    __int16 v12 = 2112;
    __int16 v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s #aceCommandRecord completing scheduled delayed action after %f seconds for command %@", (uint8_t *)&v8, 0x20u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _didCompleteActionForAceCommand:*(void *)(a1 + 32) success:1];
}

void sub_100044788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v9 - 128));
  _Unwind_Resume(a1);
}

uint64_t sub_1000447AC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_1000447C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 136));
  id v7 = WeakRetained;
  if (!WeakRetained)
  {
LABEL_5:
    (*(void (**)(void))(*(void *)(a1 + 112) + 16))();
    goto LABEL_38;
  }
  if (v5)
  {
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000B8870();
    }
    goto LABEL_5;
  }
  [WeakRetained[28] setAudioSessionID:a2];
  if (!*(void *)(a1 + 32))
  {
    int v9 = *(unsigned __int8 *)(a1 + 153);
    __int16 v10 = AFSiriLogContextConnection;
    BOOL v11 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
    if (v9)
    {
      if (!v11) {
        goto LABEL_17;
      }
      uint64_t v12 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 136315394;
      v53 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:ge"
            "nder:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:s"
            "peakableContextInfo:preparation:completion:]_block_invoke";
      __int16 v54 = 2112;
      uint64_t v55 = v12;
      __int16 v13 = "%s #tts 5 text:%@";
    }
    else
    {
      if (!v11) {
        goto LABEL_17;
      }
      uint64_t v14 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 136315395;
      v53 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:ge"
            "nder:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:s"
            "peakableContextInfo:preparation:completion:]_block_invoke";
      __int16 v54 = 2117;
      uint64_t v55 = v14;
      __int16 v13 = "%s #tts 5 text:%{sensitive}@";
    }
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, v13, buf, 0x16u);
LABEL_17:
    char v51 = 0;
    uint64_t v16 = *(void *)(a1 + 56);
    id v15 = *(void **)(a1 + 64);
    id v50 = 0;
    uint64_t v17 = [v15 parseStringWithFormat:v16 error:&v50 containsPrivacySensitiveContents:&v51];
    id v43 = v50;
    if (!v17)
    {
      int v28 = *(unsigned __int8 *)(a1 + 153);
      id v29 = AFSiriLogContextConnection;
      BOOL v30 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR);
      if (v28)
      {
        if (v30) {
          sub_1000B87F8();
        }
      }
      else if (v30)
      {
        sub_1000B8774(v29, v31, v32, v33, v34, v35, v36, v37);
      }
      (*(void (**)(void))(*(void *)(a1 + 112) + 16))();
      goto LABEL_37;
    }
    objc_initWeak(&location, v7);
    v44[0] = _NSConcreteStackBlock;
    v44[1] = 3221225472;
    v44[2] = sub_100044CDC;
    v44[3] = &unk_100143D38;
    objc_copyWeak(&v47, &location);
    id v46 = *(id *)(a1 + 128);
    id v45 = v17;
    char v48 = v51;
    __int16 v18 = objc_retainBlock(v44);
    uint64_t v19 = +[NSUUID UUID];
    id v20 = [v19 UUIDString];

    id v21 = v7[6];
    uint64_t v22 = objc_retainBlock(v18);
    [v21 setObject:v22 forKey:v20];

    LODWORD(v21) = *(unsigned __int8 *)(a1 + 153);
    id v23 = AFSiriLogContextConnection;
    BOOL v24 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
    if (v21)
    {
      if (v24)
      {
        uint64_t v25 = *(void *)(a1 + 56);
        uint64_t v26 = *(void *)(a1 + 40);
        *(_DWORD *)buf = 136315650;
        v53 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:"
              "gender:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsConte"
              "xt:speakableContextInfo:preparation:completion:]_block_invoke";
        __int16 v54 = 2112;
        uint64_t v55 = v25;
        __int16 v56 = 2112;
        uint64_t v57 = v26;
        id v27 = "%s #tts 6 Enqueuing \"%@\" identifier=%@";
LABEL_26:
        _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, v27, buf, 0x20u);
      }
    }
    else if (v24)
    {
      uint64_t v38 = *(void *)(a1 + 56);
      uint64_t v39 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 136315651;
      v53 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:ge"
            "nder:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:s"
            "peakableContextInfo:preparation:completion:]_block_invoke";
      __int16 v54 = 2117;
      uint64_t v55 = v38;
      __int16 v56 = 2112;
      uint64_t v57 = v39;
      id v27 = "%s #tts 6 Enqueuing \"%{sensitive}@\" identifier=%@";
      goto LABEL_26;
    }
    if (*(unsigned char *)(a1 + 153)) {
      BOOL v40 = v51 == 0;
    }
    else {
      BOOL v40 = 0;
    }
    char v41 = v40;
    BYTE3(v42) = v41;
    BYTE2(v42) = *(unsigned char *)(a1 + 154);
    BYTE1(v42) = *(unsigned char *)(a1 + 152);
    LOBYTE(v42) = 0;
    [v7[28] enqueueText:*(void *)(a1 + 56) identifier:*(void *)(a1 + 40) sessionId:*(void *)(a1 + 48) preferredVoice:*(void *)(a1 + 72) language:*(void *)(a1 + 80) gender:*(void *)(a1 + 88) isPhonetic:*(double *)(a1 + 144) provisionally:v42 preperationIdentifier:*(void *)(a1 + 112) completion:*(void *)(a1 + 96) analyticsContext:*(void *)(a1 + 104)];

    objc_destroyWeak(&v47);
    objc_destroyWeak(&location);
LABEL_37:

    goto LABEL_38;
  }
  int v8 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    v53 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:gend"
          "er:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:speak"
          "ableContextInfo:preparation:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s #tts 5 audioData", buf, 0xCu);
  }
  [v7[28] enqueueAudioData:*(void *)(a1 + 32) identifier:*(void *)(a1 + 40) sessionId:*(void *)(a1 + 48) provisionally:*(unsigned __int8 *)(a1 + 152) eligibleAfterDuration:*(void *)(a1 + 120) completion:*(double *)(a1 + 144)];
LABEL_38:
}

void sub_100044CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100044CDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    uint64_t v16 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:gend"
          "er:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:speak"
          "ableContextInfo:preparation:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #tts 12", buf, 0xCu);
  }
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_100044F08;
  v12[3] = &unk_100143D10;
  objc_copyWeak(&v14, (id *)(a1 + 48));
  id v5 = v3;
  id v13 = v5;
  char v6 = objc_retainBlock(v12);
  uint64_t v7 = *(void *)(a1 + 40);
  int v8 = AFSiriLogContextConnection;
  BOOL v9 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
  if (v7)
  {
    if (v9)
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v16 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:ge"
            "nder:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:s"
            "peakableContextInfo:preparation:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s #tts 13 Only if there is a bulletinIdentifier", buf, 0xCu);
    }
    (*(void (**)(void, void *, uint64_t, uint64_t))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), v6, v10, v11);
  }
  else
  {
    if (v9)
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v16 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:ge"
            "nder:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:s"
            "peakableContextInfo:preparation:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s #tts 13", buf, 0xCu);
    }
    ((void (*)(void *, void, void))v6[2])(v6, *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 56));
  }

  objc_destroyWeak(&v14);
}

void sub_100044EEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100044F08(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 136315138;
    BOOL v9 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:gende"
         "r:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:speakab"
         "leContextInfo:preparation:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #tts 14", (uint8_t *)&v8, 0xCu);
  }
  if (v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    char v6 = [WeakRetained _repeatablePhrases];
    [v6 addObject:v3];
  }
  if (*(void *)(a1 + 32))
  {
    uint64_t v7 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v8 = 136315138;
      BOOL v9 = "-[SRSiriViewController _speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:gen"
           "der:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:spe"
           "akableContextInfo:preparation:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s #tts 15", (uint8_t *)&v8, 0xCu);
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_100046D14(id a1, NSError *a2)
{
  CFStringRef v2 = a2;
  id v3 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 136315394;
    id v5 = "-[SRSiriViewController siriSessionWillStartRequest]_block_invoke";
    __int16 v6 = 2112;
    uint64_t v7 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s Emitting trigger for AIMLExperimentationManager failed with: %@", (uint8_t *)&v4, 0x16u);
  }
}

uint64_t sub_100046FBC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

void sub_100047380(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000473A4(uint64_t a1, int a2)
{
  int v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(unsigned __int8 *)(a1 + 40);
    int v13 = 136315650;
    id v14 = "-[SRSiriViewController siriSessionDidFinishRequestWithError:]_block_invoke";
    __int16 v15 = 1024;
    int v16 = v5;
    __int16 v17 = 1024;
    int v18 = a2 ^ 1;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s Should start listen after speaking %d %d", (uint8_t *)&v13, 0x18u);
  }
  if (*(unsigned char *)(a1 + 40) && (a2 & 1) == 0)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _startListenAfterSpeaking];
  }
  id v7 = objc_loadWeakRetained((id *)(a1 + 32));
  [v7 _setListenAfterSpeakingForRepeatable:*(unsigned __int8 *)(a1 + 40)];

  id v8 = objc_loadWeakRetained((id *)(a1 + 32));
  unsigned __int8 v9 = [v8 _isWaitingForStartRequest];

  if ((v9 & 1) == 0)
  {
    id v10 = objc_loadWeakRetained((id *)(a1 + 32));
    [v10 _setRequestActive:0];
  }
  id v11 = objc_loadWeakRetained((id *)(a1 + 32));
  [v11 _setWaitingForStartRequest:*(unsigned __int8 *)(a1 + 40)];

  id v12 = objc_loadWeakRetained((id *)(a1 + 32));
  [v12 _checkAndUpdateSiriIdleAndQuietStatusOrRescheduleIdleTimerIfNeeded];
}

void sub_10004785C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100047880(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v11 = WeakRetained;
    id v3 = [WeakRetained _instrumentationPresentationForPresentationOptions:[WeakRetained _presentationOptions]];
    int v4 = +[SRUIFInstrumentationManager sharedManager];
    [v4 emitUIStateTransitionEventWithFromState:[v11 _mapSiriTransitionState:*(void *)(a1 + 40)] toState:[v11 _mapSiriTransitionState:*(void *)(a1 + 48)] withPresentationType:v3 machAbsoluteTransitionTime:*(double *)(a1 + 56)];

    BOOL v5 = [v11 _mapSiriTransitionState:*(void *)(a1 + 48)] == 5;
    id WeakRetained = v11;
    if (v5)
    {
      __int16 v6 = [v11 _requestOptions];
      id v7 = [v6 requestSource];

      id WeakRetained = v11;
      if (v7 == (id)13)
      {
        id v8 = objc_alloc_init((Class)SISchemaUEILaunchEnded);
        [v8 setExists:1];
        id v9 = objc_alloc_init((Class)SISchemaUEILaunchContext);
        [v9 setEnded:v8];
        id v10 = +[SRUIFInstrumentationManager sharedManager];
        [v10 emitInstrumentation:v9 atTime:(unint64_t)*(double *)(a1 + 56)];

        id WeakRetained = v11;
      }
    }
  }
}

uint64_t sub_1000479D8(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 0x10) {
    return 0;
  }
  else {
    return a2;
  }
}

id sub_10004812C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) siriSessionDidChangeNetworkAvailability];
}

void sub_10004845C(uint64_t a1, char a2)
{
  if (*(void *)(a1 + 40))
  {
    id v3 = *(void **)(a1 + 32);
    if (a2)
    {
      int v4 = [v3 aceId];
      +[SACommandSucceeded sruif_commandSucceededWithRefId:v4];
    }
    else
    {
      int v4 = [v3 aceId];
      +[SACommandFailed sruif_commandFailedWithRefId:v4];
    }
    id v5 = (id)objc_claimAutoreleasedReturnValue();

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_10004872C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100048750(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v4 = *(void *)(a1 + 32);
      int v5 = 136315394;
      __int16 v6 = "-[SRSiriViewController siriSessionOpenURL:completionHandler:]_block_invoke";
      __int16 v7 = 2112;
      uint64_t v8 = v4;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #punchout 8 Performing InPlace punchout %@", (uint8_t *)&v5, 0x16u);
    }
    WeakRetained[23] = 0;
    if ([WeakRetained _usesEventDrivenIdleAndQuietUpdates]) {
      [WeakRetained _checkAndUpdateSiriIdleAndQuietStatusIfNeeded];
    }
  }
}

void sub_1000494E8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10004950C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    if ([v5 length]) {
      BOOL v4 = 0;
    }
    else {
      BOOL v4 = *(unsigned char *)(a1 + 40) != 0;
    }
    [WeakRetained _setShowKeyboardIfTextInputEnabled:*(unsigned __int8 *)(a1 + 41) minimized:v4];
    [WeakRetained _setKeyboardLoweredAfterResponse:*(unsigned __int8 *)(a1 + 40)];
  }
}

void sub_10004A84C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id location)
{
  objc_destroyWeak(v41);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004A870(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v4 = [WeakRetained _presentation];
  id v5 = [*(id *)(a1 + 32) requestEndBehavior];
  [v4 handleRequestEndBehavior:v5 isAttending:a2];
}

uint64_t sub_10004B388(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10004B7D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004B7EC(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  __int16 v7 = [v5 playables];
  uint64_t v8 = [v7 firstObject];
  id v9 = [v8 movieClips];
  id v10 = [v9 firstObject];
  id v11 = [v10 preferredAsset];
  id v12 = [v11 url];
  int v13 = +[NSURL URLWithString:v12];

  [a1[4] setHiresTrailerUri:v13];
  [a1[4] setLowresTrailerUri:v13];
  objc_copyWeak(&v16, a1 + 6);
  id v14 = a1[4];
  id v15 = a1[5];
  SiriUIInvokeOnMainQueue();

  objc_destroyWeak(&v16);
}

void sub_10004B978(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10004B98C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained siriSessionDidReceivePlayContentCommand:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
}

void sub_10004C0D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,id location)
{
  objc_destroyWeak(v59);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004C0FC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  BOOL v4 = [WeakRetained _presentation];
  id v5 = [*(id *)(a1 + 32) requestEndBehavior];
  [v4 handleRequestEndBehavior:v5 isAttending:a2];
}

void sub_10004C184(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = *(void **)(a1 + 32);
    uint64_t v7 = *(void *)(a1 + 48);
    id v8 = [v6 _MDModeToSRModeConverter:*(void *)(a1 + 56)];
    if (v7 == a3)
    {
      uint64_t v9 = *(void *)(a1 + 40);
      id v10 = v6;
      id v11 = v5;
    }
    else
    {
      id v10 = v6;
      id v11 = v5;
      uint64_t v9 = 0;
    }
    [v10 _processAddViewsCommand:v11 forMode:v8 completion:v9];
  }
  else
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      if (*(void *)(a1 + 48) == a3)
      {
        uint64_t v12 = *(void *)(a1 + 40);
        id v13 = v5;
      }
      else
      {
        id v13 = v5;
        uint64_t v12 = 0;
      }
      [*(id *)(a1 + 32) siriSessionDidReceiveSayItCommand:v13 completion:v12];
    }
    else
    {
      id v14 = (void *)AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
        sub_1000B8BC0(v14);
      }
    }
  }
}

void sub_10004C96C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_10004C9AC(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 8);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10004CB8C;
  v15[3] = &unk_100143F28;
  objc_copyWeak(&v17, a1 + 8);
  id v16 = a1[4];
  id v5 = [WeakRetained _hostWithErrorHandler:v15];
  id v6 = a1[4];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10004CBF0;
  v8[3] = &unk_100143F50;
  objc_copyWeak(&v14, a1 + 8);
  id v9 = a1[4];
  id v10 = a1[5];
  id v11 = a1[6];
  id v12 = a1[7];
  id v7 = v3;
  id v13 = v7;
  [v5 serviceBulletinWithIdentifier:v6 replyHandler:v8];

  objc_destroyWeak(&v14);
  objc_destroyWeak(&v17);
}

void sub_10004CB68(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10004CB8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B8CE0(a1, v4, (uint64_t)v3);
  }
}

void sub_10004CBF0(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
  {
    sub_1000B8E2C(a1, v4);
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (v3) {
LABEL_3:
  }
    [*(id *)(a1 + 40) setAssistantBulletin:v3];
LABEL_4:
  unsigned __int8 v11 = 0;
  id v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  id v10 = 0;
  id v7 = [v5 parseStringWithFormat:v6 error:&v10 containsPrivacySensitiveContents:&v11];
  id v8 = v10;
  if (!v7 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B8DB4();
  }
  uint64_t v9 = *(void *)(a1 + 64);
  if (v9) {
    (*(void (**)(uint64_t, void *, void))(v9 + 16))(v9, v7, v11);
  }
}

void sub_10004CCE8(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    int v5 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
    uint64_t v6 = (void *)AFSiriLogContextConnection;
    BOOL v7 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
    if (v5)
    {
      if (v7)
      {
        uint64_t v8 = *(void *)(a1 + 32);
        uint64_t v9 = v6;
        id v10 = SRUIFSpeechSynthesisResultGetName();
        uint64_t v11 = *(void *)(a1 + 40);
        *(_DWORD *)id v20 = 136315907;
        *(void *)&v20[4] = "-[SRSiriViewController _configuredSpeakableUtteranceParserForCommand:context:speakableText:"
                             "subCompletion:speakPreparation:speakCompletion:]_block_invoke";
        *(_WORD *)&v20[12] = 2117;
        *(void *)&v20[14] = v8;
        *(_WORD *)&v20[22] = 2112;
        id v21 = v10;
        LOWORD(v22) = 2112;
        *(void *)((char *)&v22 + 2) = v11;
        id v12 = "%s #tts 32 SRUIFSpeechSynthesisCompletion text=\"%{sensitive}@\" result=%@ command=%@";
LABEL_12:
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, v12, v20, 0x2Au);
      }
    }
    else if (v7)
    {
      uint64_t v17 = *(void *)(a1 + 32);
      uint64_t v9 = v6;
      id v10 = SRUIFSpeechSynthesisResultGetName();
      uint64_t v18 = *(void *)(a1 + 40);
      *(_DWORD *)id v20 = 136315906;
      *(void *)&v20[4] = "-[SRSiriViewController _configuredSpeakableUtteranceParserForCommand:context:speakableText:su"
                           "bCompletion:speakPreparation:speakCompletion:]_block_invoke";
      *(_WORD *)&v20[12] = 2112;
      *(void *)&v20[14] = v17;
      *(_WORD *)&v20[22] = 2112;
      id v21 = v10;
      LOWORD(v22) = 2112;
      *(void *)((char *)&v22 + 2) = v18;
      id v12 = "%s #tts 32 SRUIFSpeechSynthesisCompletion text=\"%@\" result=%@ command=%@";
      goto LABEL_12;
    }
    if (a2 == 3) {
      [WeakRetained _setListenAfterSpeakingForRequestFinished:0];
    }
    [WeakRetained _didCompleteActionForAceCommand:*(void *)(a1 + 40) success:a2 != 3 *(void *)&v20[16] v21, v22];
    uint64_t v19 = *(void *)(a1 + 48);
    if (v19) {
      (*(void (**)(void))(v19 + 16))();
    }
    goto LABEL_19;
  }
  id v13 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)id v20 = 136315138;
    *(void *)&v20[4] = "-[SRSiriViewController _configuredSpeakableUtteranceParserForCommand:context:speakableText:subC"
                         "ompletion:speakPreparation:speakCompletion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s #tts 32 FAIL strongSelf", v20, 0xCu);
  }
  int v14 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
  id v15 = (void *)AFSiriLogContextConnection;
  BOOL v16 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR);
  if (v14)
  {
    if (v16) {
      sub_1000B8FAC(a1, v15);
    }
  }
  else if (v16)
  {
    sub_1000B8EE8(a1, v15);
  }
LABEL_19:
}

void sub_10004D1F8(id a1, int64_t a2, NSError *a3)
{
  BOOL v4 = a3;
  int v5 = AFSiriLogContextConnection;
  if (v4)
  {
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000B9074((uint64_t)v4, a2, v5);
    }
  }
  else if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 136315394;
    BOOL v7 = "-[SRSiriViewController siriSessionDidReceivePlayNotificationSound:completion:]_block_invoke";
    __int16 v8 = 2048;
    int64_t v9 = a2;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s Completed notification sound playback with PlaybackCompletionType: %zd", (uint8_t *)&v6, 0x16u);
  }
}

void sub_10004D454(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _didCompleteActionForAceCommand:*(void *)(*(void *)(a1 + 32) + 96) success:1];
    BOOL v4 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v5 = v3[12];
      int v6 = 136315394;
      BOOL v7 = "-[SRSiriViewController alertDidBeginPlaying:]_block_invoke";
      __int16 v8 = 2112;
      uint64_t v9 = v5;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s Marking notification sound 'complete' for command %@ ", (uint8_t *)&v6, 0x16u);
    }
  }
}

uint64_t sub_10004D978(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10004DD94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id location,char a36)
{
  objc_destroyWeak(v36);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a36, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10004DDFC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_10004DE14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _didCompleteActionForAceCommand:*(void *)(a1 + 32) success:1];
}

void sub_10004DE68(uint64_t a1)
{
  if (!--*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained _didCompleteActionForAceCommand:*(void *)(a1 + 32) success:1];
  }
}

void sub_10004E1F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  if (v16) {
    objc_destroyWeak(v17);
  }
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004E214(uint64_t a1, char a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    BOOL v4 = [WeakRetained _instrumentationManager];
    uint64_t v5 = [*(id *)(a1 + 32) punchOutUri];
    int v6 = [*(id *)(a1 + 32) appId];
    [v4 emitPunchOutEventWithURL:v5 appID:v6];

    BOOL v7 = [*(id *)(a1 + 32) aceId];
    +[SACommandSucceeded sruif_commandSucceededWithRefId:v7];
  }
  else
  {
    BOOL v7 = [*(id *)(a1 + 32) aceId];
    +[SACommandFailed sruif_commandFailedWithRefId:v7];
  }
  id v8 = (id)objc_claimAutoreleasedReturnValue();

  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_10004E488(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10004E4A4(uint64_t a1, int a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  uint64_t v5 = WeakRetained;
  if (!WeakRetained)
  {
LABEL_6:
    uint64_t v10 = *(void *)(a1 + 40);
    if (v10)
    {
      uint64_t v11 = [*(id *)(a1 + 32) aceId];
      id v12 = +[SACommandSucceeded sruif_commandSucceededWithRefId:v11];
      (*(void (**)(uint64_t, void *))(v10 + 16))(v10, v12);
    }
    goto LABEL_13;
  }
  if (a2)
  {
    int v6 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      BOOL v7 = *(void **)(a1 + 32);
      id v8 = v6;
      uint64_t v9 = [v7 aceId];
      *(_DWORD *)buf = 136315650;
      BOOL v30 = "-[SRSiriViewController siriSessionDidReceiveCloseAssistantCommand:completion:]_block_invoke";
      __int16 v31 = 2112;
      uint64_t v32 = v7;
      __int16 v33 = 2112;
      uint64_t v34 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s #tts speech queue is empty, performing dismissal command %@, aceId: %@", buf, 0x20u);
    }
    [v5 _dismissWithReason:*(void *)(a1 + 56)];
    goto LABEL_6;
  }
  if (!WeakRetained[1])
  {
    id v13 = objc_alloc_init((Class)AFQueue);
    int v14 = (void *)v5[1];
    v5[1] = v13;
  }
  id v15 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v16 = *(void **)(a1 + 32);
    uint64_t v17 = v15;
    uint64_t v18 = [v16 aceId];
    *(_DWORD *)buf = 136315650;
    BOOL v30 = "-[SRSiriViewController siriSessionDidReceiveCloseAssistantCommand:completion:]_block_invoke";
    __int16 v31 = 2112;
    uint64_t v32 = v16;
    __int16 v33 = 2112;
    uint64_t v34 = v18;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%s #tts delay enqueue dismissal command %@, aceId: %@", buf, 0x20u);
  }
  uint64_t v19 = (void *)v5[1];
  id v21 = _NSConcreteStackBlock;
  uint64_t v22 = 3221225472;
  id v23 = sub_10004E760;
  BOOL v24 = &unk_100144060;
  id v25 = *(id *)(a1 + 32);
  uint64_t v26 = v5;
  uint64_t v28 = *(void *)(a1 + 56);
  id v27 = *(id *)(a1 + 40);
  id v20 = objc_retainBlock(&v21);
  [v19 enqueueObject:v20, v21, v22, v23, v24];

LABEL_13:
}

void sub_10004E760(uint64_t a1)
{
  uint64_t v2 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = *(void **)(a1 + 32);
    BOOL v4 = v2;
    uint64_t v5 = [v3 aceId];
    int v9 = 136315650;
    uint64_t v10 = "-[SRSiriViewController siriSessionDidReceiveCloseAssistantCommand:completion:]_block_invoke";
    __int16 v11 = 2112;
    id v12 = v3;
    __int16 v13 = 2112;
    int v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #tts performing delayed dismissal command to %@, aceId: %@", (uint8_t *)&v9, 0x20u);
  }
  [*(id *)(a1 + 40) _dismissWithReason:*(void *)(a1 + 56)];
  uint64_t v6 = *(void *)(a1 + 48);
  if (v6)
  {
    BOOL v7 = [*(id *)(a1 + 32) aceId];
    id v8 = +[SACommandSucceeded sruif_commandSucceededWithRefId:v7];
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v8);
  }
}

void sub_10004E9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10004EA04(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v13 = WeakRetained;
    [WeakRetained _didReceiveAceCommand:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
    [v13 _didStartActionForAceCommand:*(void *)(a1 + 32)];
    [v13 _didCompleteActionForAceCommand:*(void *)(a1 + 32) success:1];
    id WeakRetained = v13;
    if (a2 != 3)
    {
      id v5 = objc_alloc((Class)SASRequestOptions);
      uint64_t v6 = [v13 _uiPresentationIdentifier];
      id v7 = [v5 initWithRequestSource:9 uiPresentationIdentifier:v6];

      id v8 = [v13 _requestOptions];
      int v9 = [v8 originalRequestOptions];
      if (v9)
      {
        [v7 setOriginalRequestOptions:v9];
      }
      else
      {
        uint64_t v10 = [v13 _requestOptions];
        [v7 setOriginalRequestOptions:v10];
      }
      __int16 v11 = [*(id *)(a1 + 32) aceId];
      [v7 setServerCommandId:v11];

      [v7 setPronunciationRequest:1];
      id v12 = [*(id *)(a1 + 32) context];
      [v7 setPronunciationContext:v12];

      [v13 _startRequestWithOptions:v7];
      id WeakRetained = v13;
    }
  }
}

void sub_10004F514(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B9100();
  }
}

void sub_10004F868(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (*(void *)(a1 + 40))
  {
    id v10 = v5;
    if (a2)
    {
      id v6 = objc_alloc_init((Class)SACommandSucceeded);
    }
    else
    {
      id v6 = objc_alloc_init((Class)SACommandFailed);
      [v6 setErrorCode:[v10 code]];
      id v7 = [v10 localizedDescription];
      id v8 = +[NSString stringWithFormat:@"Could not update the guide cache. %@", v7];
      [v6 setReason:v8];
    }
    int v9 = [*(id *)(a1 + 32) aceId];
    [v6 setRefId:v9];

    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    id v5 = v10;
  }
}

void sub_10004FEF0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_10004FF0C(uint64_t a1)
{
  uint64_t v2 = objc_alloc_init(SRPreSynthesisTask);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  BOOL v4 = [WeakRetained _pendingPreSynthesisTasks];
  [v4 addObject:v2];

  [(SRPreSynthesisTask *)v2 setPreSynthesizeTTSCommand:*(void *)(a1 + 32)];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10005008C;
  v9[3] = &unk_100144120;
  objc_copyWeak(&v11, (id *)(a1 + 48));
  id v10 = *(id *)(a1 + 40);
  id v5 = objc_retainBlock(v9);
  [(SRPreSynthesisTask *)v2 setCompletion:v5];
  id v8 = 0;
  unsigned __int8 v6 = [(SRPreSynthesisTask *)v2 handlePreSynthesisCommandWithError:&v8];
  id v7 = v8;
  if ((v6 & 1) == 0 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B91EC();
  }

  objc_destroyWeak(&v11);
}

void sub_100050074(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10005008C(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4)
    {
      id v5 = [v7 replyAceCommand];
      (*(void (**)(uint64_t, void *))(v4 + 16))(v4, v5);
    }
    unsigned __int8 v6 = [WeakRetained _pendingPreSynthesisTasks];
    [v6 removeObject:v7];
  }
}

uint64_t sub_1000509CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = v4;
    unsigned __int8 v6 = SRUIFSpeechSynthesisResultGetName();
    int v8 = 136315394;
    int v9 = "-[SRSiriViewController siriSessionRequestsPlayPhaticWithCompletion:]_block_invoke";
    __int16 v10 = 2112;
    id v11 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s #phatic 8 %@", (uint8_t *)&v8, 0x16u);
  }
  return (*(uint64_t (**)(void, BOOL))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), a2 != 2);
}

void sub_100050D98(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = [objc_alloc((Class)NSString) initWithData:v5 encoding:4];
    int v8 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      uint64_t v9 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 136315650;
      id v15 = "-[SRSiriViewController siriSessionDidReceiveLaunchTVRemoteCommand:completion:]_block_invoke";
      __int16 v16 = 2112;
      uint64_t v17 = v9;
      __int16 v18 = 2112;
      id v19 = v7;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%s %@ => %@", buf, 0x20u);
    }
    if (v7)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100050FDC;
      block[3] = &unk_100142E88;
      id v13 = v7;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      id v10 = objc_alloc_init((Class)SACommandSucceeded);
    }
    else
    {
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
        sub_1000B92DC();
      }
      id v10 = objc_alloc_init((Class)SACommandFailed);
    }
  }
  else
  {
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000B9268();
    }
    id v10 = objc_alloc_init((Class)SACommandFailed);
  }
  if (*(void *)(a1 + 56))
  {
    id v11 = [*(id *)(a1 + 48) aceId];
    [v10 setRefId:v11];

    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void sub_100050FDC(uint64_t a1)
{
  id v2 = [objc_alloc((Class)TVRViewServiceConfigContext) initWithDeviceIdentifier:*(void *)(a1 + 32) identifierType:3 deviceType:0 launchContext:9];
  uint64_t v1 = +[TVRViewServiceManager sharedInstance];
  [v1 presentWithContext:v2];
}

void sub_100052900(id a1, NSError *a2)
{
  id v2 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B9350();
  }
}

void sub_100053220(uint64_t a1)
{
  if (objc_opt_respondsToSelector())
  {
    if ([*(id *)(a1 + 40) containsItemWithIdentifier:*(void *)(a1 + 48)])
    {
      id v2 = *(void **)(a1 + 32);
      id v3 = [*(id *)(a1 + 56) identifier];
      [v2 siriDidFinishActionsForConversationItemWithIdentifier:v3 inConversation:*(void *)(a1 + 40)];
    }
    else if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
    {
      sub_1000B93C4();
    }
  }
}

uint64_t sub_100053D84(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100053E48(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

uint64_t sub_100054A7C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(void))(result + 16))();
  }
  return result;
}

void sub_100054D84(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    a2 = +[UIImage imageWithData:a2];
  }
  id v3 = (id)a2;
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100055340(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2)
  {
    CFStringRef v14 = @"metricsContext";
    uint64_t v15 = v2;
    id v3 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
  }
  else
  {
    id v3 = &__NSDictionary0__struct;
  }
  uint64_t v4 = (id *)(a1 + 56);
  if ([*(id *)(a1 + 56) isSubclassOfClass:objc_opt_class()])
  {
    uint64_t v5 = 7;
LABEL_12:
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_100055584;
    v10[3] = &unk_1001441B8;
    id v11 = *(id *)(a1 + 40);
    v13[1] = (id)v5;
    id v3 = v3;
    id v12 = v3;
    v13[2] = *(id *)(a1 + 64);
    objc_copyWeak(v13, (id *)(a1 + 48));
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
    objc_destroyWeak(v13);

    goto LABEL_13;
  }
  if ([*v4 isSubclassOfClass:objc_opt_class()])
  {
    id v6 = [*(id *)(a1 + 40) aceObject];
    id v7 = [v6 siriui_eventInfo];

    if (v7)
    {
      id v8 = [v7 mutableCopy];
      [v8 addEntriesFromDictionary:v3];
      id v9 = [v8 copy];

      id v3 = v9;
    }

    uint64_t v5 = 2;
    goto LABEL_12;
  }
  if ([*v4 isSubclassOfClass:objc_opt_class()])
  {
    uint64_t v5 = 1;
    goto LABEL_12;
  }
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B9438();
  }
LABEL_13:
}

void sub_100055584(uint64_t a1)
{
  id v2 = objc_alloc((Class)AFMetrics);
  id v3 = [*(id *)(a1 + 32) aceCommandIdentifier];
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 40);
  id v6 = +[NSNumber numberWithDouble:*(double *)(a1 + 64)];
  id v9 = [v2 initWithOriginalCommandId:v3 category:v4 eventInfo:v5 duration:v6];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v8 = [WeakRetained _session];
  [v8 recordUIMetrics:v9];
}

void sub_1000557A0(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B94AC();
  }
}

void sub_1000558C8(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2 && os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B9520();
  }
}

void sub_100057400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,id location,char a35)
{
  objc_destroyWeak(v35);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v36 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100057458(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (id *)(a1 + 48);
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(v5);
  id v8 = [WeakRetained _readoutResultFromTTSResult:a2 error:v6];

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v8;
  id v9 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v9);
}

void sub_1000574D4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (id *)(a1 + 48);
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(v5);
  id v8 = [WeakRetained _readoutResultFromTTSResult:a2 error:v6];

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v8;
  id v9 = *(NSObject **)(a1 + 32);

  dispatch_group_leave(v9);
}

void sub_100057550(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _readoutResultFromTitleResult:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) messageResult:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)];
    uint64_t v4 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_INFO))
    {
      uint64_t v5 = v4;
      id v6 = AFUIBulletinReadoutResultGetName();
      int v20 = 136315394;
      id v21 = "-[SRSiriViewController siriSessionRequestsReadoutOfBulletin:completion:]_block_invoke";
      __int16 v22 = 2112;
      id v23 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%s #cmas #carPlay Synthesis is complete. %@", (uint8_t *)&v20, 0x16u);
    }
    [v3 _setReadingBulletinContentInCarPlayOutsideOfSiriSession:0];
    id v7 = *(void **)(*(void *)(a1 + 32) + 8);
    if (!v7)
    {
      id v8 = objc_alloc_init((Class)AFQueue);
      uint64_t v9 = *(void *)(a1 + 32);
      id v10 = *(void **)(v9 + 8);
      *(void *)(v9 + 8) = v8;

      id v7 = *(void **)(*(void *)(a1 + 32) + 8);
    }
    [v7 enqueueObject:&stru_100144240];
    id v11 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
  }
  else
  {
    id v12 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000B960C(v12, v13, v14, v15, v16, v17, v18, v19);
    }
    id v11 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
  }
  v11();
}

void sub_10005770C(id a1)
{
  uint64_t v1 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315138;
    uint64_t v5 = "-[SRSiriViewController siriSessionRequestsReadoutOfBulletin:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "%s #tts TTS completed after AFUIBulletinReadout. Deactivating AVAudioSession sharedInstance and notifying others on deactivation.", buf, 0xCu);
  }
  id v2 = +[AVAudioSession sharedInstance];
  uint64_t v3 = 0;
  [v2 setActive:0 withOptions:1 error:&v3];
}

void sub_100057D1C(id a1, NSError *a2)
{
  id v2 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B97B8();
  }
}

void sub_100058BF0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

uint64_t sub_100058C24(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v13 = WeakRetained;
    if (a2)
    {
      id v6 = [WeakRetained _completedCommandAppPunchOutIds];
      [v6 removeAllObjects];

      uint64_t v7 = *(void *)(a1 + 32);
      id v8 = [*(id *)(a1 + 40) punchOutUri];
      uint64_t v9 = [*(id *)(a1 + 40) appDisplayName];
      id v10 = [*(id *)(a1 + 40) bundleId];
      id v11 = +[SAUIAppPunchOutEvent sruif_appPunchOutEventWithRefId:v7 URL:v8 appDisplayName:v9 bundleId:v10];

      [v13 _performGenericAceCommand:v11 turnIdentifier:0 completion:0];
      id v5 = v13;
    }
    id WeakRetained = *(id *)(a1 + 48);
    if (WeakRetained)
    {
      id WeakRetained = (id)(*((uint64_t (**)(id, uint64_t))WeakRetained + 2))(WeakRetained, a2);
      id v5 = v13;
    }
  }

  return _objc_release_x1(WeakRetained, v5);
}

void sub_100058D44(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B99B0();
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100058DBC(id *a1, int a2)
{
  if (a2)
  {
    id v3 = (void (*)(void))*((void *)a1[5] + 2);
    v3();
  }
  else
  {
    unsigned __int8 v4 = [a1[4] appAvailableInStorefront];
    id v5 = a1[4];
    if (v4)
    {
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_100058F44;
      v8[3] = &unk_100144328;
      id v9 = v5;
      id v10 = a1[5];
      objc_copyWeak(&v11, a1 + 6);
      [v9 afui_populateStoreServicesData:v8];
      objc_destroyWeak(&v11);
    }
    else
    {
      [v5 afui_punchOutAppNotAvailableViews];
      id v7 = (id)objc_claimAutoreleasedReturnValue();
      id WeakRetained = objc_loadWeakRetained(a1 + 6);
      [WeakRetained _performGenericAceCommand:v7 turnIdentifier:0 completion:0];

      (*((void (**)(void))a1[5] + 2))();
    }
  }
}

void sub_100058F30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100058F44(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) afui_punchOutFailureViews];
  id v3 = [v2 views];
  id v4 = [v3 count];

  if (v4)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained _performGenericAceCommand:v2 turnIdentifier:0 completion:0];

    id v6 = *(void **)(a1 + 32);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100059080;
    v7[3] = &unk_100144300;
    objc_copyWeak(&v8, (id *)(a1 + 48));
    [v6 afui_getInstallAppPunchoutWithCompletion:v7];
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    objc_destroyWeak(&v8);
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  }
}

void sub_100059068(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100059080(uint64_t a1, void *a2)
{
  if (a2)
  {
    id v3 = a2;
    id v4 = objc_alloc_init((Class)SAUIAddViews);
    [v4 setDialogPhase:SAUIDialogPhaseCompletionValue];
    id v7 = v3;
    id v5 = +[NSArray arrayWithObjects:&v7 count:1];

    [v4 setViews:v5];
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _performGenericAceCommand:v4 turnIdentifier:0 completion:0];
  }
}

void sub_1000599B4(id a1, NSError *a2)
{
  id v2 = a2;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000B9A28();
  }
}

void sub_100059AAC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100059AC8(uint64_t a1, int a2)
{
  id v3 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = [WeakRetained presentation];

  if (objc_opt_respondsToSelector())
  {
    id v6 = objc_loadWeakRetained(v3);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_100059C48;
    v9[3] = &unk_100144398;
    char v11 = a2;
    id v10 = v5;
    [v6 _fetchAttendingState:v9];
  }
  id v7 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v13 = "-[SRSiriViewController _checkAndUpdateSiriIdleAndQuietStatusIfNeeded]_block_invoke";
    __int16 v14 = 1024;
    int v15 = a2;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s Notifying presentation that Siri's active request options changed, siriIsIdleAndQuiet=%i", buf, 0x12u);
  }
  id v8 = objc_loadWeakRetained(v3);
  [v8 _activeRequestOptionsDidChange];
}

id sub_100059C48(uint64_t a1, uint64_t a2)
{
  id v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    int v5 = *(unsigned __int8 *)(a1 + 40);
    int v7 = 136315650;
    id v8 = "-[SRSiriViewController _checkAndUpdateSiriIdleAndQuietStatusIfNeeded]_block_invoke_2";
    __int16 v9 = 1024;
    int v10 = v5;
    __int16 v11 = 1024;
    int v12 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #idleTimer Notifying presentation that Siri's idle and quiet status changed, siriIsIdleAndQuiet=%i isAttending: %i", (uint8_t *)&v7, 0x18u);
  }
  return [*(id *)(a1 + 32) siriIsIdleAndQuietStatusDidChange:*(unsigned __int8 *)(a1 + 40) isAttending:a2];
}

void sub_100059DE4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100059E00(uint64_t a1, uint64_t a2)
{
  id v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 136315394;
    id v8 = "-[SRSiriViewController _scheduleInterruptedAudioResumingIfNeeded]_block_invoke";
    __int16 v9 = 1024;
    int v10 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s Scheduling interrupted audio to be resumed if needed, isAttending: %d", (uint8_t *)&v7, 0x12u);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained _resumesInterruptedAudioPlaybackForAttendingState:a2])
  {
    double v6 = 1.0;
    if (a2) {
      double v6 = 0.25;
    }
    [WeakRetained _scheduleAudioResumptionAfterDelayInSec:v6];
  }
}

void sub_10005A05C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained && !WeakRetained[22] && [WeakRetained _isSiriIdleAndQuiet])
  {
    id v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v5 = 136315138;
      double v6 = "-[SRSiriViewController _scheduleAudioResumptionAfterDelayInSec:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s Resuming interrupted audio", (uint8_t *)&v5, 0xCu);
    }
    id v4 = [v2 _session];
    [v4 resumeInterruptedAudioPlaybackIfNeeded];
  }
}

uint64_t sub_10005A56C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

uint64_t sub_10005A6F0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  }
  return result;
}

void sub_10005AA44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005AA68(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    double v6 = AFSiriLogContextConnection;
    BOOL v7 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
    if (v4)
    {
      if (v7)
      {
        int v8 = 136315138;
        __int16 v9 = "-[SRSiriViewController _enqueueSpokenSuggestionsFromAddViews:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s #suggestions SiriSuggestions returned a spoken hint. Enqueuing it to be spoken after TTS.", (uint8_t *)&v8, 0xCu);
      }
      objc_storeStrong(WeakRetained + 34, a2);
    }
    else
    {
      if (v7)
      {
        int v8 = 136315138;
        __int16 v9 = "-[SRSiriViewController _enqueueSpokenSuggestionsFromAddViews:]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s #suggestions No spoken hints returned from SiriSuggestions.", (uint8_t *)&v8, 0xCu);
      }
      [WeakRetained[51] recordActionCompletedForAceCommand:*(void *)(a1 + 32) success:1];
    }
  }
}

void sub_10005AD4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005AD78(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v13 = "-[SRSiriViewController _speakEnqueuedSpokenSuggestion]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s #suggestions Hint TTS finished..", buf, 0xCu);
    }
    id v4 = [*(id *)(a1 + 32) addViews];
    int v5 = [WeakRetained _searchAddViewsForSpokenHintsView:v4];

    double v6 = +[AFDialogPhase completionDialogPhase];
    BOOL v7 = [*(id *)(a1 + 32) spokenText];
    int v8 = [*(id *)(a1 + 32) suggestionId];
    __int16 v9 = +[NSString stringWithFormat:@"SiriHintSpoken#%@", v8];
    [WeakRetained _logAceObjectSpoken:v5 dialogPhase:v6 speakableText:v7 dialogIdentifierOverride:v9];

    int v10 = (void *)WeakRetained[51];
    __int16 v11 = [*(id *)(a1 + 32) addViews];
    [v10 recordActionCompletedForAceCommand:v11 success:1];
  }
}

void sub_10005B63C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005B660(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    [WeakRetained _notifyPromptedUserForInput];

    id v4 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 136315138;
      int v8 = "-[SRSiriViewController _startListenAfterSpeaking]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #IntuitiveConversation - not starting Listen After Speaking request because we're already attending.", (uint8_t *)&v7, 0xCu);
    }
  }
  else
  {
    int v5 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v7 = 136315138;
      int v8 = "-[SRSiriViewController _startListenAfterSpeaking]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%s #IntuitiveConversation - Starting Listen After Speaking request", (uint8_t *)&v7, 0xCu);
    }
    id v6 = objc_loadWeakRetained((id *)(a1 + 32));
    [v6 _startListenAfterSpeakingRequest];
  }
}

uint64_t sub_10005B844(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10005BAFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10005BB20(uint64_t a1, int a2)
{
  id v4 = AFSiriLogContextConnection;
  BOOL v5 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v5)
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v19 = "-[SRSiriViewController _startListenAfterSpeakingRequest]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #tts TTS queue is empty. Starting new request.", buf, 0xCu);
    }
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained _startRequestWithOptions:*(void *)(a1 + 32)];
  }
  else
  {
    if (v5)
    {
      *(_DWORD *)buf = 136315138;
      uint64_t v19 = "-[SRSiriViewController _startListenAfterSpeakingRequest]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #tts TTS queue is not empty. Scheduling new request after TTS completion.", buf, 0xCu);
    }
    int v7 = *(void **)(*(void *)(a1 + 40) + 8);
    if (!v7)
    {
      id v8 = objc_alloc_init((Class)AFQueue);
      uint64_t v9 = *(void *)(a1 + 40);
      int v10 = *(void **)(v9 + 8);
      *(void *)(v9 + 8) = v8;

      int v7 = *(void **)(*(void *)(a1 + 40) + 8);
    }
    int v12 = _NSConcreteStackBlock;
    uint64_t v13 = 3221225472;
    __int16 v14 = sub_10005BD1C;
    int v15 = &unk_100143250;
    objc_copyWeak(&v17, (id *)(a1 + 48));
    id v16 = *(id *)(a1 + 32);
    __int16 v11 = objc_retainBlock(&v12);
    [v7 enqueueObject:v11, v12, v13, v14, v15];

    objc_destroyWeak(&v17);
  }
}

void sub_10005BD00(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10005BD1C(uint64_t a1)
{
  uint64_t v2 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 136315138;
    BOOL v5 = "-[SRSiriViewController _startListenAfterSpeakingRequest]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s #tts TTS completed. Start listening.", (uint8_t *)&v4, 0xCu);
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _startRequestWithOptions:*(void *)(a1 + 32)];
}

Class sub_10005D468(uint64_t a1)
{
  v4[0] = 0;
  if (!qword_100171E30)
  {
    v4[1] = _NSConcreteStackBlock;
    v4[2] = 3221225472;
    v4[3] = sub_10005D5AC;
    void v4[4] = &unk_100144420;
    void v4[5] = v4;
    long long v5 = off_100144408;
    uint64_t v6 = 0;
    qword_100171E30 = _sl_dlopen();
    uint64_t v2 = (void *)v4[0];
    if (!qword_100171E30)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("VTStateManager");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    uint64_t v2 = (void *)sub_1000B9BF8();
LABEL_8:
    free(v2);
  }
  qword_100171E28 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t sub_10005D5AC()
{
  uint64_t result = _sl_dlopen();
  qword_100171E30 = result;
  return result;
}

void sub_10005D634(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x20u);
}

void sub_10005D654(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x20u);
}

void sub_10005D66C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t sub_10005D708()
{
  return v0;
}

uint64_t sub_10005D714()
{
  return v0;
}

void sub_10005D720(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

void sub_10005D740(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x2Au);
}

void sub_10005D774(uint64_t a1@<X8>)
{
  *(void *)(v1 - 8) = a1;
}

void sub_10005DA74(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    [WeakRetained _startScrollingWithOptions:*(void *)(a1 + 32)];
    id WeakRetained = v3;
  }
}

void sub_10005EA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10005EAE0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10005EAF0(uint64_t a1)
{
}

void sub_10005EAF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11 = a2;
  id v12 = objc_alloc_init((Class)NSMutableString);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) length] != 0;
  if (*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)) {
    [v12 appendString:];
  }
  uint64_t v13 = a3 - a5;
  if (a3 != a5)
  {
    __int16 v14 = [*(id *)(a1 + 32) substringWithRange:a5, a3 - a5];
    [v12 appendString:v14];
  }
  [v12 appendString:v11];
  [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) addObject:v12];
  uint64_t v15 = *(void *)(*(void *)(a1 + 48) + 8);
  id v16 = *(void **)(v15 + 40);
  *(void *)(v15 + 40) = 0;

  uint64_t v17 = a6 - (v13 + a4);
  if (v17)
  {
    id v18 = objc_alloc_init((Class)NSMutableString);
    uint64_t v19 = *(void *)(*(void *)(a1 + 48) + 8);
    int v20 = *(void **)(v19 + 40);
    *(void *)(v19 + 40) = v18;

    id v21 = *(void **)(a1 + 32);
    v22[0] = _NSConcreteStackBlock;
    v22[1] = 3221225472;
    v22[2] = sub_10005EC9C;
    v22[3] = &unk_100144488;
    v22[4] = *(void *)(a1 + 48);
    [v21 enumerateSubstringsInRange:a3 + a4 options:1026 usingBlock:v22];
  }
}

id sub_10005EC9C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) appendString:a2];
}

id sub_10005EFBC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:0.0];
}

void sub_10005EFD4(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 40) removeFromSuperview];
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 40) = 0;
}

id sub_10005F024(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 64) setAlpha:1.0];
}

uint64_t sub_10005F03C(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 72) = 1;
  return result;
}

void sub_10005F62C(uint64_t a1)
{
  id v2 = objc_alloc(*(Class *)(a1 + 32));
  id v5 = [*(id *)(a1 + 32) _defaultURL];
  id v3 = [v2 initWithURL:v5];
  uint64_t v4 = (void *)qword_100171E38;
  qword_100171E38 = (uint64_t)v3;
}

void sub_10005F7F0(id a1)
{
  uint64_t v1 = (void *)qword_100171E48;
  qword_100171E48 = (uint64_t)&off_100149CF0;
}

uint64_t sub_10005FB44(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  int v7 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v10 = 136315906;
    id v11 = "-[SRSiriPresentationPluginHost _rescanBundles]_block_invoke";
    __int16 v12 = 2114;
    id v13 = v5;
    __int16 v14 = 2114;
    uint64_t v15 = v9;
    __int16 v16 = 2114;
    id v17 = v6;
    _os_log_error_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s Error encountered enumerating %{public}@ in plugin directory at %{public}@: %{public}@", (uint8_t *)&v10, 0x2Au);
  }

  return 0;
}

void sub_100060030(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  id v5 = a2;
  id v6 = [a3 path];
  [v4 setObject:v6 forKey:v5];
}

void sub_100060180(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    objc_opt_class();
    if (objc_opt_isKindOfClass())
    {
      int v7 = *(void **)(a1 + 32);
      id v8 = +[NSURL fileURLWithPath:v6 isDirectory:1];
      [v7 setObject:v8 forKey:v5];
    }
    else
    {
      int v10 = (void *)AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
        sub_1000B9CA4(v10);
      }
    }
  }
  else
  {
    uint64_t v9 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000B9D40(v9);
    }
  }
}

id sub_1000606A4(id a1)
{
  return a1;
}

id sub_1000606C4(void *a1)
{
  id v1 = a1;
  id v2 = +[NSBundle mainBundle];
  id v3 = [v2 assistantUILocalizedStringForKey:v1 table:0];

  return v3;
}

uint64_t sub_100060738(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [v4 count];
  v18[0] = 0;
  v18[1] = v18;
  v18[2] = 0x2020000000;
  v18[3] = 0;
  uint64_t v14 = 0;
  uint64_t v15 = &v14;
  uint64_t v16 = 0x2020000000;
  char v17 = 1;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  v9[2] = sub_10006086C;
  v9[3] = &unk_100144598;
  id v6 = v4;
  id v10 = v6;
  id v11 = v18;
  __int16 v12 = &v14;
  id v13 = v5;
  [v3 enumerateObjectsUsingBlock:v9];
  uint64_t v7 = *((unsigned __int8 *)v15 + 24);

  _Block_object_dispose(&v14, 8);
  _Block_object_dispose(v18, 8);

  return v7;
}

void sub_100060848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10006086C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  [*(id *)(a1 + 32) objectAtIndex:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    while (1)
    {
      unint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
      unint64_t v7 = *(void *)(a1 + 56) - 1;
      [*(id *)(a1 + 32) objectAtIndex:v6];
      char isKindOfClass = objc_opt_isKindOfClass();
      if ((isKindOfClass & 1) != 0 || v6 >= v7) {
        break;
      }
      ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    }
    if ((isKindOfClass & 1) == 0 && v6 >= v7)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
      *a4 = 1;
    }
  }
}

id sub_100060A80(void *a1)
{
  id v1 = a1;
  id v2 = [objc_alloc((Class)NSMutableArray) initWithCapacity:[v1 count]];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  long long v21 = 0u;
  id v3 = v1;
  id v4 = [v3 countByEnumeratingWithState:&v18 objects:v28 count:16];
  if (v4)
  {
    id v6 = v4;
    char v7 = 0;
    uint64_t v8 = *(void *)v19;
    *(void *)&long long v5 = 136315650;
    long long v17 = v5;
    do
    {
      for (i = 0; i != v6; i = (char *)i + 1)
      {
        if (*(void *)v19 != v8) {
          objc_enumerationMutation(v3);
        }
        id v10 = *(void **)(*((void *)&v18 + 1) + 8 * i);
        uint64_t v11 = [v10 sr_sirilandShim:v17, v18];
        if (v11)
        {
          id v12 = (id)v11;
          if ((void *)v11 == v10)
          {
            id v12 = v10;
          }
          else
          {
            id v13 = AFSiriLogContextConnection;
            if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = v17;
              id v23 = "_SRSirilandShimAceViews";
              __int16 v24 = 2112;
              id v25 = v10;
              __int16 v26 = 2112;
              id v27 = v12;
              _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%s Successfully shimmed AceView for the Siriland presentation:\n    AceView: %@\n    Shimmed AceView: %@", buf, 0x20u);
            }
            char v7 = 1;
          }
        }
        else
        {
          id v12 = v10;
        }
        [v2 addObject:v12];
      }
      id v6 = [v3 countByEnumeratingWithState:&v18 objects:v28 count:16];
    }
    while (v6);

    if (v7)
    {
      id v14 = [v2 copy];
      goto LABEL_19;
    }
  }
  else
  {
  }
  id v14 = v3;
LABEL_19:
  uint64_t v15 = v14;

  return v15;
}

void sub_10006249C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_56;
  }
  uint64_t v91 = a1;
  id v93 = v5;
  id v7 = v5;
  uint64_t v8 = [v7 faceTime];
  unsigned int v9 = [v8 BOOLValue];

  if (v9)
  {
    id v10 = objc_alloc_init((Class)SFLocalImage);
    id v11 = v10;
    uint64_t v12 = 0;
  }
  else
  {
    id v13 = [v7 outgoing];
    unsigned int v14 = [v13 BOOLValue];

    if (!v14)
    {
      id v11 = objc_alloc_init((Class)SFImage);
      goto LABEL_8;
    }
    id v10 = objc_alloc_init((Class)SFLocalImage);
    id v11 = v10;
    uint64_t v12 = 1;
  }
  [v10 setLocalImageType:v12];
  [v11 setIsTemplate:1];
LABEL_8:
  [v11 setSize:14.0, 14.0];
  [v11 setSource:2];
  v95 = v6;
  v92 = v11;
  [v6 setImage:v11];
  v94 = v7;
  uint64_t v15 = [v7 contact];
  v96 = [v15 _applicablePhone];
  uint64_t v16 = [v15 _applicableEmail];
  uint64_t v17 = [v15 displayText];
  long long v18 = (void *)v17;
  if (!v17)
  {
    uint64_t v17 = +[NSNull null];
  }
  v85 = (void *)v17;
  v105[0] = v17;
  v90 = v15;
  v87 = [v15 object];
  long long v19 = [v87 fullName];
  long long v20 = v19;
  if (!v19)
  {
    long long v20 = +[NSNull null];
  }
  v105[1] = v20;
  long long v21 = [v96 number];
  __int16 v22 = UIFormattedPhoneNumberFromString();
  id v23 = v22;
  if (!v22)
  {
    id v23 = +[NSNull null];
  }
  v105[2] = v23;
  v89 = v16;
  __int16 v24 = [v16 emailAddress];
  id v25 = v24;
  if (!v24)
  {
    id v25 = +[NSNull null];
  }
  v105[3] = v25;
  __int16 v26 = +[NSArray arrayWithObjects:v105 count:4];
  if (!v24) {

  }
  if (!v22) {
  if (!v19)
  }

  if (!v18) {
  long long v99 = 0u;
  }
  long long v100 = 0u;
  long long v97 = 0u;
  long long v98 = 0u;
  id v27 = v26;
  id v28 = [v27 countByEnumeratingWithState:&v97 objects:v104 count:16];
  if (v28)
  {
    id v29 = v28;
    uint64_t v30 = *(void *)v98;
    while (2)
    {
      for (i = 0; i != v29; i = (char *)i + 1)
      {
        if (*(void *)v98 != v30) {
          objc_enumerationMutation(v27);
        }
        uint64_t v32 = *(void **)(*((void *)&v97 + 1) + 8 * i);
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) == 0 && [v32 length])
        {
          id v33 = v32;
          goto LABEL_35;
        }
      }
      id v29 = [v27 countByEnumeratingWithState:&v97 objects:v104 count:16];
      if (v29) {
        continue;
      }
      break;
    }
  }
  id v33 = 0;
LABEL_35:

  uint64_t v34 = [v94 callCount];
  uint64_t v35 = (uint64_t)[v34 integerValue];

  if (v35 >= 2)
  {
    uint64_t v36 = +[NSString stringWithFormat:@"%@ (%ld)", v33, v35];

    id v33 = (id)v36;
  }
  id v37 = objc_alloc_init((Class)SFRichText);
  id v38 = objc_alloc_init((Class)SFFormattedText);
  [v38 setText:v33];
  [v38 setIsBold:1];
  uint64_t v39 = [v94 missed];
  unsigned int v40 = [v39 BOOLValue];

  if (v40) {
    [v38 setTextColor:1];
  }
  v88 = v33;
  id v103 = v38;
  char v41 = +[NSArray arrayWithObjects:&v103 count:1];
  [v37 setFormattedTextPieces:v41];

  [v6 setLeadingText:v37];
  uint64_t v42 = [v96 label];
  id v43 = v42;
  if (v42 && [v42 length])
  {
    uint64_t v44 = +[CNLabeledValue localizedStringForLabel:v43];
  }
  else
  {
    id v45 = [v94 faceTime];
    unsigned int v46 = [v45 BOOLValue];

    if (v46)
    {
      id v47 = @"FACETIME_VIDEO_LABEL";
    }
    else
    {
      char v48 = [v94 faceTimeAudio];
      unsigned int v49 = [v48 BOOLValue];

      if (v49) {
        id v47 = @"FACETIME_AUDIO_LABEL";
      }
      else {
        id v47 = @"UNKNOWN_PHONE_LABEL";
      }
    }
    uint64_t v44 = sub_1000606C4(v47);
  }
  id v50 = (void *)v44;
  v84 = v38;
  v86 = v37;

  id v51 = objc_alloc_init((Class)SFRichText);
  id v52 = objc_alloc_init((Class)SFFormattedText);
  v83 = v50;
  [v52 setText:v50];
  [v52 setTextColor:0];
  v81 = v52;
  id v102 = v52;
  uint64_t v53 = 1;
  __int16 v54 = +[NSArray arrayWithObjects:&v102 count:1];
  [v51 setFormattedTextPieces:v54];

  v82 = v51;
  [v6 setLeadingSubtitle:v51];
  [v6 setSeparatorStyle:3];
  uint64_t v55 = [v94 outgoing];
  LOBYTE(v52) = [v55 BOOLValue];

  if ((v52 & 1) == 0)
  {
    __int16 v56 = [v94 missed];
    unsigned int v57 = [v56 BOOLValue];

    if (v57) {
      uint64_t v53 = 2;
    }
    else {
      uint64_t v53 = 3;
    }
  }
  v58 = [v94 faceTime];
  unsigned int v59 = [v58 BOOLValue];

  if (v59) {
    uint64_t v60 = 2;
  }
  else {
    uint64_t v60 = 1;
  }
  id v61 = objc_alloc((Class)INCallRecord);
  v62 = +[NSUUID UUID];
  v63 = [v62 UUIDString];
  v64 = [v94 callTime];
  v65 = [v94 contact];
  v66 = [v65 sr_inPerson];
  v67 = [v94 isNew];
  id v68 = [v61 initWithIdentifier:v63 dateCreated:v64 caller:v66 callRecordType:v53 callCapability:v60 callDuration:0 unseen:v67];

  v69 = v68;
  [*(id *)(v91 + 32) addObject:v68];
  id v70 = objc_alloc_init((Class)SAPhoneCall);
  v71 = +[NSUUID UUID];
  v72 = [v71 UUIDString];
  [v70 setAceId:v72];

  v73 = [v94 contact];
  [v70 setCallRecipient:v73];

  v74 = [v94 faceTime];
  [v70 setFaceTime:[v74 BOOLValue]];

  v75 = [v94 faceTimeAudio];
  [v70 setFaceTimeAudio:[v75 BOOLValue]];

  [*(id *)(v91 + 40) addObject:v70];
  id v76 = objc_alloc_init((Class)SFAbstractCommand);
  [v76 setType:1];
  id v77 = objc_alloc_init((Class)SFCommandValue);
  id v78 = objc_alloc_init((Class)SFReferentialCommand);
  v79 = [v70 aceId];
  [v78 setReferenceIdentifier:v79];

  [v77 setReferentialCommand:v78];
  [v76 setValue:v77];
  id v101 = v76;
  v80 = +[NSArray arrayWithObjects:&v101 count:1];
  id v6 = v95;
  [v95 setCommands:v80];

  id v5 = v93;
LABEL_56:
}

void sub_10006331C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    uint64_t v72 = a1;
    id v74 = v5;
    id v7 = v5;
    uint64_t v8 = [v7 contact];
    id v76 = [v8 _applicablePhone];
    unsigned int v9 = [v8 displayText];
    id v10 = v9;
    if (!v9)
    {
      id v10 = +[NSNull null];
    }
    v75 = v7;
    id v77 = v6;
    v87[0] = v10;
    v73 = v8;
    id v11 = [v8 object];
    uint64_t v12 = [v11 fullName];
    id v13 = v12;
    if (!v12)
    {
      id v13 = +[NSNull null];
    }
    v87[1] = v13;
    unsigned int v14 = [v76 number];
    uint64_t v15 = UIFormattedPhoneNumberFromString();
    uint64_t v16 = v15;
    if (!v15)
    {
      uint64_t v16 = +[NSNull null];
    }
    v87[2] = v16;
    uint64_t v17 = +[NSArray arrayWithObjects:v87 count:3];
    if (!v15) {

    }
    if (!v12) {
    if (!v9)
    }

    long long v80 = 0u;
    long long v81 = 0u;
    long long v78 = 0u;
    long long v79 = 0u;
    id v18 = v17;
    id v19 = [v18 countByEnumeratingWithState:&v78 objects:v86 count:16];
    if (v19)
    {
      uint64_t v20 = *(void *)v79;
      while (2)
      {
        for (i = 0; i != v19; i = (char *)i + 1)
        {
          if (*(void *)v79 != v20) {
            objc_enumerationMutation(v18);
          }
          __int16 v22 = *(void **)(*((void *)&v78 + 1) + 8 * i);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0 && [v22 length])
          {
            id v19 = v22;
            goto LABEL_25;
          }
        }
        id v19 = [v18 countByEnumeratingWithState:&v78 objects:v86 count:16];
        if (v19) {
          continue;
        }
        break;
      }
    }
LABEL_25:

    id v23 = objc_alloc_init((Class)SFRichText);
    id v24 = objc_alloc_init((Class)SFFormattedText);
    v71 = v19;
    [v24 setText:v19];
    [v24 setIsBold:1];
    v69 = v24;
    id v85 = v24;
    id v25 = +[NSArray arrayWithObjects:&v85 count:1];
    [v23 setFormattedTextPieces:v25];

    id v70 = v23;
    [v77 setLeadingText:v23];
    __int16 v26 = [v76 label];
    id v27 = v26;
    if (v26 && [v26 length])
    {
      uint64_t v28 = +[CNLabeledValue localizedStringForLabel:v27];
    }
    else
    {
      uint64_t v28 = sub_1000606C4(@"UNKNOWN_PHONE_LABEL");
    }
    id v29 = (void *)v28;

    id v30 = objc_alloc_init((Class)SFRichText);
    id v31 = objc_alloc_init((Class)SFFormattedText);
    id v68 = v29;
    [v31 setText:v29];
    [v31 setTextColor:0];
    v66 = v31;
    id v84 = v31;
    uint64_t v32 = +[NSArray arrayWithObjects:&v84 count:1];
    [v30 setFormattedTextPieces:v32];

    v67 = v30;
    [v77 setLeadingSubtitle:v30];
    uint64_t v33 = [v75 length];
    v65 = (void *)v33;
    if (v33)
    {
      uint64_t v34 = (void *)v33;
      id v35 = objc_alloc_init((Class)NSDateFormatter);
      [v35 setDateFormat:@"m:ss"];
      id v36 = objc_alloc_init((Class)SFRichText);
      id v37 = objc_alloc_init((Class)SFFormattedText);
      id v38 = +[NSDate dateWithTimeIntervalSinceReferenceDate:](NSDate, "dateWithTimeIntervalSinceReferenceDate:", (double)(uint64_t)[v34 integerValue]);
      uint64_t v39 = [v35 stringFromDate:v38];
      [v37 setText:v39];

      [v37 setTextColor:0];
      id v83 = v37;
      unsigned int v40 = +[NSArray arrayWithObjects:&v83 count:1];
      [v36 setFormattedTextPieces:v40];

      [v77 setTrailingSubtitle:v36];
    }
    char v41 = [v75 isNew];
    unsigned int v42 = [v41 BOOLValue];

    if (v42)
    {
      id v43 = objc_alloc_init((Class)SFLocalImage);
      [v43 setLocalImageType:2];
    }
    else
    {
      id v43 = objc_alloc_init((Class)SFImage);
    }
    [v43 setSize:14.0, 14.0];
    [v43 setSource:2];
    [v77 setImage:v43];
    [v77 setSeparatorStyle:3];
    id v44 = objc_alloc((Class)INCallRecord);
    id v45 = +[NSUUID UUID];
    unsigned int v46 = [v45 UUIDString];
    id v47 = [v75 callTime];
    char v48 = [v75 contact];
    unsigned int v49 = [v48 sr_inPerson];
    id v50 = [v75 isNew];
    id v64 = [v44 initWithIdentifier:v46 dateCreated:v47 caller:v49 callRecordType:5 callCapability:1 callDuration:0 unseen:v50];

    [*(id *)(v72 + 32) addObject:v64];
    id v51 = [v75 identifier];
    id v52 = [v51 URLByDeletingPathExtension];

    uint64_t v53 = [v52 lastPathComponent];
    id v54 = objc_alloc_init((Class)SAUIAppPunchOut);
    uint64_t v55 = +[NSUUID UUID];
    __int16 v56 = [v55 UUIDString];
    [v54 setAceId:v56];

    unsigned int v57 = +[NSString stringWithFormat:@"vmshow:%@", v53];
    v58 = +[NSURL URLWithString:v57];

    [v54 setAppAvailableInStorefront:1];
    [v54 setPunchOutUri:v58];
    [v54 setBundleId:@"com.apple.mobilephone"];
    [*(id *)(v72 + 40) addObject:v54];
    id v59 = objc_alloc_init((Class)SFAbstractCommand);
    [v59 setType:1];
    id v60 = objc_alloc_init((Class)SFCommandValue);
    id v61 = objc_alloc_init((Class)SFReferentialCommand);
    v62 = [v54 aceId];
    [v61 setReferenceIdentifier:v62];

    [v60 setReferentialCommand:v61];
    [v59 setValue:v60];
    id v82 = v59;
    v63 = +[NSArray arrayWithObjects:&v82 count:1];
    [v77 setCommands:v63];

    id v6 = v77;
    id v5 = v74;
  }
}

void sub_100064F98(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v11 = [v3 topObject];
  id v5 = [v11 view];
  id v6 = [v4 view];
  id v7 = [v6 superview];
  uint64_t v8 = *(void **)(a1 + 40);
  unsigned int v9 = [*(id *)(a1 + 32) allObjects];
  LOBYTE(v10) = 0;
  [v8 _performPushTransitionFromViewController:v11 andView:v5 toViewController:v4 andView:v6 inContainerView:v7 recentViewControllers:v9 transitionDuration:0.0 animated:v10 transitionCompletion:&stru_100144608 completion:&stru_100144628];

  [*(id *)(a1 + 32) pushObject:v4];
}

void sub_100065490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1000654AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  [WeakRetained _transitionWithContext:*(void *)(a1 + 32) animated:*(unsigned __int8 *)(a1 + 56) completion:*(void *)(a1 + 40)];
}

uint64_t sub_100065500(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000657AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000657C8(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) completeTransition:a2];
}

void sub_1000657D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
    id v5 = [WeakRetained _panGestureRecognizer];

    id v6 = [v5 view];
    [v6 removeGestureRecognizer:v5];

    [*(id *)(a1 + 32) addGestureRecognizer:v5];
  }
  [*(id *)(a1 + 40) completeTransition:a2];
  [*(id *)(a1 + 48) insertSubview:*(void *)(a1 + 56) belowSubview:*(void *)(a1 + 64)];
  id v7 = (id *)(a1 + 72);
  id v8 = objc_loadWeakRetained(v7);
  unsigned int v9 = [v8 _navigationController];
  uint64_t v10 = [v9 viewControllers];
  id v11 = [v10 mutableCopy];
  [v8 _setRecentViewControllers:v11];

  id v12 = objc_loadWeakRetained(v7);
  [v12 setOperation:0];
}

void sub_1000659E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1000659FC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 48) + 1;
  if (v1 < *(void *)(a1 + 56))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    [WeakRetained _recursivelyAnimateNextMultiPopKeyframe:v1 outOfTotalKeyframes:*(void *)(a1 + 56) transitionContext:*(void *)(a1 + 32)];
  }
}

void sub_100065C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100065C20(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 48))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v3 = [WeakRetained _recentViewControllers];
    [v3 removeLastObject];
  }
  id v4 = objc_loadWeakRetained((id *)(a1 + 40));
  [v4 setOperation:0];

  id v5 = *(uint64_t (**)(void))(*(void *)(a1 + 32) + 16);

  return v5();
}

id sub_100065F28(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) completeTransition:a2];
}

void sub_100066068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100066084(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) fromPlatteredCardView];
  id v5 = v4;
  if (a2)
  {
    [v4 setDarkenIntensity:0.0];

    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    id v5 = [WeakRetained _panGestureRecognizer];

    id v7 = [v5 view];
    [v7 removeGestureRecognizer:v5];

    id v8 = objc_loadWeakRetained((id *)(a1 + 56));
    unsigned int v9 = [v8 _navigationController];
    uint64_t v10 = [v9 viewControllers];
    id v11 = [v10 count];

    if ((unint64_t)v11 >= 2)
    {
      id v12 = [*(id *)(a1 + 32) fromPlatteredCardView];
      [v12 addGestureRecognizer:v5];
    }
  }
  else
  {
    [v4 setDarkenIntensity:1.0];
  }

  if (*(unsigned char *)(a1 + 64))
  {
    [*(id *)(a1 + 32) completeTransition:a2];
    id v13 = [*(id *)(a1 + 40) viewForKey:UITransitionContextToViewKey];
    unsigned int v14 = [*(id *)(a1 + 40) viewForKey:UITransitionContextFromViewKey];
    uint64_t v15 = [*(id *)(a1 + 40) containerView];
    [v15 insertSubview:v13 belowSubview:v14];

    id v16 = objc_loadWeakRetained((id *)(a1 + 56));
    uint64_t v17 = [v16 _navigationController];
    id v18 = [v17 viewControllers];
    id v19 = [v18 mutableCopy];
    [v16 _setRecentViewControllers:v19];
  }
  uint64_t result = *(void *)(a1 + 48);
  if (result)
  {
    long long v21 = *(uint64_t (**)(void))(result + 16);
    return v21();
  }
  return result;
}

void sub_1000665D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_1000665F4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  long long v3 = *(_OWORD *)(a1 + 80);
  v6[0] = *(_OWORD *)(a1 + 64);
  v6[1] = v3;
  v6[2] = *(_OWORD *)(a1 + 96);
  [v2 setTransform:v6];
  [*(id *)(a1 + 40) setFrame:*(double *)(a1 + 112), *(double *)(a1 + 120), *(double *)(a1 + 128), *(double *)(a1 + 136)];
  id v4 = *(void **)(a1 + 32);
  [*(id *)(a1 + 48) percentComplete];
  [v4 setDarkenIntensity:];
  return [*(id *)(a1 + 56) setFrame:*(double *)(a1 + 144), *(double *)(a1 + 152), *(double *)(a1 + 160), *(double *)(a1 + 168)];
}

void sub_10006666C(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    (*(void (**)(uint64_t, void))(v3 + 16))(v3, a2 & ~[WeakRetained _isCancelling]);
  }
  id v6 = (id *)(a1 + 40);
  id v7 = objc_loadWeakRetained(v6);
  unsigned int v8 = [v7 _isCancelling];

  if (v8)
  {
    id v9 = objc_loadWeakRetained(v6);
    [v9 _setCancelling:0];
  }
}

uint64_t sub_10006672C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10006673C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10006756C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:0.0];
}

id sub_100067584(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) setHidden:1];
}

id sub_10006759C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) setAlpha:1.0];
}

void sub_100068648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id a27)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a27);
  _Block_object_dispose((const void *)(v27 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100068680(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100068690(uint64_t a1)
{
}

void sub_100068698(uint64_t a1, void *a2)
{
}

void sub_1000686A8(uint64_t a1, void *a2)
{
  uint64_t v3 = (id *)(a1 + 48);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  [WeakRetained didFinishSynthesisRequest:*(void *)(a1 + 32) withInstrumentMetrics:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) error:v4];
}

void sub_100068838(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) text];
  uint64_t v3 = [*(id *)(*(void *)(a1 + 40) + 48) objectForKeyedSubscript:v2];
  id v4 = v3;
  if (v3)
  {
    if (*(void *)(a1 + 48))
    {
      id v5 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
        sub_1000BA658((uint64_t)v2, (uint64_t *)(a1 + 48), v5);
      }
      [*(id *)(*(void *)(a1 + 40) + 40) replaceObjectAtIndex:[v4 unsignedIntegerValue] withObject:&off_100149B20];
    }
    else
    {
      id v14 = [v3 unsignedIntegerValue];
      uint64_t v15 = *(void **)(*(void *)(a1 + 40) + 40);
      [*(id *)(a1 + 56) audioDuration];
      uint64_t v17 = +[NSNumber numberWithDouble:v16 * 1000.0];
      [v15 replaceObjectAtIndex:v14 withObject:v17];
    }
    [*(id *)(*(void *)(a1 + 40) + 48) removeObjectForKey:v2];
    if (![*(id *)(*(void *)(a1 + 40) + 48) count])
    {
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 64);
      if (v18) {
        (*(void (**)(void))(v18 + 16))();
      }
    }
  }
  else
  {
    id v6 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000BA5E0(v6, v7, v8, v9, v10, v11, v12, v13);
    }
  }
}

void sub_100068D60(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 textRequestViewRequestsVoiceActivation:*(void *)(a1 + 32)];
}

void sub_100068ECC(uint64_t a1, int a2)
{
  id v2 = *(void **)(a1 + 32);
  if (a2)
  {
    id v3 = [v2 _textField];
    [v3 becomeFirstResponder];
  }
  else
  {
    [v2 resignFirstResponder];
  }
}

id sub_10006912C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _cancelButton];
  LOBYTE(v3) = *(unsigned char *)(*(void *)(a1 + 32) + 9);
  [v2 setAlpha:(double)v3];

  [*(id *)(a1 + 32) setNeedsLayout];
  id v4 = *(void **)(a1 + 32);

  return [v4 layoutIfNeeded];
}

void sub_100069B04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100069B20(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    id v2 = [WeakRetained delegate];
    [v2 textRequestViewDidEndTextEditMenuInteraction:v3];

    id WeakRetained = v3;
  }
}

void sub_10006A324(id a1)
{
  id v1 = [[SASBoardServicesConfiguration alloc] _init];
  uint64_t v2 = qword_100171E58;
  qword_100171E58 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_10006A9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v8 = a6;
  id v9 = *(id *)(a1 + 40);
  id v7 = v8;
  SiriUIInvokeOnMainQueue();
}

void sub_10006AA90(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    uint64_t v2 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 136315394;
      id v9 = "-[SRDismissalClassificationController requestMitigationStatusBasedOnRequestClassification:withRequestSource:w"
           "ithCompletion:]_block_invoke_2";
      __int16 v10 = 2112;
      uint64_t v11 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation Error fetching activationHistory: %@", buf, 0x16u);
    }
    uint64_t v4 = *(void *)(a1 + 48);
    if (v4) {
      (*(void (**)(uint64_t, void, void, void, void))(v4 + 16))(v4, 0, *(unsigned __int8 *)(a1 + 88), 0, *(void *)(a1 + 32));
    }
  }
  else
  {
    id v7 = [[SRUIDSurveyActivationHistory alloc] initWithCountOfIntended:*(void *)(a1 + 56) - *(void *)(a1 + 64) countOfUnintended:*(void *)(a1 + 64) countOfUnintendedActivationSinceLastIntended:*(void *)(a1 + 72) days:*(void *)(a1 + 80)];
    id v5 = [*(id *)(a1 + 40) shouldMitigateBasedOnActivationHistory:];
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6) {
      (*(void (**)(uint64_t, id, void, SRUIDSurveyActivationHistory *, void))(v6 + 16))(v6, v5, *(unsigned __int8 *)(a1 + 88), v7, 0);
    }
  }
}

void sub_10006AF0C(id a1)
{
  dispatch_queue_t v1 = dispatch_queue_create("Core duet logging queue", 0);
  uint64_t v2 = qword_100171E68;
  qword_100171E68 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

void sub_10006B3FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10006B41C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v26 = v6;
    id v27 = v5;
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    id v7 = v5;
    id v8 = [v7 countByEnumeratingWithState:&v28 objects:v38 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v29;
      do
      {
        uint64_t v11 = 0;
        do
        {
          if (*(void *)v29 != v10) {
            objc_enumerationMutation(v7);
          }
          uint64_t v12 = *(void **)(*((void *)&v28 + 1) + 8 * (void)v11);
          uint64_t v13 = [v12 metadata:v26, v27];
          id v14 = [v13 objectForKey:@"requestSource"];

          if (([v14 isEqualToNumber:&off_100149B38] & 1) != 0
            || [v14 isEqualToNumber:&off_100149B50])
          {
            [*(id *)(a1 + 32) addObject:v12];
            uint64_t v15 = [v12 metadata];
            double v16 = [v15 objectForKey:@"unintended"];

            if ([v16 isEqualToNumber:&off_100149B68])
            {
              [*(id *)(a1 + 40) addObject:v12];
              ++*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
            }
            else
            {
              *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
            }
          }
          else
          {
            uint64_t v17 = AFSiriLogContextConnection;
            if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 136315394;
              uint64_t v33 = "-[SRDismissalClassificationController queryStreamForCountOfEventsWithCompletion:]_block_invoke";
              __int16 v34 = 2112;
              id v35 = v14;
              _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%s #mitigation skipping activation due to requestSource: %@", buf, 0x16u);
            }
          }

          uint64_t v11 = (char *)v11 + 1;
        }
        while (v9 != v11);
        id v18 = [v7 countByEnumeratingWithState:&v28 objects:v38 count:16];
        id v9 = v18;
      }
      while (v18);
    }

    id v6 = v26;
    id v5 = v27;
  }
  if (v6)
  {
    id v19 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315394;
      uint64_t v33 = "-[SRDismissalClassificationController queryStreamForCountOfEventsWithCompletion:]_block_invoke";
      __int16 v34 = 2112;
      id v35 = v6;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "%s #survey executeQuery failed with error: %@", buf, 0x16u);
    }
    uint64_t v20 = *(void *)(a1 + 48);
    if (v20)
    {
      long long v21 = *(void (**)(void))(v20 + 16);
LABEL_28:
      v21();
    }
  }
  else
  {
    id v22 = [*(id *)(a1 + 32) count];
    id v23 = [*(id *)(a1 + 40) count];
    id v24 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315650;
      uint64_t v33 = "-[SRDismissalClassificationController queryStreamForCountOfEventsWithCompletion:]_block_invoke";
      __int16 v34 = 2048;
      id v35 = v23;
      __int16 v36 = 2048;
      id v37 = v22;
      _os_log_impl((void *)&_mh_execute_header, v24, OS_LOG_TYPE_DEFAULT, "%s #HWButtonMitigation #survey executeQuery returned %ld unintended events (out of %ld total)", buf, 0x20u);
    }
    uint64_t v25 = *(void *)(a1 + 48);
    if (v25)
    {
      long long v21 = *(void (**)(void))(v25 + 16);
      goto LABEL_28;
    }
  }
}

id sub_10006B88C(uint64_t a1)
{
  v12[0] = @"cancellationReason";
  uint64_t v2 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) cancellationReason]);
  v13[0] = v2;
  v12[1] = @"dismissalReason";
  uint64_t v3 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) dismissalReason]);
  v13[1] = v3;
  v12[2] = @"inputType";
  uint64_t v4 = +[NSNumber numberWithInteger:*(void *)(a1 + 40)];
  v13[2] = v4;
  v12[3] = @"isDeviceUnlocked";
  id v5 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [*(id *)(a1 + 32) isDeviceUnlocked]);
  id v13[3] = v5;
  void v12[4] = @"longPressBehavior";
  id v6 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  v13[4] = v6;
  v12[5] = @"previousBehavior";
  id v7 = +[NSNumber numberWithInteger:*(void *)(a1 + 56)];
  void v13[5] = v7;
  v12[6] = @"requestSource";
  id v8 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 32) requestSource]);
  v13[6] = v8;
  v12[7] = @"unintended";
  id v9 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [*(id *)(a1 + 32) classifiedAsUnintended]);
  v13[7] = v9;
  uint64_t v10 = +[NSDictionary dictionaryWithObjects:v13 forKeys:v12 count:8];

  return v10;
}

id sub_10006BB7C(uint64_t a1)
{
  v8[0] = @"countOfUnintended";
  uint64_t v2 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 32) countOfUnintendedActivations]);
  v9[0] = v2;
  v8[1] = @"daysInActivationHistory";
  uint64_t v3 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 32) days]);
  v9[1] = v3;
  v8[2] = @"daysSinceMitigationChange";
  uint64_t v4 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  v9[2] = v4;
  v8[3] = @"dismissalReason";
  id v5 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 40) dismissalReason]);
  v9[3] = v5;
  id v6 = +[NSDictionary dictionaryWithObjects:v9 forKeys:v8 count:4];

  return v6;
}

id sub_10006BDA4(uint64_t a1)
{
  v7[0] = @"daysInActivationHistory";
  uint64_t v2 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [*(id *)(a1 + 32) days]);
  v8[0] = v2;
  v7[1] = @"daysSinceMitigationChange";
  uint64_t v3 = +[NSNumber numberWithInteger:*(void *)(a1 + 48)];
  v8[1] = v3;
  v7[2] = @"dismissalReason";
  uint64_t v4 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(a1 + 40) dismissalReason]);
  v8[2] = v4;
  id v5 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:3];

  return v5;
}

void sub_10006C980(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_10006C9A8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    [WeakRetained _editableUtteranceViewControllerDidDismiss:WeakRetained[2]];
    uint64_t v3 = v5;
    id WeakRetained = *(void **)(a1 + 32);
    if (WeakRetained)
    {
      id WeakRetained = (void *)((uint64_t (*)(void *, void *))WeakRetained[2])(WeakRetained, v5);
      uint64_t v3 = v5;
    }
  }

  return _objc_release_x1(WeakRetained, v3);
}

void sub_10006E590(id a1)
{
  id v1 = objc_alloc_init((Class)VRXVisualResponseProvider);
  uint64_t v2 = qword_100171E78;
  qword_100171E78 = (uint64_t)v1;

  _objc_release_x1(v1, v2);
}

NSString *sub_100070E08(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (v5)
  {
    id v8 = (NSString *)v5;
    NSComparisonResult v9 = UIContentSizeCategoryCompareToCategory(v8, v7);
    uint64_t v10 = v7;
    if (v9 == NSOrderedDescending
      || (v11 = UIContentSizeCategoryCompareToCategory(v8, v6), uint64_t v10 = v6, v11 == NSOrderedAscending))
    {
      uint64_t v12 = v10;

      id v8 = v12;
    }
  }
  else
  {
    id v8 = v6;
  }

  return v8;
}

void sub_10007181C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100071920;
  block[3] = &unk_100142E88;
  id v5 = *(id *)(a1 + 32);
  if (qword_100171E90 != -1) {
    dispatch_once(&qword_100171E90, block);
  }
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  void v2[2] = sub_1000719B8;
  v2[3] = &unk_100142E88;
  id v3 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

void sub_100071920(uint64_t a1)
{
  id v5 = +[UIImageSymbolConfiguration configurationWithWeight:4];
  uint64_t v2 = +[UIImage _systemImageNamed:@"xmark.circle.fill" withConfiguration:v5];
  uint64_t v3 = [v2 imageWithTintColor:*(void *)(a1 + 32) renderingMode:1];
  uint64_t v4 = (void *)qword_100171E88;
  qword_100171E88 = v3;
}

id sub_1000719B8(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setImage:qword_100171E88 forState:0];
}

id sub_100071ED0(uint64_t a1)
{
  [*(id *)(a1 + 32) setNeedsLayout];
  [*(id *)(a1 + 32) setTextAlignment:*(void *)(a1 + 40)];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 layoutIfNeeded];
}

void sub_100073DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100073DC4(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    id v7 = [WeakRetained identifier];
    id v8 = +[SASSignalServer serviceQuality];
    [v3 setServiceQuality:v8];

    NSComparisonResult v9 = +[SASSignalServer interface];
    [v3 setInterface:v9];

    [v3 setInterfaceTarget:v6];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100073F88;
    v15[3] = &unk_100144958;
    id v10 = v7;
    id v16 = v10;
    [v3 setInvalidationHandler:v15];
    [v3 setInterruptionHandler:&stru_100144998];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_1000740D4;
    v12[3] = &unk_1001449C0;
    objc_copyWeak(&v14, v4);
    id v11 = v10;
    id v13 = v11;
    [v3 setActivationHandler:v12];

    objc_destroyWeak(&v14);
  }
}

void sub_100073F74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100073F88(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
  {
    int v6 = 136315394;
    id v7 = "-[SiriQuickTypeGestureSource configureConnection]_block_invoke_2";
    __int16 v8 = 2112;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s #activation BSServiceConnection Invalidated %@", (uint8_t *)&v6, 0x16u);
  }
  id v5 = [v3 remoteTarget];
  [v5 unregisterNonButtonSourceWithType:&off_100149B80 withUUID:*(void *)(a1 + 32)];
}

void sub_100074078(id a1, BSServiceConnectionContext *a2)
{
  uint64_t v2 = a2;
  id v3 = AFSiriLogContextConnection;
  if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
    sub_1000BA7B0((uint64_t)v2, v3);
  }
  [(BSServiceConnectionContext *)v2 activate];
}

void sub_1000740D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    int v6 = (os_unfair_lock_s *)&WeakRetained[OBJC_IVAR___SiriActivationSource__lock];
    os_unfair_lock_lock(v6);
    id v7 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v9 = 136315394;
      id v10 = "-[SiriQuickTypeGestureSource configureConnection]_block_invoke";
      __int16 v11 = 2112;
      id v12 = v3;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%s #activation BSServiceConnection Activated %@", (uint8_t *)&v9, 0x16u);
    }
    __int16 v8 = [v3 remoteTarget];
    [v8 registerNonButtonSourceWithType:&off_100149B80 withUUID:*(void *)(a1 + 32)];

    os_unfair_lock_unlock(v6);
  }
}

void sub_100074374(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10007439C(uint64_t a1)
{
  id WeakRetained = (char *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = (os_unfair_lock_s *)&WeakRetained[OBJC_IVAR___SiriActivationSource__lock];
    uint64_t v4 = WeakRetained;
    os_unfair_lock_lock(v2);
    id v3 = [*(id *)&v4[OBJC_IVAR___SiriActivationSource__connection] remoteTarget];
    [v3 cancelPrewarmForFirstTapOfQuickTypeToSiriGesture];

    os_unfair_lock_unlock(v2);
    id WeakRetained = v4;
  }
}

void sub_10007464C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100074688(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _endBackgroundTask];
}

void sub_100074DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100074DFC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained) {
    --WeakRetained[2];
  }
}

void sub_100075E08(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = AFSiriLogContextConnection;
  BOOL v5 = os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v11 = 136315650;
      id v12 = "+[SRNotificationUtility _postNotificationRequest:notificationCenter:destinations:]_block_invoke";
      __int16 v13 = 2112;
      uint64_t v14 = v6;
      __int16 v15 = 2112;
      id v16 = v3;
      id v7 = "%s Failed to post notification %@ with error %@";
      __int16 v8 = v4;
      uint32_t v9 = 32;
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, v7, (uint8_t *)&v11, v9);
    }
  }
  else if (v5)
  {
    uint64_t v10 = *(void *)(a1 + 32);
    int v11 = 136315394;
    id v12 = "+[SRNotificationUtility _postNotificationRequest:notificationCenter:destinations:]_block_invoke";
    __int16 v13 = 2112;
    uint64_t v14 = v10;
    id v7 = "%s Posted notification %@";
    __int16 v8 = v4;
    uint32_t v9 = 22;
    goto LABEL_6;
  }
}

BOOL sub_100076430(double a1, double a2, double a3, double a4)
{
  return a2 >= a4 && a1 >= a3;
}

double sub_100076444(double a1, double a2, double a3, double a4)
{
  return a1 * fmax(a1 / a3, a2 / a4);
}

double sub_10007645C(double a1)
{
  return ceil(a1);
}

void sub_100077378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10007739C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  [*(id *)(a1 + 32) objectAtIndex:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    while (1)
    {
      unint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
      unint64_t v7 = *(void *)(a1 + 56) - 1;
      [*(id *)(a1 + 32) objectAtIndex:v6];
      char isKindOfClass = objc_opt_isKindOfClass();
      if ((isKindOfClass & 1) != 0 || v6 >= v7) {
        break;
      }
      ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
    }
    if ((isKindOfClass & 1) == 0 && v6 >= v7)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
      *a4 = 1;
    }
  }
}

void sub_100077A28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_100077A70(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 _convertedCardSections];
  if ([v4 count])
  {
    long long v15 = 0u;
    long long v16 = 0u;
    long long v13 = 0u;
    long long v14 = 0u;
    id v5 = v4;
    id v6 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v14;
      do
      {
        id v9 = 0;
        do
        {
          if (*(void *)v14 != v8) {
            objc_enumerationMutation(v5);
          }
          [*(id *)(*((void *)&v13 + 1) + 8 * (void)v9) setSeparatorStyle:4 v13];
          id v9 = (char *)v9 + 1;
        }
        while (v7 != v9);
        id v7 = [v5 countByEnumeratingWithState:&v13 objects:v17 count:16];
      }
      while (v7);
    }

    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    int v11 = *(void **)(a1 + 32);
    if (isKindOfClass)
    {
      uint64_t v12 = +[NSIndexSet indexSetWithIndex:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)];
      [v11 insertObjects:v5 atIndexes:v12];

      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    }
    else
    {
      [*(id *)(a1 + 32) addObjectsFromArray:v5];
    }
    objc_opt_class();
    if (objc_opt_isKindOfClass()) {
      *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [*(id *)(a1 + 32) count];
    }
  }
}

void sub_100077DFC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100077E18(uint64_t a1)
{
  id WeakRetained = (unsigned int *)objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _cleanupAllViews];
    uint64_t v4 = [[SRSiriViewController alloc] initWithNibName:0 bundle:0];
    id v5 = (void *)*((void *)v3 + 1);
    *((void *)v3 + 1) = v4;

    id v6 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = (void *)*((void *)v3 + 1);
      int v19 = 136315394;
      uint64_t v20 = "-[SRViewController setUpViews]_block_invoke";
      __int16 v21 = 2048;
      id v22 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s Created new SRSiriViewController (%p)", (uint8_t *)&v19, 0x16u);
    }
    [v3 addChildViewController:*((void *)v3 + 1)];
    [*((id *)v3 + 1) didMoveToParentViewController:v3];
    uint64_t v8 = [v3 view];
    id v9 = [*((id *)v3 + 1) view];
    [v8 addSubview:v9];

    uint64_t v10 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = v3[4];
      uint64_t v12 = v10;
      long long v13 = +[NSNumber numberWithInt:v11];
      long long v14 = +[NSNumber numberWithInt:v3[4] + 1];
      int v19 = 136315650;
      uint64_t v20 = "-[SRViewController setUpViews]_block_invoke";
      __int16 v21 = 2112;
      id v22 = v13;
      __int16 v23 = 2112;
      id v24 = v14;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "%s About to increment _expectedTeardownCounter from %@ to %@", (uint8_t *)&v19, 0x20u);
    }
    int v15 = v3[4];
    v3[4] = v15 + 1;
    if (v15 <= -2)
    {
      long long v16 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
        sub_1000BA8C8(v16);
      }
      v3[4] = 1;
    }
    uint64_t v17 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      int v19 = 136315138;
      uint64_t v20 = "-[SRViewController setUpViews]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "%s Added SRSiriViewController to the view hierarchy in Siri.app", (uint8_t *)&v19, 0xCu);
    }
    id v18 = +[SiriSharedUIReplayUtilityWrapper sharedInstance];
    [v18 addReplayControlTo:*(void *)(a1 + 32)];
  }
}

void sub_10007817C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100078198(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      id v3 = v2;
      uint64_t v4 = [WeakRetained childViewControllers];
      id v5 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v4 count]);
      *(_DWORD *)buf = 136315394;
      __int16 v21 = "-[SRViewController _cleanupAllViews]_block_invoke";
      __int16 v22 = 2112;
      __int16 v23 = v5;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "%s About to remove all SRSiriViewControllers from the view hierarchy in Siri.app - number of children: %@", buf, 0x16u);
    }
    long long v17 = 0u;
    long long v18 = 0u;
    long long v15 = 0u;
    long long v16 = 0u;
    id v6 = [WeakRetained childViewControllers];
    id v7 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v16;
      do
      {
        for (i = 0; i != v8; i = (char *)i + 1)
        {
          if (*(void *)v16 != v9) {
            objc_enumerationMutation(v6);
          }
          uint64_t v11 = *(void **)(*((void *)&v15 + 1) + 8 * i);
          [v11 willMoveToParentViewController:0];
          uint64_t v12 = [v11 view];
          [v12 removeFromSuperview];

          [v11 removeFromParentViewController];
        }
        id v8 = [v6 countByEnumeratingWithState:&v15 objects:v19 count:16];
      }
      while (v8);
    }

    long long v13 = (void *)WeakRetained[1];
    WeakRetained[1] = 0;

    long long v14 = AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136315138;
      __int16 v21 = "-[SRViewController _cleanupAllViews]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "%s Removed all SRSiriViewControllers from the view hierarchy in Siri.app", buf, 0xCu);
    }
  }
}

void sub_100078478(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_100078494(uint64_t a1)
{
  id WeakRetained = (unsigned int *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = (void *)AFSiriLogContextConnection;
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v3 = WeakRetained[4];
      uint64_t v4 = v2;
      id v5 = +[NSNumber numberWithInt:v3];
      id v6 = +[NSNumber numberWithInt:WeakRetained[4] - 1];
      int v10 = 136315650;
      uint64_t v11 = "-[SRViewController tearDownViews]_block_invoke";
      __int16 v12 = 2112;
      long long v13 = v5;
      __int16 v14 = 2112;
      long long v15 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%s About to decrement _expectedTeardownCounter from %@ to %@", (uint8_t *)&v10, 0x20u);
    }
    int v7 = WeakRetained[4];
    WeakRetained[4] = v7 - 1;
    if (v7 == 1)
    {
      uint64_t v9 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = 136315138;
        uint64_t v11 = "-[SRViewController tearDownViews]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s Expected teardown counter hit 0, calling _cleanupAllViews", (uint8_t *)&v10, 0xCu);
      }
      [WeakRetained _cleanupAllViews];
    }
    else if (v7 <= 0)
    {
      id v8 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        int v10 = 136315138;
        uint64_t v11 = "-[SRViewController tearDownViews]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%s We received more calls to tearDownViews than setupViews - resetting counter to 0.", (uint8_t *)&v10, 0xCu);
      }
      WeakRetained[4] = 0;
    }
  }
}

void sub_100079140()
{
  uint64_t v0 = +[NSBundle bundleForClass:objc_opt_class()];
  id v1 = [v0 pathForResource:@"ModesConfiguration" ofType:@"plist"];

  uint64_t v2 = +[NSDictionary dictionaryWithContentsOfFile:v1];
  uint64_t v3 = (void *)qword_100171EA0;
  qword_100171EA0 = v2;

  if (!qword_100171EA0)
  {
    if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
      sub_1000BA9FC();
    }
    uint64_t v4 = (void *)qword_100171EA0;
    qword_100171EA0 = (uint64_t)&__NSDictionary0__struct;
  }
}

void sub_1000792B8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) _configurationDictionary];
  uint64_t v2 = [v1 objectForKeyedSubscript:@"redundantDUCs"];

  uint64_t v3 = +[NSMutableSet setWithCapacity:](NSMutableSet, "setWithCapacity:", [v2 count]);
  uint64_t v4 = (void *)qword_100171EB0;
  qword_100171EB0 = v3;

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v5 = v2;
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        int v10 = (void *)qword_100171EB0;
        uint64_t v11 = [*(id *)(*((void *)&v12 + 1) + 8 * (void)v9) lowercaseString:(void)v12];
        [v10 addObject:v11];

        uint64_t v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }
}

uint64_t start(int a1, char **a2)
{
  id v5 = (objc_class *)objc_opt_class();
  NSStringFromClass(v5);
  id v6 = (NSString *)objc_claimAutoreleasedReturnValue();
  id v7 = (objc_class *)objc_opt_class();
  NSStringFromClass(v7);
  uint64_t v8 = (NSString *)objc_claimAutoreleasedReturnValue();
  uint64_t v9 = UIApplicationMain(a1, a2, v6, v8);

  return v9;
}

void sub_10007B9B0(uint64_t a1, int a2)
{
  uint64_t v4 = +[AFPreferences sharedPreferences];
  id v5 = [v4 alwaysShowRecognizedSpeech];

  if (a2)
  {
    if ((v5 & 1) == 0)
    {
      id v6 = AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        int v8 = 136315138;
        uint64_t v9 = "-[SRAppDelegate _verifyAndSyncTrialExperiments]_block_invoke";
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "%s #trial Trial experiment enrolled - will override setAlwaysShowRecognizedSpeech to YES", (uint8_t *)&v8, 0xCu);
      }
      id v7 = +[AFPreferences sharedPreferences];
      [v7 setAlwaysShowRecognizedSpeech:1];
    }
    [*(id *)(a1 + 32) setBool:1 forKey:SRUIFPreferencesDeviceEnrolledInASRSettingTrialExperiment];
    [*(id *)(a1 + 32) setBool:v5 forKey:SRUIFPreferencesASRSettingBeforeTrialExperiment];
    [*(id *)(a1 + 32) synchronize];
  }
}

void sub_10007BEEC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10007BF10(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if (objc_opt_isKindOfClass()) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = v4;
  if (v5)
  {
    id WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
    if (WeakRetained)
    {
      id v7 = (void *)AFSiriLogContextConnection;
      if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_DEFAULT))
      {
        id v8 = WeakRetained[2];
        uint64_t v9 = v7;
        unsigned int v10 = [v8 _contextId];
        id v11 = WeakRetained[2];
        int v14 = 136315650;
        long long v15 = "-[SRAppDelegate _updateDeferral]_block_invoke";
        __int16 v16 = 1024;
        unsigned int v17 = v10;
        __int16 v18 = 2048;
        id v19 = v11;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%s updating contextID (%u) on window (%p) for HID deferral", (uint8_t *)&v14, 0x1Cu);
      }
      id v12 = WeakRetained[2];
      if (v12)
      {
        if (![v12 _contextId])
        {
          long long v13 = AFSiriLogContextConnection;
          if (os_log_type_enabled(AFSiriLogContextConnection, OS_LOG_TYPE_ERROR)) {
            sub_1000BAA7C(v13);
          }
        }
      }
      [v5 setClientWindowContextID:[WeakRetained[2] _contextId]];
    }
  }
}

void sub_10007C5C8()
{
  id v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for SRCarPlayCardViewController();
  [super viewDidLoad];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardViewController];
  if (v2)
  {
    id v3 = v2;
    id v4 = [v0 view];
    if (v4)
    {
      id v5 = v4;
      type metadata accessor for SRCarPlayScrollView();
      uint64_t v6 = swift_dynamicCastClass();
      if (v6)
      {
        id v7 = (char *)v6;
        [v3 willMoveToParentViewController:v1];
        [v1 addChildViewController:v3];
        id v8 = [v3 view];
        sub_10009E214(v8, 0);

        [v3 didMoveToParentViewController:v1];
        [v3 formSheetSize];
        uint64_t v9 = (double *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetSize];
        *(void *)uint64_t v9 = v10;
        v9[1] = v11;
        [*(id *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint] setConstant:v11];
        [*(id *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint] setConstant:*v9];
        [*(id *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint] setConstant:v9[1]];
        [v7 setNeedsUpdateConstraints];
        id v12 = *(void **)&v1[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardSnippet];
        id v13 = v5;
        id v14 = [v12 referencedCommands];
        if (!v14)
        {
          __break(1u);
          return;
        }
        long long v15 = v14;
        sub_10007D3B4((uint64_t *)&unk_100171470);
        unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v16 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        [v7 setUserInteractionEnabled:v17 != 0];
      }
    }
  }
}

void sub_10007C984()
{
  swift_unknownObjectRelease();
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_heightConstraint);
}

id sub_10007C9F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlayCardViewController();
  return [super dealloc];
}

id sub_10007CB1C(id result)
{
  if (!result)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t result = [result cardSection];
  if (result)
  {
    id v1 = [result commands];
    swift_unknownObjectRelease();
    if (v1)
    {
      sub_10007DCD8(0, (unint64_t *)&unk_1001708C0);
      unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v2 >> 62) {
        goto LABEL_54;
      }
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v3)
      {
LABEL_6:
        unint64_t v4 = 0;
        uint64_t v60 = v61 + OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_delegate;
        uint64_t v54 = OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardSnippet;
        unint64_t v55 = v2 & 0xC000000000000001;
        uint64_t v51 = v2 & 0xFFFFFFFFFFFFFF8;
        unint64_t v50 = v2 + 32;
        unint64_t v59 = (unint64_t)"e=dd}24B40";
        unint64_t v49 = 0x80000001000FA5D0;
        unint64_t v48 = 0x80000001000FA660;
        id v5 = &selRef__createVisualEffectBackgroundViewForTextView_topOffset_;
        uint64_t v6 = &off_100149000;
        v58 = (void *)0x80000001000FA6B0;
        uint64_t v52 = v3;
        unint64_t v53 = v2;
        while (1)
        {
          while (1)
          {
            if (v55)
            {
              id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (v4 >= *(void *)(v51 + 16)) {
                goto LABEL_53;
              }
              id v7 = *(id *)(v50 + 8 * v4);
            }
            id v8 = v7;
            if (__OFADD__(v4++, 1))
            {
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              swift_bridgeObjectRetain();
              uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (!v3) {
                goto LABEL_55;
              }
              goto LABEL_6;
            }
            id v10 = [v7 referenceIdentifier];
            if (v10) {
              break;
            }
            if (qword_100170448 != -1) {
              swift_once();
            }
            uint64_t v44 = type metadata accessor for Logger();
            sub_10007DCA0(v44, (uint64_t)qword_100171AB0);
            os_log_type_t v45 = static os_log_type_t.info.getter();
            sub_1000B2FEC(v45, 0x10uLL, 0xD000000000000025, v49, 0xD00000000000004DLL, v48);

            if (v4 == v3) {
              goto LABEL_55;
            }
          }
          double v11 = v10;
          uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v63 = v12;

          uint64_t result = [*(id *)(v61 + v54) referencedCommands];
          if (!result) {
            break;
          }
          id v13 = result;
          id v56 = v8;
          unint64_t v57 = v4;
          sub_10007D3B4((uint64_t *)&unk_100171470);
          unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v14 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            uint64_t v16 = v62;
            unint64_t v2 = v63;
            if (!v15) {
              goto LABEL_7;
            }
LABEL_17:
            if (v15 >= 1)
            {
              uint64_t v17 = 0;
              uint64_t v67 = v15;
              unint64_t v68 = v14 & 0xC000000000000001;
              unint64_t v66 = v14;
              while (1)
              {
                if (v68)
                {
                  objc_super v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else
                {
                  objc_super v18 = *(void **)(v14 + 8 * v17 + 32);
                  swift_unknownObjectRetain();
                }
                id v19 = [v18 v5[473] v48 v49];
                if (v19)
                {
                  uint64_t v20 = v19;
                  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v23 = v22;

                  if (v21 == v16 && v23 == v2)
                  {
                    swift_bridgeObjectRelease();
LABEL_32:
                    uint64_t v72 = v6[235];
                    uint64_t v26 = swift_dynamicCastObjCProtocolConditional();
                    if (v26
                      && ((uint64_t v27 = v26,
                           swift_getObjectType(),
                           sub_10007DCD8(0, &qword_1001708D0),
                           swift_dynamicCastMetatype())
                        ? (uint64_t v28 = v27)
                        : (uint64_t v28 = 0),
                          v28))
                    {
                      uint64_t v64 = type metadata accessor for UUID();
                      v65 = &v48;
                      uint64_t v29 = *(void *)(v64 - 8);
                      __chkstk_darwin();
                      long long v31 = (char *)&v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
                      uint64_t v32 = self;
                      swift_unknownObjectRetain();
                      id v33 = [v32 sharedManager];
                      id v34 = [v33 currentInstrumentationTurnContext];

                      id v35 = [v34 turnIdentifier];
                      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

                      uint64_t v70 = 0;
                      unint64_t v71 = 0xE000000000000000;
                      _StringGuts.grow(_:)(85);
                      v36._countAndFlagsBits = 0xD000000000000053;
                      v36._object = v58;
                      String.append(_:)(v36);
                      swift_getObjectType();
                      uint64_t v69 = v28;
                      swift_getWitnessTable();
                      DefaultStringInterpolation.appendInterpolation<A>(_:)();
                      uint64_t v37 = v70;
                      unint64_t v38 = v71;
                      if (qword_100170448 != -1) {
                        swift_once();
                      }
                      uint64_t v39 = type metadata accessor for Logger();
                      sub_10007DCA0(v39, (uint64_t)qword_100171AB0);
                      os_log_type_t v40 = static os_log_type_t.info.getter();
                      sub_1000B2FEC(v40, 0x10uLL, 0xD000000000000025, v59 | 0x8000000000000000, v37, v38);
                      swift_bridgeObjectRelease();
                      uint64_t v41 = *(void *)(v60 + 8);
                      uint64_t ObjectType = swift_getObjectType();
                      id v43 = *(void (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v41 + 40);
                      swift_unknownObjectRetain();
                      v43(v61, v28, v31, ObjectType, v41);
                      swift_unknownObjectRelease_n();
                      swift_unknownObjectRelease();
                      (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v64);
                      id v5 = &selRef__createVisualEffectBackgroundViewForTextView_topOffset_;
                      uint64_t v6 = &off_100149000;
                      uint64_t v16 = v62;
                      unint64_t v2 = v63;
                    }
                    else
                    {
                      swift_unknownObjectRelease();
                    }
                    unint64_t v14 = v66;
                    uint64_t v15 = v67;
                    goto LABEL_20;
                  }
                  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v25) {
                    goto LABEL_32;
                  }
                  swift_unknownObjectRelease();
                  uint64_t v15 = v67;
                }
                else
                {
                  swift_unknownObjectRelease();
                }
LABEL_20:
                if (v15 == ++v17) {
                  goto LABEL_7;
                }
              }
            }
            goto LABEL_52;
          }
          uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v16 = v62;
          unint64_t v2 = v63;
          if (v15) {
            goto LABEL_17;
          }
LABEL_7:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = v52;
          unint64_t v2 = v53;
          unint64_t v4 = v57;
          if (v57 == v52) {
            goto LABEL_55;
          }
        }
        __break(1u);
        goto LABEL_58;
      }
LABEL_55:
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v46 = type metadata accessor for Logger();
      sub_10007DCA0(v46, (uint64_t)qword_100171AB0);
      os_log_type_t v47 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v47, 0x10uLL, 0xD000000000000025, 0x80000001000FA5D0, 0xD000000000000053, 0x80000001000FA600);
    }
    return 0;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t variable initialization expression of SiriSystemUIController.viewMode()
{
  return 0;
}

uint64_t variable initialization expression of SiriSystemUIController.lockState()
{
  return 2;
}

uint64_t variable initialization expression of SiriSystemUIController.activityId()
{
  return 0;
}

uint64_t variable initialization expression of SiriQuickTypeGestureActivationManager.isFaceDetectionInFlight()
{
  return 0;
}

uint64_t variable initialization expression of SiriSystemUIController.domainResponseId()
{
  return 0;
}

uint64_t variable initialization expression of SiriQuickTypeGestureActivationManager.previousFaceDetectionResult()
{
  return 0;
}

uint64_t variable initialization expression of SiriQuickTypeGestureActivationManager.latestFaceDetectionResultFuture@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10007D3B4(&qword_100170458);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_10007D3B4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

id variable initialization expression of SiriQuickTypeGestureActivationManager.attentionAwarenessClient()
{
  id v0 = [objc_allocWithZone((Class)AWAttentionAwarenessClient) init];
  id v1 = [objc_allocWithZone((Class)AWAttentionAwarenessConfiguration) init];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setIdentifier:v2];

  [v1 setEventMask:128];
  [v0 setConfiguration:v1];

  return v0;
}

double variable initialization expression of SRFeedbackButton.diameter()
{
  return 50.0;
}

uint64_t type metadata accessor for SRCarPlayCardViewController()
{
  return self;
}

__n128 initializeBufferWithCopyOfBuffer for FaceDetectionObservation(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_10007D4F8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10007D518(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for SASLockState(uint64_t a1)
{
}

void type metadata accessor for SiriUIViewMode(uint64_t a1)
{
}

void type metadata accessor for SiriUISiriEvent(uint64_t a1)
{
}

void type metadata accessor for SiriUISiriState(uint64_t a1)
{
}

void type metadata accessor for VRXHostMaterial(uint64_t a1)
{
}

void sub_10007D5B8(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_10007D5C0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_10007D5D4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_10007D5E8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_10007D5FC(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_10007D62C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_10007D658@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_10007D67C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_10007D690(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_10007D6A4(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_10007D6B8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_10007D6CC(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_10007D6E0(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_10007D6F4(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_10007D708()
{
  return *v0 == 0;
}

uint64_t sub_10007D718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_10007D730(void *result)
{
  *v1 &= ~*result;
  return result;
}

BOOL sub_10007D744(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_10007D758@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_10007D768(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_10007D774@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10007DC68(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_10007D7B4()
{
  return sub_10007D81C(&qword_100170780);
}

uint64_t sub_10007D7E8()
{
  return sub_10007D81C(&qword_100170788);
}

uint64_t sub_10007D81C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SASLockState(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007D860()
{
  return sub_10007D81C(&qword_100170790);
}

uint64_t sub_10007D894()
{
  return sub_10007D81C(&qword_100170798);
}

void *sub_10007D8C8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10007D8D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self sharedManager];
  id v7 = [v6 currentInstrumentationTurnContext];

  id v8 = [v7 turnIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  id v9 = [objc_allocWithZone((Class)VRXSnippetRenderingContext) initWithRenderingEvent:a1];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v9 emitWithTurnIdentifier:isa];

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_10007DA4C(double a1, double a2)
{
  id v5 = [v2 view];
  if (v5)
  {
    id v12 = v5;
    type metadata accessor for SRCarPlayScrollView();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      id v7 = (char *)v6;
      _StringGuts.grow(_:)(29);
      v8._object = (void *)0x80000001000FA750;
      v8._countAndFlagsBits = 0xD00000000000001BLL;
      String.append(_:)(v8);
      type metadata accessor for CGSize(0);
      _print_unlocked<A, B>(_:_:)();
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_10007DCA0(v9, (uint64_t)qword_100171AB0);
      os_log_type_t v10 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v10, 0x10uLL, 0xD00000000000003DLL, 0x80000001000FA710, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      double v11 = (double *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetSize];
      *double v11 = a1;
      v11[1] = a2;
      [*(id *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint] setConstant:a2];
      [*(id *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint] setConstant:*v11];
      [*(id *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint] setConstant:v11[1]];
      [v7 setNeedsUpdateConstraints];
    }
    else
    {
    }
  }
}

uint64_t sub_10007DC68(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_10007DCA0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_10007DCD8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void type metadata accessor for State(uint64_t a1)
{
}

void sub_10007DD28(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

NSString sub_10007DD7C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100170C40 = (uint64_t)result;
  return result;
}

id sub_10007DDF8()
{
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10007DCA0(v1, (uint64_t)qword_100171AB0);
  os_log_type_t v2 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v2, 0, 0x2928706F7473, 0xE600000000000000, 0xD000000000000029, 0x80000001000FAAA0);
  [*(id *)&v0[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter] removeObserver:v0];
  v0[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening] = 0;
  *(void *)&v0[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for TypeToSiriKeyboardReadinessObserver();
  return [super dealloc];
}

id sub_10007DF5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening;
  if (*(unsigned char *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening) == 1)
  {
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10007DCA0(v3, (uint64_t)qword_100171AB0);
    os_log_type_t v4 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v4, 0, 0x29287472617473, 0xE700000000000000, 0xD000000000000041, 0x80000001000FAB00);
    os_log_type_t v5 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v5, 0, 0x2928706F7473, 0xE600000000000000, 0xD000000000000029, 0x80000001000FAAA0);
    [*(id *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter) removeObserver:v0];
    *(unsigned char *)(v0 + v2) = 0;
    *(void *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount) = 0;
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10007DCA0(v6, (uint64_t)qword_100171AB0);
  os_log_type_t v7 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v7, 0, 0x29287472617473, 0xE700000000000000, 0xD000000000000029, 0x80000001000FAAD0);
  *(unsigned char *)(v0 + v2) = 1;
  Swift::String v8 = *(void **)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter);
  if (qword_1001703C0 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_100170C40;

  return [v8 addObserver:v1 selector:"keyboardCanRespondToUserInputWithNotification:" name:v9 object:0];
}

id sub_10007E1C0()
{
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10007DCA0(v1, (uint64_t)qword_100171AB0);
  os_log_type_t v2 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v2, 0, 0x2928706F7473, 0xE600000000000000, 0xD000000000000029, 0x80000001000FAAA0);
  id result = [*(id *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter) removeObserver:v0];
  *(unsigned char *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening) = 0;
  *(void *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount) = 0;
  return result;
}

void sub_10007E2D8()
{
  uint64_t v2 = OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount;
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount);
  BOOL v4 = __OFADD__(v3, 1);
  uint64_t v5 = v3 + 1;
  if (v4)
  {
    __break(1u);
LABEL_9:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v0 = v1;
  *(void *)(v1 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount) = v5;
  if (v5 != 2) {
    return;
  }
  if (qword_100170448 != -1) {
    goto LABEL_9;
  }
LABEL_4:
  uint64_t v6 = type metadata accessor for Logger();
  sub_10007DCA0(v6, (uint64_t)qword_100171AB0);
  os_log_type_t v7 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v7, 0, 0xD00000000000002CLL, 0x80000001000FAA30, 0xD000000000000030, 0x80000001000FAA60);
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong keyboardIsReadyToReceiveInput];
    swift_unknownObjectRelease();
  }
  os_log_type_t v9 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v9, 0, 0x2928706F7473, 0xE600000000000000, 0xD000000000000029, 0x80000001000FAAA0);
  [*(id *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter) removeObserver:v0];
  *(unsigned char *)(v0 + OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening) = 0;
  *(void *)(v0 + v2) = 0;
}

uint64_t type metadata accessor for TypeToSiriKeyboardReadinessObserver()
{
  return self;
}

id sub_10007E56C()
{
  uint64_t v1 = OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCenter;
  uint64_t v2 = self;
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 defaultCenter];
  v3[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_isListening] = 0;
  *(void *)&v3[OBJC_IVAR___SRTypeToSiriKeyboardReadinessObserver_notificationCount] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for TypeToSiriKeyboardReadinessObserver();
  return [super init];
}

uint64_t sub_10007E630(uint64_t a1)
{
  return a1;
}

void sub_10007E658()
{
  sub_10007E918();
  uint64_t v0 = (void *)static OS_dispatch_queue.main.getter();
  id v1 = [objc_allocWithZone((Class)PDCPreflightManager) initWithTargetQueue:v0];

  qword_100170C90 = (uint64_t)v1;
}

id sub_10007E7E0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PrivacyDisclosureManager();
  return [super dealloc];
}

uint64_t type metadata accessor for PrivacyDisclosureManager()
{
  return self;
}

id sub_10007E83C(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_10007E918()
{
  unint64_t result = qword_1001717B0;
  if (!qword_1001717B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1001717B0);
  }
  return result;
}

id sub_10007E958()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithWhite:1.0 alpha:0.4];
  qword_100172C80 = (uint64_t)result;
  return result;
}

CALayerCornerCurve sub_10007E998()
{
  qword_100172C88 = (uint64_t)kCACornerCurveContinuous;
  return kCACornerCurveContinuous;
}

void sub_10007E9B0()
{
  id v0 = [self blackColor];
  id v1 = [v0 CGColor];

  qword_100172C90 = (uint64_t)v1;
}

double sub_10007EA14()
{
  double result = 0.0;
  xmmword_100172CA0 = xmmword_1000DCA70;
  return result;
}

double sub_10007EA28()
{
  double result = kCALayerCornerRadiusAutomaticPill;
  qword_100172CB0 = kCALayerCornerRadiusAutomaticPill;
  return result;
}

id sub_10007EA40()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self animationWithKeyPath:v0];

  id v2 = v1;
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v2 setFromValue:isa];

  id v4 = v2;
  Class v5 = Double._bridgeToObjectiveC()().super.super.isa;
  [v4 setToValue:v5];

  [v4 setStiffness:1000.0];
  [v4 setMass:3.0];
  [v4 setDamping:500.0];
  [v4 setDuration:0.5];
  [v4 setFillMode:kCAFillModeBoth];
  return v4;
}

id sub_10007EB84()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self animationWithKeyPath:v0];

  id v2 = v1;
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v2 setFromValue:isa];

  id v4 = v2;
  Class v5 = Double._bridgeToObjectiveC()().super.super.isa;
  [v4 setToValue:v5];

  [v4 setStiffness:300.0];
  [v4 setMass:2.0];
  [v4 setDamping:50.0];
  [v4 setDuration:0.8];
  [v4 setFillMode:kCAFillModeBoth];
  return v4;
}

id sub_10007ECC8()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self animationWithKeyPath:v0];

  id v2 = v1;
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v2 setFromValue:isa];

  id v4 = v2;
  Class v5 = Double._bridgeToObjectiveC()().super.super.isa;
  [v4 setToValue:v5];

  [v4 setStiffness:1000.0];
  [v4 setMass:3.0];
  [v4 setDamping:500.0];
  [v4 setDuration:0.5];
  [v4 setFillMode:kCAFillModeBoth];
  return v4;
}

id sub_10007EE18()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self animationWithKeyPath:v0];

  id v2 = v1;
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v2 setFromValue:isa];

  id v4 = v2;
  Class v5 = Double._bridgeToObjectiveC()().super.super.isa;
  [v4 setToValue:v5];

  [v4 setStiffness:300.0];
  [v4 setMass:2.0];
  [v4 setDamping:50.0];
  [v4 setDuration:0.8];
  [v4 setFillMode:kCAFillModeBoth];
  return v4;
}

uint64_t sub_10007EF64()
{
  id v1 = [v0 siriui_card];
  if (!v1) {
    goto LABEL_51;
  }
  id v2 = v1;
  if ([v1 respondsToSelector:"backingCard"])
  {
    id v3 = [v2 backingCard];
    swift_unknownObjectRelease();
    if (v3)
    {
      id v4 = &selRef_addObject_;
      id v5 = [v3 cardSections];

      if (v5)
      {
        unint64_t v6 = sub_10007F324();
        unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v7 >> 62) {
          goto LABEL_45;
        }
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v8)
        {
          while (1)
          {
            unint64_t v9 = v7 & 0xC000000000000001;
            if ((v7 & 0xC000000000000001) != 0)
            {
              id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_50:
                __break(1u);
LABEL_51:
                __break(1u);
                goto LABEL_52;
              }
              id v10 = *(id *)(v7 + 32);
            }
            double v11 = v10;
            type metadata accessor for VisualResponseProvider();
            id v12 = v11;
            char v13 = static VisualResponseProvider.isCardSectionSupported(cardSection:)();

            if (v13)
            {
LABEL_11:
              swift_bridgeObjectRelease();

              return 1;
            }
            unint64_t v34 = v7 + 32;
            uint64_t v35 = v7 & 0xFFFFFFFFFFFFFF8;
            unint64_t v15 = 1;
            unint64_t v36 = v7;
            uint64_t v32 = v8;
            unint64_t v33 = v6;
            unint64_t v31 = v7 & 0xC000000000000001;
            while (1)
            {
              self;
              uint64_t v16 = swift_dynamicCastObjCClass();
              if (!v16) {
                goto LABEL_31;
              }
              uint64_t v17 = (void *)v16;
              id v18 = v12;
              id v19 = [v17 v4[166]];
              if (v19) {
                break;
              }

LABEL_31:
              if (v15 == v8) {
                goto LABEL_46;
              }
              if (v9)
              {
                id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (v15 >= *(void *)(v35 + 16)) {
                  goto LABEL_50;
                }
                id v28 = *(id *)(v34 + 8 * v15);
              }
              if (__OFADD__(v15++, 1)) {
                goto LABEL_44;
              }
              id v12 = v28;
              char v30 = static VisualResponseProvider.isCardSectionSupported(cardSection:)();

              if (v30) {
                goto LABEL_11;
              }
            }
            uint64_t v20 = v19;
            unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v37 = v18;
            if (v7 >> 62)
            {
              swift_bridgeObjectRetain();
              unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
              if (!v6) {
                goto LABEL_42;
              }
            }
            else
            {
              unint64_t v6 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v6) {
                goto LABEL_42;
              }
            }
            id v21 = (v7 & 0xC000000000000001) != 0
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
                : *(id *)(v7 + 32);
            uint64_t v22 = v21;
            char v23 = static VisualResponseProvider.isCardSectionSupported(cardSection:)();

            if ((v23 & 1) == 0) {
              break;
            }
            if (v6 == 1)
            {
LABEL_42:

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();

              return 1;
            }
            uint64_t v24 = 5;
            while (1)
            {
              id v25 = (v7 & 0xC000000000000001) != 0
                  ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
                  : *(id *)(v7 + 8 * v24);
              uint64_t v26 = v25;
              id v4 = (char **)(v24 - 3);
              if (__OFADD__(v24 - 4, 1)) {
                break;
              }
              char v27 = static VisualResponseProvider.isCardSectionSupported(cardSection:)();

              if ((v27 & 1) == 0) {
                goto LABEL_29;
              }
              ++v24;
              if (v4 == (char **)v6) {
                goto LABEL_42;
              }
            }
            __break(1u);
LABEL_44:
            __break(1u);
LABEL_45:
            swift_bridgeObjectRetain();
            uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!v8) {
              goto LABEL_46;
            }
          }
LABEL_29:

          swift_bridgeObjectRelease_n();
          id v4 = &selRef_addObject_;
          unint64_t v7 = v36;
          uint64_t v8 = v32;
          unint64_t v6 = v33;
          unint64_t v9 = v31;
          goto LABEL_31;
        }
LABEL_46:
        swift_bridgeObjectRelease();
      }
    }
    return 0;
  }
  else
  {
LABEL_52:
    uint64_t result = swift_unknownObjectRelease();
    __break(1u);
  }
  return result;
}

unint64_t sub_10007F324()
{
  unint64_t result = qword_100171130;
  if (!qword_100171130)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100171130);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SRCarPlaySiriUnavailableView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for SRCarPlaySiriUnavailableView()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for SRCarPlaySiriUnavailableView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectWeakCopyInit();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for SRCarPlaySiriUnavailableView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t initializeWithTake for SRCarPlaySiriUnavailableView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for SRCarPlaySiriUnavailableView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakTakeAssign();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for SRCarPlaySiriUnavailableView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SRCarPlaySiriUnavailableView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SRCarPlaySiriUnavailableView()
{
  return &type metadata for SRCarPlaySiriUnavailableView;
}

uint64_t sub_10007F794(uint64_t a1)
{
  return _swift_getOpaqueTypeConformance2(a1, &unk_100139C04, 1);
}

uint64_t sub_10007F7B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10007D3B4(&qword_100170CC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10007D3B4(&qword_100170CC8);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10007D3B4(&qword_100170CD0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  char v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v14 = sub_10007D3B4(&qword_100170CD8);
  sub_10007FA40(a1, &v6[*(int *)(v14 + 44)]);
  static Alignment.center.getter();
  sub_100080254(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v9, 0.0, 1, INFINITY, 0);
  sub_1000826D0((uint64_t)v6, &qword_100170CC0);
  LOBYTE(v6) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  sub_100082794((uint64_t)v9, (uint64_t)v13, &qword_100170CC8);
  char v23 = &v13[*(int *)(v11 + 44)];
  *char v23 = (char)v6;
  *((void *)v23 + 1) = v16;
  *((void *)v23 + 2) = v18;
  *((void *)v23 + 3) = v20;
  *((void *)v23 + 4) = v22;
  v23[40] = 0;
  sub_1000826D0((uint64_t)v9, &qword_100170CC8);
  char v24 = static Edge.Set.top.getter();
  GeometryProxy.size.getter();
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_100082794((uint64_t)v13, a2, &qword_100170CD0);
  uint64_t v33 = a2 + *(int *)(sub_10007D3B4(&qword_100170CE0) + 36);
  *(unsigned char *)uint64_t v33 = v24;
  *(void *)(v33 + 8) = v26;
  *(void *)(v33 + 16) = v28;
  *(void *)(v33 + 24) = v30;
  *(void *)(v33 + 32) = v32;
  *(unsigned char *)(v33 + 40) = 0;
  return sub_1000826D0((uint64_t)v13, &qword_100170CD0);
}

uint64_t sub_10007FA40@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v83 = a2;
  uint64_t v78 = type metadata accessor for DismissButtonStyle();
  uint64_t v3 = ((uint64_t (*)(void))__chkstk_darwin)();
  id v77 = (uint64_t *)&v73[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  long long v79 = &v73[-v5];
  uint64_t v80 = sub_10007D3B4(&qword_100170CE8);
  uint64_t v82 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  id v76 = &v73[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v81 = sub_10007D3B4(&qword_100170CF0);
  uint64_t v94 = *(void *)(v81 - 8);
  uint64_t v7 = __chkstk_darwin(v81);
  v95 = &v73[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  id v93 = &v73[-v9];
  uint64_t v84 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  static Font.largeTitle.getter();
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  char v19 = v18;
  swift_release();
  sub_10008096C(v10, v12, v14);
  swift_bridgeObjectRelease();
  static Font.Weight.medium.getter();
  uint64_t v20 = Text.fontWeight(_:)();
  uint64_t v91 = v21;
  uint64_t v92 = v20;
  uint64_t v90 = v22;
  int v89 = v23 & 1;
  sub_10008096C(v15, v17, v19 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  static Font.headline.getter();
  uint64_t v29 = Text.font(_:)();
  uint64_t v31 = v30;
  char v33 = v32;
  swift_release();
  sub_10008096C(v24, v26, v28);
  swift_bridgeObjectRelease();
  static Font.Weight.regular.getter();
  uint64_t v75 = Text.fontWeight(_:)();
  uint64_t v85 = v34;
  uint64_t v88 = v35;
  int v74 = v36 & 1;
  sub_10008096C(v29, v31, v33 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v86 = swift_getKeyPath();
  uint64_t v37 = static Alignment.center.getter();
  sub_100080414(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v98, 69.0, 0, 0.0, 1, v37, v38, 0, 1);
  uint64_t v39 = v84;
  sub_100080888(v84, (uint64_t)v97);
  uint64_t v40 = swift_allocObject();
  sub_1000808C4((uint64_t)v97, v40 + 16);
  uint64_t v96 = v39;
  sub_10007D3B4(&qword_100170CF8);
  sub_100081A84();
  uint64_t v41 = v76;
  Button.init(action:label:)();
  uint64_t v42 = swift_getKeyPath();
  id v43 = v77;
  *id v77 = v42;
  sub_10007D3B4(&qword_100170D08);
  swift_storeEnumTagMultiPayload();
  uint64_t v44 = v78;
  os_log_type_t v45 = (char *)v43 + *(int *)(v78 + 20);
  *(void *)os_log_type_t v45 = swift_getKeyPath();
  v45[8] = 0;
  uint64_t v46 = *(int *)(v44 + 24);
  id v47 = [self _carSystemFocusColor];
  *(uint64_t *)((char *)v43 + v46) = Color.init(uiColor:)();
  uint64_t v48 = (uint64_t)v43;
  unint64_t v49 = v79;
  sub_100081B98(v48, (uint64_t)v79);
  sub_100082B94(&qword_100170D10, &qword_100170CE8);
  sub_100082B4C(&qword_100170D18, (void (*)(uint64_t))type metadata accessor for DismissButtonStyle);
  unint64_t v50 = v95;
  uint64_t v51 = v80;
  View.buttonStyle<A>(_:)();
  sub_100082670((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for DismissButtonStyle);
  (*(void (**)(unsigned char *, uint64_t))(v82 + 8))(v41, v51);
  unint64_t v53 = v93;
  uint64_t v52 = v94;
  uint64_t v54 = v81;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v94 + 32))(v93, v50, v81);
  LOBYTE(v26) = v89;
  v97[0] = v89;
  unint64_t v55 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v52 + 16);
  v55(v50, v53, v54);
  id v56 = v83;
  uint64_t v57 = v91;
  uint64_t v58 = v92;
  uint64_t v59 = v90;
  void *v83 = v92;
  v56[1] = v59;
  *((unsigned char *)v56 + 16) = v26;
  uint64_t v60 = v75;
  v56[3] = v57;
  v56[4] = v60;
  v56[5] = v85;
  LOBYTE(v31) = v74;
  *((unsigned char *)v56 + 48) = v74;
  uint64_t v61 = KeyPath;
  v56[7] = v88;
  v56[8] = v61;
  *((unsigned char *)v56 + 72) = 1;
  v56[10] = v86;
  v56[11] = 0;
  *((unsigned char *)v56 + 96) = 1;
  *(_WORD *)((char *)v56 + 97) = 256;
  long long v62 = v98[0];
  long long v63 = v98[1];
  long long v64 = v98[2];
  *(_OWORD *)(v56 + 19) = v98[3];
  *(_OWORD *)(v56 + 17) = v64;
  *(_OWORD *)(v56 + 15) = v63;
  *(_OWORD *)(v56 + 13) = v62;
  long long v65 = v98[4];
  long long v66 = v98[5];
  long long v67 = v98[6];
  *(_OWORD *)(v56 + 27) = v98[7];
  *(_OWORD *)(v56 + 25) = v67;
  *(_OWORD *)(v56 + 23) = v66;
  *(_OWORD *)(v56 + 21) = v65;
  unint64_t v68 = v56;
  uint64_t v69 = sub_10007D3B4(&qword_100170D20);
  v55((unsigned char *)v68 + *(int *)(v69 + 80), v95, v54);
  sub_100081BFC(v58, v59, v89);
  swift_bridgeObjectRetain();
  uint64_t v70 = v85;
  sub_100081BFC(v60, v85, v31);
  unint64_t v71 = *(void (**)(unsigned char *, uint64_t))(v94 + 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v71(v93, v54);
  v71(v95, v54);
  sub_10008096C(v60, v70, v31);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10008096C(v92, v90, v97[0]);
  return swift_bridgeObjectRelease();
}

__n128 sub_100080254@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    char v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100082794(v13, a9, &qword_100170CC0);
  uint64_t v24 = (_OWORD *)(a9 + *(int *)(sub_10007D3B4(&qword_100170CC8) + 36));
  void v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  _OWORD *v24 = v26;
  v24[1] = v27;
  __n128 result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

__n128 sub_100080414@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char v18 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v27 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v18 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(unsigned char *)(a9 + 8) = v18 & 1;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  __n128 result = v32;
  *(_OWORD *)(a9 + 48) = v31;
  *(__n128 *)(a9 + 64) = v32;
  return result;
}

uint64_t sub_1000805C0(uint64_t a1)
{
  _StringGuts.grow(_:)(48);
  swift_bridgeObjectRelease();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10007DCA0(v2, (uint64_t)qword_100171AB0);
  os_log_type_t v3 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v3, 0x10uLL, 2036625250, 0xE400000000000000, 0xD000000000000032, 0x80000001000FAC30);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(a1 + 104);
    uint64_t ObjectType = swift_getObjectType();
    id v7 = [objc_allocWithZone((Class)UIViewController) init:0:0xE000000000000000];
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v5 + 32))(v7, 7, ObjectType, v5);

    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_100080708@<D0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(unsigned char *)(a1 + 56) = v13;
  double result = *(double *)&v14;
  *(_OWORD *)(a1 + 64) = v14;
  return result;
}

uint64_t sub_100080800()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_10008081C@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  sub_100080888(v1, (uint64_t)v5);
  uint64_t v3 = swift_allocObject();
  uint64_t result = sub_1000808C4((uint64_t)v5, v3 + 16);
  *a1 = sub_100080918;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v3;
  return result;
}

uint64_t sub_100080888(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000808C4(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a2 + 80) = v6;
  swift_unknownObjectWeakTakeInit();
  *(void *)(a2 + 104) = *(void *)(a1 + 104);
  return a2;
}

uint64_t sub_100080918@<X0>(uint64_t a1@<X8>)
{
  return sub_10007F7B0(v1 + 16, a1);
}

uint64_t type metadata accessor for DismissButtonStyle()
{
  uint64_t result = qword_100170D88;
  if (!qword_100170D88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10008096C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10008097C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v113 = a1;
  uint64_t v1 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v108 = *(void *)(v1 - 8);
  uint64_t v109 = v1;
  __chkstk_darwin(v1);
  v107 = (char *)&v96 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for ColorScheme();
  uint64_t v117 = *(void *)(v104 - 8);
  uint64_t v3 = __chkstk_darwin(v104);
  v114 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v103 = (uint64_t)&v96 - v5;
  uint64_t v6 = sub_10007D3B4(&qword_100170DE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v111 = (uint64_t)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10007D3B4(&qword_100170DE8);
  __chkstk_darwin(v110);
  uint64_t v112 = (uint64_t)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for RoundedRectangle() - 8;
  uint64_t v9 = __chkstk_darwin(v101);
  v116 = (long long *)((char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  long long v100 = (char *)&v96 - v11;
  uint64_t v12 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10007D3B4(&qword_100170DF0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  char v19 = (char *)&v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10007D3B4(&qword_100170DF8);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  char v23 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10007D3B4(&qword_100170E00);
  uint64_t v25 = v24 - 8;
  __chkstk_darwin(v24);
  uint64_t v97 = (uint64_t)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_10007D3B4(&qword_100170E08) - 8;
  __chkstk_darwin(v98);
  uint64_t v115 = (uint64_t)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_10007D3B4(&qword_100170E10);
  __chkstk_darwin(v105);
  v106 = (char *)&v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  uint64_t v29 = static Font.headline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v19, v15, v12);
  long long v31 = (uint64_t *)&v19[*(int *)(v17 + 44)];
  uint64_t *v31 = KeyPath;
  v31[1] = v29;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v99 = type metadata accessor for DismissButtonStyle();
  uint64_t v32 = v102;
  uint64_t v33 = *(void *)(v102 + *(int *)(v99 + 24));
  uint64_t v34 = swift_getKeyPath();
  sub_100082794((uint64_t)v19, (uint64_t)v23, &qword_100170DF0);
  long long v35 = (uint64_t *)&v23[*(int *)(v21 + 44)];
  *long long v35 = v34;
  v35[1] = v33;
  swift_retain();
  sub_1000826D0((uint64_t)v19, &qword_100170DF0);
  LODWORD(v33) = static HierarchicalShapeStyle.quaternary.getter();
  LOBYTE(v34) = static Edge.Set.all.getter();
  uint64_t v36 = v97;
  sub_100082794((uint64_t)v23, v97, &qword_100170DF8);
  uint64_t v37 = v36 + *(int *)(v25 + 44);
  *(_DWORD *)uint64_t v37 = v33;
  *(unsigned char *)(v37 + 4) = v34;
  sub_1000826D0((uint64_t)v23, &qword_100170DF8);
  uint64_t v38 = v101;
  uint64_t v39 = v100;
  uint64_t v40 = &v100[*(int *)(v101 + 28)];
  uint64_t v41 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v42 = type metadata accessor for RoundedCornerStyle();
  id v43 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104);
  v43(v40, v41, v42);
  __asm { FMOV            V0.2D, #8.0 }
  long long v96 = _Q0;
  *uint64_t v39 = _Q0;
  uint64_t v49 = v115;
  uint64_t v50 = v115 + *(int *)(v98 + 44);
  sub_10008260C((uint64_t)v39, v50);
  *(_WORD *)(v50 + *(int *)(sub_10007D3B4(&qword_100170E18) + 36)) = 256;
  sub_100082794(v36, v49, &qword_100170E00);
  sub_100082670((uint64_t)v39, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_1000826D0(v36, &qword_100170E00);
  uint64_t v51 = v116;
  v43((char *)v116 + *(int *)(v38 + 28), v41, v42);
  *uint64_t v51 = v96;
  uint64_t v52 = v103;
  uint64_t v53 = v32;
  sub_1000813C8(v103);
  uint64_t v54 = enum case for ColorScheme.dark(_:);
  uint64_t v55 = v117;
  id v56 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 104);
  uint64_t v57 = v114;
  uint64_t v58 = v104;
  v56(v114, enum case for ColorScheme.dark(_:), v104);
  LODWORD(v101) = static ColorScheme.== infix(_:_:)();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v55 + 8);
  uint64_t v60 = v57;
  uint64_t v61 = v58;
  v59(v60, v58);
  uint64_t v62 = v52;
  uint64_t v63 = v52;
  uint64_t v64 = v61;
  uint64_t v117 = v55 + 8;
  v59((char *)v63, v61);
  uint64_t v65 = v53 + *(int *)(v99 + 20);
  uint64_t v66 = *(void *)v65;
  LOBYTE(v61) = *(unsigned char *)(v65 + 8);
  sub_100081D58(*(void *)v65, v61);
  LOBYTE(v55) = sub_100081684(v66, v61);
  sub_100081E18(v66, v61);
  if (v55)
  {
    sub_1000813C8(v62);
    long long v67 = v114;
    v56(v114, v54, v64);
    static ColorScheme.== infix(_:_:)();
    v59(v67, v64);
    v59((char *)v62, v64);
  }
  (*(void (**)(char *, void, uint64_t))(v108 + 104))(v107, enum case for Color.RGBColorSpace.sRGB(_:), v109);
  uint64_t v68 = Color.init(_:white:opacity:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v69 = (uint64_t)v116;
  uint64_t v70 = v111;
  sub_10008260C((uint64_t)v116, v111);
  uint64_t v71 = v70 + *(int *)(sub_10007D3B4(&qword_100170E20) + 36);
  long long v72 = v119;
  *(_OWORD *)uint64_t v71 = v118;
  *(_OWORD *)(v71 + 16) = v72;
  *(void *)(v71 + 32) = v120;
  uint64_t v73 = sub_10007D3B4(&qword_100170E28);
  *(void *)(v70 + *(int *)(v73 + 52)) = v68;
  *(_WORD *)(v70 + *(int *)(v73 + 56)) = 256;
  uint64_t v74 = static Alignment.center.getter();
  uint64_t v76 = v75;
  id v77 = (uint64_t *)(v70 + *(int *)(sub_10007D3B4(&qword_100170E30) + 36));
  *id v77 = v74;
  v77[1] = v76;
  sub_100082670(v69, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  LOBYTE(v74) = static Edge.Set.all.getter();
  EdgeInsets.init(_all:)();
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v86 = v112;
  sub_100082794(v70, v112, &qword_100170DE0);
  uint64_t v87 = v86 + *(int *)(v110 + 36);
  *(unsigned char *)uint64_t v87 = v74;
  *(void *)(v87 + 8) = v79;
  *(void *)(v87 + 16) = v81;
  *(void *)(v87 + 24) = v83;
  *(void *)(v87 + 32) = v85;
  *(unsigned char *)(v87 + 40) = 0;
  sub_1000826D0(v70, &qword_100170DE0);
  uint64_t v88 = static Alignment.center.getter();
  uint64_t v90 = v89;
  uint64_t v91 = (uint64_t)v106;
  uint64_t v92 = (uint64_t)&v106[*(int *)(v105 + 36)];
  sub_100082794(v86, v92, &qword_100170DE8);
  id v93 = (uint64_t *)(v92 + *(int *)(sub_10007D3B4(&qword_100170E38) + 36));
  *id v93 = v88;
  v93[1] = v90;
  uint64_t v94 = v115;
  sub_100082794(v115, v91, &qword_100170E08);
  sub_1000826D0(v86, &qword_100170DE8);
  sub_1000826D0(v94, &qword_100170E08);
  return sub_10008272C(v91, v113);
}

uint64_t sub_1000813C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007D3B4(&qword_100170D08);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100082794(v2, (uint64_t)v10, &qword_100170D08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ColorScheme();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
  else
  {
    os_log_type_t v13 = static os_log_type_t.fault.getter();
    uint64_t v14 = static Log.runtimeIssuesLog.getter();
    os_log_type_t v15 = v13;
    if (os_log_type_enabled(v14, v13))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v18[1] = a1;
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v18[2] = sub_100092AEC(0x686353726F6C6F43, 0xEB00000000656D65, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_100081684(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentValues();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = static os_log_type_t.fault.getter();
  uint64_t v9 = static Log.runtimeIssuesLog.getter();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_100092AEC(1819242306, 0xE400000000000000, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath();
  sub_100081E18(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t sub_100081888(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorScheme();
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_100081950@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10008197C()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_1000819A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1000819D8()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_100081A0C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100081A74()
{
  return sub_1000805C0(v0 + 16);
}

double sub_100081A7C@<D0>(uint64_t a1@<X8>)
{
  return sub_100080708(a1);
}

unint64_t sub_100081A84()
{
  unint64_t result = qword_100170D00;
  if (!qword_100170D00)
  {
    sub_100081AF8(&qword_100170CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100170D00);
  }
  return result;
}

uint64_t sub_100081AF8(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100081B40()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100081B68@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isFocused.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100081B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DismissButtonStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100081BFC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t *sub_100081C0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10007D3B4(&qword_100170D08);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    os_log_type_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_100081D58(*(void *)v11, v13);
    *(void *)os_log_type_t v10 = v12;
    v10[8] = v13;
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return a1;
}

uint64_t sub_100081D58(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100081D64(uint64_t a1, uint64_t a2)
{
  sub_10007D3B4(&qword_100170D08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_100081E18(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));

  return swift_release();
}

uint64_t sub_100081E18(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

void *sub_100081E24(void *a1, void *a2, uint64_t a3)
{
  sub_10007D3B4(&qword_100170D08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100081D58(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  return a1;
}

void *sub_100081F24(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000826D0((uint64_t)a1, &qword_100170D08);
    sub_10007D3B4(&qword_100170D08);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100081D58(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_100081E18(v12, v13);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100082054(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10007D3B4(&qword_100170D08);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  return a1;
}

char *sub_100082140(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000826D0((uint64_t)a1, &qword_100170D08);
    uint64_t v6 = sub_10007D3B4(&qword_100170D08);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_100081E18(v12, v13);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_10008225C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100082270);
}

uint64_t sub_100082270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10007D3B4(&qword_100170D28);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100082334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100082348);
}

uint64_t sub_100082348(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10007D3B4(&qword_100170D28);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_100082408()
{
  sub_1000824AC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000824AC()
{
  if (!qword_100170D98)
  {
    type metadata accessor for ColorScheme();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100170D98);
    }
  }
}

uint64_t sub_100082504()
{
  return sub_100082B94(&qword_100170DD0, &qword_100170DD8);
}

uint64_t sub_100082540(uint64_t a1)
{
  return _swift_getOpaqueTypeConformance2(a1, &unk_100139C2C, 1);
}

uint64_t sub_10008255C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100082588()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1000825B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1000825E0()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_10008260C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100082670(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000826D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10007D3B4(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10008272C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007D3B4(&qword_100170E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100082794(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10007D3B4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000827FC()
{
  unint64_t result = qword_100170E40;
  if (!qword_100170E40)
  {
    sub_100081AF8(&qword_100170E10);
    sub_10008289C();
    sub_100082B94(&qword_100170EA8, &qword_100170E38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100170E40);
  }
  return result;
}

unint64_t sub_10008289C()
{
  unint64_t result = qword_100170E48;
  if (!qword_100170E48)
  {
    sub_100081AF8(&qword_100170E08);
    sub_10008293C();
    sub_100082B94(&qword_100170EA0, &qword_100170E18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100170E48);
  }
  return result;
}

unint64_t sub_10008293C()
{
  unint64_t result = qword_100170E50;
  if (!qword_100170E50)
  {
    sub_100081AF8(&qword_100170E00);
    sub_1000829DC();
    sub_100082B94(&qword_100170E90, &qword_100170E98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100170E50);
  }
  return result;
}

unint64_t sub_1000829DC()
{
  unint64_t result = qword_100170E58;
  if (!qword_100170E58)
  {
    sub_100081AF8(&qword_100170DF8);
    sub_100082A7C();
    sub_100082B94(&qword_100170E80, &qword_100170E88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100170E58);
  }
  return result;
}

unint64_t sub_100082A7C()
{
  unint64_t result = qword_100170E60;
  if (!qword_100170E60)
  {
    sub_100081AF8(&qword_100170DF0);
    sub_100082B4C(&qword_100170E68, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    sub_100082B94(&qword_100170E70, &qword_100170E78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100170E60);
  }
  return result;
}

uint64_t sub_100082B4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100082B94(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100081AF8(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100082BF4()
{
  return sub_100082E3C(0, type metadata accessor for SRBundleLookupClass);
}

id static SRBundleUtilities.getSiriAppBundle()()
{
  id v0 = [objc_allocWithZone((Class)type metadata accessor for SRBundleLookupClass()) init];
  swift_getObjectType();

  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = [self bundleForClass:ObjCClassFromMetadata];

  return v2;
}

uint64_t type metadata accessor for SRBundleLookupClass()
{
  return self;
}

id GenerativeModelsCompatabilityWrapper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id SRBundleUtilities.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRBundleUtilities();
  return [super init];
}

uint64_t type metadata accessor for SRBundleUtilities()
{
  return self;
}

id sub_100082DDC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  v5.receiver = a1;
  v5.super_class = (Class)a4(a3);
  return [super init];
}

id SRBundleUtilities.__deallocating_deinit(uint64_t a1)
{
  return sub_100082E3C(a1, type metadata accessor for SRBundleUtilities);
}

id sub_100082E3C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

char *sub_100082F04()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  id v1 = &v0[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
  *id v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR___SRCarPlayPresentation_siriIsIdleAndQuiet] = 2;
  v0[OBJC_IVAR___SRCarPlayPresentation_shouldResumeMediaOnIdle] = 0;
  *(void *)&v0[OBJC_IVAR___SRCarPlayPresentation_delayDismissalTimeInSec] = 0;
  v0[OBJC_IVAR___SRCarPlayPresentation_shouldClearFullscreenSnippet] = 0;
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for SRCarPlayPresentation();
  id v2 = [super init];
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v3 = (objc_class *)type metadata accessor for SRCarPlayViewController();
  objc_super v4 = objc_allocWithZone(v3);
  objc_super v5 = &v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  *objc_super v5 = 0;
  v5[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = &v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex];
  v6[8] = 1;
  *(void *)uint64_t v6 = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions] = 0;
  *(void *)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands] = 0;
  v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking] = 0;
  v12.receiver = v4;
  v12.super_class = v3;
  uint64_t v7 = (char *)v2;
  uint64_t v8 = (char *)[super initWithNibName:0 bundle:0];
  *(void *)&v8[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate + 8] = &off_100145070;
  swift_unknownObjectWeakAssign();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v9 = &v7[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
  unint64_t v10 = *(void **)&v7[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
  *(void *)uint64_t v9 = v8;
  *((void *)v9 + 1) = &off_1001455A8;

  return v7;
}

id sub_100083220()
{
  [self cancelPreviousPerformRequestsWithTarget:v0];
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlayPresentation();
  return [super dealloc];
}

void *sub_100083338()
{
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10007DCA0(v1, (uint64_t)qword_100171AB0);
  os_log_type_t v2 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v2, 2uLL, 0x6D7369646F747561, 0xED00002928737369, 0x697373696D736944, 0xEA0000000000676ELL);
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result dismissSiriPresentation:v0 withReason:4];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for SRCarPlayPresentation()
{
  return self;
}

void *sub_1000834CC(void *a1, id a2)
{
  uint64_t v32 = a1;
  long long v35 = 0;
  uint64_t v36 = _swiftEmptyArrayStorage;
  char v34 = 0;
  if (a2)
  {
    id v4 = [a2 insertedItemIndexPaths];
    if (v4)
    {
      objc_super v5 = v4;
      uint64_t v6 = type metadata accessor for IndexPath();
      uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v8 = sub_10007D3B4(&qword_100170FD8);
      uint64_t v25 = &v22;
      __chkstk_darwin(v8 - 8);
      unint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v11 = *(void *)(v7 + 16);
      uint64_t v12 = *(void *)(v6 - 8);
      uint64_t v26 = v7;
      uint64_t v23 = v12;
      uint64_t v24 = v6 - 8;
      if (v11)
      {
        uint64_t v13 = v12;
        unint64_t v14 = v7 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
        uint64_t v29 = *(void *)(v12 + 72);
        os_log_type_t v15 = (void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
        uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
        uint64_t v30 = v12 + 16;
        long long v31 = v16;
        uint64_t v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
        uint64_t v27 = v12 + 32;
        uint64_t v28 = (void (**)(char *, uint64_t))(v12 + 8);
        swift_bridgeObjectRetain();
        while (1)
        {
          v31(v10, v14, v6);
          (*v15)(v10, 0, 1, v6);
          uint64_t v18 = (*v17)(v10, 1, v6);
          if (v18 == 1) {
            break;
          }
          __chkstk_darwin(v18);
          uint64_t v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v20, v10, v6);
          sub_1000837F4((uint64_t)v20, v32, (unint64_t *)&v36, &v35, v33, &v34);
          (*v28)(v20, v6);
          v14 += v29;
          if (!--v11) {
            goto LABEL_10;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_10:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v6);
      }
      swift_bridgeObjectRelease_n();
      return v36;
    }
    else
    {
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
    (*v28)(v3, v2);
    uint64_t result = (void *)swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

void sub_1000837F4(uint64_t a1, void *a2, unint64_t *a3, void **a4, uint64_t a5, unsigned char *a6)
{
  id v47 = a6;
  uint64_t v51 = a3;
  if (!a2)
  {
    __break(1u);
LABEL_25:
    uint64_t v43 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v6, 1, 1, v43);
    goto LABEL_26;
  }
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v12 = [a2 itemAtIndexPath:isa];

  if (!v12) {
    return;
  }
  uint64_t v48 = v7;
  uint64_t v52 = 0;
  unint64_t v53 = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  v13._countAndFlagsBits = 0xD00000000000001ELL;
  v13._object = (void *)0x80000001000FB820;
  String.append(_:)(v13);
  id v54 = v12;
  sub_10007D3B4((uint64_t *)&unk_100170FE0);
  _print_unlocked<A, B>(_:_:)();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v50 = a4;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = sub_10007DCA0(v14, (uint64_t)qword_100171AB0);
  os_log_type_t v16 = static os_log_type_t.info.getter();
  unint64_t v45 = (unint64_t)"overlapping range";
  uint64_t v46 = v15;
  sub_1000B2FEC(v16, 0x10uLL, 0xD000000000000023, 0x80000001000FB7F0, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  id v17 = [v12 identifier:a5];
  uint64_t v18 = sub_10007D3B4((uint64_t *)&unk_100171700);
  uint64_t v49 = &v44;
  __chkstk_darwin(v18 - 8);
  uint64_t v6 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v17) {
    goto LABEL_25;
  }
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v24(v6, v23, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v6, 0, 1, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v6, 1, v20) == 1)
  {
LABEL_26:
    __break(1u);
    return;
  }
  uint64_t v25 = v51;
  unint64_t v26 = *v51;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v25 = v26;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v26 = sub_100098600(0, *(void *)(v26 + 16) + 1, 1, v26);
    *uint64_t v51 = v26;
  }
  unint64_t v29 = *(void *)(v26 + 16);
  unint64_t v28 = *(void *)(v26 + 24);
  if (v29 >= v28 >> 1)
  {
    unint64_t v26 = sub_100098600(v28 > 1, v29 + 1, 1, v26);
    *uint64_t v51 = v26;
  }
  *(void *)(v26 + 16) = v29 + 1;
  v24((char *)(v26+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v29), v6, v20);
  id v30 = [v12 aceObject];
  long long v31 = v30;
  uint64_t v32 = v50;
  if (*v50)
  {
    if (!v30) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v33 = sub_100083D90(v30);
    char v34 = *v32;
    *uint64_t v32 = v33;

    if (!v31)
    {
LABEL_22:
      swift_unknownObjectRelease();
      return;
    }
  }
  self;
  uint64_t v35 = swift_dynamicCastObjCClass();
  if (!v35)
  {

    goto LABEL_22;
  }
  uint64_t v36 = (void *)v35;
  id v37 = v31;
  if (![v36 preserveResultSpaceIfPossible]) {
    goto LABEL_20;
  }
  id v38 = [v36 af_dialogIdentifier];
  if (!v38) {
    goto LABEL_20;
  }
  uint64_t v39 = v38;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v40._countAndFlagsBits = 0x6E657645646E6946;
  v40._object = (void *)0xEB00000000237374;
  LOBYTE(v39) = String.hasPrefix(_:)(v40);
  swift_bridgeObjectRelease();
  if (v39)
  {
    os_log_type_t v41 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v41, 0x10uLL, 0xD000000000000023, v45 | 0x8000000000000000, 0xD00000000000005FLL, 0x80000001000FB890);
    swift_unknownObjectRelease();
  }
  else
  {
LABEL_20:
    os_log_type_t v42 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v42, 0x10uLL, 0xD000000000000023, v45 | 0x8000000000000000, 0xD000000000000044, 0x80000001000FB840);
    swift_unknownObjectRelease();

    *id v47 = 1;
  }
}

void *sub_100083D90(void *a1)
{
  if (!a1) {
    goto LABEL_46;
  }
  uint64_t v3 = v1;
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (!v4) {
    goto LABEL_13;
  }
  objc_super v5 = (void *)v4;
  id v6 = a1;
  id v7 = [v5 itemType];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (v11)
    {
      if (v9 == v12 && v11 == v13)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0)
        {

          goto LABEL_13;
        }
      }
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      sub_10007DCA0(v43, (uint64_t)qword_100171AB0);
      os_log_type_t v44 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v44, 0x10uLL, 0xD000000000000021, 0x80000001000FB8F0, 0xD00000000000003ALL, 0x80000001000FBCD0);

      return 0;
    }
  }
  else
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }

  swift_bridgeObjectRelease();
LABEL_13:
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (v16)
  {
    id v17 = (void *)v16;
    id v18 = a1;
    _StringGuts.grow(_:)(62);
    v19._countAndFlagsBits = 0xD00000000000003CLL;
    v19._object = (void *)0x80000001000FBC90;
    String.append(_:)(v19);
    id v20 = [v17 description];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_10007DCA0(v25, (uint64_t)qword_100171AB0);
    os_log_type_t v26 = static os_log_type_t.info.getter();
    uint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
LABEL_17:
    sub_1000B2FEC(v26, 0x10uLL, 0xD000000000000021, 0x80000001000FB8F0, v27, v28);
    swift_bridgeObjectRelease();
    return v17;
  }
  self;
  uint64_t v29 = swift_dynamicCastObjCClass();
  if (!v29)
  {
    self;
    uint64_t v45 = swift_dynamicCastObjCClass();
    if (v45)
    {
      uint64_t v46 = (void *)v45;
      uint64_t v47 = qword_100170448;
      id v48 = a1;
      if (v47 != -1) {
        swift_once();
      }
      uint64_t v49 = type metadata accessor for Logger();
      sub_10007DCA0(v49, (uint64_t)qword_100171AB0);
      os_log_type_t v50 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v50, 0x10uLL, 0xD000000000000021, 0x80000001000FB8F0, 0xD000000000000061, 0x80000001000FBB70);
      id v51 = sub_1000880E0(v46);
      goto LABEL_33;
    }
    self;
    uint64_t v60 = swift_dynamicCastObjCClass();
    if (v60)
    {
      uint64_t v61 = (void *)v60;
      id v48 = a1;
      id v62 = [v61 title];
      if (v62)
      {
        uint64_t v63 = v62;
        uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v66 = v65;

        swift_bridgeObjectRelease();
        uint64_t v67 = HIBYTE(v66) & 0xF;
        if ((v66 & 0x2000000000000000) == 0) {
          uint64_t v67 = v64 & 0xFFFFFFFFFFFFLL;
        }
        if (v67)
        {
          if (qword_100170448 != -1) {
            swift_once();
          }
          uint64_t v68 = type metadata accessor for Logger();
          sub_10007DCA0(v68, (uint64_t)qword_100171AB0);
          os_log_type_t v69 = static os_log_type_t.info.getter();
          uint64_t v70 = 0xD000000000000072;
          uint64_t v71 = "SRCarPlayPresentation received SAUIConfirmationView with non-nil title, converting to VisualResponseView in RF 1.0";
LABEL_68:
          sub_1000B2FEC(v69, 0x10uLL, 0xD000000000000021, 0x80000001000FB8F0, v70, (unint64_t)(v71 - 32) | 0x8000000000000000);
          id v51 = sub_10009C2CC();
LABEL_33:
          id v17 = v51;

          return v17;
        }
      }
      id v87 = [v61 subtitle];
      if (v87)
      {
        uint64_t v88 = v87;
        uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v91 = v90;

        swift_bridgeObjectRelease();
        uint64_t v92 = HIBYTE(v91) & 0xF;
        if ((v91 & 0x2000000000000000) == 0) {
          uint64_t v92 = v89 & 0xFFFFFFFFFFFFLL;
        }
        if (v92)
        {
          if (qword_100170448 != -1) {
            swift_once();
          }
          uint64_t v93 = type metadata accessor for Logger();
          sub_10007DCA0(v93, (uint64_t)qword_100171AB0);
          os_log_type_t v69 = static os_log_type_t.info.getter();
          uint64_t v70 = 0xD000000000000075;
          uint64_t v71 = "SRCarPlayPresentation received SAUIConfirmationView with non-nil subtitle, converting to VisualResponseView in RF 1.0";
          goto LABEL_68;
        }
      }
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v94 = type metadata accessor for Logger();
      sub_10007DCA0(v94, (uint64_t)qword_100171AB0);
      os_log_type_t v95 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v95, 0x10uLL, 0xD000000000000021, 0x80000001000FB8F0, 0xD00000000000004CLL, 0x80000001000FBA20);

      return 0;
    }
LABEL_46:
    uint64_t v98 = &type metadata for SiriUIFeaturesFlags;
    unint64_t v99 = sub_100088EC0();
    char v72 = isFeatureEnabled(_:)();
    sub_100088F14((uint64_t)&v96);
    if (a1)
    {
      if (v72)
      {
        self;
        uint64_t v73 = swift_dynamicCastObjCClass();
        if (v73)
        {
          id v17 = (void *)v73;
          id v74 = a1;
          if (sub_10007EF64())
          {
            if (qword_100170448 != -1) {
              swift_once();
            }
            uint64_t v75 = type metadata accessor for Logger();
            sub_10007DCA0(v75, (uint64_t)qword_100171AB0);
            os_log_type_t v76 = static os_log_type_t.info.getter();
            sub_1000B2FEC(v76, 0x10uLL, 0xD000000000000021, 0x80000001000FB8F0, 0xD000000000000041, 0x80000001000FB9D0);
            return v17;
          }
          if (qword_100170448 != -1) {
            swift_once();
          }
          uint64_t v77 = type metadata accessor for Logger();
          sub_10007DCA0(v77, (uint64_t)qword_100171AB0);
          os_log_type_t v78 = static os_log_type_t.info.getter();
          sub_1000B2FEC(v78, 0x10uLL, 0xD000000000000021, 0x80000001000FB8F0, 0xD000000000000066, 0x80000001000FB960);
        }
      }
    }
    uint64_t v96 = 0;
    unint64_t v97 = 0xE000000000000000;
    _StringGuts.grow(_:)(64);
    v79._countAndFlagsBits = 0xD00000000000003ELL;
    v79._object = (void *)0x80000001000FB920;
    String.append(_:)(v79);
    id v80 = a1;
    sub_10007D3B4(&qword_100170FF8);
    v81._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v81);
    swift_bridgeObjectRelease();
    uint64_t v83 = v96;
    unint64_t v82 = v97;
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v84 = type metadata accessor for Logger();
    sub_10007DCA0(v84, (uint64_t)qword_100171AB0);
    os_log_type_t v85 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v85, 0x10uLL, 0xD000000000000021, 0x80000001000FB8F0, v83, v82);
    swift_bridgeObjectRelease();
    return 0;
  }
  id v17 = (void *)v29;
  id v30 = a1;
  _StringGuts.grow(_:)(62);
  v31._countAndFlagsBits = 0xD00000000000003CLL;
  v31._object = (void *)0x80000001000FBBE0;
  String.append(_:)(v31);
  id v32 = [v17 description];
  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v34;

  v36._countAndFlagsBits = v33;
  v36._object = v35;
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_10007DCA0(v37, (uint64_t)qword_100171AB0);
  os_log_type_t v38 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v38, 0x10uLL, 0xD000000000000021, 0x80000001000FB8F0, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  if ([self isSiriLocationServicesPromptingEnabled])
  {
    id v39 = [v17 responseViewId];
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    if (v40 == 0xD000000000000033 && v42 == 0x80000001000FBC20)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v52 & 1) == 0) {
        return v17;
      }
    }
    Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong siriPresentation:v3 setStatusViewHidden:1];
      swift_unknownObjectRelease();
    }
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease();
    id v54 = v30;
    id v55 = [v17 description];
    uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v58 = v57;

    v59._countAndFlagsBits = v56;
    v59._object = v58;
    String.append(_:)(v59);
    swift_bridgeObjectRelease();
    os_log_type_t v26 = static os_log_type_t.info.getter();
    uint64_t v27 = 0xD000000000000025;
    unint64_t v28 = 0x80000001000FBC60;
    goto LABEL_17;
  }
  return v17;
}

id sub_100084888()
{
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10007DCA0(v1, (uint64_t)qword_100171AB0);
  os_log_type_t v2 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v2, 0x10uLL, 0x696E537261656C63, 0xEE00292874657070, 0xD000000000000034, 0x80000001000FB750);
  id result = *(id *)(v0 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (result)
  {
    [result clearSnippet];
    id result = [self isSiriLocationServicesPromptingEnabled];
    if (result)
    {
      id result = (id)swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        [result siriPresentation:v0 setStatusViewHidden:0];
        return (id)swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000849BC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  sub_1000834CC(a1, a2);
  id v23 = v4;
  if (v4)
  {
    id v6 = *(void **)(v2 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
    if (!v6)
    {
      __break(1u);
      return;
    }
    id v7 = *(void (**)(id))((swift_isaMask & *v6) + 0x120);
    id v8 = v4;
    uint64_t v9 = v6;
    v7(v8);

    sub_100088A30(v8);
    if (!v10)
    {

      goto LABEL_20;
    }
    Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {

      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    uint64_t v12 = Strong;
    if ([Strong respondsToSelector:"siriPresentation:didPresentIntentWithBundleId:"])
    {
      NSString v13 = String._bridgeToObjectiveC()();
      [v12 siriPresentation:v3 didPresentIntentWithBundleId:v13];
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
      goto LABEL_20;
    }

    swift_bridgeObjectRelease();
LABEL_19:
    swift_unknownObjectRelease();
    goto LABEL_20;
  }
  if ((v5 & 1) == 0)
  {
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_10007DCA0(v17, (uint64_t)qword_100171AB0);
    os_log_type_t v18 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v18, 0x10uLL, 0xD00000000000001ELL, 0x80000001000FB6E0, 0xD000000000000045, 0x80000001000FB700);
    goto LABEL_20;
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_10007DCA0(v14, (uint64_t)qword_100171AB0);
  os_log_type_t v15 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v15, 0x10uLL, 0xD00000000000001ELL, 0x80000001000FB6E0, 0xD000000000000034, 0x80000001000FB750);
  sub_100084888();
  if ([self isSiriLocationServicesPromptingEnabled])
  {
    uint64_t v16 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v16)
    {
      [v16 siriPresentation:v2 setStatusViewHidden:0];
      goto LABEL_19;
    }
  }
LABEL_20:
  uint64_t v19 = swift_unknownObjectWeakLoadStrong();
  if (v19)
  {
    id v20 = (void *)v19;
    uint64_t v21 = swift_bridgeObjectRetain();
    sub_100084ED8(v21);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v20 siriPresentation:v3 didPresentConversationItemsWithIdentifiers:isa];

    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
}

void *sub_100084D08(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SimpleItemStandard();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  id v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    sub_1000879E0(0, v6, 0);
    id v7 = v22;
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v9 = v10;
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v18 = *(void *)(v8 + 56);
    do
    {
      v9(v5, v11, v2);
      uint64_t v22 = v7;
      unint64_t v13 = v7[2];
      unint64_t v12 = v7[3];
      if (v13 >= v12 >> 1) {
        sub_1000879E0(v12 > 1, v13 + 1, 1);
      }
      uint64_t v20 = v2;
      uint64_t v21 = &protocol witness table for SimpleItemStandard;
      uint64_t v14 = sub_100089018((uint64_t *)&v19);
      v9((char *)v14, (uint64_t)v5, v2);
      os_log_type_t v15 = v22;
      v22[2] = v13 + 1;
      sub_10008907C(&v19, (uint64_t)&v15[5 * v13 + 4]);
      (*(void (**)(char *, uint64_t))(v8 - 8))(v5, v2);
      id v7 = v22;
      v11 += v18;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void *sub_100084ED8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    os_log_type_t v15 = _swiftEmptyArrayStorage;
    sub_100087A00(0, v1, 0);
    uint64_t v4 = type metadata accessor for UUID();
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)(v4 - 8);
    unint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 64);
    uint64_t v9 = *(void *)(v6 + 72);
    do
    {
      __chkstk_darwin(v4);
      v13((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v5);
      swift_dynamicCast();
      uint64_t v2 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100087A00(0, v2[2] + 1, 1);
        uint64_t v2 = v15;
      }
      unint64_t v11 = v2[2];
      unint64_t v10 = v2[3];
      if (v11 >= v10 >> 1)
      {
        sub_100087A00(v10 > 1, v11 + 1, 1);
        uint64_t v2 = v15;
      }
      void v2[2] = v11 + 1;
      uint64_t v4 = (uint64_t)sub_100088EAC(&v14, &v2[4 * v11 + 4]);
      v7 += v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_100085104(uint64_t result)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = (void *)result;
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v2;
  id result = (uint64_t)[v3 stateData];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v5 = (void *)result;
  uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v8 = v7;

  uint64_t v9 = *(void **)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  if (v9)
  {
    uint64_t v10 = *(void *)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v12 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 80);
    id v13 = v9;
    v12(v6, v8, ObjectType, v10);
  }
  sub_100088E54(v6, v8);

  return 1;
}

void sub_100085260()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (v1)
  {
    uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
    if (v2)
    {
      uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      uint64_t v6 = v1;
      id v7 = v2;
      v5(ObjectType, v3);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100085358(char a1, char a2)
{
  uint64_t v3 = v2;
  *(unsigned char *)(v3 + OBJC_IVAR___SRCarPlayPresentation_siriIsIdleAndQuiet) = a1;
  uint64_t v6 = self;
  if ([v6 isJarvis]
    && [v6 flexibleFollowupEnabled]
    && (a2 & 1) != 0)
  {
    if (a1)
    {
      sub_100086D40();
    }
    else
    {
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_10007DCA0(v7, (uint64_t)qword_100171AB0);
      os_log_type_t v8 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v8, 2uLL, 0xD00000000000003BLL, 0x80000001000FB500, 0xD00000000000004CLL, 0x80000001000FB540);
      os_log_type_t v9 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v9, 0x20002uLL, 0xD000000000000027, 0x80000001000FAEC0, 0xD000000000000031, 0x80000001000FAEF0);
      uint64_t v10 = self;
      [v10 cancelPreviousPerformRequestsWithTarget:v3 selector:"handleRequestToCeaseAttending" object:0];
    }
  }
  else
  {
    sub_100085504(a1 & 1);
  }
}

void sub_100085504(char a1)
{
  uint64_t v2 = (char *)v1;
  if ((a1 & 1) == 0)
  {
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10007DCA0(v19, (uint64_t)qword_100171AB0);
    os_log_type_t v20 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v20, 2uLL, 0xD000000000000032, 0x80000001000FB590, 0xD000000000000047, 0x80000001000FB5D0);
    uint64_t v16 = self;
    uint64_t v18 = "autodismiss";
    long long v14 = "cancelPreviousPerformRequestsWithTarget:selector:object:";
    uint64_t v17 = v1;
    goto LABEL_10;
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_10007DCA0(v3, (uint64_t)qword_100171AB0);
  os_log_type_t v4 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v4, 2uLL, 0xD000000000000032, 0x80000001000FB590, 0xD000000000000034, 0x80000001000FB620);
  uint64_t v5 = OBJC_IVAR___SRCarPlayPresentation_carPlayViewController;
  uint64_t v6 = *(void **)&v1[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
  if (!v6)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  uint64_t v7 = *(void **)((char *)v6 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v7)
  {
    uint64_t v8 = *(void *)((char *)v6 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 64);
    unint64_t v11 = v6;
    id v12 = v7;
    v10(ObjectType, v8);

    uint64_t v6 = *(void **)&v2[v5];
    if (!v6) {
      goto LABEL_18;
    }
  }
  if ((*(uint64_t (**)(void))((swift_isaMask & *v6) + 0x128))())
  {
    os_log_type_t v13 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v13, 2uLL, 0xD000000000000032, 0x80000001000FB590, 0xD000000000000024, 0x80000001000FB6B0);
    [self cancelPreviousPerformRequestsWithTarget:v2 selector:"autodismiss" object:0];
    long long v14 = "performSelector:withObject:afterDelay:";
    double v15 = 0.0;
    uint64_t v16 = v2;
    uint64_t v17 = "autodismiss";
    uint64_t v18 = 0;
LABEL_10:
    [v16 v14:v17, v18, v15];
    return;
  }
  _StringGuts.grow(_:)(75);
  v21._countAndFlagsBits = 0xD000000000000040;
  v21._object = (void *)0x80000001000FB660;
  String.append(_:)(v21);
  Double.write<A>(to:)();
  v22._countAndFlagsBits = 0x73646E6F63657320;
  v22._object = (void *)0xE90000000000002ELL;
  String.append(_:)(v22);
  os_log_type_t v23 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v23, 2uLL, 0xD000000000000032, 0x80000001000FB590, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  [self cancelPreviousPerformRequestsWithTarget:v2 selector:"autodismiss" object:0];
  [v2 performSelector:"autodismiss" withObject:0 afterDelay:6.0];
}

id sub_100085988(id result, char a2)
{
  if (a2)
  {
    uint64_t v3 = result;
    id v4 = [result minimumAutoDismissalTimeInMs];
    if (v4)
    {
      uint64_t v5 = v4;
      double v6 = (double)(uint64_t)[v4 integerValue] / 1000.0;
      _StringGuts.grow(_:)(51);
      v7._countAndFlagsBits = 0xD000000000000029;
      v7._object = (void *)0x80000001000FB4D0;
      String.append(_:)(v7);
      Double.write<A>(to:)();
      v8._countAndFlagsBits = 0x73646E6F63657320;
      v8._object = (void *)0xE800000000000000;
      String.append(_:)(v8);
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_10007DCA0(v9, (uint64_t)qword_100171AB0);
      os_log_type_t v10 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v10, 2uLL, 0xD000000000000016, 0x80000001000FB4B0, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();

      *(double *)(v2 + OBJC_IVAR___SRCarPlayPresentation_delayDismissalTimeInSec) = v6;
    }
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    unsigned int v11 = [v3 premptivelyResumeMedia];
    BOOL v12 = v11 == 0;
    if (v11) {
      uint64_t v13 = 1702195828;
    }
    else {
      uint64_t v13 = 0x65736C6166;
    }
    if (v12) {
      unint64_t v14 = 0xE500000000000000;
    }
    else {
      unint64_t v14 = 0xE400000000000000;
    }
    unint64_t v15 = v14;
    String.append(_:)(*(Swift::String *)&v13);
    swift_bridgeObjectRelease();
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_10007DCA0(v16, (uint64_t)qword_100171AB0);
    os_log_type_t v17 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v17, 2uLL, 0xD000000000000016, 0x80000001000FB4B0, 0xD000000000000019, 0x80000001000FB490);
    swift_bridgeObjectRelease();
    id result = [v3 premptivelyResumeMedia];
    *(unsigned char *)(v2 + OBJC_IVAR___SRCarPlayPresentation_shouldResumeMediaOnIdle) = (_BYTE)result;
  }
  return result;
}

void sub_100085CCC(void (*a1)(void))
{
  uint64_t v2 = *(char **)(v1 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (v2)
  {
    id v4 = *(void **)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
    if (v4)
    {
      uint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
      uint64_t ObjectType = swift_getObjectType();
      Swift::String v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
      Swift::String v8 = v2;
      id v9 = v4;
      v7(ObjectType, v5);
    }
    if (a1)
    {
      a1();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100085E44(uint64_t a1)
{
  uint64_t v2 = *(char **)(v1 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (v2)
  {
    if (*(void *)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController]) {
      BOOL v3 = a1 == 13;
    }
    else {
      BOOL v3 = 1;
    }
    if (!v3)
    {
      uint64_t v4 = qword_100170448;
      uint64_t v5 = v2;
      Swift::String v8 = v5;
      if (v4 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10007DCA0(v6, (uint64_t)qword_100171AB0);
      os_log_type_t v7 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v7, 0x10uLL, 0xD000000000000030, 0x80000001000FB410, 0xD00000000000003ALL, 0x80000001000FB450);
      sub_1000A002C(0, 0, 0);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100085FB8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = *(unsigned char **)(v2 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (v3)
  {
    v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking] = 1;
    uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
    if (v4)
    {
      uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
      uint64_t ObjectType = swift_getObjectType();
      id v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 48);
      os_log_type_t v10 = v3;
      id v11 = v4;
      v9(a1, a2, ObjectType, v7);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100086180(void *a1)
{
  if (a1)
  {
    uint64_t v2 = v1;
    [self checkAndEmitSignalsForRequestOptions:a1];
    if ([a1 requestSource] == (id)14 || objc_msgSend(a1, "requestSource") == (id)13)
    {
      Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v5 = Strong;
        if ([Strong respondsToSelector:"siriPresentation:didPresentIntentWithBundleId:"])
        {
          NSString v6 = [a1 appBundleIdentifier];
          if (v6)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            NSString v6 = String._bridgeToObjectiveC()();
          }
          [v5 siriPresentation:v2 didPresentIntentWithBundleId:v6];
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    uint64_t v7 = *(void **)(v2 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
    if (v7)
    {
      id v8 = v7;
      sub_10009F1BC(a1);

      *(unsigned char *)(v2 + OBJC_IVAR___SRCarPlayPresentation_shouldResumeMediaOnIdle) = 0;
      *(void *)(v2 + OBJC_IVAR___SRCarPlayPresentation_delayDismissalTimeInSec) = 0;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10008636C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = *(char **)(v2 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!a2)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  if (v5)
  {
    uint64_t v7 = *(void *)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
    uint64_t ObjectType = swift_getObjectType();
    id v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    os_log_type_t v10 = v3;
    id v11 = v5;
    v9(a1, a2, ObjectType, v7);
  }
}

uint64_t sub_100086488(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  if (a3)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = a1;
  a4(v6, v8);

  return swift_bridgeObjectRelease();
}

id sub_100086638(uint64_t a1, uint64_t a2)
{
  BOOL v3 = v2;
  uint64_t v6 = self;
  id result = [v6 isJarvis];
  if (result)
  {
    id result = [v6 flexibleFollowupEnabled];
    if (result)
    {
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000012;
      unint64_t v9 = 0x80000001000FB3F0;
      switch(a2)
      {
        case 0:
          break;
        case 1:
          unint64_t v8 = 0xD000000000000014;
          os_log_type_t v10 = "SpeechRecordingBegan";
          goto LABEL_24;
        case 2:
          unint64_t v8 = 0xD000000000000014;
          os_log_type_t v10 = "SpeechRecordingEnded";
          goto LABEL_24;
        case 3:
          unint64_t v8 = 0xD000000000000018;
          os_log_type_t v10 = "SpeechRecordingCancelled";
          goto LABEL_24;
        case 4:
          unint64_t v8 = 0xD000000000000015;
          os_log_type_t v10 = "SpeechRecordingFailed";
          goto LABEL_24;
        case 5:
          unint64_t v8 = 0xD000000000000010;
          os_log_type_t v10 = "RequestCancelled";
          goto LABEL_24;
        case 6:
          unint64_t v9 = 0xEF64656873696E69;
          goto LABEL_14;
        case 7:
          unint64_t v9 = 0xED000064656C6961;
LABEL_14:
          unint64_t v8 = 0x4674736575716552;
          break;
        case 8:
          unint64_t v9 = 0xEE00646574726174;
          unint64_t v8 = 0x53646E616D6D6F43;
          break;
        case 9:
          uint64_t v13 = 0x6E6167654267;
          goto LABEL_18;
        case 10:
          uint64_t v13 = 0x6465646E4567;
LABEL_18:
          unint64_t v9 = v13 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          unint64_t v8 = 0x6E69646E65747441;
          break;
        case 11:
          unint64_t v9 = 0xEE00646574636574;
          unint64_t v8 = 0x6544686365657053;
          break;
        case 12:
          unint64_t v8 = 0xD00000000000001ALL;
          os_log_type_t v10 = "SiriDirectedSpeechDetected";
          goto LABEL_24;
        case 13:
          unint64_t v9 = 0xEF64657461676974;
          unint64_t v8 = 0x694D686365657053;
          break;
        case 14:
          unint64_t v8 = 0xD000000000000011;
          os_log_type_t v10 = "ZeroLatencyLaunch";
          goto LABEL_24;
        case 15:
          unint64_t v8 = 0xD00000000000001ALL;
          os_log_type_t v10 = "SpeechEndDelayTimeoutFired";
LABEL_24:
          unint64_t v9 = (unint64_t)(v10 - 32) | 0x8000000000000000;
          break;
        default:
          if (qword_100170448 != -1) {
            swift_once();
          }
          uint64_t v11 = type metadata accessor for Logger();
          sub_10007DCA0(v11, (uint64_t)qword_100171AB0);
          os_log_type_t v12 = static os_log_type_t.info.getter();
          sub_1000B2FEC(v12, 0, 0x7470697263736564, 0xEB000000006E6F69, 0xD000000000000017, 0x80000001000FB250);
          unint64_t v9 = 0x80000001000FB270;
          unint64_t v8 = 0xD00000000000001ELL;
          break;
      }
      unint64_t v14 = v9;
      String.append(_:)(*(Swift::String *)&v8);
      swift_bridgeObjectRelease();
      unint64_t v15 = 0xE800000000000000;
      v16._countAndFlagsBits = 0x206574617473203BLL;
      v16._object = (void *)0xE800000000000000;
      String.append(_:)(v16);
      uint64_t v17 = 0x676E696B6E696854;
      switch(a1)
      {
        case 0:
          unint64_t v15 = 0xE400000000000000;
          uint64_t v17 = 1701602377;
          break;
        case 1:
          uint64_t v20 = 0x6E657473694CLL;
          goto LABEL_33;
        case 2:
          break;
        case 3:
          unint64_t v15 = 0xE700000000000000;
          uint64_t v17 = 0x73736563637553;
          break;
        case 4:
          uint64_t v20 = 0x646E65747441;
LABEL_33:
          uint64_t v17 = v20 & 0xFFFFFFFFFFFFLL | 0x6E69000000000000;
          unint64_t v15 = 0xE900000000000067;
          break;
        case 5:
          uint64_t v17 = 0xD000000000000010;
          unint64_t v15 = 0x80000001000FB1D0;
          break;
        default:
          if (qword_100170448 != -1) {
            swift_once();
          }
          uint64_t v18 = type metadata accessor for Logger();
          sub_10007DCA0(v18, (uint64_t)qword_100171AB0);
          os_log_type_t v19 = static os_log_type_t.info.getter();
          sub_1000B2FEC(v19, 0, 0x7470697263736564, 0xEB000000006E6F69, 0xD000000000000017, 0x80000001000FB160);
          unint64_t v15 = 0x80000001000FB180;
          uint64_t v17 = 0xD00000000000001ELL;
          break;
      }
      unint64_t v21 = v15;
      String.append(_:)(*(Swift::String *)&v17);
      swift_bridgeObjectRelease();
      v22._countAndFlagsBits = 540945696;
      v22._object = (void *)0xE400000000000000;
      String.append(_:)(v22);
      Strong = (void *)swift_unknownObjectWeakLoadStrong();
      Swift::String v24 = Strong;
      if (Strong)
      {
        id v25 = [Strong siriStateForSiriPresentation:v3];
        swift_unknownObjectRelease();
      }
      else
      {
        id v25 = 0;
      }
      LOBYTE(v31) = v24 == 0;
      sub_10007D3B4((uint64_t *)&unk_100170FC0);
      v26._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_10007DCA0(v27, (uint64_t)qword_100171AB0);
      os_log_type_t v28 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v28, 0x20000uLL, 0xD00000000000001ELL, 0x80000001000FB290, 0x20746E657665, 0xE600000000000000);
      id result = (id)swift_bridgeObjectRelease();
      if (a2 == 13)
      {
        os_log_type_t v30 = static os_log_type_t.info.getter();
        sub_1000B2FEC(v30, 0x20000uLL, 0xD00000000000001ELL, 0x80000001000FB290, 0xD000000000000031, 0x80000001000FB2B0);
        return [v3 handleRequestToCeaseAttending:v25, v31];
      }
      else if (a2 == 12 || a2 == 11)
      {
        os_log_type_t v29 = static os_log_type_t.info.getter();
        sub_1000B2FEC(v29, 0x20002uLL, 0xD000000000000027, 0x80000001000FAEC0, 0xD000000000000031, 0x80000001000FAEF0);
        return [self cancelPreviousPerformRequestsWithTarget:v3 selector:"handleRequestToCeaseAttending" object:0 v25, v31];
      }
    }
  }
  return result;
}

void sub_100086D40()
{
  uint64_t v1 = v0;
  double v2 = *(double *)&v0[OBJC_IVAR___SRCarPlayPresentation_delayDismissalTimeInSec];
  if (v2 <= 0.0)
  {
    BOOL v3 = *(void **)&v0[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
    if (!v3)
    {
      __break(1u);
      return;
    }
    char v4 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x128))();
    uint64_t v5 = (double *)&qword_1000DC5C0;
    if (v4) {
      uint64_t v5 = (double *)&unk_1000DC5C8;
    }
    double v2 = *v5;
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10007DCA0(v6, (uint64_t)qword_100171AB0);
  os_log_type_t v7 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v7, 0x20002uLL, 0xD000000000000027, 0x80000001000FAEC0, 0xD000000000000031, 0x80000001000FAEF0);
  [self cancelPreviousPerformRequestsWithTarget:v1 selector:"handleRequestToCeaseAttending" object:0];
  _StringGuts.grow(_:)(52);
  v8._countAndFlagsBits = 0xD000000000000029;
  v8._object = (void *)0x80000001000FAF60;
  String.append(_:)(v8);
  Double.write<A>(to:)();
  v9._countAndFlagsBits = 0x73646E6F63657320;
  v9._object = (void *)0xE90000000000002ELL;
  String.append(_:)(v9);
  os_log_type_t v10 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v10, 2uLL, 0xD000000000000028, 0x80000001000FAF30, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  [v1 performSelector:"handleRequestToCeaseAttending" withObject:0 afterDelay:v2];
}

void sub_100086F80()
{
  if (v0[OBJC_IVAR___SRCarPlayPresentation_siriIsIdleAndQuiet])
  {
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10007DCA0(v6, (uint64_t)qword_100171AB0);
    os_log_type_t v7 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v7, 2uLL, 0xD00000000000001FLL, 0x80000001000FB0D0, 0xD000000000000054, 0x80000001000FB1F0);
    goto LABEL_21;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v2 = (unint64_t)[Strong siriStateForSiriPresentation:v0];
    swift_unknownObjectRelease();
    if ((v2 & 0xFFFFFFFFFFFFFFFELL) == 4)
    {
      _StringGuts.grow(_:)(74);
      v3._countAndFlagsBits = 0xD000000000000022;
      v3._object = (void *)0x80000001000FB130;
      String.append(_:)(v3);
      if (v2 == 4)
      {
        unint64_t v10 = 0xE900000000000067;
        unint64_t v4 = 0x6E69646E65747441;
      }
      else
      {
        if (v2 == 5)
        {
          unint64_t v4 = 0xD000000000000010;
          uint64_t v5 = "IdleAndAttending";
        }
        else
        {
          if (qword_100170448 != -1) {
            swift_once();
          }
          uint64_t v11 = type metadata accessor for Logger();
          sub_10007DCA0(v11, (uint64_t)qword_100171AB0);
          os_log_type_t v12 = static os_log_type_t.info.getter();
          sub_1000B2FEC(v12, 0, 0x7470697263736564, 0xEB000000006E6F69, 0xD000000000000017, 0x80000001000FB160);
          unint64_t v4 = 0xD00000000000001ELL;
          uint64_t v5 = "<Unrecognized SiriUISiriState>";
        }
        unint64_t v10 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      }
      unint64_t v13 = v10;
      String.append(_:)(*(Swift::String *)&v4);
      swift_bridgeObjectRelease();
      v14._countAndFlagsBits = 0xD000000000000026;
      v14._object = (void *)0x80000001000FB1A0;
      String.append(_:)(v14);
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_10007DCA0(v15, (uint64_t)qword_100171AB0);
      os_log_type_t v16 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v16, 2uLL, 0xD00000000000001FLL, 0x80000001000FB0D0, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();
LABEL_21:
      [self cancelPreviousPerformRequestsWithTarget:v0 selector:"autodismiss" object:0];
      [v0 performSelector:"autodismiss" withObject:0 afterDelay:0.0];
      return;
    }
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10007DCA0(v8, (uint64_t)qword_100171AB0);
  os_log_type_t v9 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v9, 0x20002uLL, 0xD00000000000001FLL, 0x80000001000FB0D0, 0xD000000000000031, 0x80000001000FB0F0);
}

void sub_100087384(void *a1)
{
  uint64_t v2 = v1;
  id v3 = [a1 description];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_10007DCA0(v7, (uint64_t)qword_100171AB0);
  os_log_type_t v8 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v8, 0x10uLL, 0x72756769666E6F63, 0xEF293A726F662865, v4, v6);
  swift_bridgeObjectRelease();
  os_log_type_t v9 = self;
  [v9 availabilityState];
  id v10 = [v9 availabilityState];
  char v11 = [self isSAEEnabled];
  char v12 = _s4Siri36GenerativeModelsCompatabilityWrapperC21siriGMAssetsAvailableSbyFZ_0();
  char v13 = AFDeviceSupportsDisablingServerFallbackWhenMissingAsset();
  if (sub_100088798((uint64_t)v10, v11, v12 & 1, v13))
  {
    os_log_type_t v14 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v14, 0x10uLL, 0x72756769666E6F63, 0xEF293A726F662865, 0xD00000000000003DLL, 0x80000001000FAF90);
    uint64_t v15 = *(void **)(v2 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
    if (v15)
    {
      os_log_type_t v16 = *(void (**)(void))((swift_isaMask & *v15) + 0x118);
      uint64_t v17 = v15;
      v16();

      Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong siriPresentation:v2 setStatusViewHidden:1];
        swift_unknownObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
}

void *sub_100087628()
{
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result siriPresentationDidPresentUserInterface:v0];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_10008768C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008772C(a1, a2, a3, (SEL *)&selRef_siriPresentationDidRequestCancelSpeechSynthesis_);
}

void *sub_10008769C(uint64_t a1, uint64_t a2)
{
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result dismissSiriPresentation:v2 withReason:a2];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100087714(uint64_t a1, uint64_t a2)
{
  return sub_1000886FC(a2);
}

void *sub_100087720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10008772C(a1, a2, a3, (SEL *)&selRef_siriPresentationDidRequestRestartSpeechSynthesis_);
}

void *sub_10008772C(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    if ([result respondsToSelector:*a4]) {
      [v7 *a4:v4];
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_1000877B8()
{
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result siriPresentation:v0 setStatusViewHidden:0];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void *sub_100087820(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * i);
      os_log_type_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return (void *)swift_bridgeObjectRelease();
      }

      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return (void *)v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1000879C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100087B8C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000879E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100087DCC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100087A00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100087F70(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100087A20(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007D3B4(&qword_100171028);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)_swiftEmptyArrayStorage;
  }
  id v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100087B8C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10007D3B4(&qword_100171020);
  uint64_t v10 = *(void *)(type metadata accessor for SimpleItemStandard() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  id v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for SimpleItemStandard() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  os_log_type_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  unint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100087DCC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007D3B4(&qword_100171010);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_10007D3B4(&qword_100171018);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100087F70(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007D3B4(&qword_100170FD0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1000880E0(void *a1)
{
  uint64_t v2 = type metadata accessor for Response();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v39 = &type metadata for DefaultDisambiguationItemConverter;
  uint64_t v40 = &off_100145488;
  id result = [a1 items];
  if (result)
  {
    int64_t v7 = result;
    sub_100088F64();
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    __chkstk_darwin(v9);
    v35[-2] = v38;
    uint64_t v10 = 0;
    int64_t v11 = sub_100087820((void (*)(uint64_t *__return_ptr, id *))sub_100088FA4, (uint64_t)&v35[-4], v8);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1000996A0((unint64_t)v11);
    swift_bridgeObjectRelease();
    if (v12[2])
    {
      id v13 = [objc_allocWithZone((Class)SAUIVisualResponseSnippet) init];
      id v14 = [a1 aceId];
      if (v14)
      {
        uint64_t v15 = v14;
        static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v19 = type metadata accessor for UUID();
        v35[1] = v35;
        uint64_t v36 = 0;
        uint64_t v20 = *(void *)(v19 - 8);
        __chkstk_darwin(v19);
        uint64_t v37 = v5;
        uint64_t v22 = v2;
        uint64_t v23 = v3;
        Swift::String v24 = (char *)v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
        UUID.init()();
        UUID.uuidString.getter();
        id v25 = v24;
        uint64_t v3 = v23;
        uint64_t v2 = v22;
        uint64_t v5 = v37;
        (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
        uint64_t v10 = v36;
      }
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v13 setAceId:v26];

      id v27 = v13;
      id v28 = [a1 refId];
      [v27 setRefId:v28];

      id v18 = v27;
      NSString v29 = String._bridgeToObjectiveC()();
      [v18 setViewId:v29];

      sub_100084D08((uint64_t)v12);
      swift_bridgeObjectRelease();
      Response.init(_:backgrounds:ornaments:hideRedactedElements:)();
      sub_100088FC0();
      uint64_t v30 = ProtobufBuilder.serializedData()();
      if (v10)
      {
        swift_errorRelease();
        Class isa = 0;
      }
      else
      {
        uint64_t v33 = v30;
        unint64_t v34 = v31;
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        sub_100088E54(v33, v34);
      }
      [v18 setModelData:isa];

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10007DCA0(v16, (uint64_t)qword_100171AB0);
      os_log_type_t v17 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v17, 0x10uLL, 0xD00000000000001BLL, 0x80000001000FBD40, 0xD000000000000034, 0x80000001000FBD60);
      id v18 = [objc_allocWithZone((Class)SAUIVisualResponseSnippet) init];
    }
    sub_100088F14((uint64_t)v38);
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000885AC()
{
  if (v0[OBJC_IVAR___SRCarPlayPresentation_siriIsIdleAndQuiet])
  {
    uint64_t v1 = v0;
    uint64_t v2 = self;
    if ([v2 isJarvis] && objc_msgSend(v2, "flexibleFollowupEnabled"))
    {
      sub_100086D40();
    }
    else
    {
      uint64_t v3 = *(void **)&v1[OBJC_IVAR___SRCarPlayPresentation_carPlayViewController];
      if (v3)
      {
        if (((*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x128))() & 1) == 0)
        {
          [self cancelPreviousPerformRequestsWithTarget:v1 selector:"autodismiss" object:0];
          [v1 performSelector:"autodismiss" withObject:0 afterDelay:6.0];
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t sub_1000886FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v5 siriPresentation:v2 performAceCommand:a1 conversationItemIdentifier:0 turnIdentifier:isa completion:0];

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100088798(uint64_t a1, char a2, char a3, char a4)
{
  _StringGuts.grow(_:)(68);
  v8._countAndFlagsBits = 0xD000000000000015;
  v8._object = (void *)0x80000001000FAFD0;
  String.append(_:)(v8);
  unint64_t v9 = 0xE900000000000065;
  unint64_t v10 = 0x6C62616C69617661;
  switch(a1)
  {
    case 0:
      break;
    case 1:
      unint64_t v9 = 0xE90000000000006BLL;
      unint64_t v10 = 0x726F7774654E6F6ELL;
      break;
    case 2:
      unint64_t v10 = 0xD000000000000014;
      unint64_t v9 = 0x80000001000FB0B0;
      break;
    case 3:
      unint64_t v9 = 0xE800000000000000;
      unint64_t v10 = 0x7374657373416F6ELL;
      break;
    default:
      unint64_t v9 = 0xE700000000000000;
      unint64_t v10 = 0x6E776F6E6B6E75;
      break;
  }
  unint64_t v11 = v9;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x80000001000FAFF0;
  v12._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v12);
  if (a2) {
    uint64_t v13 = 1702195828;
  }
  else {
    uint64_t v13 = 0x65736C6166;
  }
  if (a2) {
    unint64_t v14 = 0xE400000000000000;
  }
  else {
    unint64_t v14 = 0xE500000000000000;
  }
  unint64_t v15 = v14;
  String.append(_:)(*(Swift::String *)&v13);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0xD000000000000019;
  v16._object = (void *)0x80000001000FB010;
  String.append(_:)(v16);
  if (a3) {
    uint64_t v17 = 1702195828;
  }
  else {
    uint64_t v17 = 0x65736C6166;
  }
  if (a3) {
    unint64_t v18 = 0xE400000000000000;
  }
  else {
    unint64_t v18 = 0xE500000000000000;
  }
  unint64_t v19 = v18;
  String.append(_:)(*(Swift::String *)&v17);
  swift_bridgeObjectRelease();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_10007DCA0(v20, (uint64_t)qword_100171AB0);
  os_log_type_t v21 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v21, 0x10uLL, 0xD00000000000007FLL, 0x80000001000FB030, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  char v22 = a1 != 0;
  if (!a1 && (a4 & 1) != 0) {
    char v22 = a2 & (a3 ^ 1);
  }
  return v22 & 1;
}

void *sub_100088A30(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v4 = a1;
    id v5 = [v3 sash];
    unint64_t v6 = v5;
    if (v5) {
      goto LABEL_6;
    }
LABEL_8:

    return v6;
  }
  self;
  unint64_t v6 = (void *)swift_dynamicCastObjCClass();
  if (!v6) {
    return v6;
  }
  id v4 = a1;
  id v5 = [v6 sash];
  unint64_t v6 = v5;
  if (!v5) {
    goto LABEL_8;
  }
LABEL_6:
  id v7 = [v5 applicationBundleIdentifier];

  if (v7)
  {
    unint64_t v6 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {

    return 0;
  }
  return v6;
}

uint64_t sub_100088B5C(uint64_t result)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___SRCarPlayPresentation_carPlayViewController);
  if (!v2)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v3 = v1;
  uint64_t v4 = result;
  id v5 = v2;
  sub_1000A2264(v4);

  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  unint64_t v6 = (void *)result;
  uint64_t v7 = sub_10007D3B4((uint64_t *)&unk_1001716F0);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100088D9C(v4, (uint64_t)v9);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (result == 1)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v12 = URL.scheme.getter();
  if (v13)
  {
    if (v12 == 0x6D65746970616DLL && v13 == 0xE700000000000000) {
      char v15 = 1;
    }
    else {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = 0;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  [v6 siriPresentation:v3 requestsTouchPassThroughEnabled:v15 & 1];
  return swift_unknownObjectRelease();
}

uint64_t sub_100088D3C(uint64_t a1)
{
  uint64_t v2 = sub_10007D3B4((uint64_t *)&unk_1001716F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100088D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007D3B4((uint64_t *)&unk_1001716F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100088E04(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100088E14()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100088E4C()
{
  return sub_1000A8D78(*(void *)(v0 + 16));
}

uint64_t sub_100088E54(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

_OWORD *sub_100088EAC(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_100088EC0()
{
  unint64_t result = qword_100170FF0;
  if (!qword_100170FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100170FF0);
  }
  return result;
}

uint64_t sub_100088F14(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_100088F64()
{
  unint64_t result = qword_100171000;
  if (!qword_100171000)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100171000);
  }
  return result;
}

void sub_100088FA4(uint64_t *a1@<X0>, void *a2@<X8>)
{
}

unint64_t sub_100088FC0()
{
  unint64_t result = qword_100171008;
  if (!qword_100171008)
  {
    type metadata accessor for Response();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171008);
  }
  return result;
}

uint64_t *sub_100089018(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_10008907C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t SiriUISiriState.description.getter()
{
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10007DCA0(v0, (uint64_t)qword_100171AB0);
  os_log_type_t v1 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v1, 0, 0x7470697263736564, 0xEB000000006E6F69, 0xD000000000000017, 0x80000001000FB160);
  return 0xD00000000000001ELL;
}

unint64_t sub_10008921C()
{
  return SiriUISiriState.description.getter();
}

unint64_t SiriUISiriEvent.description.getter(uint64_t a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
    case 7:
      unint64_t result = 0x4674736575716552;
      break;
    case 8:
      unint64_t result = 0x53646E616D6D6F43;
      break;
    case 9:
    case 10:
      unint64_t result = 0x6E69646E65747441;
      break;
    case 11:
      unint64_t result = 0x6544686365657053;
      break;
    case 12:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 13:
      unint64_t result = 0x694D686365657053;
      break;
    case 14:
      unint64_t result = 0xD000000000000011;
      break;
    case 15:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_10007DCA0(v3, (uint64_t)qword_100171AB0);
      os_log_type_t v4 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v4, 0, 0x7470697263736564, 0xEB000000006E6F69, 0xD000000000000017, 0x80000001000FB250);
      unint64_t result = 0xD00000000000001ELL;
      break;
  }
  return result;
}

unint64_t sub_1000894C0()
{
  return SiriUISiriEvent.description.getter(*v0);
}

void sub_1000894C8()
{
  qword_100172CB8 = (uint64_t)&off_100144C70;
}

void sub_1000894DC()
{
  qword_100172CC0 = (uint64_t)&off_100144CE0;
}

void sub_1000894F0()
{
  qword_100172CC8 = (uint64_t)&off_100144D10;
}

uint64_t sub_100089504()
{
  if (qword_1001703F8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_100172CB8;
  if (qword_100170400 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_10008C308(v1);
  if (qword_100170408 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_10008C308(v2);
  uint64_t result = swift_bridgeObjectRelease();
  qword_100172CD0 = v0;
  return result;
}

uint64_t sub_100089628()
{
  if (qword_100170400 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_100172CC0;
  if (qword_1001703F8 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t result = sub_10008C308(v1);
  qword_100172CD8 = v0;
  return result;
}

void sub_1000896EC()
{
  qword_100172CE0 = (uint64_t)&off_100144D40;
}

id SiriSystemUIController.__deallocating_deinit()
{
  sub_10008B2FC();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriSystemUIController();
  [super dealloc];
}

void sub_100089864(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  LOBYTE(v6) = a4;
  uint64_t v8 = OBJC_IVAR___SRSiriSystemUIController_lockState;
  *(void *)(v4 + OBJC_IVAR___SRSiriSystemUIController_lockState) = a3;
  uint64_t v9 = OBJC_IVAR___SRSiriSystemUIController_viewMode;
  *(void *)(v5 + OBJC_IVAR___SRSiriSystemUIController_viewMode) = a2;
  *(unsigned char *)(v5 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) = 0;
  uint64_t v10 = (uint64_t *)(v5 + OBJC_IVAR___SRSiriSystemUIController_domainResponseId);
  *uint64_t v10 = 0;
  v10[1] = 0xE000000000000000;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v5 + OBJC_IVAR___SRSiriSystemUIController_isInAmbient) = (_BYTE)v6;
  if (*(unsigned char *)(v5 + OBJC_IVAR___SRSiriSystemUIController_systemUIDevice) != 1 || *(void *)(v5 + v9) != 7) {
    return;
  }
  uint64_t v73 = v8;
  uint64_t v74 = v9;
  uint64_t v11 = &selRef_startRequestForText_;
  id v75 = a1;
  id v12 = [a1 views];
  if (v12)
  {
    sub_10007DCD8(0, (unint64_t *)&qword_100171440);
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v13 >> 62) {
      goto LABEL_19;
    }
    id v12 = *(id *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v12; id v12 = (id)_CocoaArrayWrapper.endIndex.getter())
    {
      char v69 = (char)v6;
      uint64_t v14 = 4;
      while (1)
      {
        uint64_t v11 = (char **)(v14 - 4);
        id v15 = (v13 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v13 + 8 * v14);
        unint64_t v6 = v15;
        id v16 = (id)(v14 - 3);
        if (__OFADD__(v11, 1)) {
          break;
        }
        id v17 = [v15 correspondingSessionID];
        if (v17)
        {
          unint64_t v18 = v17;
          swift_bridgeObjectRelease_n();

          id v19 = [v6 correspondingSessionID];
          if (v19)
          {
            uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v12 = v21;
          }
          else
          {
LABEL_16:
            uint64_t v20 = 0;
            id v12 = 0;
          }
          LOBYTE(v6) = v69;
          uint64_t v11 = &selRef_startRequestForText_;
          goto LABEL_22;
        }

        ++v14;
        if (v16 == v12)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
  }
  uint64_t v20 = 0;
LABEL_22:
  char v22 = (uint64_t *)(v5 + OBJC_IVAR___SRSiriSystemUIController_activityId);
  *char v22 = v20;
  v22[1] = (uint64_t)v12;
  uint64_t v71 = v22;
  swift_bridgeObjectRelease();
  id v23 = [v75 patternId];
  if (v23)
  {
    char v24 = (char)v6;

    id v25 = [v75 patternId];
    if (v25)
    {
      NSString v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v6 = v28;

      *uint64_t v10 = v27;
      v10[1] = (uint64_t)v6;
      LOBYTE(v6) = v24;
      goto LABEL_25;
    }
    __break(1u);
    goto LABEL_83;
  }
  id v44 = [v75 v11[239]];
  if (v44)
  {
    uint64_t v45 = v44;
    sub_10007DCD8(0, (unint64_t *)&qword_100171440);
    unint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v46 >> 62))
    {
      uint64_t v47 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v47) {
        goto LABEL_25;
      }
      goto LABEL_52;
    }
    swift_bridgeObjectRetain();
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v47)
    {
LABEL_52:
      uint64_t v68 = v10;
      char v70 = (char)v6;
      if (v47 >= 1)
      {
        uint64_t v48 = v47;
        uint64_t v49 = 0;
        uint64_t v72 = v47;
        while (1)
        {
          if ((v46 & 0xC000000000000001) != 0) {
            id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v50 = *(id *)(v46 + 8 * v49 + 32);
          }
          id v51 = v50;
          self;
          uint64_t v52 = swift_dynamicCastObjCClass();
          if (v52)
          {
            unint64_t v53 = (void *)v52;
            id v51 = v51;
            id v54 = [v53 responseViewId];
            uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v57 = v56;

            swift_bridgeObjectRelease();
            uint64_t v58 = HIBYTE(v57) & 0xF;
            if ((v57 & 0x2000000000000000) == 0) {
              uint64_t v58 = v55 & 0xFFFFFFFFFFFFLL;
            }
            if (v58)
            {
              id v59 = [v53 responseViewId];
              uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v62 = v61;

              if (v60 == 0xD000000000000015 && v62 == 0x80000001000FC4C0)
              {

                swift_bridgeObjectRelease();
              }
              else
              {
                char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v63)
                {
                }
                else
                {
                  id v64 = [v53 responseViewId];
                  uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  uint64_t v67 = v66;

                  *uint64_t v68 = v65;
                  v68[1] = v67;

                  swift_bridgeObjectRelease();
                }
              }
              uint64_t v48 = v72;
              goto LABEL_56;
            }
          }
LABEL_56:
          if (v48 == ++v49)
          {
            LOBYTE(v6) = v70;
            uint64_t v10 = v68;
            goto LABEL_25;
          }
        }
      }
      __break(1u);
      goto LABEL_81;
    }
LABEL_25:
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = v74;
  uint64_t v30 = v75;
  if (!*(void *)(v5 + v73)) {
    goto LABEL_30;
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_10007DCA0(v31, (uint64_t)qword_100171AB0);
  os_log_type_t v32 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v32, 0x40000000uLL, 0xD000000000000033, 0x80000001000FC3C0, 0xD00000000000005DLL, 0x80000001000FC400);
  sub_10008BFC4();
  if (v6)
  {
LABEL_30:
    NSString v33 = [v75 dialogPhase:v68];
    if (v33)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v33 = String._bridgeToObjectiveC()();
      uint64_t v29 = v74;
      uint64_t v30 = v75;
      swift_bridgeObjectRelease();
    }
    id v76 = [self dialogPhaseForAceDialogPhase:v33];

    if (v76 && ([v76 isTemporary] & 1) != 0
      || (char v34 = sub_10008C574(v30), v71[1])
      || (v34 & 1) != 0
      || *(void *)(v5 + v29) != 7)
    {
      if (qword_1001703F8 != -1) {
        swift_once();
      }
      char v38 = sub_10008A0A8(*v10, v10[1], (void *)qword_100172CB8);
      uint64_t v39 = OBJC_IVAR___SRSiriSystemUIController_currentActivitySupportsLandscape;
      *(unsigned char *)(v5 + OBJC_IVAR___SRSiriSystemUIController_currentActivitySupportsLandscape) = v38 & 1;
      if (*(unsigned char *)(v5 + OBJC_IVAR___SRSiriSystemUIController_systemApertureSupportedDevice) != 1) {
        goto LABEL_47;
      }
      if (!UIApp)
      {
LABEL_83:
        __break(1u);
        return;
      }
      if (sub_10008CFFC((uint64_t)[UIApp activeInterfaceOrientation])
        || (*(unsigned char *)(v5 + v39) & 1) != 0
        || (v6 & 1) != 0)
      {
        sub_10008B720();
        uint64_t v37 = v76;
      }
      else
      {
LABEL_47:
        uint64_t v40 = OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion;
        uint64_t v41 = *(void **)(v5 + OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion);
        if (v41)
        {
          id v42 = v41;
          dispatch thunk of ProminentPresentationAssertion.invalidate()();

          uint64_t v43 = *(void **)(v5 + v40);
        }
        else
        {
          uint64_t v43 = 0;
        }
        *(void *)(v5 + v40) = 0;

        uint64_t v37 = v43;
      }
      goto LABEL_75;
    }
    if (qword_100170448 == -1)
    {
LABEL_38:
      uint64_t v35 = type metadata accessor for Logger();
      sub_10007DCA0(v35, (uint64_t)qword_100171AB0);
      os_log_type_t v36 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v36, 0x40000000uLL, 0xD000000000000033, 0x80000001000FC3C0, 0xD000000000000052, 0x80000001000FC460);
      sub_10008B574();
      uint64_t v37 = v76;
LABEL_75:

      return;
    }
LABEL_81:
    swift_once();
    goto LABEL_38;
  }
}

uint64_t sub_10008A0A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  if (a3[4] == a1 && a3[5] == a2) {
    return 1;
  }
  uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
  if (result) {
    return 1;
  }
  if (v3 == 1) {
    return 0;
  }
  uint64_t v9 = a3 + 7;
  for (uint64_t i = 1; ; ++i)
  {
    uint64_t v11 = i + 1;
    if (__OFADD__(i, 1)) {
      break;
    }
    BOOL v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return 1;
    }
    uint64_t result = 0;
    v9 += 2;
    if (v11 == v3) {
      return result;
    }
  }
  __break(1u);
  return result;
}

unsigned char *sub_10008A1F8(void *a1, uint64_t a2, uint64_t a3)
{
  if (v3[OBJC_IVAR___SRSiriSystemUIController_systemUIDevice] == 1
    && *(void *)&v3[OBJC_IVAR___SRSiriSystemUIController_viewMode] == 7)
  {
    uint64_t v5 = &v3[OBJC_IVAR___SRSiriSystemUIController_activityId];
    if (*(void *)&v3[OBJC_IVAR___SRSiriSystemUIController_activityId + 8])
    {
      id v53 = a1;
      if (qword_100170410 != -1) {
        swift_once();
      }
      uint64_t v8 = (uint64_t *)&v3[OBJC_IVAR___SRSiriSystemUIController_domainResponseId];
      if ((sub_10008A0A8(*(void *)&v3[OBJC_IVAR___SRSiriSystemUIController_domainResponseId], *(void *)&v3[OBJC_IVAR___SRSiriSystemUIController_domainResponseId + 8], (void *)qword_100172CD0) & 1) == 0)
      {
        id v12 = [v53 views];
        if (v12)
        {
          unint64_t v13 = v12;
          sub_10007DCD8(0, (unint64_t *)&qword_100171440);
          unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          unint64_t v14 = 0;
        }
        unint64_t v56 = (unint64_t)_swiftEmptyArrayStorage;
        __int16 v55 = 0;
        v3[OBJC_IVAR___SRSiriSystemUIController_didHaveSpeakableText] = 0;
        unint64_t v15 = OBJC_IVAR___SRSiriSystemUIController_lockState;
        uint64_t v4 = &qword_100171000;
        uint64_t v35 = v53;
        if (!*(void *)&v3[OBJC_IVAR___SRSiriSystemUIController_lockState] || !*((void *)v5 + 1)) {
          goto LABEL_67;
        }
        if (!v14)
        {
LABEL_65:
          if ((v3[v4[26]] & 1) == 0 && (v55 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_90:
            uint64_t v35 = v53;
LABEL_91:
            id v52 = v35;
            swift_bridgeObjectRelease();
            return v52;
          }
LABEL_67:
          if (!v14)
          {
LABEL_79:
            if ((v3[OBJC_IVAR___SRSiriSystemUIController_systemApertureSupportedDevice] & 1) == 0
              && !*(void *)&v3[v15])
            {
              goto LABEL_91;
            }
            if (v3[v4[26]] != 1
              || !*(void *)&v3[v15]
              || (v3[OBJC_IVAR___SRSiriSystemUIController_isInAmbient] & 1) != 0)
            {
              if (HIBYTE(v55) != 1) {
                goto LABEL_91;
              }
              if (qword_100170448 == -1) {
                goto LABEL_86;
              }
              goto LABEL_93;
            }
            if (qword_100170448 == -1)
            {
LABEL_89:
              uint64_t v50 = type metadata accessor for Logger();
              sub_10007DCA0(v50, (uint64_t)qword_100171AB0);
              os_log_type_t v51 = static os_log_type_t.info.getter();
              sub_1000B2FEC(v51, 0, 0xD00000000000001FLL, 0x80000001000FC200, 0xD000000000000033, 0x80000001000FC240);
              goto LABEL_90;
            }
LABEL_95:
            swift_once();
            goto LABEL_89;
          }
          if (v14 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
            if (v43) {
              goto LABEL_70;
            }
          }
          else
          {
            uint64_t v43 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v43)
            {
LABEL_70:
              if (v43 < 1)
              {
                __break(1u);
LABEL_93:
                swift_once();
LABEL_86:
                uint64_t v47 = type metadata accessor for Logger();
                sub_10007DCA0(v47, (uint64_t)qword_100171AB0);
                os_log_type_t v48 = static os_log_type_t.info.getter();
                sub_1000B2FEC(v48, 0, 0xD00000000000001FLL, 0x80000001000FC200, 0xD000000000000015, 0x80000001000FC220);
                sub_10007DCD8(0, (unint64_t *)&qword_100171440);
                swift_bridgeObjectRetain();
                Class isa = Array._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v53 setViews:isa];

                goto LABEL_90;
              }
              uint64_t v44 = 0;
              do
              {
                if ((v14 & 0xC000000000000001) != 0) {
                  id v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v45 = *(id *)(v14 + 8 * v44 + 32);
                }
                unint64_t v46 = v45;
                ++v44;
                id v54 = v45;
                sub_10008AFD8(&v54, &v56, (uint64_t)v3, (unsigned char *)&v55 + 1);
              }
              while (v43 != v44);
            }
          }
          swift_bridgeObjectRelease_n();
          uint64_t v35 = v53;
          goto LABEL_79;
        }
        if (!(v14 >> 62))
        {
          uint64_t v36 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (!v36)
          {
LABEL_64:
            swift_bridgeObjectRelease_n();
            uint64_t v35 = v53;
            goto LABEL_65;
          }
LABEL_44:
          if (v36 < 1)
          {
            __break(1u);
            goto LABEL_95;
          }
          uint64_t v37 = 0;
          do
          {
            if ((v14 & 0xC000000000000001) != 0) {
              id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v38 = *(id *)(v14 + 8 * v37 + 32);
            }
            uint64_t v39 = v38;
            ++v37;
            id v54 = v38;
            sub_10008AC08(&v54, (uint64_t)v3, &v55, &v56, v53);
          }
          while (v36 != v37);
          goto LABEL_64;
        }
LABEL_63:
        swift_bridgeObjectRetain_n();
        uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
        if (!v36) {
          goto LABEL_64;
        }
        goto LABEL_44;
      }
      id v9 = [self transformVisualResponse:v53 forMode:a2 idiom:a3 shouldHideSnippet:1];
      if (qword_100170418 != -1) {
        swift_once();
      }
      BOOL v10 = (sub_10008A0A8(*v8, v8[1], (void *)qword_100172CD8) & 1) != 0
         && *(void *)&v3[OBJC_IVAR___SRSiriSystemUIController_lockState] != 0;
      if (qword_100170400 != -1) {
        swift_once();
      }
      unint64_t v15 = 0xD00000000000001FLL;
      if (((sub_10008A0A8(*v8, v8[1], (void *)qword_100172CC0) | v10) & 1) == 0) {
        goto LABEL_59;
      }
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10007DCA0(v16, (uint64_t)qword_100171AB0);
      os_log_type_t v17 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v17, 0x40000000uLL, 0xD00000000000001FLL, 0x80000001000FC200, 0xD000000000000032, 0x80000001000FC2B0);
      unint64_t v56 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t result = [v9 views];
      if (!result)
      {
        __break(1u);
        return result;
      }
      uint64_t v3 = result;
      unint64_t v14 = sub_10007DCD8(0, (unint64_t *)&qword_100171440);
      uint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((unint64_t)v18 >> 62)
      {
        if (v18 < 0) {
          uint64_t v3 = (unsigned char *)v18;
        }
        else {
          uint64_t v3 = (unsigned char *)(v18 & 0xFFFFFFFFFFFFFF8);
        }
        swift_bridgeObjectRetain();
        uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v19) {
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v19)
        {
LABEL_25:
          id v53 = v9;
          if (v19 >= 1)
          {
            for (uint64_t i = 0; i != v19; ++i)
            {
              if ((v18 & 0xC000000000000001) != 0) {
                id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v31 = *(id *)(v18 + 8 * i + 32);
              }
              os_log_type_t v32 = v31;
              self;
              uint64_t v33 = swift_dynamicCastObjCClass();
              if (v33)
              {
                os_log_type_t v21 = (void *)v33;
                id v22 = objc_allocWithZone((Class)SAUIAssistantUtteranceView);
                id v23 = v32;
                id v24 = [v22 init];
                id v25 = [v21 dialogIdentifier];
                [v24 setDialogIdentifier:v25];

                id v26 = v24;
                id v27 = [v21 aceId];
                [v26 setAceId:v27];

                id v28 = v26;
                id v29 = [v21 speakableText];
                [v28 setSpeakableText:v29];

                id v30 = v28;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              else
              {
                id v34 = v32;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
            }
            swift_bridgeObjectRelease();
            id v9 = v53;
            goto LABEL_58;
          }
          __break(1u);
          goto LABEL_63;
        }
      }
      swift_bridgeObjectRelease();
LABEL_58:
      Class v40 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v9 setViews:v40];

LABEL_59:
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v41 = type metadata accessor for Logger();
      sub_10007DCA0(v41, (uint64_t)qword_100171AB0);
      os_log_type_t v42 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v42, 0x40000000uLL, 0xD00000000000001FLL, 0x80000001000FC200, 0xD000000000000025, 0x80000001000FC280);
      return v9;
    }
  }

  return a1;
}

void sub_10008AC08(void **a1, uint64_t a2, unsigned char *a3, void *a4, void *a5)
{
  id v9 = *a1;
  self;
  uint64_t v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    id v12 = v9;
    if (sub_10008C758(v11))
    {
      if ((*(unsigned char *)(a2 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) & 1) == 0)
      {
        sub_10008C82C(v11);
        id v14 = v13;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        sub_10007DCD8(0, (unint64_t *)&qword_100171440);
        swift_bridgeObjectRetain();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [a5 setViews:isa];
      }
    }
    else if ((*(unsigned char *)(a2 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) & 1) == 0)
    {
      sub_10007DCD8(0, (unint64_t *)&qword_100171440);
      Class v24 = Array._bridgeToObjectiveC()().super.isa;
      [a5 setViews:v24];
    }
    return;
  }
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (!v16) {
    goto LABEL_21;
  }
  os_log_type_t v17 = (void *)v16;
  id v18 = v9;
  id v19 = [v17 viewId];
  if (v19)
  {
    uint64_t v20 = v19;
    id v30 = a5;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    if (v21 == 0xD000000000000015 && v23 == 0x80000001000FC2F0)
    {
      swift_bridgeObjectRelease();
      a5 = v30;
      goto LABEL_17;
    }
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    a5 = v30;
    if (v25)
    {
LABEL_17:
      if (*(void *)(a2 + OBJC_IVAR___SRSiriSystemUIController_lockState))
      {
        uint64_t v26 = OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity;
        *(unsigned char *)(a2 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) = 1;
        sub_10008BFC4();

        if (*(unsigned char *)(a2 + OBJC_IVAR___SRSiriSystemUIController_isInAmbient) == 1)
        {
          *a3 = 1;
          *(unsigned char *)(a2 + v26) = 0;
        }
        return;
      }
    }
  }

LABEL_21:
  if (sub_10008C758(v9))
  {
    if ((*(unsigned char *)(a2 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) & 1) == 0)
    {
      id v27 = v9;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      sub_10007DCD8(0, (unint64_t *)&qword_100171440);
      swift_bridgeObjectRetain();
      Class v28 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [a5 setViews:v28];

      *(unsigned char *)(a2 + OBJC_IVAR___SRSiriSystemUIController_didHaveSpeakableText) = 1;
    }
  }
  else if ((*(unsigned char *)(a2 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) & 1) == 0 {
         && (*(unsigned char *)(a2 + OBJC_IVAR___SRSiriSystemUIController_didHaveSpeakableText) & 1) == 0)
  }
  {
    sub_10007DCD8(0, (unint64_t *)&qword_100171440);
    Class v29 = Array._bridgeToObjectiveC()().super.isa;
    [a5 setViews:v29];
  }
}

void sub_10008AFD8(void **a1, void *a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v7 = *a1;
  self;
  uint64_t v8 = (void *)swift_dynamicCastObjCClass();
  id v9 = v7;
  if (v8)
  {
    id v10 = [v8 viewId];
    if (v10)
    {
      uint64_t v11 = v10;
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      if (v12 == 0xD000000000000010 && v14 == 0x80000001000FC310)
      {
        swift_bridgeObjectRelease();
LABEL_11:
        id v16 = v9;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        return;
      }
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_11;
      }
    }
    if (*(unsigned char *)(a3 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) == 1) {
      goto LABEL_11;
    }
    char v17 = sub_10008C758(v8);
    id v18 = sub_10008CA58(v8);
    if (v18) {
      goto LABEL_15;
    }
    if (v17)
    {
      if (*a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_21;
        }
      }
      else if (*(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_21;
      }
      sub_10008C82C(v8);
LABEL_15:
      id v19 = v18;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      id v9 = v19;
    }
LABEL_21:

    *a4 = 1;
    return;
  }
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
}

uint64_t sub_10008B2FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion);
  if (v3)
  {
    id v4 = v3;
    dispatch thunk of ProminentPresentationAssertion.invalidate()();

    uint64_t v3 = *(void **)(v1 + v2);
  }
  *(void *)(v1 + v2) = 0;

  uint64_t v5 = OBJC_IVAR___SRSiriSystemUIController_sessionListener;
  unint64_t v6 = *(void **)(v1 + OBJC_IVAR___SRSiriSystemUIController_sessionListener);
  if (v6) {
    [v6 invalidate];
  }
  *(void *)(v1 + v5) = 0;
  swift_unknownObjectRelease();

  return swift_unknownObjectWeakAssign();
}

uint64_t type metadata accessor for SiriSystemUIController()
{
  return self;
}

BOOL sub_10008B4F8()
{
  return ((*(unsigned char *)(v0 + OBJC_IVAR___SRSiriSystemUIController_systemApertureSupportedDevice) & 1) != 0
       || *(void *)(v0 + OBJC_IVAR___SRSiriSystemUIController_lockState))
      && (*(unsigned char *)(v0 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) & 1) == 0
      && *(void *)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8) != 0;
}

void sub_10008B574()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR___SRSiriSystemUIController_systemUIDevice) == 1)
  {
    uint64_t v1 = v0;
    if (*(void *)(v0 + OBJC_IVAR___SRSiriSystemUIController_viewMode) == 7)
    {
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v2 = type metadata accessor for Logger();
      sub_10007DCA0(v2, (uint64_t)qword_100171AB0);
      os_log_type_t v3 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v3, 0x40000000uLL, 0xD000000000000012, 0x80000001000FC1C0, 0xD00000000000001ALL, 0x80000001000FC1E0);
      Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong controllerRequestSystemApertureCollapse];
        swift_unknownObjectRelease();
      }
      uint64_t v5 = OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion;
      unint64_t v6 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion);
      if (v6)
      {
        id v7 = v6;
        dispatch thunk of ProminentPresentationAssertion.invalidate()();

        unint64_t v6 = *(void **)(v1 + v5);
      }
      *(void *)(v1 + v5) = 0;

      uint64_t v8 = (void *)(v1 + OBJC_IVAR___SRSiriSystemUIController_activityId);
      *uint64_t v8 = 0;
      v8[1] = 0;
      swift_bridgeObjectRelease();
    }
  }
}

void sub_10008B720()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8);
  if (!v1) {
    return;
  }
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId);
  uint64_t v4 = OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion);
  if (v5)
  {
    swift_bridgeObjectRetain();
    id v6 = v5;
    uint64_t v7 = dispatch thunk of ProminentPresentationAssertion.snaSessionIdentifier.getter();
    id v9 = v8;

    if (v3 == v7 && v1 == v9)
    {
      swift_bridgeObjectRelease();
LABEL_19:
      swift_bridgeObjectRelease();
      return;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_19;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = v3;
  v12._object = v1;
  String.append(_:)(v12);
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_10007DCA0(v13, (uint64_t)qword_100171AB0);
  os_log_type_t v14 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v14, 0x40000000uLL, 0xD000000000000019, 0x80000001000FC130, 0xD00000000000002DLL, 0x80000001000FC150);
  swift_bridgeObjectRelease();
  char v15 = *(void **)(v2 + v4);
  if (v15)
  {
    id v16 = v15;
    dispatch thunk of ProminentPresentationAssertion.invalidate()();

    char v15 = *(void **)(v2 + v4);
  }
  *(void *)(v2 + v4) = 0;

  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v17 = objc_allocWithZone((Class)type metadata accessor for ProminentPresentationAssertion());
  uint64_t v18 = ProminentPresentationAssertion.init(explanation:activityIdentifier:duration:invalidationHandler:)();
  id v19 = *(void **)(v2 + v4);
  *(void *)(v2 + v4) = v18;

  sub_10008BAEC();
}

void sub_10008B9C8()
{
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10007DCA0(v0, (uint64_t)qword_100171AB0);
  os_log_type_t v1 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v1, 0x40000000uLL, 0xD000000000000019, 0x80000001000FC130, 0xD00000000000001FLL, 0x80000001000FC1A0);
  swift_beginAccess();
  Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = *(void **)&Strong[OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion];
    *(void *)&Strong[OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion] = 0;
  }
  else
  {
    os_log_type_t v4 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v4, 0x40000000uLL, 0xD000000000000019, 0x80000001000FC130, 0xD00000000000001BLL, 0x80000001000FC0F0);
  }
}

void sub_10008BAEC()
{
  os_log_type_t v1 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void *)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId);
    uint64_t v4 = OBJC_IVAR___SRSiriSystemUIController_sessionListener;
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR___SRSiriSystemUIController_sessionListener);
    swift_bridgeObjectRetain();
    if (v5) {
      [v5 invalidate];
    }
    *(void *)(v2 + v4) = 0;
    swift_unknownObjectRelease();
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease();
    v6._countAndFlagsBits = v3;
    v6._object = v1;
    String.append(_:)(v6);
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10007DCA0(v7, (uint64_t)qword_100171AB0);
    os_log_type_t v8 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v8, 0x40000000uLL, 0xD000000000000016, 0x80000001000FC080, 0xD00000000000002ALL, 0x80000001000FC0A0);
    swift_bridgeObjectRelease();
    id v9 = [objc_allocWithZone((Class)ACActivityPresentationListener) init];
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v11 = String._bridgeToObjectiveC()();
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    void v15[4] = sub_10008C2E0;
    v15[5] = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10008BF70;
    v15[3] = &unk_100145118;
    uint64_t v13 = _Block_copy(v15);
    swift_release();
    id v14 = [v9 listenForActivityPresentation:v10 presenterBundleIdentifier:v11 withHandler:v13];
    _Block_release(v13);

    *(void *)(v2 + v4) = v14;
    swift_unknownObjectRelease();
  }
}

void sub_10008BD8C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    switch(a1)
    {
      case 0:
      case 1:
      case 2:
      case 4:
      case 5:
      case 6:
        goto LABEL_3;
      case 3:
        os_log_type_t v8 = (void *)swift_unknownObjectWeakLoadStrong();
        if (!v8) {
          goto LABEL_3;
        }
        [v8 controllerRequestSiriDismissal];

        swift_unknownObjectRelease();
        break;
      default:
        if (qword_100170448 != -1) {
          swift_once();
        }
        uint64_t v6 = type metadata accessor for Logger();
        sub_10007DCA0(v6, (uint64_t)qword_100171AB0);
        os_log_type_t v7 = static os_log_type_t.info.getter();
        sub_1000B2FEC(v7, 0x40000000uLL, 0xD000000000000016, 0x80000001000FC080, 0xD000000000000016, 0x80000001000FC110);
LABEL_3:

        break;
    }
  }
  else
  {
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_10007DCA0(v4, (uint64_t)qword_100171AB0);
    os_log_type_t v5 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v5, 0x40000000uLL, 0xD000000000000016, 0x80000001000FC080, 0xD00000000000001BLL, 0x80000001000FC0F0);
  }
}

uint64_t sub_10008BF70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_10008BFC4()
{
  if (*(void *)(v0 + OBJC_IVAR___SRSiriSystemUIController_lockState))
  {
    if (*(void *)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8)
      && *(unsigned char *)(v0 + OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity) != 1)
    {
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for Logger();
      sub_10007DCA0(v6, (uint64_t)qword_100171AB0);
      os_log_type_t v7 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v7, 0x40000000uLL, 0xD000000000000020, 0x80000001000FBFD0, 0xD000000000000033, 0x80000001000FC000);
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong controllerRequestTapsShared:1];
        swift_unknownObjectRelease();
      }
      id v9 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v9)
      {
        [v9 controllerRequestSiriBlurHidden:1];
        swift_unknownObjectRelease();
      }
      NSString v10 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v10)
      {
        [v10 controllerRequestScreenClearedWithClearASR:1];
        swift_unknownObjectRelease();
      }
      *(unsigned char *)(v0 + OBJC_IVAR___SRSiriSystemUIController_hasUpdatedForLockScreen) = 1;
    }
    else
    {
      uint64_t v1 = OBJC_IVAR___SRSiriSystemUIController_hasUpdatedForLockScreen;
      if (*(unsigned char *)(v0 + OBJC_IVAR___SRSiriSystemUIController_hasUpdatedForLockScreen) == 1)
      {
        if (qword_100170448 != -1) {
          swift_once();
        }
        uint64_t v2 = type metadata accessor for Logger();
        sub_10007DCA0(v2, (uint64_t)qword_100171AB0);
        os_log_type_t v3 = static os_log_type_t.info.getter();
        sub_1000B2FEC(v3, 0x40000000uLL, 0xD000000000000020, 0x80000001000FBFD0, 0xD00000000000003BLL, 0x80000001000FC040);
        uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v4)
        {
          [v4 controllerRequestSiriBlurHidden:0];
          swift_unknownObjectRelease();
        }
        os_log_type_t v5 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v5)
        {
          [v5 controllerRequestTapsShared:0];
          swift_unknownObjectRelease();
        }
        *(unsigned char *)(v0 + v1) = 0;
      }
    }
  }
}

void SiriSystemUIController.init()()
{
}

uint64_t sub_10008C2A8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10008C2E0(uint64_t a1)
{
}

uint64_t sub_10008C2E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10008C2F8()
{
  return swift_release();
}

void sub_10008C300()
{
}

uint64_t sub_10008C308(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  os_log_type_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  os_log_type_t v3 = sub_100098280(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_10008C45C(uint64_t a1, char a2, char a3)
{
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR___SRSiriSystemUIController_viewMode] = 0;
  *(void *)&v3[OBJC_IVAR___SRSiriSystemUIController_lockState] = 2;
  uint64_t v6 = &v3[OBJC_IVAR___SRSiriSystemUIController_activityId];
  *uint64_t v6 = 0;
  v6[1] = 0;
  v3[OBJC_IVAR___SRSiriSystemUIController_currentActivitySupportsLandscape] = 0;
  os_log_type_t v7 = &v3[OBJC_IVAR___SRSiriSystemUIController_domainResponseId];
  void *v7 = 0;
  v7[1] = 0xE000000000000000;
  v3[OBJC_IVAR___SRSiriSystemUIController_shouldIgnoreLiveActivity] = 0;
  v3[OBJC_IVAR___SRSiriSystemUIController_isInAmbient] = 0;
  *(void *)&v3[OBJC_IVAR___SRSiriSystemUIController_currentProminentAssertion] = 0;
  *(void *)&v3[OBJC_IVAR___SRSiriSystemUIController_sessionListener] = 0;
  v3[OBJC_IVAR___SRSiriSystemUIController_hasUpdatedForLockScreen] = 0;
  v3[OBJC_IVAR___SRSiriSystemUIController_didHaveSpeakableText] = 0;
  swift_unknownObjectWeakAssign();
  v3[OBJC_IVAR___SRSiriSystemUIController_systemUIDevice] = a2;
  v3[OBJC_IVAR___SRSiriSystemUIController_systemApertureSupportedDevice] = a3;
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for SiriSystemUIController();
  return [super init];
}

uint64_t sub_10008C574(void *a1)
{
  id v1 = [a1 views];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_10007DCD8(0, (unint64_t *)&qword_100171440);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_4:
  uint64_t v5 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * v5);
    }
    os_log_type_t v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    self;
    uint64_t v9 = swift_dynamicCastObjCClass();
    if (v9) {
      break;
    }
LABEL_5:

    ++v5;
    if (v8 == v4) {
      goto LABEL_18;
    }
  }
  NSString v10 = (void *)v9;
  id v11 = v7;
  id v12 = [v10 dialogIdentifier];
  if (!v12)
  {

    goto LABEL_5;
  }
  uint64_t v13 = v12;
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();

  if (qword_100170420 != -1) {
    swift_once();
  }
  char v17 = sub_10008A0A8(v14, v16, (void *)qword_100172CE0);
  swift_bridgeObjectRelease();

  return v17 & 1;
}

uint64_t sub_10008C758(void *a1)
{
  id v2 = [a1 speakableText];
  id v3 = v2;
  if (v2) {

  }
  id v4 = [a1 dialog];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 content];
    if (v6)
    {
      os_log_type_t v7 = v6;
      id v8 = [v6 speakableTextOverride];
      if (v8)
      {

        return 1;
      }

      if (v3) {
        return 1;
      }
    }
    else
    {

      if (v3) {
        return 1;
      }
    }
  }
  else if (v3)
  {
    return 1;
  }
  return 0;
}

void sub_10008C82C(void *a1)
{
  id v2 = [objc_allocWithZone((Class)SAUIAssistantUtteranceView) init];
  id v3 = [a1 speakableText];
  if (v3)
  {

    id v4 = v2;
    id v5 = [a1 speakableText];
LABEL_9:
    [v2 setSpeakableText:v5];

    goto LABEL_10;
  }
  id v6 = [a1 dialog];
  if (!v6)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  os_log_type_t v7 = v6;
  id v8 = [v6 content];

  if (!v8)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v9 = [v8 speakableTextOverride];

  if (!v9)
  {
LABEL_10:
    id v14 = v2;
    id v15 = [a1 aceId];
    [v14 setAceId:v15];

    id v16 = [a1 dialog];
    if (v16)
    {
      char v17 = v16;
      id v18 = [v16 dialogIdentifier];

      [v14 setDialogIdentifier:v18];
      [v14 setCanUseServerTTS:1];
      return;
    }
    __break(1u);
    goto LABEL_13;
  }

  id v10 = v2;
  id v11 = [a1 dialog];
  if (!v11)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v12 = v11;
  id v13 = [v11 content];

  if (v13)
  {
    id v5 = [v13 speakableTextOverride];

    goto LABEL_9;
  }
LABEL_16:
  __break(1u);
}

id sub_10008CA58(void *a1)
{
  id v1 = a1;
  if (!objc_msgSend(a1, "siriui_card")) {
    goto LABEL_32;
  }
  self;
  id v2 = (char **)swift_dynamicCastObjCClass();
  if (!v2)
  {
LABEL_31:
    swift_unknownObjectRelease();
LABEL_32:
    id v21 = v1;
    return v1;
  }
  id v3 = v2;
  id result = [v2 backingCard];
  if (result)
  {
    id v5 = result;
    id v6 = [result cardSections];

    if (v6)
    {
      sub_10007DCD8(0, (unint64_t *)&qword_100171130);
      unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      }
      else
      {
        uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      id v31 = v3;
      os_log_type_t v32 = v1;
      if (v8)
      {
        sub_10007DCD8(0, &qword_100171138);
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
        uint64_t v10 = 0;
        LOBYTE(v11) = 0;
        id v3 = &selRef_siriViewController_setDomainObject_forIdentifier_;
        while (2)
        {
          char v30 = (char)v11;
          while (1)
          {
            if ((v7 & 0xC000000000000001) != 0) {
              id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v12 = *(id *)(v7 + 8 * v10 + 32);
            }
            id v11 = v12;
            id v1 = (void *)(v10 + 1);
            if (__OFADD__(v10, 1))
            {
              __break(1u);
              goto LABEL_39;
            }
            if ([v12 isKindOfClass:ObjCClassFromMetadata]) {
              break;
            }
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            ++v10;
            if (v1 == (void *)v8)
            {
              LOBYTE(v11) = v30;
              goto LABEL_23;
            }
          }

          LOBYTE(v11) = 1;
          ++v10;
          if (v1 != (void *)v8) {
            continue;
          }
          break;
        }
      }
      else
      {
        LOBYTE(v11) = 0;
      }
LABEL_23:
      swift_bridgeObjectRelease_n();
      id v1 = v32;
      id v3 = v31;
    }
    else
    {
      LOBYTE(v11) = 0;
    }
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_39:
      swift_bridgeObjectRetain();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_26;
      }
    }
    else if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_26:
      if (v11)
      {
        sub_10007DCD8(0, (unint64_t *)&qword_100171130);
        swift_bridgeObjectRetain();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v3 setCardSections:isa];

        id v14 = [objc_allocWithZone((Class)SACardSnippet) init];
        [v14 setSash:0];
        [v14 setItemType:SAAceViewUIItemTypeItemTypeResultValue];
        id v15 = (objc_class *)[objc_allocWithZone((Class)_SFPBCard) initWithFacade:v3];
        Class v16 = v15;
        if (v15)
        {
          id v17 = [(objc_class *)v15 data];

          if (v17)
          {
            uint64_t v18 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v20 = v19;

            Class v16 = Data._bridgeToObjectiveC()().super.isa;
            sub_100088E54(v18, v20);
          }
          else
          {
            Class v16 = 0;
          }
        }
        [v14 setCardData:v16];

        id v23 = [v1 referencedCommands];
        [v14 setReferencedCommands:v23];

        id v22 = v14;
        id v24 = [v1 speakableText];
        [v22 setSpeakableText:v24];

        if (qword_100170448 != -1) {
          swift_once();
        }
        uint64_t v25 = type metadata accessor for Logger();
        sub_10007DCA0(v25, (uint64_t)qword_100171AB0);
        os_log_type_t v26 = static os_log_type_t.info.getter();
        sub_1000B2FEC(v26, 0x40000000uLL, 0xD000000000000014, 0x80000001000FC330, 0xD00000000000002ALL, 0x80000001000FC350);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return v22;
      }
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_10007DCA0(v28, (uint64_t)qword_100171AB0);
    os_log_type_t v29 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v29, 0x40000000uLL, 0xD000000000000014, 0x80000001000FC330, 0xD00000000000003CLL, 0x80000001000FC380);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return 0;
  }
  __break(1u);
  return result;
}

BOOL sub_10008CFFC(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

BOOL sub_10008D00C(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

BOOL sub_10008D01C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR___SRSiriSystemUIController_systemUIDevice) != 1
    || !*(void *)(v0 + OBJC_IVAR___SRSiriSystemUIController_activityId + 8))
  {
    return 0;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR___SRSiriSystemUIController_systemApertureSupportedDevice)) {
    return 1;
  }
  return *(void *)(v0 + OBJC_IVAR___SRSiriSystemUIController_lockState) != 0;
}

uint64_t sub_10008D080(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (uint64_t v4 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason(),
        sub_10008DB8C(&qword_100171170, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason), uint64_t v5 = dispatch thunk of Hashable._rawHashValue(seed:)(), v6 = -1 << *(unsigned char *)(a2 + 32), v7 = v5 & ~v6, v17 = a2 + 56, ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
  {
    uint64_t v16 = a1;
    uint64_t v14 = ~v6;
    uint64_t v8 = *(void **)(v4 - 8);
    id v15 = (void (*)(char *, unint64_t, uint64_t))v8[2];
    uint64_t v9 = v8[8];
    uint64_t v10 = v8[9];
    id v11 = (uint64_t (**)(char *, uint64_t))(v8 + 1);
    do
    {
      __chkstk_darwin(v5);
      v15((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(a2 + 48) + v10 * v7, v4);
      sub_10008DB8C(&qword_100171178, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason);
      char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v5 = (*v11)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      if (v12) {
        break;
      }
      unint64_t v7 = (v7 + 1) & v14;
    }
    while (((*(void *)(v17 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

id GenerativeModelsCompatabilityWrapper.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GenerativeModelsCompatabilityWrapper();
  return [super init];
}

id GenerativeModelsCompatabilityWrapper.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GenerativeModelsCompatabilityWrapper();
  return [super dealloc];
}

uint64_t _s4Siri36GenerativeModelsCompatabilityWrapperC21siriGMAssetsAvailableSbyFZ_0()
{
  uint64_t v0 = type metadata accessor for GenerativeModelsAvailability.Availability();
  uint64_t v51 = *(void *)(v0 - 8);
  uint64_t v1 = *(void *)(v51 + 64);
  __chkstk_darwin(v0);
  unint64_t v2 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = type metadata accessor for GenerativeModelsAvailability();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for GenerativeModelsAvailability.Parameters();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  GenerativeModelsAvailability.Parameters.init(useCaseIdentifiers:)();
  static GenerativeModelsAvailability.current(parameters:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v11 = v0;
  uint64_t v12 = v51;
  GenerativeModelsAvailability.availability.getter();
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  __chkstk_darwin(v13);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)&v44 - v2, (char *)&v44 - v2, v11);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))((char *)&v44 - v2, v11);
  if (&enum case for GenerativeModelsAvailability.Availability.restricted(_:)
    && v14 == enum case for GenerativeModelsAvailability.Availability.restricted(_:))
  {
    uint64_t v50 = (char *)&v44 - v2;
    (*(void (**)(char *, uint64_t))(v12 + 96))((char *)&v44 - v2, v11);
    uint64_t v15 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo();
    uint64_t v49 = &v44;
    __chkstk_darwin(v15);
    uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v47 = v19;
    uint64_t v48 = v18;
    (*(void (**)(char *, char *))(v19 + 32))(v17, (char *)&v44 - v2);
    uint64_t v46 = GenerativeModelsAvailability.Availability.RestrictedInfo.reasons.getter();
    unint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(50);
    swift_bridgeObjectRelease();
    unint64_t v52 = 0xD000000000000030;
    unint64_t v53 = 0x80000001000FC560;
    GenerativeModelsAvailability.Availability.RestrictedInfo.reasons.getter();
    uint64_t v20 = type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason();
    sub_10008DB8C(&qword_100171170, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason);
    v21._countAndFlagsBits = Set.description.getter();
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v52;
    unint64_t v22 = v53;
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_10007DCA0(v24, (uint64_t)qword_100171AB0);
    os_log_type_t v25 = static os_log_type_t.info.getter();
    unint64_t v45 = 0x80000001000FC500;
    sub_1000B2FEC(v25, 0, 0xD000000000000017, 0x80000001000FC500, v23, v22);
    uint64_t v26 = swift_bridgeObjectRelease();
    uint64_t v27 = *(void *)(v20 - 8);
    __chkstk_darwin(v26);
    os_log_type_t v29 = (char *)&v44 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void, uint64_t))(v27 + 104))(v29, enum case for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason.siriAssetIsNotReady(_:), v20);
    char v30 = sub_10008D080((uint64_t)v29, v46);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v20);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v48);
    if (v30)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v50, v11);
      return 0;
    }
    os_log_type_t v43 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v43, 0, 0xD000000000000017, v45, 0xD000000000000035, 0x80000001000FC5A0);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v50, v11);
    return 1;
  }
  if (!&enum case for GenerativeModelsAvailability.Availability.unavailable(_:)
    || v14 != enum case for GenerativeModelsAvailability.Availability.unavailable(_:))
  {
    if (!&enum case for GenerativeModelsAvailability.Availability.available(_:)
      || v14 != enum case for GenerativeModelsAvailability.Availability.available(_:))
    {
      os_log_type_t v42 = *(void (**)(char *, uint64_t))(v12 + 8);
      v42((char *)&v44 - v2, v11);
      v42((char *)&v44 - v2, v11);
      return 0;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))((char *)&v44 - v2, v11);
    return 1;
  }
  (*(void (**)(char *, uint64_t))(v12 + 96))((char *)&v44 - v2, v11);
  uint64_t v32 = type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo();
  uint64_t v33 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v44 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v35, (char *)&v44 - v2, v32);
  unint64_t v52 = 0;
  unint64_t v53 = 0xE000000000000000;
  _StringGuts.grow(_:)(51);
  v36._countAndFlagsBits = 0xD000000000000031;
  v36._object = (void *)0x80000001000FC520;
  String.append(_:)(v36);
  GenerativeModelsAvailability.Availability.UnavailableInfo.reasons.getter();
  type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason();
  sub_10008DB8C(&qword_100171168, (void (*)(uint64_t))&type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason);
  v37._countAndFlagsBits = Set.description.getter();
  String.append(_:)(v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = v52;
  unint64_t v39 = v53;
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  sub_10007DCA0(v40, (uint64_t)qword_100171AB0);
  os_log_type_t v41 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v41, 0, 0xD000000000000017, 0x80000001000FC500, v38, v39);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
  (*(void (**)(char *, uint64_t))(v12 + 8))((char *)&v44 - v2, v11);
  return 0;
}

uint64_t type metadata accessor for GenerativeModelsCompatabilityWrapper()
{
  return self;
}

uint64_t sub_10008DB8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10008DBD4(uint64_t a1)
{
  return sub_10008DFF8(a1, (uint64_t)&type metadata for FaceDetectionObservation, &qword_100171260, &qword_100171180, algn_100171188);
}

uint64_t sub_10008DBF4(char a1, double a2)
{
  _StringGuts.grow(_:)(36);
  if (qword_100170428 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_100171180;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5._object = (void *)0x80000001000FC750;
  v5._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v5);
  if (a1) {
    uint64_t v6 = 1702195828;
  }
  else {
    uint64_t v6 = 0x65736C6166;
  }
  if (a1) {
    unint64_t v7 = 0xE400000000000000;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  unint64_t v8 = v7;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x7473656D6974202CLL;
  v9._object = (void *)0xEC0000003A706D61;
  String.append(_:)(v9);
  v10._countAndFlagsBits = sub_10008DD4C(a2);
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 41;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  return v4;
}

uint64_t sub_10008DD4C(double a1)
{
  *(double *)uint64_t v15 = a1;
  uint64_t v1 = sub_10007D3B4(&qword_100171308);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  Swift::String v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v7 = (char *)v15 - v6;
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8);
  static Locale.autoupdatingCurrent.getter();
  sub_100093F0C();
  FloatingPointFormatStyle.init(locale:)();
  uint64_t v9 = type metadata accessor for NumberFormatStyleConfiguration.Precision();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static NumberFormatStyleConfiguration.Precision.fractionLength(_:)();
  FloatingPointFormatStyle.precision(_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
  v13(v7, v1);
  sub_100093F60();
  BinaryFloatingPoint.formatted<A>(_:)();
  v13(v5, v1);
  v15[0] = v15[2];
  v15[1] = v15[3];
  return String.init<A>(_:)();
}

uint64_t sub_10008DFCC()
{
  return sub_10008DBF4(*(unsigned char *)v0, *(double *)(v0 + 8));
}

uint64_t sub_10008DFD8(uint64_t a1)
{
  return sub_10008DFF8(a1, (uint64_t)&type metadata for FaceDetectionError, &qword_100171258, &qword_100171190, algn_100171198);
}

uint64_t sub_10008DFF8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void *a5)
{
  sub_10007D3B4(a3);
  uint64_t result = String.init<A>(describing:)();
  *a4 = result;
  *a5 = v8;
  return result;
}

uint64_t sub_10008E044(uint64_t a1)
{
  if (a1)
  {
    uint64_t v9 = 0;
    swift_errorRetain();
    _StringGuts.grow(_:)(29);
    if (qword_100170430 != -1) {
      swift_once();
    }
    uint64_t v1 = qword_100171190;
    uint64_t v2 = *(void **)algn_100171198;
    swift_bridgeObjectRetain();
    v3._countAndFlagsBits = v1;
    v3._object = v2;
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
    v4._object = (void *)0x80000001000FC730;
    v4._countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v4);
    sub_10007D3B4(&qword_100171250);
    _print_unlocked<A, B>(_:_:)();
    v5._countAndFlagsBits = 41;
    v5._object = (void *)0xE100000000000000;
    String.append(_:)(v5);
    swift_errorRelease();
  }
  else
  {
    _StringGuts.grow(_:)(45);
    if (qword_100170430 != -1) {
      swift_once();
    }
    uint64_t v6 = qword_100171190;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6;
    v7._countAndFlagsBits = 0xD00000000000002BLL;
    v7._object = (void *)0x80000001000FC700;
    String.append(_:)(v7);
  }
  return v9;
}

uint64_t sub_10008E200()
{
  return sub_10008E044(*v0);
}

uint64_t sub_10008E208()
{
  type metadata accessor for SiriQuickTypeGestureActivationManager();
  sub_10007D3B4(&qword_100171338);
  uint64_t result = String.init<A>(describing:)();
  qword_1001711A0 = result;
  *(void *)algn_1001711A8 = v1;
  return result;
}

id SiriQuickTypeGestureActivationManager.__allocating_init()()
{
  return SiriQuickTypeGestureActivationManager.init()();
}

id SiriQuickTypeGestureActivationManager.init()()
{
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 120) = 0;
  *(unsigned char *)(v0 + 128) = -1;
  *(void *)(v0 + 136) = 0;
  *(void *)(v0 + 144) = 0;
  *(unsigned char *)(v0 + 152) = -1;
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_latestFaceDetectionResultFuture;
  uint64_t v2 = sub_10007D3B4(&qword_100170458);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_isFaceDetectionInFlight) = 0;
  uint64_t v3 = OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_attentionAwarenessClient;
  id v4 = objc_allocWithZone((Class)AWAttentionAwarenessClient);
  swift_retain();
  id v5 = [v4 init];
  id v6 = [objc_allocWithZone((Class)AWAttentionAwarenessConfiguration) init];
  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setIdentifier:v7];

  [v6 setEventMask:128];
  [v5 setConfiguration:v6];

  *(void *)(v0 + v3) = v5;
  swift_release();
  v9.receiver = (id)v0;
  v9.super_class = (Class)type metadata accessor for SiriQuickTypeGestureActivationManager();
  return [super init];
}

uint64_t type metadata accessor for SiriQuickTypeGestureActivationManager()
{
  uint64_t result = qword_100171230;
  if (!qword_100171230) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SiriQuickTypeGestureActivationManager.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_attentionAwarenessClient;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_attentionAwarenessClient);
  id v15 = 0;
  if ([v3 invalidateWithError:&v15])
  {
    id v4 = v15;
  }
  else
  {
    id v5 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100170440 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10007DCA0(v6, (uint64_t)qword_100172CE8);
    swift_errorRetain();
    swift_errorRetain();
    NSString v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      id v15 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315394;
      if (qword_100170438 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_1001711A0;
      unint64_t v12 = *(void *)algn_1001711A8;
      swift_bridgeObjectRetain();
      sub_100092AEC(v11, v12, (uint64_t *)&v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2112;
      swift_errorRetain();
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v10 = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "#activation #quickTypeGate %s: attention awareness client invalidation failed with error: %@", (uint8_t *)v9, 0x16u);
      sub_10007D3B4(&qword_1001711D0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  sub_1000925B0(*(void *)(v1 + 112), *(void *)(v1 + 120), *(unsigned char *)(v1 + 128));
  sub_1000925B0(*(void *)(v1 + 136), *(void *)(v1 + 144), *(unsigned char *)(v1 + 152));
  sub_1000826D0(v1 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_latestFaceDetectionResultFuture, &qword_1001711C8);

  swift_defaultActor_destroy();
  return v1;
}

uint64_t SiriQuickTypeGestureActivationManager.__deallocating_deinit()
{
  SiriQuickTypeGestureActivationManager.deinit();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t SiriQuickTypeGestureActivationManager.prewarmForFirstTapOfQuickTypeToSiriGesture()()
{
  v1[6] = v0;
  uint64_t v2 = sub_10007D3B4(&qword_1001711E0);
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  sub_10007D3B4(&qword_1001711C8);
  v1[10] = swift_task_alloc();
  return _swift_task_switch(sub_10008E8DC, v0, 0);
}

uint64_t sub_10008E8DC()
{
  uint64_t v24 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_isFaceDetectionInFlight;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_isFaceDetectionInFlight))
  {
    if (qword_100170440 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_10007DCA0(v3, (uint64_t)qword_100172CE8);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      if (qword_100170438 != -1) {
        swift_once();
      }
      uint64_t v7 = qword_1001711A0;
      unint64_t v8 = *(void *)algn_1001711A8;
      swift_bridgeObjectRetain();
      v0[5] = sub_100092AEC(v7, v8, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "#activation #quickTypeGate %s: face detection already in flight - skipping prewarm", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v10 = v0[9];
    uint64_t v9 = v0[10];
    uint64_t v12 = v0[7];
    uint64_t v11 = v0[8];
    uint64_t v13 = *(void *)(v1 + 136);
    uint64_t v14 = *(void *)(v1 + 144);
    uint64_t v15 = *(void *)(v1 + 112);
    uint64_t v16 = *(void *)(v1 + 120);
    *(void *)(v1 + 112) = v13;
    *(void *)(v1 + 120) = v14;
    unsigned __int8 v17 = *(unsigned char *)(v1 + 152);
    unsigned __int8 v18 = *(unsigned char *)(v1 + 128);
    *(unsigned char *)(v1 + 128) = v17;
    sub_100093144(v13, v14, v17);
    sub_1000925B0(v15, v16, v18);
    *(unsigned char *)(v1 + v2) = 1;
    (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v10, enum case for AsyncThrowingStream.Continuation.BufferingPolicy.unbounded<A, B>(_:), v12);
    AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
    uint64_t v19 = sub_10007D3B4(&qword_100170458);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 0, 1, v19);
    uint64_t v20 = v1 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_latestFaceDetectionResultFuture;
    swift_beginAccess();
    sub_100093170(v9, v20);
    swift_endAccess();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_10008EC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007D3B4(&qword_100171278);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10007D3B4(&qword_100171280);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  unint64_t v12 = sub_100093240();
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a2;
  *((void *)v14 + 3) = v12;
  *((void *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], v7, v4);
  swift_retain_n();
  sub_10009A494((uint64_t)v10, (uint64_t)&unk_100171328, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_10008EDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  void *v7 = v5;
  v7[1] = sub_100094274;
  return sub_100091308(a5);
}

uint64_t sub_10008EFF4(const void *a1, uint64_t a2)
{
  void v2[2] = a2;
  v2[3] = _Block_copy(a1);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  void v2[4] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10008F09C;
  return SiriQuickTypeGestureActivationManager.prewarmForFirstTapOfQuickTypeToSiriGesture()();
}

uint64_t sub_10008F09C()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 24);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_release();
  v1[2](v1);
  _Block_release(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t SiriQuickTypeGestureActivationManager.cancelPrewarmForFirstTapOfQuickTypeToSiriGesture()()
{
  *(void *)(v1 + 72) = v0;
  sub_10007D3B4(&qword_1001711C8);
  *(void *)(v1 + 80) = swift_task_alloc();
  return _swift_task_switch(sub_10008F298, v0, 0);
}

uint64_t sub_10008F298()
{
  id v31 = v0;
  uint64_t v1 = v0[9];
  uint64_t v2 = OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_isFaceDetectionInFlight;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_isFaceDetectionInFlight) == 1)
  {
    uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_attentionAwarenessClient);
    v0[6] = 0;
    unsigned int v4 = [v3 cancelPollForAttentionWithError:v0 + 6];
    uint64_t v5 = (void *)v0[6];
    if (v4)
    {
      id v6 = v5;
    }
    else
    {
      id v13 = v5;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_100170440 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_10007DCA0(v14, (uint64_t)qword_100172CE8);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v15, v16))
      {
        os_log_type_t v28 = v16;
        log = v15;
        uint64_t v17 = swift_slowAlloc();
        uint64_t v27 = (void *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315394;
        if (qword_100170438 != -1) {
          swift_once();
        }
        uint64_t v19 = qword_1001711A0;
        unint64_t v18 = *(void *)algn_1001711A8;
        swift_bridgeObjectRetain();
        v0[7] = sub_100092AEC(v19, v18, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2112;
        swift_errorRetain();
        uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
        v0[8] = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v27 = v20;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v28, "#activation #quickTypeGate %s: error cancelling polling: %@", (uint8_t *)v17, 0x16u);
        sub_10007D3B4(&qword_1001711D0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
    }
    uint64_t v22 = v0[9];
    uint64_t v21 = v0[10];
    uint64_t v23 = sub_10007D3B4(&qword_100170458);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v21, 1, 1, v23);
    uint64_t v24 = v22 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_latestFaceDetectionResultFuture;
    swift_beginAccess();
    sub_100093170(v21, v24);
    swift_endAccess();
    *(unsigned char *)(v1 + v2) = 0;
  }
  else
  {
    if (qword_100170440 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10007DCA0(v7, (uint64_t)qword_100172CE8);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      if (qword_100170438 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_1001711A0;
      unint64_t v12 = *(void *)algn_1001711A8;
      swift_bridgeObjectRetain();
      v0[5] = sub_100092AEC(v11, v12, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "#activation #quickTypeGate %s: no face detection in-flight - skipping cancel", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_10008F974(const void *a1, uint64_t a2)
{
  void v2[2] = a2;
  v2[3] = _Block_copy(a1);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  void v2[4] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10009426C;
  return SiriQuickTypeGestureActivationManager.cancelPrewarmForFirstTapOfQuickTypeToSiriGesture()();
}

uint64_t SiriQuickTypeGestureActivationManager.canActivate()()
{
  v1[18] = v0;
  uint64_t v2 = sub_10007D3B4(&qword_1001711F8);
  v1[19] = v2;
  v1[20] = *(void *)(v2 - 8);
  v1[21] = swift_task_alloc();
  sub_10007D3B4(&qword_1001711C8);
  v1[22] = swift_task_alloc();
  v1[23] = swift_task_alloc();
  uint64_t v3 = sub_10007D3B4(&qword_100170458);
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  return _swift_task_switch(sub_10008FB80, v0, 0);
}

uint64_t sub_10008FB80()
{
  uint64_t v32 = v0;
  uint64_t v1 = v0[18];
  if (*(unsigned char *)(v1 + 128))
  {
LABEL_4:
    uint64_t v5 = v0[24];
    uint64_t v6 = v0[25];
    uint64_t v7 = v0[23];
    uint64_t v8 = OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_latestFaceDetectionResultFuture;
    v0[27] = OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_latestFaceDetectionResultFuture;
    uint64_t v9 = v1 + v8;
    swift_beginAccess();
    sub_1000931D8(v9, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5) == 1)
    {
      sub_1000826D0(v0[23], &qword_1001711C8);
      if (qword_100170440 != -1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      sub_10007DCA0(v10, (uint64_t)qword_100172CE8);
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v11, v12))
      {
        id v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v31 = swift_slowAlloc();
        *(_DWORD *)id v13 = 136315138;
        if (qword_100170438 != -1) {
          swift_once();
        }
        uint64_t v14 = qword_1001711A0;
        unint64_t v15 = *(void *)algn_1001711A8;
        swift_bridgeObjectRetain();
        v0[11] = sub_100092AEC(v14, v15, &v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "#activation #quickTypeGate %s: Noticed call to canActivate() without a previous call to prewarmForFirstTapOfQuickTypeToSiriGesture(). It's recommended to call prewarm prior to canActivate to speed up canActivate.", v13, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      os_log_type_t v16 = (void *)swift_task_alloc();
      v0[31] = v16;
      void *v16 = v0;
      v16[1] = sub_100090974;
      return SiriQuickTypeGestureActivationManager.prewarmForFirstTapOfQuickTypeToSiriGesture()();
    }
    else
    {
      uint64_t v18 = v0[18];
      (*(void (**)(void, void, void))(v0[25] + 32))(v0[26], v0[23], v0[24]);
      AsyncThrowingStream.makeAsyncIterator()();
      unint64_t v19 = sub_100093240();
      uint64_t v20 = (void *)swift_task_alloc();
      v0[28] = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_100090180;
      uint64_t v21 = v0[19];
      return __sScs8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 8, v18, v19, v21, v0 + 10);
    }
  }
  double v2 = *(double *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  double v4 = CFAbsoluteTimeGetCurrent() - v2;
  if (v4 > 0.2)
  {
    uint64_t v1 = v0[18];
    goto LABEL_4;
  }
  if (qword_100170440 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_10007DCA0(v22, (uint64_t)qword_100172CE8);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v23, v24))
  {
    char v30 = v3;
    uint64_t v3 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    if (qword_100170438 != -1) {
      swift_once();
    }
    uint64_t v26 = qword_1001711A0;
    unint64_t v25 = *(void *)algn_1001711A8;
    swift_bridgeObjectRetain();
    v0[16] = sub_100092AEC(v26, v25, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    uint64_t v27 = sub_10008DD4C(v4 * 1000.0);
    v0[17] = sub_100092AEC(v27, v28, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "#activation #quickTypeGate %s: using previous observation (age: %sms)", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    LOBYTE(v3) = v30;
  }
  else
  {
  }
  sub_100093298(v3 & 1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v29 = (uint64_t (*)(uint64_t))v0[1];
  return v29(v3 & 1);
}

uint64_t sub_100090180()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    double v4 = sub_100090C30;
  }
  else {
    double v4 = sub_100090294;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100090294()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 == 2)
  {
    uint64_t v2 = 0;
LABEL_14:
    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    uint64_t v15 = *(void *)(v0 + 208);
    uint64_t v16 = *(void *)(v0 + 192);
    uint64_t v17 = *(void *)(v0 + 200);
    uint64_t v18 = *(void *)(v0 + 176);
    uint64_t v19 = *(void *)(v0 + 144) + *(void *)(v0 + 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v18, 1, 1, v16);
    swift_beginAccess();
    sub_100093170(v18, v19);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v20(v2);
  }
  double v3 = *(double *)(v0 + 72);
  double v4 = CFAbsoluteTimeGetCurrent() - v3;
  if (v4 <= 0.2)
  {
    uint64_t v2 = v1 & 1;
    sub_100093298(v2);
    goto LABEL_14;
  }
  if (qword_100170440 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10007DCA0(v5, (uint64_t)qword_100172CE8);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    if (qword_100170438 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_1001711A0;
    unint64_t v10 = *(void *)algn_1001711A8;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 112) = sub_100092AEC(v9, v10, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    uint64_t v11 = sub_10008DD4C(v4 * 1000.0);
    *(void *)(v0 + 120) = sub_100092AEC(v11, v12, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "#activation #quickTypeGate %s: Latest face detection observation is old (%sms) -> starting new detection", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v13;
  *id v13 = v0;
  v13[1] = sub_100090654;
  return SiriQuickTypeGestureActivationManager.prewarmForFirstTapOfQuickTypeToSiriGesture()();
}

uint64_t sub_100090654()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  double v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 240) = v3;
  *double v3 = v2;
  v3[1] = sub_100090794;
  return SiriQuickTypeGestureActivationManager.canActivate()();
}

uint64_t sub_100090794(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 144);
  *(unsigned char *)(*(void *)v1 + 264) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1000908AC, v2, 0);
}

uint64_t sub_1000908AC()
{
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 192);
  (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 264);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_100090974()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 256) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100090AB4;
  return SiriQuickTypeGestureActivationManager.canActivate()();
}

uint64_t sub_100090AB4(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_100090C30()
{
  uint64_t v17 = v0;
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  if (qword_100170440 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10007DCA0(v1, (uint64_t)qword_100172CE8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    if (qword_100170438 != -1) {
      swift_once();
    }
    uint64_t v7 = qword_1001711A0;
    unint64_t v6 = *(void *)algn_1001711A8;
    swift_bridgeObjectRetain();
    v0[12] = sub_100092AEC(v7, v6, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2112;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[13] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "#activation #quickTypeGate %s: Forcing canActivate = YES despite error: %@", (uint8_t *)v4, 0x16u);
    sub_10007D3B4(&qword_1001711D0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = v0[26];
  uint64_t v10 = v0[24];
  uint64_t v11 = v0[25];
  uint64_t v12 = v0[22];
  uint64_t v13 = v0[18] + v0[27];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v12, 1, 1, v10);
  swift_beginAccess();
  sub_100093170(v12, v13);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  return v14(1);
}

uint64_t sub_100091114(const void *a1, uint64_t a2)
{
  void v2[2] = a2;
  v2[3] = _Block_copy(a1);
  swift_retain();
  os_log_type_t v3 = (void *)swift_task_alloc();
  void v2[4] = v3;
  *os_log_type_t v3 = v2;
  v3[1] = sub_1000911BC;
  return SiriQuickTypeGestureActivationManager.canActivate()();
}

uint64_t sub_1000911BC(char a1)
{
  os_log_type_t v3 = *(void (***)(void, void))(*v1 + 24);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  swift_release();
  v3[2](v3, a1 & 1);
  _Block_release(v3);
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_100091308(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  uint64_t v3 = sub_10007D3B4(&qword_100171270);
  v2[14] = v3;
  v2[15] = *(void *)(v3 - 8);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_1000913CC, 0, 0);
}

uint64_t sub_1000913CC()
{
  uint64_t v25 = v0;
  if (qword_100170440 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 136) = sub_10007DCA0(v1, (uint64_t)qword_100172CE8);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    if (qword_100170438 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_1001711A0;
    unint64_t v6 = *(void *)algn_1001711A8;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 88) = sub_100092AEC(v5, v6, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "#activation #quickTypeGate %s: starting to poll", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  double v7 = sub_100091CFC(&v23);
  *(void *)(v0 + 144) = 0;
  char v9 = v8;
  double v10 = v7;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    if (qword_100170438 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_1001711A0;
    unint64_t v15 = *(void *)algn_1001711A8;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 72) = sub_100092AEC(v14, v15, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v16 = sub_10008DBF4(v9 & 1, v10);
    *(void *)(v0 + 80) = sub_100092AEC(v16, v17, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "#activation #quickTypeGate %s: polling succeeded with result: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v19 = *(void *)(v0 + 120);
  uint64_t v18 = *(void *)(v0 + 128);
  uint64_t v20 = *(void *)(v0 + 112);
  *(unsigned char *)(v0 + 16) = v9 & 1;
  *(double *)(v0 + 24) = v10;
  sub_10007D3B4(&qword_100171278);
  AsyncThrowingStream.Continuation.yield(_:)();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  *(void *)(v0 + 64) = 0;
  AsyncThrowingStream.Continuation.finish(throwing:)();
  *(double *)(v0 + 160) = v10;
  *(void *)(v0 + 152) = v9 & 1;
  uint64_t v21 = *(void *)(v0 + 104);
  return _swift_task_switch(sub_100091A60, v21, 0);
}

uint64_t sub_100091A60()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[13];
  char v4 = v0[18] != 0;
  uint64_t v6 = *(void *)(v3 + 136);
  uint64_t v5 = *(void *)(v3 + 144);
  *(void *)(v3 + 136) = v1;
  *(void *)(v3 + 144) = v2;
  unsigned __int8 v7 = *(unsigned char *)(v3 + 152);
  *(unsigned char *)(v3 + 152) = v4;
  sub_10009315C(v1, v2, v4);
  sub_1000925B0(v6, v5, v7);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_isFaceDetectionInFlight) = 0;
  return _swift_task_switch(sub_100091B0C, 0, 0);
}

uint64_t sub_100091B0C()
{
  os_log_type_t v12 = v0;
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    if (qword_100170438 != -1) {
      swift_once();
    }
    uint64_t v9 = v0[19];
    uint64_t v10 = v0[20];
    char v4 = v0[18] != 0;
    uint64_t v5 = qword_1001711A0;
    unint64_t v6 = *(void *)algn_1001711A8;
    swift_bridgeObjectRetain();
    v0[4] = sub_100092AEC(v5, v6, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "#kcs #activation #quickTypeGate %s: exiting beginPollingWithContinuation", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1000925C8(v9, v10, v4);
  }
  else
  {
    sub_1000925C8(v0[19], v0[20], v0[18] != 0);
  }
  swift_task_dealloc();
  unsigned __int8 v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

double sub_100091CFC(uint64_t *a1)
{
  double Current = CFAbsoluteTimeGetCurrent();
  SRUIFInstrumentQuickTypeFaceDetectionPollingStartSignpost();
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC4Siri37SiriQuickTypeGestureActivationManager_attentionAwarenessClient);
  id v48 = 0;
  unsigned int v4 = [v3 resumeWithError:&v48];
  id v5 = v48;
  p_prots = &OBJC_PROTOCOL___UIAdaptivePresentationControllerDelegate.prots;
  if (v4)
  {
    id v47 = 0;
    id v48 = 0;
    id v7 = v5;
    unsigned int v8 = [v3 pollForAttentionWithTimeout:&v48 event:&v47 error:0.5];
    id v5 = v48;
    id v9 = v47;
    if (v8)
    {
      id v10 = v5;
      SRUIFInstrumentQuickTypeFaceDetectionPollingEndSignpost();
      double v11 = CFAbsoluteTimeGetCurrent();
      if (qword_100170440 != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      sub_10007DCA0(v12, (uint64_t)qword_100172CE8);
      uint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        id v48 = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136315394;
        if (qword_100170438 != -1) {
          swift_once();
        }
        uint64_t v17 = qword_1001711A0;
        unint64_t v16 = *(void *)algn_1001711A8;
        swift_bridgeObjectRetain();
        id v47 = (id)sub_100092AEC(v17, v16, (uint64_t *)&v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2080;
        uint64_t v18 = sub_10008DD4C((v11 - Current) * 1000.0);
        id v47 = (id)sub_100092AEC(v18, v19, (uint64_t *)&v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "#activation #quickTypeGate %s: polling succeeded in %sms", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v20 = 1;
        uint64_t v21 = v5;
        p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___UIAdaptivePresentationControllerDelegate + 16);
      }
      else
      {

        uint64_t v20 = 1;
        uint64_t v21 = v5;
      }
      goto LABEL_19;
    }
    id v22 = v9;
    uint64_t v21 = v5;
  }
  else
  {
    uint64_t v21 = 0;
    id v22 = v48;
  }
  id v23 = v5;
  uint64_t v20 = _convertNSErrorToError(_:)();

  swift_willThrow();
  SRUIFInstrumentQuickTypeFaceDetectionPollingEndSignpost();
  double v24 = CFAbsoluteTimeGetCurrent();
  if (qword_100170440 != -1) {
    swift_once();
  }
  uint64_t v25 = type metadata accessor for Logger();
  sub_10007DCA0(v25, (uint64_t)qword_100172CE8);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    id v48 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 136315394;
    if (qword_100170438 != -1) {
      swift_once();
    }
    uint64_t v30 = qword_1001711A0;
    unint64_t v29 = *(void *)algn_1001711A8;
    swift_bridgeObjectRetain();
    id v47 = (id)sub_100092AEC(v30, v29, (uint64_t *)&v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    uint64_t v31 = sub_10008DD4C((v24 - Current) * 1000.0);
    id v47 = (id)sub_100092AEC(v31, v32, (uint64_t *)&v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "#activation #quickTypeGate %s: polling cancelled or failed in %sms", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    p_prots = (__objc2_prot_list **)(&OBJC_PROTOCOL___UIAdaptivePresentationControllerDelegate + 16);
  }
  else
  {
  }
LABEL_19:
  id v48 = 0;
  if ([v3 suspendWithError:&v48])
  {
    id v33 = v48;
    if (v20 == 1) {
      goto LABEL_30;
    }
LABEL_28:
    id v48 = (id)v20;
    sub_1000938A0();
    swift_willThrowTypedImpl();

    *a1 = v20;
    return Current;
  }
  id v34 = v48;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (p_prots[136] != (__objc2_prot_list *)-1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  sub_10007DCA0(v35, (uint64_t)qword_100172CE8);
  swift_errorRetain();
  swift_errorRetain();
  Swift::String v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v44 = v21;
    uint64_t v45 = v20;
    uint64_t v38 = swift_slowAlloc();
    unint64_t v39 = (void *)swift_slowAlloc();
    id v48 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136315394;
    if (qword_100170438 != -1) {
      swift_once();
    }
    uint64_t v40 = qword_1001711A0;
    unint64_t v41 = *(void *)algn_1001711A8;
    swift_bridgeObjectRetain();
    id v47 = (id)sub_100092AEC(v40, v41, (uint64_t *)&v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2112;
    swift_errorRetain();
    os_log_type_t v42 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v47 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v39 = v42;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "#activation #quickTypeGate %s: Failed to suspend attention awareness client with error %@", (uint8_t *)v38, 0x16u);
    sub_10007D3B4(&qword_1001711D0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    uint64_t v21 = v44;
    uint64_t v20 = v45;
    if (v45 == 1) {
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  swift_errorRelease();
  swift_errorRelease();
  swift_errorRelease();

  if (v20 != 1) {
    goto LABEL_28;
  }
LABEL_30:
  if (v21) {
    [v21 eventMask];
  }
  double Current = CFAbsoluteTimeGetCurrent();

  return Current;
}

uint64_t SiriQuickTypeGestureActivationManager.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_100092534()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100094208(v0, qword_100172CE8);
  sub_10007DCA0(v0, (uint64_t)qword_100172CE8);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1000925B0(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1000925C8(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_1000925C8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1000925D4(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *unsigned int v4 = v3;
  v4[1] = sub_100094274;
  return v6();
}

uint64_t sub_1000926A0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *id v5 = v4;
  v5[1] = sub_100094274;
  return v7();
}

uint64_t sub_10009276C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000826D0(a1, &qword_100171280);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_100092918(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1000929F4;
  return v6(a1);
}

uint64_t sub_1000929F4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100092AEC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100092BC0(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000941AC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000941AC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100088F14((uint64_t)v12);
  return v7;
}

uint64_t sub_100092BC0(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100092D7C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100092D7C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_100092E14(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100092FF4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100092FF4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_100092E14(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100092F8C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100092F8C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_10007D3B4(&qword_100171330);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100092FF4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007D3B4(&qword_100171330);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100093144(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_10009315C(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_10009315C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_100093168(uint64_t a1)
{
  return sub_10008EC08(a1, v1);
}

uint64_t sub_100093170(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007D3B4(&qword_1001711C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000931D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007D3B4(&qword_1001711C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100093240()
{
  unint64_t result = qword_100171200;
  if (!qword_100171200)
  {
    type metadata accessor for SiriQuickTypeGestureActivationManager();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171200);
  }
  return result;
}

void sub_100093298(char a1)
{
  if (qword_100170440 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_10007DCA0(v2, (uint64_t)qword_100172CE8);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315650;
    if (qword_100170438 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_1001711A0;
    unint64_t v6 = *(void *)algn_1001711A8;
    swift_bridgeObjectRetain();
    sub_100092AEC(v5, v6, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    BOOL v7 = (a1 & 1) == 0;
    if (a1) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = 2117454;
    }
    if (a1) {
      unint64_t v9 = 0xE000000000000000;
    }
    else {
      unint64_t v9 = 0xE300000000000000;
    }
    if (v7) {
      uint64_t v10 = 20302;
    }
    else {
      uint64_t v10 = 5457241;
    }
    if (v7) {
      unint64_t v11 = 0xE200000000000000;
    }
    else {
      unint64_t v11 = 0xE300000000000000;
    }
    sub_100092AEC(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 22) = 2080;
    sub_100092AEC(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "#activation #quickTypeGate %s: %sface detected -> can activate = %s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_100093534()
{
  return type metadata accessor for SiriQuickTypeGestureActivationManager();
}

void sub_10009353C()
{
  sub_1000935FC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000935FC()
{
  if (!qword_100171248)
  {
    sub_100081AF8(&qword_100170458);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100171248);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for FaceDetectionError(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  swift_errorRetain();
  *a1 = v3;
  return a1;
}

uint64_t destroy for FaceDetectionError()
{
  return swift_errorRelease();
}

void *assignWithCopy for FaceDetectionError(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  swift_errorRetain();
  *a1 = v3;
  swift_errorRelease();
  return a1;
}

void *initializeWithTake for FaceDetectionError(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for FaceDetectionError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FaceDetectionError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FaceDetectionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1000937B4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1000937CC(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for FaceDetectionError()
{
  return &type metadata for FaceDetectionError;
}

uint64_t getEnumTagSinglePayload for FaceDetectionObservation(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FaceDetectionObservation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FaceDetectionObservation()
{
  return &type metadata for FaceDetectionObservation;
}

unint64_t sub_1000938A0()
{
  unint64_t result = qword_100171268;
  if (!qword_100171268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171268);
  }
  return result;
}

uint64_t sub_1000938F8()
{
  unsigned int v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  BOOL v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *BOOL v4 = v1;
  v4[1] = sub_100094274;
  int v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_100171288 + dword_100171288);
  return v5(v2, v3);
}

uint64_t sub_1000939A8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  BOOL v4 = (int *)v0[4];
  int v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *int v5 = v1;
  v5[1] = sub_100094274;
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_100171298 + dword_100171298);
  return v6(v2, v3, v4);
}

uint64_t sub_100093A6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100094274;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1001712A8 + dword_1001712A8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_100093B38()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100093B70(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100093C28;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1001712B8 + dword_1001712B8);
  return v6(a1, v4);
}

uint64_t sub_100093C28()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100093D20()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100094274;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_1001712C8 + dword_1001712C8);
  return v5(v2, v3);
}

uint64_t sub_100093DD8()
{
  _Block_release(*(const void **)(v0 + 16));
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100093E18()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100094274;
  uint64_t v5 = (uint64_t (*)(const void *, uint64_t))((char *)&dword_1001712E8 + dword_1001712E8);
  return v5(v2, v3);
}

uint64_t sub_100093ECC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

unint64_t sub_100093F0C()
{
  unint64_t result = qword_100171310;
  if (!qword_100171310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171310);
  }
  return result;
}

unint64_t sub_100093F60()
{
  unint64_t result = qword_100171318;
  if (!qword_100171318)
  {
    sub_100081AF8(&qword_100171308);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100171318);
  }
  return result;
}

uint64_t sub_100093FB0()
{
  uint64_t v1 = sub_10007D3B4(&qword_100171278);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100094088()
{
  uint64_t v2 = *(void *)(sub_10007D3B4(&qword_100171278) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100093C28;
  uint64_t v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_100094274;
  return sub_100091308(v3);
}

uint64_t sub_1000941AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *sub_100094208(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_100094278()
{
  return 1;
}

void sub_100094280()
{
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 view];
    if (v3)
    {
      uint64_t v4 = v3;
      type metadata accessor for SRCarPlayScrollView();
      if (swift_dynamicCastClass())
      {
        id v2 = v2;
        id v5 = [v2 responseViewId];
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v8 = v7;

        if (v6 == 0xD000000000000033 && v8 == 0x80000001000FBC20)
        {
          swift_bridgeObjectRelease();
          char v9 = 1;
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
        }
        sub_10009E214(v1, v9 & 1);

LABEL_16:
        return;
      }
    }
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_10007DCA0(v12, (uint64_t)qword_100171AB0);
    os_log_type_t v13 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v13, 0x10uLL, 0x4C64694477656976, 0xED0000292864616FLL, 0xD000000000000027, 0x80000001000FD030);
    goto LABEL_16;
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_10007DCA0(v10, (uint64_t)qword_100171AB0);
  os_log_type_t v11 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v11, 0x10uLL, 0x4C64694477656976, 0xED0000292864616FLL, 0xD000000000000025, 0x80000001000FD000);
}

void sub_100094548()
{
  sub_10007E630(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate);
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
}

id sub_1000945A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

void sub_10009464C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v2 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_proceedToNextCommandAtSpeechSynthesisEnd) = 1;
  if (a2)
  {
    id v3 = *(void **)(v2 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
    if (v3)
    {
      id v5 = v3;
      NSString v4 = String._bridgeToObjectiveC()();
      [v5 setPlayerState:0 aceId:v4];
    }
  }
}

uint64_t sub_100094700(void *a1)
{
  swift_getObjectType();
  uint64_t v3 = sub_10007D3B4((uint64_t *)&unk_100171410);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v86 - v7;
  uint64_t v9 = type metadata accessor for Response();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v94 = (char *)&v86 - v14;
  uint64_t v15 = OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet;
  unint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet);
  if (v16) {
    BOOL v17 = a1 == 0;
  }
  else {
    BOOL v17 = 1;
  }
  if (v17 || (uint64_t v25 = swift_dynamicCastClass(), !v25 || (v26 = *(void **)(v25 + v15)) == 0))
  {
    uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet);
    if (v18)
    {
      unint64_t v19 = (unint64_t)[v18 modelData];
      if (!v19) {
        return v19;
      }
      uint64_t v92 = v13;
      uint64_t v93 = v10;
      uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;

      sub_100098A6C(v20, v22);
      uint64_t v23 = v9;
      unint64_t v24 = sub_100088FC0();
      ProtobufBuilder.init(serializedData:)();
      unint64_t v89 = v24;
      uint64_t v90 = v20;
      unint64_t v91 = v22;
      uint64_t v35 = v93;
      Swift::String v36 = *(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56);
      v36(v8, 0, 1, v23);
      os_log_type_t v37 = (void *)(v35 + 32);
      uint64_t v38 = *(void (**)(char *, char *, unint64_t))(v35 + 32);
      unint64_t v39 = v94;
      id v87 = v38;
      id v88 = v37;
      v38(v94, v8, v23);
      unint64_t v40 = v23;
      if (a1)
      {
        uint64_t v41 = swift_dynamicCastClass();
        if (v41)
        {
          os_log_type_t v42 = *(void **)(v41 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet);
          if (v42)
          {
            id v43 = a1;
            id v44 = [v42 modelData];
            if (v44)
            {
              uint64_t v45 = v44;
              uint64_t v46 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v48 = v47;

              sub_100098A6C(v46, v48);
              ProtobufBuilder.init(serializedData:)();
              v36(v6, 0, 1, v40);
              uint64_t v65 = v92;
              unint64_t v89 = v40;
              v87(v92, v6, v40);
              uint64_t v66 = Response.getComponentTypes()();
              uint64_t v67 = Response.getComponentTypes()();
              uint64_t v68 = (void *)v67;
              char v69 = *(void (**)(char *, char *, unint64_t))(v66 + 16);
              uint64_t v70 = v93;
              if (!v69)
              {
                uint64_t v79 = v90;
                unint64_t v80 = v91;
LABEL_57:
                sub_100088E54(v79, v80);
                sub_100088E54(v46, v48);
                swift_bridgeObjectRelease();

                uint64_t v81 = v68[2];
                swift_bridgeObjectRelease();
                unint64_t v19 = v81 == 0;
                unint64_t v82 = *(void (**)(char *, unint64_t))(v70 + 8);
                unint64_t v83 = v89;
                v82(v65, v89);
                v82(v94, v83);
                return v19;
              }
              id v88 = v43;
              unint64_t v71 = *(void *)(v67 + 16);
              if (!v71) {
                goto LABEL_58;
              }
              unint64_t v72 = 1;
              uint64_t v73 = (uint64_t *)(v66 + 32);
              while (2)
              {
                uint64_t v74 = 0;
                unint64_t v75 = 0;
                uint64_t v76 = *v73;
                while (v68[v74 + 4] != v76)
                {
                  unint64_t v77 = v75 + 1;
                  if (__OFADD__(v75, 1))
                  {
                    __break(1u);
                    goto LABEL_61;
                  }
                  ++v75;
                  v74 += 2;
                  if (v77 == v71)
                  {
                    uint64_t v70 = v93;
                    goto LABEL_58;
                  }
                }
                id v87 = v69;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v68 = sub_100098AC4(v68);
                }
                unint64_t v78 = v68[2];
                if (v78 <= v75)
                {
LABEL_61:
                  __break(1u);
                }
                else
                {
                  if ((uint64_t)(~v75 + v78) < 0)
                  {
LABEL_63:
                    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
                    __break(1u);
                    return result;
                  }
                  unint64_t v71 = v78 - 1;
                  memmove(&v68[v74 + 4], &v68[v74 + 6], 16 * (~v75 + v78));
                  v68[2] = v71;
                  char v69 = v87;
                  if ((void (*)(char *, char *, unint64_t))v72 == v87)
                  {
                    uint64_t v70 = v93;
                    uint64_t v79 = v90;
                    unint64_t v80 = v91;
                    id v43 = v88;
                    goto LABEL_57;
                  }
                  uint64_t v70 = v93;
                  if (v72 < *(void *)(v66 + 16))
                  {
                    uint64_t v73 = (uint64_t *)(v66 + 32 + 16 * v72++);
                    if (v71) {
                      continue;
                    }
LABEL_58:

                    sub_100088E54(v46, v48);
                    sub_100088E54(v90, v91);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t v84 = *(void (**)(char *, unint64_t))(v70 + 8);
                    unint64_t v85 = v89;
                    v84(v65, v89);
                    v84(v94, v85);
                    return 0;
                  }
                }
                break;
              }
              __break(1u);
              goto LABEL_63;
            }
          }
          sub_100088E54(v90, v91);
          (*(void (**)(char *, unint64_t))(v93 + 8))(v94, v40);
          return 0;
        }
      }
      sub_100088E54(v90, v91);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v39, v23);
    }
    return 0;
  }
  id v27 = v16;
  id v28 = a1;
  id v29 = v26;
  id v30 = [v27 bundleName];
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v34 = 0;
  }
  id v49 = [v29 bundleName];
  if (!v49)
  {
    if (!v34) {
      goto LABEL_31;
    }
    goto LABEL_29;
  }
  uint64_t v50 = v49;
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;

  if (!v34)
  {
    if (!v53) {
      goto LABEL_31;
    }
    goto LABEL_29;
  }
  if (!v53)
  {
LABEL_29:

    swift_bridgeObjectRelease();
    return 0;
  }
  if (v32 == v51 && v34 == v53)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v54 & 1) == 0)
  {

    return 0;
  }
LABEL_31:
  id v55 = [v27 responseViewId];
  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v58 = v57;

  id v59 = [v29 responseViewId];
  uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = v61;

  if (v56 != v60 || v58 != v62)
  {
    char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return v63 & 1;
  }
  swift_bridgeObjectRelease_n();

  return 1;
}

uint64_t Response.getComponentTypes()()
{
  uint64_t v1 = type metadata accessor for _ProtoResponse.Component();
  uint64_t v51 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v68 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for _ProtoResponse.Section();
  uint64_t v49 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v52 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for Section();
  uint64_t v54 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  id v59 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ComponentGroup();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v64 = (char *)&v48 - v10;
  uint64_t v50 = v0;
  uint64_t result = Response.group.getter();
  uint64_t v12 = 0;
  uint64_t v13 = *(void *)(result + 64);
  uint64_t v55 = result + 64;
  uint64_t v66 = result;
  uint64_t v14 = 1 << *(unsigned char *)(result + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v58 = (uint64_t (**)(char *, uint64_t))((unint64_t)(v14 + 63) >> 6);
  unint64_t v63 = v6 + 16;
  uint64_t v62 = v6 + 32;
  uint64_t v65 = v6;
  uint64_t v61 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
  BOOL v17 = _swiftEmptyArrayStorage;
  uint64_t v69 = v1;
  uint64_t v57 = v5;
  uint64_t v56 = v9;
  while (1)
  {
    if (v16)
    {
      uint64_t v67 = (v16 - 1) & v16;
      uint64_t v70 = v12;
      unint64_t v18 = __clz(__rbit64(v16)) | (v12 << 6);
      goto LABEL_21;
    }
    BOOL v19 = __OFADD__(v12, 1);
    uint64_t v20 = v12 + 1;
    if (v19) {
      goto LABEL_51;
    }
    if (v20 >= (uint64_t)v58)
    {
LABEL_34:
      swift_release();
      uint64_t result = Response.sections.getter();
      uint64_t v33 = result;
      id v64 = *(char **)(result + 16);
      if (!v64)
      {
LABEL_49:
        swift_bridgeObjectRelease();
        return (uint64_t)v17;
      }
      unint64_t v34 = 0;
      unint64_t v63 = result + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
      uint64_t v62 = v54 + 16;
      uint64_t v61 = (uint64_t (**)(char *, uint64_t))(v49 + 8);
      uint64_t v67 = v51 + 16;
      uint64_t v35 = (void (**)(char *, uint64_t))(v51 + 8);
      uint64_t v58 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
      uint64_t v57 = result;
      while (v34 < *(void *)(v33 + 16))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v59, v63 + *(void *)(v54 + 72) * v34, v60);
        Swift::String v36 = v52;
        Section.proto.getter();
        uint64_t v37 = _ProtoResponse.Section.componentList.getter();
        (*v61)(v36, v53);
        uint64_t v38 = *(void *)(v37 + 16);
        if (v38)
        {
          uint64_t v66 = v34;
          unint64_t v39 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
          uint64_t v65 = v37;
          unint64_t v40 = v37 + v39;
          uint64_t v70 = *(void *)(v51 + 72);
          uint64_t v41 = *(void (**)(char *, unint64_t, uint64_t))(v51 + 16);
          v41(v68, v37 + v39, v1);
          while (1)
          {
            Component.redactedComponent()();
            sub_10008907C(&v72, (uint64_t)&v75);
            sub_100095924(&v75, v76);
            uint64_t DynamicType = swift_getDynamicType();
            uint64_t v43 = v77;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              BOOL v17 = sub_100098868(0, v17[2] + 1, 1, v17);
            }
            unint64_t v45 = v17[2];
            unint64_t v44 = v17[3];
            if (v45 >= v44 >> 1) {
              BOOL v17 = sub_100098868((void *)(v44 > 1), v45 + 1, 1, v17);
            }
            v17[2] = v45 + 1;
            uint64_t v46 = &v17[2 * v45];
            v46[4] = DynamicType;
            v46[5] = v43;
            sub_100088F14((uint64_t)&v75);
            unint64_t v47 = v68;
            uint64_t v1 = v69;
            (*v35)(v68, v69);
            v40 += v70;
            if (!--v38) {
              break;
            }
            v41(v47, v40, v1);
          }
          swift_bridgeObjectRelease();
          uint64_t v33 = v57;
          unint64_t v34 = v66;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        ++v34;
        uint64_t result = (*v58)(v59, v60);
        if ((char *)v34 == v64) {
          goto LABEL_49;
        }
      }
      __break(1u);
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    unint64_t v21 = *(void *)(v55 + 8 * v20);
    if (!v21) {
      break;
    }
LABEL_20:
    uint64_t v67 = (v21 - 1) & v21;
    uint64_t v70 = v20;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
LABEL_21:
    uint64_t v23 = v65;
    unint64_t v24 = v64;
    (*(void (**)(char *, unint64_t, uint64_t))(v65 + 16))(v64, *(void *)(v66 + 56) + *(void *)(v65 + 72) * v18, v5);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v9, v24, v5);
    uint64_t v25 = ComponentGroup.components.getter();
    uint64_t v26 = *(void *)(v25 + 16);
    if (v26)
    {
      uint64_t v27 = v25 + 32;
      do
      {
        sub_1000958C0(v27, (uint64_t)&v75);
        sub_100095924(&v75, v76);
        Component.redactedComponent()();
        sub_10008907C(&v71, (uint64_t)&v72);
        sub_100095924(&v72, v73);
        uint64_t v28 = swift_getDynamicType();
        uint64_t v29 = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v17 = sub_100098868(0, v17[2] + 1, 1, v17);
        }
        unint64_t v31 = v17[2];
        unint64_t v30 = v17[3];
        if (v31 >= v30 >> 1) {
          BOOL v17 = sub_100098868((void *)(v30 > 1), v31 + 1, 1, v17);
        }
        v17[2] = v31 + 1;
        uint64_t v32 = &v17[2 * v31];
        v32[4] = v28;
        v32[5] = v29;
        sub_100088F14((uint64_t)&v72);
        sub_100088F14((uint64_t)&v75);
        v27 += 40;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
      uint64_t v1 = v69;
      uint64_t v5 = v57;
      uint64_t v9 = v56;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t result = (*v61)(v9, v5);
    uint64_t v12 = v70;
    unint64_t v16 = v67;
  }
  uint64_t v22 = v20 + 1;
  if (v20 + 1 >= (uint64_t)v58) {
    goto LABEL_34;
  }
  unint64_t v21 = *(void *)(v55 + 8 * v22);
  if (v21) {
    goto LABEL_19;
  }
  uint64_t v22 = v20 + 2;
  if (v20 + 2 >= (uint64_t)v58) {
    goto LABEL_34;
  }
  unint64_t v21 = *(void *)(v55 + 8 * v22);
  if (v21) {
    goto LABEL_19;
  }
  uint64_t v22 = v20 + 3;
  if (v20 + 3 >= (uint64_t)v58) {
    goto LABEL_34;
  }
  unint64_t v21 = *(void *)(v55 + 8 * v22);
  if (v21) {
    goto LABEL_19;
  }
  uint64_t v22 = v20 + 4;
  if (v20 + 4 >= (uint64_t)v58) {
    goto LABEL_34;
  }
  unint64_t v21 = *(void *)(v55 + 8 * v22);
  if (v21)
  {
LABEL_19:
    uint64_t v20 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v20 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v20 >= (uint64_t)v58) {
      goto LABEL_34;
    }
    unint64_t v21 = *(void *)(v55 + 8 * v20);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_1000958C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void *sub_100095924(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100095968()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_proceedToNextCommandAtSpeechSynthesisEnd);
}

id sub_100095978()
{
  return sub_100095A44();
}

void sub_100095980(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
    if (v3)
    {
      id v5 = v3;
      NSString v4 = String._bridgeToObjectiveC()();
      [v5 setPlayerState:1 aceId:v4];
    }
  }
}

void sub_100095A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

id sub_100095A3C()
{
  return sub_100095A44();
}

id sub_100095A44()
{
  id result = *(id *)(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
  if (result) {
    return [result postSiriEvent:];
  }
  return result;
}

id sub_100095A64()
{
  id result = *(id *)(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
  if (result) {
    return [result postSiriEvent:1];
  }
  return result;
}

void sub_100095A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_100095A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), SEL *a6)
{
  uint64_t v7 = *(void **)(v6 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet);
  if (v7)
  {
    id v13 = v7;
    uint64_t v12 = (void *)a5(a1, a2);
    [v13 *a6:v12];
  }
}

void sub_100095BCC(uint64_t a1, uint64_t a2)
{
  v17[1] = a2;
  id v2 = [objc_allocWithZone((Class)SAUIVisualResponseSnippet) init];
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v7 = v2;
  UUID.init()();
  UUID.uuidString.getter();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8((char *)v17 - v6, v3);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setAceId:v9];

  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v7 setModelData:isa];

  id v11 = (id)__chkstk_darwin([objc_allocWithZone((Class)SAUIAddViews) init]);
  UUID.init()();
  UUID.uuidString.getter();
  v8((char *)v17 - v6, v3);
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setAceId:v12];

  sub_10007D3B4(&qword_100171650);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000DCFA0;
  *(void *)(v13 + 32) = v7;
  v17[3] = v13;
  specialized Array._endMutation()();
  sub_100099554();
  id v14 = v7;
  Class v15 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 setViews:v15];

  id v16 = v11;
  sub_100098AD8((uint64_t)v16, 1, v17[2]);
}

void sub_100096108(double a1, double a2)
{
  id v5 = [v2 view];
  if (v5)
  {
    id v29 = v5;
    type metadata accessor for SRCarPlayScrollView();
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      id v7 = (char *)v6;
      _StringGuts.grow(_:)(29);
      v8._countAndFlagsBits = 0xD00000000000001BLL;
      v8._object = (void *)0x80000001000FA750;
      String.append(_:)(v8);
      type metadata accessor for CGSize(0);
      _print_unlocked<A, B>(_:_:)();
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      sub_10007DCA0(v9, (uint64_t)qword_100171AB0);
      os_log_type_t v10 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v10, 0x10uLL, 0xD00000000000001ALL, 0x80000001000FCE30, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      id v11 = (double *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetSize];
      *id v11 = a1;
      v11[1] = a2;
      [*(id *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint] setConstant:a2];
      [*(id *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint] setConstant:*v11];
      [*(id *)&v7[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint] setConstant:v11[1]];
      [v7 setNeedsUpdateConstraints];
      if (([self deviceSupportsAI] & 1) != 0 || a2 <= 0.0 || a2 > 48.0)
      {
        os_log_type_t v12 = static os_log_type_t.info.getter();
        sub_1000B2FEC(v12, 0x2000010uLL, 0xD00000000000001ALL, 0x80000001000FCE30, 0xD000000000000029, 0x80000001000FCE50);
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          id v14 = [Strong view];
          if (v14)
          {
            Class v15 = v14;
            type metadata accessor for SRCarPlayView();
            uint64_t v16 = swift_dynamicCastClass();
            if (v16)
            {
              BOOL v17 = *(void **)(v16 + OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetPlatterView);
              if (v17)
              {
                id v18 = v17;
                double v19 = 20.0;
LABEL_23:
                sub_1000A7860(v19);

                swift_unknownObjectRelease();
                return;
              }
            }
            goto LABEL_25;
          }
          goto LABEL_26;
        }
      }
      else
      {
        _StringGuts.grow(_:)(67);
        v20._countAndFlagsBits = 0xD000000000000041;
        v20._object = (void *)0x80000001000FCE80;
        String.append(_:)(v20);
        v21._countAndFlagsBits = Double.description.getter();
        String.append(_:)(v21);
        swift_bridgeObjectRelease();
        os_log_type_t v22 = static os_log_type_t.info.getter();
        sub_1000B2FEC(v22, 0x2000010uLL, 0xD00000000000001ALL, 0x80000001000FCE30, 0, 0xE000000000000000);
        swift_bridgeObjectRelease();
        uint64_t v23 = swift_unknownObjectWeakLoadStrong();
        if (v23)
        {
          unint64_t v24 = (void *)v23;
          if (qword_1001703F0 != -1) {
            swift_once();
          }
          uint64_t v25 = qword_100172CB0;
          id v26 = [v24 view];
          if (v26)
          {
            Class v15 = v26;
            type metadata accessor for SRCarPlayView();
            uint64_t v27 = swift_dynamicCastClass();
            if (v27)
            {
              uint64_t v28 = *(void **)(v27 + OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetPlatterView);
              if (v28)
              {
                id v18 = v28;
                double v19 = *(double *)&v25;
                goto LABEL_23;
              }
            }
LABEL_25:

            swift_unknownObjectRelease();
            return;
          }
LABEL_26:

          swift_unknownObjectRelease();
          return;
        }
      }
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
  }
}

void sub_1000965E4(void *a1)
{
  id v2 = v1;
  id v4 = [v2 view];
  if (v4)
  {
    id v14 = v4;
    type metadata accessor for SRCarPlayScrollView();
    if (swift_dynamicCastClass()) {
      BOOL v5 = a1 == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
      id v6 = a1;
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      id v7 = [v6 description];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      os_log_type_t v10 = v9;

      v11._countAndFlagsBits = v8;
      v11._object = v10;
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      sub_10007DCA0(v12, (uint64_t)qword_100171AB0);
      os_log_type_t v13 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v13, 0x2000010uLL, 0xD00000000000001FLL, 0x80000001000FCDE0, 0xD000000000000020, 0x80000001000FCE00);
      swift_bridgeObjectRelease();
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_1000A2664((uint64_t)v6);

        swift_unknownObjectRelease();
      }
      else
      {
      }
    }
  }
}

void sub_10009683C(uint64_t a1)
{
  id v3 = [v1 view];
  if (v3)
  {
    id v14 = v3;
    type metadata accessor for SRCarPlayScrollView();
    if (swift_dynamicCastClass())
    {
      _StringGuts.grow(_:)(37);
      v4._countAndFlagsBits = 0xD000000000000023;
      v4._object = (void *)0x80000001000FCD10;
      String.append(_:)(v4);
      type metadata accessor for VRXHostMaterial(0);
      _print_unlocked<A, B>(_:_:)();
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_10007DCA0(v5, (uint64_t)qword_100171AB0);
      os_log_type_t v6 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v6, 0x2000010uLL, 0xD000000000000022, 0x80000001000FCCE0, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v8 = [Strong view];
        if (v8)
        {
          uint64_t v9 = v8;
          type metadata accessor for SRCarPlayView();
          uint64_t v10 = swift_dynamicCastClass();
          if (v10)
          {
            Swift::String v11 = *(void **)(v10 + OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetPlatterView);
            if (v11)
            {
              id v12 = v11;
              sub_1000A7984(a1);

              swift_unknownObjectRelease();
            }
            else
            {

              swift_unknownObjectRelease();
            }
            return;
          }
        }
        os_log_type_t v13 = static os_log_type_t.info.getter();
        sub_1000B2FEC(v13, 0x10uLL, 0xD00000000000004CLL, 0x80000001000FCD40, 0xD000000000000041, 0x80000001000FCD90);

        swift_unknownObjectRelease();
        return;
      }
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
  }
}

uint64_t sub_100096C80(uint64_t a1)
{
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 32;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_10007DCA0(v5, (uint64_t)qword_100171AB0);
  os_log_type_t v6 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v6, 0x2000010uLL, 0xD000000000000019, 0x80000001000FCC90, 0xD000000000000020, 0x80000001000FCCB0);
  swift_bridgeObjectRelease();
  uint64_t v7 = v1 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = *(void *)(v7 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 + 8) + 72))(a1, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100096E60(void *a1)
{
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  unint64_t v55 = 0xD000000000000022;
  unint64_t v56 = 0x80000001000FCB60;
  id v2 = a1;
  id v3 = [v2 description];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  os_log_type_t v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = sub_10007DCA0(v8, (uint64_t)qword_100171AB0);
  os_log_type_t v10 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v10, 0x2000000uLL, 0xD00000000000001CLL, 0x80000001000FCB40, 0xD000000000000022, 0x80000001000FCB60);
  swift_bridgeObjectRelease();
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    id v12 = (id)v11;
    os_log_type_t v13 = self;
    id v14 = v2;
    id v15 = [v13 sharedManager];
    id v16 = [v15 currentInstrumentationTurnContext];

    id v17 = v16;
    if ([v12 requiresNewTurn])
    {
      id v50 = self;
      unint64_t v52 = (unint64_t)"o hide background.";
      id v18 = [v17 turnIdentifier];
      id v53 = v13;
      id v54 = v14;
      uint64_t v19 = type metadata accessor for UUID();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v51 = v9;
      uint64_t v21 = v20;
      uint64_t v22 = *(void *)(v20 + 64);
      __chkstk_darwin(v19);
      uint64_t v46 = v22;
      unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      unint64_t v47 = *(void (**)(char *, uint64_t))(v21 + 8);
      uint64_t v48 = v21 + 8;
      v47((char *)&v46 - v23, v19);
      id v25 = [v50 newTurnBasedContextWithPreviousTurnID:isa v46];
      id v49 = v25;

      unint64_t v55 = 0;
      unint64_t v56 = 0xE000000000000000;
      _StringGuts.grow(_:)(47);
      swift_bridgeObjectRelease();
      unint64_t v55 = 0xD00000000000001DLL;
      unint64_t v56 = 0x80000001000FCBE0;
      id v26 = [v25 turnIdentifier];
      __chkstk_darwin(v26);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100099508();
      v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      id v50 = v12;
      uint64_t v28 = v47;
      v47((char *)&v46 - v23, v19);
      v29._countAndFlagsBits = 0x646C4F203E2D3C20;
      v29._object = (void *)0xEE00206E72755420;
      String.append(_:)(v29);
      id v30 = [v17 turnIdentifier];

      __chkstk_darwin(v31);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v32._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      uint64_t v33 = v19;
      id v14 = v54;
      v28((char *)&v46 - v23, v33);
      id v12 = v50;
      uint64_t v34 = v55;
      unint64_t v35 = v56;
      os_log_type_t v36 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v36, 0x2000000uLL, 0xD00000000000001CLL, v52 | 0x8000000000000000, v34, v35);
      swift_bridgeObjectRelease();

      id v17 = v49;
      id v37 = [v53 sharedManager];
      [v37 storeCurrentInstrumentationTurnContext:v17];
    }
    else
    {
    }
    type metadata accessor for RFInteractionPerformed();
    if (swift_dynamicCastClass())
    {
      id v39 = v14;
      sub_1000974B0();
      dispatch thunk of RFInteractionPerformed.invocation.setter();
    }
    id v40 = [v17 turnIdentifier];
    uint64_t v41 = type metadata accessor for UUID();
    uint64_t v42 = *(void *)(v41 - 8);
    __chkstk_darwin(v41);
    unint64_t v44 = (char *)&v46 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    Class v45 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v41);
    [v12 emitWithTurnIdentifier:v45];
  }
  else
  {
    os_log_type_t v38 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v38, 0x2000000uLL, 0xD00000000000001CLL, 0x80000001000FCB40, 0xD000000000000045, 0x80000001000FCB90);
  }
}

id sub_1000974B0()
{
  id v1 = [objc_allocWithZone((Class)SISchemaInvocation) init];
  id v2 = [objc_allocWithZone((Class)SISchemaViewContainer) init];
  id v3 = v2;
  uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet);
  uint64_t v5 = v4;
  if (v4)
  {
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet);
    if (!v5)
    {
      id v12 = 0;
      if (!v3) {
        goto LABEL_29;
      }
      id v13 = v3;
      uint64_t v5 = 0;
      NSString v8 = 0;
LABEL_11:
      [v3 setViewID:v8];

      if (v5)
      {
        id v14 = (objc_class *)[v5 classForCoder];
        id v15 = v3;
        id v16 = NSStringFromClass(v14);
        if (!v16)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v16 = (NSString *)String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        [v15 setSnippetClass:v16];

        char v11 = 0;
        if (v1) {
          goto LABEL_15;
        }
        goto LABEL_16;
      }
LABEL_29:
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_10007DCA0(v31, (uint64_t)qword_100171AB0);
      os_log_type_t v32 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v32, 0x10uLL, 0xD000000000000015, 0x80000001000FCC00, 0xD000000000000034, 0x80000001000FCC20);
      uint64_t v5 = 0;
      char v11 = 1;
      if (v1) {
        goto LABEL_15;
      }
      goto LABEL_16;
    }
    id v9 = v5;
    if (v3)
    {
LABEL_3:
      id v6 = v4;
      id v7 = v3;
      NSString v8 = [v5 aceId];
      if (v8)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v8 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      goto LABEL_11;
    }
  }
  id v10 = v4;
  [v5 classForCoder];
  char v11 = 0;
  if (v1) {
LABEL_15:
  }
    [v1 setInvocationSource:11];
LABEL_16:
  [v1 setViewContainer:v3];
  id v17 = [objc_allocWithZone((Class)SISchemaCarPlayInvocationContext) init];
  id v18 = v17;
  if (!v17) {
    goto LABEL_24;
  }
  if (v11)
  {
    id v19 = v17;
  }
  else
  {
    id v21 = v17;
    id v22 = [v5 sash];
    NSString v20 = v22;
    if (!v22) {
      goto LABEL_23;
    }
    id v23 = [v22 applicationBundleIdentifier];

    if (v23)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
  }
  NSString v20 = 0;
LABEL_23:
  [v18 setBundleID:v20];

LABEL_24:
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_10007DCA0(v24, (uint64_t)qword_100171AB0);
  os_log_type_t v25 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v25, 0x10uLL, 0xD000000000000015, 0x80000001000FCC00, 0xD000000000000024, 0x80000001000FCC60);
  id v26 = [self sharedSystemState];
  if (v18)
  {
    id v27 = v18;
    [v26 carPlayEnhancedVoiceTriggerMode];
    [v27 setEnhancedVoiceTriggerMode:SASCarPlayEnhancedVoiceTriggerModeToSISchemaEnhancedVoiceTriggerMode()];

    id v28 = v27;
    [v26 carPlayTransportType];
    [v28 setCarPlayConnection:SASCarPlayTransportTypeToSISchemaCarPlayConnection()];
  }
  id v29 = v1;
  [v29 setCarPlayInvocationContext:v18];

  return v1;
}

uint64_t sub_1000979EC()
{
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10007DCA0(v1, (uint64_t)qword_100171AB0);
  os_log_type_t v2 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v2, 0x10uLL, 0xD00000000000001ALL, 0x80000001000FCAF0, 0xD000000000000022, 0x80000001000FCB10);
  uint64_t v3 = v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 56))(v0, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Int __swiftcall Response.getNumberOfSimpleItems()()
{
  uint64_t v0 = sub_10007D3B4(&qword_100171348);
  __chkstk_darwin(v0 - 8);
  unint64_t v52 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10007D3B4(&qword_100171350);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for _ProtoResponse.Component();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for _ProtoResponse.Section();
  uint64_t v9 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  unint64_t v44 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Section();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v48 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int result = Response.sections.getter();
  uint64_t v43 = *(void *)(result + 16);
  if (!v43)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v15 = 0;
  unint64_t v41 = result + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v40 = v12 + 16;
  id v39 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v49 = v6 + 16;
  uint64_t v36 = v6;
  uint64_t v16 = v12;
  id v17 = (void (**)(char *, uint64_t))(v6 + 8);
  unint64_t v18 = 0;
  uint64_t v42 = v16;
  id v37 = (void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v19 = (uint64_t)v52;
  uint64_t v35 = v11;
  Swift::Int v38 = result;
  while (1)
  {
    if (v18 >= *(void *)(result + 16)) {
      goto LABEL_26;
    }
    uint64_t v20 = *(void *)(v42 + 72);
    unint64_t v47 = v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v48, v41 + v20 * v18, v11);
    id v21 = v44;
    Section.redactedProto.getter();
    uint64_t v22 = _ProtoResponse.Section.componentList.getter();
    (*v39)(v21, v45);
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_4:
    unint64_t v18 = v47 + 1;
    (*v37)(v48, v11);
    Swift::Int result = v38;
    if (v18 == v43)
    {
      swift_bridgeObjectRelease();
      return v15;
    }
  }
  unint64_t v24 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v46 = v22;
  unint64_t v25 = v22 + v24;
  id v26 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
  uint64_t v50 = *(void *)(v36 + 72);
  uint64_t v51 = v26;
  v26(v8, v25, v5);
  while (1)
  {
    Component.redactedComponent()();
    (*v17)(v8, v5);
    sub_100098978((uint64_t)&v57, (uint64_t)v55);
    if (v56)
    {
      sub_10007D3B4(&qword_100171358);
      uint64_t v28 = type metadata accessor for SimpleItemRich();
      uint64_t v19 = (uint64_t)v52;
      int v29 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v4, v29 ^ 1u, 1, v28);
    }
    else
    {
      sub_1000826D0((uint64_t)v55, &qword_100171340);
      uint64_t v28 = type metadata accessor for SimpleItemRich();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v4, 1, 1, v28);
    }
    type metadata accessor for SimpleItemRich();
    int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v4, 1, v28);
    sub_1000989E0((uint64_t)&v57, (uint64_t)v55);
    if (!v30) {
      break;
    }
    sub_1000989E0((uint64_t)v55, (uint64_t)v53);
    if (v54)
    {
      sub_10007D3B4(&qword_100171358);
      uint64_t v31 = type metadata accessor for SimpleItemStandard();
      uint64_t v19 = (uint64_t)v52;
      int v32 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v19, v32 ^ 1u, 1, v31);
    }
    else
    {
      sub_1000826D0((uint64_t)v53, &qword_100171340);
      uint64_t v31 = type metadata accessor for SimpleItemStandard();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v19, 1, 1, v31);
    }
    type metadata accessor for SimpleItemStandard();
    int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v19, 1, v31);
    sub_1000826D0(v19, &qword_100171348);
    Swift::Int result = sub_1000826D0((uint64_t)v4, &qword_100171350);
    if (!v33) {
      goto LABEL_9;
    }
LABEL_10:
    v25 += v50;
    if (!--v23)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v35;
      goto LABEL_4;
    }
    v51(v8, v25, v5);
  }
  sub_1000826D0((uint64_t)v55, &qword_100171340);
  Swift::Int result = sub_1000826D0((uint64_t)v4, &qword_100171350);
LABEL_9:
  if (!__OFADD__(v15++, 1)) {
    goto LABEL_10;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

char *sub_100098280(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10007D3B4(&qword_100171028);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_100098DE4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100098390(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10007D3B4((uint64_t *)&unk_100171420);
  uint64_t v10 = *(void *)(sub_10007D3B4(&qword_1001716D0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  id v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_10007D3B4(&qword_1001716D0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100098ED8(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_100098600(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10007D3B4(&qword_100171450);
  uint64_t v10 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  id v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100099034(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_100098868(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10007D3B4((uint64_t *)&unk_100171458);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100099304(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100098978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007D3B4(&qword_100171340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000989E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007D3B4(&qword_100171340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SRCarPlayVisualResponseViewController()
{
  return self;
}

uint64_t sub_100098A6C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

void *sub_100098AC4(void *a1)
{
  return sub_100098868(0, a1[2], 0, a1);
}

uint64_t sub_100098AD8(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  _StringGuts.grow(_:)(77);
  v6._countAndFlagsBits = 0xD000000000000032;
  v6._object = (void *)0x80000001000FCF40;
  String.append(_:)(v6);
  swift_getObjectType();
  v25[1] = a1;
  swift_getWitnessTable();
  DefaultStringInterpolation.appendInterpolation<A>(_:)();
  v7._object = (void *)0x80000001000FCF80;
  v7._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v7);
  if (a2) {
    uint64_t v8 = 1702195828;
  }
  else {
    uint64_t v8 = 0x65736C6166;
  }
  if (a2) {
    unint64_t v9 = 0xE400000000000000;
  }
  else {
    unint64_t v9 = 0xE500000000000000;
  }
  unint64_t v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10007DCA0(v11, (uint64_t)qword_100171AB0);
  os_log_type_t v12 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v12, 0x10uLL, 0xD000000000000031, 0x80000001000FCFA0, v26, v27);
  swift_bridgeObjectRelease();
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = [self sharedManager];
  id v18 = [v17 currentInstrumentationTurnContext];

  id v19 = [v18 turnIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v20 = a3 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, char *, uint64_t))(*(void *)(v21 + 8) + 40))(a3, a1, v16, ObjectType);
    swift_unknownObjectRelease();
  }
  if (a2)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      [Strong clearSnippet];
      swift_unknownObjectRelease();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_100098DE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100098ED8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_10007D3B4(&qword_1001716D0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100099034(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for UUID() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10009918C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [self sharedManager];
  id v7 = [v6 currentInstrumentationTurnContext];

  id v8 = [v7 turnIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  id v9 = [objc_allocWithZone((Class)VRXSnippetRenderingContext) initWithRenderingEvent:a1];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v9 emitWithTurnIdentifier:isa];

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

char *sub_100099304(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    id v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000993F0()
{
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_10007DCA0(v1, (uint64_t)qword_100171AB0);
  os_log_type_t v2 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v2, 0x10uLL, 0xD000000000000017, 0x80000001000FA770, 0xD000000000000036, 0x80000001000FA790);
  uint64_t v3 = v0 + OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 + 8) + 24))(v0, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_100099508()
{
  unint64_t result = qword_100171430;
  if (!qword_100171430)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171430);
  }
  return result;
}

unint64_t sub_100099554()
{
  unint64_t result = qword_100171440;
  if (!qword_100171440)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100171440);
  }
  return result;
}

void sub_100099594(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  id v4 = [objc_allocWithZone((Class)SiriUISnippetManager) init];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 safeDisambiguationItemForListItem:v3 disambiguationKey:0];
  }
  else
  {
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10007DCA0(v7, (uint64_t)qword_100171AB0);
    os_log_type_t v8 = static os_log_type_t.fault.getter();
    sub_1000B2FEC(v8, 0, 0xD000000000000018, 0x80000001000FD0F0, 0xD00000000000002FLL, 0x80000001000FD110);
    id v6 = 0;
  }
  *a2 = v6;
}

void *sub_1000996A0(unint64_t a1)
{
  os_log_type_t v2 = v1;
  unint64_t result = [v1 items];
  if (!result)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v5 = result;
  sub_100088F64();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7 == v13)
    {
LABEL_6:
      unint64_t result = [v2 items];
      if (result)
      {
        os_log_type_t v8 = result;
        uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v10 = swift_bridgeObjectRetain();
        sub_100099DF0(v10, v9);
        uint64_t v12 = v11;
        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        return v12;
      }
      goto LABEL_18;
    }
  }
  else if (v7 == *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_6;
  }
  _StringGuts.grow(_:)(112);
  v14._countAndFlagsBits = 0xD000000000000037;
  v14._object = (void *)0x80000001000FD060;
  String.append(_:)(v14);
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0xD000000000000021;
  v16._object = (void *)0x80000001000FD0A0;
  String.append(_:)(v16);
  unint64_t result = [v2 items];
  if (result)
  {
    id v17 = result;
    unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    v20._object = (void *)0x80000001000FD0D0;
    v20._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v20);
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_10007DCA0(v21, (uint64_t)qword_100171AB0);
    os_log_type_t v22 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v22, 0x10uLL, 0x726628736C6C6563, 0xEC000000293A6D6FLL, 0, 0xE000000000000000);
    uint64_t v12 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
LABEL_19:
  __break(1u);
  return result;
}

id sub_1000999F4(void *a1, void *a2)
{
  uint64_t v4 = sub_10007D3B4(&qword_100171468);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v38 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v38 - v11;
  id v13 = [a2 commands];
  if (v13)
  {
    Swift::String v14 = v13;
    sub_10007D3B4((uint64_t *)&unk_100171470);
    uint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v15 = 0;
  }
  sub_1000A88E8(v15, (uint64_t)v12);
  swift_bridgeObjectRelease();
  id v16 = [a1 headingText];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    uint64_t v58 = &type metadata for String;
    id v59 = &protocol witness table for String;
    uint64_t v56 = v18;
    uint64_t v57 = v20;
    uint64_t v55 = 0;
    long long v53 = 0u;
    long long v54 = 0u;
    id v21 = [a1 title];
    if (v21)
    {
      os_log_type_t v22 = v21;
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;

      *((void *)&v51 + 1) = &type metadata for String;
      unint64_t v52 = &protocol witness table for String;
      *(void *)&long long v50 = v23;
      *((void *)&v50 + 1) = v25;
    }
    else
    {
      unint64_t v52 = 0;
      long long v50 = 0u;
      long long v51 = 0u;
    }
    uint64_t v49 = 0;
    long long v47 = 0u;
    long long v48 = 0u;
    uint64_t v46 = 0;
    long long v44 = 0u;
    long long v45 = 0u;
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
    sub_10009A3BC((uint64_t)v12, (uint64_t)v10);
    uint64_t v34 = type metadata accessor for Command();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v10, 1, v34) != 1)
    {
      *((void *)&v39 + 1) = v34;
      uint64_t v40 = &protocol witness table for Command;
      uint64_t v36 = sub_100089018((uint64_t *)&v38);
      (*(void (**)(uint64_t *, char *, uint64_t))(v35 + 32))(v36, v10, v34);
      goto LABEL_16;
    }
    uint64_t v33 = (uint64_t)v10;
LABEL_13:
    sub_10009A424(v33);
    long long v38 = 0u;
    long long v39 = 0u;
    uint64_t v40 = 0;
LABEL_16:
    SimpleItemStandard.init(text1:text2:text3:text4:text5:text6:action:componentName:linkIdentifier:)();
    return (id)sub_10009A424((uint64_t)v12);
  }
  id result = [a1 title];
  if (result)
  {
    unint64_t v27 = result;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;

    uint64_t v58 = &type metadata for String;
    id v59 = &protocol witness table for String;
    uint64_t v56 = v28;
    uint64_t v57 = v30;
    uint64_t v55 = 0;
    long long v53 = 0u;
    long long v54 = 0u;
    unint64_t v52 = 0;
    long long v50 = 0u;
    long long v51 = 0u;
    uint64_t v49 = 0;
    long long v47 = 0u;
    long long v48 = 0u;
    uint64_t v46 = 0;
    long long v44 = 0u;
    long long v45 = 0u;
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
    sub_10009A3BC((uint64_t)v12, (uint64_t)v7);
    uint64_t v31 = type metadata accessor for Command();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v7, 1, v31) != 1)
    {
      *((void *)&v39 + 1) = v31;
      uint64_t v40 = &protocol witness table for Command;
      id v37 = sub_100089018((uint64_t *)&v38);
      (*(void (**)(uint64_t *, char *, uint64_t))(v32 + 32))(v37, v7, v31);
      goto LABEL_16;
    }
    uint64_t v33 = (uint64_t)v7;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_100099DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = type metadata accessor for SimpleItemStandard();
  uint64_t v4 = *(void *)(v43 - 8);
  uint64_t v5 = __chkstk_darwin(v43);
  uint64_t v7 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v35 - v8;
  unint64_t v38 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_3;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_3:
    unint64_t v46 = (unint64_t)a2 >> 62;
    if ((unint64_t)a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v12 = v11 >= v10 ? v10 : v11;
    long long v48 = _swiftEmptyArrayStorage;
    long long v41 = (char *)(v12 & ~(v12 >> 63));
    sub_1000879C0(0, (int64_t)v41, 0);
    if (v12 < 0) {
      break;
    }
    id v13 = v48;
    uint64_t v45 = a1;
    if (!v12)
    {
      uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v47 = a1 & 0xC000000000000001;
      uint64_t v15 = a2 & 0xFFFFFFFFFFFFFF8;
      unint64_t v44 = a2 & 0xC000000000000001;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_36;
    }
    uint64_t v36 = v9;
    uint64_t v42 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v38)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    id v16 = 0;
    unint64_t v47 = a1 & 0xC000000000000001;
    uint64_t v15 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0) {
      uint64_t v17 = a2;
    }
    else {
      uint64_t v17 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v37 = v17;
    unint64_t v44 = a2 & 0xC000000000000001;
    uint64_t v39 = v4 + 32;
    uint64_t v9 = (char *)v12;
    while (v41 != v16)
    {
      if ((char *)v40 == v16) {
        goto LABEL_68;
      }
      if (v47)
      {
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((unint64_t)v16 >= *(void *)(v42 + 16)) {
          goto LABEL_75;
        }
        id v18 = *(id *)(a1 + 8 * (void)v16 + 32);
      }
      uint64_t v12 = (uint64_t)v18;
      if (v46)
      {
        swift_bridgeObjectRetain();
        a1 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        a1 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v16 == (char *)a1) {
        goto LABEL_79;
      }
      if (v44)
      {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((unint64_t)v16 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_69;
        }
        id v19 = *(id *)(a2 + 8 * (void)v16 + 32);
      }
      uint64_t v20 = v19;
      sub_1000999F4((void *)v12, v19);

      long long v48 = v13;
      unint64_t v22 = v13[2];
      unint64_t v21 = v13[3];
      if (v22 >= v21 >> 1)
      {
        sub_1000879C0(v21 > 1, v22 + 1, 1);
        id v13 = v48;
      }
      ++v16;
      v13[2] = v22 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))((unint64_t)v13+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v22, v7, v43);
      a1 = v45;
      if (v9 == v16)
      {
        uint64_t v12 = (uint64_t)v9;
        uint64_t v9 = v36;
        uint64_t v14 = v42;
LABEL_36:
        if (a1 < 0) {
          uint64_t v23 = a1;
        }
        else {
          uint64_t v23 = v14;
        }
        if (a2 < 0) {
          uint64_t v24 = a2;
        }
        else {
          uint64_t v24 = v15;
        }
        uint64_t v39 = v24;
        uint64_t v40 = v23;
        long long v41 = (char *)(v4 + 32);
        uint64_t v42 = v14;
        uint64_t v7 = v12 + 4;
        if (!v38)
        {
LABEL_43:
          uint64_t v25 = *(void *)(v42 + 16);
          goto LABEL_45;
        }
        while (1)
        {
          swift_bridgeObjectRetain();
          uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
LABEL_45:
          unint64_t v26 = v7 - 4;
          if (v7 - 4 == v25)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          if (v47)
          {
            id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v26 & 0x8000000000000000) != 0) {
              goto LABEL_70;
            }
            if (v26 >= *(void *)(v42 + 16)) {
              goto LABEL_71;
            }
            id v27 = *(id *)(a1 + 8 * v7);
          }
          uint64_t v28 = v27;
          if (__OFADD__(v26, 1)) {
            goto LABEL_72;
          }
          if (v46)
          {
            swift_bridgeObjectRetain();
            uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v26 == v29)
            {
LABEL_66:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              return;
            }
          }
          else if (v26 == *(void *)(v15 + 16))
          {
            goto LABEL_66;
          }
          a1 = v45;
          if (v44)
          {
            id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v26 & 0x8000000000000000) != 0) {
              goto LABEL_73;
            }
            if (v26 >= *(void *)(v15 + 16)) {
              goto LABEL_74;
            }
            id v30 = *(id *)(a2 + 8 * v7);
          }
          uint64_t v31 = v30;
          sub_1000999F4(v28, v30);

          long long v48 = v13;
          uint64_t v32 = v9;
          unint64_t v34 = v13[2];
          unint64_t v33 = v13[3];
          if (v34 >= v33 >> 1)
          {
            sub_1000879C0(v33 > 1, v34 + 1, 1);
            id v13 = v48;
          }
          v13[2] = v34 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v13+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v34, v32, v43);
          ++v7;
          uint64_t v9 = v32;
          if (!v38) {
            goto LABEL_43;
          }
        }
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
  }
  __break(1u);
LABEL_79:

  __break(1u);
}

uint64_t sub_10009A3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10007D3B4(&qword_100171468);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10009A424(uint64_t a1)
{
  uint64_t v2 = sub_10007D3B4(&qword_100171468);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for DefaultDisambiguationItemConverter()
{
  return &type metadata for DefaultDisambiguationItemConverter;
}

uint64_t sub_10009A494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000826D0(a1, &qword_100171280);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

void SiriUISuggestion.init()()
{
}

id SiriUISuggestion.__deallocating_deinit()
{
  return sub_10009B638(0, type metadata accessor for SiriUISuggestion);
}

uint64_t type metadata accessor for SiriUISuggestion()
{
  uint64_t result = qword_1001714B8;
  if (!qword_1001714B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10009AB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  void v7[5] = a4;
  v7[6] = a5;
  uint64_t v8 = type metadata accessor for SiriSuggestions.Suggestion();
  v7[9] = v8;
  v7[10] = *(void *)(v8 - 8);
  v7[11] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DeliveryVehicle();
  v7[12] = v9;
  v7[13] = *(void *)(v9 - 8);
  v7[14] = swift_task_alloc();
  sub_10007D3B4(&qword_100171510);
  v7[15] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for PreGeneratedSiriHint();
  v7[16] = v10;
  v7[17] = *(void *)(v10 - 8);
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  return _swift_task_switch(sub_10009AD04, 0, 0);
}

uint64_t sub_10009AD04()
{
  type metadata accessor for SiriSuggestionsFacade();
  v0[20] = SiriSuggestionsFacade.__allocating_init()();
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = enum case for SiriHintsMode.spoken(_:);
  uint64_t v5 = type metadata accessor for SiriHintsMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v1, v4, v5);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for DeliveryVehicle.siriHints(_:), v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[21] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10009AFD8;
  uint64_t v8 = v0[14];
  uint64_t v7 = v0[15];
  uint64_t v9 = v0[5];
  v10.n128_u64[0] = 0.5;
  return SiriSuggestionsFacade.fetchTopPreGeneratedSiriHint(requestUUID:forDeliveryVehicle:timeoutSeconds:)(v7, v9, v8, v10);
}

uint64_t sub_10009AFD8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  uint64_t v2 = *(void *)(*(void *)v0 + 104);
  uint64_t v3 = *(void *)(*(void *)v0 + 96);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10009B14C, 0, 0);
}

uint64_t sub_10009B14C()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000826D0(v3, &qword_100171510);
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v4 = (void (*)(void))v0[7];
    uint64_t v5 = type metadata accessor for Logger();
    sub_10007DCA0(v5, (uint64_t)qword_100171AB0);
    os_log_type_t v6 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v6, 0, 0xD00000000000002ALL, 0x80000001000FD250, 0xD00000000000001FLL, 0x80000001000FD340);
    v4(0);
  }
  else
  {
    uint64_t v8 = v0[10];
    uint64_t v7 = v0[11];
    uint64_t v9 = v0[9];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[19], v3, v1);
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    PreGeneratedSiriHint.topHint.getter();
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = swift_task_alloc();
    SiriSuggestions.Suggestion.identifier.getter();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    sub_100099508();
    v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v10);
    swift_task_dealloc();
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v15 = v0[18];
    uint64_t v14 = v0[19];
    uint64_t v16 = v0[16];
    uint64_t v17 = v0[17];
    unint64_t v26 = (void (*)(id))v0[7];
    id v18 = (void *)v0[6];
    uint64_t v19 = type metadata accessor for Logger();
    sub_10007DCA0(v19, (uint64_t)qword_100171AB0);
    os_log_type_t v20 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v20, 0, 0xD00000000000002ALL, 0x80000001000FD250, 0xD000000000000019, 0x80000001000FD360);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v14, v16);
    id v21 = objc_allocWithZone((Class)type metadata accessor for SiriUISuggestion());
    id v22 = v18;
    id v23 = sub_10009B730(v15, v22);

    v26(v23);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

id SiriUISpokenSuggestionsProvider.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SiriUISpokenSuggestionsProvider();
  return [super init];
}

uint64_t type metadata accessor for SiriUISpokenSuggestionsProvider()
{
  return self;
}

id SiriUISpokenSuggestionsProvider.__deallocating_deinit(uint64_t a1)
{
  return sub_10009B638(a1, type metadata accessor for SiriUISpokenSuggestionsProvider);
}

id sub_10009B638(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_10009B670()
{
  return type metadata accessor for SiriUISuggestion();
}

uint64_t sub_10009B678()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_10009B730(uint64_t a1, void *a2)
{
  uint64_t v32 = type metadata accessor for SiriSuggestions.SuggestionPresentation();
  uint64_t v5 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SiriSuggestions.Suggestion();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v2[OBJC_IVAR____TtC4Siri16SiriUISuggestion_addViews] = a2;
  uint64_t v12 = v2;
  id v13 = a2;
  PreGeneratedSiriHint.topHint.getter();
  SiriSuggestions.Suggestion.presentation.getter();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  uint64_t v15 = SiriSuggestions.SuggestionPresentation.spokenText.getter();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v32);
  id v18 = (uint64_t *)&v12[OBJC_IVAR____TtC4Siri16SiriUISuggestion_spokenText];
  *id v18 = v15;
  v18[1] = v17;
  uint64_t v19 = a1;
  PreGeneratedSiriHint.topHint.getter();
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  SiriSuggestions.Suggestion.identifier.getter();
  v14(v11, v8);
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v12[OBJC_IVAR____TtC4Siri16SiriUISuggestion_suggestionId], v23, v20);
  uint64_t v24 = PreGeneratedSiriHint.exposureCallback.getter();
  uint64_t v25 = (uint64_t *)&v12[OBJC_IVAR____TtC4Siri16SiriUISuggestion_exposureCallback];
  *uint64_t v25 = v24;
  v25[1] = v26;

  uint64_t v27 = (objc_class *)type metadata accessor for SiriUISuggestion();
  v33.receiver = v12;
  v33.super_class = v27;
  id v28 = [super init];
  uint64_t v29 = type metadata accessor for PreGeneratedSiriHint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v19, v29);
  return v28;
}

void sub_10009BA30(void *a1, void (**a2)(void, void))
{
  uint64_t v4 = sub_10007D3B4(&qword_100171280);
  __chkstk_darwin(v4 - 8);
  uint64_t v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10007D3B4((uint64_t *)&unk_100171700);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  _Block_copy(a2);
  long long v41 = a1;
  id v14 = [a1 refId];
  if (v14)
  {
    uint64_t v15 = v14;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
    {
      sub_1000826D0((uint64_t)v13, (uint64_t *)&unk_100171700);
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_10007DCA0(v16, (uint64_t)qword_100171AB0);
      os_log_type_t v17 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v17, 0, 0xD00000000000002ALL, 0x80000001000FD250, 0xD000000000000027, 0x80000001000FD280);
      a2[2](a2, 0);
    }
    else
    {
      id v18 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
      uint64_t v38 = v8 + 32;
      uint64_t v39 = v6;
      uint64_t v37 = v18;
      v18((unint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v13, v7);
      uint64_t v42 = 0;
      unint64_t v43 = 0xE000000000000000;
      _StringGuts.grow(_:)(69);
      v19._countAndFlagsBits = 0xD000000000000043;
      v19._object = (void *)0x80000001000FD2B0;
      String.append(_:)(v19);
      sub_100099508();
      v20._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      uint64_t v21 = v42;
      unint64_t v22 = v43;
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_10007DCA0(v23, (uint64_t)qword_100171AB0);
      os_log_type_t v24 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v24, 0, 0xD00000000000002ALL, 0x80000001000FD250, v21, v22);
      swift_bridgeObjectRelease();
      uint64_t v25 = type metadata accessor for TaskPriority();
      uint64_t v26 = (uint64_t)v40;
      uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v40, 1, 1, v25);
      __chkstk_darwin(v27);
      id v28 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v28, v28, v7);
      unint64_t v29 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      unint64_t v30 = (v9 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = 0;
      *(void *)(v31 + 24) = 0;
      v37(v31 + v29, v28, v7);
      uint64_t v32 = v41;
      *(void *)(v31 + v30) = v41;
      objc_super v33 = (uint64_t (**)())(v31 + ((v30 + 15) & 0xFFFFFFFFFFFFFFF8));
      unint64_t v34 = (uint64_t (*)())v39;
      void *v33 = sub_10009BF84;
      v33[1] = v34;
      id v35 = v32;
      swift_retain();
      sub_10009A494(v26, (uint64_t)&unk_1001714F8, v31);
      swift_release();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    swift_release();
  }
  else
  {
    _Block_release(a2);
    __break(1u);
  }
}

uint64_t sub_10009BF4C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10009BF84()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_10009BF98()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

uint64_t sub_10009C094(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = v1 + v5;
  uint64_t v11 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  id v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  void *v14 = v2;
  v14[1] = sub_100093C28;
  return sub_10009AB48(a1, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_10009C1D8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10009C210(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100093C28;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100171500 + dword_100171500);
  return v6(a1, v4);
}

id sub_10009C2CC()
{
  uint64_t v1 = v0;
  uint64_t v91 = type metadata accessor for Response();
  uint64_t v82 = *(void *)(v91 - 8);
  uint64_t v2 = __chkstk_darwin(v91);
  uint64_t v4 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v81 = (char *)&v79 - v5;
  uint64_t v6 = type metadata accessor for BinaryButton();
  uint64_t v93 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for Button.LabelStyle();
  uint64_t v106 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v103 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for _ProtoButton.FormAction();
  uint64_t v87 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  long long v100 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for ButtonRole();
  uint64_t v105 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for Button();
  uint64_t v12 = *(void *)(v90 - 8);
  uint64_t v13 = __chkstk_darwin(v90);
  uint64_t v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v85 = (char *)&v79 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v104 = (char *)&v79 - v19;
  __chkstk_darwin(v18);
  v107 = (char *)&v79 - v20;
  uint64_t v96 = type metadata accessor for SystemTextClarificationTitle();
  uint64_t v95 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  unint64_t v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100170448 != -1) {
    swift_once();
  }
  unint64_t v80 = v4;
  uint64_t v23 = type metadata accessor for Logger();
  sub_10007DCA0(v23, (uint64_t)qword_100171AB0);
  os_log_type_t v24 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v24, 0x10uLL, 0xD000000000000019, 0x80000001000FD380, 0xD00000000000003ELL, 0x80000001000FD3A0);
  id v25 = [v1 subtitle];
  if (v25 || (id v25 = [v1 title]) != 0)
  {
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;

    uint64_t v29 = v28;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v29 = 0xE000000000000000;
  }
  v117[3] = (uint64_t)&type metadata for String;
  v117[4] = (uint64_t)&protocol witness table for String;
  v117[0] = v26;
  v117[1] = v29;
  memset(v116, 0, sizeof(v116));
  uint64_t v83 = v29;
  swift_bridgeObjectRetain();
  uint64_t v94 = v22;
  SystemTextClarificationTitle.init(text1:action:)();
  id v30 = [v1 confirmCommands];
  if (v30)
  {
    uint64_t v31 = v30;
    sub_10007D3B4((uint64_t *)&unk_100171470);
    unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v32 = 0;
  }
  sub_10009D024(v32, v117);
  swift_bridgeObjectRelease();
  id v33 = [v1 denyCommands];
  uint64_t v89 = v12;
  if (v33)
  {
    unint64_t v34 = v33;
    sub_10007D3B4((uint64_t *)&unk_100171470);
    unint64_t v35 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v35 = 0;
  }
  sub_10009D024(v35, v116);
  swift_bridgeObjectRelease();
  sub_1000958C0((uint64_t)v117, (uint64_t)v115);
  id v36 = [v1 confirmText];
  uint64_t v92 = v8;
  uint64_t v101 = v6;
  id v88 = v15;
  id v86 = v1;
  uint64_t v84 = v26;
  if (v36)
  {
    uint64_t v37 = v36;
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v40 = v39;

    uint64_t v113 = &type metadata for String;
    v114 = &protocol witness table for String;
    if (v40) {
      goto LABEL_17;
    }
    uint64_t v38 = 0;
  }
  else
  {
    uint64_t v38 = 0;
    uint64_t v113 = &type metadata for String;
    v114 = &protocol witness table for String;
  }
  unint64_t v40 = 0xE000000000000000;
LABEL_17:
  uint64_t v41 = v106;
  uint64_t v111 = v38;
  unint64_t v112 = v40;
  uint64_t v110 = 0;
  long long v109 = 0u;
  long long v108 = 0u;
  uint64_t v42 = *(void (**)(char *, void, uint64_t))(v105 + 104);
  v105 += 104;
  v42(v98, enum case for ButtonRole.preferred(_:), v97);
  uint64_t v43 = enum case for _ProtoButton.FormAction.none(_:);
  unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 104);
  v44(v100, enum case for _ProtoButton.FormAction.none(_:), v99);
  uint64_t v45 = enum case for Button.LabelStyle.automatic(_:);
  unint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 104);
  uint64_t v106 = v41 + 104;
  v46(v103, enum case for Button.LabelStyle.automatic(_:), v102);
  Button.init(action:label:thumbnail:formAction:labelStyle:buttonRole:componentName:linkIdentifier:)();
  sub_1000958C0((uint64_t)v116, (uint64_t)v115);
  id v47 = [v86 denyText];
  if (v47)
  {
    long long v48 = v47;
    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v51 = v50;

    uint64_t v113 = &type metadata for String;
    v114 = &protocol witness table for String;
    if (v51) {
      goto LABEL_22;
    }
    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 0;
    uint64_t v113 = &type metadata for String;
    v114 = &protocol witness table for String;
  }
  unint64_t v51 = 0xE000000000000000;
LABEL_22:
  unint64_t v52 = v81;
  uint64_t v111 = v49;
  unint64_t v112 = v51;
  uint64_t v110 = 0;
  long long v109 = 0u;
  long long v108 = 0u;
  v44(v100, v43, v99);
  v46(v103, v45, v102);
  v42(v98, enum case for ButtonRole.standard(_:), v97);
  long long v53 = v104;
  Button.init(action:label:thumbnail:formAction:labelStyle:buttonRole:componentName:linkIdentifier:)();
  uint64_t v54 = v89;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
  uint64_t v56 = v90;
  v55(v85, v107, v90);
  v55(v88, v53, v56);
  uint64_t v57 = v92;
  BinaryButton.init(primaryButton:secondaryButton:componentName:linkIdentifier:)();
  id v58 = [objc_allocWithZone((Class)SAUIVisualResponseSnippet) init];
  unint64_t v59 = v83;
  swift_bridgeObjectRelease();
  if ((v59 & 0x2000000000000000) != 0) {
    uint64_t v60 = HIBYTE(v59) & 0xF;
  }
  else {
    uint64_t v60 = v84 & 0xFFFFFFFFFFFFLL;
  }
  sub_10007D3B4(&qword_100171010);
  if (v60)
  {
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_1000DD0F0;
    uint64_t v62 = v96;
    *(void *)(v61 + 56) = v96;
    *(void *)(v61 + 64) = &protocol witness table for SystemTextClarificationTitle;
    unint64_t v63 = sub_100089018((uint64_t *)(v61 + 32));
    (*(void (**)(uint64_t *, char *, uint64_t))(v95 + 16))(v63, v94, v62);
    uint64_t v64 = v101;
    *(void *)(v61 + 96) = v101;
    *(void *)(v61 + 104) = &protocol witness table for BinaryButton;
    uint64_t v65 = sub_100089018((uint64_t *)(v61 + 72));
    uint64_t v66 = v93;
    (*(void (**)(uint64_t *, char *, uint64_t))(v93 + 16))(v65, v57, v64);
    unint64_t v52 = v80;
  }
  else
  {
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_1000DD100;
    uint64_t v68 = v101;
    *(void *)(v67 + 56) = v101;
    *(void *)(v67 + 64) = &protocol witness table for BinaryButton;
    uint64_t v69 = sub_100089018((uint64_t *)(v67 + 32));
    uint64_t v66 = v93;
    (*(void (**)(uint64_t *, char *, uint64_t))(v93 + 16))(v69, v57, v68);
  }
  Response.init(_:backgrounds:ornaments:hideRedactedElements:)();
  sub_10009D6FC((unint64_t *)&qword_100171008, (void (*)(uint64_t))&type metadata accessor for Response);
  uint64_t v70 = v91;
  uint64_t v71 = ProtobufBuilder.serializedData()();
  unint64_t v73 = v72;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v70);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100088E54(v71, v73);
  [v58 setModelData:isa];

  id v75 = v58;
  NSString v76 = String._bridgeToObjectiveC()();
  [v75 setViewId:v76];

  (*(void (**)(char *, uint64_t))(v66 + 8))(v57, v101);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v54 + 8);
  v77(v104, v56);
  v77(v107, v56);
  sub_100088F14((uint64_t)v116);
  sub_100088F14((uint64_t)v117);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v96);
  return v75;
}

uint64_t sub_10009D024@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Command();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = *(void (**)(char *, void, uint64_t))(v5 + 104);
  v11((char *)&v23 - v9, enum case for Command.noOp(_:), v4);
  if (!a1) {
    goto LABEL_12;
  }
  if (!(a1 >> 62))
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    sub_10007D3B4(&qword_100171518);
    uint64_t v16 = swift_allocObject();
    long long v23 = xmmword_1000DD100;
    *(_OWORD *)(v16 + 16) = xmmword_1000DD100;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    sub_10007D3B4(&qword_100171520);
    uint64_t v17 = type metadata accessor for _ProtoIdiom();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v24 = v4;
    uint64_t v19 = a2;
    uint64_t v20 = v18;
    unint64_t v21 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = v23;
    (*(void (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, enum case for _ProtoIdiom.default(_:), v17);
    sub_10009D3E0(v22);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(v16 + 56) = type metadata accessor for ActionElement();
    *(void *)(v16 + 64) = &protocol witness table for ActionElement;
    sub_100089018((uint64_t *)(v16 + 32));
    ActionElement.init(_:text:idioms:)();
    v19[3] = type metadata accessor for ActionProperty();
    void v19[4] = (uint64_t)&protocol witness table for ActionProperty;
    sub_100089018(v19);
    ActionProperty.init(_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v24);
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_11;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    swift_bridgeObjectRelease();
    self;
    uint64_t v14 = swift_dynamicCastObjCClass();
    if (v14)
    {
      uint64_t v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      *(void *)uint64_t v10 = v15;
      v10[8] = 1;
      v11(v10, enum case for Command.aceCommand(_:), v4);
    }
    else
    {
      swift_unknownObjectRelease();
    }
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void *sub_10009D3E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for _ProtoIdiom();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_10007D3B4(&qword_100171528);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    unint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v33 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = v8;
    unint64_t v32 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v13 * v10, v2);
      sub_10009D6FC(&qword_100171530, (void (*)(uint64_t))&type metadata accessor for _ProtoIdiom);
      uint64_t v15 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        uint64_t v21 = ~v16;
        do
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v17 * v13, v2);
          sub_10009D6FC(&qword_100171538, (void (*)(uint64_t))&type metadata accessor for _ProtoIdiom);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v14;
          (*v14)(v6, v2);
          if (v23)
          {
            v24(v37, v2);
            uint64_t v11 = v22;
            uint64_t v8 = v31;
            goto LABEL_4;
          }
          unint64_t v17 = (v17 + 1) & v21;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          uint64_t v11 = v22;
        }
        while ((v19 & (1 << v17)) != 0);
        uint64_t v8 = v31;
      }
      id v25 = v37;
      *(void *)(v36 + 8 * v18) = v20 | v19;
      uint64_t result = (void *)(*v32)(*(void *)(v9 + 48) + v17 * v13, v25, v2);
      uint64_t v27 = *(void *)(v9 + 16);
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        break;
      }
      *(void *)(v9 + 16) = v29;
LABEL_4:
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v8) {
        return (void *)v9;
      }
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_10009D6FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10009D82C()
{
  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for SRCarPlayScrollViewController();
  [super viewWillLayoutSubviews];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for SRCarPlayScrollView();
    uint64_t v3 = (char *)swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = [v3 accessoryViewAtEdge:(*((unsigned char *)v0 + OBJC_IVAR____TtC4Siri29SRCarPlayScrollViewController_isRightHandDrive) ^ ~SiriLanguageIsRTL()) & 1];
      if (v5)
      {
        uint64_t v6 = v5;
        self;
        uint64_t v7 = swift_dynamicCastObjCClass();
        if (v7)
        {
          uint64_t v8 = (void *)v7;
          [v4 setDelegate:v0];
          id v9 = [v8 upButton];
          id v10 = [v8 downButton];
          uint64_t v11 = v10;
          if (v9)
          {
            if (v10)
            {
              uint64_t v12 = qword_100170448;
              id v13 = v9;
              id v14 = v11;
              if (v12 != -1) {
                swift_once();
              }
              uint64_t v15 = type metadata accessor for Logger();
              sub_10007DCA0(v15, (uint64_t)qword_100171AB0);
              os_log_type_t v16 = static os_log_type_t.info.getter();
              sub_1000B2FEC(v16, 0x10uLL, 0xD000000000000018, 0x80000001000FD690, 0xD000000000000030, 0x80000001000FD6B0);
              id v17 = [v4 traitCollection];
              id v18 = [v17 userInterfaceStyle];

              uint64_t v19 = self;
              uint64_t v20 = &selRef_blackColor;
              if (v18 != (id)1) {
                uint64_t v20 = &selRef_whiteColor;
              }
              id v21 = [v19 *v20];
              [v13 setTintColor:v21];

              [v13 setAlpha:0.5];
              id v22 = [v4 traitCollection];
              id v23 = [v22 userInterfaceStyle];

              uint64_t v24 = self;
              id v25 = &selRef_blackColor;
              if (v23 != (id)1) {
                id v25 = &selRef_whiteColor;
              }
              id v26 = [v24 *v25];
              [v14 setTintColor:v26];

              [v14 setAlpha:0.5];
              *(void *)&v4[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset] = 0x4041000000000000;
              sub_10009DC34();

              goto LABEL_19;
            }
          }
          else
          {
            id v9 = v6;
            uint64_t v6 = v10;
          }
        }
      }
      *(void *)&v4[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset] = 0;
      sub_10009DC34();
    }
    id v13 = v2;
LABEL_19:
  }
}

id sub_10009DBF8()
{
  return sub_10009E950(type metadata accessor for SRCarPlayScrollViewController);
}

uint64_t type metadata accessor for SRCarPlayScrollViewController()
{
  return self;
}

id sub_10009DC34()
{
  uint64_t v1 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset;
  uint64_t v2 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isRightHandDrive;
  double v3 = -0.5;
  if (v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isRightHandDrive]) {
    double v3 = 0.5;
  }
  [*(id *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint] setConstant:*(double *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset] * v3];
  double v4 = *(double *)&v0[v1];
  int v5 = v0[v2];
  id v6 = *(id *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint];
  if (v5 != 1 || (double v7 = 1.0, SiriLanguageIsRTL())) {
    double v7 = 0.0;
  }
  [v6 setConstant:v4 * v7];

  double v8 = *(double *)&v0[v1];
  int v9 = v0[v2];
  id v10 = *(id *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint];
  if (v9 != 1 || (double v11 = -1.0, (SiriLanguageIsRTL() & 1) == 0)) {
    double v11 = 0.0;
  }
  [v10 setConstant:v8 * v11];

  return [v0 setNeedsUpdateConstraints];
}

char *sub_10009DD58(char a1)
{
  *(void *)&v1[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippet] = 0;
  v1[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isFullScreen] = 0;
  uint64_t v3 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint;
  id v4 = objc_allocWithZone((Class)NSLayoutConstraint);
  int v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v7 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v8 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint;
  *(void *)&v5[v8] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v9 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint;
  *(void *)&v5[v9] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v10 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint;
  *(void *)&v5[v10] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  *(void *)&v5[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset] = 0;
  double v11 = &v5[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetSize];
  *double v11 = 0;
  v11[1] = 0;
  v5[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isRightHandDrive] = a1;

  v47.receiver = v5;
  v47.super_class = (Class)type metadata accessor for SRCarPlayScrollView();
  uint64_t v12 = [(char *)[v47 initWithFrame:0.0, 0.0, 0.0, 0.0]];
  [v12 setBouncesHorizontally:0];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v13 = [v12 widthAnchor];
  id v14 = [v13 constraintEqualToConstant:0.0];

  uint64_t v15 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint;
  os_log_type_t v16 = *(void **)&v12[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint];
  *(void *)&v12[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint] = v14;

  LODWORD(v17) = 1132068864;
  [*(id *)&v12[v15] setPriority:v17];
  id v18 = [v12 heightAnchor];
  id v19 = [v18 constraintEqualToConstant:0.0];

  uint64_t v20 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint;
  id v21 = *(void **)&v12[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint];
  *(void *)&v12[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint] = v19;

  LODWORD(v22) = 1132068864;
  [*(id *)&v12[v20] setPriority:v22];
  id v23 = [v12 widthAnchor];
  id v24 = [v23 constraintLessThanOrEqualToConstant:331.0];

  LODWORD(v25) = 1144750080;
  [v24 setPriority:v25];
  id v26 = [v12 widthAnchor];
  id v27 = [v26 constraintGreaterThanOrEqualToConstant:331.0];

  LODWORD(v28) = 1144750080;
  [v27 setPriority:v28];
  id v29 = [v12 heightAnchor];
  id v30 = [v29 constraintLessThanOrEqualToConstant:274.0];

  LODWORD(v31) = 1144750080;
  [v30 setPriority:v31];
  id v32 = [v12 heightAnchor];
  id v33 = [v32 constraintGreaterThanOrEqualToConstant:0.0];

  LODWORD(v34) = 1144750080;
  [v30 setPriority:v34];
  unint64_t v35 = self;
  sub_10007D3B4(&qword_100171650);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1000DD110;
  uint64_t v37 = *(void **)&v12[v15];
  *(void *)(v36 + 32) = v37;
  uint64_t v38 = *(void **)&v12[v20];
  *(void *)(v36 + 40) = v38;
  *(void *)(v36 + 48) = v24;
  *(void *)(v36 + 56) = v27;
  *(void *)(v36 + 64) = v30;
  *(void *)(v36 + 72) = v33;
  specialized Array._endMutation()();
  sub_10007DCD8(0, &qword_100171658);
  id v39 = v37;
  id v40 = v38;
  id v41 = v24;
  id v42 = v27;
  id v43 = v30;
  id v44 = v33;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v35 activateConstraints:isa];

  return v12;
}

void sub_10009E214(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippet;
  uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippet];
  if (v7)
  {
    id v8 = v7;
    Class isa = (Class)[v8 constraints];
    if (!isa)
    {
      sub_10007DCD8(0, &qword_100171658);
      static Array._unconditionallyBridgeFromObjectiveC(_:)();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    [self deactivateConstraints:isa];

    [v8 removeFromSuperview];
  }
  if (a1)
  {
    id v10 = a1;
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v3 addSubview:v10];
    id v11 = [v10 heightAnchor];
    [*(id *)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint] constant];
    id v12 = [v11 constraintEqualToConstant:];

    uint64_t v50 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint;
    id v13 = *(void **)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint];
    *(void *)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint] = v12;

    id v14 = [v10 centerXAnchor];
    id v15 = [v3 centerXAnchor];
    char v51 = a2;
    id v16 = [v14 constraintEqualToAnchor:v15];

    uint64_t v17 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint;
    id v18 = *(void **)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint];
    *(void *)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint] = v16;

    id v19 = [v10 leadingAnchor];
    id v20 = [v3 leadingAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    uint64_t v22 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint;
    id v23 = *(void **)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint];
    *(void *)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint] = v21;

    id v24 = [v10 trailingAnchor];
    id v25 = [v3 trailingAnchor];
    id v26 = [v24 constraintEqualToAnchor:v25];

    uint64_t v27 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint;
    double v28 = *(void **)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint];
    *(void *)&v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint] = v26;

    id v49 = self;
    sub_10007D3B4(&qword_100171650);
    uint64_t v29 = swift_allocObject();
    id v30 = *(void **)&v3[v17];
    double v31 = *(void **)&v3[v22];
    *(_OWORD *)(v29 + 16) = xmmword_1000DD110;
    *(void *)(v29 + 32) = v30;
    *(void *)(v29 + 40) = v31;
    id v32 = *(void **)&v3[v27];
    *(void *)(v29 + 48) = v32;
    id v33 = v30;
    id v34 = v31;
    id v35 = v32;
    id v36 = [v10 topAnchor];
    id v37 = [v3 contentLayoutGuide];
    id v38 = [v37 topAnchor];

    id v39 = [v36 constraintEqualToAnchor:v38];
    *(void *)(v29 + 56) = v39;
    id v40 = [v10 bottomAnchor];
    id v41 = [v3 contentLayoutGuide];
    id v42 = [v41 bottomAnchor];

    id v43 = [v40 constraintEqualToAnchor:v42];
    id v44 = *(void **)&v3[v50];
    *(void *)(v29 + 64) = v43;
    *(void *)(v29 + 72) = v44;
    specialized Array._endMutation()();
    sub_10007DCD8(0, &qword_100171658);
    id v45 = v44;
    Class v46 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v49 activateConstraints:v46];

    a2 = v51;
  }
  objc_super v47 = *(void **)&v3[v6];
  *(void *)&v3[v6] = a1;
  id v48 = a1;

  v3[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isFullScreen] = a2 & 1;
}

void sub_10009E73C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippet];
  if (!v1)
  {
    sub_10007D3B4(&qword_100171650);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1000DCFA0;
    *(void *)(v8 + 32) = v0;
    specialized Array._endMutation()();
    uint64_t v9 = v0;
    return;
  }
  id v2 = v1;
  id v3 = [v2 subviews];
  sub_10007DCD8(0, &qword_100171668);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    sub_10007D3B4(&qword_100171650);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1000DCFA0;
    *(void *)(v11 + 32) = v2;
    specialized Array._endMutation()();
    return;
  }
  if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v4 + 32);
LABEL_7:
    id v6 = v5;
    swift_bridgeObjectRelease();
    sub_10007D3B4(&qword_100171650);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1000DCFA0;
    *(void *)(v7 + 32) = v6;
    specialized Array._endMutation()();

    return;
  }
  __break(1u);
}

id sub_10009E938()
{
  return sub_10009E950(type metadata accessor for SRCarPlayScrollView);
}

id sub_10009E950(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for SRCarPlayScrollView()
{
  return self;
}

void sub_10009EA48()
{
  *(void *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippet] = 0;
  v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isFullScreen] = 0;
  uint64_t v1 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_heightConstraint;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v2 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_widthConstraint;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v3 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetHeightConstraint;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v4 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetCenterXConstraint;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v5 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetLeadingAnchorConstraint;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  uint64_t v6 = OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetTrailingAnchorConstraint;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  *(void *)&v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_caretMarginOffset] = 0;
  uint64_t v7 = &v0[OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_snippetSize];
  void *v7 = 0;
  v7[1] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10009EB94(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking) = 0;
  uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v5)
  {
    uint64_t v8 = *(void *)(v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v8 + 32);
    id v11 = v5;
    v10(a1, a2, a3 & 1, ObjectType, v8);
  }
  if (a3)
  {
    id v12 = (char **)(v50 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands);
    swift_beginAccess();
    id v13 = *v12;
    if (*v12)
    {
      id v48 = v12;
      unint64_t v14 = 0xD000000000000039;
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease();
      unint64_t v61 = 0xD000000000000019;
      unint64_t v62 = 0x80000001000FD850;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_10007D3B4(&qword_1001716D0);
      uint64_t v16 = Array.description.getter();
      id v18 = v17;
      swift_bridgeObjectRelease();
      v19._countAndFlagsBits = v16;
      v19._object = v18;
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      v20._countAndFlagsBits = 46;
      v20._object = (void *)0xE100000000000000;
      String.append(_:)(v20);
      uint64_t v22 = (uint64_t *)0xD000000000000019;
      id v21 = (char *)0x80000001000FD850;
      if (qword_100170448 != -1) {
LABEL_18:
      }
        swift_once();
      uint64_t v23 = type metadata accessor for Logger();
      uint64_t v24 = sub_10007DCA0(v23, (uint64_t)qword_100171AB0);
      os_log_type_t v25 = static os_log_type_t.info.getter();
      unint64_t v54 = (unint64_t)"elayed Ace commands ";
      uint64_t v55 = v24;
      sub_1000B2FEC(v25, 0x10uLL, 0xD000000000000039, 0x80000001000FD810, (uint64_t)v22, (unint64_t)v21);
      swift_bridgeObjectRelease();
      uint64_t v26 = sub_10007D3B4(&qword_1001716D8);
      uint64_t v47 = (uint64_t)&v47;
      uint64_t v27 = __chkstk_darwin(v26 - 8);
      unint64_t v58 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v59 = v28;
      uint64_t v29 = (void **)((char *)&v47 - v58);
      unint64_t v30 = 0;
      id v49 = v13;
      unint64_t v31 = *((void *)v13 + 2);
      uint64_t v53 = v50 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
      uint64_t v56 = v15 - 8;
      unint64_t v57 = v15;
      unint64_t v51 = 0x80000001000FD870;
      unint64_t v52 = v14 - 26;
      while (1)
      {
        uint64_t v22 = &v47;
        __chkstk_darwin(v27);
        id v21 = (char *)&v47 - v58;
        if (v30 == v31)
        {
          unint64_t v14 = v57;
          uint64_t v35 = *(void *)(v57 - 8);
          (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v35 + 56))(v21, 1, 1, v57);
          unint64_t v30 = v31;
        }
        else
        {
          unint64_t v14 = v57;
          if (v30 >= *((void *)v49 + 2))
          {
            __break(1u);
            goto LABEL_18;
          }
          uint64_t v35 = *(void *)(v57 - 8);
          sub_100082794((uint64_t)&v49[((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30++], (uint64_t)v21, &qword_1001716D0);
          (*(void (**)(char *, void, uint64_t, unint64_t))(v35 + 56))(v21, 0, 1, v14);
        }
        sub_1000A21AC((uint64_t)v21, (uint64_t)v29, &qword_1001716D8);
        if ((*(unsigned int (**)(void **, uint64_t, unint64_t))(v35 + 48))(v29, 1, v14) == 1) {
          break;
        }
        uint64_t v36 = type metadata accessor for UUID();
        uint64_t v37 = *(void *)(v36 - 8);
        __chkstk_darwin(v36);
        id v13 = (char *)&v47 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
        id v39 = *v29;
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v13, (char *)v29 + *(int *)(v14 + 48), v36);
        unint64_t v61 = 0;
        unint64_t v62 = 0xE000000000000000;
        _StringGuts.grow(_:)(34);
        swift_bridgeObjectRelease();
        unint64_t v61 = v52;
        unint64_t v62 = v51;
        swift_getObjectType();
        uint64_t v60 = v39;
        swift_getWitnessTable();
        v40._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v40);
        swift_bridgeObjectRelease();
        v41._countAndFlagsBits = 46;
        v41._object = (void *)0xE100000000000000;
        String.append(_:)(v41);
        uint64_t v42 = v61;
        unint64_t v43 = v62;
        os_log_type_t v44 = static os_log_type_t.info.getter();
        sub_1000B2FEC(v44, 0x10uLL, 0xD000000000000039, v54 | 0x8000000000000000, v42, v43);
        swift_bridgeObjectRelease();
        uint64_t v45 = v53;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v32 = *(void *)(v45 + 8);
          uint64_t v33 = swift_getObjectType();
          (*(void (**)(uint64_t, void *, char *, uint64_t, uint64_t))(v32 + 40))(v50, v39, v13, v33, v32);

          swift_unknownObjectRelease();
          id v34 = *(uint64_t (**)(char *, uint64_t))(v37 + 8);
          uint64_t v15 = v37 + 8;
          uint64_t v27 = v34(v13, v36);
        }
        else
        {
          Class v46 = *(void (**)(char *, uint64_t))(v37 + 8);
          uint64_t v15 = v37 + 8;
          v46(v13, v36);
        }
      }
      swift_bridgeObjectRelease();
      *id v48 = 0;
      swift_bridgeObjectRelease();
    }
  }
}

void sub_10009F1BC(void *a1)
{
  uint64_t v2 = v1;
  _StringGuts.grow(_:)(71);
  v4._countAndFlagsBits = 0xD000000000000044;
  v4._object = (void *)0x80000001000FD7C0;
  String.append(_:)(v4);
  uint64_t v5 = (void *)(v1 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_10007D3B4(&qword_1001716C8);
  v6._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 46;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10007DCA0(v8, (uint64_t)qword_100171AB0);
  os_log_type_t v9 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v9, 0x10uLL, 0xD00000000000001BLL, 0x80000001000FD7A0, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  *uint64_t v5 = 0;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions);
  *(void *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions) = a1;
  id v11 = a1;

  id v12 = *(void **)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v12)
  {
    uint64_t v13 = *(void *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v15 = *(void (**)(void *, uint64_t, uint64_t))(v13 + 72);
    id v16 = v12;
    v15(a1, ObjectType, v13);
  }
}

uint64_t (*sub_10009F398())()
{
  return j__swift_endAccess;
}

void sub_10009F768()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = *(void *)(v1 + 8);
  objc_allocWithZone((Class)type metadata accessor for SRCarPlaySiriUnavailableViewController());
  v50[0] = LocalizedStringKey.init(stringLiteral:)();
  v50[1] = v3;
  char v51 = v4 & 1;
  uint64_t v52 = v5;
  uint64_t v53 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v54 = v6;
  char v55 = v7 & 1;
  uint64_t v56 = v8;
  uint64_t v57 = LocalizedStringKey.init(stringLiteral:)();
  uint64_t v58 = v9;
  char v59 = v10 & 1;
  uint64_t v60 = v11;
  uint64_t v61 = v2;
  swift_unknownObjectWeakInit();
  sub_100080888((uint64_t)v50, (uint64_t)v49);
  id v12 = (id)UIHostingController.init(rootView:)();
  id v13 = [v12 view];
  if (!v13)
  {
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v14 = v13;
  id v15 = [self clearColor];
  [v14 setBackgroundColor:v15];

  id v16 = [v12 view];
  if (!v16)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  [v16 setAutoresizingMask:18];
  swift_unknownObjectRelease();

  sub_1000A2210((uint64_t)v50);
  id v17 = [self materialViewWithRecipe:52];
  if (!v17)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v18 = v17;
  [v17 setAutoresizingMask:18];
  id v19 = [v48 view];
  if (!v19)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  Swift::String v20 = v19;
  [v19 addSubview:v18];

  id v21 = v18;
  id v22 = [v48 view];
  if (!v22)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v23 = v22;
  [v22 bounds];
  double v25 = v24;
  double v27 = v26;
  double v29 = v28;
  double v31 = v30;

  [v21 setFrame:v25, v27, v29, v31];
  [v48 addChildViewController:v12];
  id v32 = [v48 view];
  if (!v32)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v33 = v32;
  id v34 = [v12 view];
  if (!v34)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v35 = v34;
  [v33 addSubview:v34];

  [v12 didMoveToParentViewController:v48];
  id v36 = [v12 view];
  if (!v36)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v37 = v36;
  id v38 = [v48 view];
  if (v38)
  {
    id v39 = v38;
    [v38 bounds];
    double v41 = v40;
    double v43 = v42;
    double v45 = v44;
    double v47 = v46;

    [v37 setFrame:v41, v43, v45, v47];
    return;
  }
LABEL_19:
  __break(1u);
}

void sub_10009FB5C(void *a1)
{
  uint64_t v2 = v1;
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease();
  id v4 = [a1 description];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  char v7 = v6;

  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_10007DCA0(v9, (uint64_t)qword_100171AB0);
  os_log_type_t v10 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v10, 0x10uLL, 0xD00000000000001ALL, 0x80000001000FDA50, 0xD00000000000001DLL, 0x80000001000FDA70);
  swift_bridgeObjectRelease();
  self;
  uint64_t v11 = swift_dynamicCastObjCClass();
  if (v11)
  {
    id v12 = *(void **)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions];
    if (v12)
    {
      id v13 = (void *)v11;
      id v14 = a1;
      id v15 = v12;
      char v16 = [v15 isRightHandDrive];
      uint64_t v17 = *(void *)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex];
      char v18 = v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex + 8];
      id v19 = objc_allocWithZone((Class)type metadata accessor for SRCarPlayVisualResponseViewController());
      Swift::String v20 = sub_1000A0F1C(v13, v16, v2, v17, v18, v19);
LABEL_9:
      double v27 = v20;
      double v28 = &off_100145408;
      goto LABEL_10;
    }
  }
  self;
  uint64_t v21 = swift_dynamicCastObjCClass();
  if (v21)
  {
    id v22 = *(void **)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions];
    if (v22)
    {
      uint64_t v23 = (void *)v21;
      id v24 = a1;
      id v15 = v22;
      char v25 = [v15 isRightHandDrive];
      double v26 = objc_allocWithZone((Class)type metadata accessor for SRCarPlayVisualResponseViewController());
      Swift::String v20 = sub_1000A12B4(v23, v25, (uint64_t)v2, v26);
      goto LABEL_9;
    }
  }
  self;
  uint64_t v30 = swift_dynamicCastObjCClass();
  if (!v30 || (double v31 = *(void **)&v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions]) == 0)
  {
    _StringGuts.grow(_:)(66);
    v36._countAndFlagsBits = 0xD000000000000027;
    v36._object = (void *)0x80000001000FDA90;
    String.append(_:)(v36);
    id v37 = [a1 description];
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    double v40 = v39;

    v41._countAndFlagsBits = v38;
    v41._object = v40;
    String.append(_:)(v41);
    swift_bridgeObjectRelease();
    v42._countAndFlagsBits = 0xD000000000000016;
    v42._object = (void *)0x80000001000FDAC0;
    String.append(_:)(v42);
    sub_10007D3B4(&qword_1001716E8);
    _print_unlocked<A, B>(_:_:)();
    v43._countAndFlagsBits = 46;
    v43._object = (void *)0xE100000000000000;
    String.append(_:)(v43);
    os_log_type_t v44 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v44, 0x10uLL, 0xD00000000000001ALL, 0x80000001000FDA50, 0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  id v32 = (void *)v30;
  id v33 = a1;
  id v15 = v31;
  char v34 = [v15 isRightHandDrive];
  uint64_t v35 = (char *)objc_allocWithZone((Class)type metadata accessor for SRCarPlayCardViewController());
  double v27 = (void *)sub_1000A1780(v32, v34, v2, v35);
  double v28 = &off_100144F18;
LABEL_10:

  id v29 = v27;
  sub_1000A002C(v27, (uint64_t)v28, 1);

LABEL_15:
  os_log_type_t v45 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v45, 0x2000010uLL, 0xD00000000000001CLL, 0x80000001000FDAE0, 0xD0000000000000A4, 0x80000001000FDB00);
  double v46 = &v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex];
  *(void *)double v46 = 0;
  v46[8] = 1;
}

BOOL sub_10009FFC4()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController)) {
    return 0;
  }
  uint64_t v2 = (void *)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands);
  swift_beginAccess();
  return *v2 == 0;
}

void sub_1000A002C(void *a1, uint64_t a2, char a3)
{
  id v4 = v3;
  if (a1)
  {
    id v6 = a1;
    _StringGuts.grow(_:)(43);
    v7._countAndFlagsBits = 0xD00000000000001FLL;
    v7._object = (void *)0x80000001000FDA30;
    String.append(_:)(v7);
    uint64_t ObjectType = swift_getObjectType();
    swift_getWitnessTable();
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v9._countAndFlagsBits = 0x203A77656976202CLL;
    v9._object = (void *)0xE800000000000000;
    String.append(_:)(v9);
    [v6 view];
    sub_10007D3B4(&qword_1001716E0);
    v10._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10007DCA0(v11, (uint64_t)qword_100171AB0);
    os_log_type_t v12 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v12, 0x10uLL, 0xD000000000000031, 0x80000001000FD9C0, 0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    id v37 = [v6 view];
    id v13 = &v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
    id v14 = *(void **)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
    uint64_t v15 = *(void *)&v4[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8];
    char v16 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(a2 + 88);
    id v17 = v14;
    char v18 = v16(v14, v15, ObjectType, a2);

    id v19 = *(id *)v13;
    id v20 = *(id *)v13;
    id v21 = v6;
    id v22 = [v4 view];
    if (v22)
    {
      id v23 = v22;
      type metadata accessor for SRCarPlayView();
      if (swift_dynamicCastClass())
      {
        id v24 = v37;
        sub_1000AF41C(v37, (v18 ^ 1) & 1);
        double v26 = a1;
        uint64_t v25 = a2;
        if (v19)
        {
          [v20 willMoveToParentViewController:0];
          [v20 removeFromParentViewController];
        }
        id v21 = v21;
        [v4 addChildViewController:v21];
        [v21 didMoveToParentViewController:v4];

        id v20 = v23;
        id v23 = v21;
      }
      else
      {
        double v26 = a1;
        uint64_t v25 = a2;
        id v24 = v37;
      }

      id v20 = v21;
      id v21 = v23;
    }
    else
    {
      double v26 = a1;
      uint64_t v25 = a2;
      id v24 = v37;
    }

    id v35 = *(id *)v13;
    *(void *)id v13 = v26;
    *((void *)v13 + 1) = v25;

    return;
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_10007DCA0(v28, (uint64_t)qword_100171AB0);
  os_log_type_t v29 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v29, 0x10uLL, 0xD000000000000031, 0x80000001000FD9C0, 0xD00000000000002ALL, 0x80000001000FDA00);
  uint64_t v30 = &v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  double v31 = *(void **)&v3[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  id v32 = v31;
  id v33 = [v3 view];
  if (!v33)
  {
    char v34 = v32;
    goto LABEL_21;
  }
  char v34 = v33;
  type metadata accessor for SRCarPlayView();
  if (!swift_dynamicCastClass()) {
    goto LABEL_15;
  }
  sub_1000AF41C(0, a3 & 1);
  if (v31)
  {
    [v32 willMoveToParentViewController:0];
    [v32 removeFromParentViewController];
LABEL_15:
  }
LABEL_21:

  Swift::String v36 = *(void **)v30;
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0;
}

id sub_1000A04E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlayViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for SRCarPlayViewController()
{
  return self;
}

uint64_t sub_1000A05AC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (!v1) {
    return 1;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  id v5 = v1;
  char v6 = v4(ObjectType, v2);

  return v6 & 1;
}

void sub_1000A0634()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v4 = *(void (**)(uint64_t, uint64_t))(v2 + 16);
    id v5 = v1;
    v4(ObjectType, v2);
  }
}

void sub_1000A06E4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking) = 1;
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v3)
  {
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    Swift::String v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 48);
    id v9 = v3;
    v8(a1, a2, ObjectType, v6);
  }
}

void sub_1000A07C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v3)
  {
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    Swift::String v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    id v9 = v3;
    v8(a1, a2, ObjectType, v6);
  }
}

void sub_1000A088C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v4 = *(void (**)(uint64_t, uint64_t))(v2 + 64);
    id v5 = v1;
    v4(ObjectType, v2);
  }
}

void sub_1000A093C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController);
  if (v3)
  {
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    Swift::String v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 80);
    id v9 = v3;
    v8(a1, a2, ObjectType, v6);
  }
}

uint64_t sub_1000A0A08()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000A0A98()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000A0B28()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24))(v0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000A0BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32))(v2, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000A0C50(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1000A1C80(a2, a3);
}

uint64_t sub_1000A0C5C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v0, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000A0CEC()
{
  id v1 = [v0 view];
  if (v1)
  {
    id v2 = v1;
    type metadata accessor for SRCarPlayView();
    if (swift_dynamicCastClass())
    {
      sub_1000AFDFC(1);
      sub_1000AFB58(0);
    }
  }
}

uint64_t sub_1000A0D80(uint64_t a1)
{
  uint64_t result = NSNotFound.getter();
  if (result == a1) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = a1;
  }
  uint64_t v5 = v1 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex;
  *(void *)uint64_t v5 = v4;
  *(unsigned char *)(v5 + 8) = result == a1;
  return result;
}

uint64_t sub_1000A0DC4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 80))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

char *sub_1000A0F1C(void *a1, char a2, void *a3, uint64_t a4, char a5, unsigned char *a6)
{
  uint64_t v12 = OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet;
  *(void *)&a6[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet] = 0;
  *(void *)&a6[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet] = 0;
  id v13 = &a6[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate];
  *(void *)&a6[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  a6[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_proceedToNextCommandAtSpeechSynthesisEnd] = 1;
  id v14 = objc_allocWithZone((Class)type metadata accessor for VisualResponseProvider());
  uint64_t v15 = a6;
  id v16 = [v14 init];
  *((void *)v13 + 1) = &off_100145510;
  swift_unknownObjectWeakAssign();
  id v17 = *(void **)&a6[v12];
  *(void *)&a6[v12] = a1;
  id v18 = a1;

  sub_10009918C(0);
  uint64_t result = (char *)[v18 modelData];
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  id v20 = result;
  uint64_t v21 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v23 = v22;

  uint64_t v24 = VisualResponseProvider.view(for:mode:overload:)();
  sub_100088E54(v21, v23);
  *(void *)&v15[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet] = v24;

  if (!v24) {
    sub_10009918C(1);
  }
  v15[OBJC_IVAR____TtC4Siri29SRCarPlayScrollViewController_isRightHandDrive] = a2 & 1;
  v41.receiver = v15;
  v41.super_class = (Class)type metadata accessor for SRCarPlayScrollViewController();
  uint64_t v25 = (char *)[v41 initWithNibName:0 bundle:0];
  double v26 = v25;
  uint64_t v27 = OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet;
  uint64_t v28 = *(void **)&v25[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet];
  if (!v28)
  {
    id v35 = v25;
    goto LABEL_11;
  }
  os_log_type_t v29 = v25;
  [v28 setBackgroundMaterial:1];
  uint64_t v30 = *(void **)&v26[v27];
  if (!v30) {
    goto LABEL_11;
  }
  [v30 setInteractionDelegate:v29];
  double v31 = *(void **)&v26[v27];
  if (!v31) {
    goto LABEL_11;
  }
  [v31 setCurrentIdiom:4];
  id v32 = *(void **)&v26[v27];
  if (!v32) {
    goto LABEL_11;
  }
  id v33 = v32;
  uint64_t result = (char *)[v18 viewId];
  if (!result)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  char v34 = result;
  [v33 setViewId:result];

LABEL_11:
  if ((a5 & 1) == 0)
  {
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease();
    v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v36);
    swift_bridgeObjectRelease();
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_10007DCA0(v37, (uint64_t)qword_100171AB0);
    os_log_type_t v38 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v38, 0x2000010uLL, 0xD00000000000003DLL, 0x80000001000FDBB0, 0xD00000000000002BLL, 0x80000001000FDBF0);
    swift_bridgeObjectRelease();
    id v39 = *(void **)&v26[v27];
    if (v39)
    {
      id v40 = v39;
      [v40 setInitialFocusIndex:a4];

      id v16 = v40;
    }
  }

  return v26;
}

char *sub_1000A12B4(void *a1, char a2, uint64_t a3, unsigned char *a4)
{
  *(void *)&a4[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_aceSnippet] = 0;
  uint64_t v7 = OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet;
  *(void *)&a4[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_pluginSnippet] = 0;
  Swift::String v8 = &a4[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate];
  *(void *)&a4[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  a4[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_proceedToNextCommandAtSpeechSynthesisEnd] = 1;
  id v9 = objc_allocWithZone((Class)type metadata accessor for VisualResponseProvider());
  Swift::String v10 = a4;
  id v11 = [v9 init];
  *((void *)v8 + 1) = &off_100145510;
  uint64_t v49 = a3;
  swift_unknownObjectWeakAssign();
  uint64_t v12 = *(void **)&a4[v7];
  *(void *)&a4[v7] = a1;
  id v13 = a1;

  sub_10009918C(0);
  id v14 = [v13 modelData];
  if (v14)
  {
    uint64_t v15 = v14;
    uint64_t v16 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    switch(v18 >> 62)
    {
      case 1uLL:
        uint64_t v19 = (int)v16;
        uint64_t v20 = v16 >> 32;
        goto LABEL_8;
      case 2uLL:
        uint64_t v19 = *(void *)(v16 + 16);
        uint64_t v20 = *(void *)(v16 + 24);
LABEL_8:
        if (v19 == v20) {
          goto LABEL_9;
        }
        goto LABEL_12;
      case 3uLL:
        goto LABEL_9;
      default:
        if ((v18 & 0xFF000000000000) == 0) {
          goto LABEL_9;
        }
        goto LABEL_12;
    }
  }
  uint64_t v16 = 0;
  unint64_t v18 = 0xC000000000000000;
LABEL_9:
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_10007DCA0(v21, (uint64_t)qword_100171AB0);
  os_log_type_t v22 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v22, 0, 0xD00000000000002ELL, 0x80000001000FDC20, 0xD00000000000001BLL, 0x80000001000FDC70);
LABEL_12:
  id v23 = [v13 bundleName:v49];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v27 = v26;
  }
  else
  {
    uint64_t v25 = 0;
    unint64_t v27 = 0xE000000000000000;
  }
  uint64_t v28 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0) {
    uint64_t v28 = v25 & 0xFFFFFFFFFFFFLL;
  }
  if (!v28)
  {
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_10007DCA0(v29, (uint64_t)qword_100171AB0);
    os_log_type_t v30 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v30, 0, 0xD00000000000002ELL, 0x80000001000FDC20, 0xD000000000000014, 0x80000001000FDC50);
  }
  double v31 = v11;
  uint64_t v32 = VisualResponseProvider.view(for:bundleName:mode:)();
  swift_bridgeObjectRelease();
  *(void *)&v10[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet] = v32;

  if (!v32) {
    sub_10009918C(1);
  }
  v10[OBJC_IVAR____TtC4Siri29SRCarPlayScrollViewController_isRightHandDrive] = a2 & 1;
  v52.receiver = v10;
  v52.super_class = (Class)type metadata accessor for SRCarPlayScrollViewController();
  id v33 = [super initWithNibName:0 bundle:0];
  char v34 = v33;
  uint64_t v35 = OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet;
  Swift::String v36 = *(void **)&v33[OBJC_IVAR____TtC4Siri37SRCarPlayVisualResponseViewController_snippet];
  if (!v36)
  {
    double v47 = v33;
LABEL_33:

    sub_100088E54(v16, v18);
    goto LABEL_34;
  }
  uint64_t v37 = v33;
  [v36 setBackgroundMaterial:1];
  os_log_type_t v38 = *(void **)&v34[v35];
  if (!v38) {
    goto LABEL_33;
  }
  [v38 setInteractionDelegate:v37];
  id v39 = *(void **)&v34[v35];
  if (!v39) {
    goto LABEL_33;
  }
  [v39 setCurrentIdiom:4];
  id v40 = *(void **)&v34[v35];
  if (!v40) {
    goto LABEL_33;
  }
  id v41 = v40;
  id v42 = [v13 viewId];
  if (!v42)
  {
    __break(1u);
    JUMPOUT(0x1000A1770);
  }
  Swift::String v43 = v42;
  [v41 setViewId:v42];

  os_log_type_t v44 = *(void **)&v34[v35];
  if (!v44) {
    goto LABEL_33;
  }
  id v45 = v44;
  NSString v46 = [v13 responseViewId];
  if (!v46)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v45 setResponseViewId:v46];

  sub_100088E54(v16, v18);
LABEL_34:

  return v34;
}

uint64_t sub_1000A1780(void *a1, char a2, void *a3, char *a4)
{
  *(void *)&a4[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardViewController] = 0;
  uint64_t v8 = OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_widthConstraint;
  id v9 = objc_allocWithZone((Class)NSLayoutConstraint);
  Swift::String v10 = a4;
  *(void *)&a4[v8] = [v9 init];
  uint64_t v11 = OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_heightConstraint;
  *(void *)&v10[v11] = [objc_allocWithZone((Class)NSLayoutConstraint) init];
  *(void *)&v10[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardSnippet] = a1;
  uint64_t v12 = &v10[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_delegate];
  *(void *)uint64_t v12 = a3;
  *((void *)v12 + 1) = &off_100145550;
  id v13 = a1;
  id v14 = a3;

  sub_10007D8D4(0);
  v10[OBJC_IVAR____TtC4Siri29SRCarPlayScrollViewController_isRightHandDrive] = a2;
  v27.receiver = v10;
  v27.super_class = (Class)type metadata accessor for SRCarPlayScrollViewController();
  uint64_t v15 = (char *)[super initWithNibName:0 bundle:0];
  uint64_t v16 = (char *)[v13 siriui_card];
  if (!v16)
  {
    __break(1u);
    goto LABEL_9;
  }
  Swift::String v10 = v16;
  if (([v16 respondsToSelector:"backingCard"] & 1) == 0)
  {
LABEL_9:
    swift_unknownObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v17 = self;
  id v18 = [v10 backingCard];
  swift_unknownObjectRelease();
  Swift::String v10 = (char *)[v17 cardViewControllerForCard:v18 feedbackDelegate:v15];

  if (!v10)
  {
LABEL_11:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  if (!v19)
  {
LABEL_10:

    goto LABEL_11;
  }
  uint64_t v20 = OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardViewController;
  uint64_t v21 = *(void **)&v15[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardViewController];
  *(void *)&v15[OBJC_IVAR____TtC4Siri27SRCarPlayCardViewController_cardViewController] = v19;
  os_log_type_t v22 = v10;

  id v23 = *(void **)&v15[v20];
  if (v23)
  {
    uint64_t v24 = v15;
    id v25 = v23;
    [v25 setDelegate:v24];

    os_log_type_t v22 = v24;
  }

  return (uint64_t)v15;
}

char *sub_1000A1A30(void *a1, unsigned char *a2)
{
  *(void *)&a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView] = 0;
  *(void *)&a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView] = 0;
  *(void *)&a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetContainerView] = 0;
  *(void *)&a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetPlatterView] = 0;
  a2[OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground] = 0;
  uint64_t v4 = OBJC_IVAR____TtC4Siri13SRCarPlayView_showIntelligentLightAnimation;
  uint64_t v5 = self;
  uint64_t v6 = a2;
  a2[v4] = [v5 deviceSupportsAI];
  v6[OBJC_IVAR____TtC4Siri13SRCarPlayView_touchPassThrough] = 0;

  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for SRCarPlayView();
  uint64_t v7 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(void *)&v7[OBJC_IVAR____TtC4Siri13SRCarPlayView_delegate + 8] = &off_100145540;
  swift_unknownObjectWeakAssign();
  id v8 = objc_allocWithZone((Class)UITapGestureRecognizer);
  id v9 = v7;
  id v10 = [v8 initWithTarget:v9 action:"didTapToDismissWithSender:"];
  id v11 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v12 = OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView;
  id v13 = *(void **)&v9[OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView];
  *(void *)&v9[OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView] = v11;

  id v14 = *(void **)&v9[v12];
  if (v14)
  {
    id v15 = v14;
    [v15 setAutoresizingMask:18];
    [v9 bounds];
    [v15 setFrame:];
    [v15 addGestureRecognizer:v10];
    [v9 addSubview:v15];
  }
  id v16 = [self sharedPreferences];
  unsigned __int8 v17 = [v16 getShowAppsBehindSiriInCarPlayEnabled];

  sub_1000AFDFC(v17 ^ 1);
  return v9;
}

uint64_t sub_1000A1C80(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking) == 1)
  {
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v6._countAndFlagsBits = 0xD000000000000015;
    v6._object = (void *)0x80000001000FD920;
    String.append(_:)(v6);
    swift_getObjectType();
    id v41 = a1;
    swift_getWitnessTable();
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v7._countAndFlagsBits = 0xD000000000000026;
    v7._object = (void *)0x80000001000FD940;
    String.append(_:)(v7);
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_10007DCA0(v8, (uint64_t)qword_100171AB0);
    os_log_type_t v9 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v9, 0x8000010uLL, 0xD00000000000004CLL, 0x80000001000FD890, 0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    id v10 = (void *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands);
    swift_beginAccess();
    if (!*v10)
    {
      *id v10 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
    }
    uint64_t v12 = sub_10009F398();
    if (*v11)
    {
      id v13 = v11;
      uint64_t v14 = sub_10007D3B4(&qword_1001716D0);
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = __chkstk_darwin(v14 - 8);
      id v18 = (uint64_t *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
      objc_super v19 = (char *)v18 + *(int *)(v16 + 56);
      *id v18 = a1;
      uint64_t v20 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, a2, v20);
      unint64_t v21 = *v13;
      id v22 = a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *id v13 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v21 = sub_100098390(0, *(void *)(v21 + 16) + 1, 1, v21);
        *id v13 = v21;
      }
      unint64_t v25 = *(void *)(v21 + 16);
      unint64_t v24 = *(void *)(v21 + 24);
      if (v25 >= v24 >> 1)
      {
        unint64_t v21 = sub_100098390(v24 > 1, v25 + 1, 1, v21);
        *id v13 = v21;
      }
      *(void *)(v21 + 16) = v25 + 1;
      sub_1000A21AC((uint64_t)v18, v21+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v25, &qword_1001716D0);
      ((void (*)(uint64_t *, void))v12)(&v39, 0);
    }
    else
    {
      ((void (*)(uint64_t *, void))v12)(&v39, 0);
    }
    uint64_t v35 = v3 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v36 = *(void *)(v35 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v3, ObjectType, v36);
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    _StringGuts.grow(_:)(55);
    v26._countAndFlagsBits = 0xD000000000000034;
    v26._object = (void *)0x80000001000FD8E0;
    String.append(_:)(v26);
    swift_getObjectType();
    id v41 = a1;
    swift_getWitnessTable();
    DefaultStringInterpolation.appendInterpolation<A>(_:)();
    v27._countAndFlagsBits = 46;
    v27._object = (void *)0xE100000000000000;
    String.append(_:)(v27);
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_10007DCA0(v28, (uint64_t)qword_100171AB0);
    os_log_type_t v29 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v29, 0x8000010uLL, 0xD00000000000004CLL, 0x80000001000FD890, 0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    uint64_t v30 = v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v31 = *(void *)(v30 + 8);
      uint64_t v32 = swift_getObjectType();
      (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t))(v31 + 40))(v2, a1, a2, v32, v31);
      swift_unknownObjectRelease();
    }
    id v33 = (void *)(v2 + OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands);
    swift_beginAccess();
    void *v33 = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000A21AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10007D3B4(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000A2210(uint64_t a1)
{
  return a1;
}

void sub_1000A2264(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 view];
  if (v4)
  {
    id v27 = v4;
    type metadata accessor for SRCarPlayView();
    uint64_t v5 = swift_dynamicCastClass();
    if (v5)
    {
      uint64_t v6 = v5;
      sub_1000A002C(0, 0, 1);
      uint64_t v7 = sub_10007D3B4((uint64_t *)&unk_1001716F0);
      __chkstk_darwin(v7 - 8);
      os_log_type_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_100082794(a1, (uint64_t)v9, (uint64_t *)&unk_1001716F0);
      uint64_t v10 = type metadata accessor for URL();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v12 = URL.scheme.getter();
        if (v13)
        {
          if (v12 == 0x6D65746970616DLL && v13 == 0xE700000000000000) {
            char v15 = 1;
          }
          else {
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          char v15 = 0;
        }
        (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
        uint64_t v16 = OBJC_IVAR____TtC4Siri13SRCarPlayView_touchPassThrough;
        *(unsigned char *)(v6 + OBJC_IVAR____TtC4Siri13SRCarPlayView_touchPassThrough) = v15 & 1;
        if (v15)
        {
          if (qword_100170448 != -1) {
            swift_once();
          }
          uint64_t v17 = type metadata accessor for Logger();
          sub_10007DCA0(v17, (uint64_t)qword_100171AB0);
          os_log_type_t v18 = static os_log_type_t.info.getter();
          sub_1000B2FEC(v18, 0x10uLL, 0xD000000000000010, 0x80000001000FDE70, 0xD00000000000002CLL, 0x80000001000FDE90);
        }
        objc_super v19 = *(void **)(v6 + OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView);
        if (v19)
        {
          id v20 = [v19 layer];
          [v20 setAllowsHitTesting:(*(unsigned char *)(v6 + v16) & 1) == 0];
        }
        if (![self isSiriLocationServicesPromptingEnabled]) {
          goto LABEL_27;
        }
        if (qword_100170448 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_10007DCA0(v21, (uint64_t)qword_100171AB0);
        os_log_type_t v22 = static os_log_type_t.info.getter();
        sub_1000B2FEC(v22, 0x10uLL, 0xD000000000000020, 0x80000001000FDE10, 0xD000000000000024, 0x80000001000FDE40);
        sub_1000A002C(0, 0, 1);
        id v23 = &v2[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate];
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v24 = *((void *)v23 + 1);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v24 + 80))(ObjectType, v24);

          swift_unknownObjectRelease();
        }
        else
        {
LABEL_27:
        }
      }
    }
    else
    {
    }
  }
}

void sub_1000A2664(uint64_t a1)
{
  id v3 = [v1 view];
  if (v3)
  {
    id v17 = v3;
    type metadata accessor for SRCarPlayView();
    uint64_t v4 = swift_dynamicCastClass();
    if (v4)
    {
      uint64_t v5 = *(char **)(v4 + OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetPlatterView);
      if (!v5)
      {
        uint64_t v13 = v17;
LABEL_15:

        return;
      }
      uint64_t v6 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView;
      uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView];
      char v15 = v5;
      if (v7)
      {
        uint64_t v8 = v5;
        [v7 setBackgroundColor:a1];
        os_log_type_t v9 = v15;
        uint64_t v10 = *(void **)&v15[v6];
        if (!v10)
        {
LABEL_14:
          [v9[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView] setHidden:1 v15];

          uint64_t v13 = v16;
          goto LABEL_15;
        }
        [v10 setHidden:0];
      }
      else
      {
        uint64_t v14 = v5;
      }
      os_log_type_t v9 = v15;
      goto LABEL_14;
    }
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_10007DCA0(v11, (uint64_t)qword_100171AB0);
  os_log_type_t v12 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v12, 0x10uLL, 0xD000000000000049, 0x80000001000FDDC0, 0xD000000000000041, 0x80000001000FCD90);
}

void sub_1000A2820()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_currentSnippetViewController];
  *uint64_t v1 = 0;
  v1[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = &v0[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_lastFocusIndex];
  *(void *)uint64_t v2 = 0;
  v2[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_requestOptions] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delayedAceCommands] = 0;
  v0[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_isSpeaking] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1000A2A34(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  return [super *a3];
}

char *sub_1000A2BBC(void *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_snippetCommandExecutor;
  type metadata accessor for SnippetCommandExecutor();
  swift_allocObject();
  uint64_t v7 = v2;
  *(void *)&v2[v6] = SnippetCommandExecutor.init()();
  uint64_t v8 = &v7[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_appBundleId];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  uint64_t v9 = OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView;
  *(void *)&v7[v9] = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:0];
  v7[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_isBackgroundViewApplied] = 0;
  *(void *)&v7[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_visualResponseView] = a1;
  id v10 = a1;

  v29.receiver = v7;
  v29.super_class = ObjectType;
  uint64_t v11 = (char *)[super initWithNibName:0 bundle:0];
  uint64_t v12 = OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_visualResponseView;
  uint64_t v13 = *(void **)&v11[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_visualResponseView];
  uint64_t v14 = v11;
  [v13 setInteractionDelegate:v14];
  [*(id *)&v11[v12] setBackgroundMaterial:1];
  char v15 = (objc_class *)type metadata accessor for SiriUIHostingView();
  id v16 = (char *)objc_allocWithZone(v15);
  *(void *)&v16[OBJC_IVAR____TtC4SiriP33_7351ACF3FB3EECEB6B17B4CD84C9F4C317SiriUIHostingView_rootView] = v10;
  v28.receiver = v16;
  v28.super_class = v15;
  id v17 = v10;
  os_log_type_t v18 = v14;
  id v19 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v19 setCardView:v17];
  [v18 setView:v19];

  uint64_t result = (char *)[v18 view];
  if (result)
  {
    uint64_t v21 = result;
    [result setBackingViewController:v18];

    if (a2)
    {
      id v22 = [a2 sash];
      id v23 = v22;
      if (!v22)
      {

LABEL_10:
        uint64_t v26 = 0;
        goto LABEL_11;
      }
      id v24 = [v22 applicationBundleIdentifier];

      if (v24)
      {
        id v23 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v26 = v25;

LABEL_11:
        id v27 = &v18[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_appBundleId];
        *(void *)id v27 = v23;
        *((void *)v27 + 1) = v26;
        swift_bridgeObjectRelease();
        return v18;
      }
    }
    else
    {
    }
    id v23 = 0;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1000A2F90()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView;
  id v3 = [*(id *)&v0[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView] backgroundColor];

  if (v3)
  {
LABEL_4:
    if (v1[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_isBackgroundViewApplied] == 1)
    {
      if (qword_100170448 != -1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      sub_10007DCA0(v5, (uint64_t)qword_100171AB0);
      os_log_type_t v6 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v6, 0, 0xD00000000000001ALL, 0x80000001000FE2E0, 0xD000000000000090, 0x80000001000FE300);
      id v7 = [v1 delegate];
      if (v7)
      {
        uint64_t v8 = v7;
        if ([v7 respondsToSelector:"siriSnippetViewController:informHostOfBackgroundView:isSnippetAsyncColored:"])
        {
          id v9 = *(id *)&v1[v2];
          [v8 siriSnippetViewController:v1 informHostOfBackgroundView:v9 isSnippetAsyncColored:0];
        }
        swift_unknownObjectRelease();
      }
    }
    return;
  }
  id v4 = [*(id *)&v1[v2] effect];
  if (v4)
  {

    goto LABEL_4;
  }
  id v10 = [v1 traitCollection];
  id v11 = [v10 userInterfaceStyle];

  uint64_t v12 = self;
  if (v11 == (id)1) {
    id v13 = [v12 whiteColor];
  }
  else {
    id v13 = [v12 blackColor];
  }
  id v14 = v13;
  [v1 informHostOfBackgroundColor:v14];
}

uint64_t sub_1000A3624()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SnippetCommandError();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ExecutionResult();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (void **)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v30 - v11;
  swift_retain();
  dispatch thunk of SnippetCommandExecutor.execute(sfCommand:)();
  swift_release();
  (*(void (**)(void **, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  int v13 = (*(uint64_t (**)(void **, uint64_t))(v7 + 88))(v10, v6);
  if (v13 == enum case for ExecutionResult.convertedToAce(_:))
  {
    (*(void (**)(void **, uint64_t))(v7 + 96))(v10, v6);
    id v14 = *v10;
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_10007DCA0(v15, (uint64_t)qword_100171AB0);
    os_log_type_t v16 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v16, 0x2000000uLL, 0xD000000000000014, 0x80000001000FE190, 0xD000000000000031, 0x80000001000FE240);
    id v17 = v14;
    sub_1000A6C80(v17, v1);

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (v13 == enum case for ExecutionResult.failure(_:))
  {
    (*(void (**)(void **, uint64_t))(v7 + 96))(v10, v6);
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v10, v2);
    uint64_t v30 = 0;
    unint64_t v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(73);
    v18._countAndFlagsBits = 0xD000000000000047;
    v18._object = (void *)0x80000001000FE1F0;
    String.append(_:)(v18);
    sub_1000A6D68();
    v19._countAndFlagsBits = Error.localizedDescription.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    uint64_t v20 = v30;
    unint64_t v21 = v31;
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_10007DCA0(v22, (uint64_t)qword_100171AB0);
    os_log_type_t v23 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v23, 0x2000000uLL, 0xD000000000000014, 0x80000001000FE190, v20, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (v13 == enum case for ExecutionResult.commandExecuted(_:))
  {
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_10007DCA0(v24, (uint64_t)qword_100171AB0);
    os_log_type_t v25 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v25, 0x2000000uLL, 0xD000000000000014, 0x80000001000FE190, 0xD00000000000002FLL, 0x80000001000FE280);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_10007DCA0(v27, (uint64_t)qword_100171AB0);
  os_log_type_t v28 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v28, 0x2000000uLL, 0xD000000000000014, 0x80000001000FE190, 0xD00000000000003BLL, 0x80000001000FE1B0);
  objc_super v29 = *(void (**)(char *, uint64_t))(v7 + 8);
  v29(v12, v6);
  return ((uint64_t (*)(void **, uint64_t))v29)(v10, v6);
}

void sub_1000A3BE0(uint64_t a1, uint64_t a2)
{
  v22[1] = a2;
  id v2 = [objc_allocWithZone((Class)SAUIVisualResponseSnippet) init];
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v7 = v2;
  UUID.init()();
  UUID.uuidString.getter();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8((char *)v22 - v6, v3);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setAceId:v9];

  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v7 setModelData:isa];

  id v11 = (id)__chkstk_darwin([objc_allocWithZone((Class)SAUIAddViews) init]);
  UUID.init()();
  UUID.uuidString.getter();
  v8((char *)v22 - v6, v3);
  uint64_t v12 = (void *)v22[2];
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setAceId:v13];

  sub_10007D3B4(&qword_100171650);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1000DCFA0;
  *(void *)(v14 + 32) = v7;
  v22[3] = v14;
  specialized Array._endMutation()();
  sub_10007DCD8(0, (unint64_t *)&qword_100171440);
  id v15 = v7;
  Class v16 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 setViews:v16];

  id v17 = [v12 delegate];
  if (v17)
  {
    Swift::String v18 = v17;
    sub_10007D3B4(&qword_100170FD0);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1000DD100;
    *(void *)(v19 + 56) = sub_10007DCD8(0, &qword_1001717F0);
    *(void *)(v19 + 32) = v11;
    id v20 = v11;
    Class v21 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 siriViewController:v12 performAceCommands:v21];

    swift_unknownObjectRelease();
  }
}

void sub_1000A3F4C()
{
  id v0 = [objc_allocWithZone((Class)SAIntentGroupSubmitIFMessagePayload) init];
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v0 setData:isa];

  id v2 = [objc_allocWithZone((Class)SAStartLocalRequest) init];
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v7 = v2;
  UUID.init()();
  UUID.uuidString.getter();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8((char *)v45 - v6, v3);
  v45[1] = v4 + 8;
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setAceId:v9];

  uint64_t v53 = sub_10007D3B4(&qword_100171650);
  uint64_t v10 = swift_allocObject();
  long long v54 = xmmword_1000DCFA0;
  *(_OWORD *)(v10 + 16) = xmmword_1000DCFA0;
  *(void *)(v10 + 32) = v0;
  uint64_t v55 = v10;
  specialized Array._endMutation()();
  id v49 = v0;
  uint64_t v52 = sub_10007D3B4((uint64_t *)&unk_100171470);
  Class v11 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v51 = v7;
  [v7 setClientBoundCommands:v11];

  id v12 = (id)__chkstk_darwin([objc_allocWithZone((Class)SARequestCompleted) init]);
  UUID.init()();
  UUID.uuidString.getter();
  uint64_t v46 = v3;
  v8((char *)v45 - v6, v3);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setAceId:v13];

  id v14 = v12;
  id v15 = [v7 aceId];
  [v14 setRefId:v15];

  id v16 = (id)__chkstk_darwin([objc_allocWithZone((Class)SAResultCallback) init]);
  UUID.init()();
  UUID.uuidString.getter();
  v8((char *)v45 - v6, v3);
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setAceId:v17];

  id v18 = v16;
  id v19 = [v51 refId];
  [v18 setRefId:v19];

  id v47 = v18;
  [v18 setCode:0];
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v54;
  *(void *)(v20 + 32) = v14;
  uint64_t v55 = v20;
  specialized Array._endMutation()();
  id v48 = v14;
  Class v21 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v18 setCommands:v21];

  id v22 = (id)__chkstk_darwin([objc_allocWithZone((Class)SACommandFailed) init]);
  UUID.init()();
  UUID.uuidString.getter();
  uint64_t v23 = v46;
  v8((char *)v45 - v6, v46);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v22 setAceId:v24];

  id v25 = v22;
  id v26 = v51;
  id v27 = [v51 aceId];
  [v25 setRefId:v27];

  id v28 = (id)__chkstk_darwin([objc_allocWithZone((Class)SAResultCallback) init]);
  UUID.init()();
  UUID.uuidString.getter();
  v8((char *)v45 - v6, v23);
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v28 setAceId:v29];

  id v30 = v28;
  unint64_t v31 = v26;
  id v32 = [v26 refId];
  [v30 setRefId:v32];

  [v30 setCode:-1];
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v54;
  *(void *)(v33 + 32) = v25;
  uint64_t v55 = v33;
  specialized Array._endMutation()();
  id v34 = v25;
  Class v35 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v36 = v47;
  [v47 setCommands:v35];

  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1000DD1E0;
  *(void *)(v37 + 32) = v36;
  *(void *)(v37 + 40) = v30;
  uint64_t v55 = v37;
  specialized Array._endMutation()();
  sub_10007DCD8(0, (unint64_t *)&unk_1001717E0);
  id v38 = v49;
  id v39 = v36;
  id v40 = v30;
  Class v41 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v38 setCallbacks:v41];

  id v42 = v38;
  id v43 = [v31 aceId];
  [v42 setRefId:v43];

  id v44 = v31;
  sub_1000A6C80(v44, v50);
}

void sub_1000A4724()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)SAUIVisualResponseSnippet) init];
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = v2;
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setAceId:v8];

  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v7 setModelData:isa];

  id v10 = [v1 delegate];
  if (v10)
  {
    Class v11 = v10;
    sub_10007D3B4(&qword_100170FD0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1000DD100;
    *(void *)(v12 + 56) = sub_10007DCD8(0, &qword_1001717D8);
    *(void *)(v12 + 32) = v7;
    id v13 = v7;
    Class v14 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 siriSnippetViewController:v1 pushSirilandSnippets:v14];

    swift_unknownObjectRelease();
  }
}

void sub_1000A4964(void *a1, uint64_t a2, void *a3, void (*a4)(uint64_t, unint64_t))
{
  id v6 = a3;
  id v10 = a1;
  uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v9 = v8;

  a4(v7, v9);
  sub_100088E54(v7, v9);
}

void sub_1000A49FC()
{
  id v8 = [objc_allocWithZone((Class)SAUIPluginSnippet) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v8 setBundleName:v1];

  Class isa = Data._bridgeToObjectiveC()().super.isa;
  [v8 setModelData:isa];

  id v3 = [v0 delegate];
  if (v3)
  {
    uint64_t v4 = v3;
    sub_10007D3B4(&qword_100170FD0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1000DD100;
    *(void *)(v5 + 56) = sub_10007DCD8(0, &qword_1001717D0);
    *(void *)(v5 + 32) = v8;
    id v6 = v8;
    Class v7 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 siriSnippetViewController:v0 pushSirilandSnippets:v7];

    swift_unknownObjectRelease();
  }
}

id sub_1000A4C34(void *a1)
{
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v10[4] = sub_1000A6B2C;
  void v10[5] = v3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1000A5648;
  v10[3] = &unk_100145630;
  uint64_t v4 = _Block_copy(v10);
  swift_release();
  [v1 _beginMonitoringForNextCardWithBlock:v4];
  _Block_release(v4);
  id result = [v1 delegate];
  if (result)
  {
    id v6 = result;
    sub_10007D3B4(&qword_100170FD0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1000DD100;
    *(void *)(v7 + 56) = swift_getObjectType();
    *(void *)(v7 + 32) = a1;
    id v8 = a1;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 siriViewController:v1 performAceCommands:isa];

    return (id)swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000A4DB0(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    id v2 = [v1 cardSections];
    if (v2)
    {

      id v3 = [objc_allocWithZone((Class)SACardSnippet) init];
      uint64_t v4 = (objc_class *)[objc_allocWithZone((Class)_SFPBCard) initWithFacade:v1];
      Class isa = v4;
      if (v4)
      {
        id v6 = [(objc_class *)v4 data];

        if (v6)
        {
          uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v9 = v8;

          Class isa = Data._bridgeToObjectiveC()().super.isa;
          sub_100088E54(v7, v9);
        }
        else
        {
          Class isa = 0;
        }
      }
      [v3 setCardData:isa];

      swift_beginAccess();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v16 = Strong;
        id v17 = [Strong delegate];

        if (v17)
        {
          swift_beginAccess();
          id v18 = (void *)swift_unknownObjectWeakLoadStrong();
          sub_10007D3B4(&qword_100170FD0);
          uint64_t v19 = swift_allocObject();
          *(_OWORD *)(v19 + 16) = xmmword_1000DD100;
          *(void *)(v19 + 56) = sub_10007DCD8(0, (unint64_t *)&unk_1001717A0);
          *(void *)(v19 + 32) = v3;
          id v3 = v3;
          Class v20 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v17 siriSnippetViewController:v18 pushSirilandSnippets:v20];

          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      uint64_t v10 = swift_allocObject();
      swift_beginAccess();
      Class v11 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v1;
      *(void *)(v12 + 24) = v10;
      aBlock[4] = sub_1000A6B8C;
      aBlock[5] = v12;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000A55C0;
      aBlock[3] = &unk_100145680;
      id v13 = _Block_copy(aBlock);
      id v14 = v1;
      swift_release();
      [v14 loadCardSectionsWithCompletionHandler:v13];

      _Block_release(v13);
    }
  }
}

uint64_t sub_1000A50D4(objc_class *a1, id a2, uint64_t a3)
{
  Class isa = a1;
  if (a1)
  {
    sub_10007DCD8(0, (unint64_t *)&qword_100171130);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  [a2 setCardSections:isa];

  id v6 = [objc_allocWithZone((Class)SACardSnippet) init];
  uint64_t v7 = (objc_class *)[objc_allocWithZone((Class)_SFPBCard) initWithFacade:a2];
  Class v8 = v7;
  if (v7)
  {
    id v9 = [(objc_class *)v7 data];

    if (v9)
    {
      uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v12 = v11;

      Class v8 = Data._bridgeToObjectiveC()().super.isa;
      sub_100088E54(v10, v12);
    }
    else
    {
      Class v8 = 0;
    }
  }
  [v6 setCardData:v8];

  sub_10007DCD8(0, (unint64_t *)&qword_1001717B0);
  uint64_t v26 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = v6;
  aBlock[4] = sub_1000A6BD4;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A8D84;
  aBlock[3] = &unk_1001456D0;
  id v14 = _Block_copy(aBlock);
  swift_retain();
  id v25 = v6;
  swift_release();
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.unspecified.getter();
  uint64_t v19 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000A6BDC((unint64_t *)&qword_100171BE0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10007D3B4((uint64_t *)&unk_1001717C0);
  sub_1000A6C24();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v23 = (void *)v26;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

void sub_1000A5494(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    id v5 = [Strong delegate];

    if (v5)
    {
      swift_beginAccess();
      id v6 = (void *)swift_unknownObjectWeakLoadStrong();
      sub_10007D3B4(&qword_100170FD0);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1000DD100;
      *(void *)(v7 + 56) = sub_10007DCD8(0, (unint64_t *)&unk_1001717A0);
      *(void *)(v7 + 32) = a2;
      id v8 = a2;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v5 siriSnippetViewController:v6 pushSirilandSnippets:isa];

      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1000A55C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
  {
    sub_10007DCD8(0, (unint64_t *)&qword_100171130);
    uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  v3(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1000A5648(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id sub_1000A573C(double a1, double a2)
{
  _StringGuts.grow(_:)(19);
  v5._object = (void *)0x80000001000FE130;
  v5._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v5);
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10007DCA0(v6, (uint64_t)qword_100171AB0);
  os_log_type_t v7 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v7, 0x2000000uLL, 0xD00000000000001ALL, 0x80000001000FCE30, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  id result = [v2 delegate:a1, a2];
  if (result)
  {
    [result siriViewControllerHeightDidChange:v2];
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

id sub_1000A590C()
{
  id result = [v0 delegate];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  [result siriSnippetViewController:v0 setStatusViewHidden:1];
  swift_unknownObjectRelease();
  id result = [v0 _privateDelegate];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  [result siriViewControllerWillBeginEditing:v0];

  return (id)swift_unknownObjectRelease();
}

id sub_1000A59F8()
{
  id result = [v0 _privateDelegate];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  [result siriViewControllerDidEndEditing:v0];
  swift_unknownObjectRelease();
  id result = [v0 delegate];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  [result siriSnippetViewController:v0 setStatusViewHidden:0];

  return (id)swift_unknownObjectRelease();
}

void SiriUICardSnippetViewController.emitInstrumentationEvent(_:)(void *a1)
{
  uint64_t v2 = v1;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  unint64_t v71 = 0xD000000000000022;
  unint64_t v72 = 0x80000001000FCB60;
  id v4 = a1;
  id v5 = [v4 description];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = v7;

  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = sub_10007DCA0(v10, (uint64_t)qword_100171AB0);
  os_log_type_t v12 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v12, 0x2000000uLL, 0xD00000000000001CLL, 0x80000001000FCB40, 0xD000000000000022, 0x80000001000FCB60);
  swift_bridgeObjectRelease();
  self;
  uint64_t v13 = (void *)swift_dynamicCastObjCClass();
  if (!v13)
  {
    os_log_type_t v33 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v33, 0x2000000uLL, 0xD00000000000001CLL, 0x80000001000FCB40, 0xD000000000000045, 0x80000001000FCB90);
    return;
  }
  unint64_t v62 = (unint64_t)"o hide background.";
  uint64_t v63 = v11;
  id v70 = v13;
  id v65 = v4;
  id v66 = v2;
  id v14 = [v2 instrumentationTurnIdentifier];
  uint64_t v15 = sub_10007D3B4((uint64_t *)&unk_100171700);
  uint64_t v64 = (id *)&v59;
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  __chkstk_darwin(v15 - 8);
  if (!v14)
  {
    uint64_t v58 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v58);
    goto LABEL_17;
  }
  uint64_t v17 = type metadata accessor for UUID();
  id v18 = *(void **)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v69 = v19;
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v60 = (void (*)(char *, char *, uint64_t))v18[4];
  v60((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v17);
  uint64_t v61 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v18[7];
  v61((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v17);
  uint64_t v21 = (unsigned int (*)(char *, uint64_t, uint64_t))v18[6];
  if (v21((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v17) == 1)
  {
LABEL_17:
    __break(1u);
    return;
  }
  id v22 = objc_allocWithZone((Class)AFAnalyticsTurnBasedInstrumentationContext);
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v24 = [v22 initWithTurnIdentifier:isa];

  uint64_t v67 = (void (*)(char *, uint64_t))v18[1];
  uint64_t v68 = v18 + 1;
  v67((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
  Class v25 = (Class)v24;
  id v26 = v70;
  id v27 = &selRef_startRequestForText_;
  if ([v70 requiresNewTurn])
  {
    Class v28 = (Class)[v66 instrumentationTurnIdentifier];
    uint64_t v29 = __chkstk_darwin(v28);
    id v30 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    Class v59 = v25;
    if (v29)
    {
      uint64_t v64 = (id *)&v59;
      __chkstk_darwin(v29);
      id v32 = (char *)&v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      v60(v30, v32, v17);
      v61(v30, 0, 1, v17);
      if (v21(v30, 1, v17) == 1)
      {
        Class v28 = 0;
      }
      else
      {
        Class v28 = UUID._bridgeToObjectiveC()().super.isa;
        v67(v30, v17);
      }
    }
    else
    {
      v61((char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v17);
    }
    uint64_t v37 = (void (*)(char *, uint64_t, uint64_t, uint64_t))[self newTurnBasedContextWithPreviousTurnID:v28];
    uint64_t v61 = v37;

    unint64_t v71 = 0;
    unint64_t v72 = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    swift_bridgeObjectRelease();
    unint64_t v71 = 0xD00000000000001ALL;
    unint64_t v72 = 0x80000001000FDEC0;
    id v38 = [v37 turnIdentifier];
    uint64_t v39 = v69;
    __chkstk_darwin(v38);
    uint64_t v64 = (id *)((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v40 = (char *)((char *)&v59 - (char *)v64);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1000A6BDC((unint64_t *)&qword_100171430, (void (*)(uint64_t))&type metadata accessor for UUID);
    v41._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v41);
    swift_bridgeObjectRelease();
    id v36 = v67;
    v67(v40, v17);
    v42._countAndFlagsBits = 0x646C4F203E2D3C20;
    v42._object = (void *)0xEE00206E72755420;
    String.append(_:)(v42);
    Class v43 = v59;
    id v44 = [(objc_class *)v59 turnIdentifier];

    __chkstk_darwin(v45);
    uint64_t v46 = (char *)((char *)&v59 - (char *)v64);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    v47._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v47);
    swift_bridgeObjectRelease();
    v36(v46, v17);
    uint64_t v48 = v71;
    unint64_t v49 = v72;
    os_log_type_t v50 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v50, 0x2000000uLL, 0xD00000000000001CLL, v62 | 0x8000000000000000, v48, v49);
    swift_bridgeObjectRelease();

    id v51 = self;
    Class v34 = v61;
    id v52 = [v51 sharedManager];
    [v52 storeCurrentInstrumentationTurnContext:v34];

    id v53 = [(objc_class *)v34 turnIdentifier];
    uint64_t v35 = v39;
    __chkstk_darwin(v53);
    long long v54 = (char *)((char *)&v59 - (char *)v64);
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    Class v25 = UUID._bridgeToObjectiveC()().super.isa;
    uint64_t v55 = v54;
    id v27 = &selRef_startRequestForText_;
    v36(v55, v17);
    [v66 setInstrumentationTurnIdentifier:v25];

    id v26 = v70;
  }
  else
  {
    Class v34 = v25;
    uint64_t v35 = v69;
    id v36 = v67;
  }

  id v56 = [v34 v27[155]];
  __chkstk_darwin(v56);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  Class v57 = UUID._bridgeToObjectiveC()().super.isa;
  v36((char *)&v59 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
  [v26 emitWithTurnIdentifier:v57];
}

Swift::Void __swiftcall SiriUICardSnippetViewController.informHostOfBackgroundColor(_:)(UIColor_optional a1)
{
  uint64_t v2 = v1;
  Class isa = a1.value.super.isa;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  id v4 = isa;
  sub_10007D3B4(&qword_100171710);
  v5._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_10007DCA0(v6, (uint64_t)qword_100171AB0);
  os_log_type_t v7 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v7, 0x2000000uLL, 0xD00000000000001FLL, 0x80000001000FCDE0, 0xD000000000000017, 0x80000001000FDEE0);
  swift_bridgeObjectRelease();
  type metadata accessor for SiriUIVisualResponseViewController();
  uint64_t v8 = swift_dynamicCastClass();
  if (v8 && isa)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void **)(v8 + OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView);
    uint64_t v11 = v4;
    id v12 = v2;
    id v13 = v10;
    [v13 setEffect:0];
    [v13 setBackgroundColor:v11];
    id v14 = [v12 delegate];
    if (v14)
    {
      uint64_t v15 = v14;
      if ([v14 respondsToSelector:"siriSnippetViewController:informHostOfBackgroundView:isSnippetAsyncColored:"])
      {
        id v16 = v12;
        [v15 siriSnippetViewController:v9 informHostOfBackgroundView:v13 isSnippetAsyncColored:0];

        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
    }
    else
    {
    }
    *(unsigned char *)(v9 + OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_isBackgroundViewApplied) = 1;
  }
}

void SiriUICardSnippetViewController.informHostOfBackgroundMaterial(_:)(uint64_t a1)
{
  _StringGuts.grow(_:)(27);
  v3._object = (void *)0x80000001000FDF00;
  v3._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v3);
  type metadata accessor for VRXHostMaterial(0);
  _print_unlocked<A, B>(_:_:)();
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10007DCA0(v4, (uint64_t)qword_100171AB0);
  os_log_type_t v5 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v5, 0x2000000uLL, 0xD000000000000022, 0x80000001000FCCE0, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  type metadata accessor for SiriUIVisualResponseViewController();
  uint64_t v6 = swift_dynamicCastClass();
  if (v6 && (unint64_t)(a1 - 1) <= 4)
  {
    uint64_t v7 = v6;
    uint64_t v8 = qword_1000DD248[a1 - 1];
    uint64_t v9 = *(void **)(v6 + OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView);
    uint64_t v10 = self;
    id v11 = v1;
    id v12 = v9;
    id v13 = [v10 effectWithStyle:v8];
    [v12 setEffect:v13];

    [v12 setBackgroundColor:0];
    id v14 = [v11 delegate];
    if (v14)
    {
      uint64_t v15 = v14;
      if ([v14 respondsToSelector:"siriSnippetViewController:informHostOfBackgroundView:isSnippetAsyncColored:"])
      {
        id v16 = v11;
        [v15 siriSnippetViewController:v7 informHostOfBackgroundView:v12 isSnippetAsyncColored:0];
      }
      swift_unknownObjectRelease();
    }
    else
    {
    }
    *(unsigned char *)(v7 + OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_isBackgroundViewApplied) = 1;
  }
}

uint64_t type metadata accessor for SiriUIVisualResponseViewController()
{
  return self;
}

uint64_t type metadata accessor for SiriUIHostingView()
{
  return self;
}

uint64_t sub_1000A6AF4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000A6B2C(void *a1)
{
}

uint64_t sub_1000A6B34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000A6B44()
{
  return swift_release();
}

uint64_t sub_1000A6B4C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000A6B8C(objc_class *a1)
{
  return sub_1000A50D4(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1000A6B94()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000A6BD4()
{
  sub_1000A5494(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1000A6BDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1000A6C24()
{
  unint64_t result = qword_100171BF0;
  if (!qword_100171BF0)
  {
    sub_100081AF8((uint64_t *)&unk_1001717C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171BF0);
  }
  return result;
}

id sub_1000A6C80(void *a1, id a2)
{
  id result = [a2 delegate];
  if (result)
  {
    os_log_type_t v5 = result;
    sub_10007D3B4(&qword_100170FD0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1000DD100;
    *(void *)(v6 + 56) = swift_getObjectType();
    *(void *)(v6 + 32) = a1;
    id v7 = a1;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 siriViewController:a2 performAceCommands:isa];

    return (id)swift_unknownObjectRelease();
  }
  return result;
}

unint64_t sub_1000A6D68()
{
  unint64_t result = qword_1001717F8;
  if (!qword_1001717F8)
  {
    type metadata accessor for SnippetCommandError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1001717F8);
  }
  return result;
}

void sub_1000A6DC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_snippetCommandExecutor;
  type metadata accessor for SnippetCommandExecutor();
  swift_allocObject();
  *(void *)&v0[v2] = SnippetCommandExecutor.init()();
  Swift::String v3 = &v0[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_appBundleId];
  *Swift::String v3 = 0;
  v3[1] = 0;
  uint64_t v4 = OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_backgroundView;
  *(void *)&v1[v4] = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:0];
  v1[OBJC_IVAR____TtC4Siri34SiriUIVisualResponseViewController_isBackgroundViewApplied] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double SRFeedbackButton.sizeThatFits(_:)()
{
  return 50.0;
}

void sub_1000A6FD8()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self _systemImageNamed:v1];

  [v0 setImage:v2 forState:0];
  id v3 = [self systemDarkGrayColor];
  [v0 setTintColor:v3];

  id v4 = [v0 layer];
  [v4 setCornerRadius:25.0];

  id v5 = [v0 layer];
  [v5 setMasksToBounds:1];
}

id SRFeedbackButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRFeedbackButton();
  return [super dealloc];
}

uint64_t type metadata accessor for SRFeedbackButton()
{
  return self;
}

char *sub_1000A7194(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView] = 0;
  uint64_t v9 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView;
  id v10 = objc_allocWithZone((Class)UIVisualEffectView);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 initWithEffect:0];
  uint64_t v12 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceContentEffectView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)SiriSharedUIStandardVisualEffectView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceShimmerEffectView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)SiriSharedUIStandardVisualEffectView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceDarkeningView;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v15 = self;
  id v16 = [v15 sharedLight];
  id v17 = [objc_allocWithZone((Class)_UIIntelligenceContentLightEffect) initWithLightSource:v16];

  *(void *)&v11[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceContentLightEffect] = v17;
  id v18 = [v15 sharedShimmeringLight];
  id v19 = [objc_allocWithZone((Class)_UIIntelligenceEdgeLightEffect) initWithLightSource:v18 radius:0 region:5.1];

  *(void *)&v11[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceInsideLightEffect] = v19;
  id v20 = [v15 sharedShimmeringLight];
  id v21 = [objc_allocWithZone((Class)_UIIntelligenceEdgeLightEffect) initWithLightSource:v20 radius:1 region:5.0];

  *(void *)&v11[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceOutsideLightEffect] = v21;
  if (qword_1001703D0 != -1) {
    swift_once();
  }
  id v22 = [objc_allocWithZone((Class)_UIIntelligenceRimHighlightEffect) initWithThickness:qword_100172C80 color:2 softRadius:0 region:4.0 activationDirection:10.0];
  *(void *)&v11[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceRimHighlightEffect] = v22;

  v42.receiver = v11;
  v42.super_class = (Class)type metadata accessor for SRCarPlaySnippetPlatterView();
  id v23 = [super initWithFrame:a1, a2, a3, a4];
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  Class v25 = (char *)v23;
  id v26 = v25;
  if (v24)
  {
    [v25 _setContinuousCornerRadius:20.0];
  }
  else
  {
    id v27 = [v25 layer];
    [v27 setCornerRadius:20.0];

    id v28 = [v26 layer];
    if (qword_1001703D8 != -1) {
      swift_once();
    }
    [v28 setCornerCurve:qword_100172C88];
  }
  [v26 setAutoresizingMask:18];
  [v26 setFrame:a1, a2, a3, a4];

  id v29 = [objc_allocWithZone((Class)UIView) init];
  self;
  if (swift_dynamicCastObjCClass())
  {
    [v29 _setContinuousCornerRadius:20.0];
  }
  else
  {
    id v30 = [v29 layer];
    [v30 setCornerRadius:20.0];

    id v31 = [v29 layer];
    if (qword_1001703D8 != -1) {
      swift_once();
    }
    [v31 setCornerCurve:qword_100172C88];
  }
  [v29 setAutoresizingMask:18];
  [v29 setFrame:a1, a2, a3, a4];
  [v29 setHidden:1];
  [v26 addSubview:v29];
  id v32 = *(void **)&v26[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView];
  *(void *)&v26[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView] = v29;
  id v33 = v29;

  uint64_t v34 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView;
  uint64_t v35 = *(void **)&v26[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView];
  self;
  uint64_t v36 = swift_dynamicCastObjCClass();
  id v37 = v35;
  id v38 = v37;
  if (v36)
  {
    [v37 _setContinuousCornerRadius:20.0];
  }
  else
  {
    id v39 = [v37 layer];
    [v39 setCornerRadius:20.0];

    id v40 = [v38 layer];
    if (qword_1001703D8 != -1) {
      swift_once();
    }
    [v40 setCornerCurve:qword_100172C88];
  }
  [v38 setAutoresizingMask:18];
  [v38 setFrame:a1, a2, a3, a4];

  [*(id *)&v26[v34] setHidden:1];
  [*(id *)&v26[v34] setOpaque:0];
  [v26 addSubview:*(void *)&v26[v34]];
  if ([self deviceSupportsAI]) {
    sub_1000A81D4(a1, a2, a3, a4);
  }

  return v26;
}

id sub_1000A7860(double a1)
{
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceContentEffectView) layer];
  [v3 setCornerRadius:a1];

  id v4 = [*(id *)(v1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceShimmerEffectView) layer];
  [v4 setCornerRadius:a1];

  id v5 = [*(id *)(v1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceDarkeningView) layer];
  [v5 setCornerRadius:a1];

  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView);
  if (v6)
  {
    id v7 = [v6 layer];
    [v7 setCornerRadius:a1];
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView);

  return [v8 _setContinuousCornerRadius:a1];
}

id sub_1000A7984(uint64_t a1)
{
  if ((unint64_t)(a1 - 2) > 3) {
    uint64_t v2 = 9;
  }
  else {
    uint64_t v2 = *(void *)&asc_1000DD2B0[8 * a1 - 16];
  }
  uint64_t v3 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView;
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView);
  id v5 = self;
  id v6 = v4;
  id v7 = [v5 effectWithStyle:v2];
  [v6 setEffect:v7];

  [*(id *)(v1 + v3) setOpaque:0];
  [*(id *)(v1 + v3) setHidden:0];
  id result = *(id *)(v1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView);
  if (result)
  {
    return [result setHidden:1];
  }
  return result;
}

void sub_1000A7A94(void *a1)
{
  uint64_t v2 = v1;
  [v2 insertSubview:a1 aboveSubview:*(void *)&v2[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView]];
  id v4 = self;
  sub_10007D3B4(&qword_100171650);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000DD110;
  id v6 = [v2 leadingAnchor];
  id v7 = [a1 leadingAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7];

  *(void *)(v5 + 32) = v8;
  id v9 = [v2 trailingAnchor];
  id v10 = [a1 trailingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v5 + 40) = v11;
  id v12 = [v2 topAnchor];
  id v13 = [a1 topAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v5 + 48) = v14;
  id v15 = [v2 bottomAnchor];
  id v16 = [a1 bottomAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v5 + 56) = v17;
  id v18 = [v2 centerXAnchor];
  id v19 = [a1 centerXAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v5 + 64) = v20;
  id v21 = [v2 centerYAnchor];
  id v22 = [a1 centerYAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v5 + 72) = v23;
  specialized Array._endMutation()();
  sub_10007DCD8(0, &qword_100171658);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 activateConstraints:isa];
}

void sub_1000A7DCC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceShimmerEffectView);
  sub_10007D3B4(&qword_100171650);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000DD1E0;
  id v4 = *(void **)(a1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceInsideLightEffect);
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceOutsideLightEffect);
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  specialized Array._endMutation()();
  sub_10007DCD8(0, &qword_1001718A0);
  id v6 = v4;
  id v7 = v5;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setBackgroundEffects:isa];
}

void sub_1000A7EC4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceContentEffectView);
  [v2 setAlpha:1.0];
  sub_10007D3B4(&qword_100171650);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1000DD1E0;
  id v4 = *(void **)(a1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceContentLightEffect);
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceRimHighlightEffect);
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = v5;
  specialized Array._endMutation()();
  sub_10007DCD8(0, &qword_1001718A0);
  id v6 = v4;
  id v7 = v5;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setBackgroundEffects:isa];
}

void sub_1000A7FD0(uint64_t a1, void *a2)
{
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  void v7[4] = sub_1000A879C;
  void v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000A8D84;
  void v7[3] = &unk_100145720;
  uint64_t v5 = _Block_copy(v7);
  id v6 = a2;
  swift_release();
  [v3 animateWithDuration:v5 animations:1.5];
  _Block_release(v5);
}

void sub_1000A80BC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceContentEffectView);
  sub_10007DCD8(0, &qword_1001718A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v2 setBackgroundEffects:isa];

  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceShimmerEffectView);
  Class v5 = Array._bridgeToObjectiveC()().super.isa;
  [v4 setBackgroundEffects:v5];

  id v6 = *(void **)(a1 + OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceDarkeningView);
  id v7 = [self clearColor];
  [v6 setBackgroundColor:v7];
}

id sub_1000A81D4(double a1, double a2, double a3, double a4)
{
  id v9 = *(void **)&v4[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceContentEffectView];
  self;
  if (swift_dynamicCastObjCClass())
  {
    [v9 _setContinuousCornerRadius:20.0];
  }
  else
  {
    id v10 = [v9 layer];
    [v10 setCornerRadius:20.0];

    id v11 = [v9 layer];
    if (qword_1001703D8 != -1) {
      swift_once();
    }
    [v11 setCornerCurve:qword_100172C88];
  }
  [v9 setAutoresizingMask:18];
  [v9 setFrame:a1, a2, a3, a4];
  [v9 setAlpha:0.0];
  uint64_t v12 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView;
  [v4 insertSubview:v9 belowSubview:*(void *)&v4[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView]];
  id v13 = *(void **)&v4[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceDarkeningView];
  self;
  if (swift_dynamicCastObjCClass())
  {
    [v13 _setContinuousCornerRadius:20.0];
  }
  else
  {
    id v14 = [v13 layer];
    [v14 setCornerRadius:20.0];

    id v15 = [v13 layer];
    if (qword_1001703D8 != -1) {
      swift_once();
    }
    [v15 setCornerCurve:qword_100172C88];
  }
  [v13 setAutoresizingMask:18];
  [v13 setFrame:a1, a2, a3, a4];
  id v16 = [objc_allocWithZone((Class)UIColor) initWithWhite:0.0 alpha:0.1];
  [v13 setBackgroundColor:v16];

  [v13 setUserInteractionEnabled:0];
  id v17 = [v13 layer];
  [v17 setAllowsHitTesting:0];

  [v4 insertSubview:v13 aboveSubview:*(void *)&v4[v12]];
  id v18 = *(void **)&v4[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceShimmerEffectView];
  self;
  if (swift_dynamicCastObjCClass())
  {
    [v18 _setContinuousCornerRadius:20.0];
  }
  else
  {
    id v19 = [v18 layer];
    [v19 setCornerRadius:20.0];

    id v20 = [v18 layer];
    if (qword_1001703D8 != -1) {
      swift_once();
    }
    [v20 setCornerCurve:qword_100172C88];
  }
  [v18 setAutoresizingMask:18];
  [v18 setFrame:a1, a2, a3, a4];
  [v18 setUserInteractionEnabled:0];
  id v21 = [v18 layer];
  [v21 setAllowsHitTesting:0];

  return [v4 insertSubview:v18 aboveSubview:v13];
}

id sub_1000A8650()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlaySnippetPlatterView();
  return [super dealloc];
}

uint64_t type metadata accessor for SRCarPlaySnippetPlatterView()
{
  return self;
}

uint64_t sub_1000A8764()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000A879C()
{
  sub_1000A80BC(*(void *)(v0 + 16));
}

uint64_t sub_1000A87A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000A87B4()
{
  return swift_release();
}

void sub_1000A87BC()
{
  *(void *)&v0[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_coloredPlatterView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_materialView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:0];
  uint64_t v2 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceContentEffectView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)SiriSharedUIStandardVisualEffectView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v3 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceShimmerEffectView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)SiriSharedUIStandardVisualEffectView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v4 = OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceDarkeningView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000A88E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = a1;
  unint64_t v5 = (unint64_t)a1 >> 62;
  if (!a1) {
    goto LABEL_20;
  }
  if (!v5)
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
    {
      swift_bridgeObjectRetain();
      goto LABEL_5;
    }
LABEL_20:
    _StringGuts.grow(_:)(95);
    v16._countAndFlagsBits = 0xD000000000000054;
    v16._object = (void *)0x80000001000FE580;
    String.append(_:)(v16);
    if (v3 && v5)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    v17._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    v18._countAndFlagsBits = 0x746E656D656C6520;
    v18._object = (void *)0xE900000000000073;
    String.append(_:)(v18);
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_10007DCA0(v19, (uint64_t)qword_100171AB0);
    os_log_type_t v20 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v20, 0x10uLL, 0x6D6D6F43656B616DLL, 0xEF293A5F28646E61, 0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if (a1 >= 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  else {
    uint64_t v2 = a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15 != 1) {
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
LABEL_5:
  if ((v3 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_29;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (!v6)
  {
    _StringGuts.grow(_:)(38);
    v11._object = (void *)0x80000001000FE5E0;
    v11._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v11);
    sub_10007D3B4((uint64_t *)&unk_100171470);
    _print_unlocked<A, B>(_:_:)();
    v12._object = (void *)0x80000001000FE600;
    v12._countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v12);
    uint64_t v2 = 0;
    unint64_t v3 = 0xE000000000000000;
    if (qword_100170448 == -1)
    {
LABEL_13:
      uint64_t v13 = type metadata accessor for Logger();
      sub_10007DCA0(v13, (uint64_t)qword_100171AB0);
      os_log_type_t v14 = static os_log_type_t.info.getter();
      sub_1000B2FEC(v14, 0x10uLL, 0x6D6D6F43656B616DLL, 0xEF293A5F28646E61, v2, v3);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
LABEL_26:
      uint64_t v21 = type metadata accessor for Command();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a2, 1, 1, v21);
    }
LABEL_29:
    swift_once();
    goto LABEL_13;
  }
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v7 = enum case for Command.aceCommand(_:);
  uint64_t v8 = type metadata accessor for Command();
  uint64_t v22 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104))(a2, v7, v8);
  id v9 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56);

  return v9(a2, 0, 1, v8);
}

uint64_t sub_1000A8D78(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_1000A8D84(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

char *sub_1000A8E58(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = type metadata accessor for UIPromptBackgroundView.Configuration();
  __chkstk_darwin(v11 - 8);
  v5[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_textIsProvidedBySuggestion] = 0;
  Swift::String v12 = &v5[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_invocationTextForSuggestion];
  void *v12 = 0;
  v12[1] = 0;
  v5[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_requestSourceIsQuickTypeTamale] = 0;
  v5[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_isInTamaleAndCollapsed] = 0;
  v5[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_firstPromptSubmitted] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v13 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView;
  type metadata accessor for EditMenuAwarePromptEntryView();
  id v14 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v15 = v5;
  *(void *)&v5[v13] = [v14 init];
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint] = 0;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBottomConstraint] = 0;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewDismissButtonConstraint] = 0;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBackgroundView] = 0;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView] = 0;
  uint64_t v16 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView;
  *(void *)&v15[v16] = [objc_allocWithZone((Class)type metadata accessor for SiriSharedUIDropletView()) init];
  uint64_t v17 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton;
  *(void *)&v15[v17] = [objc_allocWithZone((Class)UIButton) init];
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonWidth] = 0x4048000000000000;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_spacing] = 0x4024000000000000;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_animationDuration] = 0x3FE0000000000000;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBottomConstant] = 0x4042000000000000;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_promptEntryViewDampingValue] = 0x3FE999999999999ALL;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_promptEntryViewResponseValue] = 0x3FE199999999999ALL;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_promptEntryViewXButtonDampingValue] = 0x3FE8F5C28F5C28F6;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_promptEntryViewXButtonResponseValue] = 0x3FF0000000000000;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_buttonBlurRadius] = 0x401C000000000000;
  *(void *)&v15[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_shadowOpacity] = 0x3FC5C28F5C28F5C3;

  v71.receiver = v15;
  v71.super_class = (Class)type metadata accessor for SystemAssistantPromptEntryView();
  Swift::String v18 = [super initWithFrame:a2, a3, a4, a5];
  uint64_t v19 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView;
  sub_10007D3B4(&qword_100171A20);
  sub_1000AF250();
  os_log_type_t v20 = v18;
  dispatch thunk of IntelligenceUI.PromptEntryView.visibleLineLimit.setter();
  uint64_t v21 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  [v21 setKeyboardAppearance:13];

  uint64_t v22 = *(void **)&v18[v19];
  sub_1000AF2AC();
  id v23 = v20;
  id v24 = v22;
  dispatch thunk of IntelligenceUI.PromptEntryView.delegate.setter();

  Class v25 = *(void **)&v18[v19];
  swift_unknownObjectWeakAssign();
  uint64_t v26 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v26 - 8);
  id v27 = v25;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v28 = type metadata accessor for Locale();
  __chkstk_darwin(v28 - 8);
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  dispatch thunk of IntelligenceUI.PromptEntryView.placeholder.setter();

  id v29 = *(id *)&v18[v19];
  dispatch thunk of IntelligenceUI.PromptEntryView.trailingButtonActivatesDictationWhenEmpty.setter();

  id v30 = *(id *)&v18[v19];
  dispatch thunk of IntelligenceUI.PromptEntryView.isTrailingButtonVisible.setter();

  id v31 = *(id *)&v18[v19];
  dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonConfiguredAsToggle.setter();

  id v32 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
  static UIPromptBackgroundView.Configuration.intelligentWhenFocused.getter();
  dispatch thunk of UIPromptBackgroundView.configuration.setter();

  [v23 addSubview:*(void *)&v18[v19]];
  id v33 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  id v34 = [v33 inputAssistantItem];

  id v70 = a1;
  [v34 _setDictationReplacementAction:a1];

  uint64_t v35 = *(void **)&v18[v19];
  [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v36 = self;
  sub_10007D3B4(&qword_100171650);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1000DD2D0;
  id v38 = [v23 topAnchor];
  id v39 = [v35 topAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  *(void *)(v37 + 32) = v40;
  id v41 = [v23 leftAnchor];
  id v42 = [*(id *)&v18[v19] leftAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  *(void *)(v37 + 40) = v43;
  id v44 = [v23 rightAnchor];
  id v45 = [*(id *)&v18[v19] rightAnchor];
  id v46 = [v44 constraintEqualToAnchor:v45];

  *(void *)(v37 + 48) = v46;
  specialized Array._endMutation()();
  sub_10007DCD8(0, &qword_100171658);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v36 activateConstraints:isa];

  id v48 = [*(id *)&v18[v19] widthAnchor];
  id v49 = [v23 widthAnchor];
  id v50 = [self mainScreen];
  [v50 bounds];
  CGFloat v52 = v51;
  CGFloat v54 = v53;
  CGFloat v56 = v55;
  CGFloat v58 = v57;

  v72.origin.x = v52;
  v72.origin.y = v54;
  v72.size.width = v56;
  v72.size.height = v58;
  id v59 = [v48 constraintEqualToAnchor:v49 constant:-(CGRectGetWidth(v72) + -20.0 + -48.0)];

  uint64_t v60 = *(void **)&v23[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint];
  *(void *)&v23[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint] = v59;

  id v61 = [v23 bottomAnchor];
  id v62 = [*(id *)&v18[v19] bottomAnchor];
  id v63 = [v61 constraintEqualToAnchor:v62];

  uint64_t v64 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBottomConstraint;
  id v65 = *(void **)&v23[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBottomConstraint];
  *(void *)&v23[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBottomConstraint] = v63;

  id v66 = *(void **)&v23[v64];
  if (v66) {
    [v66 setActive:1];
  }
  id v67 = [self defaultCenter];
  uint64_t v68 = v23;
  [v67 addObserver:v68 selector:"keyboardWillHideWithNotification:" name:UIKeyboardWillHideNotification object:0];

  return v68;
}

void sub_1000A9754()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIPromptBackgroundView.Configuration();
  __chkstk_darwin(v2 - 8);
  if (v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_isInTamaleAndCollapsed] == 1)
  {
    unint64_t v3 = (void *)sub_1000AE388();
    uint64_t v4 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
    dispatch thunk of UIPromptBackgroundView.configuration.getter();
    dispatch thunk of UIPromptBackgroundView.configuration.setter();

    unint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBottomConstraint];
    if (v5) {
      [v5 setConstant:36.0];
    }
    uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint];
    if (v6)
    {
      uint64_t v7 = self;
      id v8 = v6;
      id v9 = [v7 mainScreen];
      [v9 bounds];
      CGFloat v11 = v10;
      CGFloat v13 = v12;
      CGFloat v15 = v14;
      CGFloat v17 = v16;

      v23.origin.x = v11;
      v23.origin.y = v13;
      v23.size.width = v15;
      v23.size.height = v17;
      [v8 setConstant:-(CGRectGetWidth(v23) + -20.0 + -48.0)];
    }
    Swift::String v18 = self;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v1;
    aBlock[4] = sub_1000AF1B0;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000A8D84;
    aBlock[3] = &unk_100145BF8;
    os_log_type_t v20 = _Block_copy(aBlock);
    id v21 = v1;
    swift_release();
    [v18 animateWithDuration:v20 animations:0.5];
    _Block_release(v20);
  }
}

void sub_1000A9AFC(char a1)
{
  uint64_t v2 = v1;
  int v4 = a1 & 1;
  uint64_t v5 = type metadata accessor for UIPromptBackgroundView.Configuration();
  __chkstk_darwin(v5 - 8);
  if (v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_isInTamaleAndCollapsed] != v4)
  {
    v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_isInTamaleAndCollapsed] = v4;
    if (a1)
    {
      uint64_t v6 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView;
      [v2 addSubview:*(void *)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView]];
      uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView];
      id v8 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
      [v8 removeFromSuperview];

      id v9 = *(id *)&v2[v6];
      double v10 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
      [v9 addSubview:v10];

      v141 = v7;
      uint64_t v11 = dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
      double v12 = *(void **)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBackgroundView];
      *(void *)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBackgroundView] = v11;

      sub_1000ACE6C();
      NSString v13 = String._bridgeToObjectiveC()();
      id v14 = [self systemImageNamed:v13];

      uint64_t v15 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton;
      double v16 = *(void **)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton];
      CGFloat v17 = self;
      id v18 = v16;
      id v19 = [v17 labelColor];
      [v18 setTintColor:v19];

      os_log_type_t v20 = self;
      id v21 = [v20 configurationWithTextStyle:UIFontTextStyleSubheadline];
      id v22 = [v20 configurationWithWeight:5];
      id v23 = [v20 configurationWithScale:3];
      v138 = v22;
      v139 = v21;
      id v24 = [v21 configurationByApplyingConfiguration:v22];
      v137 = v23;
      id v25 = [v24 configurationByApplyingConfiguration:v23];

      uint64_t v26 = (void *)sub_1000AE388();
      id v27 = *(void **)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView];
      *(void *)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView] = v26;
      id v28 = v26;

      [*(id *)&v2[v6] addSubview:v28];
      v140 = v14;
      id v136 = [v14 imageByApplyingSymbolConfiguration:v25];
      [*(id *)&v2[v15] setImage:forState:];
      id v29 = [*(id *)&v2[v15] layer];
      [v29 setCornerRadius:24.0];

      [*(id *)&v2[v15] setClipsToBounds:1];
      [*(id *)&v2[v15] setTranslatesAutoresizingMaskIntoConstraints:0];
      [*(id *)&v2[v15] addTarget:v2 action:"closeButtonTapped" forControlEvents:64];
      [v2 addSubview:*(void *)&v2[v15]];
      id v30 = [*(id *)&v2[v15] imageView];
      if (v30)
      {
        id v31 = v30;
        [*(id *)&v2[v15] bringSubviewToFront:v30];
      }
      [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v32 = self;
      sub_10007D3B4(&qword_100171650);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1000DD2E0;
      id v34 = [v28 leadingAnchor];
      id v35 = [*(id *)&v2[v15] leadingAnchor];
      id v36 = [v34 constraintEqualToAnchor:v35];

      *(void *)(v33 + 32) = v36;
      id v37 = [v28 trailingAnchor];
      id v38 = [*(id *)&v2[v15] trailingAnchor];
      id v39 = [v37 constraintEqualToAnchor:v38];

      *(void *)(v33 + 40) = v39;
      id v40 = [v28 topAnchor];
      id v41 = [*(id *)&v2[v15] topAnchor];
      id v42 = [v40 constraintEqualToAnchor:v41];

      *(void *)(v33 + 48) = v42;
      id v43 = [v28 bottomAnchor];
      id v44 = [*(id *)&v2[v15] bottomAnchor];
      id v45 = [v43 constraintEqualToAnchor:v44];

      *(void *)(v33 + 56) = v45;
      aBlock = (void **)v33;
      specialized Array._endMutation()();
      sub_10007DCD8(0, &qword_100171658);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      v135 = v32;
      [v32 activateConstraints:isa];

      Swift::String v47 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
      id v48 = (void *)sub_1000AE388();
      dispatch thunk of UIPromptBackgroundView.configuration.getter();

      dispatch thunk of UIPromptBackgroundView.configuration.setter();
      id v49 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
      dispatch thunk of UIPromptBackgroundView.updateFocus(state:)();

      id v50 = [*(id *)&v2[v15] trailingAnchor];
      id v51 = [v2 trailingAnchor];
      id v52 = [v50 constraintEqualToAnchor:v51];

      uint64_t v53 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewDismissButtonConstraint;
      CGFloat v54 = *(void **)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewDismissButtonConstraint];
      *(void *)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewDismissButtonConstraint] = v52;

      double v55 = *(void **)&v2[v53];
      if (v55)
      {
        CGFloat v56 = self;
        id v57 = v55;
        id v58 = [v56 mainScreen];
        [v58 bounds];
        CGFloat v60 = v59;
        CGFloat v62 = v61;
        CGFloat v64 = v63;
        CGFloat v66 = v65;

        v148.origin.x = v60;
        v148.origin.y = v62;
        v148.size.width = v64;
        v148.size.height = v66;
        [v57 setConstant:-(CGRectGetWidth(v148) + -20.0 + -48.0)];

        id v67 = *(void **)&v2[v53];
      }
      else
      {
        id v67 = 0;
      }
      [v67 setActive:1];
      uint64_t v97 = swift_allocObject();
      *(_OWORD *)(v97 + 16) = xmmword_1000DD110;
      id v98 = [v2 widthAnchor];
      v134 = self;
      id v99 = [v134 mainScreen];
      [v99 bounds];
      CGFloat v101 = v100;
      CGFloat v103 = v102;
      CGFloat v105 = v104;
      CGFloat v107 = v106;

      v149.origin.x = v101;
      v149.origin.y = v103;
      v149.size.width = v105;
      v149.size.height = v107;
      id v108 = [v98 constraintEqualToConstant:CGRectGetWidth(v149) + -20.0];

      *(void *)(v97 + 32) = v108;
      id v109 = [*(id *)&v2[v15] widthAnchor];
      id v110 = [v109 constraintEqualToConstant:48.0];

      *(void *)(v97 + 40) = v110;
      id v111 = [*(id *)&v2[v15] heightAnchor];
      id v112 = [v111 constraintEqualToConstant:48.0];

      *(void *)(v97 + 48) = v112;
      id v113 = [*(id *)&v2[v15] centerYAnchor];
      id v114 = [v141 centerYAnchor];
      id v115 = [v113 constraintEqualToAnchor:v114];

      *(void *)(v97 + 56) = v115;
      id v116 = [v141 leadingAnchor];
      id v117 = [v2 leadingAnchor];
      id v118 = [v116 constraintEqualToAnchor:v117];

      *(void *)(v97 + 64) = v118;
      id v119 = [v141 widthAnchor];
      id v120 = [v119 constraintEqualToConstant:48.0];

      *(void *)(v97 + 72) = v120;
      aBlock = (void **)v97;
      specialized Array._endMutation()();
      Class v121 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v135 activateConstraints:v121];

      uint64_t v122 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint;
      [*(id *)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint] setActive:1];
      v123 = *(void **)&v2[v122];
      if (v123)
      {
        id v124 = v123;
        id v125 = [v134 mainScreen];
        [v125 bounds];
        CGFloat v127 = v126;
        CGFloat v129 = v128;
        CGFloat v131 = v130;
        CGFloat v133 = v132;

        v150.origin.x = v127;
        v150.origin.y = v129;
        v150.size.width = v131;
        v150.size.height = v133;
        [v124 setConstant:-(CGRectGetWidth(v150) + -20.0 + -48.0)];
      }
      [v2 layoutIfNeeded];
      sub_1000AADB0();

      uint64_t v96 = v136;
    }
    else
    {
      uint64_t v68 = *(void **)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBackgroundView];
      if (v68)
      {
        id v69 = [v68 layer];
        [v69 setShadowOpacity:0.0];
      }
      id v70 = *(void **)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView];
      if (v70)
      {
        id v71 = [v70 layer];
        [v71 setShadowOpacity:0.0];
      }
      CGRect v72 = *(void **)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView];
      [v72 alpha];
      if (v73 == 0.0)
      {
        [v72 setAlpha:1.0];
        [v2 layoutIfNeeded];
      }
      uint64_t v74 = *(void **)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint];
      if (v74) {
        [v74 setConstant:0.0];
      }
      id v75 = *(void **)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBottomConstraint];
      if (v75) {
        [v75 setConstant:0.0];
      }
      NSString v76 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
      [v76 setAttributedPlaceholder:0];

      uint64_t v77 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
      static UIPromptBackgroundView.Configuration.intelligent.getter();
      dispatch thunk of UIPromptBackgroundView.configuration.setter();

      NSString v78 = String._bridgeToObjectiveC()();
      id v79 = [self animationWithKeyPath:v78];

      [v79 setDuration:0.125];
      unint64_t v80 = self;
      id v25 = v79;
      id v81 = [v80 functionWithName:kCAMediaTimingFunctionLinear];
      [v25 setTimingFunction:v81];

      Class v82 = Double._bridgeToObjectiveC()().super.super.isa;
      [v25 setFromValue:v82];

      Class v83 = Double._bridgeToObjectiveC()().super.super.isa;
      [v25 setToValue:v83];

      id v84 = [*(id *)&v2[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton] imageView];
      if (v84)
      {
        unint64_t v85 = v84;
        id v86 = [v84 layer];

        id v87 = [v25 keyPath];
        [v86 addAnimation:v25 forKey:v87];
      }
      id v88 = self;
      uint64_t v89 = swift_allocObject();
      *(void *)(v89 + 16) = v2;
      v146 = sub_1000AF130;
      uint64_t v147 = v89;
      aBlock = _NSConcreteStackBlock;
      uint64_t v143 = 1107296256;
      v144 = sub_1000A8D84;
      v145 = &unk_100145B58;
      uint64_t v90 = _Block_copy(&aBlock);
      uint64_t v91 = v2;
      swift_release();
      [v88 animateWithDuration:v90 animations:0.125];
      _Block_release(v90);
      id v92 = [self behaviorWithDampingRatio:0.8 response:0.55];
      uint64_t v93 = swift_allocObject();
      *(void *)(v93 + 16) = v91;
      v146 = sub_1000AF1A0;
      uint64_t v147 = v93;
      aBlock = _NSConcreteStackBlock;
      uint64_t v143 = 1107296256;
      v144 = sub_1000A8D84;
      v145 = &unk_100145BA8;
      uint64_t v94 = _Block_copy(&aBlock);
      uint64_t v95 = v91;
      id v28 = v92;
      swift_release();
      [v88 _animateUsingSpringBehavior:v28 tracking:0 animations:v94 completion:0];
      _Block_release(v94);
      uint64_t v96 = v28;
    }
  }
}

id sub_1000AAA98()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10007D3B4(&qword_100171A00);
  __chkstk_darwin(v2 - 8);
  int v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView];
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  dispatch thunk of IntelligenceUI.PromptEntryView.placeholder.setter();
  v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_firstPromptSubmitted] = 0;
  id v8 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  type metadata accessor for IntelligenceUI.PromptEntryView();
  static IntelligenceUI.PromptEntryView.defaultLeadingButtonConfiguration.getter();
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
  UIButton.configuration.setter();

  double v10 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  [v10 setNeedsUpdateConfiguration];

  uint64_t v11 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint;
  [*(id *)&v1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint] setActive:0];
  double v12 = *(void **)&v1[v11];
  if (v12) {
    [v12 setConstant:0.0];
  }
  NSString v13 = *(void **)&v1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBottomConstraint];
  if (v13) {
    [v13 setConstant:0.0];
  }
  [v5 setAlpha:0.0];
  [*(id *)&v1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView] setAlpha:1.0];
  [*(id *)&v1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton] setAlpha:0.0];
  id v14 = *(void **)&v1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView];
  if (v14) {
    [v14 setAlpha:0.0];
  }
  return [v1 layoutIfNeeded];
}

void sub_1000AADB0()
{
  uint64_t v1 = v0;
  if (v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_requestSourceIsQuickTypeTamale] == 1)
  {
    uint64_t v2 = type metadata accessor for String.LocalizationValue();
    __chkstk_darwin(v2 - 8);
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v3 = type metadata accessor for Locale();
    __chkstk_darwin(v3 - 8);
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    dispatch thunk of IntelligenceUI.PromptEntryView.placeholder.setter();
    v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_firstPromptSubmitted] = 0;
  }
  uint64_t v4 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView;
  [v0 sendSubviewToBack:*(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView]];
  uint64_t v5 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView;
  if (*(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView]) {
    [*(id *)&v0[v4] sendSubviewToBack:];
  }
  sub_1000AB98C(1.0);
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint];
  if (v6) {
    [v6 setConstant:-58.0];
  }
  [*(id *)&v0[v4] setAlpha:0.0];
  uint64_t v7 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton;
  [*(id *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton] setAlpha:0.0];
  [*(id *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView] setAlpha:0.0];
  id v8 = *(void **)&v0[v5];
  if (v8) {
    [v8 setAlpha:0.0];
  }
  uint64_t v9 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  [v9 setAlpha:0.0];

  id v10 = [*(id *)&v0[v7] imageView];
  if (v10)
  {
    uint64_t v11 = v10;
    [v10 setAlpha:0.0];
  }
  double v12 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  [v12 setAlpha:0.0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = objc_allocWithZone((Class)CAFilter);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v13 initWithType:v14];

  NSString v16 = String._bridgeToObjectiveC()();
  [v15 setName:v16];

  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v15 setValue:isa forKey:kCAFilterInputRadius];

  id v18 = [*(id *)&v0[v7] imageView];
  if (v18)
  {
    id v19 = v18;
    id v20 = [v18 layer];

    sub_10007D3B4(&qword_100170FD0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1000DD100;
    *(void *)(v21 + 56) = sub_10007DCD8(0, &qword_100171A08);
    *(void *)(v21 + 32) = v15;
    id v22 = v15;
    Class v23 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v20 setFilters:v23];
  }
  id v24 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  id v25 = [v24 layer];

  sub_10007D3B4(&qword_100170FD0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1000DD100;
  *(void *)(v26 + 56) = sub_10007DCD8(0, &qword_100171A08);
  *(void *)(v26 + 32) = v15;
  id v27 = v15;
  Class v28 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 setFilters:v28];

  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [self animationWithKeyPath:v29];

  [v30 setDuration:0.5];
  id v31 = self;
  id v32 = v30;
  id v33 = [v31 functionWithName:kCAMediaTimingFunctionLinear];
  [v32 setTimingFunction:v33];

  Class v34 = Double._bridgeToObjectiveC()().super.super.isa;
  [v32 setFromValue:v34];

  Class v35 = Double._bridgeToObjectiveC()().super.super.isa;
  [v32 setToValue:v35];

  id v36 = [*(id *)&v0[v7] imageView];
  if (v36)
  {
    id v37 = v36;
    id v38 = [v36 layer];

    id v39 = [v32 keyPath];
    [v38 addAnimation:v32 forKey:v39];
  }
  id v40 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  id v41 = [v40 layer];

  id v42 = [v32 keyPath];
  [v41 addAnimation:v32 forKey:v42];

  id v43 = self;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v1;
  CGFloat v64 = (uint64_t (*)())sub_1000AF078;
  uint64_t v65 = v44;
  aBlock = _NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  CGFloat v62 = sub_1000A8D84;
  double v63 = &unk_100145978;
  id v45 = _Block_copy(&aBlock);
  id v46 = v1;
  swift_release();
  [v43 animateWithDuration:v45 animations:0.5];
  _Block_release(v45);
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v46;
  CGFloat v64 = (uint64_t (*)())sub_1000AF080;
  uint64_t v65 = v47;
  aBlock = _NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  CGFloat v62 = sub_1000A8D84;
  double v63 = &unk_1001459C8;
  id v48 = _Block_copy(&aBlock);
  id v49 = v46;
  swift_release();
  [v43 animateWithDuration:v48 animations:1.0];
  _Block_release(v48);
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = v49;
  CGFloat v64 = (uint64_t (*)())sub_1000AF0E0;
  uint64_t v65 = v50;
  aBlock = _NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  CGFloat v62 = sub_1000A8D84;
  double v63 = &unk_100145A18;
  id v51 = _Block_copy(&aBlock);
  id v52 = v49;
  swift_release();
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v52;
  CGFloat v64 = (uint64_t (*)())sub_1000AF108;
  uint64_t v65 = v53;
  aBlock = _NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  CGFloat v62 = sub_1000AF3A0;
  double v63 = &unk_100145A68;
  CGFloat v54 = _Block_copy(&aBlock);
  double v55 = (char *)v52;
  swift_release();
  [v43 animateWithDuration:0 delay:v51 options:v54 animations:0.25 completion:0.25];
  _Block_release(v54);
  _Block_release(v51);
  [*(id *)&v55[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewDismissButtonConstraint] setConstant:0.0];
  id v56 = [self behaviorWithDampingRatio:0.78 response:1.0];
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v55;
  CGFloat v64 = sub_1000AF364;
  uint64_t v65 = v57;
  aBlock = _NSConcreteStackBlock;
  uint64_t v61 = 1107296256;
  CGFloat v62 = sub_1000A8D84;
  double v63 = &unk_100145AB8;
  id v58 = _Block_copy(&aBlock);
  double v59 = v55;
  swift_release();
  [v43 _animateUsingSpringBehavior:v56 tracking:0 animations:v58 completion:0];
  _Block_release(v58);
}

id sub_1000AB7D4(char *a1)
{
  [*(id *)&a1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView] setAlpha:1.0];
  [*(id *)&a1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView] setAlpha:1.0];
  id v2 = [*(id *)&a1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton] imageView];
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 setAlpha:1.0];
  }
  uint64_t v4 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  [v4 setAlpha:1.0];

  return [a1 layoutIfNeeded];
}

void sub_1000AB8A0(uint64_t a1, void *a2)
{
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  void v7[4] = sub_1000AF110;
  void v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000A8D84;
  void v7[3] = &unk_100145B08;
  uint64_t v5 = _Block_copy(v7);
  id v6 = a2;
  swift_release();
  [v3 animateWithDuration:v5 animations:0.25];
  _Block_release(v5);
}

void sub_1000AB98C(float a1)
{
  id v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView;
  uint64_t v44 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView;
  id v5 = *(id *)&v1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView];
  id v6 = (void *)dispatch thunk of SiriSharedUIDropletView.dropletLayer()();

  dispatch thunk of SiriSharedUIDropletLayer.prepareAlphaCurveForMitosis()();
  id v48 = self;
  [v48 begin];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  *(float *)(v7 + 24) = a1;
  aBlock[4] = sub_1000AF06C;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A8D84;
  aBlock[3] = &unk_100145928;
  id v8 = _Block_copy(aBlock);
  id v45 = v2;
  uint64_t v47 = v2;
  swift_release();
  [v48 setCompletionBlock:v8];
  _Block_release(v8);
  NSString v9 = String._bridgeToObjectiveC()();
  id v46 = self;
  id v10 = [v46 animationWithKeyPath:v9];

  sub_10007D3B4(&qword_100170FD0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1000DD2F0;
  type metadata accessor for SiriSharedUIDropletLayer();
  uint64_t v12 = static SiriSharedUIDropletLayer.dropletGaussianInitialBlurRadius.getter();
  *(void *)(v11 + 56) = &type metadata for Int;
  *(void *)(v11 + 32) = v12;
  uint64_t v13 = static SiriSharedUIDropletLayer.dropletGaussianMitosisBlurRadius.getter();
  *(void *)(v11 + 88) = &type metadata for Int;
  *(void *)(v11 + 64) = v13;
  uint64_t v14 = static SiriSharedUIDropletLayer.dropletGaussianMitosisBlurRadius.getter();
  *(void *)(v11 + 120) = &type metadata for Int;
  *(void *)(v11 + 96) = v14;
  uint64_t v15 = static SiriSharedUIDropletLayer.dropletGaussianInitialBlurRadius.getter();
  *(void *)(v11 + 152) = &type metadata for Int;
  *(void *)(v11 + 128) = v15;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 setValues:isa];

  sub_10007D3B4(&qword_100171650);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1000DD2E0;
  sub_10007DCD8(0, &qword_100171A10);
  *(NSNumber *)(v17 + 32) = NSNumber.init(floatLiteral:)(0.0);
  *(NSNumber *)(v17 + 40) = NSNumber.init(floatLiteral:)(0.4);
  *(NSNumber *)(v17 + 48) = NSNumber.init(floatLiteral:)(0.775);
  *(NSNumber *)(v17 + 56) = NSNumber.init(floatLiteral:)(1.0);
  aBlock[0] = v17;
  specialized Array._endMutation()();
  Class v18 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 setKeyTimes:v18];

  double v19 = a1;
  [v10 setDuration:v19];
  id v20 = self;
  id v21 = v10;
  id v22 = [v20 functionWithName:kCAMediaTimingFunctionDefault];
  [v21 setTimingFunction:v22];

  id v23 = *(id *)&v2[v4];
  id v24 = (void *)dispatch thunk of SiriSharedUIDropletView.dropletLayer()();

  id v25 = [v21 keyPath];
  [v24 addAnimation:v21 forKey:v25];

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v46 animationWithKeyPath:v26];

  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1000DD2F0;
  uint64_t v29 = static SiriSharedUIDropletLayer.dropletAlphaCurve.getter();
  uint64_t v30 = sub_10007D3B4(&qword_100171A18);
  *(void *)(v28 + 32) = v29;
  *(void *)(v28 + 56) = v30;
  *(void *)(v28 + 64) = &off_100144D70;
  *(void *)(v28 + 120) = v30;
  *(void *)(v28 + 88) = v30;
  *(void *)(v28 + 96) = &off_100144DB0;
  uint64_t v31 = static SiriSharedUIDropletLayer.dropletAlphaCurve.getter();
  *(void *)(v28 + 152) = v30;
  *(void *)(v28 + 128) = v31;
  Class v32 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 setValues:v32];

  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1000DD2E0;
  *(NSNumber *)(v33 + 32) = NSNumber.init(floatLiteral:)(0.0);
  *(NSNumber *)(v33 + 40) = NSNumber.init(floatLiteral:)(0.4);
  *(NSNumber *)(v33 + 48) = NSNumber.init(floatLiteral:)(0.775);
  *(NSNumber *)(v33 + 56) = NSNumber.init(floatLiteral:)(1.0);
  aBlock[0] = v33;
  specialized Array._endMutation()();
  Class v34 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 setKeyTimes:v34];

  [v27 setDuration:v19];
  id v35 = v27;
  id v36 = [v20 functionWithName:kCAMediaTimingFunctionDefault];
  [v35 setTimingFunction:v36];

  id v37 = *(id *)&v45[v44];
  id v38 = (void *)dispatch thunk of SiriSharedUIDropletView.dropletLayer()();

  id v39 = [v35 keyPath];
  [v38 addAnimation:v35 forKey:v39];

  [v48 commit];
  id v40 = *(void **)&v47[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBackgroundView];
  if (v40)
  {
    id v41 = [v40 layer];
    [v41 setShadowOpacity:0.0];
  }
  id v42 = *(void **)&v47[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView];
  if (v42)
  {
    id v43 = [v42 layer];
    [v43 setShadowOpacity:0.0];
  }
}

void sub_1000AC044(uint64_t a1, float a2)
{
  id v4 = *(id *)(a1 + OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView);
  id v5 = (void *)dispatch thunk of SiriSharedUIDropletView.dropletLayer()();

  dispatch thunk of SiriSharedUIDropletLayer.setupDropletEffect()();
  uint64_t v6 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBackgroundView;
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBackgroundView);
  if (v7)
  {
    id v8 = [v7 layer];
    [v8 setShadowPathIsBounds:1];
  }
  uint64_t v9 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView;
  id v10 = *(void **)(a1 + OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView);
  if (v10)
  {
    id v11 = [v10 layer];
    [v11 setShadowPathIsBounds:1];
  }
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [self animationWithKeyPath:v12];

  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v13 setFromValue:isa];

  Class v15 = Double._bridgeToObjectiveC()().super.super.isa;
  [v13 setToValue:v15];

  [v13 setDuration:(float)(a2 * 0.5)];
  NSString v16 = self;
  id v30 = v13;
  id v17 = [v16 functionWithName:kCAMediaTimingFunctionEaseInEaseOut];
  [v30 setTimingFunction:v17];

  Class v18 = *(void **)(a1 + v6);
  if (v18)
  {
    id v19 = [v18 layer];
    id v20 = [v30 keyPath];
    [v19 addAnimation:v30 forKey:v20];
  }
  id v21 = *(void **)(a1 + v9);
  if (v21)
  {
    id v22 = [v21 layer];
    id v23 = [v30 keyPath];
    [v22 addAnimation:v30 forKey:v23];
  }
  id v24 = *(void **)(a1 + v6);
  if (v24)
  {
    id v25 = [v24 layer];
    LODWORD(v26) = 1043207291;
    [v25 setShadowOpacity:v26];
  }
  id v27 = *(void **)(a1 + v9);
  if (v27)
  {
    id v28 = [v27 layer];
    LODWORD(v29) = 1043207291;
    [v28 setShadowOpacity:v29];
  }
}

void sub_1000AC374(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = objc_allocWithZone((Class)CAFilter);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithType:v5];

  NSString v7 = String._bridgeToObjectiveC()();
  [v6 setName:v7];

  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v6 setValue:isa forKey:kCAFilterInputRadius];

  uint64_t v9 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton;
  id v10 = [*(id *)&v3[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton] imageView];
  if (v10)
  {
    id v11 = v10;
    id v12 = [v10 layer];

    sub_10007D3B4(&qword_100170FD0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1000DD100;
    *(void *)(v13 + 56) = sub_10007DCD8(0, &qword_100171A08);
    *(void *)(v13 + 32) = v6;
    id v14 = v6;
    Class v15 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v12 setFilters:v15];
  }
  NSString v16 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  id v17 = [v16 layer];

  sub_10007D3B4(&qword_100170FD0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1000DD100;
  *(void *)(v18 + 56) = sub_10007DCD8(0, &qword_100171A08);
  *(void *)(v18 + 32) = v6;
  id v19 = v6;
  Class v20 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 setFilters:v20];

  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [self animationWithKeyPath:v21];

  [v22 setDuration:0.5];
  id v23 = self;
  id v24 = v22;
  id v25 = [v23 functionWithName:kCAMediaTimingFunctionEaseIn];
  [v24 setTimingFunction:v25];

  Class v26 = Double._bridgeToObjectiveC()().super.super.isa;
  [v24 setFromValue:v26];

  Class v27 = Double._bridgeToObjectiveC()().super.super.isa;
  [v24 setToValue:v27];

  id v28 = [*(id *)&v3[v9] imageView];
  if (v28)
  {
    double v29 = v28;
    id v30 = [v28 layer];

    id v31 = [v24 keyPath];
    [v30 addAnimation:v24 forKey:v31];
  }
  Class v32 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  id v33 = [v32 layer];

  id v34 = [v24 keyPath];
  [v33 addAnimation:v24 forKey:v34];

  id v35 = *(void **)&v3[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint];
  if (v35)
  {
    id v36 = self;
    id v37 = v35;
    id v38 = [v36 mainScreen];
    [v38 bounds];
    CGFloat v40 = v39;
    CGFloat v42 = v41;
    CGFloat v44 = v43;
    CGFloat v46 = v45;

    v61.origin.x = v40;
    v61.origin.y = v42;
    v61.size.width = v44;
    v61.size.height = v46;
    [v37 setConstant:-(CGRectGetWidth(v61) + -20.0 + -48.0)];
  }
  uint64_t v47 = self;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v3;
  double v59 = sub_1000AEFCC;
  uint64_t v60 = v48;
  aBlock = _NSConcreteStackBlock;
  uint64_t v56 = 1107296256;
  uint64_t v57 = sub_1000A8D84;
  id v58 = &unk_100145888;
  id v49 = _Block_copy(&aBlock);
  uint64_t v50 = v3;
  swift_release();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = a1;
  *(void *)(v51 + 24) = a2;
  double v59 = sub_1000AF00C;
  uint64_t v60 = v51;
  aBlock = _NSConcreteStackBlock;
  uint64_t v56 = 1107296256;
  uint64_t v57 = sub_1000AF3A0;
  id v58 = &unk_1001458D8;
  id v52 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v47 animateWithDuration:v49 animations:v52 completion:0.5];

  _Block_release(v52);
  _Block_release(v49);
  v50[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_isInTamaleAndCollapsed] = 0;
}

id sub_1000AC9E0(char *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton;
  [*(id *)&a1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton] setAlpha:0.0];
  [*(id *)&a1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView] setAlpha:0.0];
  [*(id *)&a1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView] setAlpha:0.0];
  id v3 = [*(id *)&a1[v2] imageView];
  if (v3)
  {
    id v4 = v3;
    [v3 setAlpha:0.0];
  }
  NSString v5 = *(void **)&a1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView];
  if (v5) {
    [v5 setAlpha:0.0];
  }

  return [a1 layoutIfNeeded];
}

uint64_t sub_1000ACE6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10007D3B4(&qword_100171A00);
  __chkstk_darwin(v2 - 8);
  id v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for UIButton.Configuration();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v9 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8);
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  dispatch thunk of IntelligenceUI.PromptEntryView.placeholder.setter();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [self _systemImageNamed:v11];

  static UIButton.Configuration.borderless()();
  id v13 = v12;
  UIButton.Configuration.image.setter();
  id v14 = [v1 traitCollection];
  id v15 = [v14 userInterfaceStyle];

  NSString v16 = self;
  id v17 = &selRef_blackColor;
  if (v15 != (id)1) {
    id v17 = &selRef_whiteColor;
  }
  id v18 = [v16 *v17];
  UIButton.Configuration.baseForegroundColor.setter();
  id v19 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  UIButton.configuration.setter();

  dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonConfiguredAsToggle.setter();
  Class v20 = (void *)IntelligenceUI.PromptEntryView.leadingButton.getter();
  [v20 setNeedsUpdateConfiguration];

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_1000AD2A0()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for SystemAssistantPromptEntryView();
  [super layoutSubviews];
  id v1 = *(id *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView];
  [v0 bounds];
  [v1 setFrame:];

  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result promptEntryViewDidLayoutSubviews:v0];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

id sub_1000AD3E8()
{
  uint64_t v0 = type metadata accessor for UIPromptBackgroundView.Configuration();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
  dispatch thunk of UIPromptBackgroundView.configuration.getter();

  static UIPromptBackgroundView.Configuration.intelligentLatency.getter();
  LOBYTE(v7) = static UIPromptBackgroundView.Configuration.== infix(_:_:)();
  id v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  if (v7)
  {
    uint64_t v9 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
    static UIPromptBackgroundView.Configuration.intelligent.getter();
    dispatch thunk of UIPromptBackgroundView.configuration.setter();
  }
  uint64_t v10 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  id v11 = [v10 resignFirstResponder];

  return v11;
}

uint64_t sub_1000AD5C4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    goto LABEL_10;
  }
  v13[0] = a1;
  v13[1] = a2;
  uint64_t v3 = type metadata accessor for CharacterSet();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_1000AEEC8();
  uint64_t v7 = StringProtocol.trimmingCharacters(in:)();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v7) {
    BOOL v10 = 0;
  }
  else {
    BOOL v10 = v9 == 0xE000000000000000;
  }
  if (v10)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    char v11 = 1;
    return v11 & 1;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

void sub_1000AD874()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView];
  uint64_t v3 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  id v4 = [v3 text];

  if (v4)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;

    swift_bridgeObjectRelease();
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (v8)
    {
      uint64_t v9 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
      NSString v10 = String._bridgeToObjectiveC()();
      [v9 setText:v10];

      [v2 invalidateIntrinsicContentSize];
      sub_1000AE5C8();
      char v11 = self;
      double v12 = SiriSharedUIPromptEntryLatencyDisappearDuration;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v1;
      v16[4] = sub_1000AEF9C;
      v16[5] = v13;
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 1107296256;
      v16[2] = sub_1000A8D84;
      v16[3] = &unk_100145838;
      id v14 = _Block_copy(v16);
      id v15 = v1;
      swift_release();
      [v11 animateWithDuration:v14 animations:v12];
      _Block_release(v14);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1000ADA30(uint64_t a1, void (*a2)(void))
{
  uint64_t v3 = type metadata accessor for UIPromptBackgroundView.Configuration();
  __chkstk_darwin(v3 - 8);
  id v4 = (void *)dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
  a2();
  dispatch thunk of UIPromptBackgroundView.configuration.setter();
}

uint64_t sub_1000ADB30(void *a1, uint64_t a2, void *a3, SEL *a4)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = (void *)result;
    id v9 = a3;
    id v10 = a1;
    [v8 *a4:v10];

    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1000ADBF4(uint64_t a1)
{
  return sub_1000AE338(a1, type metadata accessor for SystemAssistantPromptEntryView);
}

uint64_t type metadata accessor for SystemAssistantPromptEntryView()
{
  return self;
}

uint64_t type metadata accessor for EditMenuAwarePromptEntryView()
{
  uint64_t result = qword_1001719A8;
  if (!qword_1001719A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000ADD4C()
{
  return swift_initClassMetadata2();
}

void sub_1000ADDA4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong didBeginEditingWhenInTamaleAndCollapsed:*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_isInTamaleAndCollapsed)];
    swift_unknownObjectRelease();
  }

  sub_1000A9AFC(0);
}

UIMenu sub_1000ADE10()
{
  sub_10007DCD8(0, &qword_1001719F8);
  v0._countAndFlagsBits = 0;
  v0._object = (void *)0xE000000000000000;
  v3.value.super.Class isa = 0;
  v3.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v0, (Swift::String_optional)0, v3, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v2);
}

uint64_t sub_1000ADE80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for IntelligenceUI.PromptEntryView.AmbiguityAppearanceConfiguration();
  UIImage_optional v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

void *sub_1000ADEEC(uint64_t a1, char a2)
{
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    [result entryViewShouldShowSuggestions:v2 showSuggestions:a2 & 1];
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

id sub_1000ADF70()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  return Strong;
}

uint64_t sub_1000ADFA4()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1000ADFB8(void *a1, uint64_t a2, void *a3)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unint64_t v6 = (void *)result;
    id v7 = a3;
    swift_unknownObjectRetain();
    id v8 = a1;
    [v6 textViewWillPresentEditMenu:v7];

    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000AE060(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    uint64_t v5 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v5)
    {
      [v5 textViewDidDismissEditMenu:a2];
      swift_unknownObjectRelease();
    }
  }
}

void sub_1000AE0F0(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = a3;
  void v12[4] = sub_1000AEF94;
  v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1000A8D84;
  uint64_t v12[3] = &unk_1001457E8;
  id v9 = _Block_copy(v12);
  id v10 = a3;
  swift_unknownObjectRetain();
  id v11 = a1;
  swift_release();
  [a4 addCompletion:v9];
  _Block_release(v9);

  swift_unknownObjectRelease();
}

id sub_1000AE224(void *a1, double a2, double a3, double a4, double a5)
{
  swift_unknownObjectWeakInit();
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for EditMenuAwarePromptEntryView();
  return [super initWithFrame:a2, a3, a4, a5];
}

id sub_1000AE2AC(void *a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakInit();
  v6.receiver = a1;
  v6.super_class = (Class)type metadata accessor for EditMenuAwarePromptEntryView();
  return [super initWithCoder:a3];
}

uint64_t sub_1000AE30C()
{
  return sub_10007E630(v0 + qword_100171990);
}

id sub_1000AE31C()
{
  return sub_1000AE338(0, type metadata accessor for EditMenuAwarePromptEntryView);
}

id sub_1000AE338(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_1000AE370(uint64_t a1)
{
  return sub_10007E630(a1 + qword_100171990);
}

uint64_t sub_1000AE380()
{
  return type metadata accessor for EditMenuAwarePromptEntryView();
}

uint64_t sub_1000AE388()
{
  uint64_t v0 = type metadata accessor for UIPromptBackgroundView.CornerRadius();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  UIImage_optional v3 = (uint64_t *)((char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for UIPromptBackgroundView.Configuration();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  objc_super v11 = (char *)&v16 - v10;
  __chkstk_darwin(v9);
  static UIPromptBackgroundView.Configuration.default.getter();
  id v12 = objc_allocWithZone((Class)type metadata accessor for UIPromptBackgroundView());
  uint64_t v13 = UIPromptBackgroundView.init(configuration:)();
  static UIPromptBackgroundView.Configuration.intelligentWhenFocused.getter();
  *UIImage_optional v3 = 0x4038000000000000;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, enum case for UIPromptBackgroundView.CornerRadius.constant(_:), v0);
  UIPromptBackgroundView.Configuration.cornerRadius(_:)();
  (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v0);
  id v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  UIPromptBackgroundView.Configuration.shadowOpacity(_:)();
  v14(v11, v4);
  dispatch thunk of UIPromptBackgroundView.configuration.setter();
  return v13;
}

void sub_1000AE5C8()
{
  uint64_t v0 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  id v1 = [v0 text];

  if (v1)
  {
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v4 = v3;

    char v5 = sub_1000AD5C4(v2, v4);
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)IntelligenceUI.PromptEntryView.trailingButton.getter();
    [v6 setEnabled:(v5 & 1) == 0];

    dispatch thunk of IntelligenceUI.PromptEntryView.isTrailingButtonVisible.setter();
    uint64_t v7 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
    id v8 = [v7 text];

    if (v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v10 = (void *)Strong;
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v10 didChangeText:v11];

      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1000AE750()
{
  v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_textIsProvidedBySuggestion] = 0;
  id v1 = &v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_invocationTextForSuggestion];
  *id v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_requestSourceIsQuickTypeTamale] = 0;
  v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_isInTamaleAndCollapsed] = 0;
  v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_firstPromptSubmitted] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView;
  type metadata accessor for EditMenuAwarePromptEntryView();
  *(void *)&v0[v2] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewWidthConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewDismissButtonConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBackgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView] = 0;
  uint64_t v3 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_dropletView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)type metadata accessor for SiriSharedUIDropletView()) init];
  uint64_t v4 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIButton) init];
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonWidth] = 0x4048000000000000;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_spacing] = 0x4024000000000000;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_animationDuration] = 0x3FE0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryViewBottomConstant] = 0x4042000000000000;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_promptEntryViewDampingValue] = 0x3FE999999999999ALL;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_promptEntryViewResponseValue] = 0x3FE199999999999ALL;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_promptEntryViewXButtonDampingValue] = 0x3FE8F5C28F5C28F6;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_promptEntryViewXButtonResponseValue] = 0x3FF0000000000000;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_buttonBlurRadius] = 0x401C000000000000;
  *(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_shadowOpacity] = 0x3FC5C28F5C28F5C3;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000AE978()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_entryView];
  [v1 alpha];
  if (v2 == 0.0)
  {
    [v1 setAlpha:1.0];
    [v0 layoutIfNeeded];
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong shouldBeginEditing];
    swift_unknownObjectRelease();
  }
  return 1;
}

void sub_1000AEA0C()
{
  id v1 = v0;
  double v2 = (void *)IntelligenceUI.PromptEntryView.textView.getter();
  id v3 = [v2 text];

  if (!v3)
  {
LABEL_4:
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_10007DCA0(v6, (uint64_t)qword_100171AB0);
    os_log_type_t v7 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v7, 0, 0xD00000000000001CLL, 0x80000001000FEAF0, 0xD000000000000021, 0x80000001000FEB10);
    return;
  }
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (sub_1000AD5C4(v4, v5))
  {
    swift_bridgeObjectRelease();

    goto LABEL_4;
  }
  id v8 = (void *)IntelligenceUI.PromptEntryView.trailingButton.getter();
  [v8 setEnabled:0];

  uint64_t v9 = OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_textIsProvidedBySuggestion;
  if (v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_textIsProvidedBySuggestion] == 1)
  {

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      NSString v11 = (void *)Strong;
      if (*(void *)&v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_invocationTextForSuggestion + 8])
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v11 entryViewDidSubmit:v0 suggestionText:v12];

      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v0[v9] = 0;
    id v14 = &v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_invocationTextForSuggestion];
    *(void *)id v14 = 0;
    *((void *)v14 + 1) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v13)
    {
      [v13 entryViewDidSubmit:v0 text:v3];

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  if (v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_requestSourceIsQuickTypeTamale] == 1)
  {
    uint64_t v15 = type metadata accessor for String.LocalizationValue();
    __chkstk_darwin(v15 - 8);
    String.LocalizationValue.init(stringLiteral:)();
    uint64_t v16 = type metadata accessor for Locale();
    __chkstk_darwin(v16 - 8);
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    dispatch thunk of IntelligenceUI.PromptEntryView.placeholder.setter();
    v0[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_firstPromptSubmitted] = 1;
  }
  id v17 = self;
  double v18 = SiriSharedUIPromptEntryLatencyAppearDuration;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v1;
  aBlock[4] = sub_1000AEE80;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A8D84;
  aBlock[3] = &unk_100145770;
  Class v20 = _Block_copy(aBlock);
  NSString v21 = v1;
  swift_release();
  [v17 animateWithDuration:v20 animations:v18];
  _Block_release(v20);
}

uint64_t sub_1000AEE48()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000AEE80()
{
  sub_1000ADA30(*(void *)(v0 + 16), (void (*)(void))&static UIPromptBackgroundView.Configuration.intelligentLatency.getter);
}

uint64_t sub_1000AEEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000AEEC0()
{
  return swift_release();
}

unint64_t sub_1000AEEC8()
{
  unint64_t result = qword_100171C00;
  if (!qword_100171C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171C00);
  }
  return result;
}

uint64_t sub_1000AEF1C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AEF54()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000AEF94()
{
  sub_1000AE060(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1000AEF9C()
{
  sub_1000ADA30(*(void *)(v0 + 16), (void (*)(void))&static UIPromptBackgroundView.Configuration.intelligent.getter);
}

id sub_1000AEFCC()
{
  return sub_1000AC9E0(*(char **)(v0 + 16));
}

uint64_t sub_1000AEFD4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000AF00C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1000AF034()
{
  return _swift_deallocObject(v0, 28, 7);
}

void sub_1000AF06C()
{
  sub_1000AC044(*(void *)(v0 + 16), *(float *)(v0 + 24));
}

id sub_1000AF078()
{
  return sub_1000AB7D4(*(char **)(v0 + 16));
}

void sub_1000AF080()
{
  id v0 = (id)IntelligenceUI.PromptEntryView.textView.getter();
  [v0 setAlpha:1.0];
}

id sub_1000AF0E0()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView);
  if (result) {
    return [result setAlpha:1.0];
  }
  return result;
}

void sub_1000AF108(uint64_t a1)
{
  sub_1000AB8A0(a1, *(void **)(v1 + 16));
}

id sub_1000AF110()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton) setAlpha:1.0];
}

id sub_1000AF130()
{
  uint64_t v1 = *(void *)(v0 + 16);
  [*(id *)(v1 + OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton) setAlpha:0.0];
  id result = *(id *)(v1 + OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButtonBackgroundView);
  if (result)
  {
    return [result setAlpha:0.0];
  }
  return result;
}

id sub_1000AF1A0()
{
  return [*(id *)(v0 + 16) layoutIfNeeded];
}

id sub_1000AF1B0()
{
  uint64_t v1 = *(char **)(v0 + 16);
  [*(id *)&v1[OBJC_IVAR____TtC4Siri30SystemAssistantPromptEntryView_closeButton] setAlpha:1.0];

  return [v1 layoutIfNeeded];
}

uint64_t sub_1000AF208()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000AF240()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

unint64_t sub_1000AF250()
{
  unint64_t result = qword_100171A28;
  if (!qword_100171A28)
  {
    sub_100081AF8(&qword_100171A20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171A28);
  }
  return result;
}

unint64_t sub_1000AF2AC()
{
  unint64_t result = qword_100171A30;
  if (!qword_100171A30)
  {
    type metadata accessor for SystemAssistantPromptEntryView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171A30);
  }
  return result;
}

uint64_t sub_1000AF3A0(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_1000AF41C(void *a1, char a2)
{
  uint64_t v4 = OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetContainerView;
  unint64_t v5 = *(void *)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetContainerView];
  if (a1)
  {
    type metadata accessor for SRCarPlayScrollView();
    uint64_t v7 = swift_dynamicCastClass();
    if (v7 && (id v8 = (void *)v7, *(unsigned char *)(v7 + OBJC_IVAR____TtC4Siri19SRCarPlayScrollView_isFullScreen) == 1))
    {
      id v9 = (id)v5;
      id v10 = a1;
      id v11 = sub_1000B03E0(v8);
    }
    else
    {
      id v12 = (id)v5;
      id v10 = a1;
      id v11 = sub_1000B0E44(v10);
    }
    unint64_t v13 = (unint64_t)v11;
  }
  else
  {
    id v14 = (id)v5;
    unint64_t v13 = 0;
  }
  uint64_t v15 = *(void **)&v2[v4];
  *(void *)&v2[v4] = v13;
  id v16 = (id)v13;

  if (v5 | v13)
  {
    id v17 = self;
    [v17 begin];
    if (v5)
    {
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v5;
      id v58 = sub_1000B1A80;
      uint64_t v59 = v18;
      CGFloat v54 = _NSConcreteStackBlock;
      uint64_t v55 = 1107296256;
      uint64_t v56 = sub_1000A8D84;
      uint64_t v57 = &unk_100145D60;
      uint64_t v19 = _Block_copy(&v54);
      id v20 = (id)v5;
      swift_release();
      [v17 setCompletionBlock:v19];
      _Block_release(v19);

      if (v13)
      {
        id v21 = v20;
        id v22 = v16;
        [v2 insertSubview:v22 belowSubview:v21];
        if (a2)
        {
          sub_1000B1890(v21, 2u);
          sub_1000B1890(v22, 1u);
        }
        else
        {
          id v26 = [v22 layer];
          LODWORD(v27) = 1.0;
          [v26 setOpacity:v27];

          id v28 = [v21 layer];
          [v28 setOpacity:0.0];
        }
LABEL_30:
        [v17 commit];
        if (v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_showIntelligentLightAnimation] == 1)
        {
          v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_showIntelligentLightAnimation] = 0;
          double v41 = *(char **)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetPlatterView];
          if (v41)
          {
            CGFloat v42 = *(void **)&v41[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceContentLightEffect];
            double v43 = v41;
            [v42 setActivationTransitionDirection:2];
            [*(id *)&v43[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceInsideLightEffect] setActivationTransitionDirection:2];
            [*(id *)&v43[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceOutsideLightEffect] setActivationTransitionDirection:2];
            [*(id *)&v43[OBJC_IVAR____TtC4Siri27SRCarPlaySnippetPlatterView_intelligenceRimHighlightEffect] setActivationTransitionDirection:2];
            CGFloat v44 = self;
            uint64_t v45 = swift_allocObject();
            *(void *)(v45 + 16) = v43;
            id v58 = sub_1000B1860;
            uint64_t v59 = v45;
            CGFloat v54 = _NSConcreteStackBlock;
            uint64_t v55 = 1107296256;
            uint64_t v56 = sub_1000A8D84;
            uint64_t v57 = &unk_100145C70;
            CGFloat v46 = _Block_copy(&v54);
            uint64_t v47 = v43;
            swift_release();
            [v44 animateWithDuration:v46 animations:1.5];
            _Block_release(v46);
            uint64_t v48 = swift_allocObject();
            *(void *)(v48 + 16) = v47;
            id v58 = sub_1000B1880;
            uint64_t v59 = v48;
            CGFloat v54 = _NSConcreteStackBlock;
            uint64_t v55 = 1107296256;
            uint64_t v56 = sub_1000A8D84;
            uint64_t v57 = &unk_100145CC0;
            id v49 = _Block_copy(&v54);
            uint64_t v50 = v47;
            swift_release();
            uint64_t v51 = swift_allocObject();
            *(void *)(v51 + 16) = v50;
            id v58 = sub_1000B1888;
            uint64_t v59 = v51;
            CGFloat v54 = _NSConcreteStackBlock;
            uint64_t v55 = 1107296256;
            uint64_t v56 = sub_1000AF3A0;
            uint64_t v57 = &unk_100145D10;
            id v52 = _Block_copy(&v54);
            uint64_t v53 = v50;
            swift_release();
            [v44 animateWithDuration:0 delay:v49 options:v52 animations:1.0 completion:0.5];
            _Block_release(v52);
            _Block_release(v49);
          }
        }

        return;
      }
      if ((a2 & 1) == 0)
      {
        id v34 = *(void **)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView];
        id v35 = v20;
        if (v34)
        {
          id v36 = [v34 layer];
          [v36 setOpacity:0.0];
        }
        id v40 = [v20 layer];
        [v40 setOpacity:0.0];

        goto LABEL_30;
      }
      id v23 = v20;
      sub_1000AFB58(1);
      id v24 = v23;
      unsigned __int8 v25 = 3;
    }
    else
    {
      if (!v13) {
        goto LABEL_30;
      }
      if ((a2 & 1) == 0)
      {
        double v29 = *(void **)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView];
        if (v29)
        {
          id v30 = v16;
          id v31 = [v29 layer];
          Class v32 = v31;
          LODWORD(v33) = 0.5;
          if (v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground]) {
            *(float *)&double v33 = 1.0;
          }
          [v31 setOpacity:v33];
        }
        else
        {
          id v37 = v16;
        }
        id v38 = [v16 layer];
        LODWORD(v39) = 1.0;
        [v38 setOpacity:v39];

        goto LABEL_30;
      }
      id v23 = v16;
      sub_1000AFB58(0);
      id v24 = v23;
      unsigned __int8 v25 = 0;
    }
    sub_1000B1890(v24, v25);

    goto LABEL_30;
  }
}

id sub_1000AFA9C(void *a1)
{
  Class isa = (Class)[a1 constraints];
  if (!isa)
  {
    sub_10007DCD8(0, &qword_100171658);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [self deactivateConstraints:isa];

  return [a1 removeFromSuperview];
}

void sub_1000AFB58(char a1)
{
  if (a1)
  {
    uint64_t v16 = OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView;
    id v17 = *(void **)(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView);
    if (v17)
    {
      id v18 = [v17 layer];
      uint64_t v19 = v18;
      LODWORD(v20) = 0.5;
      if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground)) {
        *(float *)&double v20 = 1.0;
      }
      [v18 setOpacity:v20];
    }
    id v21 = sub_10007EB84();
    double v22 = 0.5;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground)) {
      double v22 = 1.0;
    }
    id v28 = &type metadata for Double;
    *(double *)double v27 = v22;
    sub_100095924(v27, (uint64_t)&type metadata for Double);
    id v5 = v21;
    uint64_t v23 = _bridgeAnythingToObjectiveC<A>(_:)();
    sub_100088F14((uint64_t)v27);
    [v5 setFromValue:v23];

    swift_unknownObjectRelease();
    id v24 = *(void **)(v1 + v16);
    if (v24)
    {
      id v25 = [v24 layer];
      [v25 addAnimation:v5 forKey:0];

      id v26 = *(void **)(v1 + v16);
      if (v26)
      {
        id v14 = [v26 layer];
        [v14 setOpacity:0.0];
LABEL_19:
      }
    }
  }
  else
  {
    id v2 = sub_10007EA40();
    uint64_t v3 = OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground;
    double v4 = 0.5;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground)) {
      double v4 = 1.0;
    }
    id v28 = &type metadata for Double;
    *(double *)double v27 = v4;
    sub_100095924(v27, (uint64_t)&type metadata for Double);
    id v5 = v2;
    uint64_t v6 = _bridgeAnythingToObjectiveC<A>(_:)();
    sub_100088F14((uint64_t)v27);
    [v5 setToValue:v6];

    swift_unknownObjectRelease();
    uint64_t v7 = OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView;
    id v8 = *(void **)(v1 + OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView);
    if (v8)
    {
      id v9 = [v8 layer];
      [v9 setOpacity:0.0];

      id v10 = *(void **)(v1 + v7);
      if (v10)
      {
        id v11 = [v10 layer];
        [v11 addAnimation:v5 forKey:0];

        id v12 = *(void **)(v1 + v7);
        if (v12)
        {
          id v13 = [v12 layer];
          id v14 = v13;
          LODWORD(v15) = 0.5;
          if (*(unsigned char *)(v1 + v3)) {
            *(float *)&double v15 = 1.0;
          }
          [v13 setOpacity:v15];
          goto LABEL_19;
        }
      }
    }
  }
}

void sub_1000AFDFC(char a1)
{
  id v2 = v1;
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView];
  if (!v3) {
    return;
  }
  uint64_t v5 = OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView;
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView];
  id v38 = v3;
  [v6 removeFromSuperview];
  v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground] = a1 & 1;
  if (a1)
  {
    id v7 = [self effectWithStyle:7];
    id v8 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v7];

LABEL_9:
    id v14 = *(void **)&v2[v5];
    *(void *)&v2[v5] = v8;

    goto LABEL_10;
  }
  if (([self deviceSupportsAI] & 1) == 0)
  {
    id v8 = [objc_allocWithZone((Class)UIView) init];
    id v9 = [v8 traitCollection];
    id v10 = [v9 userInterfaceStyle];

    id v11 = self;
    id v12 = &selRef_systemGrayColor;
    if (v10 != (id)1) {
      id v12 = &selRef_systemGray4Color;
    }
    id v13 = [v11 *v12];
    [v8 setBackgroundColor:v13];

    sub_10007DCD8(0, &qword_100171AA8);
    static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
    sub_10007DCD8(0, &qword_100171668);
    UIView.registerForTraitChanges<A>(_:handler:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
LABEL_10:
  double v15 = *(void **)&v2[v5];
  if (v15)
  {
    id v16 = v15;
    [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v17 = [v16 layer];
    [v17 setOpacity:0.0];

    [v2 insertSubview:v16 belowSubview:v38];
    id v18 = self;
    sub_10007D3B4(&qword_100171650);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1000DD2E0;
    id v20 = [v16 topAnchor];
    id v21 = [v2 safeAreaLayoutGuide];
    id v22 = [v21 topAnchor];

    id v23 = [v20 constraintEqualToAnchor:v22];
    *(void *)(v19 + 32) = v23;
    id v24 = [v16 bottomAnchor];
    id v25 = [v2 safeAreaLayoutGuide];
    id v26 = [v25 bottomAnchor];

    id v27 = [v24 constraintEqualToAnchor:v26];
    *(void *)(v19 + 40) = v27;
    id v28 = [v16 leadingAnchor];
    id v29 = [v2 safeAreaLayoutGuide];
    id v30 = [v29 leadingAnchor];

    id v31 = [v28 constraintEqualToAnchor:v30];
    *(void *)(v19 + 48) = v31;
    id v32 = [v16 trailingAnchor];
    id v33 = [v2 safeAreaLayoutGuide];
    id v34 = [v33 trailingAnchor];

    id v35 = [v32 constraintEqualToAnchor:v34];
    *(void *)(v19 + 56) = v35;
    specialized Array._endMutation()();
    sub_10007DCD8(0, &qword_100171658);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v18 activateConstraints:isa];

    Class v37 = isa;
  }
  else
  {
    Class v37 = (Class)v38;
  }
}

void sub_1000B0324(void *a1)
{
  id v2 = [a1 traitCollection];
  id v3 = [v2 userInterfaceStyle];

  double v4 = self;
  uint64_t v5 = &selRef_systemGrayColor;
  if (v3 != (id)1) {
    uint64_t v5 = &selRef_systemGray4Color;
  }
  id v6 = [v4 *v5];
  [a1 setBackgroundColor:v6];
}

id sub_1000B03E0(void *a1)
{
  id v2 = v1;
  id v3 = [objc_allocWithZone((Class)UIView) init];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v3];
  double v4 = self;
  sub_10007D3B4(&qword_100171650);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000DD410;
  id v6 = [v3 centerXAnchor];
  id v7 = [v2 safeAreaLayoutGuide];
  id v8 = [v7 centerXAnchor];

  id v9 = [v6 constraintEqualToAnchor:v8];
  *(void *)(v5 + 32) = v9;
  id v10 = [v3 topAnchor];
  id v11 = [v2 safeAreaLayoutGuide];
  id v12 = [v11 topAnchor];

  id v13 = [v10 constraintEqualToAnchor:v12 constant:0.0];
  *(void *)(v5 + 40) = v13;
  id v14 = [v3 bottomAnchor];
  id v15 = [v2 safeAreaLayoutGuide];
  id v16 = [v15 bottomAnchor];

  id v17 = [v14 constraintEqualToAnchor:v16 constant:0.0];
  *(void *)(v5 + 48) = v17;
  id v18 = [v3 leadingAnchor];
  id v19 = [v2 safeAreaLayoutGuide];
  id v20 = [v19 leadingAnchor];

  id v21 = [v18 constraintEqualToAnchor:v20];
  *(void *)(v5 + 56) = v21;
  id v22 = [v3 trailingAnchor];
  id v23 = [v2 safeAreaLayoutGuide];
  id v24 = [v23 trailingAnchor];

  id v25 = [v22 constraintEqualToAnchor:v24];
  *(void *)(v5 + 64) = v25;
  specialized Array._endMutation()();
  sub_10007DCD8(0, &qword_100171658);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 activateConstraints:isa];

  [v3 _setOverrideVibrancyTrait:1];
  id v27 = self;
  id v28 = (objc_class *)[v27 materialViewWithRecipe:52];
  if (v28)
  {
    Class v29 = v28;
    [v3 bounds];
    double v31 = v30;
    double v33 = v32;
    double v35 = v34;
    double v37 = v36;
    [(objc_class *)v29 setAutoresizingMask:18];
    -[objc_class setFrame:](v29, "setFrame:", v31, v33, v35, v37);
    [(objc_class *)v29 setOpaque:0];
    id v38 = [v2 traitCollection];
    id v39 = [v38 userInterfaceStyle];

    [(objc_class *)v29 setHidden:v39 != (id)1];
    sub_10007D3B4(&qword_100171AA0);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1000DD100;
    uint64_t v41 = type metadata accessor for UITraitUserInterfaceStyle();
    *(void *)(v40 + 32) = v41;
    *(void *)(v40 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
    sub_10007DCD8(0, &qword_100171668);
    UIView.registerForTraitChanges<A>(_:handler:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    [v3 addSubview:v29];
    id v42 = [v27 materialViewWithRecipe:53];
    if (v42)
    {
      double v43 = v42;
      [v3 bounds];
      double v45 = v44;
      double v47 = v46;
      double v49 = v48;
      double v51 = v50;
      [v43 setAutoresizingMask:18];
      [v43 setFrame:v45, v47, v49, v51];
      id v52 = [v2 traitCollection];
      id v53 = [v52 userInterfaceStyle];

      [v43 setHidden:v53 == (id)1];
      [v43 setOpaque:0];
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1000DD100;
      *(void *)(v54 + 32) = v41;
      *(void *)(v54 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
      UIView.registerForTraitChanges<A>(_:handler:)();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      [v3 addSubview:v43];
      [v3 bounds];
      double v56 = v55;
      double v58 = v57;
      double v60 = v59;
      double v62 = v61;
      id v63 = [objc_allocWithZone((Class)UIView) init];
      id v64 = [self whiteColor];
      [v63 setBackgroundColor:v64];

      [v63 setAutoresizingMask:18];
      [v63 setFrame:v56, v58, v60, v62];
      id v65 = [v63 layer];
      LODWORD(v66) = 1034147594;
      [v65 setOpacity:v66];

      id v67 = [v2 traitCollection];
      id v68 = [v67 userInterfaceStyle];

      [v63 setHidden:v68 == (id)1];
      uint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_1000DD100;
      *(void *)(v69 + 32) = v41;
      *(void *)(v69 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
      UIView.registerForTraitChanges<A>(_:handler:)();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      [v3 addSubview:v63];
      [a1 setClipsToBounds:1];
      [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
      [v3 addSubview:a1];
      uint64_t v70 = swift_allocObject();
      *(_OWORD *)(v70 + 16) = xmmword_1000DD1E0;
      id v71 = [v3 centerXAnchor];
      id v72 = [a1 centerXAnchor];
      id v73 = [v71 constraintEqualToAnchor:v72];

      *(void *)(v70 + 32) = v73;
      id v74 = [v3 centerYAnchor];
      id v75 = [a1 centerYAnchor];
      id v76 = [v74 constraintEqualToAnchor:v75];

      *(void *)(v70 + 40) = v76;
      specialized Array._endMutation()();
      Class v77 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v4 activateConstraints:v77];

      Class v29 = v77;
    }
  }
  return v3;
}

id sub_1000B0D50(void *a1)
{
  id v2 = [a1 traitCollection];
  id v3 = [v2 userInterfaceStyle];

  return [a1 setHidden:v3 != (id)1];
}

id sub_1000B0DCC(void *a1)
{
  id v2 = [a1 traitCollection];
  id v3 = [v2 userInterfaceStyle];

  return [a1 setHidden:v3 == (id)1];
}

id sub_1000B0E44(void *a1)
{
  id v2 = v1;
  id v4 = [objc_allocWithZone((Class)UIView) init];
  id v5 = [v4 layer];
  if (qword_1001703D8 != -1) {
    swift_once();
  }
  [v5 setCornerCurve:qword_100172C88];

  id v6 = [v4 layer];
  LODWORD(v7) = 0.5;
  [v6 setShadowOpacity:v7];

  id v8 = [v4 layer];
  if (qword_1001703E0 != -1) {
    swift_once();
  }
  [v8 setShadowColor:qword_100172C90];

  id v9 = [v4 layer];
  [v9 setShadowRadius:20.0];

  id v10 = [v4 layer];
  if (qword_1001703E8 != -1) {
    swift_once();
  }
  [v10 setShadowOffset:xmmword_100172CA0];

  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 addSubview:v4];
  if ([self deviceSupportsAI]) {
    double v11 = 8.0;
  }
  else {
    double v11 = 68.0;
  }
  id v43 = self;
  sub_10007D3B4(&qword_100171650);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1000DD410;
  id v13 = [v4 centerXAnchor];
  id v14 = [v2 safeAreaLayoutGuide];
  id v15 = [v14 centerXAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15];
  *(void *)(v12 + 32) = v16;
  id v17 = [v4 topAnchor];
  id v18 = [v2 safeAreaLayoutGuide];
  id v19 = [v18 topAnchor];

  id v20 = [v17 constraintGreaterThanOrEqualToAnchor:v19 constant:12.0];
  *(void *)(v12 + 40) = v20;
  id v21 = [v4 bottomAnchor];
  id v22 = [v2 safeAreaLayoutGuide];
  id v23 = [v22 bottomAnchor];

  id v24 = [v21 constraintEqualToAnchor:v23 constant:-v11];
  *(void *)(v12 + 48) = v24;
  id v25 = [v4 leadingAnchor];
  id v26 = [v2 safeAreaLayoutGuide];
  id v27 = [v26 leadingAnchor];

  id v28 = [v25 constraintGreaterThanOrEqualToAnchor:v27 constant:12.0];
  *(void *)(v12 + 56) = v28;
  id v29 = [v4 trailingAnchor];
  id v30 = [v2 safeAreaLayoutGuide];
  id v31 = [v30 trailingAnchor];

  id v32 = [v29 constraintLessThanOrEqualToAnchor:v31 constant:-12.0];
  *(void *)(v12 + 64) = v32;
  specialized Array._endMutation()();
  sub_10007DCD8(0, &qword_100171658);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v43 activateConstraints:isa];

  [v4 _setOverrideVibrancyTrait:1];
  [v4 bounds];
  id v38 = [objc_allocWithZone((Class)type metadata accessor for SRCarPlaySnippetPlatterView()) initWithFrame:v34, v35, v36, v37];
  sub_1000A7984(2);
  [v4 addSubview:v38];
  [a1 setClipsToBounds:1];
  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v39 = [a1 layer];
  [v39 setCornerRadius:20.0];

  id v40 = [a1 layer];
  [v40 setCornerCurve:qword_100172C88];

  sub_1000A7A94(a1);
  uint64_t v41 = *(void **)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetPlatterView];
  *(void *)&v2[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetPlatterView] = v38;

  return v4;
}

char *sub_1000B14B4(void *a1)
{
  _StringGuts.grow(_:)(40);
  v2._countAndFlagsBits = 0xD000000000000025;
  v2._object = (void *)0x80000001000FED90;
  String.append(_:)(v2);
  [a1 state];
  type metadata accessor for State(0);
  _print_unlocked<A, B>(_:_:)();
  v3._countAndFlagsBits = 46;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_10007DCA0(v4, (uint64_t)qword_100171AB0);
  os_log_type_t v5 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v5, 0x10uLL, 0xD000000000000018, 0x80000001000FED70, 0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  unint64_t result = (char *)[a1 state];
  if (result == (char *)3)
  {
    os_log_type_t v7 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v7, 0x10uLL, 0xD000000000000018, 0x80000001000FED70, 0xD000000000000038, 0x80000001000FEDC0);
    unint64_t result = (char *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      id v8 = result;
      id v9 = &result[OBJC_IVAR____TtC4Siri23SRCarPlayViewController_delegate];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v10 = *((void *)v9 + 1);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, 7, ObjectType, v10);
        swift_unknownObjectRelease();
      }
      return (char *)swift_unknownObjectRelease();
    }
  }
  return result;
}

id sub_1000B1754()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlayView();
  return [super dealloc];
}

uint64_t type metadata accessor for SRCarPlayView()
{
  return self;
}

uint64_t sub_1000B1828()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000B1860()
{
  sub_1000A7DCC(*(void *)(v0 + 16));
}

uint64_t sub_1000B1868(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000B1878()
{
  return swift_release();
}

void sub_1000B1880()
{
  sub_1000A7EC4(*(void *)(v0 + 16));
}

void sub_1000B1888(uint64_t a1)
{
  sub_1000A7FD0(a1, *(void **)(v1 + 16));
}

void sub_1000B1890(void *a1, unsigned __int8 a2)
{
  int v4 = a2 & 0xFE;
  id v5 = [a1 layer];
  os_log_type_t v7 = v5;
  if (v4 == 2)
  {
    int v8 = a2;
    LODWORD(v6) = 1.0;
    [v5 setOpacity:v6];

    id v9 = [a1 layer];
    id v10 = sub_10007EB84();
    [v9 addAnimation:v10 forKey:0];

    if (v8 == 2)
    {
      id v11 = [a1 layer];
      id v12 = sub_10007EE18();
      [v11 addAnimation:v12 forKey:0];
    }
    id v18 = [a1 layer];
    [v18 setOpacity:0.0];
  }
  else
  {
    [v5 setOpacity:0.0];

    id v13 = [a1 layer];
    id v14 = sub_10007EA40();
    [v13 addAnimation:v14 forKey:0];

    id v15 = [a1 layer];
    id v16 = sub_10007ECC8();
    [v15 addAnimation:v16 forKey:0];

    id v18 = [a1 layer];
    LODWORD(v17) = 1.0;
    [v18 setOpacity:v17];
  }
}

id sub_1000B1A80()
{
  return sub_1000AFA9C(*(void **)(v0 + 16));
}

void sub_1000B1A88()
{
  *(void *)&v0[OBJC_IVAR____TtC4Siri13SRCarPlayView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC4Siri13SRCarPlayView_dismissalView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Siri13SRCarPlayView_backgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetContainerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC4Siri13SRCarPlayView_currentSnippetPlatterView] = 0;
  v0[OBJC_IVAR____TtC4Siri13SRCarPlayView_isUsingOpaqueBackground] = 0;
  uint64_t v1 = OBJC_IVAR____TtC4Siri13SRCarPlayView_showIntelligentLightAnimation;
  v0[v1] = [self deviceSupportsAI];
  v0[OBJC_IVAR____TtC4Siri13SRCarPlayView_touchPassThrough] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1000B1B94()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100094208(v0, qword_100171AB0);
  uint64_t result = sub_10007DCA0(v0, (uint64_t)qword_100171AB0);
  if (AFSiriLogContextConnection)
  {
    id v2 = AFSiriLogContextConnection;
    return Logger.init(_:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000B1BFC()
{
  off_100171AC8 = &_swiftEmptyDictionarySingleton;
}

uint64_t sub_1000B1C10(Swift::UInt a1)
{
  if (qword_100170450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = off_100171AC8;
  if (!*((void *)off_100171AC8 + 2) || (unint64_t v3 = sub_1000B321C(a1), (v4 & 1) == 0))
  {
    swift_endAccess();
    if (a1)
    {
      double v6 = sub_100098280(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v8 = *((void *)v6 + 2);
      unint64_t v7 = *((void *)v6 + 3);
      if (v8 >= v7 >> 1) {
        double v6 = sub_100098280((char *)(v7 > 1), v8 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v8 + 1;
      id v9 = &v6[16 * v8];
      *((void *)v9 + 4) = 0x7461766974636123;
      *((void *)v9 + 5) = 0xEB000000006E6F69;
      if ((a1 & 2) == 0)
      {
LABEL_17:
        if ((a1 & 4) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v14 = *((void *)v6 + 2);
          unint64_t v13 = *((void *)v6 + 3);
          if (v14 >= v13 >> 1) {
            double v6 = sub_100098280((char *)(v13 > 1), v14 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v14 + 1;
          id v15 = &v6[16 * v14];
          *((void *)v15 + 4) = 0x736472616323;
          *((void *)v15 + 5) = 0xE600000000000000;
          if ((a1 & 8) == 0)
          {
LABEL_19:
            if ((a1 & 0x10) == 0) {
              goto LABEL_20;
            }
            goto LABEL_37;
          }
        }
        else if ((a1 & 8) == 0)
        {
          goto LABEL_19;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v17 = *((void *)v6 + 2);
        unint64_t v16 = *((void *)v6 + 3);
        if (v17 >= v16 >> 1) {
          double v6 = sub_100098280((char *)(v16 > 1), v17 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v17 + 1;
        id v18 = &v6[16 * v17];
        *((void *)v18 + 4) = 0x646E4472616323;
        *((void *)v18 + 5) = 0xE700000000000000;
        if ((a1 & 0x10) == 0)
        {
LABEL_20:
          if ((a1 & 0x20) == 0) {
            goto LABEL_21;
          }
          goto LABEL_42;
        }
LABEL_37:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v20 = *((void *)v6 + 2);
        unint64_t v19 = *((void *)v6 + 3);
        if (v20 >= v19 >> 1) {
          double v6 = sub_100098280((char *)(v19 > 1), v20 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v20 + 1;
        id v21 = &v6[16 * v20];
        *((void *)v21 + 4) = 0x79616C5072616323;
        *((void *)v21 + 5) = 0xE800000000000000;
        if ((a1 & 0x20) == 0)
        {
LABEL_21:
          if ((a1 & 0x40) == 0) {
            goto LABEL_22;
          }
          goto LABEL_47;
        }
LABEL_42:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v23 = *((void *)v6 + 2);
        unint64_t v22 = *((void *)v6 + 3);
        if (v23 >= v22 >> 1) {
          double v6 = sub_100098280((char *)(v22 > 1), v23 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v23 + 1;
        id v24 = &v6[16 * v23];
        *((void *)v24 + 4) = 0x73616D6323;
        *((void *)v24 + 5) = 0xE500000000000000;
        if ((a1 & 0x40) == 0)
        {
LABEL_22:
          if ((a1 & 0x80) == 0) {
            goto LABEL_23;
          }
          goto LABEL_52;
        }
LABEL_47:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v26 = *((void *)v6 + 2);
        unint64_t v25 = *((void *)v6 + 3);
        if (v26 >= v25 >> 1) {
          double v6 = sub_100098280((char *)(v25 > 1), v26 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v26 + 1;
        id v27 = &v6[16 * v26];
        *((void *)v27 + 4) = 0x746361706D6F6323;
        *((void *)v27 + 5) = 0xE800000000000000;
        if ((a1 & 0x80) == 0)
        {
LABEL_23:
          if ((a1 & 0x100) == 0) {
            goto LABEL_24;
          }
          goto LABEL_57;
        }
LABEL_52:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v29 = *((void *)v6 + 2);
        unint64_t v28 = *((void *)v6 + 3);
        if (v29 >= v28 >> 1) {
          double v6 = sub_100098280((char *)(v28 > 1), v29 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v29 + 1;
        id v30 = &v6[16 * v29];
        *((void *)v30 + 4) = 0x6572467365796523;
        *((void *)v30 + 5) = 0xE900000000000065;
        if ((a1 & 0x100) == 0)
        {
LABEL_24:
          if ((a1 & 0x200) == 0) {
            goto LABEL_25;
          }
          goto LABEL_62;
        }
LABEL_57:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v32 = *((void *)v6 + 2);
        unint64_t v31 = *((void *)v6 + 3);
        if (v32 >= v31 >> 1) {
          double v6 = sub_100098280((char *)(v31 > 1), v32 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v32 + 1;
        double v33 = &v6[16 * v32];
        *((void *)v33 + 4) = 0x7375636F6623;
        *((void *)v33 + 5) = 0xE600000000000000;
        if ((a1 & 0x200) == 0)
        {
LABEL_25:
          if ((a1 & 0x400) == 0) {
            goto LABEL_72;
          }
          goto LABEL_67;
        }
LABEL_62:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v35 = *((void *)v6 + 2);
        unint64_t v34 = *((void *)v6 + 3);
        if (v35 >= v34 >> 1) {
          double v6 = sub_100098280((char *)(v34 > 1), v35 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v35 + 1;
        double v36 = &v6[16 * v35];
        *((void *)v36 + 4) = 0x656C646923;
        *((void *)v36 + 5) = 0xE500000000000000;
        if ((a1 & 0x400) == 0)
        {
LABEL_72:
          if ((a1 & 0x800) != 0)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
            }
            unint64_t v41 = *((void *)v6 + 2);
            unint64_t v40 = *((void *)v6 + 3);
            if (v41 >= v40 >> 1) {
              double v6 = sub_100098280((char *)(v40 > 1), v41 + 1, 1, v6);
            }
            *((void *)v6 + 2) = v41 + 1;
            id v42 = &v6[16 * v41];
            *((void *)v42 + 4) = 0xD000000000000015;
            *((void *)v42 + 5) = 0x80000001000FEF00;
            if ((a1 & 0x1000) == 0)
            {
LABEL_74:
              if ((a1 & 0x2000) == 0) {
                goto LABEL_75;
              }
              goto LABEL_106;
            }
          }
          else if ((a1 & 0x1000) == 0)
          {
            goto LABEL_74;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v44 = *((void *)v6 + 2);
          unint64_t v43 = *((void *)v6 + 3);
          if (v44 >= v43 >> 1) {
            double v6 = sub_100098280((char *)(v43 > 1), v44 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v44 + 1;
          double v45 = &v6[16 * v44];
          *((void *)v45 + 4) = 0x736B636F6C23;
          *((void *)v45 + 5) = 0xE600000000000000;
          if ((a1 & 0x2000) == 0)
          {
LABEL_75:
            if ((a1 & 0x4000) == 0) {
              goto LABEL_76;
            }
            goto LABEL_111;
          }
LABEL_106:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v47 = *((void *)v6 + 2);
          unint64_t v46 = *((void *)v6 + 3);
          if (v47 >= v46 >> 1) {
            double v6 = sub_100098280((char *)(v46 > 1), v47 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v47 + 1;
          double v48 = &v6[16 * v47];
          *((void *)v48 + 4) = 0x7365646F6D23;
          *((void *)v48 + 5) = 0xE600000000000000;
          if ((a1 & 0x4000) == 0)
          {
LABEL_76:
            if ((a1 & 0x8000) == 0) {
              goto LABEL_77;
            }
            goto LABEL_116;
          }
LABEL_111:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v50 = *((void *)v6 + 2);
          unint64_t v49 = *((void *)v6 + 3);
          if (v50 >= v49 >> 1) {
            double v6 = sub_100098280((char *)(v49 > 1), v50 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v50 + 1;
          double v51 = &v6[16 * v50];
          *((void *)v51 + 4) = 0x64616972796D23;
          *((void *)v51 + 5) = 0xE700000000000000;
          if ((a1 & 0x8000) == 0)
          {
LABEL_77:
            if ((a1 & 0x10000) == 0) {
              goto LABEL_78;
            }
            goto LABEL_121;
          }
LABEL_116:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v53 = *((void *)v6 + 2);
          unint64_t v52 = *((void *)v6 + 3);
          if (v53 >= v52 >> 1) {
            double v6 = sub_100098280((char *)(v52 > 1), v53 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v53 + 1;
          uint64_t v54 = &v6[16 * v53];
          *((void *)v54 + 4) = 0x5564616972796D23;
          *((void *)v54 + 5) = 0xE900000000000049;
          if ((a1 & 0x10000) == 0)
          {
LABEL_78:
            if ((a1 & 0x20000) == 0) {
              goto LABEL_79;
            }
            goto LABEL_126;
          }
LABEL_121:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v56 = *((void *)v6 + 2);
          unint64_t v55 = *((void *)v6 + 3);
          if (v56 >= v55 >> 1) {
            double v6 = sub_100098280((char *)(v55 > 1), v56 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v56 + 1;
          double v57 = &v6[16 * v56];
          *((void *)v57 + 4) = 0xD000000000000014;
          *((void *)v57 + 5) = 0x80000001000FEEE0;
          if ((a1 & 0x20000) == 0)
          {
LABEL_79:
            if ((a1 & 0x40000) == 0) {
              goto LABEL_80;
            }
            goto LABEL_131;
          }
LABEL_126:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v59 = *((void *)v6 + 2);
          unint64_t v58 = *((void *)v6 + 3);
          if (v59 >= v58 >> 1) {
            double v6 = sub_100098280((char *)(v58 > 1), v59 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v59 + 1;
          double v60 = &v6[16 * v59];
          *((void *)v60 + 4) = 0x7973696F6E23;
          *((void *)v60 + 5) = 0xE600000000000000;
          if ((a1 & 0x40000) == 0)
          {
LABEL_80:
            if ((a1 & 0x80000) == 0) {
              goto LABEL_81;
            }
            goto LABEL_136;
          }
LABEL_131:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v62 = *((void *)v6 + 2);
          unint64_t v61 = *((void *)v6 + 3);
          if (v62 >= v61 >> 1) {
            double v6 = sub_100098280((char *)(v61 > 1), v62 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v62 + 1;
          id v63 = &v6[16 * v62];
          *((void *)v63 + 4) = 0xD000000000000011;
          *((void *)v63 + 5) = 0x80000001000FEEC0;
          if ((a1 & 0x80000) == 0)
          {
LABEL_81:
            if ((a1 & 0x100000) == 0) {
              goto LABEL_82;
            }
            goto LABEL_141;
          }
LABEL_136:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v65 = *((void *)v6 + 2);
          unint64_t v64 = *((void *)v6 + 3);
          if (v65 >= v64 >> 1) {
            double v6 = sub_100098280((char *)(v64 > 1), v65 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v65 + 1;
          double v66 = &v6[16 * v65];
          *((void *)v66 + 4) = 0x7765695662724F23;
          *((void *)v66 + 5) = 0xE800000000000000;
          if ((a1 & 0x100000) == 0)
          {
LABEL_82:
            if ((a1 & 0x200000) == 0) {
              goto LABEL_83;
            }
            goto LABEL_146;
          }
LABEL_141:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v68 = *((void *)v6 + 2);
          unint64_t v67 = *((void *)v6 + 3);
          if (v68 >= v67 >> 1) {
            double v6 = sub_100098280((char *)(v67 > 1), v68 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v68 + 1;
          uint64_t v69 = &v6[16 * v68];
          strcpy(v69 + 32, "#presynthesize");
          v69[47] = -18;
          if ((a1 & 0x200000) == 0)
          {
LABEL_83:
            if ((a1 & 0x400000) == 0) {
              goto LABEL_84;
            }
            goto LABEL_151;
          }
LABEL_146:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v71 = *((void *)v6 + 2);
          unint64_t v70 = *((void *)v6 + 3);
          if (v71 >= v70 >> 1) {
            double v6 = sub_100098280((char *)(v70 > 1), v71 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v71 + 1;
          id v72 = &v6[16 * v71];
          strcpy(v72 + 32, "#sceneHosting");
          *((_WORD *)v72 + 23) = -4864;
          if ((a1 & 0x400000) == 0)
          {
LABEL_84:
            if ((a1 & 0x800000) == 0) {
              goto LABEL_85;
            }
            goto LABEL_156;
          }
LABEL_151:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v74 = *((void *)v6 + 2);
          unint64_t v73 = *((void *)v6 + 3);
          if (v74 >= v73 >> 1) {
            double v6 = sub_100098280((char *)(v73 > 1), v74 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v74 + 1;
          id v75 = &v6[16 * v74];
          *((void *)v75 + 4) = 0xD000000000000015;
          *((void *)v75 + 5) = 0x80000001000FEEA0;
          if ((a1 & 0x800000) == 0)
          {
LABEL_85:
            if ((a1 & 0x1000000) == 0) {
              goto LABEL_86;
            }
            goto LABEL_161;
          }
LABEL_156:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v77 = *((void *)v6 + 2);
          unint64_t v76 = *((void *)v6 + 3);
          if (v77 >= v76 >> 1) {
            double v6 = sub_100098280((char *)(v76 > 1), v77 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v77 + 1;
          NSString v78 = &v6[16 * v77];
          *((void *)v78 + 4) = 0xD000000000000017;
          *((void *)v78 + 5) = 0x80000001000FEE80;
          if ((a1 & 0x1000000) == 0)
          {
LABEL_86:
            if ((a1 & 0x2000000) == 0) {
              goto LABEL_87;
            }
            goto LABEL_166;
          }
LABEL_161:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v80 = *((void *)v6 + 2);
          unint64_t v79 = *((void *)v6 + 3);
          if (v80 >= v79 >> 1) {
            double v6 = sub_100098280((char *)(v79 > 1), v80 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v80 + 1;
          id v81 = &v6[16 * v80];
          *((void *)v81 + 4) = 0x4449486972697323;
          *((void *)v81 + 5) = 0xE800000000000000;
          if ((a1 & 0x2000000) == 0)
          {
LABEL_87:
            if ((a1 & 0x4000000) == 0) {
              goto LABEL_88;
            }
            goto LABEL_171;
          }
LABEL_166:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v83 = *((void *)v6 + 2);
          unint64_t v82 = *((void *)v6 + 3);
          if (v83 >= v82 >> 1) {
            double v6 = sub_100098280((char *)(v82 > 1), v83 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v83 + 1;
          id v84 = &v6[16 * v83];
          *((void *)v84 + 4) = 0x74657070696E7323;
          *((void *)v84 + 5) = 0xEA00000000006975;
          if ((a1 & 0x4000000) == 0)
          {
LABEL_88:
            if ((a1 & 0x8000000) == 0) {
              goto LABEL_89;
            }
            goto LABEL_176;
          }
LABEL_171:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v86 = *((void *)v6 + 2);
          unint64_t v85 = *((void *)v6 + 3);
          if (v86 >= v85 >> 1) {
            double v6 = sub_100098280((char *)(v85 > 1), v86 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v86 + 1;
          id v87 = &v6[16 * v86];
          *((void *)v87 + 4) = 0x7263736E61727423;
          *((void *)v87 + 5) = 0xEB00000000747069;
          if ((a1 & 0x8000000) == 0)
          {
LABEL_89:
            if ((a1 & 0x10000000) == 0) {
              goto LABEL_90;
            }
            goto LABEL_181;
          }
LABEL_176:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v89 = *((void *)v6 + 2);
          unint64_t v88 = *((void *)v6 + 3);
          if (v89 >= v88 >> 1) {
            double v6 = sub_100098280((char *)(v88 > 1), v89 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v89 + 1;
          uint64_t v90 = &v6[16 * v89];
          *((void *)v90 + 4) = 1937011747;
          *((void *)v90 + 5) = 0xE400000000000000;
          if ((a1 & 0x10000000) == 0)
          {
LABEL_90:
            if ((a1 & 0x20000000) == 0) {
              goto LABEL_91;
            }
            goto LABEL_186;
          }
LABEL_181:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v92 = *((void *)v6 + 2);
          unint64_t v91 = *((void *)v6 + 3);
          if (v92 >= v91 >> 1) {
            double v6 = sub_100098280((char *)(v91 > 1), v92 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v92 + 1;
          uint64_t v93 = &v6[16 * v92];
          *((void *)v93 + 4) = 0x6972695343505823;
          *((void *)v93 + 5) = 0xEB00000000707041;
          if ((a1 & 0x20000000) == 0)
          {
LABEL_91:
            if ((a1 & 0x40000000) == 0) {
              goto LABEL_92;
            }
            goto LABEL_191;
          }
LABEL_186:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v95 = *((void *)v6 + 2);
          unint64_t v94 = *((void *)v6 + 3);
          if (v95 >= v94 >> 1) {
            double v6 = sub_100098280((char *)(v94 > 1), v95 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v95 + 1;
          uint64_t v96 = &v6[16 * v95];
          *((void *)v96 + 4) = 1819048483;
          *((void *)v96 + 5) = 0xE400000000000000;
          if ((a1 & 0x40000000) == 0)
          {
LABEL_92:
            if ((a1 & 0x80000000) == 0) {
              goto LABEL_93;
            }
            goto LABEL_196;
          }
LABEL_191:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v98 = *((void *)v6 + 2);
          unint64_t v97 = *((void *)v6 + 3);
          if (v98 >= v97 >> 1) {
            double v6 = sub_100098280((char *)(v97 > 1), v98 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v98 + 1;
          id v99 = &v6[16 * v98];
          *((void *)v99 + 4) = 0x416D657473797323;
          *((void *)v99 + 5) = 0xEF65727574726570;
          if ((a1 & 0x80000000) == 0)
          {
LABEL_93:
            if ((a1 & 0x100000000) == 0) {
              goto LABEL_94;
            }
            goto LABEL_201;
          }
LABEL_196:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v101 = *((void *)v6 + 2);
          unint64_t v100 = *((void *)v6 + 3);
          if (v101 >= v100 >> 1) {
            double v6 = sub_100098280((char *)(v100 > 1), v101 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v101 + 1;
          double v102 = &v6[16 * v101];
          *((void *)v102 + 4) = 0xD000000000000015;
          *((void *)v102 + 5) = 0x80000001000FEE60;
          if ((a1 & 0x100000000) == 0)
          {
LABEL_94:
            if (!*((void *)v6 + 2))
            {
              swift_bridgeObjectRelease();
              return 0;
            }
LABEL_206:
            id v111 = v6;
            swift_bridgeObjectRetain();
            sub_1000B38FC((uint64_t *)&v111);
            swift_bridgeObjectRelease();
            sub_10007D3B4(&qword_100171AD0);
            sub_1000B3968();
            uint64_t v5 = BidirectionalCollection<>.joined(separator:)();
            uint64_t v107 = v106;
            swift_release();
            swift_beginAccess();
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            id v110 = off_100171AC8;
            off_100171AC8 = (_UNKNOWN *)0x8000000000000000;
            sub_1000B3570(v5, v107, a1, isUniquelyReferenced_nonNull_native);
            off_100171AC8 = v110;
            swift_bridgeObjectRelease();
            swift_endAccess();
            return v5;
          }
LABEL_201:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v104 = *((void *)v6 + 2);
          unint64_t v103 = *((void *)v6 + 3);
          if (v104 >= v103 >> 1) {
            double v6 = sub_100098280((char *)(v103 > 1), v104 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v104 + 1;
          CGFloat v105 = &v6[16 * v104];
          *((void *)v105 + 4) = 0xD000000000000013;
          *((void *)v105 + 5) = 0x80000001000FEE40;
          goto LABEL_206;
        }
LABEL_67:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v38 = *((void *)v6 + 2);
        unint64_t v37 = *((void *)v6 + 3);
        if (v38 >= v37 >> 1) {
          double v6 = sub_100098280((char *)(v37 > 1), v38 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v38 + 1;
        id v39 = &v6[16 * v38];
        *((void *)v39 + 4) = 0x6D6954656C646923;
        *((void *)v39 + 5) = 0xEA00000000007265;
        goto LABEL_72;
      }
    }
    else
    {
      double v6 = (char *)_swiftEmptyArrayStorage;
      if ((a1 & 2) == 0) {
        goto LABEL_17;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v6 = sub_100098280(0, *((void *)v6 + 2) + 1, 1, v6);
    }
    unint64_t v11 = *((void *)v6 + 2);
    unint64_t v10 = *((void *)v6 + 3);
    if (v11 >= v10 >> 1) {
      double v6 = sub_100098280((char *)(v10 > 1), v11 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v11 + 1;
    id v12 = &v6[16 * v11];
    strcpy(v12 + 32, "#autodismiss");
    v12[45] = 0;
    *((_WORD *)v12 + 23) = -5120;
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)(v2[7] + 16 * v3);
  swift_endAccess();
  swift_bridgeObjectRetain();
  return v5;
}

Swift::Int sub_1000B2EF4()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1000B2F3C()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1000B2F68()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_1000B2FAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10007DC64();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_1000B2FEC(os_log_type_t a1, Swift::UInt a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v24 = a3;
  unint64_t v25 = a4;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1000B1C10(a2);
  if (v11)
  {
    unint64_t v22 = 0xE100000000000000;
    String.append(_:)(*(Swift::String *)&v10);
    swift_bridgeObjectRelease();
    v12._countAndFlagsBits = 32;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
  }
  if (a6)
  {
    uint64_t v13 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v13 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if (v13)
    {
      unint64_t v22 = 0xE100000000000000;
      v14._countAndFlagsBits = a5;
      v14._object = (void *)a6;
      String.append(_:)(v14);
      v15._countAndFlagsBits = 32;
      v15._object = (void *)0xE100000000000000;
      String.append(_:)(v15);
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v17 = v24;
  unint64_t v16 = v25;
  swift_bridgeObjectRetain();
  os_log_type_t v18 = a1;
  log = Logger.logObject.getter();
  if (os_log_type_enabled(log, a1))
  {
    unint64_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)unint64_t v19 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_100092AEC(v17, v16, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v18, "%s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
}

unint64_t sub_1000B321C(Swift::UInt a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_1000B36B0(a1, v2);
}

uint64_t sub_1000B3288(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10007D3B4(&qword_100171AE0);
  char v34 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    double v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v33 = -1 << v31;
              }
              unint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      unint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v27);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      void *v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_1000B3570(uint64_t a1, uint64_t a2, Swift::UInt a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000B321C(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1000B374C();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      unint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    unint64_t v21 = (void *)(v18[7] + 16 * v12);
    void *v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1000B3288(result, a4 & 1);
  uint64_t result = sub_1000B321C(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    unint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_1000B36B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

void *sub_1000B374C()
{
  Swift::UInt v1 = v0;
  sub_10007D3B4(&qword_100171AE0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    *Swift::UInt v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *uint64_t v22 = v21;
    v22[1] = v20;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

Swift::Int sub_1000B38FC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1000B45E8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1000B39C4(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_1000B3968()
{
  unint64_t result = qword_100171AD8;
  if (!qword_100171AD8)
  {
    sub_100081AF8(&qword_100171AD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171AD8);
  }
  return result;
}

Swift::Int sub_1000B39C4(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1000B40B0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  double v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = &_swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage + 32;
    if (v3 != 1)
    {
      unint64_t v12 = *((void *)&_swiftEmptyArrayStorage + 2);
      uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
LABEL_118:
      unint64_t v94 = v11;
      unint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          unint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1000B4180((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v97 = sub_1000B45D4((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          unint64_t v100 = &v97[16 * v96 + 32];
          *(void *)unint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    unint64_t v104 = &_swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    unint64_t v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      int64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ _stringCompareWithSmolCheck(_:_:expecting:)()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1000B441C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1000B441C((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    id v42 = v11 + 32;
    unint64_t v43 = &v11[16 * v41 + 32];
    *(void *)unint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          double v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            unint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        unint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        unint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        id v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        unint64_t v85 = v11;
        unint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        unint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1000B4180((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)unint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        id v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      double v33 = (void *)(v10 + 16 * v9);
      do
      {
        char v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        unint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)unint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000B40B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1000B4180(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_1000B4518((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1000B441C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10007D3B4(&qword_100171AE8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1000B4518(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1000B45D4(uint64_t a1)
{
  return sub_1000B441C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1000B45E8(uint64_t a1)
{
  return sub_100087A20(0, *(void *)(a1 + 16), 0, (char *)a1);
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

ValueMetadata *type metadata accessor for Log.LogType()
{
  return &type metadata for Log.LogType;
}

unint64_t sub_1000B4620()
{
  unint64_t result = qword_100171AF0;
  if (!qword_100171AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171AF0);
  }
  return result;
}

unint64_t sub_1000B4678()
{
  unint64_t result = qword_100171AF8;
  if (!qword_100171AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171AF8);
  }
  return result;
}

unint64_t sub_1000B46D0()
{
  unint64_t result = qword_100171B00;
  if (!qword_100171B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171B00);
  }
  return result;
}

unint64_t sub_1000B4728()
{
  unint64_t result = qword_100171B08;
  if (!qword_100171B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171B08);
  }
  return result;
}

void sub_1000B477C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requesterID];
  v51[1] = &v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requesterID];
  strcpy(&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requesterID], "com.apple.siri");
  v1[15] = -18;
  uint64_t v2 = &v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_siriSettingsPath];
  *(void *)uint64_t v2 = 0xD000000000000011;
  *((void *)v2 + 1) = 0x80000001000FF270;
  Swift::Int v3 = (Swift::String *)&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerTitle];
  uint64_t v4 = self;
  uint64_t v5 = v0;
  id v6 = [v4 mainBundle];
  v7._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v55._object = (void *)0xEC000000656C7469;
  v7._object = (void *)0x80000001000FF290;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v55._uint64_t countAndFlagsBits = 0x542072656E6E6142;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v55);

  *Swift::Int v3 = v9;
  uint64_t v10 = (Swift::String *)&v5[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerSubtitle];
  id v11 = [v4 mainBundle];
  v12._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v56._object = (void *)0xEF656C7469746275;
  v12._object = (void *)0x80000001000FF2B0;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v56._uint64_t countAndFlagsBits = 0x532072656E6E6142;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v56);

  *uint64_t v10 = v14;
  v5[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_isBannerPresent] = 0;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v19 = UUID.uuidString.getter();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v22 = (uint64_t *)&v5[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requestID];
  *uint64_t v22 = v19;
  v22[1] = v21;
  NSString v23 = String._bridgeToObjectiveC()();
  unint64_t v24 = self;
  id v25 = [v24 _systemImageNamed:v23];

  id v26 = [objc_allocWithZone((Class)UIImageView) initWithImage:v25];
  Swift::Int v27 = self;
  id v28 = [v27 systemGrayColor];
  [v26 setTintColor:v28];

  NSString v29 = String._bridgeToObjectiveC()();
  id v30 = [v24 _systemImageNamed:v29];

  id v31 = [objc_allocWithZone((Class)UIImageView) initWithImage:v30];
  id v32 = [v27 systemGrayColor];
  [v31 setTintColor:v32];

  id v33 = objc_allocWithZone((Class)PLPillContentItem);
  swift_bridgeObjectRetain();
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v35 = [v33 initWithText:v34 style:1];

  object = v10->_object;
  uint64_t countAndFlagsBits = v10->_countAndFlagsBits;
  uint64_t v54 = object;
  sub_1000AEEC8();
  StringProtocol.localizedCapitalized.getter();
  id v37 = objc_allocWithZone((Class)PLPillContentItem);
  NSString v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v39 = [v37 initWithText:v38 style:2];

  id v40 = objc_allocWithZone((Class)PLPillView);
  v51[0] = v26;
  id v41 = [v40 initWithLeadingAccessoryView:v26 trailingAccessoryView:v31];
  uint64_t v42 = OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_pillView;
  *(void *)&v5[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_pillView] = v41;
  sub_10007D3B4(&qword_100171650);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1000DD1E0;
  *(void *)(v43 + 32) = v35;
  *(void *)(v43 + 40) = v39;
  uint64_t countAndFlagsBits = v43;
  specialized Array._endMutation()();
  sub_10007DCD8(0, (unint64_t *)&unk_100171C10);
  id v44 = v41;
  id v45 = v35;
  id v46 = v39;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v44 setCenterContentItems:isa];

  [*(id *)&v5[v42] setAutoresizingMask:18];
  swift_bridgeObjectRetain();
  NSString v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v49 = [self bannerSourceForDestination:0 forRequesterIdentifier:v48];

  if (v49)
  {
    *(void *)&v5[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerSource] = v49;

    uint64_t v50 = (objc_class *)type metadata accessor for SRAssetsDownloadBannerViewController();
    v52.receiver = v5;
    v52.super_class = v50;
    [super initWithNibName:0 bundle:0];
  }
  else
  {
    __break(1u);
  }
}

void sub_1000B4DE0()
{
  id v1 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"openSettings:"];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  Swift::Int v3 = v2;
  [v2 addGestureRecognizer:v1];

  id v4 = [v0 view];
  if (!v4)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v5 = v4;
  [v4 addSubview:*(void *)&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_pillView]];
}

void sub_1000B4FD4(double a1)
{
  if ((*((unsigned char *)v1 + OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_isBannerPresent) & 1) == 0)
  {
    sub_10007DCD8(0, (unint64_t *)&qword_1001717B0);
    uint64_t v16 = static OS_dispatch_queue.main.getter();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(double *)(v3 + 24) = a1;
    aBlock[4] = sub_1000B64A4;
    aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000A8D84;
    aBlock[3] = &unk_100145EE8;
    id v4 = _Block_copy(aBlock);
    id v5 = v1;
    swift_release();
    uint64_t v6 = type metadata accessor for DispatchQoS();
    uint64_t v15 = (uint64_t)&v15;
    uint64_t v7 = *(void *)(v6 - 8);
    __chkstk_darwin(v6);
    Swift::String v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
    uint64_t v11 = *(void *)(v10 - 8);
    __chkstk_darwin(v10);
    Swift::String v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000B6418();
    sub_10007D3B4((uint64_t *)&unk_1001717C0);
    sub_1000A6C24();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    Swift::String v14 = (void *)v16;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v4);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

void sub_1000B5298(char *a1, double a2)
{
  id v4 = *(void **)&a1[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerSource];
  id v21 = 0;
  id v5 = [v4 layoutDescriptionWithError:&v21];
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = v21;
    [v6 presentationSize];
    double v9 = v8;
    double v11 = v10;
    [v6 containerSize];
    [a1 preferredContentSizeWithPresentationSize:v9 containerSize:v11];
    [a1 setPreferredContentSize:];
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_10007DCA0(v14, (uint64_t)qword_100171AB0);
    os_log_type_t v15 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v15, 0x80000000uLL, 0xD000000000000010, 0x80000001000FF190, 0xD00000000000001ELL, 0x80000001000FF1E0);
    id v21 = 0;
    if ([v4 postPresentable:a1 options:1 userInfo:0 error:&v21])
    {
      id v16 = v21;
      sub_1000B5618(a2);

      return;
    }
    id v18 = v21;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  else
  {
    id v17 = v21;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_10007DCA0(v19, (uint64_t)qword_100171AB0);
  os_log_type_t v20 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v20, 0x80000000uLL, 0xD000000000000010, 0x80000001000FF190, 0xD000000000000025, 0x80000001000FF1B0);
  swift_errorRelease();
}

uint64_t sub_1000B5618(double a1)
{
  id v2 = v1;
  sub_10007DCD8(0, (unint64_t *)&qword_1001717B0);
  uint64_t v4 = static OS_dispatch_queue.main.getter();
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  double v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v11 = (char *)&v30 - v10;
  static DispatchTime.now()();
  uint64_t v12 = type metadata accessor for DispatchTimeInterval();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t result = __chkstk_darwin(v12);
  id v16 = (uint64_t *)((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a1 < 9.22337204e18)
  {
    void *v16 = (uint64_t)a1;
    (*(void (**)(void *, void, uint64_t))(v13 + 104))(v16, enum case for DispatchTimeInterval.seconds(_:), v12);
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v13 + 8))(v16, v12);
    id v17 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
    uint64_t v30 = v6 + 8;
    id v35 = v17;
    v17(v11, v5);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v2;
    aBlock[4] = sub_1000B6464;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000A8D84;
    aBlock[3] = &unk_100145E48;
    uint64_t v19 = _Block_copy(aBlock);
    id v20 = v2;
    swift_release();
    uint64_t v33 = type metadata accessor for DispatchQoS();
    NSString v34 = &v30;
    uint64_t v21 = *(void *)(v33 - 8);
    __chkstk_darwin(v33);
    NSString v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    unint64_t v24 = v9;
    id v25 = (void *)v4;
    uint64_t v26 = type metadata accessor for DispatchWorkItemFlags();
    uint64_t v31 = v5;
    id v32 = &v30;
    uint64_t v27 = *(void *)(v26 - 8);
    __chkstk_darwin(v26);
    NSString v29 = (char *)&v30 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000B6418();
    sub_10007D3B4((uint64_t *)&unk_1001717C0);
    sub_1000A6C24();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v33);
    return v35(v24, v31);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1000B5ABC(uint64_t result)
{
  if (*(unsigned char *)(result + OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_isBannerPresent) == 1)
  {
    id v1 = (void *)result;
    sub_10007DCD8(0, (unint64_t *)&qword_1001717B0);
    uint64_t v15 = static OS_dispatch_queue.main.getter();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v1;
    aBlock[4] = sub_1000B690C;
    aBlock[5] = v2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000A8D84;
    aBlock[3] = &unk_100145E98;
    uint64_t v3 = _Block_copy(aBlock);
    id v4 = v1;
    swift_release();
    uint64_t v5 = type metadata accessor for DispatchQoS();
    uint64_t v14 = (uint64_t)&v14;
    uint64_t v6 = *(void *)(v5 - 8);
    __chkstk_darwin(v5);
    uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
    uint64_t v10 = *(void *)(v9 - 8);
    __chkstk_darwin(v9);
    uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000B6418();
    sub_10007D3B4((uint64_t *)&unk_1001717C0);
    sub_1000A6C24();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v13 = (void *)v15;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v3);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

void sub_1000B5D74()
{
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_isBannerPresent) == 1)
  {
    sub_10007DCD8(0, (unint64_t *)&qword_1001717B0);
    uint64_t v14 = static OS_dispatch_queue.main.getter();
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = v0;
    aBlock[4] = sub_1000B63F8;
    aBlock[5] = v1;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000A8D84;
    aBlock[3] = &unk_100145DF8;
    uint64_t v2 = _Block_copy(aBlock);
    id v3 = v0;
    swift_release();
    uint64_t v4 = type metadata accessor for DispatchQoS();
    uint64_t v13 = (uint64_t)&v13;
    uint64_t v5 = *(void *)(v4 - 8);
    __chkstk_darwin(v4);
    uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    static DispatchQoS.unspecified.getter();
    uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
    uint64_t v9 = *(void *)(v8 - 8);
    __chkstk_darwin(v8);
    uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000B6418();
    sub_10007D3B4((uint64_t *)&unk_1001717C0);
    sub_1000A6C24();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v12 = (void *)v14;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v2);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_1000B602C(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerSource);
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v9 = 0;
  id v4 = [v1 revokePresentableWithRequestIdentifier:v2 reason:v3 animated:1 userInfo:0 error:&v9];

  if (v4)
  {
    id v5 = v9;
  }
  else
  {
    id v6 = v9;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_100170448 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10007DCA0(v7, (uint64_t)qword_100171AB0);
    os_log_type_t v8 = static os_log_type_t.info.getter();
    sub_1000B2FEC(v8, 0x80000000uLL, 0x427373696D736964, 0xEF292872656E6E61, 0xD00000000000002CLL, 0x80000001000FF160);
    swift_errorRelease();
  }
}

id sub_1000B6210()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRAssetsDownloadBannerViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for SRAssetsDownloadBannerViewController()
{
  return self;
}

id sub_1000B6334()
{
  swift_bridgeObjectRetain();
  NSString v0 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_1000B63C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000B63F8()
{
  sub_1000B602C(*(void *)(v0 + 16));
}

uint64_t sub_1000B6400(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1000B6410()
{
  return swift_release();
}

unint64_t sub_1000B6418()
{
  unint64_t result = qword_100171BE0;
  if (!qword_100171BE0)
  {
    type metadata accessor for DispatchWorkItemFlags();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171BE0);
  }
  return result;
}

uint64_t sub_1000B6464()
{
  return sub_1000B5ABC(*(void *)(v0 + 16));
}

uint64_t sub_1000B646C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000B64A4()
{
  sub_1000B5298(*(char **)(v0 + 16), *(double *)(v0 + 24));
}

void sub_1000B64B0()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requesterID];
  strcpy(&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_requesterID], "com.apple.siri");
  v1[15] = -18;
  uint64_t v2 = &v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_siriSettingsPath];
  *(void *)uint64_t v2 = 0xD000000000000011;
  *((void *)v2 + 1) = 0x80000001000FF270;
  NSString v3 = (Swift::String *)&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerTitle];
  id v4 = self;
  id v5 = [v4 mainBundle];
  v6._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v14._object = (void *)0xEC000000656C7469;
  v6._object = (void *)0x80000001000FF290;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0x542072656E6E6142;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v14);

  *NSString v3 = v8;
  id v9 = (Swift::String *)&v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_bannerSubtitle];
  id v10 = [v4 mainBundle];
  v11._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v15._object = (void *)0xEF656C7469746275;
  v11._object = (void *)0x80000001000FF2B0;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v15._uint64_t countAndFlagsBits = 0x532072656E6E6142;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v15);

  *id v9 = v13;
  v0[OBJC_IVAR____TtC4Siri36SRAssetsDownloadBannerViewController_isBannerPresent] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_1000B6694()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  NSString v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10007D3B4((uint64_t *)&unk_1001716F0);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1) {
    return (id)sub_100088D3C((uint64_t)v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v6, v0);
  if (qword_100170448 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_10007DCA0(v8, (uint64_t)qword_100171AB0);
  os_log_type_t v9 = static os_log_type_t.info.getter();
  sub_1000B2FEC(v9, 0x80000000uLL, 0xD000000000000010, 0x80000001000FF230, 0xD00000000000001CLL, 0x80000001000FF250);
  id result = [self defaultWorkspace];
  if (result)
  {
    Swift::String v11 = result;
    URL._bridgeToObjectiveC()(v10);
    Swift::String v13 = v12;
    [v11 openSensitiveURL:v12 withOptions:0];

    sub_1000B5D74();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for SRCarPlaySiriUnavailableViewController()
{
  uint64_t result = qword_100171CE0;
  if (!qword_100171CE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000B6964()
{
  return swift_initClassMetadata2();
}

void sub_1000B69A4()
{
}

void sub_1000B6A00()
{
}

void sub_1000B6A30()
{
}

id sub_1000B6A60()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SRCarPlaySiriUnavailableViewController();
  return [super dealloc];
}

uint64_t sub_1000B6A98()
{
  return type metadata accessor for SRCarPlaySiriUnavailableViewController();
}

uint64_t getEnumTagSinglePayload for SiriUIFeaturesFlags(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for SiriUIFeaturesFlags(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1000B6B90);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SiriUIFeaturesFlags()
{
  return &type metadata for SiriUIFeaturesFlags;
}

unint64_t sub_1000B6BCC()
{
  unint64_t result = qword_100171D30;
  if (!qword_100171D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100171D30);
  }
  return result;
}

Swift::Int sub_1000B6C20()
{
  return Hasher._finalize()();
}

void sub_1000B6C64()
{
}

Swift::Int sub_1000B6C8C()
{
  return Hasher._finalize()();
}

const char *sub_1000B6CCC()
{
  return "ResponseFramework";
}

const char *sub_1000B6CE0()
{
  return "SMART";
}

uint64_t sub_1000B6CF4()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_1000B6D28(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  int v3 = "+[SRErrorUtility userStringForError:reflectionDialogWasPlayed:]";
  __int16 v4 = 2114;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #errorHandling received unhandled error: %{public}@", (uint8_t *)&v2, 0x16u);
}

void sub_1000B6DB4()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Failed to stop user attention controller: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B6E28()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Failed to restart attention awareness client: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B6E9C()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Failed to stop attention awareness client: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B6F10(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[SRSystemAssistantExperienceViewController siriViewControllerEffectiveBundleForCoreLocation:]";
  __int16 v4 = 2114;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #compact Returning nil for controller %{public}@", (uint8_t *)&v2, 0x16u);
}

void sub_1000B6F9C(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRSystemAssistantExperienceViewController didChangeText:]_block_invoke";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s #suggestions: Old and new suggestions are both empty - skipping view update", (uint8_t *)&v1, 0xCu);
}

void sub_1000B7020(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRSystemAssistantExperienceViewController didChangeText:]_block_invoke_2";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s #suggestions: New suggestions are same as old ones - skipping view update", (uint8_t *)&v1, 0xCu);
}

void sub_1000B70A4(char a1, char a2, os_log_t log)
{
  int v3 = 136315650;
  __int16 v4 = "-[SRSystemAssistantExperienceViewController dismissSiriResults]";
  __int16 v5 = 1024;
  int v6 = a1 & 1;
  __int16 v7 = 1024;
  int v8 = a2 & 1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s dismissSiriResults was called when not in speech or text modality, or  while not presenting VisualIntelligenceCamera. isPresentingVisualIntelligenceCamera: %d, inputTypeTamale: %d", (uint8_t *)&v3, 0x18u);
}

void sub_1000B7144(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRSystemAssistantExperienceViewController completedOnboardingFlowWithEnablementResult:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s #generativeAssistantOnboarding: Did not call onboarding completion", (uint8_t *)&v1, 0xCu);
}

void sub_1000B71C8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B7240(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B72B8(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B7330(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B73A8(uint64_t a1, void *a2, uint64_t a3)
{
  __int16 v4 = (id *)(a1 + 32);
  __int16 v5 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  __int16 v7 = [WeakRetained userAttentionController];
  int v8 = 136315650;
  os_log_type_t v9 = "-[SRCompactAutoDismissController _startUserAttentionControllerIfNeededForTypes:]_block_invoke";
  __int16 v10 = 2114;
  Swift::String v11 = v7;
  __int16 v12 = 2114;
  uint64_t v13 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s #autodismiss Failed to start user attention controller: %{public}@, error: %{public}@", (uint8_t *)&v8, 0x20u);
}

void sub_1000B7484(uint64_t *a1, uint64_t a2, os_log_t log)
{
  uint64_t v3 = *a1;
  int v4 = 136315650;
  __int16 v5 = "-[SRCompactAutoDismissController _stopUserAttentionControllerIfNeeded]";
  __int16 v6 = 2114;
  uint64_t v7 = v3;
  __int16 v8 = 2114;
  uint64_t v9 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s #autodismiss Failed to stop user attention controller: %{public}@, error: %{public}@", (uint8_t *)&v4, 0x20u);
}

void sub_1000B7520(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRCompactAutoDismissController _handleUserTouchInteractionTimeout]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s #autodismiss Reseting UserInteractedWithTouchScreen to NO so that auto-dismissal may resume", (uint8_t *)&v1, 0xCu);
}

void sub_1000B75A4(os_log_t log)
{
  int v1 = 136315394;
  int v2 = "+[SRAssetsUtilities setupBackgroundAssetCheck]";
  __int16 v3 = 2112;
  CFStringRef v4 = @"com.apple.siri.CheckAssetStatus";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Failed to register background task with identifier %@", (uint8_t *)&v1, 0x16u);
}

void sub_1000B763C(void *a1, void *a2)
{
  __int16 v3 = a1;
  CFStringRef v4 = [a2 localizedDescription];
  int v5 = 136315394;
  __int16 v6 = "+[SRAssetsUtilities _scheduleAssetCheckWithEarliestBeginDate:]";
  __int16 v7 = 2112;
  __int16 v8 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s Failed to submit background task request: %@", (uint8_t *)&v5, 0x16u);
}

void sub_1000B76F8(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRBarSlideNavigationTransitionController configureWithNavigationController:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Navigation controller should be SiriUINavigationController", (uint8_t *)&v1, 0xCu);
}

void sub_1000B777C(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  __int16 v3 = "-[SRGuideViewController collectionView:numberOfItemsInSection:]";
  __int16 v4 = 2050;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s More than three sections in Guide is invalid: %{public}ld", (uint8_t *)&v2, 0x16u);
}

void sub_1000B7808(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  __int16 v3 = "-[SRCompactViewController siriViewControllerEffectiveBundleForCoreLocation:]";
  __int16 v4 = 2114;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #compact Returning nil for controller %{public}@", (uint8_t *)&v2, 0x16u);
}

void sub_1000B7894(void *a1, void *a2)
{
  id v3 = a1;
  [a2 requestSource];
  sub_1000283B4();
  sub_100028394((void *)&_mh_execute_header, v4, v5, "%s #tipKitSignalEmitter Unsupported requestSource: %ld", v6, v7, v8, v9, 2u);
}

void sub_1000B7928(void *a1, void *a2)
{
  id v3 = a1;
  [a2 requestSource];
  sub_1000283B4();
  sub_100028394((void *)&_mh_execute_header, v4, v5, "%s #tipKitSignalEmitter Unsupported bluetooth car requestSource: %ld", v6, v7, v8, v9, 2u);
}

void sub_1000B79BC(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRSystemAssistantExperiencePresentation configureForRequestOptions:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s #networkAvailability Siri Not available. Dismissing Siri and posting notification", (uint8_t *)&v1, 0xCu);
}

void sub_1000B7A40(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  id v3 = "-[SRSystemAssistantExperiencePresentation siriWillProcessAppLaunchWithBundleIdentifier:]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "%s Siri will process app launch for %@", (uint8_t *)&v2, 0x16u);
}

void sub_1000B7ACC(void *a1)
{
  int v1 = a1;
  int v2 = SiriSharedUIGestureEventDescription();
  id v3 = SiriSharedUIGestureEventRegionDescription();
  int v4 = 136315650;
  uint64_t v5 = "-[SRSystemAssistantExperiencePresentation didDetectGestureEvent:inRegion:]";
  __int16 v6 = 2112;
  uint64_t v7 = v2;
  __int16 v8 = 2112;
  uint64_t v9 = v3;
  _os_log_debug_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEBUG, "%s #dismissal Detected gesture event %@ in region %@", (uint8_t *)&v4, 0x20u);
}

void sub_1000B7BB0(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRUserUtteranceViewController speechAlternativeHighlightListWithScore:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s No utterance text existed for base utterance!!", (uint8_t *)&v1, 0xCu);
}

void sub_1000B7C34(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRSystemAssistantExperienceNavigationTransitionController configureWithNavigationController:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Navigation controller should be SiriUINavigationController", (uint8_t *)&v1, 0xCu);
}

void sub_1000B7CB8(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  id v3 = "-[SRSystemAssistantExperienceNavigationTransitionController animateTransition:]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_fault_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_FAULT, "%s Navigation transition %@ is animating without an associated operation!", (uint8_t *)&v2, 0x16u);
}

void sub_1000B7D44(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  id v3 = "-[SRModeProvider internalModeOverride]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #modes Invalid mode override value: %@", (uint8_t *)&v2, 0x16u);
}

void sub_1000B7DD0()
{
  v1[0] = 136315394;
  sub_1000071E0();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "%s Unexpectedly passed a notification that is not a known keyboard notification. Returning _SRKeyboardNotificationOrderBefore. { notification: %@ }", (uint8_t *)v1, 0x16u);
}

void sub_1000B7E50(void *a1, void *a2)
{
  id v3 = a1;
  __int16 v4 = [a2 name];
  sub_1000071E0();
  sub_10003B820((void *)&_mh_execute_header, v5, v6, "%s Notification not supported; returning nil { notificationName: %@ }",
    v7,
    v8,
    v9,
    v10,
    2u);
}

void sub_1000B7EF0(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRCompactKeyboardAnimation initWithKeyboardNotification:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s Returning nil because the duration in the notification is 0, so there is no animation occurring", (uint8_t *)&v1, 0xCu);
}

void sub_1000B7F74(void *a1, void *a2)
{
  id v3 = a1;
  __int16 v4 = [a2 name];
  sub_1000071E0();
  sub_10003B820((void *)&_mh_execute_header, v5, v6, "%s Notification not supported; returning nil { notificationName: %@ }",
    v7,
    v8,
    v9,
    v10,
    2u);
}

void sub_1000B8014(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 136315650;
  __int16 v4 = "-[SRFullScreenEffects _fullscreenEffectMap]_block_invoke";
  __int16 v5 = 2112;
  uint64_t v6 = a1;
  __int16 v7 = 2112;
  uint64_t v8 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Couldn't enumerate %@: %@", (uint8_t *)&v3, 0x20u);
}

void sub_1000B80AC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B8124()
{
  sub_10005D774(__stack_chk_guard);
  int v3 = 136315650;
  __int16 v4 = "-[SRSiriViewController _connectionWasInterrupted]";
  __int16 v5 = 1024;
  int v6 = v0;
  __int16 v7 = 2112;
  uint64_t v8 = v1;
  _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "%s #xpcSiriApp Connection from SpringBoard/CarPlay was interrupted pid=%d _connection=%@", (uint8_t *)&v3, 0x1Cu);
}

void sub_1000B81C0(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3 = 136315650;
  __int16 v4 = "-[SRSiriViewController _removePreviousConversationFromStore]_block_invoke";
  __int16 v5 = 2114;
  uint64_t v6 = AFUIPreviousConversationIdentifier;
  __int16 v7 = 2114;
  uint64_t v8 = a1;
  sub_10005D654((void *)&_mh_execute_header, a2, a3, "%s Unable to remove conversation (identifier=%{public}@) from store: %{public}@", (uint8_t *)&v3);
}

void sub_1000B8258()
{
  int v2 = 136315650;
  sub_10005D6D4();
  sub_10005D634((void *)&_mh_execute_header, v0, v1, "%s #conversation Unable to save conversation to store { conversation: %@, error: %{public}@ }", v2);
}

void sub_1000B82D0(uint64_t *a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  int v4 = 136315650;
  __int16 v5 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke_2";
  __int16 v6 = 2114;
  uint64_t v7 = AFUIPreviousConversationIdentifier;
  __int16 v8 = 2114;
  uint64_t v9 = v3;
  sub_10005D654((void *)&_mh_execute_header, a2, a3, "%s #conversation Unable to load previous conversation from store { identifier: %{public}@, error: %{public}@ }", (uint8_t *)&v4);
}

void sub_1000B836C(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  int v5 = 136315650;
  __int16 v6 = "-[SRSiriViewController _restorePreviousConversation]_block_invoke";
  __int16 v7 = 2112;
  uint64_t v8 = v3;
  __int16 v9 = 2114;
  uint64_t v10 = v4;
  sub_10005D654((void *)&_mh_execute_header, a2, a3, "%s #conversation Unable to remove conversation with mismatched language from store { conversation: %@, error: %{public}@", (uint8_t *)&v5);
}

void sub_1000B8400(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B8478(uint64_t a1, void *a2, uint64_t a3)
{
  double v5 = *(double *)(a1 + 144);
  id v6 = a2;
  __int16 v7 = [(id)sub_10005D714() numberWithDouble:v5];
  uint64_t v8 = +[NSNumber numberWithDouble:*(double *)(a3 + 40)];
  sub_10005D688();
  sub_10005D720((void *)&_mh_execute_header, v9, v10, "%s Type2Siri: keyboard height %@=>%@", v11, v12, v13, v14, 2u);
}

void sub_1000B8558(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B85D0()
{
  sub_10005D620();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Unable to request deactivation from host: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_1000B8644(void *a1, void *a2)
{
  id v4 = a1;
  sub_10005D714();
  SiriSharedUIGestureEventDescription();
  objc_claimAutoreleasedReturnValue();
  sub_10005D708();
  uint64_t v5 = SiriSharedUIGestureEventRegionDescription();
  sub_10005D688();
  sub_10005D720((void *)&_mh_execute_header, v6, v7, "%s #dismissal SpringBoard has notified us of gesture event %@, in region %@", v8, v9, v10, v11, 2u);
}

void sub_1000B86FC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B8774(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B87F8()
{
  sub_10005D760();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s #tts 5 FAIL Unable to parse speakable text: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B8870()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s #tts 5 FAIL Unable to activate audio session: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B88E4()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s #tts 11 B No preparation block for preparation identifier %@", v2, v3, v4, v5, 2u);
}

void sub_1000B8958(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B89D0(void *a1)
{
  id v2 = a1;
  uint64_t v3 = [(id)sub_10005D708() turnIdentifier];
  sub_1000071E0();
  sub_100028394((void *)&_mh_execute_header, v4, v5, "%s #instrumentation unable to link previous turn with new turn: %@ as previousTurnIdentifier is nil.", v6, v7, v8, v9, 2u);
}

void sub_1000B8A6C(void *a1, NSObject *a2)
{
  id v4 = [a1 aceId];
  id v5 = [a1 refId];
  int v7 = 136315650;
  uint64_t v8 = "-[SRSiriViewController siriSessionDidReceiveAddViewsCommand:completion:]";
  __int16 v9 = 2112;
  id v10 = v4;
  __int16 v11 = 2112;
  id v12 = v5;
  sub_10005D654((void *)&_mh_execute_header, a2, v6, "%s Received an empty SAUIAddViews aceID:%@ refID:%@. Marking command as SACommandSucceeded", (uint8_t *)&v7);
}

void sub_1000B8B4C()
{
  int v2 = 136315650;
  sub_10005D6A4();
  sub_10005D634((void *)&_mh_execute_header, v0, v1, "%s BioLockout failed for:\"%@\" error:%@", v2);
}

void sub_1000B8BC0(void *a1)
{
  id v2 = a1;
  sub_10005D708();
  uint64_t v3 = (objc_class *)objc_opt_class();
  id v4 = NSStringFromClass(v3);
  sub_1000071E0();
  sub_100028394((void *)&_mh_execute_header, v5, v6, "%s #modes Unhandled command: %@", v7, v8, v9, v10, 2u);
}

void sub_1000B8C60(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)a2 = 136315394;
  *(void *)(a2 + 4) = "-[SRSiriViewController _configuredSpeakableUtteranceParserForCommand:context:speakableText:subCo"
                        "mpletion:speakPreparation:speakCompletion:]";
  *(_WORD *)(a2 + 12) = 2112;
  *(void *)(a2 + 14) = a1;
  id v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "%s context is not of expected type AceObject, but is %@", (uint8_t *)a2, 0x16u);
}

void sub_1000B8CE0(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = (id *)(a1 + 40);
  id v5 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  v9[0] = 136315906;
  sub_10005D6F4();
  __int16 v10 = 2112;
  uint64_t v11 = v7;
  __int16 v12 = v8;
  uint64_t v13 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "%s %{public}@ unable to obtain bulletin with identifier %@ from the host: %{public}@", (uint8_t *)v9, 0x2Au);
}

void sub_1000B8DB4()
{
  sub_10005D760();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s #tts Unable to parse speakable text: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B8E2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (id *)sub_10005D714();
  id WeakRetained = objc_loadWeakRetained(v4);
  v8[0] = 136315650;
  sub_10005D6F4();
  __int16 v9 = 2112;
  uint64_t v10 = v6;
  sub_10005D654((void *)&_mh_execute_header, v2, v7, "%s %{public}@ found bulletin with identifier %@ in preparationCompletion block", (uint8_t *)v8);
}

void sub_1000B8EE8(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = SRUIFSpeechSynthesisResultGetName();
  sub_10005D780();
  sub_10005D740((void *)&_mh_execute_header, v4, v5, "%s #tts SRUIFSpeechSynthesisCompletion error strongSelf=nil text=\"%@\" result=%@ command=%@", v6, v7, v8, v9, 2u);
}

void sub_1000B8FAC(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = SRUIFSpeechSynthesisResultGetName();
  sub_10005D780();
  sub_10005D740((void *)&_mh_execute_header, v4, v5, "%s #tts SRUIFSpeechSynthesisCompletion error strongSelf=nil text=\"%{sensitive}@\" result=%@ command=%@", v6, v7, v8, v9, 3u);
}

void sub_1000B9074(uint64_t a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)id v3 = 136315650;
  *(void *)&v3[4] = "-[SRSiriViewController siriSessionDidReceivePlayNotificationSound:completion:]_block_invoke";
  *(_WORD *)&v3[12] = 2048;
  *(void *)&v3[14] = a2;
  *(_WORD *)&v3[22] = 2112;
  sub_10005D634((void *)&_mh_execute_header, a2, a3, "%s Failed notification sound playback with PlaybackCompletionType: %zd, error: %@", *(void *)v3, *(void *)&v3[8], *(void *)&v3[16], a1);
}

void sub_1000B9100()
{
  sub_10005D620();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Unable to request deactivation from host: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_1000B9174(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B91EC()
{
  sub_10005D774(__stack_chk_guard);
  int v2 = 136315650;
  sub_10005D6C0();
  sub_10005D634((void *)&_mh_execute_header, v0, v1, "%s Unable to handle PreSynthesisTTS command: %@, error: %@", v2);
}

void sub_1000B9268()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Error decoding route UID: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B92DC()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Error creating routeUID string from data: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B9350()
{
  sub_10005D620();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Unable to dismiss siri in tamale from host: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_1000B93C4()
{
  sub_10005D774(__stack_chk_guard);
  sub_10005D6C0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Item corresponding to identifier=%@ removed from active conversation already. Do not call siriDidFinishActionsForConversationItemWithIdentifier:inConversation: to avoid a rare crash!", v2, v3, v4, v5, 2u);
}

void sub_1000B9438()
{
  sub_10005D774(__stack_chk_guard);
  sub_10005D6C0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Unable to record metrics for class: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B94AC()
{
  sub_10005D620();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Unable to record tip view activity: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_1000B9520()
{
  sub_10005D620();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Unable to record guide view activity: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_1000B9594(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B960C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B9684()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s #cmas #carPlay unexpected error received: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B96F8(void *a1, void *a2)
{
  id v4 = a1;
  sub_10005D714();
  AFUIBulletinReadoutResultGetName();
  objc_claimAutoreleasedReturnValue();
  sub_10005D708();
  uint64_t v5 = AFUIBulletinReadoutResultGetName();
  v7[0] = 136315650;
  sub_10005D688();
  sub_10005D654((void *)&_mh_execute_header, v2, v6, "%s unhandled combination of titleResult: %@ and messageResult: %@", (uint8_t *)v7);
}

void sub_1000B97B8()
{
  sub_10005D620();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Unable to ask host for request options: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_1000B982C()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Punchout received with no bundleId or punchOurUri: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B98A0()
{
  v1[0] = 136315394;
  sub_10005D6C0();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "%s Presentation indicates that we %@ punch out in place", (uint8_t *)v1, 0x16u);
}

void sub_1000B9938(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000B99B0()
{
  int v2 = 136315650;
  sub_10005D6D4();
  sub_10005D634((void *)&_mh_execute_header, v0, v1, "%s Unable to perform punch out %@: %{public}@", v2);
}

void sub_1000B9A28()
{
  sub_10005D620();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s #idleTimer Unable to update siriIdleAndQuiet status: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_1000B9A9C()
{
  sub_10005D620();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s #errorHandling siri ui didn't present %{public}@ to the user", v2, v3, v4, v5, 2u);
}

void sub_1000B9B10()
{
  sub_10005D620();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s #errorHandling received error: %{public}@", v2, v3, v4, v5, 2u);
}

void sub_1000B9B84()
{
  int v2 = 136315650;
  sub_10005D6A4();
  sub_10005D634((void *)&_mh_execute_header, v0, v1, "%s Error building PunchOut MetricsContext for ace id = %@, error = %@", v2);
}

uint64_t sub_1000B9BF8()
{
  uint64_t v0 = abort_report_np();
  return sub_1000B9C20(v0);
}

void sub_1000B9C20(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRWindowSceneDelegate scene:willConnectToSession:options:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Scene connecting without window", (uint8_t *)&v1, 0xCu);
}

void sub_1000B9CA4(void *a1)
{
  id v1 = a1;
  int v2 = objc_opt_class();
  id v3 = sub_1000606A4(v2);
  sub_100028394((void *)&_mh_execute_header, v4, v5, "%s expected stored bundle path to be a string, but it was a %{public}@", v6, v7, v8, v9, 2u);
}

void sub_1000B9D40(void *a1)
{
  id v1 = a1;
  int v2 = objc_opt_class();
  id v3 = sub_1000606A4(v2);
  sub_100028394((void *)&_mh_execute_header, v4, v5, "%s expected stored bundle identifier to be a string, but it was a %{public}@", v6, v7, v8, v9, 2u);
}

void sub_1000B9DDC(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1 _URL];
  sub_100060680();
  sub_10005D740((void *)&_mh_execute_header, v5, v6, "%s %{public}@ unable to read on-disk cache at %{public}@: %{public}@", v7, v8, v9, v10, 2u);
}

void sub_1000B9E88(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1 _URL];
  sub_100060680();
  sub_10005D740((void *)&_mh_execute_header, v5, v6, "%s %{public}@ unable to read property list from data at %{public}@: %{public}@", v7, v8, v9, v10, 2u);
}

void sub_1000B9F34()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Typed data not found on SAPersonAttribute when attempting to convert to INPerson - attempting to fall back to raw data\n    SAPersonAttribute: %@", v2, v3, v4, v5, 2u);
}

void sub_1000B9FA8()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Typed data not found on SAPersonAttribute when attempting to find phone data - attempting to fall back to raw data\n    SAPersonAttribute: %@", v2, v3, v4, v5, 2u);
}

void sub_1000BA01C()
{
  sub_1000071E0();
  sub_1000071F4((void *)&_mh_execute_header, v0, v1, "%s Typed data not found on SAPersonAttribute when attempting to find email data - attempting to fall back to raw data\n    SAPersonAttribute: %@", v2, v3, v4, v5, 2u);
}

void sub_1000BA090(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[SRCardStackNavigationTransitionContext completeTransition:]";
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "%s Transition is already completed; returning",
    (uint8_t *)&v1,
    0xCu);
}

void sub_1000BA114()
{
  v1[0] = 136315394;
  sub_1000071E0();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "%s Navigation transition %@ is animating without an associated operation!", (uint8_t *)v1, 0x16u);
}

void sub_1000BA194()
{
  v1[0] = 136315394;
  sub_1000071E0();
  _os_log_fault_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_FAULT, "%s Navigation transition %@ is animating without an associated operation!", (uint8_t *)v1, 0x16u);
}

void sub_1000BA214()
{
  v1[0] = 136315394;
  sub_1000071E0();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "%s #presynthesize setPreSynthesizeTTSCommand:%@", (uint8_t *)v1, 0x16u);
}

void sub_1000BA294(uint64_t *a1, NSObject *a2)
{
  uint64_t v2 = *a1;
  int v3 = 136315394;
  uint64_t v4 = "-[SRPreSynthesisTask replyAceCommand]";
  __int16 v5 = 2112;
  uint64_t v6 = v2;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #presynthesize PreSynthesizeTTS command (%@) failed", (uint8_t *)&v3, 0x16u);
}

void sub_1000BA324(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000BA39C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000BA414(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000BA48C(uint8_t *buf, void *a2, os_log_t log)
{
  *(_DWORD *)buf = 136315138;
  *a2 = "-[SRPreSynthesisTask handlePreSynthesisCommandWithError:]";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s #presynthesize Presynthesizing failed: No speakable text", buf, 0xCu);
}

void sub_1000BA4DC(os_log_t log)
{
  int v1 = 136315138;
  uint64_t v2 = "-[SRPreSynthesisTask handlePreSynthesisCommandWithError:]";
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "%s #presynthesize handlePreSynthesisCommandWithError", (uint8_t *)&v1, 0xCu);
}

void sub_1000BA560()
{
  v1[0] = 136315394;
  sub_1000071E0();
  _os_log_debug_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_DEBUG, "%s #presynthesize didFinishSynthesisRequest:withInstrumentMetrics:error:%@", (uint8_t *)v1, 0x16u);
}

void sub_1000BA5E0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1000BA658(uint64_t a1, uint64_t *a2, os_log_t log)
{
  uint64_t v3 = *a2;
  int v4 = 136315650;
  __int16 v5 = "-[SRPreSynthesisTask didFinishSynthesisRequest:withInstrumentMetrics:error:]_block_invoke";
  __int16 v6 = 2112;
  uint64_t v7 = a1;
  __int16 v8 = 2112;
  uint64_t v9 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s #presynthesize Unable to determine dialog string duration for %@, error: %@", (uint8_t *)&v4, 0x20u);
}

void sub_1000BA6F4(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a2;
  int v4 = [v2 dictionary];
  int v5 = 136315394;
  __int16 v6 = "-[SRPlayContentViewController initWithPlayContent:]";
  __int16 v7 = 2112;
  __int16 v8 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s No player from SAVCSPlayContent\n    Play content command: %@", (uint8_t *)&v5, 0x16u);
}

void sub_1000BA7B0(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[SiriQuickTypeGestureSource configureConnection]_block_invoke";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s #activation BSServiceConnection Interrupted, re-activating %@", (uint8_t *)&v2, 0x16u);
}

void sub_1000BA83C(uint64_t a1, NSObject *a2)
{
  int v2 = 136315394;
  uint64_t v3 = "-[AceObject(MapsSession) _afui_updateMapsAnalytics]";
  __int16 v4 = 2112;
  uint64_t v5 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "%s Missing values for extSessionGuid or extSessionGuidCreatedTimestamp from %@", (uint8_t *)&v2, 0x16u);
}

void sub_1000BA8C8(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRViewController setUpViews]_block_invoke";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s Too many uncleaned up SRSiriViewControllers. Resetting counter.", (uint8_t *)&v1, 0xCu);
}

void sub_1000BA94C(void *a1, void *a2)
{
  uint64_t v3 = a1;
  __int16 v4 = [a2 aceId];
  v5[0] = 136315394;
  sub_1000071E0();
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "%s #modes Invalid AddViews (aceId = %@). Both AssistantUtteranceView and Dialog on the same AddViews is unsupported.", (uint8_t *)v5, 0x16u);
}

void sub_1000BA9FC()
{
  v1[0] = 136315394;
  sub_1000071E0();
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s #modes Failed to load configuration file: %@", (uint8_t *)v1, 0x16u);
}

void sub_1000BAA7C(os_log_t log)
{
  int v1 = 136315138;
  int v2 = "-[SRAppDelegate _updateDeferral]_block_invoke";
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%s window lacked contextID, sending back 0", (uint8_t *)&v1, 0xCu);
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

uint64_t static CharacterSet.whitespacesAndNewlines.getter()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t FloatingPointFormatStyle.init(locale:)()
{
  return FloatingPointFormatStyle.init(locale:)();
}

uint64_t FloatingPointFormatStyle.precision(_:)()
{
  return FloatingPointFormatStyle.precision(_:)();
}

uint64_t static NumberFormatStyleConfiguration.Precision.fractionLength(_:)()
{
  return static NumberFormatStyleConfiguration.Precision.fractionLength(_:)();
}

uint64_t type metadata accessor for NumberFormatStyleConfiguration.Precision()
{
  return type metadata accessor for NumberFormatStyleConfiguration.Precision();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.scheme.getter()
{
  return URL.scheme.getter();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t static Locale.autoupdatingCurrent.getter()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t type metadata accessor for ButtonRole()
{
  return type metadata accessor for ButtonRole();
}

uint64_t type metadata accessor for _ProtoIdiom()
{
  return type metadata accessor for _ProtoIdiom();
}

uint64_t BinaryButton.init(primaryButton:secondaryButton:componentName:linkIdentifier:)()
{
  return BinaryButton.init(primaryButton:secondaryButton:componentName:linkIdentifier:)();
}

uint64_t type metadata accessor for BinaryButton()
{
  return type metadata accessor for BinaryButton();
}

uint64_t type metadata accessor for _ProtoButton.FormAction()
{
  return type metadata accessor for _ProtoButton.FormAction();
}

uint64_t type metadata accessor for ActionElement()
{
  return type metadata accessor for ActionElement();
}

uint64_t ActionElement.init(_:text:idioms:)()
{
  return ActionElement.init(_:text:idioms:)();
}

uint64_t type metadata accessor for ActionProperty()
{
  return type metadata accessor for ActionProperty();
}

uint64_t ActionProperty.init(_:)()
{
  return ActionProperty.init(_:)();
}

uint64_t ComponentGroup.components.getter()
{
  return ComponentGroup.components.getter();
}

uint64_t type metadata accessor for ComponentGroup()
{
  return type metadata accessor for ComponentGroup();
}

uint64_t type metadata accessor for SimpleItemRich()
{
  return type metadata accessor for SimpleItemRich();
}

uint64_t _ProtoResponse.Section.componentList.getter()
{
  return _ProtoResponse.Section.componentList.getter();
}

uint64_t type metadata accessor for _ProtoResponse.Section()
{
  return type metadata accessor for _ProtoResponse.Section();
}

uint64_t type metadata accessor for _ProtoResponse.Component()
{
  return type metadata accessor for _ProtoResponse.Component();
}

uint64_t ProtobufBuilder.serializedData()()
{
  return ProtobufBuilder.serializedData()();
}

uint64_t ProtobufBuilder.init(serializedData:)()
{
  return ProtobufBuilder.init(serializedData:)();
}

uint64_t SimpleItemStandard.init(text1:text2:text3:text4:text5:text6:action:componentName:linkIdentifier:)()
{
  return SimpleItemStandard.init(text1:text2:text3:text4:text5:text6:action:componentName:linkIdentifier:)();
}

uint64_t type metadata accessor for SimpleItemStandard()
{
  return type metadata accessor for SimpleItemStandard();
}

uint64_t SystemTextClarificationTitle.init(text1:action:)()
{
  return SystemTextClarificationTitle.init(text1:action:)();
}

uint64_t type metadata accessor for SystemTextClarificationTitle()
{
  return type metadata accessor for SystemTextClarificationTitle();
}

uint64_t type metadata accessor for Button.LabelStyle()
{
  return type metadata accessor for Button.LabelStyle();
}

uint64_t Button.init(action:label:thumbnail:formAction:labelStyle:buttonRole:componentName:linkIdentifier:)()
{
  return Button.init(action:label:thumbnail:formAction:labelStyle:buttonRole:componentName:linkIdentifier:)();
}

uint64_t type metadata accessor for Button()
{
  return type metadata accessor for Button();
}

uint64_t type metadata accessor for Command()
{
  return type metadata accessor for Command();
}

uint64_t Section.redactedProto.getter()
{
  return Section.redactedProto.getter();
}

uint64_t Section.proto.getter()
{
  return Section.proto.getter();
}

uint64_t type metadata accessor for Section()
{
  return type metadata accessor for Section();
}

uint64_t Response.group.getter()
{
  return Response.group.getter();
}

uint64_t Response.sections.getter()
{
  return Response.sections.getter();
}

uint64_t type metadata accessor for Response()
{
  return type metadata accessor for Response();
}

uint64_t Response.init(_:backgrounds:ornaments:hideRedactedElements:)()
{
  return Response.init(_:backgrounds:ornaments:hideRedactedElements:)();
}

{
  return Response.init(_:backgrounds:ornaments:hideRedactedElements:)();
}

uint64_t Component.redactedComponent()()
{
  return Component.redactedComponent()();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

uint64_t dispatch thunk of SiriSharedUIDropletView.dropletLayer()()
{
  return dispatch thunk of SiriSharedUIDropletView.dropletLayer()();
}

uint64_t type metadata accessor for SiriSharedUIDropletView()
{
  return type metadata accessor for SiriSharedUIDropletView();
}

uint64_t static SiriSharedUIDropletLayer.dropletAlphaCurve.getter()
{
  return static SiriSharedUIDropletLayer.dropletAlphaCurve.getter();
}

uint64_t dispatch thunk of SiriSharedUIDropletLayer.setupDropletEffect()()
{
  return dispatch thunk of SiriSharedUIDropletLayer.setupDropletEffect()();
}

uint64_t dispatch thunk of SiriSharedUIDropletLayer.prepareAlphaCurveForMitosis()()
{
  return dispatch thunk of SiriSharedUIDropletLayer.prepareAlphaCurveForMitosis()();
}

uint64_t static SiriSharedUIDropletLayer.dropletGaussianInitialBlurRadius.getter()
{
  return static SiriSharedUIDropletLayer.dropletGaussianInitialBlurRadius.getter();
}

uint64_t static SiriSharedUIDropletLayer.dropletGaussianMitosisBlurRadius.getter()
{
  return static SiriSharedUIDropletLayer.dropletGaussianMitosisBlurRadius.getter();
}

uint64_t type metadata accessor for SiriSharedUIDropletLayer()
{
  return type metadata accessor for SiriSharedUIDropletLayer();
}

uint64_t type metadata accessor for SnippetCommandError()
{
  return type metadata accessor for SnippetCommandError();
}

uint64_t dispatch thunk of SnippetCommandExecutor.execute(sfCommand:)()
{
  return dispatch thunk of SnippetCommandExecutor.execute(sfCommand:)();
}

uint64_t SnippetCommandExecutor.init()()
{
  return SnippetCommandExecutor.init()();
}

uint64_t type metadata accessor for SnippetCommandExecutor()
{
  return type metadata accessor for SnippetCommandExecutor();
}

uint64_t type metadata accessor for ExecutionResult()
{
  return type metadata accessor for ExecutionResult();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason()
{
  return type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo.RestrictedReason();
}

uint64_t GenerativeModelsAvailability.Availability.RestrictedInfo.reasons.getter()
{
  return GenerativeModelsAvailability.Availability.RestrictedInfo.reasons.getter();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo()
{
  return type metadata accessor for GenerativeModelsAvailability.Availability.RestrictedInfo();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason()
{
  return type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo.UnavailableReason();
}

uint64_t GenerativeModelsAvailability.Availability.UnavailableInfo.reasons.getter()
{
  return GenerativeModelsAvailability.Availability.UnavailableInfo.reasons.getter();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo()
{
  return type metadata accessor for GenerativeModelsAvailability.Availability.UnavailableInfo();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Availability()
{
  return type metadata accessor for GenerativeModelsAvailability.Availability();
}

uint64_t GenerativeModelsAvailability.Parameters.init(useCaseIdentifiers:)()
{
  return GenerativeModelsAvailability.Parameters.init(useCaseIdentifiers:)();
}

uint64_t type metadata accessor for GenerativeModelsAvailability.Parameters()
{
  return type metadata accessor for GenerativeModelsAvailability.Parameters();
}

uint64_t GenerativeModelsAvailability.availability.getter()
{
  return GenerativeModelsAvailability.availability.getter();
}

uint64_t static GenerativeModelsAvailability.current(parameters:)()
{
  return static GenerativeModelsAvailability.current(parameters:)();
}

uint64_t type metadata accessor for GenerativeModelsAvailability()
{
  return type metadata accessor for GenerativeModelsAvailability();
}

uint64_t dispatch thunk of ProminentPresentationAssertion.snaSessionIdentifier.getter()
{
  return dispatch thunk of ProminentPresentationAssertion.snaSessionIdentifier.getter();
}

uint64_t dispatch thunk of ProminentPresentationAssertion.invalidate()()
{
  return dispatch thunk of ProminentPresentationAssertion.invalidate()();
}

uint64_t ProminentPresentationAssertion.init(explanation:activityIdentifier:duration:invalidationHandler:)()
{
  return ProminentPresentationAssertion.init(explanation:activityIdentifier:duration:invalidationHandler:)();
}

uint64_t type metadata accessor for ProminentPresentationAssertion()
{
  return type metadata accessor for ProminentPresentationAssertion();
}

uint64_t PreGeneratedSiriHint.topHint.getter()
{
  return PreGeneratedSiriHint.topHint.getter();
}

uint64_t PreGeneratedSiriHint.exposureCallback.getter()
{
  return PreGeneratedSiriHint.exposureCallback.getter();
}

uint64_t type metadata accessor for PreGeneratedSiriHint()
{
  return type metadata accessor for PreGeneratedSiriHint();
}

uint64_t SiriSuggestionsFacade.__allocating_init()()
{
  return SiriSuggestionsFacade.__allocating_init()();
}

uint64_t type metadata accessor for SiriSuggestionsFacade()
{
  return type metadata accessor for SiriSuggestionsFacade();
}

uint64_t type metadata accessor for SiriHintsMode()
{
  return type metadata accessor for SiriHintsMode();
}

uint64_t SiriSuggestions.Suggestion.identifier.getter()
{
  return SiriSuggestions.Suggestion.identifier.getter();
}

uint64_t SiriSuggestions.Suggestion.presentation.getter()
{
  return SiriSuggestions.Suggestion.presentation.getter();
}

uint64_t type metadata accessor for SiriSuggestions.Suggestion()
{
  return type metadata accessor for SiriSuggestions.Suggestion();
}

uint64_t SiriSuggestions.SuggestionPresentation.spokenText.getter()
{
  return SiriSuggestions.SuggestionPresentation.spokenText.getter();
}

uint64_t type metadata accessor for SiriSuggestions.SuggestionPresentation()
{
  return type metadata accessor for SiriSuggestions.SuggestionPresentation();
}

uint64_t type metadata accessor for DeliveryVehicle()
{
  return type metadata accessor for DeliveryVehicle();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Logger.init(_:)()
{
  return Logger.init(_:)();
}

uint64_t dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter()
{
  return dispatch thunk of IntelligenceUI.PromptEntryView.backgroundView.getter();
}

uint64_t IntelligenceUI.PromptEntryView.textView.getter()
{
  return IntelligenceUI.PromptEntryView.textView.getter();
}

uint64_t dispatch thunk of IntelligenceUI.PromptEntryView.placeholder.setter()
{
  return dispatch thunk of IntelligenceUI.PromptEntryView.placeholder.setter();
}

uint64_t IntelligenceUI.PromptEntryView.leadingButton.getter()
{
  return IntelligenceUI.PromptEntryView.leadingButton.getter();
}

uint64_t IntelligenceUI.PromptEntryView.trailingButton.getter()
{
  return IntelligenceUI.PromptEntryView.trailingButton.getter();
}

uint64_t dispatch thunk of IntelligenceUI.PromptEntryView.visibleLineLimit.setter()
{
  return dispatch thunk of IntelligenceUI.PromptEntryView.visibleLineLimit.setter();
}

uint64_t dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonVisible.setter()
{
  return dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonVisible.setter();
}

uint64_t dispatch thunk of IntelligenceUI.PromptEntryView.isTrailingButtonVisible.setter()
{
  return dispatch thunk of IntelligenceUI.PromptEntryView.isTrailingButtonVisible.setter();
}

uint64_t type metadata accessor for IntelligenceUI.PromptEntryView.AmbiguityAppearanceConfiguration()
{
  return type metadata accessor for IntelligenceUI.PromptEntryView.AmbiguityAppearanceConfiguration();
}

uint64_t static IntelligenceUI.PromptEntryView.defaultLeadingButtonConfiguration.getter()
{
  return static IntelligenceUI.PromptEntryView.defaultLeadingButtonConfiguration.getter();
}

uint64_t dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonConfiguredAsToggle.setter()
{
  return dispatch thunk of IntelligenceUI.PromptEntryView.isLeadingButtonConfiguredAsToggle.setter();
}

uint64_t dispatch thunk of IntelligenceUI.PromptEntryView.trailingButtonActivatesDictationWhenEmpty.setter()
{
  return dispatch thunk of IntelligenceUI.PromptEntryView.trailingButtonActivatesDictationWhenEmpty.setter();
}

uint64_t IntelligenceUI.PromptEntryView.Delegate.promptEntryView(_:didTransitionToPonderingState:)()
{
  return IntelligenceUI.PromptEntryView.Delegate.promptEntryView(_:didTransitionToPonderingState:)();
}

uint64_t IntelligenceUI.PromptEntryView.Delegate.promptEntryView(_:insert:)()
{
  return IntelligenceUI.PromptEntryView.Delegate.promptEntryView(_:insert:)();
}

uint64_t IntelligenceUI.PromptEntryView.Delegate.promptEntryViewDidEndEditing(_:)()
{
  return IntelligenceUI.PromptEntryView.Delegate.promptEntryViewDidEndEditing(_:)();
}

uint64_t IntelligenceUI.PromptEntryView.Delegate.promptEntryViewSelectionDidChange(_:)()
{
  return IntelligenceUI.PromptEntryView.Delegate.promptEntryViewSelectionDidChange(_:)();
}

uint64_t dispatch thunk of IntelligenceUI.PromptEntryView.delegate.setter()
{
  return dispatch thunk of IntelligenceUI.PromptEntryView.delegate.setter();
}

uint64_t type metadata accessor for IntelligenceUI.PromptEntryView()
{
  return type metadata accessor for IntelligenceUI.PromptEntryView();
}

uint64_t dispatch thunk of UIPromptBackgroundView.updateFocus(state:)()
{
  return dispatch thunk of UIPromptBackgroundView.updateFocus(state:)();
}

uint64_t type metadata accessor for UIPromptBackgroundView.CornerRadius()
{
  return type metadata accessor for UIPromptBackgroundView.CornerRadius();
}

uint64_t static UIPromptBackgroundView.Configuration.intelligent.getter()
{
  return static UIPromptBackgroundView.Configuration.intelligent.getter();
}

uint64_t UIPromptBackgroundView.Configuration.cornerRadius(_:)()
{
  return UIPromptBackgroundView.Configuration.cornerRadius(_:)();
}

uint64_t UIPromptBackgroundView.Configuration.shadowOpacity(_:)()
{
  return UIPromptBackgroundView.Configuration.shadowOpacity(_:)();
}

uint64_t static UIPromptBackgroundView.Configuration.intelligentLatency.getter()
{
  return static UIPromptBackgroundView.Configuration.intelligentLatency.getter();
}

uint64_t static UIPromptBackgroundView.Configuration.intelligentWhenFocused.getter()
{
  return static UIPromptBackgroundView.Configuration.intelligentWhenFocused.getter();
}

uint64_t static UIPromptBackgroundView.Configuration.== infix(_:_:)()
{
  return static UIPromptBackgroundView.Configuration.== infix(_:_:)();
}

uint64_t static UIPromptBackgroundView.Configuration.default.getter()
{
  return static UIPromptBackgroundView.Configuration.default.getter();
}

uint64_t type metadata accessor for UIPromptBackgroundView.Configuration()
{
  return type metadata accessor for UIPromptBackgroundView.Configuration();
}

uint64_t UIPromptBackgroundView.init(configuration:)()
{
  return UIPromptBackgroundView.init(configuration:)();
}

uint64_t dispatch thunk of UIPromptBackgroundView.configuration.getter()
{
  return dispatch thunk of UIPromptBackgroundView.configuration.getter();
}

uint64_t dispatch thunk of UIPromptBackgroundView.configuration.setter()
{
  return dispatch thunk of UIPromptBackgroundView.configuration.setter();
}

uint64_t type metadata accessor for UIPromptBackgroundView()
{
  return type metadata accessor for UIPromptBackgroundView();
}

uint64_t type metadata accessor for UITraitUserInterfaceStyle()
{
  return type metadata accessor for UITraitUserInterfaceStyle();
}

uint64_t EdgeInsets.init(_all:)()
{
  return EdgeInsets.init(_all:)();
}

uint64_t static ColorScheme.== infix(_:_:)()
{
  return static ColorScheme.== infix(_:_:)();
}

uint64_t type metadata accessor for ColorScheme()
{
  return type metadata accessor for ColorScheme();
}

uint64_t type metadata accessor for Environment.Content()
{
  return type metadata accessor for Environment.Content();
}

uint64_t StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)()
{
  return StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
}

uint64_t _FrameLayout.init(width:height:alignment:)()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t GeometryProxy.size.getter()
{
  return GeometryProxy.size.getter();
}

uint64_t type metadata accessor for RoundedRectangle()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t EnvironmentValues.colorScheme.getter()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t EnvironmentValues.colorScheme.setter()
{
  return EnvironmentValues.colorScheme.setter();
}

uint64_t EnvironmentValues.foregroundColor.getter()
{
  return EnvironmentValues.foregroundColor.getter();
}

uint64_t EnvironmentValues.foregroundColor.setter()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t EnvironmentValues.multilineTextAlignment.getter()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t EnvironmentValues.multilineTextAlignment.setter()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t EnvironmentValues.font.getter()
{
  return EnvironmentValues.font.getter();
}

uint64_t EnvironmentValues.font.setter()
{
  return EnvironmentValues.font.setter();
}

uint64_t EnvironmentValues.isFocused.getter()
{
  return EnvironmentValues.isFocused.getter();
}

uint64_t EnvironmentValues.lineLimit.getter()
{
  return EnvironmentValues.lineLimit.getter();
}

uint64_t EnvironmentValues.lineLimit.setter()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t EnvironmentValues.init()()
{
  return EnvironmentValues.init()();
}

uint64_t type metadata accessor for EnvironmentValues()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t type metadata accessor for RoundedCornerStyle()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t static HorizontalAlignment.center.getter()
{
  return static HorizontalAlignment.center.getter();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t static HierarchicalShapeStyle.quaternary.getter()
{
  return static HierarchicalShapeStyle.quaternary.getter();
}

uint64_t type metadata accessor for ButtonStyleConfiguration.Label()
{
  return type metadata accessor for ButtonStyleConfiguration.Label();
}

uint64_t ButtonStyleConfiguration.label.getter()
{
  return ButtonStyleConfiguration.label.getter();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t static Edge.Set.top.getter()
{
  return static Edge.Set.top.getter();
}

uint64_t static Edge.Set.bottom.getter()
{
  return static Edge.Set.bottom.getter();
}

uint64_t static Font.largeTitle.getter()
{
  return static Font.largeTitle.getter();
}

uint64_t static Font.Weight.medium.getter()
{
  return static Font.Weight.medium.getter();
}

uint64_t static Font.Weight.regular.getter()
{
  return static Font.Weight.regular.getter();
}

uint64_t static Font.headline.getter()
{
  return static Font.headline.getter();
}

uint64_t Text.fontWeight(_:)()
{
  return Text.fontWeight(_:)();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.buttonStyle<A>(_:)()
{
  return View.buttonStyle<A>(_:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t Color.init(uiColor:)()
{
  return Color.init(uiColor:)();
}

uint64_t type metadata accessor for Color.RGBColorSpace()
{
  return type metadata accessor for Color.RGBColorSpace();
}

uint64_t Color.init(_:white:opacity:)()
{
  return Color.init(_:white:opacity:)();
}

uint64_t Button.init(action:label:)()
{
  return Button.init(action:label:)();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

uint64_t dispatch thunk of RFInteractionPerformed.invocation.setter()
{
  return dispatch thunk of RFInteractionPerformed.invocation.setter();
}

uint64_t type metadata accessor for RFInteractionPerformed()
{
  return type metadata accessor for RFInteractionPerformed();
}

uint64_t static VisualResponseProvider.isCardSectionSupported(cardSection:)()
{
  return static VisualResponseProvider.isCardSectionSupported(cardSection:)();
}

uint64_t VisualResponseProvider.view(for:bundleName:mode:)()
{
  return VisualResponseProvider.view(for:bundleName:mode:)();
}

uint64_t VisualResponseProvider.view(for:mode:overload:)()
{
  return VisualResponseProvider.view(for:mode:overload:)();
}

uint64_t type metadata accessor for VisualResponseProvider()
{
  return type metadata accessor for VisualResponseProvider();
}

uint64_t BinaryFloatingPoint.formatted<A>(_:)()
{
  return BinaryFloatingPoint.formatted<A>(_:)();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init(localized:table:bundle:locale:comment:)()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t AsyncThrowingStream.Continuation.yield(_:)()
{
  return AsyncThrowingStream.Continuation.yield(_:)();
}

uint64_t AsyncThrowingStream.Continuation.finish(throwing:)()
{
  return AsyncThrowingStream.Continuation.finish(throwing:)();
}

uint64_t AsyncThrowingStream.makeAsyncIterator()()
{
  return AsyncThrowingStream.makeAsyncIterator()();
}

uint64_t AsyncThrowingStream.init<>(_:bufferingPolicy:_:)()
{
  return AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)Double._bridgeToObjectiveC()();
}

uint64_t Double.description.getter()
{
  return Double.description.getter();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t static UITraitCollection.systemTraitsAffectingColorAppearance.getter()
{
  return static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t UIView.registerForTraitChanges<A>(_:handler:)()
{
  return UIView.registerForTraitChanges<A>(_:handler:)();
}

NSNumber __swiftcall NSNumber.init(floatLiteral:)(Swift::Double floatLiteral)
{
  return (NSNumber)NSNumber.init(floatLiteral:)(floatLiteral);
}

uint64_t static UIButton.Configuration.borderless()()
{
  return static UIButton.Configuration.borderless()();
}

uint64_t UIButton.Configuration.baseForegroundColor.setter()
{
  return UIButton.Configuration.baseForegroundColor.setter();
}

uint64_t UIButton.Configuration.image.setter()
{
  return UIButton.Configuration.image.setter();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t UIButton.configuration.setter()
{
  return UIButton.configuration.setter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.localizedCapitalized.getter()
{
  return StringProtocol.localizedCapitalized.getter();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:)()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t AFAnalyticsContextCreateWithCommand()
{
  return _AFAnalyticsContextCreateWithCommand();
}

uint64_t AFDeviceSupportsDisablingServerFallbackWhenMissingAsset()
{
  return _AFDeviceSupportsDisablingServerFallbackWhenMissingAsset();
}

uint64_t AFDeviceSupportsHybridUOD()
{
  return _AFDeviceSupportsHybridUOD();
}

uint64_t AFDeviceSupportsSiriUOD()
{
  return _AFDeviceSupportsSiriUOD();
}

uint64_t AFDeviceSupportsTTS()
{
  return _AFDeviceSupportsTTS();
}

uint64_t AFIsInternalInstall()
{
  return _AFIsInternalInstall();
}

uint64_t AFPresentationPluginsURL()
{
  return _AFPresentationPluginsURL();
}

uint64_t AFRecordCoreDuetEventWithStream()
{
  return _AFRecordCoreDuetEventWithStream();
}

uint64_t AFRecordRouteIsHearst()
{
  return _AFRecordRouteIsHearst();
}

uint64_t AFTurnIdentifierGetBytes()
{
  return _AFTurnIdentifierGetBytes();
}

uint64_t AFUIBulletinReadoutResultGetName()
{
  return _AFUIBulletinReadoutResultGetName();
}

uint64_t AFUICreateBugReportPresentingWithDelegate()
{
  return _AFUICreateBugReportPresentingWithDelegate();
}

uint64_t AFUIGetLanguageCode()
{
  return _AFUIGetLanguageCode();
}

uint64_t AFUIIsDeviceLiveActivitiesSupported()
{
  return _AFUIIsDeviceLiveActivitiesSupported();
}

uint64_t AFUIIsDeviceSystemApertureEnabled()
{
  return _AFUIIsDeviceSystemApertureEnabled();
}

uint64_t AFUISetLanguageCode()
{
  return _AFUISetLanguageCode();
}

uint64_t AXGuidedAccessGetAvailability()
{
  return _AXGuidedAccessGetAvailability();
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

void CFRelease(CFTypeRef cf)
{
}

void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return _CFRunLoopGetMain();
}

CFRunLoopObserverRef CFRunLoopObserverCreateWithHandler(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, void *block)
{
  return _CFRunLoopObserverCreateWithHandler(allocator, activities, repeats, order, block);
}

void CFRunLoopRemoveObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformTranslate(retstr, t, tx, ty);
}

void CGImageRelease(CGImageRef image)
{
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  CLLocationCoordinate2D v4 = _CLLocationCoordinate2DMake(latitude, longitude);
  double v3 = v4.longitude;
  double v2 = v4.latitude;
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

uint64_t LICreateIconForImage()
{
  return _LICreateIconForImage();
}

uint64_t MDModeGetName()
{
  return _MDModeGetName();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

uint64_t NSStringFromBOOL()
{
  return _NSStringFromBOOL();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSize(NSSize aSize)
{
  return _NSStringFromSize(aSize);
}

uint64_t SASCarPlayEnhancedVoiceTriggerModeToSISchemaEnhancedVoiceTriggerMode()
{
  return _SASCarPlayEnhancedVoiceTriggerModeToSISchemaEnhancedVoiceTriggerMode();
}

uint64_t SASCarPlayTransportTypeToSISchemaCarPlayConnection()
{
  return _SASCarPlayTransportTypeToSISchemaCarPlayConnection();
}

uint64_t SASDismissalReasonGetName()
{
  return _SASDismissalReasonGetName();
}

uint64_t SASRequestInputTypeGetDescription()
{
  return _SASRequestInputTypeGetDescription();
}

uint64_t SASRequestSourceGetName()
{
  return _SASRequestSourceGetName();
}

uint64_t SRUIFConstructLaunchContextForLaunchEnded()
{
  return _SRUIFConstructLaunchContextForLaunchEnded();
}

uint64_t SRUIFInstrumentQuickTypeFaceDetectionPollingEndSignpost()
{
  return _SRUIFInstrumentQuickTypeFaceDetectionPollingEndSignpost();
}

uint64_t SRUIFInstrumentQuickTypeFaceDetectionPollingStartSignpost()
{
  return _SRUIFInstrumentQuickTypeFaceDetectionPollingStartSignpost();
}

uint64_t SRUIFMaxIntervalForDisplayingPreviousConversation()
{
  return _SRUIFMaxIntervalForDisplayingPreviousConversation();
}

uint64_t SRUIFSiriSessionEventGetDescription()
{
  return _SRUIFSiriSessionEventGetDescription();
}

uint64_t SRUIFSiriSessionStateGetDescription()
{
  return _SRUIFSiriSessionStateGetDescription();
}

uint64_t SRUIFSpeechSynthesisResultGetName()
{
  return _SRUIFSpeechSynthesisResultGetName();
}

uint64_t SRUIFStringForUserAttentionGainEvent()
{
  return _SRUIFStringForUserAttentionGainEvent();
}

uint64_t SRUIFStringForUserAttentionLossEvent()
{
  return _SRUIFStringForUserAttentionLossEvent();
}

uint64_t SRUIFStringForUserAttentionType()
{
  return _SRUIFStringForUserAttentionType();
}

uint64_t SUICStringForAutoDismissalReason()
{
  return _SUICStringForAutoDismissalReason();
}

uint64_t SiriLanguageIsRTL()
{
  return _SiriLanguageIsRTL();
}

uint64_t SiriLanguageSemanticContentAttribute()
{
  return _SiriLanguageSemanticContentAttribute();
}

uint64_t SiriLanguageTextAlignmentLeft()
{
  return _SiriLanguageTextAlignmentLeft();
}

uint64_t SiriSharedUICompactSlideOverContentSpacingOnPad()
{
  return _SiriSharedUICompactSlideOverContentSpacingOnPad();
}

uint64_t SiriSharedUIDeviceIsMac()
{
  return _SiriSharedUIDeviceIsMac();
}

uint64_t SiriSharedUIDeviceIsPad()
{
  return _SiriSharedUIDeviceIsPad();
}

uint64_t SiriSharedUIDeviceIsPhone()
{
  return _SiriSharedUIDeviceIsPhone();
}

uint64_t SiriSharedUIGestureEventDescription()
{
  return _SiriSharedUIGestureEventDescription();
}

uint64_t SiriSharedUIGestureEventRegionDescription()
{
  return _SiriSharedUIGestureEventRegionDescription();
}

uint64_t SiriSharedUILanguageIsRTL()
{
  return _SiriSharedUILanguageIsRTL();
}

uint64_t SiriSharedUIReducedMotionEnabled()
{
  return _SiriSharedUIReducedMotionEnabled();
}

uint64_t SiriSharedUIViewModelInputTypeGetDescription()
{
  return _SiriSharedUIViewModelInputTypeGetDescription();
}

uint64_t SiriUIAceViewHasButtons()
{
  return _SiriUIAceViewHasButtons();
}

uint64_t SiriUIDeviceHasSideButton()
{
  return _SiriUIDeviceHasSideButton();
}

uint64_t SiriUIDeviceIsLargeFormatPad()
{
  return _SiriUIDeviceIsLargeFormatPad();
}

uint64_t SiriUIDeviceIsPad()
{
  return _SiriUIDeviceIsPad();
}

uint64_t SiriUIDeviceIsPhone()
{
  return _SiriUIDeviceIsPhone();
}

uint64_t SiriUIDeviceIsPod()
{
  return _SiriUIDeviceIsPod();
}

uint64_t SiriUIDeviceIsZoomed()
{
  return _SiriUIDeviceIsZoomed();
}

uint64_t SiriUIDisableAlternativesFeature()
{
  return _SiriUIDisableAlternativesFeature();
}

uint64_t SiriUIDismissalReasonStringFromReason()
{
  return _SiriUIDismissalReasonStringFromReason();
}

uint64_t SiriUIInvokeOnMainQueue()
{
  return _SiriUIInvokeOnMainQueue();
}

uint64_t SiriUIIsAllOrientationsSupported()
{
  return _SiriUIIsAllOrientationsSupported();
}

uint64_t SiriUIIsCompactHeight()
{
  return _SiriUIIsCompactHeight();
}

uint64_t SiriUIIsCompactWidth()
{
  return _SiriUIIsCompactWidth();
}

uint64_t SiriUIIsHTTForTextInputEnabled()
{
  return _SiriUIIsHTTForTextInputEnabled();
}

uint64_t SiriUIIsLargePhoneLayout()
{
  return _SiriUIIsLargePhoneLayout();
}

uint64_t SiriUIIsStreamingDictationEnabled()
{
  return _SiriUIIsStreamingDictationEnabled();
}

uint64_t SiriUIIsTextInputEnabled()
{
  return _SiriUIIsTextInputEnabled();
}

uint64_t SiriUIIsValidPoint()
{
  return _SiriUIIsValidPoint();
}

uint64_t SiriUIMapRectMakeWithZoomLevel()
{
  return _SiriUIMapRectMakeWithZoomLevel();
}

uint64_t SiriUIMapRegionFromMapRect()
{
  return _SiriUIMapRegionFromMapRect();
}

uint64_t SiriUIShowSpeechAlternativeScore()
{
  return _SiriUIShowSpeechAlternativeScore();
}

uint64_t SiriUISyncCachedPreferences()
{
  return _SiriUISyncCachedPreferences();
}

uint64_t SiriUISystemLanguageIsRTL()
{
  return _SiriUISystemLanguageIsRTL();
}

uint64_t SiriUITextHyphenationFactor()
{
  return _SiriUITextHyphenationFactor();
}

uint64_t SiriUIUtteranceWidthForAvailableWidthAndInsets()
{
  return _SiriUIUtteranceWidthForAvailableWidthAndInsets();
}

BOOL UIAccessibilityIsInvertColorsEnabled(void)
{
  return _UIAccessibilityIsInvertColorsEnabled();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return _UIAccessibilityIsReduceMotionEnabled();
}

BOOL UIAccessibilityIsReduceTransparencyEnabled(void)
{
  return _UIAccessibilityIsReduceTransparencyEnabled();
}

BOOL UIAccessibilityShouldDifferentiateWithoutColor(void)
{
  return _UIAccessibilityShouldDifferentiateWithoutColor();
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs)
{
  return _UIContentSizeCategoryCompareToCategory(lhs, rhs);
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return _UIContentSizeCategoryIsAccessibilityCategory(category);
}

uint64_t UIEdgeInsetsAdd()
{
  return _UIEdgeInsetsAdd();
}

uint64_t UIFloorToViewScale()
{
  return _UIFloorToViewScale();
}

uint64_t UIFormattedPhoneNumberFromString()
{
  return _UIFormattedPhoneNumberFromString();
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return _UIImageJPEGRepresentation(image, compressionQuality);
}

uint64_t UIRectCenteredIntegralRect()
{
  return _UIRectCenteredIntegralRect();
}

uint64_t UIRectCenteredIntegralRectScale()
{
  return _UIRectCenteredIntegralRectScale();
}

uint64_t UIRectCenteredRect()
{
  return _UIRectCenteredRect();
}

uint64_t UIRectCenteredXInRectScale()
{
  return _UIRectCenteredXInRectScale();
}

uint64_t UIRectCenteredYInRectScale()
{
  return _UIRectCenteredYInRectScale();
}

uint64_t UIRectGetCenter()
{
  return _UIRectGetCenter();
}

uint64_t UIRectIntegralWithScale()
{
  return _UIRectIntegralWithScale();
}

uint64_t UIRoundToViewScale()
{
  return _UIRoundToViewScale();
}

uint64_t _AXSGuidedAccessEnabled()
{
  return __AXSGuidedAccessEnabled();
}

uint64_t _AXSGuidedAccessSetEnabled()
{
  return __AXSGuidedAccessSetEnabled();
}

uint64_t _AXSTripleClickAddOption()
{
  return __AXSTripleClickAddOption();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

NSDictionary *_NSDictionaryOfVariableBindings(NSString *commaSeparatedKeysString, id firstValue, ...)
{
  return __NSDictionaryOfVariableBindings(commaSeparatedKeysString, firstValue);
}

uint64_t _UIContentSizeCategoryCompareToContentSizeCategory()
{
  return __UIContentSizeCategoryCompareToContentSizeCategory();
}

uint64_t _UIContentSizeCategoryIsAccessibilityContentSizeCategory()
{
  return __UIContentSizeCategoryIsAccessibilityContentSizeCategory();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t abort_report_np()
{
  return _abort_report_np();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void free(void *a1)
{
}

pid_t getpid(void)
{
  return _getpid();
}

uint64_t kdebug_trace()
{
  return _kdebug_trace();
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return _os_signpost_id_generate(log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGPointValue(void *a1, const char *a2, ...)
{
  return _[a1 CGPointValue];
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _[a1 CGRectValue];
}

id objc_msgSend_URLByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingPathExtension];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__FBSScene(void *a1, const char *a2, ...)
{
  return _[a1 _FBSScene];
}

id objc_msgSend__MDModeToSRModeConverter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_MDModeToSRModeConverter:");
}

id objc_msgSend__URL(void *a1, const char *a2, ...)
{
  return _[a1 _URL];
}

id objc_msgSend__aceCommandRecords(void *a1, const char *a2, ...)
{
  return _[a1 _aceCommandRecords];
}

id objc_msgSend__aceCommandWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _aceCommandWithIdentifier:];
}

id objc_msgSend__activateConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activateConversation:");
}

id objc_msgSend__activeConversation(void *a1, const char *a2, ...)
{
  return _[a1 _activeConversation];
}

id objc_msgSend__activeConversationDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _activeConversationDidChange];
}

id objc_msgSend__activeConversationItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [_activeConversationItemAtIndexPath:];
}

id objc_msgSend__activeRequestOptions(void *a1, const char *a2, ...)
{
  return _[a1 _activeRequestOptions];
}

id objc_msgSend__activeRequestOptionsDidChange(void *a1, const char *a2, ...)
{
  return _[a1 _activeRequestOptionsDidChange];
}

id objc_msgSend__addErrorUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addErrorUtterance:");
}

id objc_msgSend__addFeedbackButton(void *a1, const char *a2, ...)
{
  return _[a1 _addFeedbackButton];
}

id objc_msgSend__addSuggestionsToContainer(void *a1, const char *a2, ...)
{
  return _[a1 _addSuggestionsToContainer];
}

id objc_msgSend__addViewsForAddDialogs_views_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addViewsForAddDialogs:views:");
}

id objc_msgSend__adjustLineSpacing(void *a1, const char *a2, ...)
{
  return _[a1 _adjustLineSpacing];
}

id objc_msgSend__afui_mapsRelatedChild(void *a1, const char *a2, ...)
{
  return [_afui_mapsRelatedChild];
}

id objc_msgSend__afui_mapsRelatedChildren(void *a1, const char *a2, ...)
{
  return [_afui_mapsRelatedChildren];
}

id objc_msgSend__afui_updateMapsAnalytics(void *a1, const char *a2, ...)
{
  return [_afui_updateMapsAnalytics];
}

id objc_msgSend__allTranscriptItems(void *a1, const char *a2, ...)
{
  return _[a1 _allTranscriptItems];
}

id objc_msgSend__allowsTextToWrap(void *a1, const char *a2, ...)
{
  return _[a1 _allowsTextToWrap];
}

id objc_msgSend__alternativesTableView(void *a1, const char *a2, ...)
{
  return _[a1 _alternativesTableView];
}

id objc_msgSend__alwaysObscureBackgroundContentWhenActive(void *a1, const char *a2, ...)
{
  return _[a1 _alwaysObscureBackgroundContentWhenActive];
}

id objc_msgSend__alwaysPrintSiriResponse(void *a1, const char *a2, ...)
{
  return _[a1 _alwaysPrintSiriResponse];
}

id objc_msgSend__analytics(void *a1, const char *a2, ...)
{
  return _[a1 _analytics];
}

id objc_msgSend__animateMultiPopKeyframe_outOfTotalKeyframes_transitionContext_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateMultiPopKeyframe:outOfTotalKeyframes:transitionContext:completion:");
}

id objc_msgSend__animateOnePopTransition_originalContext_andComplete_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateOnePopTransition:originalContext:andComplete:completion:");
}

id objc_msgSend__animatePushTransition_(void *a1, const char *a2, ...)
{
  return [a1 _animatePushTransition:];
}

id objc_msgSend__animateTransitionForOperation_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateTransitionForOperation:context:");
}

id objc_msgSend__animateUsingDefaultTimingWithOptions_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 _animateUsingDefaultTimingWithOptions:animations:completion:];
}

id objc_msgSend__animateUsingSpringBehavior_tracking_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateUsingSpringBehavior:tracking:animations:completion:");
}

id objc_msgSend__animateWithDuration_delay_options_animations_start_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animateWithDuration:delay:options:animations:start:completion:");
}

id objc_msgSend__applicableEmail(void *a1, const char *a2, ...)
{
  return _[a1 _applicableEmail];
}

id objc_msgSend__applicablePhone(void *a1, const char *a2, ...)
{
  return _[a1 _applicablePhone];
}

id objc_msgSend__applicationIconImageForBundleIdentifier_format_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applicationIconImageForBundleIdentifier:format:scale:");
}

id objc_msgSend__applicationKeyWindow(void *a1, const char *a2, ...)
{
  return _[a1 _applicationKeyWindow];
}

id objc_msgSend__attentionAwarenessConfigurationWithIdentifier_eventMask_samplingInterval_attentionLossTimeout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_attentionAwarenessConfigurationWithIdentifier:eventMask:samplingInterval:attentionLossTimeout:");
}

id objc_msgSend__attributedStringForTip(void *a1, const char *a2, ...)
{
  return _[a1 _attributedStringForTip];
}

id objc_msgSend__audioMessagePlayer(void *a1, const char *a2, ...)
{
  return _[a1 _audioMessagePlayer];
}

id objc_msgSend__autoDismissalStrategy(void *a1, const char *a2, ...)
{
  return _[a1 _autoDismissalStrategy];
}

id objc_msgSend__backgroundEmptyPlatterViewOriginalFrame(void *a1, const char *a2, ...)
{
  return _[a1 _backgroundEmptyPlatterViewOriginalFrame];
}

id objc_msgSend__backgroundPlatteredCardViewForOperation_recentViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backgroundPlatteredCardViewForOperation:recentViewControllers:");
}

id objc_msgSend__backgroundView(void *a1, const char *a2, ...)
{
  return _[a1 _backgroundView];
}

id objc_msgSend__beginEditing(void *a1, const char *a2, ...)
{
  return _[a1 _beginEditing];
}

id objc_msgSend__beginEditingGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _beginEditingGestureRecognizer];
}

id objc_msgSend__bigButtonViewController(void *a1, const char *a2, ...)
{
  return _[a1 _bigButtonViewController];
}

id objc_msgSend__borderColorForUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 _borderColorForUserInterfaceStyle:];
}

id objc_msgSend__bottomContentInsetComponents(void *a1, const char *a2, ...)
{
  return _[a1 _bottomContentInsetComponents];
}

id objc_msgSend__builtInPresentationWithIdentifier_delegate_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_builtInPresentationWithIdentifier:delegate:dataSource:");
}

id objc_msgSend__bundleURLsByBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _bundleURLsByBundleIdentifier];
}

id objc_msgSend__buttonPressAwarenessClientEventMask(void *a1, const char *a2, ...)
{
  return _[a1 _buttonPressAwarenessClientEventMask];
}

id objc_msgSend__cachedURLForBundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedURLForBundleWithIdentifier:");
}

id objc_msgSend__calculateMoveFromPlatteredCardViewToBackgroundAffineTransformForPercentComplete_withSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateMoveFromPlatteredCardViewToBackgroundAffineTransformForPercentComplete:withSemanticContentAttribute:");
}

id objc_msgSend__callHistoryRowsForCalls_callOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_callHistoryRowsForCalls:callOperation:");
}

id objc_msgSend__cancelButton(void *a1, const char *a2, ...)
{
  return _[a1 _cancelButton];
}

id objc_msgSend__cancelCurrentAudioMessagePlayback_(void *a1, const char *a2, ...)
{
  return [a1 _cancelCurrentAudioMessagePlayback:];
}

id objc_msgSend__cancelCurrentTTS_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelCurrentTTS:");
}

id objc_msgSend__cancelDelayedUserAttentionControllerStop(void *a1, const char *a2, ...)
{
  return _[a1 _cancelDelayedUserAttentionControllerStop];
}

id objc_msgSend__cancelIdleTimer(void *a1, const char *a2, ...)
{
  return _[a1 _cancelIdleTimer];
}

id objc_msgSend__cancelLastRootProvisionalSnippetFromLastRequestInConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelLastRootProvisionalSnippetFromLastRequestInConversation:");
}

id objc_msgSend__cancelScheduledAutoDismissalForLongIdlingIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _cancelScheduledAutoDismissalForLongIdlingIfNeeded];
}

id objc_msgSend__cancelSpeechSynthesis(void *a1, const char *a2, ...)
{
  return _[a1 _cancelSpeechSynthesis];
}

id objc_msgSend__cancelTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _cancelTimeout];
}

id objc_msgSend__cancelUserTouchInteractionTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _cancelUserTouchInteractionTimeout];
}

id objc_msgSend__cellTypeForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cellTypeForIndexPath:");
}

id objc_msgSend__checkAndEmitBluetoothInvocationSourcePerVehicle_forRequestOptions_btManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndEmitBluetoothInvocationSourcePerVehicle:forRequestOptions:btManager:");
}

id objc_msgSend__checkAndEmitCarPlayInvocationSourcePerVehicle_forRequestOptions_accessoryManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndEmitCarPlayInvocationSourcePerVehicle:forRequestOptions:accessoryManager:");
}

id objc_msgSend__checkAndEmitHSSignalsWithSource_forRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndEmitHSSignalsWithSource:forRequestOptions:");
}

id objc_msgSend__checkAndUpdateSiriIdleAndQuietStatusIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _checkAndUpdateSiriIdleAndQuietStatusIfNeeded];
}

id objc_msgSend__checkAndUpdateSiriIdleAndQuietStatusOrRescheduleIdleTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _checkAndUpdateSiriIdleAndQuietStatusOrRescheduleIdleTimerIfNeeded];
}

id objc_msgSend__checkAndUpdateSiriIsIdleAndQuietStatusWithChangeHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkAndUpdateSiriIsIdleAndQuietStatusWithChangeHandler:");
}

id objc_msgSend__checkUpdatedSizingForEditableTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_checkUpdatedSizingForEditableTextView:");
}

id objc_msgSend__circleToLabelHeightDifference(void *a1, const char *a2, ...)
{
  return _[a1 _circleToLabelHeightDifference];
}

id objc_msgSend__classNameForBuiltInPresentationWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _classNameForBuiltInPresentationWithIdentifier];
}

id objc_msgSend__cleanupAllViews(void *a1, const char *a2, ...)
{
  return _[a1 _cleanupAllViews];
}

id objc_msgSend__clearButton(void *a1, const char *a2, ...)
{
  return _[a1 _clearButton];
}

id objc_msgSend__compactResultView(void *a1, const char *a2, ...)
{
  return _[a1 _compactResultView];
}

id objc_msgSend__compactView(void *a1, const char *a2, ...)
{
  return _[a1 _compactView];
}

id objc_msgSend__completedCommandAppPunchOutIds(void *a1, const char *a2, ...)
{
  return _[a1 _completedCommandAppPunchOutIds];
}

id objc_msgSend__completion(void *a1, const char *a2, ...)
{
  return _[a1 _completion];
}

id objc_msgSend__configurationDictionary(void *a1, const char *a2, ...)
{
  return _[a1 _configurationDictionary];
}

id objc_msgSend__configuredSpeakableUtteranceParserForCommand_context_speakableText_subCompletion_speakPreparation_speakCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configuredSpeakableUtteranceParserForCommand:context:speakableText:subCompletion:speakPreparation:speakCompletion:");
}

id objc_msgSend__connectionWasInterrupted(void *a1, const char *a2, ...)
{
  return _[a1 _connectionWasInterrupted];
}

id objc_msgSend__connectionWasInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 _connectionWasInvalidated];
}

id objc_msgSend__contentDiffersBetweenPlatterItems_andItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentDiffersBetweenPlatterItems:andItems:");
}

id objc_msgSend__contentPlatterViewFromViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentPlatterViewFromViewController:");
}

id objc_msgSend__contextId(void *a1, const char *a2, ...)
{
  return _[a1 _contextId];
}

id objc_msgSend__conversationIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _conversationIdentifiers];
}

id objc_msgSend__conversationStore(void *a1, const char *a2, ...)
{
  return _[a1 _conversationStore];
}

id objc_msgSend__conversationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_conversationWithIdentifier:");
}

id objc_msgSend__conversations(void *a1, const char *a2, ...)
{
  return _[a1 _conversations];
}

id objc_msgSend__convertRectFromKeyboard_(void *a1, const char *a2, ...)
{
  return [a1 _convertRectFromKeyboard];
}

id objc_msgSend__convertToPointInSAEViewCoordinates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertToPointInSAEViewCoordinates:");
}

id objc_msgSend__convertedCardSection(void *a1, const char *a2, ...)
{
  return _[a1 _convertedCardSection];
}

id objc_msgSend__convertedCardSections(void *a1, const char *a2, ...)
{
  return _[a1 _convertedCardSections];
}

id objc_msgSend__convertedImageOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertedImageOfSize:");
}

id objc_msgSend__convertedLocation(void *a1, const char *a2, ...)
{
  return _[a1 _convertedLocation];
}

id objc_msgSend__convertedPunchout(void *a1, const char *a2, ...)
{
  return _[a1 _convertedPunchout];
}

id objc_msgSend__coordinateTransitionWithTransitionCoordination_(void *a1, const char *a2, ...)
{
  return [a1 _coordinateTransitionWithTransitionCoordination:];
}

id objc_msgSend__correctionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _correctionIdentifier];
}

id objc_msgSend__createBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createBackgroundView:");
}

id objc_msgSend__createNotificationRequest_body_footer_identifier_categoryIdentifier_suppressDefaultAction_expirationDate_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createNotificationRequest:body:footer:identifier:categoryIdentifier:suppressDefaultAction:expirationDate:userInfo:");
}

id objc_msgSend__createReusableViewWithClass_snippetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createReusableViewWithClass:snippetViewController:");
}

id objc_msgSend__createSpeechAlternativeViewsIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _createSpeechAlternativeViewsIfNecessary];
}

id objc_msgSend__createVisualEffectBackgroundViewForTextView_topOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createVisualEffectBackgroundViewForTextView:topOffset:");
}

id objc_msgSend__currentAVRecordRoute(void *a1, const char *a2, ...)
{
  return _[a1 _currentAVRecordRoute];
}

id objc_msgSend__dateOfLastReport(void *a1, const char *a2, ...)
{
  return _[a1 _dateOfLastReport];
}

id objc_msgSend__debugDescriptionForProperty_BOOLValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugDescriptionForProperty:BOOLValue:");
}

id objc_msgSend__debugDescriptionForProperty_formattedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugDescriptionForProperty:formattedValue:");
}

id objc_msgSend__debugDescriptionForProperty_integerValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_debugDescriptionForProperty:integerValue:");
}

id objc_msgSend__defaultURL(void *a1, const char *a2, ...)
{
  return _[a1 _defaultURL];
}

id objc_msgSend__delayAceCommandSuccess_forDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_delayAceCommandSuccess:forDuration:");
}

id objc_msgSend__delayedConversationItemRevisionIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _delayedConversationItemRevisionIdentifiers];
}

id objc_msgSend__delegate(void *a1, const char *a2, ...)
{
  return _[a1 _delegate];
}

id objc_msgSend__deleteConversationWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deleteConversationWithIdentifier:");
}

id objc_msgSend__deletePreviousConversation(void *a1, const char *a2, ...)
{
  return _[a1 _deletePreviousConversation];
}

id objc_msgSend__detectionStartedForType_(void *a1, const char *a2, ...)
{
  return [_detectionStartedForType:];
}

id objc_msgSend__deviceSpecificImageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceSpecificImageNamed:inBundle:");
}

id objc_msgSend__deviceSpecificStringForDefaultString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_deviceSpecificStringForDefaultString:");
}

id objc_msgSend__deviceSupportsFaceDetection(void *a1, const char *a2, ...)
{
  return _[a1 _deviceSupportsFaceDetection];
}

id objc_msgSend__deviceSupportsFaceID(void *a1, const char *a2, ...)
{
  return _[a1 _deviceSupportsFaceID];
}

id objc_msgSend__dialogModeToVisualModeConverter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dialogModeToVisualModeConverter:");
}

id objc_msgSend__didCompleteActionForAceCommand_success_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didCompleteActionForAceCommand:success:");
}

id objc_msgSend__didDetectGestureEventWithinSiri_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didDetectGestureEventWithinSiri:");
}

id objc_msgSend__didDetectTouchOutsideOfSiri(void *a1, const char *a2, ...)
{
  return _[a1 _didDetectTouchOutsideOfSiri];
}

id objc_msgSend__didPresentItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return [a1 _didPresentItemsAtIndexPaths:];
}

id objc_msgSend__didReceiveAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceiveAceCommand:");
}

id objc_msgSend__didReceiveAceCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didReceiveAceCommand:completion:");
}

id objc_msgSend__didShowTip(void *a1, const char *a2, ...)
{
  return _[a1 _didShowTip];
}

id objc_msgSend__didStartActionForAceCommand_(void *a1, const char *a2, ...)
{
  return [a1 _didStartActionForAceCommand:];
}

id objc_msgSend__didStartActionForItemAtIndexPath_inConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didStartActionForItemAtIndexPath:inConversation:");
}

id objc_msgSend__didUpdateShowTipCount(void *a1, const char *a2, ...)
{
  return _[a1 _didUpdateShowTipCount];
}

id objc_msgSend__dismissFromTimeoutAfterDelay_(void *a1, const char *a2, ...)
{
  return [a1 _dismissFromTimeoutAfterDelay:];
}

id objc_msgSend__dismissWithReason_(void *a1, const char *a2, ...)
{
  return [_dismissWithReason:];
}

id objc_msgSend__dismissalContextWithDismissalReason_dismissalOptions_(void *a1, const char *a2, ...)
{
  return [_dismissalContextWithDismissalReason:dismissalOptions:];
}

id objc_msgSend__dismissalPanGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _dismissalPanGestureRecognizer];
}

id objc_msgSend__displayNotReadyError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayNotReadyError:");
}

id objc_msgSend__domainObjectStorageConnection(void *a1, const char *a2, ...)
{
  return _[a1 _domainObjectStorageConnection];
}

id objc_msgSend__domainSnippetForEnabledIntentSupportedAppAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_domainSnippetForEnabledIntentSupportedAppAtIndex:");
}

id objc_msgSend__domainSnippetForHelpDomainAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_domainSnippetForHelpDomainAtIndex:");
}

id objc_msgSend__domainSnippetForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_domainSnippetForIndexPath:");
}

id objc_msgSend__downloadAssetsNotificationRequest(void *a1, const char *a2, ...)
{
  return _[a1 _downloadAssetsNotificationRequest];
}

id objc_msgSend__downloadSiriAdvancedFeaturesAssetsNotificationRequest(void *a1, const char *a2, ...)
{
  return _[a1 _downloadSiriAdvancedFeaturesAssetsNotificationRequest];
}

id objc_msgSend__edgeInsets(void *a1, const char *a2, ...)
{
  return _[a1 _edgeInsets];
}

id objc_msgSend__editableUtteranceViewControllerDidDismiss_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editableUtteranceViewControllerDidDismiss:");
}

id objc_msgSend__editableUtteranceViewControllerWillBePresentedWithSheetPresentationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editableUtteranceViewControllerWillBePresentedWithSheetPresentationController:");
}

id objc_msgSend__effectForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 _effectForIdentifier:];
}

id objc_msgSend__emitRenderingEnded(void *a1, const char *a2, ...)
{
  return _[a1 _emitRenderingEnded];
}

id objc_msgSend__endBackgroundTask(void *a1, const char *a2, ...)
{
  return _[a1 _endBackgroundTask];
}

id objc_msgSend__endTrackingGuideShowTimeIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _endTrackingGuideShowTimeIfNecessary];
}

id objc_msgSend__enqueueSpokenSuggestionsFromAddViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enqueueSpokenSuggestionsFromAddViews:");
}

id objc_msgSend__enumerateDescendentViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enumerateDescendentViews:");
}

id objc_msgSend__executePendingBlocksForTransition(void *a1, const char *a2, ...)
{
  return _[a1 _executePendingBlocksForTransition];
}

id objc_msgSend__expectedPopCountForTransitionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_expectedPopCountForTransitionContext:");
}

id objc_msgSend__exportedInterface(void *a1, const char *a2, ...)
{
  return _[a1 _exportedInterface];
}

id objc_msgSend__faceAttentionAwarenessEventMask(void *a1, const char *a2, ...)
{
  return _[a1 _faceAttentionAwarenessEventMask];
}

id objc_msgSend__fallbackImage(void *a1, const char *a2, ...)
{
  return _[a1 _fallbackImage];
}

id objc_msgSend__fetchAttendingState_(void *a1, const char *a2, ...)
{
  return [a1 _fetchAttendingState:];
}

id objc_msgSend__fetchConnectedAudioAccessoryState(void *a1, const char *a2, ...)
{
  return _[a1 _fetchConnectedAudioAccessoryState];
}

id objc_msgSend__firstSnippetInViews_(void *a1, const char *a2, ...)
{
  return [a1 _firstSnippetInViews:];
}

id objc_msgSend__flatImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_flatImageWithColor:");
}

id objc_msgSend__font(void *a1, const char *a2, ...)
{
  return _[a1 _font];
}

id objc_msgSend__frameForPlaceholderRectForBounds_alignment_layingOutContentRightToLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForPlaceholderRectForBounds:alignment:layingOutContentRightToLeft:");
}

id objc_msgSend__fromPlatteredCardViewGivenFromViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fromPlatteredCardViewGivenFromViewController:");
}

id objc_msgSend__fromPlatteredCardViewOriginalFrame(void *a1, const char *a2, ...)
{
  return _[a1 _fromPlatteredCardViewOriginalFrame];
}

id objc_msgSend__fullscreenEffectMap(void *a1, const char *a2, ...)
{
  return _[a1 _fullscreenEffectMap];
}

id objc_msgSend__getUpdatedErrorCount(void *a1, const char *a2, ...)
{
  return _[a1 _getUpdatedErrorCount];
}

id objc_msgSend__guideSnippet(void *a1, const char *a2, ...)
{
  return _[a1 _guideSnippet];
}

id objc_msgSend__handleButtonPressAttentionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleButtonPressAttentionEvent:");
}

id objc_msgSend__handleFaceAttentionEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleFaceAttentionEvent:");
}

id objc_msgSend__handleNonSnippetResponse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleNonSnippetResponse:");
}

id objc_msgSend__handleRequestError_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_handleRequestError:completion:");
}

id objc_msgSend__handleTouchAttentionEvent_(void *a1, const char *a2, ...)
{
  return [a1 _handleTouchAttentionEvent:];
}

id objc_msgSend__hasInexpensiveNetwork(void *a1, const char *a2, ...)
{
  return _[a1 _hasInexpensiveNetwork];
}

id objc_msgSend__hasSufficientDiskSpaceForDownload(void *a1, const char *a2, ...)
{
  return _[a1 _hasSufficientDiskSpaceForDownload];
}

id objc_msgSend__hasText(void *a1, const char *a2, ...)
{
  return _[a1 _hasText];
}

id objc_msgSend__hasTitle(void *a1, const char *a2, ...)
{
  return _[a1 _hasTitle];
}

id objc_msgSend__headerViewEdgeInsets(void *a1, const char *a2, ...)
{
  return _[a1 _headerViewEdgeInsets];
}

id objc_msgSend__heightOfRowForDomainSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_heightOfRowForDomainSnippet:");
}

id objc_msgSend__hideEditableUtteranceView(void *a1, const char *a2, ...)
{
  return _[a1 _hideEditableUtteranceView];
}

id objc_msgSend__hidesStatusViewForInputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hidesStatusViewForInputType:");
}

id objc_msgSend__hidesTextRequestViewForInputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hidesTextRequestViewForInputType:");
}

id objc_msgSend__host(void *a1, const char *a2, ...)
{
  return _[a1 _host];
}

id objc_msgSend__hostWithErrorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hostWithErrorHandler:");
}

id objc_msgSend__iconImageForGuideDomainSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_iconImageForGuideDomainSnippet:");
}

id objc_msgSend__identifierOfPreviousConversation(void *a1, const char *a2, ...)
{
  return _[a1 _identifierOfPreviousConversation];
}

id objc_msgSend__idleTimer(void *a1, const char *a2, ...)
{
  return _[a1 _idleTimer];
}

id objc_msgSend__ignoreUnintentionalTouches(void *a1, const char *a2, ...)
{
  return _[a1 _ignoreUnintentionalTouches];
}

id objc_msgSend__imageFromRect_(void *a1, const char *a2, ...)
{
  return [a1 _imageFromRect:];
}

id objc_msgSend__indentWidth(void *a1, const char *a2, ...)
{
  return _[a1 _indentWidth];
}

id objc_msgSend__init(void *a1, const char *a2, ...)
{
  return _[a1 _init];
}

id objc_msgSend__initialHeaderText(void *a1, const char *a2, ...)
{
  return _[a1 _initialHeaderText];
}

id objc_msgSend__inputType(void *a1, const char *a2, ...)
{
  return _[a1 _inputType];
}

id objc_msgSend__insertUserUtteranceViewForSuggestion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertUserUtteranceViewForSuggestion:");
}

id objc_msgSend__insertUserUtteranceViewForText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_insertUserUtteranceViewForText:");
}

id objc_msgSend__instrumentation(void *a1, const char *a2, ...)
{
  return _[a1 _instrumentation];
}

id objc_msgSend__instrumentationManager(void *a1, const char *a2, ...)
{
  return _[a1 _instrumentationManager];
}

id objc_msgSend__instrumentationPresentationForPresentationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_instrumentationPresentationForPresentationOptions:");
}

id objc_msgSend__instrumentationResponseModeForMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_instrumentationResponseModeForMode:");
}

id objc_msgSend__invalidateConnection(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateConnection];
}

id objc_msgSend__invalidateTrialManager(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateTrialManager];
}

id objc_msgSend__isAcousticIdAllowed(void *a1, const char *a2, ...)
{
  return _[a1 _isAcousticIdAllowed];
}

id objc_msgSend__isAudioPlayerPlaying(void *a1, const char *a2, ...)
{
  return _[a1 _isAudioPlayerPlaying];
}

id objc_msgSend__isCancelling(void *a1, const char *a2, ...)
{
  return _[a1 _isCancelling];
}

id objc_msgSend__isCompleted(void *a1, const char *a2, ...)
{
  return _[a1 _isCompleted];
}

id objc_msgSend__isDeviceLowered(void *a1, const char *a2, ...)
{
  return _[a1 _isDeviceLowered];
}

id objc_msgSend__isDrillIn(void *a1, const char *a2, ...)
{
  return _[a1 _isDrillIn];
}

id objc_msgSend__isGesturing(void *a1, const char *a2, ...)
{
  return _[a1 _isGesturing];
}

id objc_msgSend__isIdleTimerEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _isIdleTimerEnabled];
}

id objc_msgSend__isInAnimationBlock(void *a1, const char *a2, ...)
{
  return _[a1 _isInAnimationBlock];
}

id objc_msgSend__isKeyboardLoweredAfterResponse(void *a1, const char *a2, ...)
{
  return _[a1 _isKeyboardLoweredAfterResponse];
}

id objc_msgSend__isLoaded(void *a1, const char *a2, ...)
{
  return _[a1 _isLoaded];
}

id objc_msgSend__isReadingBulletinContentInCarPlayOutsideOfSiriSession(void *a1, const char *a2, ...)
{
  return _[a1 _isReadingBulletinContentInCarPlayOutsideOfSiriSession];
}

id objc_msgSend__isRequestActive(void *a1, const char *a2, ...)
{
  return _[a1 _isRequestActive];
}

id objc_msgSend__isShowingCancelButton(void *a1, const char *a2, ...)
{
  return _[a1 _isShowingCancelButton];
}

id objc_msgSend__isSiriIdleAndQuiet(void *a1, const char *a2, ...)
{
  return _[a1 _isSiriIdleAndQuiet];
}

id objc_msgSend__isSpeechSynthesisSpeaking(void *a1, const char *a2, ...)
{
  return _[a1 _isSpeechSynthesisSpeaking];
}

id objc_msgSend__isStartRequestAceCommandSent(void *a1, const char *a2, ...)
{
  return _[a1 _isStartRequestAceCommandSent];
}

id objc_msgSend__isToday(void *a1, const char *a2, ...)
{
  return _[a1 _isToday];
}

id objc_msgSend__isUserUtteranceTapToEditInProgress(void *a1, const char *a2, ...)
{
  return _[a1 _isUserUtteranceTapToEditInProgress];
}

id objc_msgSend__isWaitingForStartRequest(void *a1, const char *a2, ...)
{
  return _[a1 _isWaitingForStartRequest];
}

id objc_msgSend__isWikiSnippet(void *a1, const char *a2, ...)
{
  return _[a1 _isWikiSnippet];
}

id objc_msgSend__isWithinTheLastTimePeriodInDays_(void *a1, const char *a2, ...)
{
  return [a1 _isWithinTheLastTimePeriodInDays:];
}

id objc_msgSend__isYesterday(void *a1, const char *a2, ...)
{
  return _[a1 _isYesterday];
}

id objc_msgSend__keyboardFrame(void *a1, const char *a2, ...)
{
  return _[a1 _keyboardFrame];
}

id objc_msgSend__keyboardHasContentAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyboardHasContentAtPoint:");
}

id objc_msgSend__keyboardState(void *a1, const char *a2, ...)
{
  return _[a1 _keyboardState];
}

id objc_msgSend__language(void *a1, const char *a2, ...)
{
  return _[a1 _language];
}

id objc_msgSend__languageMatchesConversation_(void *a1, const char *a2, ...)
{
  return [a1 _languageMatchesConversation];
}

id objc_msgSend__laysOutContentRightToLeft(void *a1, const char *a2, ...)
{
  return _[a1 _laysOutContentRightToLeft];
}

id objc_msgSend__leadingHorizontalOffsetWithLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 _leadingHorizontalOffsetWithLayoutMargins:];
}

id objc_msgSend__load(void *a1, const char *a2, ...)
{
  return _[a1 _load];
}

id objc_msgSend__loadFromObject_(void *a1, const char *a2, ...)
{
  return [a1 _loadFromObject];
}

id objc_msgSend__loadFromPropertyListRepresentation_(void *a1, const char *a2, ...)
{
  return [a1 _loadFromPropertyListRepresentation];
}

id objc_msgSend__localizedErrorString_(void *a1, const char *a2, ...)
{
  return [a1 _localizedErrorString:];
}

id objc_msgSend__logAceObjectPresented_dialogPhase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAceObjectPresented:dialogPhase:");
}

id objc_msgSend__logAceObjectSpoken_dialogPhase_speakableText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAceObjectSpoken:dialogPhase:speakableText:");
}

id objc_msgSend__logAceObjectSpoken_dialogPhase_speakableText_dialogIdentifierOverride_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logAceObjectSpoken:dialogPhase:speakableText:dialogIdentifierOverride:");
}

id objc_msgSend__logDummyAssistantUtteranceViewWithDialogIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logDummyAssistantUtteranceViewWithDialogIdentifier:");
}

id objc_msgSend__logModeComputationForAceCommand_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logModeComputationForAceCommand:mode:");
}

id objc_msgSend__logPatternExecutedEventForAddViewsCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logPatternExecutedEventForAddViewsCommand:");
}

id objc_msgSend__logRFSnippetRenderingContextWithEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logRFSnippetRenderingContextWithEvent:");
}

id objc_msgSend__logRevealSpeechCommandReceived_(void *a1, const char *a2, ...)
{
  return [a1 _logRevealSpeechCommandReceived:];
}

id objc_msgSend__mapSASRequestSourceToSuggestionsInputOrigin_(void *a1, const char *a2, ...)
{
  return [a1 _mapSASRequestSourceToSuggestionsInputOrigin];
}

id objc_msgSend__mapSiriTransitionState_(void *a1, const char *a2, ...)
{
  return [a1 _mapSiriTransitionState:];
}

id objc_msgSend__metricsContextForItemWithAceCommandId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_metricsContextForItemWithAceCommandId:");
}

id objc_msgSend__mockSiriAssetState(void *a1, const char *a2, ...)
{
  return _[a1 _mockSiriAssetState];
}

id objc_msgSend__modeForSiriSettings(void *a1, const char *a2, ...)
{
  return _[a1 _modeForSiriSettings];
}

id objc_msgSend__nameLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 _nameLabelFont];
}

id objc_msgSend__navigationBarHasContentAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_navigationBarHasContentAtPoint:");
}

id objc_msgSend__navigationController(void *a1, const char *a2, ...)
{
  return _[a1 _navigationController];
}

id objc_msgSend__navigationStackLayoutController(void *a1, const char *a2, ...)
{
  return _[a1 _navigationStackLayoutController];
}

id objc_msgSend__notifyPromptedUserForInput(void *a1, const char *a2, ...)
{
  return _[a1 _notifyPromptedUserForInput];
}

id objc_msgSend__notifySiriDebugAppWithMessage_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifySiriDebugAppWithMessage:completionHandler:");
}

id objc_msgSend__nudgeHeaderText(void *a1, const char *a2, ...)
{
  return _[a1 _nudgeHeaderText];
}

id objc_msgSend__numberOfHelpDomains(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfHelpDomains];
}

id objc_msgSend__numberOfIntentEnabledApps(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfIntentEnabledApps];
}

id objc_msgSend__numberOfSections(void *a1, const char *a2, ...)
{
  return _[a1 _numberOfSections];
}

id objc_msgSend__openURL_bundleId_inPlace_conversationId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_openURL:bundleId:inPlace:conversationId:completion:");
}

id objc_msgSend__padding(void *a1, const char *a2, ...)
{
  return _[a1 _padding];
}

id objc_msgSend__panGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _panGestureRecognizer];
}

id objc_msgSend__pendingPreSynthesisTasks(void *a1, const char *a2, ...)
{
  return _[a1 _pendingPreSynthesisTasks];
}

id objc_msgSend__performAppPunchOutCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAppPunchOutCommand:completion:");
}

id objc_msgSend__performAppPunchOutCommand_conversationItemIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performAppPunchOutCommand:conversationItemIdentifier:completion:");
}

id objc_msgSend__performGenericAceCommand_turnIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performGenericAceCommand:turnIdentifier:completion:");
}

id objc_msgSend__performPopAnimations(void *a1, const char *a2, ...)
{
  return _[a1 _performPopAnimations];
}

id objc_msgSend__performPushAnimations(void *a1, const char *a2, ...)
{
  return _[a1 _performPushAnimations];
}

id objc_msgSend__performPushTransitionFromViewController_andView_toViewController_andView_inContainerView_recentViewControllers_transitionDuration_animated_transitionCompletion_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performPushTransitionFromViewController:andView:toViewController:andView:inContainerView:recentViewControllers:transitionDuration:animated:transitionCompletion:completion:");
}

id objc_msgSend__performResultAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performResultAnimation:");
}

id objc_msgSend__performSayItCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performSayItCommand:");
}

id objc_msgSend__performScrollTest_iterations_delta_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performScrollTest:iterations:delta:");
}

id objc_msgSend__performWithoutRetargetingAnimations_(void *a1, const char *a2, ...)
{
  return [a1 _performWithoutRetargetingAnimations:];
}

id objc_msgSend__phraseForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_phraseForIndexPath:");
}

id objc_msgSend__placeholderLabel(void *a1, const char *a2, ...)
{
  return _[a1 _placeholderLabel];
}

id objc_msgSend__placeholderRectForBounds_alignment_layingOutContentRightToLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_placeholderRectForBounds:alignment:layingOutContentRightToLeft:");
}

id objc_msgSend__placeholderView(void *a1, const char *a2, ...)
{
  return _[a1 _placeholderView];
}

id objc_msgSend__platterViewOfViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_platterViewOfViewController:");
}

id objc_msgSend__popToRootViewControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _popToRootViewControllerIfNeeded];
}

id objc_msgSend__popTransitionContextGivenOriginalContext_revealedViewController_poppedViewController_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_popTransitionContextGivenOriginalContext:revealedViewController:poppedViewController:duration:");
}

id objc_msgSend__postNotificationRequest_notificationCenter_destinations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postNotificationRequest:notificationCenter:destinations:");
}

id objc_msgSend__preferences(void *a1, const char *a2, ...)
{
  return _[a1 _preferences];
}

id objc_msgSend__preferredFontForTextStyle_variant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:variant:");
}

id objc_msgSend__preferredHeight(void *a1, const char *a2, ...)
{
  return _[a1 _preferredHeight];
}

id objc_msgSend__preferredTextAlignment(void *a1, const char *a2, ...)
{
  return _[a1 _preferredTextAlignment];
}

id objc_msgSend__preferredTextAlignmentForEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredTextAlignmentForEditing:");
}

id objc_msgSend__prepContainerForFirstSnippetPresentation(void *a1, const char *a2, ...)
{
  return _[a1 _prepContainerForFirstSnippetPresentation];
}

id objc_msgSend__prepareBackgroundEmptyPlatteredViewForTransitionInContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareBackgroundEmptyPlatteredViewForTransitionInContext:");
}

id objc_msgSend__prepareFromPlatteredCardViewForTransitionWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareFromPlatteredCardViewForTransitionWithContext:");
}

id objc_msgSend__prepareSiriEnabledAppList(void *a1, const char *a2, ...)
{
  return _[a1 _prepareSiriEnabledAppList];
}

id objc_msgSend__prepareToPlatteredCardViewForTransitionInContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareToPlatteredCardViewForTransitionInContext:");
}

id objc_msgSend__presentAuthenticationDialogWithText_(void *a1, const char *a2, ...)
{
  return [a1 _presentAuthenticationDialogWithText:];
}

id objc_msgSend__presentation(void *a1, const char *a2, ...)
{
  return _[a1 _presentation];
}

id objc_msgSend__presentationAllowsRecordingActionCompletedForSpeechSynthesisCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presentationAllowsRecordingActionCompletedForSpeechSynthesisCommand:");
}

id objc_msgSend__presentationOptions(void *a1, const char *a2, ...)
{
  return _[a1 _presentationOptions];
}

id objc_msgSend__presentationSupportsConversationDidChangeWithTransaction_(void *a1, const char *a2, ...)
{
  return [a1 _presentationSupportsConversationDidChangeWithTransaction:];
}

id objc_msgSend__presentationViewController(void *a1, const char *a2, ...)
{
  return _[a1 _presentationViewController];
}

id objc_msgSend__presentedConversationItemRevisionIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 _presentedConversationItemRevisionIdentifiers];
}

id objc_msgSend__previousConversation(void *a1, const char *a2, ...)
{
  return _[a1 _previousConversation];
}

id objc_msgSend__privateDelegate(void *a1, const char *a2, ...)
{
  return _[a1 _privateDelegate];
}

id objc_msgSend__processAddViewsCommand_forMode_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processAddViewsCommand:forMode:completion:");
}

id objc_msgSend__processUserUtterance_isCombined_displayedText_withScore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_processUserUtterance:isCombined:displayedText:withScore:");
}

id objc_msgSend__propertyListRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 _propertyListRepresentation];
}

id objc_msgSend__punchoutMetricsAceCommandIdForItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_punchoutMetricsAceCommandIdForItemWithIdentifier:");
}

id objc_msgSend__pushQueuedNavigationContentViewController(void *a1, const char *a2, ...)
{
  return _[a1 _pushQueuedNavigationContentViewController];
}

id objc_msgSend__queuedNavigationContentViewController(void *a1, const char *a2, ...)
{
  return _[a1 _queuedNavigationContentViewController];
}

id objc_msgSend__readoutResultFromTTSResult_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readoutResultFromTTSResult:error:");
}

id objc_msgSend__readoutResultFromTitleResult_messageResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readoutResultFromTitleResult:messageResult:");
}

id objc_msgSend__recentViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 _recentViewControllers];
}

id objc_msgSend__recursivelyAnimateNextMultiPopKeyframe_outOfTotalKeyframes_transitionContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recursivelyAnimateNextMultiPopKeyframe:outOfTotalKeyframes:transitionContext:");
}

id objc_msgSend__recursivelyNotifyVisibleViewControllers_withBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recursivelyNotifyVisibleViewControllers:withBlock:");
}

id objc_msgSend__redundantDUCIds(void *a1, const char *a2, ...)
{
  return _[a1 _redundantDUCIds];
}

id objc_msgSend__reflectionDialogHasBeenPlayed(void *a1, const char *a2, ...)
{
  return _[a1 _reflectionDialogHasBeenPlayed];
}

id objc_msgSend__reflectionDialogHasBeenPlayed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reflectionDialogHasBeenPlayed:");
}

id objc_msgSend__registerForAmbientPresentationTraitChange(void *a1, const char *a2, ...)
{
  return _[a1 _registerForAmbientPresentationTraitChange];
}

id objc_msgSend__remoteViewControllerInterface(void *a1, const char *a2, ...)
{
  return _[a1 _remoteViewControllerInterface];
}

id objc_msgSend__removePreviousConversationFromStore(void *a1, const char *a2, ...)
{
  return _[a1 _removePreviousConversationFromStore];
}

id objc_msgSend__removeRedundantUtteranceViewsFromAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeRedundantUtteranceViewsFromAddViews:forMode:");
}

id objc_msgSend__removeSpeakableTextFromAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeSpeakableTextFromAddViews:forMode:");
}

id objc_msgSend__removeUtteranceViewsFromAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeUtteranceViewsFromAddViews:forMode:");
}

id objc_msgSend__repeatablePhrases(void *a1, const char *a2, ...)
{
  return _[a1 _repeatablePhrases];
}

id objc_msgSend__requestOptions(void *a1, const char *a2, ...)
{
  return _[a1 _requestOptions];
}

id objc_msgSend__requestPresentationBackgroundBlurVisible_forReason_(void *a1, const char *a2, ...)
{
  return [a1 _requestPresentationBackgroundBlurVisible:forReason:];
}

id objc_msgSend__rescanBundles(void *a1, const char *a2, ...)
{
  return _[a1 _rescanBundles];
}

id objc_msgSend__rescheduleIdleTimerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _rescheduleIdleTimerIfNeeded];
}

id objc_msgSend__resetContext(void *a1, const char *a2, ...)
{
  return _[a1 _resetContext];
}

id objc_msgSend__responseModeToMDModeConverter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_responseModeToMDModeConverter:");
}

id objc_msgSend__restartFaceAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restartFaceAttentionAwarenessClient:");
}

id objc_msgSend__restorePreviousConversation(void *a1, const char *a2, ...)
{
  return _[a1 _restorePreviousConversation];
}

id objc_msgSend__resultEligibleForIntelligentLightEffects(void *a1, const char *a2, ...)
{
  return _[a1 _resultEligibleForIntelligentLightEffects];
}

id objc_msgSend__resultViewController(void *a1, const char *a2, ...)
{
  return _[a1 _resultViewController];
}

id objc_msgSend__resumesInterruptedAudioPlaybackForAttendingState_(void *a1, const char *a2, ...)
{
  return [a1 _resumesInterruptedAudioPlaybackForAttendingState];
}

id objc_msgSend__rootSheetPresentationController(void *a1, const char *a2, ...)
{
  return _[a1 _rootSheetPresentationController];
}

id objc_msgSend__runScrollRosterTestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_runScrollRosterTestWithOptions:");
}

id objc_msgSend__saeContainerViewFromViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saeContainerViewFromViewController:");
}

id objc_msgSend__safelyExtractSnippetPlatterViewControllerFromViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_safelyExtractSnippetPlatterViewControllerFromViewController:");
}

id objc_msgSend__sampleRate(void *a1, const char *a2, ...)
{
  return _[a1 _sampleRate];
}

id objc_msgSend__save(void *a1, const char *a2, ...)
{
  return _[a1 _save];
}

id objc_msgSend__saveConversationWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveConversationWithCompletion:");
}

id objc_msgSend__sayItForDialog_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sayItForDialog:");
}

id objc_msgSend__scaledSiriTapToEditViewLeading(void *a1, const char *a2, ...)
{
  return _[a1 _scaledSiriTapToEditViewLeading];
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return [a1 _scaledValueForValue:];
}

id objc_msgSend__scheduleAssetCheckWithEarliestBeginDate_(void *a1, const char *a2, ...)
{
  return [a1 _scheduleAssetCheckWithEarliestBeginDate:];
}

id objc_msgSend__scheduleAudioResumptionAfterDelayInSec_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleAudioResumptionAfterDelayInSec:");
}

id objc_msgSend__scheduleAutoDismissalForTouchOutsideOfSiri(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleAutoDismissalForTouchOutsideOfSiri];
}

id objc_msgSend__scheduleIdleTimer(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleIdleTimer];
}

id objc_msgSend__scheduleInterruptedAudioResumingIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleInterruptedAudioResumingIfNeeded];
}

id objc_msgSend__scheduleUserTouchInteractionTimeout(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleUserTouchInteractionTimeout];
}

id objc_msgSend__searchAddViewsForSpokenHintsView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchAddViewsForSpokenHintsView:");
}

id objc_msgSend__searchCallHistoryIntentForVoicemail_(void *a1, const char *a2, ...)
{
  return [a1 _searchCallHistoryIntentForVoicemail];
}

id objc_msgSend__searchCallHistoryIntentResponseForCallRecords_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchCallHistoryIntentResponseForCallRecords:");
}

id objc_msgSend__secondaryTintColor(void *a1, const char *a2, ...)
{
  return _[a1 _secondaryTintColor];
}

id objc_msgSend__session(void *a1, const char *a2, ...)
{
  return _[a1 _session];
}

id objc_msgSend__setAcousticIdAllowed_(void *a1, const char *a2, ...)
{
  return [_a1 _setAcousticIdAllowed:];
}

id objc_msgSend__setActiveAdditionalPlatterTranscriptItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setActiveAdditionalPlatterTranscriptItems:");
}

id objc_msgSend__setActiveConversationTranscriptItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setActiveConversationTranscriptItems:");
}

id objc_msgSend__setAlternativesTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAlternativesTableView:");
}

id objc_msgSend__setAudioPlayerIsPlaying_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAudioPlayerIsPlaying:");
}

id objc_msgSend__setAutoDismissalStrategy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAutoDismissalStrategy:");
}

id objc_msgSend__setBackgroundEmptyPlatterViewOriginalFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBackgroundEmptyPlatterViewOriginalFrame:");
}

id objc_msgSend__setBottomContentInsetComponents_animatedWithDuration_animationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBottomContentInsetComponents:animatedWithDuration:animationOptions:");
}

id objc_msgSend__setCancelling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCancelling:");
}

id objc_msgSend__setCompleted_(void *a1, const char *a2, ...)
{
  return [a1 _setCompleted:];
}

id objc_msgSend__setCompletion_(void *a1, const char *a2, ...)
{
  return [a1 _setCompletion:];
}

id objc_msgSend__setContinuousCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 _setContinuousCornerRadius:];
}

id objc_msgSend__setCurrentAVRecordRoute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCurrentAVRecordRoute:");
}

id objc_msgSend__setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDelegate:");
}

id objc_msgSend__setDetectionStarted_forType_(void *a1, const char *a2, ...)
{
  return [a1 _setDetectionStarted:forType:];
}

id objc_msgSend__setDeviceLowered_(void *a1, const char *a2, ...)
{
  return [_a1 _setDeviceLowered:];
}

id objc_msgSend__setDictationReplacementAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDictationReplacementAction:");
}

id objc_msgSend__setDictationResult_withCorrectionIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setDictationResult:withCorrectionIdentifier:");
}

id objc_msgSend__setDidUpdateShowTipCount_(void *a1, const char *a2, ...)
{
  return [a1 _setDidUpdateShowTipCount:];
}

id objc_msgSend__setForcedUserInterfaceLayoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setForcedUserInterfaceLayoutDirection:");
}

id objc_msgSend__setFromPlatteredCardViewOriginalFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFromPlatteredCardViewOriginalFrame:");
}

id objc_msgSend__setGesturing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setGesturing:");
}

id objc_msgSend__setHyphenationFactor_(void *a1, const char *a2, ...)
{
  return [a1 _setHyphenationFactor:];
}

id objc_msgSend__setIdleTimer_(void *a1, const char *a2, ...)
{
  return [_a1 _setIdleTimer:];
}

id objc_msgSend__setIdleTimerEnabled_(void *a1, const char *a2, ...)
{
  return [a1 _setIdleTimerEnabled:];
}

id objc_msgSend__setInputType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setInputType:");
}

id objc_msgSend__setKeyboardLoweredAfterResponse_(void *a1, const char *a2, ...)
{
  return [a1 _setKeyboardLoweredAfterResponse:];
}

id objc_msgSend__setKeyboardState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setKeyboardState:");
}

id objc_msgSend__setLanguageCode_(void *a1, const char *a2, ...)
{
  return [a1 _setLanguageCode:];
}

id objc_msgSend__setListenAfterSpeakingForRepeatable_(void *a1, const char *a2, ...)
{
  return [a1 _setListenAfterSpeakingForRepeatable:];
}

id objc_msgSend__setListenAfterSpeakingForRequestFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setListenAfterSpeakingForRequestFinished:");
}

id objc_msgSend__setLoaded_(void *a1, const char *a2, ...)
{
  return [_a1 _setLoaded:];
}

id objc_msgSend__setNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setNavigationController:");
}

id objc_msgSend__setNavigationStackLayoutController_(void *a1, const char *a2, ...)
{
  return [a1 _setNavigationStackLayoutController:];
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return [a1 _setQueue:];
}

id objc_msgSend__setQueuedNavigationContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setQueuedNavigationContentViewController:");
}

id objc_msgSend__setReadingBulletinContentInCarPlayOutsideOfSiriSession_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setReadingBulletinContentInCarPlayOutsideOfSiriSession:");
}

id objc_msgSend__setRecentViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRecentViewControllers:");
}

id objc_msgSend__setRequestActive_(void *a1, const char *a2, ...)
{
  return [_a1 _setRequestActive:];
}

id objc_msgSend__setRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setRequestOptions:");
}

id objc_msgSend__setServerUtterances_(void *a1, const char *a2, ...)
{
  return [a1 _setServerUtterances:];
}

id objc_msgSend__setShouldScaleDownBehindDescendantSheets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShouldScaleDownBehindDescendantSheets:");
}

id objc_msgSend__setShowKeyboardIfTextInputEnabled_(void *a1, const char *a2, ...)
{
  return [a1 _setShowKeyboardIfTextInputEnabled:];
}

id objc_msgSend__setShowKeyboardIfTextInputEnabled_minimized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShowKeyboardIfTextInputEnabled:minimized:");
}

id objc_msgSend__setShowingCancelButton_animated_(void *a1, const char *a2, ...)
{
  return [_a1 _setShowingCancelButton:animated:];
}

id objc_msgSend__setSmartDialogConversationSnippetViews_withCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSmartDialogConversationSnippetViews:withCompletionBlock:");
}

id objc_msgSend__setSpeechRecognitionHypothesis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSpeechRecognitionHypothesis:");
}

id objc_msgSend__setStartRequestAceCommandSent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setStartRequestAceCommandSent:");
}

id objc_msgSend__setTextView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTextView:");
}

id objc_msgSend__setUpConversationContinuerSuggestions_forRequestId_currentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUpConversationContinuerSuggestions:forRequestId:currentMode:");
}

id objc_msgSend__setUpIcons(void *a1, const char *a2, ...)
{
  return _[a1 _setUpIcons];
}

id objc_msgSend__setUserUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUserUtterance:");
}

id objc_msgSend__setUserUtteranceTapToEditInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUserUtteranceTapToEditInProgress:");
}

id objc_msgSend__setUtteranceToSpeakAfterClearScreenCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setUtteranceToSpeakAfterClearScreenCommand:");
}

id objc_msgSend__setWaitingForStartRequest_(void *a1, const char *a2, ...)
{
  return [a1 _setWaitingForStartRequest:];
}

id objc_msgSend__setWasSiriIdleAndQuiet_(void *a1, const char *a2, ...)
{
  return [_a1 _setWasSiriIdleAndQuiet:];
}

id objc_msgSend__setWindowInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setWindowInterfaceOrientation:");
}

id objc_msgSend__setupAlternativesTableView(void *a1, const char *a2, ...)
{
  return _[a1 _setupAlternativesTableView];
}

id objc_msgSend__setupBugReportingPresenterIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _setupBugReportingPresenterIfNecessary];
}

id objc_msgSend__setupConstraints(void *a1, const char *a2, ...)
{
  return _[a1 _setupConstraints];
}

id objc_msgSend__setupTextView(void *a1, const char *a2, ...)
{
  return _[a1 _setupTextView];
}

id objc_msgSend__setupXPCListener(void *a1, const char *a2, ...)
{
  return _[a1 _setupXPCListener];
}

id objc_msgSend__sharePatternIdFromAddViewsCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sharePatternIdFromAddViewsCommand:");
}

id objc_msgSend__shouldLowerKeyboardForAddViewsCommand_(void *a1, const char *a2, ...)
{
  return [a1 _shouldLowerKeyboardForAddViewsCommand];
}

id objc_msgSend__shouldMoveViewStackForTapToEdit(void *a1, const char *a2, ...)
{
  return _[a1 _shouldMoveViewStackForTapToEdit];
}

id objc_msgSend__shouldRenderResult(void *a1, const char *a2, ...)
{
  return _[a1 _shouldRenderResult];
}

id objc_msgSend__shouldScaleDownBehindDescendantSheets(void *a1, const char *a2, ...)
{
  return _[a1 _shouldScaleDownBehindDescendantSheets];
}

id objc_msgSend__shouldShowAlternativesTableView(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowAlternativesTableView];
}

id objc_msgSend__shouldShowCancelButton(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowCancelButton];
}

id objc_msgSend__shouldShowDownloadAssetsNotificationPrompt(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowDownloadAssetsNotificationPrompt];
}

id objc_msgSend__shouldShowTip(void *a1, const char *a2, ...)
{
  return _[a1 _shouldShowTip];
}

id objc_msgSend__shouldTransformLegacyAddViews(void *a1, const char *a2, ...)
{
  return _[a1 _shouldTransformLegacyAddViews];
}

id objc_msgSend__showFullScreenDimmingLayer(void *a1, const char *a2, ...)
{
  return _[a1 _showFullScreenDimmingLayer];
}

id objc_msgSend__showHeaderText_subheaderText_largeSubheaderText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showHeaderText:subheaderText:largeSubheaderText:");
}

id objc_msgSend__showsCategoriesForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showsCategoriesForSection:");
}

id objc_msgSend__siriIsShowingPasscodeUnlock(void *a1, const char *a2, ...)
{
  return _[a1 _siriIsShowingPasscodeUnlock];
}

id objc_msgSend__siriPresentation_speakTextForConversationItemIdentifier_delayed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriPresentation:speakTextForConversationItemIdentifier:delayed:");
}

id objc_msgSend__siriPresentation_speakTextForConversationItemIdentifierDidBecomeReady_(void *a1, const char *a2, ...)
{
  return [a1 _siriPresentation:speakTextForConversationItemIdentifierDidBecomeReady:];
}

id objc_msgSend__siriPresentationPluginBundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_siriPresentationPluginBundleWithIdentifier:");
}

id objc_msgSend__siriState(void *a1, const char *a2, ...)
{
  return _[a1 _siriState];
}

id objc_msgSend__siriUnavailableViewController(void *a1, const char *a2, ...)
{
  return _[a1 _siriUnavailableViewController];
}

id objc_msgSend__siriUnvailableNotificationRequest(void *a1, const char *a2, ...)
{
  return _[a1 _siriUnvailableNotificationRequest];
}

id objc_msgSend__smartDialogSnippetLayoutDidUpdateForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_smartDialogSnippetLayoutDidUpdateForView:");
}

id objc_msgSend__snippetContainerViewOfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_snippetContainerViewOfView:");
}

id objc_msgSend__snippetFromTranscriptItems(void *a1, const char *a2, ...)
{
  return _[a1 _snippetFromTranscriptItems];
}

id objc_msgSend__snippetViewControllerRequestsStatusViewHidden(void *a1, const char *a2, ...)
{
  return _[a1 _snippetViewControllerRequestsStatusViewHidden];
}

id objc_msgSend__speakEnqueuedSpokenSuggestion(void *a1, const char *a2, ...)
{
  return _[a1 _speakEnqueuedSpokenSuggestion];
}

id objc_msgSend__speakText_audioData_ignoreMuteSwitch_identifier_sessionId_preferredVoice_language_gender_provisionally_eligibleAfterDuration_delayed_canUseServerTTS_speakableUtteranceParser_analyticsContext_speakableContextInfo_preparation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speakText:audioData:ignoreMuteSwitch:identifier:sessionId:preferredVoice:language:gender:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:speakableContextInfo:preparation:completion:");
}

id objc_msgSend__speakText_identifier_sessionId_preferredVoice_provisionally_eligibleAfterDuration_delayed_canUseServerTTS_speakableUtteranceParser_analyticsContext_speakableContextInfo_preparation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speakText:identifier:sessionId:preferredVoice:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:speakableUtteranceParser:analyticsContext:speakableContextInfo:preparation:completion:");
}

id objc_msgSend__speakableTextForDialog_mode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_speakableTextForDialog:mode:");
}

id objc_msgSend__speechIdentifierForConversationItem_(void *a1, const char *a2, ...)
{
  return [a1 _speechIdentifierForConversationItem:];
}

id objc_msgSend__speechRecognitionHypothesis(void *a1, const char *a2, ...)
{
  return _[a1 _speechRecognitionHypothesis];
}

id objc_msgSend__splitVisualResponse_forVisualResponseSnippet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_splitVisualResponse:forVisualResponseSnippet:");
}

id objc_msgSend__sr_playerForHighResolutionPlayback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sr_playerForHighResolutionPlayback:");
}

id objc_msgSend__startAutoDismissalIfNeededGivenSiriIsAttending_(void *a1, const char *a2, ...)
{
  return [a1 _startAutoDismissalIfNeededGivenSiriIsAttending:];
}

id objc_msgSend__startButtonPressAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startButtonPressAwarenessClient:");
}

id objc_msgSend__startFaceAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return [a1 _startFaceAttentionAwarenessClient];
}

id objc_msgSend__startListenAfterSpeaking(void *a1, const char *a2, ...)
{
  return _[a1 _startListenAfterSpeaking];
}

id objc_msgSend__startListenAfterSpeakingRequest(void *a1, const char *a2, ...)
{
  return _[a1 _startListenAfterSpeakingRequest];
}

id objc_msgSend__startNewConversation(void *a1, const char *a2, ...)
{
  return _[a1 _startNewConversation];
}

id objc_msgSend__startRequestWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startRequestWithOptions:");
}

id objc_msgSend__startScrollingWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startScrollingWithOptions:");
}

id objc_msgSend__startTouchAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startTouchAttentionAwarenessClient:");
}

id objc_msgSend__startUserAttentionControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _startUserAttentionControllerIfNeeded];
}

id objc_msgSend__startUserAttentionControllerIfNeededForTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startUserAttentionControllerIfNeededForTypes:");
}

id objc_msgSend__startWakeGestureManagerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _startWakeGestureManagerIfNeeded];
}

id objc_msgSend__stopButtonPressAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopButtonPressAttentionAwarenessClient:");
}

id objc_msgSend__stopFaceAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopFaceAttentionAwarenessClient:");
}

id objc_msgSend__stopTouchAttentionAwarenessClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopTouchAttentionAwarenessClient:");
}

id objc_msgSend__stopUserAttentionControllerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _stopUserAttentionControllerIfNeeded];
}

id objc_msgSend__stopUserAttentionControllerIfNeededAfterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stopUserAttentionControllerIfNeededAfterDelay:");
}

id objc_msgSend__stopWakeGestureManagerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _stopWakeGestureManagerIfNeeded];
}

id objc_msgSend__streamingTextMaxYToTapToEditOriginDistance(void *a1, const char *a2, ...)
{
  return _[a1 _streamingTextMaxYToTapToEditOriginDistance];
}

id objc_msgSend__styledViews(void *a1, const char *a2, ...)
{
  return _[a1 _styledViews];
}

id objc_msgSend__suggestionsButton(void *a1, const char *a2, ...)
{
  return _[a1 _suggestionsButton];
}

id objc_msgSend__suggestionsWereShown(void *a1, const char *a2, ...)
{
  return _[a1 _suggestionsWereShown];
}

id objc_msgSend__supportsMitigationOnSource_(void *a1, const char *a2, ...)
{
  return [a1 _supportsMitigationOnSource:];
}

id objc_msgSend__suppressTTSForErrorsAndInterstitials(void *a1, const char *a2, ...)
{
  return _[a1 _suppressTTSForErrorsAndInterstitials];
}

id objc_msgSend__synchronizedDrawingFence(void *a1, const char *a2, ...)
{
  return _[a1 _synchronizedDrawingFence];
}

id objc_msgSend__synthesizePhoneticText_identifier_sessionId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synthesizePhoneticText:identifier:sessionId:completion:");
}

id objc_msgSend__synthesizeSpeechWithText_(void *a1, const char *a2, ...)
{
  return [a1 _synthesizeSpeechWithText:];
}

id objc_msgSend__synthesizeText_identifier_sessionId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_synthesizeText:identifier:sessionId:completion:");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 _systemImageNamed:];
}

id objc_msgSend__systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 _systemImageNamed:withConfiguration:];
}

id objc_msgSend__tagPhraseLabelFont(void *a1, const char *a2, ...)
{
  return _[a1 _tagPhraseLabelFont];
}

id objc_msgSend__teardownTypeToSiriUI(void *a1, const char *a2, ...)
{
  return _[a1 _teardownTypeToSiriUI];
}

id objc_msgSend__testDidReceiveAceCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_testDidReceiveAceCommand:completion:");
}

id objc_msgSend__textField(void *a1, const char *a2, ...)
{
  return _[a1 _textField];
}

id objc_msgSend__textRectForBounds_alignment_layingOutContentRightToLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textRectForBounds:alignment:layingOutContentRightToLeft:");
}

id objc_msgSend__textRequestView(void *a1, const char *a2, ...)
{
  return _[a1 _textRequestView];
}

id objc_msgSend__textRequestViewController(void *a1, const char *a2, ...)
{
  return _[a1 _textRequestViewController];
}

id objc_msgSend__textView(void *a1, const char *a2, ...)
{
  return _[a1 _textView];
}

id objc_msgSend__titleForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_titleForSection:");
}

id objc_msgSend__toPlatteredCardViewGivenToViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_toPlatteredCardViewGivenToViewController:");
}

id objc_msgSend__touchAttentionAwarenessEventMask(void *a1, const char *a2, ...)
{
  return _[a1 _touchAttentionAwarenessEventMask];
}

id objc_msgSend__trailingHorizontalOffsetWithLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 _trailingHorizontalOffsetWithLayoutMargins:];
}

id objc_msgSend__transformDialogAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transformDialogAddViews:forMode:");
}

id objc_msgSend__transformLegacyAddViews_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transformLegacyAddViews:forMode:");
}

id objc_msgSend__transitionDurationForOperation_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionDurationForOperation:context:");
}

id objc_msgSend__transitionWithContext_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_transitionWithContext:animated:completion:");
}

id objc_msgSend__trimFinalSmartDialogs(void *a1, const char *a2, ...)
{
  return _[a1 _trimFinalSmartDialogs];
}

id objc_msgSend__typeOfAddViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_typeOfAddViews:");
}

id objc_msgSend__uiPresentationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 _uiPresentationIdentifier];
}

id objc_msgSend__updateActiveTranscriptItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateActiveTranscriptItems:");
}

id objc_msgSend__updateAdditionalSafeAreaInsetsForNavigationContentViewController_(void *a1, const char *a2, ...)
{
  return [a1 _updateAdditionalSafeAreaInsetsForNavigationContentViewController:];
}

id objc_msgSend__updateAmbientAvailability(void *a1, const char *a2, ...)
{
  return _[a1 _updateAmbientAvailability];
}

id objc_msgSend__updateBlurVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateBlurVisibility];
}

id objc_msgSend__updateBorderVisualStyling(void *a1, const char *a2, ...)
{
  return _[a1 _updateBorderVisualStyling];
}

id objc_msgSend__updateCancelButtonFont(void *a1, const char *a2, ...)
{
  return _[a1 _updateCancelButtonFont];
}

id objc_msgSend__updateCompactViewSize(void *a1, const char *a2, ...)
{
  return _[a1 _updateCompactViewSize];
}

id objc_msgSend__updateDeferral(void *a1, const char *a2, ...)
{
  return _[a1 _updateDeferral];
}

id objc_msgSend__updateHomeAffordanceVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateHomeAffordanceVisibility];
}

id objc_msgSend__updateKeyboardState_minimized_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateKeyboardState:minimized:");
}

id objc_msgSend__updateKeyboardStateWithError_(void *a1, const char *a2, ...)
{
  return [a1 _updateKeyboardStateWithError:];
}

id objc_msgSend__updateKeyboardStatusForAddViewsCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateKeyboardStatusForAddViewsCommand:");
}

id objc_msgSend__updateLanguageCode(void *a1, const char *a2, ...)
{
  return _[a1 _updateLanguageCode];
}

id objc_msgSend__updatePresentationForVisualIntelligenceCameraIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _updatePresentationForVisualIntelligenceCameraIfNeeded];
}

id objc_msgSend__updateSAEViewSize(void *a1, const char *a2, ...)
{
  return _[a1 _updateSAEViewSize];
}

id objc_msgSend__updateStyleForAccessoryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateStyleForAccessoryView:");
}

id objc_msgSend__updateStyleForClearButton(void *a1, const char *a2, ...)
{
  return _[a1 _updateStyleForClearButton];
}

id objc_msgSend__updateStyleForLeftView(void *a1, const char *a2, ...)
{
  return _[a1 _updateStyleForLeftView];
}

id objc_msgSend__updateStyleForPlaceholderView(void *a1, const char *a2, ...)
{
  return _[a1 _updateStyleForPlaceholderView];
}

id objc_msgSend__updateStyleForRightView(void *a1, const char *a2, ...)
{
  return _[a1 _updateStyleForRightView];
}

id objc_msgSend__updateTextAlignmentForEditing_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateTextAlignmentForEditing:animated:");
}

id objc_msgSend__updateTextRequestViewVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateTextRequestViewVisibility];
}

id objc_msgSend__updateViewWithChangeUtteranceIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateViewWithChangeUtteranceIfNeeded:");
}

id objc_msgSend__updateViewWithUserUtterance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateViewWithUserUtterance:");
}

id objc_msgSend__updateVisualStyling(void *a1, const char *a2, ...)
{
  return _[a1 _updateVisualStyling];
}

id objc_msgSend__userNotificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 _userNotificationCenter];
}

id objc_msgSend__userUtterance(void *a1, const char *a2, ...)
{
  return _[a1 _userUtterance];
}

id objc_msgSend__usesDefaultNavigationBar(void *a1, const char *a2, ...)
{
  return _[a1 _usesDefaultNavigationBar];
}

id objc_msgSend__usesEventDrivenIdleAndQuietUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _usesEventDrivenIdleAndQuietUpdates];
}

id objc_msgSend__utteranceToSpeakAfterClearScreenCommand(void *a1, const char *a2, ...)
{
  return _[a1 _utteranceToSpeakAfterClearScreenCommand];
}

id objc_msgSend__utteranceViewForDialog_mode_printedOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_utteranceViewForDialog:mode:printedOnly:");
}

id objc_msgSend__utterancesForSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_utterancesForSection:");
}

id objc_msgSend__verifyAndSyncTrialExperiments(void *a1, const char *a2, ...)
{
  return _[a1 _verifyAndSyncTrialExperiments];
}

id objc_msgSend__viewModeFromPresentationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewModeFromPresentationOptions:");
}

id objc_msgSend__viewStackContainerController(void *a1, const char *a2, ...)
{
  return _[a1 _viewStackContainerController];
}

id objc_msgSend__voicemailPlayer(void *a1, const char *a2, ...)
{
  return _[a1 _voicemailPlayer];
}

id objc_msgSend__wasSiriIdleAndQuiet(void *a1, const char *a2, ...)
{
  return _[a1 _wasSiriIdleAndQuiet];
}

id objc_msgSend__windowInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 _windowInterfaceOrientation];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_ac_isBluetoothVehicle(void *a1, const char *a2, ...)
{
  return [a1 ac_isBluetoothVehicle];
}

id objc_msgSend_ac_isEyesFree(void *a1, const char *a2, ...)
{
  return [a1 ac_isEyesFree];
}

id objc_msgSend_accessibilityContrast(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityContrast];
}

id objc_msgSend_aceAudioData(void *a1, const char *a2, ...)
{
  return _[a1 aceAudioData];
}

id objc_msgSend_aceCommandIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 aceCommandIdentifier];
}

id objc_msgSend_aceCommandWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 aceCommandWithIdentifier:];
}

id objc_msgSend_aceDialogPhaseValue(void *a1, const char *a2, ...)
{
  return _[a1 aceDialogPhaseValue];
}

id objc_msgSend_aceDisplayColorGamut(void *a1, const char *a2, ...)
{
  return _[a1 aceDisplayColorGamut];
}

id objc_msgSend_aceDisplayColorScheme(void *a1, const char *a2, ...)
{
  return _[a1 aceDisplayColorScheme];
}

id objc_msgSend_aceDisplayContrast(void *a1, const char *a2, ...)
{
  return _[a1 aceDisplayContrast];
}

id objc_msgSend_aceDynamicTypeSize(void *a1, const char *a2, ...)
{
  return _[a1 aceDynamicTypeSize];
}

id objc_msgSend_aceId(void *a1, const char *a2, ...)
{
  return _[a1 aceId];
}

id objc_msgSend_aceObject(void *a1, const char *a2, ...)
{
  return _[a1 aceObject];
}

id objc_msgSend_aceObjectWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 aceObjectWithDictionary:];
}

id objc_msgSend_aceTextLegibilityWeight(void *a1, const char *a2, ...)
{
  return _[a1 aceTextLegibilityWeight];
}

id objc_msgSend_acousticIDRequestDidFinishWithSuccess_(void *a1, const char *a2, ...)
{
  return [a1 acousticIDRequestDidFinishWithSuccess:];
}

id objc_msgSend_acousticIDRequestDidStart(void *a1, const char *a2, ...)
{
  return _[a1 acousticIDRequestDidStart];
}

id objc_msgSend_acousticIdEnabled(void *a1, const char *a2, ...)
{
  return _[a1 acousticIdEnabled];
}

id objc_msgSend_actionWithIdentifier_title_options_(void *a1, const char *a2, ...)
{
  return [a1 actionWithIdentifier:title:options:];
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithTitle:image:identifier:handler:];
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _[a1 activate];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 activateConstraints:];
}

id objc_msgSend_activationEvent(void *a1, const char *a2, ...)
{
  return _[a1 activationEvent];
}

id objc_msgSend_activationRequestFromSimpleActivation_(void *a1, const char *a2, ...)
{
  return [a1 activationRequestFromSimpleActivation:];
}

id objc_msgSend_activeConversationTranscriptItems(void *a1, const char *a2, ...)
{
  return _[a1 activeConversationTranscriptItems];
}

id objc_msgSend_activeInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 activeInterfaceOrientation];
}

id objc_msgSend_activeKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 activeKeyboard];
}

id objc_msgSend_activeRequestOptions(void *a1, const char *a2, ...)
{
  return _[a1 activeRequestOptions];
}

id objc_msgSend_activeRequestOptionsDidChange(void *a1, const char *a2, ...)
{
  return _[a1 activeRequestOptionsDidChange];
}

id objc_msgSend_activeRequestOptionsForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 activeRequestOptionsForSiriPresentation:];
}

id objc_msgSend_activeSmartDialogIsLatencyPill(void *a1, const char *a2, ...)
{
  return _[a1 activeSmartDialogIsLatencyPill];
}

id objc_msgSend_activeSmartDialogView(void *a1, const char *a2, ...)
{
  return _[a1 activeSmartDialogView];
}

id objc_msgSend_activeViewModelController(void *a1, const char *a2, ...)
{
  return _[a1 activeViewModelController];
}

id objc_msgSend_addAdditionalCoordinationController_(void *a1, const char *a2, ...)
{
  return [a1 addAdditionalCoordinationController:];
}

id objc_msgSend_addAdditionalSpeechInterpretation_refId_(void *a1, const char *a2, ...)
{
  return [a1 addAdditionalSpeechInterpretation:refId:];
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return [a1 addAnimation:forKey:];
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttribute:value:range:];
}

id objc_msgSend_addCacheableObject_(void *a1, const char *a2, ...)
{
  return [a1 addCacheableObject:];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 addChildViewController:];
}

id objc_msgSend_addCompletion_(void *a1, const char *a2, ...)
{
  return [a1 addCompletion:];
}

id objc_msgSend_addConstraint_(void *a1, const char *a2, ...)
{
  return [a1 addConstraint:];
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return [a1 addConstraints:];
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addEntriesFromDictionary:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addItemForMusicStartSessionCommand_(void *a1, const char *a2, ...)
{
  return [a1 addItemForMusicStartSessionCommand:];
}

id objc_msgSend_addItemForPartialResultCommand_(void *a1, const char *a2, ...)
{
  return [a1 addItemForPartialResultCommand:];
}

id objc_msgSend_addItemForSpeechRecognizedCommand_(void *a1, const char *a2, ...)
{
  return [a1 addItemForSpeechRecognizedCommand];
}

id objc_msgSend_addItemsForAddViewsCommand_(void *a1, const char *a2, ...)
{
  return [a1 addItemsForAddViewsCommand:];
}

id objc_msgSend_addItemsForShowHelpCommand_(void *a1, const char *a2, ...)
{
  return [a1 addItemsForShowHelpCommand:];
}

id objc_msgSend_addNotificationRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 addNotificationRequest:withCompletionHandler:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 addOperationWithBlock:];
}

id objc_msgSend_addRecognitionUpdateWithPhrases_utterances_refId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRecognitionUpdateWithPhrases:utterances:refId:");
}

id objc_msgSend_addReplayControlTo_(void *a1, const char *a2, ...)
{
  return [a1 addReplayControlTo:];
}

id objc_msgSend_addSelectionResponse_(void *a1, const char *a2, ...)
{
  return [a1 addSelectionResponse:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:action:forControlEvents:];
}

id objc_msgSend_addViews(void *a1, const char *a2, ...)
{
  return _[a1 addViews];
}

id objc_msgSend_additionalContentViewPlatterCategories(void *a1, const char *a2, ...)
{
  return _[a1 additionalContentViewPlatterCategories];
}

id objc_msgSend_additionalContentViews(void *a1, const char *a2, ...)
{
  return _[a1 additionalContentViews];
}

id objc_msgSend_additionalPlatterTranscriptItems(void *a1, const char *a2, ...)
{
  return _[a1 additionalPlatterTranscriptItems];
}

id objc_msgSend_additionalSpeechInterpretationsForRefId_(void *a1, const char *a2, ...)
{
  return [a1 additionalSpeechInterpretationsForRefId:];
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _[a1 address];
}

id objc_msgSend_af_bestTextInterpretation(void *a1, const char *a2, ...)
{
  return [a1 af_bestTextInterpretation];
}

id objc_msgSend_af_dialogPhase(void *a1, const char *a2, ...)
{
  return [a1 af_dialogPhase];
}

id objc_msgSend_af_userUtteranceValue(void *a1, const char *a2, ...)
{
  return [a1 af_userUtteranceValue];
}

id objc_msgSend_af_userUtteranceValueWithRefId_sessionId_(void *a1, const char *a2, ...)
{
  return [a1 af_userUtteranceValueWithRefId:sessionId:];
}

id objc_msgSend_afui_assistantUIFrameworkBundle(void *a1, const char *a2, ...)
{
  return [a1 afui_assistantUIFrameworkBundle];
}

id objc_msgSend_afui_getInstallAppPunchoutWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afui_getInstallAppPunchoutWithCompletion:");
}

id objc_msgSend_afui_hasContentEqualTo_(void *a1, const char *a2, ...)
{
  return [a1 afui_hasContentEqualTo:];
}

id objc_msgSend_afui_isRemoteHeadsetActivation(void *a1, const char *a2, ...)
{
  return [a1 afui_isRemoteHeadsetActivation];
}

id objc_msgSend_afui_isTVFollowUpHearstActivation(void *a1, const char *a2, ...)
{
  return [a1 afui_isTVFollowUpHearstActivation];
}

id objc_msgSend_afui_populateStoreServicesData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afui_populateStoreServicesData:");
}

id objc_msgSend_afui_punchOutAppNotAvailableViews(void *a1, const char *a2, ...)
{
  return [a1 afui_punchOutAppNotAvailableViews];
}

id objc_msgSend_afui_punchOutFailureViews(void *a1, const char *a2, ...)
{
  return [a1 afui_punchOutFailureViews];
}

id objc_msgSend_alertWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 alertWithConfiguration:];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allPhrases(void *a1, const char *a2, ...)
{
  return _[a1 allPhrases];
}

id objc_msgSend_allRecognitionStringsAndScores(void *a1, const char *a2, ...)
{
  return _[a1 allRecognitionStringsAndScores];
}

id objc_msgSend_allWindowsIncludingInternalWindows_onlyVisibleWindows_(void *a1, const char *a2, ...)
{
  return [a1 allWindowsIncludingInternalWindows:onlyVisibleWindows:];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return [a1 allocWithZone:];
}

id objc_msgSend_allowsCancellation(void *a1, const char *a2, ...)
{
  return _[a1 allowsCancellation];
}

id objc_msgSend_alternativePunchOut(void *a1, const char *a2, ...)
{
  return _[a1 alternativePunchOut];
}

id objc_msgSend_alwaysObscureBackgroundContentWhenActive(void *a1, const char *a2, ...)
{
  return _[a1 alwaysObscureBackgroundContentWhenActive];
}

id objc_msgSend_alwaysShowRecognizedSpeech(void *a1, const char *a2, ...)
{
  return _[a1 alwaysShowRecognizedSpeech];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateAlongsideTransition:completion:];
}

id objc_msgSend_animateAppearanceIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 animateAppearanceIfNeeded];
}

id objc_msgSend_animateDrillInTransitionWithContext_(void *a1, const char *a2, ...)
{
  return [a1 animateDrillInTransitionWithContext:];
}

id objc_msgSend_animateOutTextFieldAndButton_(void *a1, const char *a2, ...)
{
  return [a1 animateOutTextFieldAndButton:];
}

id objc_msgSend_animateOutWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 animateOutWithCompletion:];
}

id objc_msgSend_animatePopToRootViewControllerWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animatePopToRootViewControllerWithContext:");
}

id objc_msgSend_animateToDisplayWithDuration_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateToDisplayWithDuration:completion:];
}

id objc_msgSend_animateToEditWithDuration_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateToEditWithDuration:completion:];
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:];
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:animations:completion:];
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:delay:options:animations:completion:];
}

id objc_msgSend_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:");
}

id objc_msgSend_animatedDisappearanceDidBeginWithDuration_reason_(void *a1, const char *a2, ...)
{
  return [a1 animatedDisappearanceDidBeginWithDuration:reason:];
}

id objc_msgSend_animatingBackgroundView(void *a1, const char *a2, ...)
{
  return _[a1 animatingBackgroundView];
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return _[a1 animation];
}

id objc_msgSend_animationDuration(void *a1, const char *a2, ...)
{
  return _[a1 animationDuration];
}

id objc_msgSend_animationOptions(void *a1, const char *a2, ...)
{
  return _[a1 animationOptions];
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 animationWithKeyPath:];
}

id objc_msgSend_appAvailableInStorefront(void *a1, const char *a2, ...)
{
  return _[a1 appAvailableInStorefront];
}

id objc_msgSend_appBundleId(void *a1, const char *a2, ...)
{
  return _[a1 appBundleId];
}

id objc_msgSend_appDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 appDisplayName];
}

id objc_msgSend_appIcon(void *a1, const char *a2, ...)
{
  return _[a1 appIcon];
}

id objc_msgSend_appId(void *a1, const char *a2, ...)
{
  return _[a1 appId];
}

id objc_msgSend_appPunchOut(void *a1, const char *a2, ...)
{
  return _[a1 appPunchOut];
}

id objc_msgSend_appPunchOutButton(void *a1, const char *a2, ...)
{
  return _[a1 appPunchOutButton];
}

id objc_msgSend_appRequiresPreflightWithAppBundleId_(void *a1, const char *a2, ...)
{
  return [a1 appRequiresPreflightWithAppBundleId:];
}

id objc_msgSend_appWindow(void *a1, const char *a2, ...)
{
  return _[a1 appWindow];
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 appendAttributedString:];
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return [a1 appendFormat:];
}

id objc_msgSend_appendSeparatorToViewControllers_forNextViewController_(void *a1, const char *a2, ...)
{
  return [a1 appendSeparatorToViewControllers:forNextViewController:];
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return [a1 appendString:];
}

id objc_msgSend_applicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 applicationBundleIdentifier];
}

id objc_msgSend_applicationWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 applicationWithBundleIdentifier:];
}

id objc_msgSend_applyDestOverFilter_(void *a1, const char *a2, ...)
{
  return [a1 applyDestOverFilter:];
}

id objc_msgSend_applyInfo_(void *a1, const char *a2, ...)
{
  return [a1 applyInfo:];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObjectsFromArray:];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _[a1 ascender];
}

id objc_msgSend_assetsDownloading(void *a1, const char *a2, ...)
{
  return _[a1 assetsDownloading];
}

id objc_msgSend_assetsNeedSpace(void *a1, const char *a2, ...)
{
  return _[a1 assetsNeedSpace];
}

id objc_msgSend_assistantIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 assistantIsEnabled];
}

id objc_msgSend_assistantUILocalizedStringForKey_table_(void *a1, const char *a2, ...)
{
  return [a1 assistantUILocalizedStringForKey:table:];
}

id objc_msgSend_attachmentURLForExpression_(void *a1, const char *a2, ...)
{
  return [a1 attachmentURLForExpression:];
}

id objc_msgSend_attemptedToSaveConversation_withResult_(void *a1, const char *a2, ...)
{
  return [a1 attemptedToSaveConversation:withResult:];
}

id objc_msgSend_attribute_atIndex_effectiveRange_(void *a1, const char *a2, ...)
{
  return [a1 attribute:atIndex:effectiveRange:];
}

id objc_msgSend_attributeForKey_(void *a1, const char *a2, ...)
{
  return [a1 attributeForKey:];
}

id objc_msgSend_attributedStringAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 attributedStringAtIndex:];
}

id objc_msgSend_attributedText(void *a1, const char *a2, ...)
{
  return _[a1 attributedText];
}

id objc_msgSend_audioBuffer(void *a1, const char *a2, ...)
{
  return _[a1 audioBuffer];
}

id objc_msgSend_audioData(void *a1, const char *a2, ...)
{
  return _[a1 audioData];
}

id objc_msgSend_audioDuration(void *a1, const char *a2, ...)
{
  return _[a1 audioDuration];
}

id objc_msgSend_audioMessagePlayer(void *a1, const char *a2, ...)
{
  return _[a1 audioMessagePlayer];
}

id objc_msgSend_audioPlayer_didFinishPlayback_(void *a1, const char *a2, ...)
{
  return [a1 audioPlayer:didFinishPlayback:];
}

id objc_msgSend_authenticateForSubject_relayingAuditToken_completion_(void *a1, const char *a2, ...)
{
  return [a1 authenticateForSubject:relayingAuditToken:completion:];
}

id objc_msgSend_autoDismissControllerRequestsDismissal_(void *a1, const char *a2, ...)
{
  return [a1 autoDismissControllerRequestsDismissal:];
}

id objc_msgSend_autoDismissalExtendedIdleTimeout(void *a1, const char *a2, ...)
{
  return _[a1 autoDismissalExtendedIdleTimeout];
}

id objc_msgSend_autoDismissalIdleTimeout(void *a1, const char *a2, ...)
{
  return _[a1 autoDismissalIdleTimeout];
}

id objc_msgSend_autoDismissalMaxAttentionSamplingTime(void *a1, const char *a2, ...)
{
  return _[a1 autoDismissalMaxAttentionSamplingTime];
}

id objc_msgSend_autoDismissalReason(void *a1, const char *a2, ...)
{
  return _[a1 autoDismissalReason];
}

id objc_msgSend_automaticallyUpdateView_withStyle_(void *a1, const char *a2, ...)
{
  return [a1 automaticallyUpdateView:withStyle:];
}

id objc_msgSend_availabilityState(void *a1, const char *a2, ...)
{
  return _[a1 availabilityState];
}

id objc_msgSend_availableDevices(void *a1, const char *a2, ...)
{
  return _[a1 availableDevices];
}

id objc_msgSend_backgroundBlurViewController(void *a1, const char *a2, ...)
{
  return _[a1 backgroundBlurViewController];
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 backgroundColor];
}

id objc_msgSend_backgroundPlatteredCardView(void *a1, const char *a2, ...)
{
  return _[a1 backgroundPlatteredCardView];
}

id objc_msgSend_backgroundPlatteredCardViewOriginalFrame(void *a1, const char *a2, ...)
{
  return _[a1 backgroundPlatteredCardViewOriginalFrame];
}

id objc_msgSend_backingAceObject(void *a1, const char *a2, ...)
{
  return _[a1 backingAceObject];
}

id objc_msgSend_backingCard(void *a1, const char *a2, ...)
{
  return _[a1 backingCard];
}

id objc_msgSend_backingStore(void *a1, const char *a2, ...)
{
  return _[a1 backingStore];
}

id objc_msgSend_baselineOffsetFromBottom(void *a1, const char *a2, ...)
{
  return _[a1 baselineOffsetFromBottom];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_beginBackgroundTaskWithExpirationHandler_(void *a1, const char *a2, ...)
{
  return [a1 beginBackgroundTaskWithExpirationHandler:];
}

id objc_msgSend_beginEditing(void *a1, const char *a2, ...)
{
  return _[a1 beginEditing];
}

id objc_msgSend_beginningOfDocument(void *a1, const char *a2, ...)
{
  return _[a1 beginningOfDocument];
}

id objc_msgSend_behaviorWithDampingRatio_response_(void *a1, const char *a2, ...)
{
  return [a1 behaviorWithDampingRatio:response:];
}

id objc_msgSend_bestSupportedLanguageCodeForLanguageCode_(void *a1, const char *a2, ...)
{
  return [a1 bestSupportedLanguageCodeForLanguageCode:];
}

id objc_msgSend_bestTextInterpretation(void *a1, const char *a2, ...)
{
  return _[a1 bestTextInterpretation];
}

id objc_msgSend_bluetoothPreferredCarAudioRoute(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothPreferredCarAudioRoute];
}

id objc_msgSend_blurFromRootNavigationTransitionController_requestBackgroundBlurViewVisible_(void *a1, const char *a2, ...)
{
  return [a1 blurFromRootNavigationTransitionController:requestBackgroundBlurViewVisible:];
}

id objc_msgSend_blurFromRootNavigationTransitionController_requestHostBlurVisible_requestPresentationBlurVisible_(void *a1, const char *a2, ...)
{
  return [a1 blurFromRootNavigationTransitionController:requestHostBlurVisible:requestPresentationBlurVisible:];
}

id objc_msgSend_blurrableView(void *a1, const char *a2, ...)
{
  return _[a1 blurrableView];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return [a1 BOOLForKey:];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_BOOLValueForFactor_defaultValueIfNoFactorsFilePresent_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 BOOLValueForFactor:defaultValueIfNoFactorsFilePresent:withCompletionHandler:];
}

id objc_msgSend_boostQueuedMessagesAndPerformOnQueueCompletion_timeout_(void *a1, const char *a2, ...)
{
  return [a1 boostQueuedMessagesAndPerformOnQueueCompletion:timeout:];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return [a1 boundingRectWithSize:options:attributes:context:];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_broadcastCardSnippet_(void *a1, const char *a2, ...)
{
  return [a1 broadcastCardSnippet];
}

id objc_msgSend_broadcastVisualResponseSnippet_(void *a1, const char *a2, ...)
{
  return [a1 broadcastVisualResponseSnippet:];
}

id objc_msgSend_buildVersion(void *a1, const char *a2, ...)
{
  return _[a1 buildVersion];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return [a1 bundleForClass];
}

id objc_msgSend_bundleId(void *a1, const char *a2, ...)
{
  return _[a1 bundleId];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundleName(void *a1, const char *a2, ...)
{
  return _[a1 bundleName];
}

id objc_msgSend_bundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 bundleWithIdentifier:];
}

id objc_msgSend_bundleWithURL_(void *a1, const char *a2, ...)
{
  return [a1 bundleWithURL:];
}

id objc_msgSend_button(void *a1, const char *a2, ...)
{
  return _[a1 button];
}

id objc_msgSend_buttonDelegate(void *a1, const char *a2, ...)
{
  return _[a1 buttonDelegate];
}

id objc_msgSend_buttonPressAwarenessClient(void *a1, const char *a2, ...)
{
  return _[a1 buttonPressAwarenessClient];
}

id objc_msgSend_buttonWithImageTemplate_style_(void *a1, const char *a2, ...)
{
  return [a1 buttonWithImageTemplate:style:];
}

id objc_msgSend_buttonWithMediumWeightFont(void *a1, const char *a2, ...)
{
  return _[a1 buttonWithMediumWeightFont];
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return [a1 buttonWithType:];
}

id objc_msgSend_cachedGuideSnippet(void *a1, const char *a2, ...)
{
  return _[a1 cachedGuideSnippet];
}

id objc_msgSend_callCount(void *a1, const char *a2, ...)
{
  return _[a1 callCount];
}

id objc_msgSend_callTime(void *a1, const char *a2, ...)
{
  return _[a1 callTime];
}

id objc_msgSend_calls(void *a1, const char *a2, ...)
{
  return _[a1 calls];
}

id objc_msgSend_canBeRefreshed(void *a1, const char *a2, ...)
{
  return _[a1 canBeRefreshed];
}

id objc_msgSend_canBecomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 canBecomeFirstResponder];
}

id objc_msgSend_canPresentSurveyForContext_(void *a1, const char *a2, ...)
{
  return [a1 canPresentSurveyForContext:];
}

id objc_msgSend_canRelayoutSnippet(void *a1, const char *a2, ...)
{
  return _[a1 canRelayoutSnippet];
}

id objc_msgSend_canResignFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 canResignFirstResponder];
}

id objc_msgSend_canSaveConversations(void *a1, const char *a2, ...)
{
  return _[a1 canSaveConversations];
}

id objc_msgSend_canUseServerTTS(void *a1, const char *a2, ...)
{
  return _[a1 canUseServerTTS];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancelAutoDismissalForTouchOutsideOfSiri(void *a1, const char *a2, ...)
{
  return _[a1 cancelAutoDismissalForTouchOutsideOfSiri];
}

id objc_msgSend_cancelInteractiveTransition(void *a1, const char *a2, ...)
{
  return _[a1 cancelInteractiveTransition];
}

id objc_msgSend_cancelItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 cancelItemWithIdentifier];
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return [a1 cancelPreviousPerformRequestsWithTarget:nil selector:nil object:nil];
}

id objc_msgSend_cancelPrewarmForFirstTapOfQuickTypeToSiriGesture(void *a1, const char *a2, ...)
{
  return _[a1 cancelPrewarmForFirstTapOfQuickTypeToSiriGesture];
}

id objc_msgSend_cancelRequestForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 cancelRequestForSiriPresentation:];
}

id objc_msgSend_cancelRequestForViewController_(void *a1, const char *a2, ...)
{
  return [a1 cancelRequestForViewController:];
}

id objc_msgSend_cancelSpeechRequest(void *a1, const char *a2, ...)
{
  return _[a1 cancelSpeechRequest];
}

id objc_msgSend_cancellationReason(void *a1, const char *a2, ...)
{
  return _[a1 cancellationReason];
}

id objc_msgSend_caption(void *a1, const char *a2, ...)
{
  return _[a1 caption];
}

id objc_msgSend_cardData(void *a1, const char *a2, ...)
{
  return _[a1 cardData];
}

id objc_msgSend_cardSections(void *a1, const char *a2, ...)
{
  return _[a1 cardSections];
}

id objc_msgSend_cardSnippet(void *a1, const char *a2, ...)
{
  return _[a1 cardSnippet];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return [a1 caseInsensitiveCompare:];
}

id objc_msgSend_categoryWithIdentifier_actions_intentIdentifiers_options_(void *a1, const char *a2, ...)
{
  return [a1 categoryWithIdentifier:actions:intentIdentifiers:options:];
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _[a1 center];
}

id objc_msgSend_certSerial(void *a1, const char *a2, ...)
{
  return _[a1 certSerial];
}

id objc_msgSend_changeUtterance_(void *a1, const char *a2, ...)
{
  return [a1 changeUtterance:];
}

id objc_msgSend_checkAssetsWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 checkAssetsWithCompletion:];
}

id objc_msgSend_chevronHasBeenShown(void *a1, const char *a2, ...)
{
  return _[a1 chevronHasBeenShown];
}

id objc_msgSend_chevronTrailingMargin(void *a1, const char *a2, ...)
{
  return _[a1 chevronTrailingMargin];
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllers];
}

id objc_msgSend_classifiedAsUnintended(void *a1, const char *a2, ...)
{
  return _[a1 classifiedAsUnintended];
}

id objc_msgSend_classifyRequestAsUnintendedWithContext_(void *a1, const char *a2, ...)
{
  return [a1 classifyRequestAsUnintendedWithContext:];
}

id objc_msgSend_cleanupLoadingTransitionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 cleanupLoadingTransitionIfNeeded];
}

id objc_msgSend_cleanupResponseElementsByIds_(void *a1, const char *a2, ...)
{
  return [a1 cleanupResponseElementsByIds:];
}

id objc_msgSend_cleanupResultTransitionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 cleanupResultTransitionIfNeeded];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clearContext(void *a1, const char *a2, ...)
{
  return _[a1 clearContext];
}

id objc_msgSend_clearCurrentSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 clearCurrentSuggestions];
}

id objc_msgSend_clearResultViewAndBackground(void *a1, const char *a2, ...)
{
  return _[a1 clearResultViewAndBackground];
}

id objc_msgSend_closestPositionToPoint_(void *a1, const char *a2, ...)
{
  return [a1 closestPositionToPoint:];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collapseSystemUI(void *a1, const char *a2, ...)
{
  return _[a1 collapseSystemUI];
}

id objc_msgSend_collectionView(void *a1, const char *a2, ...)
{
  return _[a1 collectionView];
}

id objc_msgSend_collectionViewContentSize(void *a1, const char *a2, ...)
{
  return _[a1 collectionViewContentSize];
}

id objc_msgSend_collectionViewLayout(void *a1, const char *a2, ...)
{
  return _[a1 collectionViewLayout];
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithWhite:alpha:];
}

id objc_msgSend_combinedRank(void *a1, const char *a2, ...)
{
  return _[a1 combinedRank];
}

id objc_msgSend_combinedScore(void *a1, const char *a2, ...)
{
  return _[a1 combinedScore];
}

id objc_msgSend_commands(void *a1, const char *a2, ...)
{
  return _[a1 commands];
}

id objc_msgSend_compactResultView(void *a1, const char *a2, ...)
{
  return _[a1 compactResultView];
}

id objc_msgSend_compactResultViewController(void *a1, const char *a2, ...)
{
  return _[a1 compactResultViewController];
}

id objc_msgSend_compactViewController_handleStartLocalRequest_turnIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 compactViewController:handleStartLocalRequest:turnIdentifier:];
}

id objc_msgSend_compactViewController_preventOutsideTouchesFromDismissingSiri_(void *a1, const char *a2, ...)
{
  return [a1 compactViewController:preventOutsideTouchesFromDismissingSiri:];
}

id objc_msgSend_compactViewController_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 compactViewController:requestsKeyboardWithCompletion:];
}

id objc_msgSend_compactViewController_setStatusViewHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewController:setStatusViewHidden:");
}

id objc_msgSend_compactViewController_speakText_isPhonetic_completion_(void *a1, const char *a2, ...)
{
  return [a1 compactViewController:speakText:isPhonetic:completion:];
}

id objc_msgSend_compactViewController_viewDidAppearForAceObject_(void *a1, const char *a2, ...)
{
  return [a1 compactViewController:viewDidAppearForAceObject:];
}

id objc_msgSend_compactViewController_viewDidDisappearForAceObject_(void *a1, const char *a2, ...)
{
  return [a1 compactViewController:viewDidDisappearForAceObject:];
}

id objc_msgSend_compactViewController_willBeginEditingOfType_(void *a1, const char *a2, ...)
{
  return [a1 compactViewController:willBeginEditingOfType:];
}

id objc_msgSend_compactViewControllerCancelHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return [a1 compactViewControllerCancelHIDEventDefferal:];
}

id objc_msgSend_compactViewControllerDidEndEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactViewControllerDidEndEditing:");
}

id objc_msgSend_compactViewControllerRequestsHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return [a1 compactViewControllerRequestsHIDEventDefferal];
}

id objc_msgSend_compactViewHasContent(void *a1, const char *a2, ...)
{
  return _[a1 compactViewHasContent];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return [a1 compare:];
}

id objc_msgSend_completeTransition_(void *a1, const char *a2, ...)
{
  return [a1 completeTransition:];
}

id objc_msgSend_completionDialogPhase(void *a1, const char *a2, ...)
{
  return _[a1 completionDialogPhase];
}

id objc_msgSend_components_fromDate_toDate_options_(void *a1, const char *a2, ...)
{
  return [a1 components:fromDate:toDate:options:];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsJoinedByString:];
}

id objc_msgSend_computedModeForAceCommand_(void *a1, const char *a2, ...)
{
  return [a1 computedModeForAceCommand:];
}

id objc_msgSend_computedModeForRefId_(void *a1, const char *a2, ...)
{
  return [a1 computedModeForRefId];
}

id objc_msgSend_confidenceScore(void *a1, const char *a2, ...)
{
  return _[a1 confidenceScore];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationWithWeight_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithWeight:];
}

id objc_msgSend_configureAmbientAppIconForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 configureAmbientAppIconForBundleIdentifier:];
}

id objc_msgSend_configureConnection(void *a1, const char *a2, ...)
{
  return _[a1 configureConnection];
}

id objc_msgSend_configureConnection_(void *a1, const char *a2, ...)
{
  return [a1 configureConnection:];
}

id objc_msgSend_configureForRequestOptions_(void *a1, const char *a2, ...)
{
  return [a1 configureForRequestOptions:];
}

id objc_msgSend_configureOptionsForImminentRequest_(void *a1, const char *a2, ...)
{
  return [a1 configureOptionsForImminentRequest];
}

id objc_msgSend_configureReusableFooterView_(void *a1, const char *a2, ...)
{
  return [a1 configureReusableFooterView:];
}

id objc_msgSend_configureSiriViewControllerWithCurrentTurn_(void *a1, const char *a2, ...)
{
  return [a1 configureSiriViewControllerWithCurrentTurn:];
}

id objc_msgSend_configureSmartDialog_(void *a1, const char *a2, ...)
{
  return [a1 configureSmartDialog];
}

id objc_msgSend_confirmationOptions(void *a1, const char *a2, ...)
{
  return _[a1 confirmationOptions];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return [a1 conformsToProtocol:];
}

id objc_msgSend_connectedAccessories(void *a1, const char *a2, ...)
{
  return _[a1 connectedAccessories];
}

id objc_msgSend_connectedDevices(void *a1, const char *a2, ...)
{
  return _[a1 connectedDevices];
}

id objc_msgSend_connectionWithEndpoint_(void *a1, const char *a2, ...)
{
  return [a1 connectionWithEndpoint:];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToConstant:];
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return [a1 constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:];
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return _[a1 constraints];
}

id objc_msgSend_constraintsWithVisualFormat_options_metrics_views_(void *a1, const char *a2, ...)
{
  return [a1 constraintsWithVisualFormat:];
}

id objc_msgSend_contact(void *a1, const char *a2, ...)
{
  return _[a1 contact];
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _[a1 containerView];
}

id objc_msgSend_containsItemForAceViewWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsItemForAceViewWithIdentifier:");
}

id objc_msgSend_containsItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 containsItemWithIdentifier];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _[a1 content];
}

id objc_msgSend_contentContainerView(void *a1, const char *a2, ...)
{
  return _[a1 contentContainerView];
}

id objc_msgSend_contentDidUpdate(void *a1, const char *a2, ...)
{
  return _[a1 contentDidUpdate];
}

id objc_msgSend_contentDidUpdate_(void *a1, const char *a2, ...)
{
  return [a1 contentDidUpdate:];
}

id objc_msgSend_contentDidUpdateForAdditionalContentView_(void *a1, const char *a2, ...)
{
  return [a1 contentDidUpdateForAdditionalContentView:];
}

id objc_msgSend_contentDiffersBetweenItems_andItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentDiffersBetweenItems:andItems:");
}

id objc_msgSend_contentPlatterScrollView(void *a1, const char *a2, ...)
{
  return _[a1 contentPlatterScrollView];
}

id objc_msgSend_contentPlatterView(void *a1, const char *a2, ...)
{
  return _[a1 contentPlatterView];
}

id objc_msgSend_contentPlatterViewController(void *a1, const char *a2, ...)
{
  return _[a1 contentPlatterViewController];
}

id objc_msgSend_contentPresentationState(void *a1, const char *a2, ...)
{
  return _[a1 contentPresentationState];
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _[a1 contentView];
}

id objc_msgSend_contentViewController(void *a1, const char *a2, ...)
{
  return _[a1 contentViewController];
}

id objc_msgSend_contentViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 contentViewControllers];
}

id objc_msgSend_contentViewDidUpdateSize(void *a1, const char *a2, ...)
{
  return _[a1 contentViewDidUpdateSize];
}

id objc_msgSend_contentWidthForForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 contentWidthForForSiriPresentation:];
}

id objc_msgSend_contentWidthForSuggestionsViewController_(void *a1, const char *a2, ...)
{
  return [a1 contentWidthForSuggestionsViewController:];
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_contextMenuIsPresented(void *a1, const char *a2, ...)
{
  return _[a1 contextMenuIsPresented];
}

id objc_msgSend_contingency(void *a1, const char *a2, ...)
{
  return _[a1 contingency];
}

id objc_msgSend_conversation_didChangePresentationStateForItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return [a1 conversation:didChangePresentationStateForItemsAtIndexPaths:];
}

id objc_msgSend_conversation_didChangeWithTransaction_(void *a1, const char *a2, ...)
{
  return [a1 conversation:didChangeWithTransaction:];
}

id objc_msgSend_conversation_didInsertItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return [a1 conversation:didInsertItemsAtIndexPaths:];
}

id objc_msgSend_conversation_didRemoveItemsWithIdentifiers_atIndexPaths_parentItemIdentifiers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conversation:didRemoveItemsWithIdentifiers:atIndexPaths:parentItemIdentifiers:");
}

id objc_msgSend_conversation_didUpdateItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return [a1 conversation:didUpdateItemsAtIndexPaths:];
}

id objc_msgSend_conversationDidChangeWithTransaction_(void *a1, const char *a2, ...)
{
  return [a1 conversationDidChangeWithTransaction:];
}

id objc_msgSend_conversationIdentifiersForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 conversationIdentifiersForSiriPresentation];
}

id objc_msgSend_conversationItemIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 conversationItemIdentifier];
}

id objc_msgSend_conversationListDidChange(void *a1, const char *a2, ...)
{
  return _[a1 conversationListDidChange];
}

id objc_msgSend_conversationSnippetViews(void *a1, const char *a2, ...)
{
  return _[a1 conversationSnippetViews];
}

id objc_msgSend_conversationTranscriptItems(void *a1, const char *a2, ...)
{
  return _[a1 conversationTranscriptItems];
}

id objc_msgSend_conversationView(void *a1, const char *a2, ...)
{
  return _[a1 conversationView];
}

id objc_msgSend_convertPoint_fromCoordinateSpace_(void *a1, const char *a2, ...)
{
  return [a1 convertPoint:fromCoordinateSpace:];
}

id objc_msgSend_convertPoint_fromView_(void *a1, const char *a2, ...)
{
  return [a1 convertPoint:fromView:];
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return [a1 convertPoint:toView:];
}

id objc_msgSend_convertRect_fromCoordinateSpace_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:fromCoordinateSpace:];
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:fromView:];
}

id objc_msgSend_coordinateSpace(void *a1, const char *a2, ...)
{
  return _[a1 coordinateSpace];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_correctionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 correctionIdentifier];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countOfIntendedActivations(void *a1, const char *a2, ...)
{
  return _[a1 countOfIntendedActivations];
}

id objc_msgSend_countOfTotalActivations(void *a1, const char *a2, ...)
{
  return _[a1 countOfTotalActivations];
}

id objc_msgSend_countOfUnintendedActivations(void *a1, const char *a2, ...)
{
  return _[a1 countOfUnintendedActivations];
}

id objc_msgSend_countOfUnintendedActivationsSinceLastIntendedActivation(void *a1, const char *a2, ...)
{
  return _[a1 countOfUnintendedActivationsSinceLastIntendedActivation];
}

id objc_msgSend_createDefaultMaterialBackgroundView(void *a1, const char *a2, ...)
{
  return _[a1 createDefaultMaterialBackgroundView];
}

id objc_msgSend_createEditableUtteranceView(void *a1, const char *a2, ...)
{
  return _[a1 createEditableUtteranceView];
}

id objc_msgSend_createSuggestionsViewProvider(void *a1, const char *a2, ...)
{
  return _[a1 createSuggestionsViewProvider];
}

id objc_msgSend_createViewArray(void *a1, const char *a2, ...)
{
  return _[a1 createViewArray];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentIdiom(void *a1, const char *a2, ...)
{
  return _[a1 currentIdiom];
}

id objc_msgSend_currentInstrumentationTurnContext(void *a1, const char *a2, ...)
{
  return _[a1 currentInstrumentationTurnContext];
}

id objc_msgSend_currentSnippetContainsFooterButtons(void *a1, const char *a2, ...)
{
  return _[a1 currentSnippetContainsFooterButtons];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_dataType(void *a1, const char *a2, ...)
{
  return _[a1 dataType];
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfURL:options:error:];
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithJSONObject:options:error:];
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingTimeInterval:];
}

id objc_msgSend_dateByAddingUnit_value_toDate_options_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingUnit:value:toDate:options:];
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSinceNow:];
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSinceReferenceDate:];
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return _[a1 day];
}

id objc_msgSend_days(void *a1, const char *a2, ...)
{
  return _[a1 days];
}

id objc_msgSend_debugButtonIsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 debugButtonIsEnabled];
}

id objc_msgSend_defaultBrowserBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 defaultBrowserBundleIdentifier];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultHeight(void *a1, const char *a2, ...)
{
  return _[a1 defaultHeight];
}

id objc_msgSend_defaultInsets(void *a1, const char *a2, ...)
{
  return _[a1 defaultInsets];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultSynchedKnowledgeStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultSynchedKnowledgeStore];
}

id objc_msgSend_deferredRendering(void *a1, const char *a2, ...)
{
  return _[a1 deferredRendering];
}

id objc_msgSend_delayDismissalAfterIdleFires_(void *a1, const char *a2, ...)
{
  return [a1 delayDismissalAfterIdleFires];
}

id objc_msgSend_delayDismissalMs(void *a1, const char *a2, ...)
{
  return _[a1 delayDismissalMs];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithIdentifier];
}

id objc_msgSend_dequeueReusableCellWithReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableCellWithReuseIdentifier:forIndexPath:];
}

id objc_msgSend_dequeueReusableSupplementaryViewOfKind_withReuseIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:];
}

id objc_msgSend_descender(void *a1, const char *a2, ...)
{
  return _[a1 descender];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptionForAceView_(void *a1, const char *a2, ...)
{
  return [a1 descriptionForAceView:];
}

id objc_msgSend_descriptionForDialog_(void *a1, const char *a2, ...)
{
  return [a1 descriptionForDialog:];
}

id objc_msgSend_descriptionForSayIt_(void *a1, const char *a2, ...)
{
  return [a1 descriptionForSayIt:];
}

id objc_msgSend_deselectItemAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return [a1 deselectItemAtIndexPath:animated:];
}

id objc_msgSend_deviceIsPad(void *a1, const char *a2, ...)
{
  return _[a1 deviceIsPad];
}

id objc_msgSend_deviceSpecificKeyForDefaultKey_(void *a1, const char *a2, ...)
{
  return [a1 deviceSpecificKeyForDefaultKey:];
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _[a1 deviceType];
}

id objc_msgSend_deviceWithDescriptor_error_(void *a1, const char *a2, ...)
{
  return [a1 deviceWithDescriptor:error:];
}

id objc_msgSend_dialog(void *a1, const char *a2, ...)
{
  return _[a1 dialog];
}

id objc_msgSend_dialogIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 dialogIdentifier];
}

id objc_msgSend_dialogPhase(void *a1, const char *a2, ...)
{
  return _[a1 dialogPhase];
}

id objc_msgSend_dialogPhaseForAceDialogPhase_(void *a1, const char *a2, ...)
{
  return [a1 dialogPhaseForAceDialogPhase:];
}

id objc_msgSend_dialogPhaseForAceObject_(void *a1, const char *a2, ...)
{
  return [a1 dialogPhaseForAceObject:];
}

id objc_msgSend_dialogStrings(void *a1, const char *a2, ...)
{
  return _[a1 dialogStrings];
}

id objc_msgSend_dialogs(void *a1, const char *a2, ...)
{
  return _[a1 dialogs];
}

id objc_msgSend_dictationResult(void *a1, const char *a2, ...)
{
  return _[a1 dictationResult];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithCapacity:];
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithContentsOfFile:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_didBecomeActiveHandler(void *a1, const char *a2, ...)
{
  return _[a1 didBecomeActiveHandler];
}

id objc_msgSend_didBeginProcessingConversationItems(void *a1, const char *a2, ...)
{
  return _[a1 didBeginProcessingConversationItems];
}

id objc_msgSend_didComputeMode_forAceCommand_generatedAceCommands_(void *a1, const char *a2, ...)
{
  return [a1 didComputeMode:forAceCommand:generatedAceCommands:];
}

id objc_msgSend_didDetectGestureEvent_inRegion_(void *a1, const char *a2, ...)
{
  return [a1 didDetectGestureEvent:inRegion:];
}

id objc_msgSend_didDismissModalContent(void *a1, const char *a2, ...)
{
  return _[a1 didDismissModalContent];
}

id objc_msgSend_didDismissResults(void *a1, const char *a2, ...)
{
  return _[a1 didDismissResults];
}

id objc_msgSend_didFinishSynthesisRequest_withInstrumentMetrics_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFinishSynthesisRequest:withInstrumentMetrics:error:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 didMoveToParentViewController:];
}

id objc_msgSend_didOmitDialogFromPresenting(void *a1, const char *a2, ...)
{
  return _[a1 didOmitDialogFromPresenting];
}

id objc_msgSend_didPresentContentForCompactViewController_(void *a1, const char *a2, ...)
{
  return [a1 didPresentContentForCompactViewController:];
}

id objc_msgSend_didPresentContentForSAEViewController_(void *a1, const char *a2, ...)
{
  return [a1 didPresentContentForSAEViewController:];
}

id objc_msgSend_didPresentResponseFullyInApp(void *a1, const char *a2, ...)
{
  return _[a1 didPresentResponseFullyInApp];
}

id objc_msgSend_didPresentSystemUI(void *a1, const char *a2, ...)
{
  return _[a1 didPresentSystemUI];
}

id objc_msgSend_didReceiveAddViewsDialogPhaseForSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 didReceiveAddViewsDialogPhaseForSuggestions:];
}

id objc_msgSend_didReceiveAddViewsSignalForSuggestions_currentMode_(void *a1, const char *a2, ...)
{
  return [a1 didReceiveAddViewsSignalForSuggestions:currentMode:];
}

id objc_msgSend_didReceiveBugButtonLongPress(void *a1, const char *a2, ...)
{
  return _[a1 didReceiveBugButtonLongPress];
}

id objc_msgSend_didReceiveHelpAction(void *a1, const char *a2, ...)
{
  return _[a1 didReceiveHelpAction];
}

id objc_msgSend_didReceiveLatencyInformation_(void *a1, const char *a2, ...)
{
  return [a1 didReceiveLatencyInformation:];
}

id objc_msgSend_didReceiveOrbViewTapToCancelRequest(void *a1, const char *a2, ...)
{
  return _[a1 didReceiveOrbViewTapToCancelRequest];
}

id objc_msgSend_didReceivePaginateListCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceivePaginateListCommand:completion:");
}

id objc_msgSend_didReceiveReportBugAction(void *a1, const char *a2, ...)
{
  return _[a1 didReceiveReportBugAction];
}

id objc_msgSend_didReceiveRevealRecognizedSpeechCommand_(void *a1, const char *a2, ...)
{
  return [a1 didReceiveRevealRecognizedSpeechCommand:];
}

id objc_msgSend_didReceiveUpdateVisualResponseCommand_(void *a1, const char *a2, ...)
{
  return [a1 didReceiveUpdateVisualResponseCommand:];
}

id objc_msgSend_didResignFirstResponderFromUtterancePresenter_(void *a1, const char *a2, ...)
{
  return [a1 didResignFirstResponderFromUtterancePresenter:];
}

id objc_msgSend_didResignFirstResponderFromUtteranceView_(void *a1, const char *a2, ...)
{
  return [a1 didResignFirstResponderFromUtteranceView:];
}

id objc_msgSend_didResignFirstResponderFromUtteranceViewController_(void *a1, const char *a2, ...)
{
  return [a1 didResignFirstResponderFromUtteranceViewController:];
}

id objc_msgSend_didSetInputTypeFromTextToVisualIntelligenceCamera(void *a1, const char *a2, ...)
{
  return _[a1 didSetInputTypeFromTextToVisualIntelligenceCamera];
}

id objc_msgSend_disableIdleTimerForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 disableIdleTimerForSiriPresentation:];
}

id objc_msgSend_disableTouchIDFaceIDIfNecessaryForDucID_(void *a1, const char *a2, ...)
{
  return [a1 disableTouchIDFaceIDIfNecessaryForDucID];
}

id objc_msgSend_disambiguationItemForListItem_disambiguationKey_(void *a1, const char *a2, ...)
{
  return [a1 disambiguationItemForListItem:disambiguationKey:];
}

id objc_msgSend_discoverabilitySignal(void *a1, const char *a2, ...)
{
  return _[a1 discoverabilitySignal];
}

id objc_msgSend_dismissEditableUtteranceViewControllerAndShouldStartNewRequest_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissEditableUtteranceViewControllerAndShouldStartNewRequest:completion:];
}

id objc_msgSend_dismissRecordingOverlayAndHideSnippets_(void *a1, const char *a2, ...)
{
  return [a1 dismissRecordingOverlayAndHideSnippets:];
}

id objc_msgSend_dismissSiriPresentation_withReason_(void *a1, const char *a2, ...)
{
  return [a1 dismissSiriPresentation:withReason:];
}

id objc_msgSend_dismissSiriResults(void *a1, const char *a2, ...)
{
  return _[a1 dismissSiriResults];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dismissalReason(void *a1, const char *a2, ...)
{
  return _[a1 dismissalReason];
}

id objc_msgSend_dismissalUserInfo(void *a1, const char *a2, ...)
{
  return _[a1 dismissalUserInfo];
}

id objc_msgSend_displayCornerRadius(void *a1, const char *a2, ...)
{
  return _[a1 displayCornerRadius];
}

id objc_msgSend_displayGamut(void *a1, const char *a2, ...)
{
  return _[a1 displayGamut];
}

id objc_msgSend_displayText(void *a1, const char *a2, ...)
{
  return _[a1 displayText];
}

id objc_msgSend_distantPast(void *a1, const char *a2, ...)
{
  return _[a1 distantPast];
}

id objc_msgSend_dockFrameDidChange_(void *a1, const char *a2, ...)
{
  return [a1 dockFrameDidChange:];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_domainDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 domainDisplayName];
}

id objc_msgSend_domainObjectForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 domainObjectForIdentifier];
}

id objc_msgSend_domainObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 domainObjectForKey:];
}

id objc_msgSend_domainObjectStoreForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 domainObjectStoreForSiriPresentation];
}

id objc_msgSend_domainSnippets(void *a1, const char *a2, ...)
{
  return _[a1 domainSnippets];
}

id objc_msgSend_doubleForKey_(void *a1, const char *a2, ...)
{
  return [a1 doubleForKey:];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downloadSiriAssetsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 downloadSiriAssetsIfNeeded];
}

id objc_msgSend_dropletContentMaximumContainerHeight(void *a1, const char *a2, ...)
{
  return _[a1 dropletContentMaximumContainerHeight];
}

id objc_msgSend_dropletContentMaximumContainerWidth(void *a1, const char *a2, ...)
{
  return _[a1 dropletContentMaximumContainerWidth];
}

id objc_msgSend_dryRun(void *a1, const char *a2, ...)
{
  return _[a1 dryRun];
}

id objc_msgSend_duckTTSVolumeTo_rampTime_completion_(void *a1, const char *a2, ...)
{
  return [a1 duckTTSVolumeTo:rampTime:completion:];
}

id objc_msgSend_duetSharedQueue(void *a1, const char *a2, ...)
{
  return _[a1 duetSharedQueue];
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _[a1 duration];
}

id objc_msgSend_edgeInsets(void *a1, const char *a2, ...)
{
  return _[a1 edgeInsets];
}

id objc_msgSend_editableTextViewRequestKeyboardForTapToEditWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableTextViewRequestKeyboardForTapToEditWithCompletion:");
}

id objc_msgSend_editableTextViewTextDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableTextViewTextDidChange:");
}

id objc_msgSend_editableTextViewTextDidFinishCorrecting_(void *a1, const char *a2, ...)
{
  return [a1 editableTextViewTextDidFinishCorrecting:];
}

id objc_msgSend_editableTextViewTextDidReceiveReturnKey_(void *a1, const char *a2, ...)
{
  return [a1 editableTextViewTextDidReceiveReturnKey:];
}

id objc_msgSend_editableTextViewTextDidResignFirstResponder_(void *a1, const char *a2, ...)
{
  return [a1 editableTextViewTextDidResignFirstResponder:];
}

id objc_msgSend_editableTextViewTextShouldPreventCorrection_(void *a1, const char *a2, ...)
{
  return [a1 editableTextViewTextShouldPreventCorrection:];
}

id objc_msgSend_editableTextViewTextWillBeginCorrecting_(void *a1, const char *a2, ...)
{
  return [a1 editableTextViewTextWillBeginCorrecting:];
}

id objc_msgSend_editableUtterancePresenter_didFinishEditingWithText_selectionResults_shouldStartNewRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtterancePresenter:didFinishEditingWithText:selectionResults:shouldStartNewRequest:");
}

id objc_msgSend_editableUtterancePresenter_openURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtterancePresenter:openURL:");
}

id objc_msgSend_editableUtterancePresenter_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 editableUtterancePresenter:requestsKeyboardWithCompletion:];
}

id objc_msgSend_editableUtteranceView_didFinishEditingWithText_(void *a1, const char *a2, ...)
{
  return [a1 editableUtteranceView:didFinishEditingWithText:];
}

id objc_msgSend_editableUtteranceView_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 editableUtteranceView:requestsKeyboardWithCompletion:];
}

id objc_msgSend_editableUtteranceViewController_alternativeSelectedAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 editableUtteranceViewController:alternativeSelectedAtIndex:];
}

id objc_msgSend_editableUtteranceViewController_didFinishEditingWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editableUtteranceViewController:didFinishEditingWithText:");
}

id objc_msgSend_editableUtteranceViewController_openURL_(void *a1, const char *a2, ...)
{
  return [a1 editableUtteranceViewController:openURL:];
}

id objc_msgSend_editableUtteranceViewController_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 editableUtteranceViewController:requestsKeyboardWithCompletion:];
}

id objc_msgSend_editableUtteranceViewHasContent(void *a1, const char *a2, ...)
{
  return _[a1 editableUtteranceViewHasContent];
}

id objc_msgSend_effect(void *a1, const char *a2, ...)
{
  return _[a1 effect];
}

id objc_msgSend_effectForAceObject_(void *a1, const char *a2, ...)
{
  return [a1 effectForAceObject:];
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 effectWithStyle:];
}

id objc_msgSend_effectiveBottomContentInset(void *a1, const char *a2, ...)
{
  return _[a1 effectiveBottomContentInset];
}

id objc_msgSend_effectiveContentFrame(void *a1, const char *a2, ...)
{
  return _[a1 effectiveContentFrame];
}

id objc_msgSend_effectiveCoreLocationBundleForCompactViewController_(void *a1, const char *a2, ...)
{
  return [a1 effectiveCoreLocationBundleForCompactViewController:];
}

id objc_msgSend_effectiveCoreLocationBundleForSAEViewController_(void *a1, const char *a2, ...)
{
  return [a1 effectiveCoreLocationBundleForSAEViewController:];
}

id objc_msgSend_effectiveCoreLocationBundleForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 effectiveCoreLocationBundleForSiriPresentation:];
}

id objc_msgSend_emailAddress(void *a1, const char *a2, ...)
{
  return _[a1 emailAddress];
}

id objc_msgSend_emails(void *a1, const char *a2, ...)
{
  return _[a1 emails];
}

id objc_msgSend_emitFinalSpeechTranscriptionEventForAceObjectWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 emitFinalSpeechTranscriptionEventForAceObjectWithIdentifier:];
}

id objc_msgSend_emitInstrumentation_(void *a1, const char *a2, ...)
{
  return [a1 emitInstrumentation];
}

id objc_msgSend_emitInstrumentation_atTime_(void *a1, const char *a2, ...)
{
  return [a1 emitInstrumentation:atTime:];
}

id objc_msgSend_emitPartialSpeechTranscriptionEventForAceObjectWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 emitPartialSpeechTranscriptionEventForAceObjectWithIdentifier:];
}

id objc_msgSend_emitPunchOutEventWithURL_appID_(void *a1, const char *a2, ...)
{
  return [a1 emitPunchOutEventWithURL:appID:];
}

id objc_msgSend_emitRequestFailedWithError_(void *a1, const char *a2, ...)
{
  return [a1 emitRequestFailedWithError:];
}

id objc_msgSend_emitRevealSpeechTranscriptionEventForAceObjectWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 emitRevealSpeechTranscriptionEventForAceObjectWithIdentifier];
}

id objc_msgSend_emitTriggerForCodePathID_requestID_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 emitTriggerForCodePathID:requestID:completionHandler:];
}

id objc_msgSend_emitUIStateTransitionEventWithFromState_toState_withPresentationType_machAbsoluteTransitionTime_(void *a1, const char *a2, ...)
{
  return [a1 emitUIStateTransitionEventWithFromState:toState:withPresentationType:machAbsoluteTransitionTime:];
}

id objc_msgSend_emitUIStateTransitionForSiriDismissalWithReason_(void *a1, const char *a2, ...)
{
  return [a1 emitUIStateTransitionForSiriDismissalWithReason:];
}

id objc_msgSend_emitUUFRShownForAceObject_presentationType_dialogPhase_mode_viewRegion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitUUFRShownForAceObject:presentationType:dialogPhase:mode:viewRegion:");
}

id objc_msgSend_emitUUFRSpokenForAceObject_presentationType_dialogPhase_mode_speakableText_dialogIdentifierOverride_(void *a1, const char *a2, ...)
{
  return [a1 emitUUFRSpokenForAceObject:presentationType:dialogPhase:mode:speakableText:dialogIdentifierOverride:];
}

id objc_msgSend_emitUserBargeInEventForBargedInTurn(void *a1, const char *a2, ...)
{
  return _[a1 emitUserBargeInEventForBargedInTurn];
}

id objc_msgSend_emitWithTurnIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 emitWithTurnIdentifier:];
}

id objc_msgSend_enableCoreAnalyticEventKey(void *a1, const char *a2, ...)
{
  return _[a1 enableCoreAnalyticEventKey];
}

id objc_msgSend_enableIdleTimerForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 enableIdleTimerForSiriPresentation];
}

id objc_msgSend_encodedClassName(void *a1, const char *a2, ...)
{
  return _[a1 encodedClassName];
}

id objc_msgSend_endBackgroundTask_(void *a1, const char *a2, ...)
{
  return [a1 endBackgroundTask:];
}

id objc_msgSend_endEditingAndCorrect_(void *a1, const char *a2, ...)
{
  return [a1 endEditingAndCorrect:];
}

id objc_msgSend_endSiriSessionForViewController_withDismissalReason_(void *a1, const char *a2, ...)
{
  return [a1 endSiriSessionForViewController:withDismissalReason:];
}

id objc_msgSend_endTypeToSiriLatencyStateIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 endTypeToSiriLatencyStateIfNeeded];
}

id objc_msgSend_endingFrame(void *a1, const char *a2, ...)
{
  return _[a1 endingFrame];
}

id objc_msgSend_endpointForMachName_service_instance_(void *a1, const char *a2, ...)
{
  return [a1 endpointForMachName:service:instance:];
}

id objc_msgSend_enqueueAudioData_identifier_sessionId_provisionally_eligibleAfterDuration_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueAudioData:identifier:sessionId:provisionally:eligibleAfterDuration:completion:");
}

id objc_msgSend_enqueueObject_(void *a1, const char *a2, ...)
{
  return [a1 enqueueObject:];
}

id objc_msgSend_enqueuePhaticWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 enqueuePhaticWithCompletion:];
}

id objc_msgSend_enqueueText_identifier_sessionId_completion_(void *a1, const char *a2, ...)
{
  return [a1 enqueueText:identifier:sessionId:completion:];
}

id objc_msgSend_enqueueText_identifier_sessionId_language_gender_isPhonetic_provisionally_eligibleAfterDuration_delayed_canUseServerTTS_preparationIdentifier_completion_analyticsContext_speakableContextInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueText:identifier:sessionId:language:gender:isPhonetic:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:preparationIdentifier:completion:analyticsContext:speakableContextInfo:");
}

id objc_msgSend_enqueueText_identifier_sessionId_preferredVoice_language_gender_isPhonetic_provisionally_eligibleAfterDuration_delayed_canUseServerTTS_preparationIdentifier_completion_analyticsContext_speakableContextInfo_(void *a1, const char *a2, ...)
{
  return [a1 enqueueText:identifier:sessionId:preferredVoice:language:gender:isPhonetic:provisionally:eligibleAfterDuration:delayed:canUseServerTTS:preparationIdentifier:completion:analyticsContext:speakableContextInfo:];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateKeysAndObjectsUsingBlock:];
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateObjectsUsingBlock:];
}

id objc_msgSend_enumerateSubstringsInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateSubstringsInRange:options:usingBlock:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return [a1 enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_eventMask(void *a1, const char *a2, ...)
{
  return _[a1 eventMask];
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 exceptionWithName:reason:userInfo:];
}

id objc_msgSend_executeQuery_responseQueue_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 executeQuery:responseQueue:withCompletion:];
}

id objc_msgSend_expectedContentWidth(void *a1, const char *a2, ...)
{
  return _[a1 expectedContentWidth];
}

id objc_msgSend_extSessionGuid(void *a1, const char *a2, ...)
{
  return _[a1 extSessionGuid];
}

id objc_msgSend_extSessionGuidCreatedTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 extSessionGuidCreatedTimestamp];
}

id objc_msgSend_extraDisambiguationSubText(void *a1, const char *a2, ...)
{
  return _[a1 extraDisambiguationSubText];
}

id objc_msgSend_extraDisambiguationText(void *a1, const char *a2, ...)
{
  return _[a1 extraDisambiguationText];
}

id objc_msgSend_faceAttentionAwarenessClient(void *a1, const char *a2, ...)
{
  return _[a1 faceAttentionAwarenessClient];
}

id objc_msgSend_faceTime(void *a1, const char *a2, ...)
{
  return _[a1 faceTime];
}

id objc_msgSend_faceTimeAudio(void *a1, const char *a2, ...)
{
  return _[a1 faceTimeAudio];
}

id objc_msgSend_feedbackForm(void *a1, const char *a2, ...)
{
  return _[a1 feedbackForm];
}

id objc_msgSend_feedbackFormForCurrentRequest(void *a1, const char *a2, ...)
{
  return _[a1 feedbackFormForCurrentRequest];
}

id objc_msgSend_fetchAttendingState_(void *a1, const char *a2, ...)
{
  return [a1 fetchAttendingState];
}

id objc_msgSend_fetchAutoCompletionSuggestionsViewsWithQuery_deviceLocked_turnId_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchAutoCompletionSuggestionsViewsWithQuery:deviceLocked:turnId:completion:");
}

id objc_msgSend_fetchConversationContinuerViewsWithRequestId_currentMode_deviceLocked_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchConversationContinuerViewsWithRequestId:currentMode:deviceLocked:completion:");
}

id objc_msgSend_fetchConversationStarterViewsWithDeviceLocked_isVoiceTrigger_invocationSource_isFirstInvocationSinceOSInstalled_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchConversationStarterViewsWithDeviceLocked:isVoiceTrigger:invocationSource:isFirstInvocationSinceOSInstalled:completion:");
}

id objc_msgSend_fetchConversationWithIdentifier_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 fetchConversationWithIdentifier:completionBlock:];
}

id objc_msgSend_fetchTopSpokenSuggestionFrom_completion_(void *a1, const char *a2, ...)
{
  return [a1 fetchTopSpokenSuggestionFrom:completion:];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithPath:];
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithPath:isDirectory:];
}

id objc_msgSend_filterWithType_(void *a1, const char *a2, ...)
{
  return [a1 filterWithType:];
}

id objc_msgSend_filteredDisambiguationListItems_(void *a1, const char *a2, ...)
{
  return [a1 filteredDisambiguationListItems:];
}

id objc_msgSend_finalAndDisplayedSmartDialogs(void *a1, const char *a2, ...)
{
  return _[a1 finalAndDisplayedSmartDialogs];
}

id objc_msgSend_finalizePopAnimationOfType_(void *a1, const char *a2, ...)
{
  return [a1 finalizePopAnimationOfType:];
}

id objc_msgSend_finishInteractiveTransition(void *a1, const char *a2, ...)
{
  return _[a1 finishInteractiveTransition];
}

id objc_msgSend_finishedIPTest_(void *a1, const char *a2, ...)
{
  return [a1 finishedIPTest:];
}

id objc_msgSend_firstCommonAncestralView(void *a1, const char *a2, ...)
{
  return _[a1 firstCommonAncestralView];
}

id objc_msgSend_firstLineBaselineOffsetFromTop(void *a1, const char *a2, ...)
{
  return _[a1 firstLineBaselineOffsetFromTop];
}

id objc_msgSend_firstName(void *a1, const char *a2, ...)
{
  return _[a1 firstName];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstSnippetMaterialAnimation(void *a1, const char *a2, ...)
{
  return _[a1 firstSnippetMaterialAnimation];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _[a1 font];
}

id objc_msgSend_fontDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 fontDescriptor];
}

id objc_msgSend_fontDescriptorWithSymbolicTraits_(void *a1, const char *a2, ...)
{
  return [a1 fontDescriptorWithSymbolicTraits:];
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return [a1 fontWithDescriptor:];
}

id objc_msgSend_footerViewClass(void *a1, const char *a2, ...)
{
  return _[a1 footerViewClass];
}

id objc_msgSend_forceAudioSessionActive(void *a1, const char *a2, ...)
{
  return _[a1 forceAudioSessionActive];
}

id objc_msgSend_forceAudioSessionActiveWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 forceAudioSessionActiveWithCompletion:];
}

id objc_msgSend_forceAudioSessionInactive(void *a1, const char *a2, ...)
{
  return _[a1 forceAudioSessionInactive];
}

id objc_msgSend_forceBioLockoutIfLockedForUser_error_(void *a1, const char *a2, ...)
{
  return [a1 forceBioLockoutIfLockedForUser:error:];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_frameForAnimation(void *a1, const char *a2, ...)
{
  return _[a1 frameForAnimation];
}

id objc_msgSend_frameForApplication_(void *a1, const char *a2, ...)
{
  return [a1 frameForApplication:];
}

id objc_msgSend_fromPlatteredCardView(void *a1, const char *a2, ...)
{
  return _[a1 fromPlatteredCardView];
}

id objc_msgSend_fromPlatteredCardViewOriginalFrame(void *a1, const char *a2, ...)
{
  return _[a1 fromPlatteredCardViewOriginalFrame];
}

id objc_msgSend_fullName(void *a1, const char *a2, ...)
{
  return _[a1 fullName];
}

id objc_msgSend_fullScreenEffectType(void *a1, const char *a2, ...)
{
  return _[a1 fullScreenEffectType];
}

id objc_msgSend_gender(void *a1, const char *a2, ...)
{
  return _[a1 gender];
}

id objc_msgSend_generativeAssistantOnboardingCommandAceID(void *a1, const char *a2, ...)
{
  return _[a1 generativeAssistantOnboardingCommandAceID];
}

id objc_msgSend_getInitialSuggestionViews(void *a1, const char *a2, ...)
{
  return _[a1 getInitialSuggestionViews];
}

id objc_msgSend_getIsInTamaleAndCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 getIsInTamaleAndCollapsed];
}

id objc_msgSend_getScreenshotImageForSiriPresentation_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 getScreenshotImageForSiriPresentation:withCompletion:];
}

id objc_msgSend_getScreenshotWithReplyHandler_(void *a1, const char *a2, ...)
{
  return [a1 getScreenshotWithReplyHandler:];
}

id objc_msgSend_getSiriAppBundle(void *a1, const char *a2, ...)
{
  return _[a1 getSiriAppBundle];
}

id objc_msgSend_guideSections(void *a1, const char *a2, ...)
{
  return _[a1 guideSections];
}

id objc_msgSend_guideUtterances(void *a1, const char *a2, ...)
{
  return _[a1 guideUtterances];
}

id objc_msgSend_handleChangeUtteranceCommand_(void *a1, const char *a2, ...)
{
  return [a1 handleChangeUtteranceCommand:];
}

id objc_msgSend_handleFeedbackForm_(void *a1, const char *a2, ...)
{
  return [a1 handleFeedbackForm:];
}

id objc_msgSend_handleGetResponseAlternativesPlayback_(void *a1, const char *a2, ...)
{
  return [a1 handleGetResponseAlternativesPlayback:];
}

id objc_msgSend_handlePasscodeUnlockForSiriPresentation_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 handlePasscodeUnlockForSiriPresentation:withCompletion:];
}

id objc_msgSend_handlePasscodeUnlockWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 handlePasscodeUnlockWithCompletion:];
}

id objc_msgSend_handlePlayContentCommand_completion_(void *a1, const char *a2, ...)
{
  return [a1 handlePlayContentCommand:completion:];
}

id objc_msgSend_handlePlayTrailer_completion_(void *a1, const char *a2, ...)
{
  return [a1 handlePlayTrailer:completion:];
}

id objc_msgSend_handlePreSynthesisCommandWithError_(void *a1, const char *a2, ...)
{
  return [a1 handlePreSynthesisCommandWithError:];
}

id objc_msgSend_handleRequestEndBehavior_isAttending_(void *a1, const char *a2, ...)
{
  return [a1 handleRequestEndBehavior:isAttending:];
}

id objc_msgSend_handleSelectRow_(void *a1, const char *a2, ...)
{
  return [a1 handleSelectRow:];
}

id objc_msgSend_handleShowSpeechAlternativesCommand_(void *a1, const char *a2, ...)
{
  return [a1 handleShowSpeechAlternativesCommand:];
}

id objc_msgSend_handleSiriRequest_deliveryHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 handleSiriRequest:deliveryHandler:completionHandler:];
}

id objc_msgSend_handleVoiceActivationRequestWithRequestOptions_(void *a1, const char *a2, ...)
{
  return [a1 handleVoiceActivationRequestWithRequestOptions:];
}

id objc_msgSend_hasContentAtPoint_(void *a1, const char *a2, ...)
{
  return [a1 hasContentAtPoint:];
}

id objc_msgSend_hasContentForState_(void *a1, const char *a2, ...)
{
  return [a1 hasContentForState:];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_hasPresentedSiriAdvancedFeaturesAssetsDownloadNotification(void *a1, const char *a2, ...)
{
  return _[a1 hasPresentedSiriAdvancedFeaturesAssetsDownloadNotification];
}

id objc_msgSend_hasPresentedSiriAssetsNotification(void *a1, const char *a2, ...)
{
  return _[a1 hasPresentedSiriAssetsNotification];
}

id objc_msgSend_hasResult(void *a1, const char *a2, ...)
{
  return _[a1 hasResult];
}

id objc_msgSend_hasSmartDialogSnippet(void *a1, const char *a2, ...)
{
  return _[a1 hasSmartDialogSnippet];
}

id objc_msgSend_hasStarColumn(void *a1, const char *a2, ...)
{
  return _[a1 hasStarColumn];
}

id objc_msgSend_hasSufficientDiskSpaceForDownload(void *a1, const char *a2, ...)
{
  return _[a1 hasSufficientDiskSpaceForDownload];
}

id objc_msgSend_hashedRouteId(void *a1, const char *a2, ...)
{
  return _[a1 hashedRouteId];
}

id objc_msgSend_headerText(void *a1, const char *a2, ...)
{
  return _[a1 headerText];
}

id objc_msgSend_headingText(void *a1, const char *a2, ...)
{
  return _[a1 headingText];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 heightAnchor];
}

id objc_msgSend_heightOfCellWithName_tagPhrase_width_(void *a1, const char *a2, ...)
{
  return [a1 heightOfCellWithName:tagPhrase:width:];
}

id objc_msgSend_hideAcousticIDSpinner(void *a1, const char *a2, ...)
{
  return _[a1 hideAcousticIDSpinner];
}

id objc_msgSend_hideSnippets(void *a1, const char *a2, ...)
{
  return _[a1 hideSnippets];
}

id objc_msgSend_hiresTrailerUri(void *a1, const char *a2, ...)
{
  return _[a1 hiresTrailerUri];
}

id objc_msgSend_hitTest_withEvent_(void *a1, const char *a2, ...)
{
  return [a1 hitTest:withEvent:];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _[a1 host];
}

id objc_msgSend_hostApplicationDidBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 hostApplicationDidBecomeActive];
}

id objc_msgSend_hostApplicationWillEnterForeground(void *a1, const char *a2, ...)
{
  return _[a1 hostApplicationWillEnterForeground];
}

id objc_msgSend_hostApplicationWillResignActive(void *a1, const char *a2, ...)
{
  return _[a1 hostApplicationWillResignActive];
}

id objc_msgSend_hostDidBecomeActive(void *a1, const char *a2, ...)
{
  return _[a1 hostDidBecomeActive];
}

id objc_msgSend_hostWillResignActive(void *a1, const char *a2, ...)
{
  return _[a1 hostWillResignActive];
}

id objc_msgSend_hostingView(void *a1, const char *a2, ...)
{
  return _[a1 hostingView];
}

id objc_msgSend_iconDisplayIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 iconDisplayIdentifier];
}

id objc_msgSend_iconNeedsProcessing(void *a1, const char *a2, ...)
{
  return _[a1 iconNeedsProcessing];
}

id objc_msgSend_iconResourceName(void *a1, const char *a2, ...)
{
  return _[a1 iconResourceName];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifierForService_(void *a1, const char *a2, ...)
{
  return [a1 identifierForService:];
}

id objc_msgSend_identifierOfItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 identifierOfItemAtIndexPath:];
}

id objc_msgSend_idleTimeInterval(void *a1, const char *a2, ...)
{
  return _[a1 idleTimeInterval];
}

id objc_msgSend_idleTimerInterval(void *a1, const char *a2, ...)
{
  return _[a1 idleTimerInterval];
}

id objc_msgSend_imageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:inBundle:];
}

id objc_msgSend_imageResource(void *a1, const char *a2, ...)
{
  return _[a1 imageResource];
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _[a1 imageView];
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return [a1 imageWithCGImage:];
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return [a1 imageWithData:];
}

id objc_msgSend_imageWithHorizontallyFlippedOrientation(void *a1, const char *a2, ...)
{
  return _[a1 imageWithHorizontallyFlippedOrientation];
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return [a1 imageWithRenderingMode:];
}

id objc_msgSend_imageWithTintColor_renderingMode_(void *a1, const char *a2, ...)
{
  return [a1 imageWithTintColor:renderingMode:];
}

id objc_msgSend_inTextInputModeForSuggestionsViewController_(void *a1, const char *a2, ...)
{
  return [a1 inTextInputModeForSuggestionsViewController:];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:];
}

id objc_msgSend_indexOfObjectPassingTest_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObjectPassingTest:];
}

id objc_msgSend_indexPathForItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 indexPathForItemWithIdentifier:];
}

id objc_msgSend_indexPathWithIndex_(void *a1, const char *a2, ...)
{
  return [a1 indexPathWithIndex:];
}

id objc_msgSend_indexPathsForSelectedItems(void *a1, const char *a2, ...)
{
  return _[a1 indexPathsForSelectedItems];
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return [a1 indexSetWithIndex:];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initWithActivationEvent_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivationEvent:];
}

id objc_msgSend_initWithAppBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithAppBundleIdentifier:];
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return [a1 initWithArray:];
}

id objc_msgSend_initWithBase64EncodedString_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithBase64EncodedString:options:];
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIdentifier:];
}

id objc_msgSend_initWithCallRecordFilter_callRecordToCallBack_audioRoute_destinationType_contacts_callCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallRecordFilter:callRecordToCallBack:audioRoute:destinationType:contacts:callCapability:");
}

id objc_msgSend_initWithCancellationReason_contentPresentationState_dismissalReason_isDeviceUnlocked_siriState_requestSource_(void *a1, const char *a2, ...)
{
  return [a1 initWithCancellationReason:contentPresentationState:dismissalReason:isDeviceUnlocked:siriState:requestSource:];
}

id objc_msgSend_initWithCanonicalID_(void *a1, const char *a2, ...)
{
  return [a1 initWithCanonicalID:];
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 initWithCapacity:];
}

id objc_msgSend_initWithCardData_responseViewId_(void *a1, const char *a2, ...)
{
  return [a1 initWithCardData:responseViewId:];
}

id objc_msgSend_initWithCode_localizedFailureReason_(void *a1, const char *a2, ...)
{
  return [a1 initWithCode:localizedFailureReason:];
}

id objc_msgSend_initWithCode_userActivity_(void *a1, const char *a2, ...)
{
  return [a1 initWithCode:userActivity:];
}

id objc_msgSend_initWithCode_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithCode:userInfo:];
}

id objc_msgSend_initWithCompactResultViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithCompactResultViewController:];
}

id objc_msgSend_initWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 initWithCompletion:];
}

id objc_msgSend_initWithContainerView_(void *a1, const char *a2, ...)
{
  return [a1 initWithContainerView:];
}

id objc_msgSend_initWithContentViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithContentViewController:];
}

id objc_msgSend_initWithConversation_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithConversation:delegate:];
}

id objc_msgSend_initWithCountOfIntended_countOfUnintended_countOfUnintendedActivationSinceLastIntended_days_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCountOfIntended:countOfUnintended:countOfUnintendedActivationSinceLastIntended:days:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:encoding:];
}

id objc_msgSend_initWithDateCreated_recipient_callCapabilities_callTypes_unseen_(void *a1, const char *a2, ...)
{
  return [a1 initWithDateCreated:recipient:callCapabilities:callTypes:unseen:];
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:];
}

id objc_msgSend_initWithDelegate_andLockState_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:andLockState:];
}

id objc_msgSend_initWithDelegate_dataSource_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:dataSource:];
}

id objc_msgSend_initWithDelegate_systemUIDevice_systemApertureSupportedDevice_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:systemUIDevice:systemApertureSupportedDevice:];
}

id objc_msgSend_initWithDeviceIdentifier_identifierType_deviceType_launchContext_(void *a1, const char *a2, ...)
{
  return [a1 initWithDeviceIdentifier:identifierType:deviceType:launchContext:];
}

id objc_msgSend_initWithDeviceIsPad_navigationStackIsPopping_navigationStackSize_navigationBarHasContent_multiLevelViewHasContent_editableUtteranceViewHasContent_compactViewHasContent_siriViewControllerIsEditing_keyboardHasContent_contextMenuIsPresented_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDeviceIsPad:navigationStackIsPopping:navigationStackSize:navigationBarHasContent:multiLevelViewHasContent:editableUtteranceViewHasContent:compactViewHasContent:siriViewControllerIsEditing:keyboardHasContent:contextMenuIsPresented:");
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 initWithDictionary:];
}

id objc_msgSend_initWithDismissalDelegate_dismissalStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithDismissalDelegate:dismissalStyle:];
}

id objc_msgSend_initWithDuration_curve_beginningFrame_endingFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithDuration:curve:beginningFrame:endingFrame:];
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return [a1 initWithEffect:];
}

id objc_msgSend_initWithFacade_(void *a1, const char *a2, ...)
{
  return [a1 initWithFacade:];
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 initWithFormat:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithFrame_animation_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:animation:];
}

id objc_msgSend_initWithFrame_backgroundBlurView_navigationView_resultView_conversationView_additionalContentViews_textRequestView_viewStackContainer_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:backgroundBlurView:navigationView:resultView:conversationView:additionalContentViews:textRequestView:viewStackContainer:];
}

id objc_msgSend_initWithFrame_collectionViewLayout_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:collectionViewLayout:];
}

id objc_msgSend_initWithFrame_dictationReplacementAction_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:dictationReplacementAction:];
}

id objc_msgSend_initWithFrame_platterCategory_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:platterCategory:];
}

id objc_msgSend_initWithFrame_presentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:presentationStyle:];
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:style:];
}

id objc_msgSend_initWithFrame_userUtterance_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:userUtterance:delegate:];
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:];
}

id objc_msgSend_initWithIdentifier_bundleID_context_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:bundleID:context:];
}

id objc_msgSend_initWithIdentifier_bundleID_context_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:bundleID:context:userInfo:];
}

id objc_msgSend_initWithIdentifier_dateCreated_caller_callRecordType_callCapability_callDuration_unseen_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:];
}

id objc_msgSend_initWithIdentifier_reference_reason_timestamp_invalidationBlock_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:reference:reason:timestamp:invalidationBlock:];
}

id objc_msgSend_initWithIdentifier_startDate_endDate_metadata_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:startDate:endDate:metadata:];
}

id objc_msgSend_initWithIdleTimeout_extendedIdleTimeout_deviceSupportsFaceDetection_deviceSupportsRaiseGestureDetection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdleTimeout:extendedIdleTimeout:deviceSupportsFaceDetection:deviceSupportsRaiseGestureDetection:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithImage:];
}

id objc_msgSend_initWithInstrumentationManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithInstrumentationManager:];
}

id objc_msgSend_initWithKeyboardNotification_(void *a1, const char *a2, ...)
{
  return [a1 initWithKeyboardNotification:];
}

id objc_msgSend_initWithKnowledgeStore_(void *a1, const char *a2, ...)
{
  return [a1 initWithKnowledgeStore:];
}

id objc_msgSend_initWithLanguage_name_(void *a1, const char *a2, ...)
{
  return [a1 initWithLanguage:name:];
}

id objc_msgSend_initWithLanguageCode_(void *a1, const char *a2, ...)
{
  return [a1 initWithLanguageCode:];
}

id objc_msgSend_initWithLatencySummary_taskIdentifier_shouldShow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLatencySummary:taskIdentifier:shouldShow:");
}

id objc_msgSend_initWithLocale_(void *a1, const char *a2, ...)
{
  return [a1 initWithLocale:];
}

id objc_msgSend_initWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithLocaleIdentifier:];
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return [a1 initWithMachServiceName:];
}

id objc_msgSend_initWithMessage_makeAppFrontmost_(void *a1, const char *a2, ...)
{
  return [a1 initWithMessage:makeAppFrontmost:];
}

id objc_msgSend_initWithName_options_queue_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:options:queue:delegate:];
}

id objc_msgSend_initWithNamespace_(void *a1, const char *a2, ...)
{
  return [a1 initWithNamespace:];
}

id objc_msgSend_initWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return [a1 initWithNibName:nil bundle:nil];
}

id objc_msgSend_initWithOriginalCommandId_category_duration_(void *a1, const char *a2, ...)
{
  return [a1 initWithOriginalCommandId:category:duration:];
}

id objc_msgSend_initWithOriginalCommandId_category_eventInfo_duration_(void *a1, const char *a2, ...)
{
  return [a1 initWithOriginalCommandId:category:eventInfo:duration:];
}

id objc_msgSend_initWithPackageName_inBundle_(void *a1, const char *a2, ...)
{
  return [a1 initWithPackageName:inBundle:];
}

id objc_msgSend_initWithPatternId_patternType_responseViewId_responseMode_(void *a1, const char *a2, ...)
{
  return [a1 initWithPatternId:patternType:responseViewId:responseMode:];
}

id objc_msgSend_initWithPersonHandle_nameComponents_displayName_image_contactIdentifier_customIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:];
}

id objc_msgSend_initWithPlayContent_(void *a1, const char *a2, ...)
{
  return [a1 initWithPlayContent:];
}

id objc_msgSend_initWithPressDownHandler_pressUpHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithPressDownHandler:pressDownHandler:pressUpHandler:];
}

id objc_msgSend_initWithPrimaryTransitionController_(void *a1, const char *a2, ...)
{
  return [a1 initWithPrimaryTransitionController:];
}

id objc_msgSend_initWithReason_(void *a1, const char *a2, ...)
{
  return [a1 initWithReason:];
}

id objc_msgSend_initWithRegularString_compactString_(void *a1, const char *a2, ...)
{
  return [a1 initWithRegularString:compactString:];
}

id objc_msgSend_initWithRenderingEvent_(void *a1, const char *a2, ...)
{
  return [a1 initWithRenderingEvent:];
}

id objc_msgSend_initWithRequestSource_(void *a1, const char *a2, ...)
{
  return [a1 initWithRequestSource:];
}

id objc_msgSend_initWithRequestSource_uiPresentationIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithRequestSource:uiPresentationIdentifier:];
}

id objc_msgSend_initWithResultView_(void *a1, const char *a2, ...)
{
  return [a1 initWithResultView:];
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 initWithRootViewController:];
}

id objc_msgSend_initWithSamplingInterval_attentionLossTimeout_supportedAttentionAwarenessEvents_(void *a1, const char *a2, ...)
{
  return [a1 initWithSamplingInterval:attentionLossTimeout:supportedAttentionAwarenessEvents:];
}

id objc_msgSend_initWithSamplingInterval_attentionLossTimeout_supportedAttentionAwarenessEvents_deviceSupportsRaiseGestureDetection_(void *a1, const char *a2, ...)
{
  return [a1 initWithSamplingInterval:attentionLossTimeout:supportedAttentionAwarenessEvents:deviceSupportsRaiseGestureDetection:];
}

id objc_msgSend_initWithSignalProviderFactory_supportedAttentionAwarenessEvents_deviceSupportsRaiseGestureDetection_(void *a1, const char *a2, ...)
{
  return [a1 initWithSignalProviderFactory:supportedAttentionAwarenessEvents:deviceSupportsRaiseGestureDetection:];
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:attributes:];
}

id objc_msgSend_initWithString_correctionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:correctionIdentifier:];
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return [a1 initWithSuiteName:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initWithTaskDeliverer_(void *a1, const char *a2, ...)
{
  return [a1 initWithTaskDeliverer:];
}

id objc_msgSend_initWithText_(void *a1, const char *a2, ...)
{
  return [a1 initWithText:];
}

id objc_msgSend_initWithText_identifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithText:identifier:];
}

id objc_msgSend_initWithText_visualEffect_(void *a1, const char *a2, ...)
{
  return [a1 initWithText:visualEffect:];
}

id objc_msgSend_initWithText_voice_(void *a1, const char *a2, ...)
{
  return [a1 initWithText:voice:];
}

id objc_msgSend_initWithTitle_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:];
}

id objc_msgSend_initWithTitle_font_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:font:];
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:];
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:];
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return [a1 initWithUUIDString:];
}

id objc_msgSend_initWithUserEditingDataManager_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserEditingDataManager:delegate:];
}

id objc_msgSend_initWithUserUtterance_backingAceObject_isFinal_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserUtterance:backingAceObject:isFinal:];
}

id objc_msgSend_initWithUserUtterance_backingAceObjectRefId_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserUtterance:backingAceObjectRefId:];
}

id objc_msgSend_initWithUserUtterance_delegate_dataSource_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserUtterance:delegate:dataSource:];
}

id objc_msgSend_initWithUserUtterance_delegate_dataSource_preferences_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserUtterance:delegate:dataSource:preferences:];
}

id objc_msgSend_initWithValue_type_label_(void *a1, const char *a2, ...)
{
  return [a1 initWithValue:type:label:];
}

id objc_msgSend_initWithView_aceObject_(void *a1, const char *a2, ...)
{
  return [a1 initWithView:aceObject:];
}

id objc_msgSend_initialView(void *a1, const char *a2, ...)
{
  return _[a1 initialView];
}

id objc_msgSend_input(void *a1, const char *a2, ...)
{
  return _[a1 input];
}

id objc_msgSend_inputAssistantItem(void *a1, const char *a2, ...)
{
  return _[a1 inputAssistantItem];
}

id objc_msgSend_inputType(void *a1, const char *a2, ...)
{
  return _[a1 inputType];
}

id objc_msgSend_inputTypeDidChange(void *a1, const char *a2, ...)
{
  return _[a1 inputTypeDidChange];
}

id objc_msgSend_inputTypeDidChange_(void *a1, const char *a2, ...)
{
  return [a1 inputTypeDidChange:];
}

id objc_msgSend_insertItemsForAceViews_withDialogPhase_atIndexPaths_(void *a1, const char *a2, ...)
{
  return [a1 insertItemsForAceViews:withDialogPhase:atIndexPaths:];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertObject:atIndex:];
}

id objc_msgSend_insertObjects_atIndexes_(void *a1, const char *a2, ...)
{
  return [a1 insertObjects:atIndexes:];
}

id objc_msgSend_insertSubview_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertSubview:atIndex:];
}

id objc_msgSend_insertSubview_below_(void *a1, const char *a2, ...)
{
  return [a1 insertSubview:below:];
}

id objc_msgSend_insertSubview_belowSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:belowSubview:");
}

id objc_msgSend_insertedItemIndexPaths(void *a1, const char *a2, ...)
{
  return _[a1 insertedItemIndexPaths];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return [a1 integerForKey:];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_intentDescription(void *a1, const char *a2, ...)
{
  return _[a1 intentDescription];
}

id objc_msgSend_intentEnabledAppSnippets(void *a1, const char *a2, ...)
{
  return _[a1 intentEnabledAppSnippets];
}

id objc_msgSend_interface(void *a1, const char *a2, ...)
{
  return _[a1 interface];
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 interfaceOrientation];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return [a1 interfaceWithProtocol:];
}

id objc_msgSend_internalGUID(void *a1, const char *a2, ...)
{
  return _[a1 internalGUID];
}

id objc_msgSend_internalModeOverride(void *a1, const char *a2, ...)
{
  return _[a1 internalModeOverride];
}

id objc_msgSend_internalSurveyEnabledKey(void *a1, const char *a2, ...)
{
  return _[a1 internalSurveyEnabledKey];
}

id objc_msgSend_intrinsicContentSize(void *a1, const char *a2, ...)
{
  return _[a1 intrinsicContentSize];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _[a1 invalidateIntrinsicContentSize];
}

id objc_msgSend_invalidateKeyboardWindowIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 invalidateKeyboardWindowIfNeeded];
}

id objc_msgSend_invalidateLayout(void *a1, const char *a2, ...)
{
  return _[a1 invalidateLayout];
}

id objc_msgSend_invalidateWithError_(void *a1, const char *a2, ...)
{
  return [a1 invalidateWithError:];
}

id objc_msgSend_invokeSiriDebugFeedbackBannerFor_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokeSiriDebugFeedbackBannerFor:completionHandler:");
}

id objc_msgSend_isAMOSIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 isAMOSIdentifier];
}

id objc_msgSend_isAmbientPresented(void *a1, const char *a2, ...)
{
  return _[a1 isAmbientPresented];
}

id objc_msgSend_isAnnounceRequest(void *a1, const char *a2, ...)
{
  return _[a1 isAnnounceRequest];
}

id objc_msgSend_isAppIcon(void *a1, const char *a2, ...)
{
  return _[a1 isAppIcon];
}

id objc_msgSend_isAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isAvailable];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isCancelledDialogPhase(void *a1, const char *a2, ...)
{
  return _[a1 isCancelledDialogPhase];
}

id objc_msgSend_isConfirmationDialogPhase(void *a1, const char *a2, ...)
{
  return _[a1 isConfirmationDialogPhase];
}

id objc_msgSend_isConfirmedDialogPhase(void *a1, const char *a2, ...)
{
  return _[a1 isConfirmedDialogPhase];
}

id objc_msgSend_isConnectedToAudioAccessory(void *a1, const char *a2, ...)
{
  return _[a1 isConnectedToAudioAccessory];
}

id objc_msgSend_isConnectedToCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 isConnectedToCarPlay];
}

id objc_msgSend_isDateInToday_(void *a1, const char *a2, ...)
{
  return [a1 isDateInToday:];
}

id objc_msgSend_isDateInYesterday_(void *a1, const char *a2, ...)
{
  return [a1 isDateInYesterday:];
}

id objc_msgSend_isDescendantOfView_(void *a1, const char *a2, ...)
{
  return [a1 isDescendantOfView:];
}

id objc_msgSend_isDeviceSilentMode(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceSilentMode];
}

id objc_msgSend_isDeviceUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 isDeviceUnlocked];
}

id objc_msgSend_isDismissalReasonEligibleForSurvey_(void *a1, const char *a2, ...)
{
  return [a1 isDismissalReasonEligibleForSurvey:];
}

id objc_msgSend_isDisplayingResponse(void *a1, const char *a2, ...)
{
  return _[a1 isDisplayingResponse];
}

id objc_msgSend_isEditable(void *a1, const char *a2, ...)
{
  return _[a1 isEditable];
}

id objc_msgSend_isEditedTextSameAsUtterance_(void *a1, const char *a2, ...)
{
  return [a1 isEditedTextSameAsUtterance:];
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _[a1 isEditing];
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isEnabled];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToArray:];
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToNumber:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isErrorDialogPhase(void *a1, const char *a2, ...)
{
  return _[a1 isErrorDialogPhase];
}

id objc_msgSend_isExpensive(void *a1, const char *a2, ...)
{
  return _[a1 isExpensive];
}

id objc_msgSend_isExpository(void *a1, const char *a2, ...)
{
  return _[a1 isExpository];
}

id objc_msgSend_isEyesFree(void *a1, const char *a2, ...)
{
  return _[a1 isEyesFree];
}

id objc_msgSend_isFinal(void *a1, const char *a2, ...)
{
  return _[a1 isFinal];
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 isFirstResponder];
}

id objc_msgSend_isForAppleTV(void *a1, const char *a2, ...)
{
  return _[a1 isForAppleTV];
}

id objc_msgSend_isForBluetoothCar(void *a1, const char *a2, ...)
{
  return _[a1 isForBluetoothCar];
}

id objc_msgSend_isForCarDND(void *a1, const char *a2, ...)
{
  return _[a1 isForCarDND];
}

id objc_msgSend_isForEyesFree(void *a1, const char *a2, ...)
{
  return _[a1 isForEyesFree];
}

id objc_msgSend_isForStark(void *a1, const char *a2, ...)
{
  return _[a1 isForStark];
}

id objc_msgSend_isFromDevice(void *a1, const char *a2, ...)
{
  return _[a1 isFromDevice];
}

id objc_msgSend_isGuideHidden(void *a1, const char *a2, ...)
{
  return _[a1 isGuideHidden];
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _[a1 isHidden];
}

id objc_msgSend_isHintItem(void *a1, const char *a2, ...)
{
  return _[a1 isHintItem];
}

id objc_msgSend_isInActiveCall(void *a1, const char *a2, ...)
{
  return _[a1 isInActiveCall];
}

id objc_msgSend_isInAmbient(void *a1, const char *a2, ...)
{
  return _[a1 isInAmbient];
}

id objc_msgSend_isInHardwareKeyboardMode(void *a1, const char *a2, ...)
{
  return _[a1 isInHardwareKeyboardMode];
}

id objc_msgSend_isInitialBringUp(void *a1, const char *a2, ...)
{
  return _[a1 isInitialBringUp];
}

id objc_msgSend_isLastRow(void *a1, const char *a2, ...)
{
  return _[a1 isLastRow];
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isLoaded];
}

id objc_msgSend_isLoading(void *a1, const char *a2, ...)
{
  return _[a1 isLoading];
}

id objc_msgSend_isNLServerFallbackDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isNLServerFallbackDisabled];
}

id objc_msgSend_isNetworkAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isNetworkAvailable];
}

id objc_msgSend_isNew(void *a1, const char *a2, ...)
{
  return _[a1 isNew];
}

id objc_msgSend_isPersistentAcrossInvocations(void *a1, const char *a2, ...)
{
  return _[a1 isPersistentAcrossInvocations];
}

id objc_msgSend_isPresentingUIFromRemoteDevice(void *a1, const char *a2, ...)
{
  return _[a1 isPresentingUIFromRemoteDevice];
}

id objc_msgSend_isPresentingVisualIntelligenceCamera(void *a1, const char *a2, ...)
{
  return _[a1 isPresentingVisualIntelligenceCamera];
}

id objc_msgSend_isProvidingFeedback(void *a1, const char *a2, ...)
{
  return _[a1 isProvidingFeedback];
}

id objc_msgSend_isReflectionDialogPhase(void *a1, const char *a2, ...)
{
  return _[a1 isReflectionDialogPhase];
}

id objc_msgSend_isRequestEmergencyCall(void *a1, const char *a2, ...)
{
  return _[a1 isRequestEmergencyCall];
}

id objc_msgSend_isRequestMadeWithPhysicalDeviceInteraction(void *a1, const char *a2, ...)
{
  return _[a1 isRequestMadeWithPhysicalDeviceInteraction];
}

id objc_msgSend_isSAEEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSAEEnabled];
}

id objc_msgSend_isScreenOffBeforeRequest(void *a1, const char *a2, ...)
{
  return _[a1 isScreenOffBeforeRequest];
}

id objc_msgSend_isSiriSafeForLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 isSiriSafeForLockScreen];
}

id objc_msgSend_isSpeechSynthesisErrorUserCancelled_(void *a1, const char *a2, ...)
{
  return [a1 isSpeechSynthesisErrorUserCancelled:];
}

id objc_msgSend_isSubclassOfClass_(void *a1, const char *a2, ...)
{
  return [a1 isSubclassOfClass:];
}

id objc_msgSend_isSuggestionSourceWithTextInput(void *a1, const char *a2, ...)
{
  return _[a1 isSuggestionSourceWithTextInput];
}

id objc_msgSend_isSurveyEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSurveyEnabled];
}

id objc_msgSend_isSynchronizedWithServer(void *a1, const char *a2, ...)
{
  return _[a1 isSynchronizedWithServer];
}

id objc_msgSend_isSynthesisQueueEmpty_(void *a1, const char *a2, ...)
{
  return [a1 isSynthesisQueueEmpty:];
}

id objc_msgSend_isTemporary(void *a1, const char *a2, ...)
{
  return _[a1 isTemporary];
}

id objc_msgSend_isTypeToSiriRequest(void *a1, const char *a2, ...)
{
  return _[a1 isTypeToSiriRequest];
}

id objc_msgSend_isVideoPlaying(void *a1, const char *a2, ...)
{
  return _[a1 isVideoPlaying];
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isViewLoaded];
}

id objc_msgSend_isVirgin(void *a1, const char *a2, ...)
{
  return _[a1 isVirgin];
}

id objc_msgSend_isVoiceOverTouchEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isVoiceOverTouchEnabled];
}

id objc_msgSend_isVoiceTriggerRequest(void *a1, const char *a2, ...)
{
  return _[a1 isVoiceTriggerRequest];
}

id objc_msgSend_isWakeGestureAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isWakeGestureAvailable];
}

id objc_msgSend_isWiredMicOrBTHeadsetOrWx(void *a1, const char *a2, ...)
{
  return _[a1 isWiredMicOrBTHeadsetOrWx];
}

id objc_msgSend_item(void *a1, const char *a2, ...)
{
  return _[a1 item];
}

id objc_msgSend_itemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 itemAtIndexPath:];
}

id objc_msgSend_itemType(void *a1, const char *a2, ...)
{
  return _[a1 itemType];
}

id objc_msgSend_itemWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 itemWithIdentifier:];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_keyboardHasContent(void *a1, const char *a2, ...)
{
  return _[a1 keyboardHasContent];
}

id objc_msgSend_keyboardLayoutGuide(void *a1, const char *a2, ...)
{
  return _[a1 keyboardLayoutGuide];
}

id objc_msgSend_keyline(void *a1, const char *a2, ...)
{
  return _[a1 keyline];
}

id objc_msgSend_keysSortedByValueUsingComparator_(void *a1, const char *a2, ...)
{
  return [a1 keysSortedByValueUsingComparator:];
}

id objc_msgSend_knowledgeStoreWithDirectReadOnlyAccess(void *a1, const char *a2, ...)
{
  return _[a1 knowledgeStoreWithDirectReadOnlyAccess];
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _[a1 label];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_labelWithLightWeightRegularFont(void *a1, const char *a2, ...)
{
  return _[a1 labelWithLightWeightRegularFont];
}

id objc_msgSend_labelWithMediumWeightSubtextFont(void *a1, const char *a2, ...)
{
  return _[a1 labelWithMediumWeightSubtextFont];
}

id objc_msgSend_language(void *a1, const char *a2, ...)
{
  return _[a1 language];
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _[a1 languageCode];
}

id objc_msgSend_lastItem(void *a1, const char *a2, ...)
{
  return _[a1 lastItem];
}

id objc_msgSend_lastName(void *a1, const char *a2, ...)
{
  return _[a1 lastName];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastSurveyReportKey(void *a1, const char *a2, ...)
{
  return _[a1 lastSurveyReportKey];
}

id objc_msgSend_latitude(void *a1, const char *a2, ...)
{
  return _[a1 latitude];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layout(void *a1, const char *a2, ...)
{
  return _[a1 layout];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leadingAnchor];
}

id objc_msgSend_leftView(void *a1, const char *a2, ...)
{
  return _[a1 leftView];
}

id objc_msgSend_leftViewRectForBounds_(void *a1, const char *a2, ...)
{
  return [a1 leftViewRectForBounds:];
}

id objc_msgSend_legibilityWeight(void *a1, const char *a2, ...)
{
  return _[a1 legibilityWeight];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lightTextColor(void *a1, const char *a2, ...)
{
  return _[a1 lightTextColor];
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return _[a1 lineHeight];
}

id objc_msgSend_listItemToPickInAutodisambiguationForListItems_(void *a1, const char *a2, ...)
{
  return [a1 listItemToPickInAutodisambiguationForListItems:];
}

id objc_msgSend_listenAfterSpeaking(void *a1, const char *a2, ...)
{
  return _[a1 listenAfterSpeaking];
}

id objc_msgSend_listenAfterSpeakingBehavior(void *a1, const char *a2, ...)
{
  return _[a1 listenAfterSpeakingBehavior];
}

id objc_msgSend_listenAfterSpeakingDisabled(void *a1, const char *a2, ...)
{
  return _[a1 listenAfterSpeakingDisabled];
}

id objc_msgSend_load(void *a1, const char *a2, ...)
{
  return _[a1 load];
}

id objc_msgSend_localeForCompactViewController_(void *a1, const char *a2, ...)
{
  return [a1 localeForCompactViewController:];
}

id objc_msgSend_localeForSAEViewController_(void *a1, const char *a2, ...)
{
  return [a1 localeForSAEViewController:];
}

id objc_msgSend_localeForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 localeForSiriPresentation:];
}

id objc_msgSend_localizedCompactTriggerPhraseForLanguageCode_(void *a1, const char *a2, ...)
{
  return [a1 localizedCompactTriggerPhraseForLanguageCode:];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedStringForLabel_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForLabel:];
}

id objc_msgSend_localizedTriggerPhraseForLanguageCode_(void *a1, const char *a2, ...)
{
  return [a1 localizedTriggerPhraseForLanguageCode:];
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _[a1 location];
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return [a1 locationInView:];
}

id objc_msgSend_lockStateForCompactViewController_(void *a1, const char *a2, ...)
{
  return [a1 lockStateForCompactViewController:];
}

id objc_msgSend_lockStateForSAEViewController_(void *a1, const char *a2, ...)
{
  return [a1 lockStateForSAEViewController:];
}

id objc_msgSend_logClientFeedbackPresented_(void *a1, const char *a2, ...)
{
  return [a1 logClientFeedbackPresented:];
}

id objc_msgSend_logClientFeedbackPresented_dialogIdentifierProvider_(void *a1, const char *a2, ...)
{
  return [a1 logClientFeedbackPresented:dialogIdentifierProvider:];
}

id objc_msgSend_logDisambiguationItemSelected_(void *a1, const char *a2, ...)
{
  return [a1 logDisambiguationItemSelected:];
}

id objc_msgSend_logDrillInInteractionForSnippetViewControllerIfNecessary_(void *a1, const char *a2, ...)
{
  return [a1 logDrillInInteractionForSnippetViewControllerIfNecessary:];
}

id objc_msgSend_logEventWithType_context_(void *a1, const char *a2, ...)
{
  return [a1 logEventWithType:context:];
}

id objc_msgSend_logPunchOutEventForSiriViewController_aceCommand_URL_appID_sashItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logPunchOutEventForSiriViewController:aceCommand:URL:appID:sashItem:");
}

id objc_msgSend_logPunchOutEventForSiriViewController_aceCommands_sashItem_(void *a1, const char *a2, ...)
{
  return [a1 logPunchOutEventForSiriViewController:aceCommands:sashItem];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _[a1 longValue];
}

id objc_msgSend_longitude(void *a1, const char *a2, ...)
{
  return _[a1 longitude];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_lowresTrailerUri(void *a1, const char *a2, ...)
{
  return _[a1 lowresTrailerUri];
}

id objc_msgSend_machServiceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 machServiceIdentifier];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_makeDropletContainerShadowView(void *a1, const char *a2, ...)
{
  return _[a1 makeDropletContainerShadowView];
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyAndVisible];
}

id objc_msgSend_makeKeyWindow(void *a1, const char *a2, ...)
{
  return _[a1 makeKeyWindow];
}

id objc_msgSend_makeRequestWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 makeRequestWithCompletion:];
}

id objc_msgSend_makeTextViewVisible_(void *a1, const char *a2, ...)
{
  return [a1 makeTextViewVisible:];
}

id objc_msgSend_materialViewWithRecipe_configuration_(void *a1, const char *a2, ...)
{
  return [a1 materialViewWithRecipe:configuration:];
}

id objc_msgSend_maxSizeForSnippet(void *a1, const char *a2, ...)
{
  return _[a1 maxSizeForSnippet];
}

id objc_msgSend_maxSnippetWidth(void *a1, const char *a2, ...)
{
  return _[a1 maxSnippetWidth];
}

id objc_msgSend_maximumHeightForResultView_(void *a1, const char *a2, ...)
{
  return [a1 maximumHeightForResultView:];
}

id objc_msgSend_meetsThresholdForPresenting(void *a1, const char *a2, ...)
{
  return _[a1 meetsThresholdForPresenting];
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _[a1 message];
}

id objc_msgSend_messageType(void *a1, const char *a2, ...)
{
  return _[a1 messageType];
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _[a1 metadata];
}

id objc_msgSend_metricsContext(void *a1, const char *a2, ...)
{
  return _[a1 metricsContext];
}

id objc_msgSend_middleName(void *a1, const char *a2, ...)
{
  return _[a1 middleName];
}

id objc_msgSend_minimumAutoDismissalTimeInMs(void *a1, const char *a2, ...)
{
  return _[a1 minimumAutoDismissalTimeInMs];
}

id objc_msgSend_minimumDisplayDurationForAddViews_(void *a1, const char *a2, ...)
{
  return [a1 minimumDisplayDurationForAddViews];
}

id objc_msgSend_minimumTextFieldHeight(void *a1, const char *a2, ...)
{
  return _[a1 minimumTextFieldHeight];
}

id objc_msgSend_missed(void *a1, const char *a2, ...)
{
  return _[a1 missed];
}

id objc_msgSend_mitoseWithDuration_(void *a1, const char *a2, ...)
{
  return [a1 mitoseWithDuration:];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modelData(void *a1, const char *a2, ...)
{
  return _[a1 modelData];
}

id objc_msgSend_movieClips(void *a1, const char *a2, ...)
{
  return _[a1 movieClips];
}

id objc_msgSend_multiLevelViewHasContent(void *a1, const char *a2, ...)
{
  return _[a1 multiLevelViewHasContent];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _[a1 navigationBar];
}

id objc_msgSend_navigationBarHasContent(void *a1, const char *a2, ...)
{
  return _[a1 navigationBarHasContent];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_navigationStackIsPopping(void *a1, const char *a2, ...)
{
  return _[a1 navigationStackIsPopping];
}

id objc_msgSend_navigationStackSize(void *a1, const char *a2, ...)
{
  return _[a1 navigationStackSize];
}

id objc_msgSend_nickName(void *a1, const char *a2, ...)
{
  return _[a1 nickName];
}

id objc_msgSend_notificationCenter(void *a1, const char *a2, ...)
{
  return _[a1 notificationCenter];
}

id objc_msgSend_notificationRequestWithUserInfo_(void *a1, const char *a2, ...)
{
  return [a1 notificationRequestWithUserInfo:];
}

id objc_msgSend_notifyClientStateManagerSpeakingEnded_(void *a1, const char *a2, ...)
{
  return [a1 notifyClientStateManagerSpeakingEnded:];
}

id objc_msgSend_notifyStateManagerSpeakingEnded(void *a1, const char *a2, ...)
{
  return _[a1 notifyStateManagerSpeakingEnded];
}

id objc_msgSend_notifyVoiceTriggeredSiriSessionCancelled(void *a1, const char *a2, ...)
{
  return _[a1 notifyVoiceTriggeredSiriSessionCancelled];
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_number(void *a1, const char *a2, ...)
{
  return _[a1 number];
}

id objc_msgSend_numberOfAlternativeUtterances(void *a1, const char *a2, ...)
{
  return _[a1 numberOfAlternativeUtterances];
}

id objc_msgSend_numberOfChildrenForItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 numberOfChildrenForItemAtIndexPath:];
}

id objc_msgSend_numberOfChildrenForItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfChildrenForItemWithIdentifier:");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInteger:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndex:];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_offsetFromPosition_toPosition_(void *a1, const char *a2, ...)
{
  return [a1 offsetFromPosition:toPosition:];
}

id objc_msgSend_onlyContainsSnippet(void *a1, const char *a2, ...)
{
  return _[a1 onlyContainsSnippet];
}

id objc_msgSend_openURL_bundleId_inPlace_completion_(void *a1, const char *a2, ...)
{
  return [a1 openURL:bundleId:inPlace:completion:];
}

id objc_msgSend_operation(void *a1, const char *a2, ...)
{
  return _[a1 operation];
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_originalRank(void *a1, const char *a2, ...)
{
  return _[a1 originalRank];
}

id objc_msgSend_originalRequestOptions(void *a1, const char *a2, ...)
{
  return _[a1 originalRequestOptions];
}

id objc_msgSend_originalScore(void *a1, const char *a2, ...)
{
  return _[a1 originalScore];
}

id objc_msgSend_outgoing(void *a1, const char *a2, ...)
{
  return _[a1 outgoing];
}

id objc_msgSend_output(void *a1, const char *a2, ...)
{
  return _[a1 output];
}

id objc_msgSend_outputDevices(void *a1, const char *a2, ...)
{
  return _[a1 outputDevices];
}

id objc_msgSend_outputVoice(void *a1, const char *a2, ...)
{
  return _[a1 outputVoice];
}

id objc_msgSend_paragraphStyleForCurrentScaleWithTextAlignment_(void *a1, const char *a2, ...)
{
  return [a1 paragraphStyleForCurrentScaleWithTextAlignment:];
}

id objc_msgSend_parentOfItemWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 parentOfItemWithIdentifier:];
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _[a1 parentViewController];
}

id objc_msgSend_parseStringWithFormat_error_(void *a1, const char *a2, ...)
{
  return [a1 parseStringWithFormat:error:];
}

id objc_msgSend_parseStringWithFormat_error_containsPrivacySensitiveContents_(void *a1, const char *a2, ...)
{
  return [a1 parseStringWithFormat:error:containsPrivacySensitiveContents:];
}

id objc_msgSend_parsedUtteranceFromText_context_(void *a1, const char *a2, ...)
{
  return [a1 parsedUtteranceFromText:context:];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return [a1 pathForResource:ofType:];
}

id objc_msgSend_patternId(void *a1, const char *a2, ...)
{
  return _[a1 patternId];
}

id objc_msgSend_patternType(void *a1, const char *a2, ...)
{
  return _[a1 patternType];
}

id objc_msgSend_pendingAddViewsWithReflectionDialogPhaseWithRefId_(void *a1, const char *a2, ...)
{
  return [a1 pendingAddViewsWithReflectionDialogPhaseWithRefId:];
}

id objc_msgSend_percentComplete(void *a1, const char *a2, ...)
{
  return _[a1 percentComplete];
}

id objc_msgSend_performAceCommand_turnIdentifier_machAbsoluteTime_(void *a1, const char *a2, ...)
{
  return [a1 performAceCommand:turnIdentifier:machAbsoluteTime:];
}

id objc_msgSend_performAnimatedBlur_usingSpringWithMass_stiffness_damping_(void *a1, const char *a2, ...)
{
  return [a1 performAnimatedBlur:usingSpringWithMass:stiffness:damping:];
}

id objc_msgSend_performAnimatedBlur_withDuration_(void *a1, const char *a2, ...)
{
  return [a1 performAnimatedBlur:withDuration:];
}

id objc_msgSend_performIntentEnabledAppAuthorizationCheck(void *a1, const char *a2, ...)
{
  return _[a1 performIntentEnabledAppAuthorizationCheck];
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:];
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:withObject:afterDelay:];
}

id objc_msgSend_phones(void *a1, const char *a2, ...)
{
  return _[a1 phones];
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _[a1 placeholder];
}

id objc_msgSend_placesImageAboveText(void *a1, const char *a2, ...)
{
  return _[a1 placesImageAboveText];
}

id objc_msgSend_platterViewWithBlurEffectStyle_(void *a1, const char *a2, ...)
{
  return [a1 platterViewWithBlurEffectStyle:];
}

id objc_msgSend_playTrailer(void *a1, const char *a2, ...)
{
  return _[a1 playTrailer];
}

id objc_msgSend_playWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 playWithCompletionHandler:];
}

id objc_msgSend_playables(void *a1, const char *a2, ...)
{
  return _[a1 playables];
}

id objc_msgSend_playbackCommand(void *a1, const char *a2, ...)
{
  return _[a1 playbackCommand];
}

id objc_msgSend_player(void *a1, const char *a2, ...)
{
  return _[a1 player];
}

id objc_msgSend_pods(void *a1, const char *a2, ...)
{
  return _[a1 pods];
}

id objc_msgSend_popAnimationType(void *a1, const char *a2, ...)
{
  return _[a1 popAnimationType];
}

id objc_msgSend_popObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 popObjectsUsingBlock:];
}

id objc_msgSend_popToRootViewController(void *a1, const char *a2, ...)
{
  return _[a1 popToRootViewController];
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popToRootViewControllerAnimated:];
}

id objc_msgSend_popTopObject(void *a1, const char *a2, ...)
{
  return _[a1 popTopObject];
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popViewControllerAnimated:];
}

id objc_msgSend_portraitContentSize(void *a1, const char *a2, ...)
{
  return _[a1 portraitContentSize];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:];
}

id objc_msgSend_postPillMergeBounce(void *a1, const char *a2, ...)
{
  return _[a1 postPillMergeBounce];
}

id objc_msgSend_postSiriInternalUIDSurveyNotification_activationHistory_requestSource_dismissalReason_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postSiriInternalUIDSurveyNotification:activationHistory:requestSource:dismissalReason:");
}

id objc_msgSend_postSiriUnavailableNotification_(void *a1, const char *a2, ...)
{
  return [a1 postSiriUnavailableNotification];
}

id objc_msgSend_postStorageLowNotification(void *a1, const char *a2, ...)
{
  return _[a1 postStorageLowNotification];
}

id objc_msgSend_predicateForEventsWithStringValue_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEventsWithStringValue:];
}

id objc_msgSend_preferredAsset(void *a1, const char *a2, ...)
{
  return _[a1 preferredAsset];
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSizeCategory];
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preferredFontForTextStyle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 preferredFontForTextStyle:];
}

id objc_msgSend_preferredSpeakableTextVoice(void *a1, const char *a2, ...)
{
  return _[a1 preferredSpeakableTextVoice];
}

id objc_msgSend_preferredStatusBarStyle(void *a1, const char *a2, ...)
{
  return _[a1 preferredStatusBarStyle];
}

id objc_msgSend_prefillWithText_(void *a1, const char *a2, ...)
{
  return [a1 prefillWithText:];
}

id objc_msgSend_prefix(void *a1, const char *a2, ...)
{
  return _[a1 prefix];
}

id objc_msgSend_preloadPresentationBundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 preloadPresentationBundleWithIdentifier:];
}

id objc_msgSend_preloadProviders(void *a1, const char *a2, ...)
{
  return _[a1 preloadProviders];
}

id objc_msgSend_premptivelyResumeMedia(void *a1, const char *a2, ...)
{
  return _[a1 premptivelyResumeMedia];
}

id objc_msgSend_prepareAddViewsCommandForConversation_(void *a1, const char *a2, ...)
{
  return [a1 prepareAddViewsCommandForConversation:];
}

id objc_msgSend_prepareForDrillInAnimation(void *a1, const char *a2, ...)
{
  return _[a1 prepareForDrillInAnimation];
}

id objc_msgSend_prepareForDrillinAnimation(void *a1, const char *a2, ...)
{
  return _[a1 prepareForDrillinAnimation];
}

id objc_msgSend_prepareForPopAnimationOfType_(void *a1, const char *a2, ...)
{
  return [a1 prepareForPopAnimationOfType:];
}

id objc_msgSend_prepareForTypeToSiriActivation(void *a1, const char *a2, ...)
{
  return _[a1 prepareForTypeToSiriActivation];
}

id objc_msgSend_prepareForUpdatesWithDiff_updateBlock_(void *a1, const char *a2, ...)
{
  return [a1 prepareForUpdatesWithDiff:updateBlock:];
}

id objc_msgSend_prepareUpdateViewsCommandForConversation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareUpdateViewsCommandForConversation:");
}

id objc_msgSend_presentGenerativeAssistantOnboardingFlowWithCommand_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentGenerativeAssistantOnboardingFlowWithCommand:completion:];
}

id objc_msgSend_presentGenerativeAssistantOnboardingFlowWithCommandId_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentGenerativeAssistantOnboardingFlowWithCommandId:completion:];
}

id objc_msgSend_presentOnboardingFlowForCommand_(void *a1, const char *a2, ...)
{
  return [a1 presentOnboardingFlowForCommand:];
}

id objc_msgSend_presentPhotoPicker_withSearchString_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentPhotoPicker:withSearchString:completion:];
}

id objc_msgSend_presentSurveyNotificationWithContext_activationHistory_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 presentSurveyNotificationWithContext:activationHistory:withCompletion:];
}

id objc_msgSend_presentUtteranceViewControllerFromViewController_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentUtteranceViewControllerFromViewController:animateAlongsideTransition:completion:];
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:animated:completion:];
}

id objc_msgSend_presentViewController_fromViewController_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 presentViewController:fromViewController:animateAlongsideTransition:completion:];
}

id objc_msgSend_presentWithContext_(void *a1, const char *a2, ...)
{
  return [a1 presentWithContext:];
}

id objc_msgSend_presentation(void *a1, const char *a2, ...)
{
  return _[a1 presentation];
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _[a1 presentationController];
}

id objc_msgSend_presentationDidPresentKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 presentationDidPresentKeyboard];
}

id objc_msgSend_presentationDomain(void *a1, const char *a2, ...)
{
  return _[a1 presentationDomain];
}

id objc_msgSend_presentationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 presentationIdentifier];
}

id objc_msgSend_presentationState(void *a1, const char *a2, ...)
{
  return _[a1 presentationState];
}

id objc_msgSend_presentationStateChangedItemIndexPaths(void *a1, const char *a2, ...)
{
  return _[a1 presentationStateChangedItemIndexPaths];
}

id objc_msgSend_presentationStateUpdatedFromPresentationState_toPresentationState_(void *a1, const char *a2, ...)
{
  return [a1 presentationStateUpdatedFromPresentationState:toPresentationState:];
}

id objc_msgSend_presentationWithIdentifier_delegate_dataSource_(void *a1, const char *a2, ...)
{
  return [a1 presentationWithIdentifier:delegate:dataSource:];
}

id objc_msgSend_presentedResponseElements(void *a1, const char *a2, ...)
{
  return _[a1 presentedResponseElements];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_presentingSystemUI(void *a1, const char *a2, ...)
{
  return _[a1 presentingSystemUI];
}

id objc_msgSend_previousConversationDidLoad_(void *a1, const char *a2, ...)
{
  return [a1 previousConversationDidLoad];
}

id objc_msgSend_previousSiriRequestErrorTimestamp(void *a1, const char *a2, ...)
{
  return _[a1 previousSiriRequestErrorTimestamp];
}

id objc_msgSend_prewarmForFirstTapOfQuickTypeToSiriGesture(void *a1, const char *a2, ...)
{
  return _[a1 prewarmForFirstTapOfQuickTypeToSiriGesture];
}

id objc_msgSend_prewarmIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 prewarmIfNeeded];
}

id objc_msgSend_principalClass(void *a1, const char *a2, ...)
{
  return _[a1 principalClass];
}

id objc_msgSend_printedOnly(void *a1, const char *a2, ...)
{
  return _[a1 printedOnly];
}

id objc_msgSend_processData_usingProcedure_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processData:usingProcedure:completion:");
}

id objc_msgSend_processDelayedItem_(void *a1, const char *a2, ...)
{
  return [a1 processDelayedItem:];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processSessionEvent_isSpeechSynthesisSpeaking_machAbsoluteTime_(void *a1, const char *a2, ...)
{
  return [a1 processSessionEvent:isSpeechSynthesisSpeaking:machAbsoluteTime:];
}

id objc_msgSend_promptEntryView(void *a1, const char *a2, ...)
{
  return _[a1 promptEntryView];
}

id objc_msgSend_promptedUserForInput(void *a1, const char *a2, ...)
{
  return _[a1 promptedUserForInput];
}

id objc_msgSend_propertyList(void *a1, const char *a2, ...)
{
  return _[a1 propertyList];
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return [a1 propertyListWithData:options:format:error:];
}

id objc_msgSend_pulseHelpButton(void *a1, const char *a2, ...)
{
  return _[a1 pulseHelpButton];
}

id objc_msgSend_punchOut(void *a1, const char *a2, ...)
{
  return _[a1 punchOut];
}

id objc_msgSend_punchOutName(void *a1, const char *a2, ...)
{
  return _[a1 punchOutName];
}

id objc_msgSend_punchOutUri(void *a1, const char *a2, ...)
{
  return _[a1 punchOutUri];
}

id objc_msgSend_pushObject_(void *a1, const char *a2, ...)
{
  return [a1 pushObject:];
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushViewController:animated:];
}

id objc_msgSend_queryStreamForCountOfEventsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryStreamForCountOfEventsWithCompletion:");
}

id objc_msgSend_rangeEnclosingPosition_withGranularity_inDirection_(void *a1, const char *a2, ...)
{
  return [a1 rangeEnclosingPosition:withGranularity:inDirection:];
}

id objc_msgSend_rangeListOfDifferingTextFromTargetTokenList_comparedToBaseTokenList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeListOfDifferingTextFromTargetTokenList:comparedToBaseTokenList:");
}

id objc_msgSend_rangeListOfDifferingTextFromUtteranceAtIndex_comparedToBaseUtteranceAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeListOfDifferingTextFromUtteranceAtIndex:comparedToBaseUtteranceAtIndex:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfString:options:];
}

id objc_msgSend_rangeValue(void *a1, const char *a2, ...)
{
  return _[a1 rangeValue];
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _[a1 reason];
}

id objc_msgSend_receivedCommand_(void *a1, const char *a2, ...)
{
  return [a1 receivedCommand:];
}

id objc_msgSend_recognition(void *a1, const char *a2, ...)
{
  return _[a1 recognition];
}

id objc_msgSend_recordActionCompletedForAceCommand_success_(void *a1, const char *a2, ...)
{
  return [a1 recordActionCompletedForAceCommand:success:];
}

id objc_msgSend_recordActionStartedForAceCommand_(void *a1, const char *a2, ...)
{
  return [a1 recordActionStartedForAceCommand:];
}

id objc_msgSend_recordActionStoppedForAceCommand_(void *a1, const char *a2, ...)
{
  return [a1 recordActionStoppedForAceCommand:];
}

id objc_msgSend_recordDismissalEventWithContext_markAsUnintended_(void *a1, const char *a2, ...)
{
  return [a1 recordDismissalEventWithContext:markAsUnintended:];
}

id objc_msgSend_recordDismissalMetricWithContext_inputType_previousLongPressBehavior_longPressBehavior_(void *a1, const char *a2, ...)
{
  return [a1 recordDismissalMetricWithContext:inputType:previousLongPressBehavior:longPressBehavior:];
}

id objc_msgSend_recordEvent_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 recordEvent:completionHandler:];
}

id objc_msgSend_recordMitigationEndMetricWithContext_activationHistory_numberOfDaysSinceLastChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordMitigationEndMetricWithContext:activationHistory:numberOfDaysSinceLastChange:");
}

id objc_msgSend_recordMitigationStartMetricWithContext_activationHistory_numberOfDaysSinceLastChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordMitigationStartMetricWithContext:activationHistory:numberOfDaysSinceLastChange:");
}

id objc_msgSend_recordUIMetrics_(void *a1, const char *a2, ...)
{
  return [a1 recordUIMetrics:];
}

id objc_msgSend_recursive_setSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return [a1 recursive_setSemanticContentAttribute:];
}

id objc_msgSend_reduceMotionCarouselWithDuration_isFirstSnippet_(void *a1, const char *a2, ...)
{
  return [a1 reduceMotionCarouselWithDuration:isFirstSnippet:];
}

id objc_msgSend_reduceMotionPillMergeWithDuration_(void *a1, const char *a2, ...)
{
  return [a1 reduceMotionPillMergeWithDuration:];
}

id objc_msgSend_reduceOrbOpacity_(void *a1, const char *a2, ...)
{
  return [a1 reduceOrbOpacity:];
}

id objc_msgSend_ref(void *a1, const char *a2, ...)
{
  return _[a1 ref];
}

id objc_msgSend_refId(void *a1, const char *a2, ...)
{
  return _[a1 refId];
}

id objc_msgSend_refreshUnderstandingOnDeviceAssetsAvailableAsync(void *a1, const char *a2, ...)
{
  return _[a1 refreshUnderstandingOnDeviceAssetsAvailableAsync];
}

id objc_msgSend_registerAceCommand_completion_(void *a1, const char *a2, ...)
{
  return [a1 registerAceCommand:completion:];
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forCellReuseIdentifier:];
}

id objc_msgSend_registerClass_forCellWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forCellWithReuseIdentifier:];
}

id objc_msgSend_registerClass_forSupplementaryViewOfKind_withReuseIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 registerClass:forSupplementaryViewOfKind:withReuseIdentifier:];
}

id objc_msgSend_registerForTaskWithIdentifier_usingQueue_launchHandler_(void *a1, const char *a2, ...)
{
  return [a1 registerForTaskWithIdentifier:usingQueue:launchHandler:];
}

id objc_msgSend_registerForTraitChanges_withHandler_(void *a1, const char *a2, ...)
{
  return [a1 registerForTraitChanges:withHandler:];
}

id objc_msgSend_registerNonButtonSourceWithType_withUUID_(void *a1, const char *a2, ...)
{
  return [a1 registerNonButtonSourceWithType:withUUID:];
}

id objc_msgSend_registerProvider_forNamespace_(void *a1, const char *a2, ...)
{
  return [a1 registerProvider:forNamespace:];
}

id objc_msgSend_registerReplayCallback_(void *a1, const char *a2, ...)
{
  return [a1 registerReplayCallback:];
}

id objc_msgSend_regularString(void *a1, const char *a2, ...)
{
  return _[a1 regularString];
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _[a1 reloadData];
}

id objc_msgSend_remoteTarget(void *a1, const char *a2, ...)
{
  return _[a1 remoteTarget];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAlternativeFeatureViews_(void *a1, const char *a2, ...)
{
  return [a1 removeAlternativeFeatureViews:];
}

id objc_msgSend_removeConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConstraints:");
}

id objc_msgSend_removeConversationWithIdentifier_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 removeConversationWithIdentifier:completionBlock:];
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return _[a1 removeFromParentViewController];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 removeGestureRecognizer:];
}

id objc_msgSend_removeItemsAtIndexPaths_(void *a1, const char *a2, ...)
{
  return [a1 removeItemsAtIndexPaths:];
}

id objc_msgSend_removeItemsFollowingItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return [a1 removeItemsFollowingItemAtIndexPath:];
}

id objc_msgSend_removeItemsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 removeItemsWithIdentifiers:];
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeLightEffectsView(void *a1, const char *a2, ...)
{
  return _[a1 removeLightEffectsView];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [a1 removeObject:];
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectAtIndex:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:name:object:];
}

id objc_msgSend_removeResponseElements_(void *a1, const char *a2, ...)
{
  return [a1 removeResponseElements:];
}

id objc_msgSend_removeResponseElementsIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 removeResponseElementsIfNeeded:];
}

id objc_msgSend_removeSpeechAlternativeViewAndUpdateUtteranceTextIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 removeSpeechAlternativeViewAndUpdateUtteranceTextIfNecessary];
}

id objc_msgSend_removeSpeechAlternatives(void *a1, const char *a2, ...)
{
  return _[a1 removeSpeechAlternatives];
}

id objc_msgSend_removeSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 removeSuggestions];
}

id objc_msgSend_removeTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return [a1 removeTarget:action:forControlEvents:];
}

id objc_msgSend_removeTrait_(void *a1, const char *a2, ...)
{
  return [a1 removeTrait:];
}

id objc_msgSend_removeTransientItems(void *a1, const char *a2, ...)
{
  return _[a1 removeTransientItems];
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return [a1 replaceObjectAtIndex:withObject:];
}

id objc_msgSend_replyAceCommand(void *a1, const char *a2, ...)
{
  return _[a1 replyAceCommand];
}

id objc_msgSend_reportConcernButtonEnabled(void *a1, const char *a2, ...)
{
  return _[a1 reportConcernButtonEnabled];
}

id objc_msgSend_requestBackgroundBlurVisible_forReason_(void *a1, const char *a2, ...)
{
  return [a1 requestBackgroundBlurVisible:forReason:];
}

id objc_msgSend_requestContext(void *a1, const char *a2, ...)
{
  return _[a1 requestContext];
}

id objc_msgSend_requestDidPresentViewForErrorCommand_(void *a1, const char *a2, ...)
{
  return [a1 requestDidPresentViewForErrorCommand:];
}

id objc_msgSend_requestDidPresentViewForUICommand_(void *a1, const char *a2, ...)
{
  return [a1 requestDidPresentViewForUICommand:];
}

id objc_msgSend_requestEndBehavior(void *a1, const char *a2, ...)
{
  return _[a1 requestEndBehavior];
}

id objc_msgSend_requestHandlingStatus(void *a1, const char *a2, ...)
{
  return _[a1 requestHandlingStatus];
}

id objc_msgSend_requestHostBlurVisible_reason_fence_(void *a1, const char *a2, ...)
{
  return [a1 requestHostBlurVisible:reason:fence:];
}

id objc_msgSend_requestInfo(void *a1, const char *a2, ...)
{
  return _[a1 requestInfo];
}

id objc_msgSend_requestMitigationStatusBasedOnRequestClassification_withRequestSource_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 requestMitigationStatusBasedOnRequestClassification:withRequestSource:withCompletion:];
}

id objc_msgSend_requestOptions(void *a1, const char *a2, ...)
{
  return _[a1 requestOptions];
}

id objc_msgSend_requestSource(void *a1, const char *a2, ...)
{
  return _[a1 requestSource];
}

id objc_msgSend_requestSystemApertureCollapse(void *a1, const char *a2, ...)
{
  return _[a1 requestSystemApertureCollapse];
}

id objc_msgSend_requestWithIdentifier_content_trigger_(void *a1, const char *a2, ...)
{
  return [a1 requestWithIdentifier:content:trigger:];
}

id objc_msgSend_requireFinalSpeechHypothesisBeforeAppearance(void *a1, const char *a2, ...)
{
  return _[a1 requireFinalSpeechHypothesisBeforeAppearance];
}

id objc_msgSend_resetContextTypes_(void *a1, const char *a2, ...)
{
  return [a1 resetContextTypes:];
}

id objc_msgSend_resetErrorState(void *a1, const char *a2, ...)
{
  return _[a1 resetErrorState];
}

id objc_msgSend_resetIsInTamaleAndCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 resetIsInTamaleAndCollapsed];
}

id objc_msgSend_resetViewsAndClearASR_(void *a1, const char *a2, ...)
{
  return [a1 resetViewsAndClearASR:];
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 resignFirstResponder];
}

id objc_msgSend_resignKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 resignKeyboard];
}

id objc_msgSend_resignKeyboardIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 resignKeyboardIfNeeded];
}

id objc_msgSend_resourceUrl(void *a1, const char *a2, ...)
{
  return _[a1 resourceUrl];
}

id objc_msgSend_responseMode(void *a1, const char *a2, ...)
{
  return _[a1 responseMode];
}

id objc_msgSend_responseName(void *a1, const char *a2, ...)
{
  return _[a1 responseName];
}

id objc_msgSend_responseType(void *a1, const char *a2, ...)
{
  return _[a1 responseType];
}

id objc_msgSend_responseViewId(void *a1, const char *a2, ...)
{
  return _[a1 responseViewId];
}

id objc_msgSend_restoreOriginalEditTextContents_(void *a1, const char *a2, ...)
{
  return [a1 restoreOriginalEditTextContents:];
}

id objc_msgSend_restoreSubviewsFromDrillIn(void *a1, const char *a2, ...)
{
  return _[a1 restoreSubviewsFromDrillIn];
}

id objc_msgSend_resultContentView(void *a1, const char *a2, ...)
{
  return _[a1 resultContentView];
}

id objc_msgSend_resultDidChangeForAceCommand_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultDidChangeForAceCommand:");
}

id objc_msgSend_resultDidChangeForAceCommand_completion_(void *a1, const char *a2, ...)
{
  return [a1 resultDidChangeForAceCommand:completion:];
}

id objc_msgSend_resultForAceCommand_(void *a1, const char *a2, ...)
{
  return [a1 resultForAceCommand:];
}

id objc_msgSend_resultSnippetBackgroundView(void *a1, const char *a2, ...)
{
  return _[a1 resultSnippetBackgroundView];
}

id objc_msgSend_resultTranscriptItems(void *a1, const char *a2, ...)
{
  return _[a1 resultTranscriptItems];
}

id objc_msgSend_resultView(void *a1, const char *a2, ...)
{
  return _[a1 resultView];
}

id objc_msgSend_resultViewContentSize(void *a1, const char *a2, ...)
{
  return _[a1 resultViewContentSize];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_resumeInterruptedAudioPlaybackIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 resumeInterruptedAudioPlaybackIfNeeded];
}

id objc_msgSend_resumeWithError_(void *a1, const char *a2, ...)
{
  return [a1 resumeWithError:];
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 reuseIdentifier];
}

id objc_msgSend_revealLatencyView(void *a1, const char *a2, ...)
{
  return _[a1 revealLatencyView];
}

id objc_msgSend_revealRecognizedSpeech(void *a1, const char *a2, ...)
{
  return _[a1 revealRecognizedSpeech];
}

id objc_msgSend_revealUserUtterance_backingAceObject_(void *a1, const char *a2, ...)
{
  return [a1 revealUserUtterance:backingAceObject:];
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_revisionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 revisionIdentifier];
}

id objc_msgSend_rightView(void *a1, const char *a2, ...)
{
  return _[a1 rightView];
}

id objc_msgSend_rightViewRectForBounds_(void *a1, const char *a2, ...)
{
  return [a1 rightViewRectForBounds:];
}

id objc_msgSend_rollbackClearContext(void *a1, const char *a2, ...)
{
  return _[a1 rollbackClearContext];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _[a1 row];
}

id objc_msgSend_runPPTWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 runPPTWithOptions:];
}

id objc_msgSend_runSiriKitExecutorCommandWithContext_payload_(void *a1, const char *a2, ...)
{
  return [a1 runSiriKitExecutorCommandWithContext:payload:];
}

id objc_msgSend_saeViewController_handleStartLocalRequest_turnIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewController:handleStartLocalRequest:turnIdentifier:");
}

id objc_msgSend_saeViewController_preventOutsideTouchesFromDismissingSiri_(void *a1, const char *a2, ...)
{
  return [a1 saeViewController:preventOutsideTouchesFromDismissingSiri:];
}

id objc_msgSend_saeViewController_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 saeViewController:requestsKeyboardWithCompletion:];
}

id objc_msgSend_saeViewController_setStatusViewHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewController:setStatusViewHidden:");
}

id objc_msgSend_saeViewController_speakText_isPhonetic_completion_(void *a1, const char *a2, ...)
{
  return [a1 saeViewController:speakText:isPhonetic:completion:];
}

id objc_msgSend_saeViewController_viewDidAppearForAceObject_(void *a1, const char *a2, ...)
{
  return [a1 saeViewController:viewDidAppearForAceObject:];
}

id objc_msgSend_saeViewController_viewDidDisappearForAceObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saeViewController:viewDidDisappearForAceObject:");
}

id objc_msgSend_saeViewController_willBeginEditingOfType_(void *a1, const char *a2, ...)
{
  return [a1 saeViewController:willBeginEditingOfType:];
}

id objc_msgSend_saeViewControllerCancelHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return [a1 saeViewControllerCancelHIDEventDefferal:];
}

id objc_msgSend_saeViewControllerDidEndEditing_(void *a1, const char *a2, ...)
{
  return [a1 saeViewControllerDidEndEditing:];
}

id objc_msgSend_saeViewControllerRequestsHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return [a1 saeViewControllerRequestsHIDEventDefferal];
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaInsets];
}

id objc_msgSend_sash(void *a1, const char *a2, ...)
{
  return _[a1 sash];
}

id objc_msgSend_sashItem(void *a1, const char *a2, ...)
{
  return _[a1 sashItem];
}

id objc_msgSend_saveConversation_withIdentifier_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 saveConversation:withIdentifier:completionBlock:];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scaleFactor(void *a1, const char *a2, ...)
{
  return _[a1 scaleFactor];
}

id objc_msgSend_scheduleAutoDismissalForLongIdling_(void *a1, const char *a2, ...)
{
  return [a1 scheduleAutoDismissalForLongIdling];
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:];
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_screen(void *a1, const char *a2, ...)
{
  return _[a1 screen];
}

id objc_msgSend_searchUIBackgroundColorUpdateSuccessful_(void *a1, const char *a2, ...)
{
  return [a1 searchUIBackgroundColorUpdateSuccessful];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _[a1 section];
}

id objc_msgSend_sectionName(void *a1, const char *a2, ...)
{
  return _[a1 sectionName];
}

id objc_msgSend_selectedBackgroundView(void *a1, const char *a2, ...)
{
  return _[a1 selectedBackgroundView];
}

id objc_msgSend_selectionResponse(void *a1, const char *a2, ...)
{
  return _[a1 selectionResponse];
}

id objc_msgSend_selectionResultsForAlternateTextAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 selectionResultsForAlternateTextAtIndex:];
}

id objc_msgSend_selectionResultsForEditedText_(void *a1, const char *a2, ...)
{
  return [a1 selectionResultsForEditedText:];
}

id objc_msgSend_selectionText(void *a1, const char *a2, ...)
{
  return _[a1 selectionText];
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _[a1 semanticContentAttribute];
}

id objc_msgSend_sendBTCarInvocationContext(void *a1, const char *a2, ...)
{
  return _[a1 sendBTCarInvocationContext];
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return [a1 sendEvent:];
}

id objc_msgSend_sendSubviewToBack_(void *a1, const char *a2, ...)
{
  return [a1 sendSubviewToBack:];
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _[a1 separatorColor];
}

id objc_msgSend_serverUtterances(void *a1, const char *a2, ...)
{
  return _[a1 serverUtterances];
}

id objc_msgSend_serviceBulletinWithIdentifier_replyHandler_(void *a1, const char *a2, ...)
{
  return [a1 serviceBulletinWithIdentifier:replyHandler:];
}

id objc_msgSend_serviceCancelHIDEventDefferal(void *a1, const char *a2, ...)
{
  return _[a1 serviceCancelHIDEventDefferal];
}

id objc_msgSend_serviceDidDetectMicButtonLongPressBegan(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidDetectMicButtonLongPressBegan];
}

id objc_msgSend_serviceDidDetectMicButtonLongPressEnded(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidDetectMicButtonLongPressEnded];
}

id objc_msgSend_serviceDidDetectMicButtonTap(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidDetectMicButtonTap];
}

id objc_msgSend_serviceDidDismissBugReporter(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidDismissBugReporter];
}

id objc_msgSend_serviceDidDismissViewControllerWithStatusBarStyle_(void *a1, const char *a2, ...)
{
  return [a1 serviceDidDismissViewControllerWithStatusBarStyle:];
}

id objc_msgSend_serviceDidEndEditing(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidEndEditing];
}

id objc_msgSend_serviceDidEnterUITrackingMode(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidEnterUITrackingMode];
}

id objc_msgSend_serviceDidExitUITrackingMode(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidExitUITrackingMode];
}

id objc_msgSend_serviceDidPresentBugReporter(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidPresentBugReporter];
}

id objc_msgSend_serviceDidPresentConversationFromBreadcrumb(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidPresentConversationFromBreadcrumb];
}

id objc_msgSend_serviceDidPresentUserInterface(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidPresentUserInterface];
}

id objc_msgSend_serviceDidPresentViewControllerWithStatusBarStyle_(void *a1, const char *a2, ...)
{
  return [a1 serviceDidPresentViewControllerWithStatusBarStyle:];
}

id objc_msgSend_serviceDidRequestCurrentTextInput_(void *a1, const char *a2, ...)
{
  return [a1 serviceDidRequestCurrentTextInput:];
}

id objc_msgSend_serviceDidRequestKeyboard_(void *a1, const char *a2, ...)
{
  return [a1 serviceDidRequestKeyboard:];
}

id objc_msgSend_serviceDidRequestKeyboard_minimized_(void *a1, const char *a2, ...)
{
  return [a1 serviceDidRequestKeyboard:minimized:];
}

id objc_msgSend_serviceDidResetTextInput(void *a1, const char *a2, ...)
{
  return _[a1 serviceDidResetTextInput];
}

id objc_msgSend_servicePresentationDidChangePeekMode_(void *a1, const char *a2, ...)
{
  return [a1 servicePresentationDidChangePeekMode:];
}

id objc_msgSend_servicePresentationDidChangeVisualState_(void *a1, const char *a2, ...)
{
  return [a1 servicePresentationDidChangeVisualState:];
}

id objc_msgSend_servicePresentedIntentWithBundleId_(void *a1, const char *a2, ...)
{
  return [a1 servicePresentedIntentWithBundleId:];
}

id objc_msgSend_serviceQuality(void *a1, const char *a2, ...)
{
  return _[a1 serviceQuality];
}

id objc_msgSend_serviceRequestsDismissalWithUserInfo_withReason_(void *a1, const char *a2, ...)
{
  return [a1 serviceRequestsDismissalWithUserInfo:withReason:];
}

id objc_msgSend_serviceRequestsHIDEventDefferal(void *a1, const char *a2, ...)
{
  return _[a1 serviceRequestsHIDEventDefferal];
}

id objc_msgSend_serviceStartGuidedAccess(void *a1, const char *a2, ...)
{
  return _[a1 serviceStartGuidedAccess];
}

id objc_msgSend_serviceStartRequestWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 serviceStartRequestWithOptions:];
}

id objc_msgSend_serviceViewControllerRequestsDismissalWithDismissalReason_completion_(void *a1, const char *a2, ...)
{
  return [a1 serviceViewControllerRequestsDismissalWithDismissalReason:completion:];
}

id objc_msgSend_serviceViewControllerRequestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 serviceViewControllerRequestsKeyboardWithCompletion:];
}

id objc_msgSend_serviceViewControllerRequestsPresentation_(void *a1, const char *a2, ...)
{
  return [a1 serviceViewControllerRequestsPresentation];
}

id objc_msgSend_serviceViewControllerWillChangeKeyboardVisibility_(void *a1, const char *a2, ...)
{
  return [a1 serviceViewControllerWillChangeKeyboardVisibility:];
}

id objc_msgSend_serviceWillBeginEditing(void *a1, const char *a2, ...)
{
  return _[a1 serviceWillBeginEditing];
}

id objc_msgSend_serviceWillDismissViewControllerWithStatusBarStyle_(void *a1, const char *a2, ...)
{
  return [a1 serviceWillDismissViewControllerWithStatusBarStyle:];
}

id objc_msgSend_serviceWillPresentViewControllerWithStatusBarStyle_(void *a1, const char *a2, ...)
{
  return [a1 serviceWillPresentViewControllerWithStatusBarStyle:];
}

id objc_msgSend_sessionId(void *a1, const char *a2, ...)
{
  return _[a1 sessionId];
}

id objc_msgSend_sessionInfoForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 sessionInfoForSiriPresentation:];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAccessibilityDifferentiateWithoutColor_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityDifferentiateWithoutColor:];
}

id objc_msgSend_setAccessibilityIgnoresInvertColors_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityIgnoresInvertColors:];
}

id objc_msgSend_setAccessibilityInvertColors_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityInvertColors:];
}

id objc_msgSend_setAccessibilityReduceMotion_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityReduceMotion:];
}

id objc_msgSend_setAccessibilityReduceTransparency_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityReduceTransparency:];
}

id objc_msgSend_setAceId_(void *a1, const char *a2, ...)
{
  return [a1 setAceId];
}

id objc_msgSend_setAceObject_(void *a1, const char *a2, ...)
{
  return [a1 setAceObject];
}

id objc_msgSend_setAcousticIdEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setAcousticIdEnabled:];
}

id objc_msgSend_setActivationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setActivationHandler:];
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return [a1 setActive:];
}

id objc_msgSend_setActive_withOptions_error_(void *a1, const char *a2, ...)
{
  return [a1 setActive:withOptions:error:];
}

id objc_msgSend_setActiveRequestOptions_(void *a1, const char *a2, ...)
{
  return [a1 setActiveRequestOptions:];
}

id objc_msgSend_setActiveSmartDialogView_(void *a1, const char *a2, ...)
{
  return [a1 setActiveSmartDialogView:];
}

id objc_msgSend_setActiveViewModelController_(void *a1, const char *a2, ...)
{
  return [a1 setActiveViewModelController:];
}

id objc_msgSend_setAdditionalContentSnippetViews_(void *a1, const char *a2, ...)
{
  return [a1 setAdditionalContentSnippetViews:];
}

id objc_msgSend_setAdditionalSafeAreaInsets_(void *a1, const char *a2, ...)
{
  return [a1 setAdditionalSafeAreaInsets:];
}

id objc_msgSend_setAdditive_(void *a1, const char *a2, ...)
{
  return [a1 setAdditive:];
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return [a1 setAdjustsFontSizeToFitWidth:];
}

id objc_msgSend_setAlertContext(void *a1, const char *a2, ...)
{
  return _[a1 setAlertContext];
}

id objc_msgSend_setAllowAutomaticContentViewsScaling_(void *a1, const char *a2, ...)
{
  return [a1 setAllowAutomaticContentViewsScaling:];
}

id objc_msgSend_setAllowsCancellation_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsCancellation:];
}

id objc_msgSend_setAllowsGroupBlending_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsGroupBlending:];
}

id objc_msgSend_setAllowsGroupOpacity_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsGroupOpacity:];
}

id objc_msgSend_setAllowsHitTesting_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsHitTesting:];
}

id objc_msgSend_setAllowsPictureInPicturePlayback_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsPictureInPicturePlayback:];
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return [a1 setAlpha:];
}

id objc_msgSend_setAlphaComponent_(void *a1, const char *a2, ...)
{
  return [a1 setAlphaComponent:];
}

id objc_msgSend_setAlwaysShowRecognizedSpeech_(void *a1, const char *a2, ...)
{
  return [a1 setAlwaysShowRecognizedSpeech:];
}

id objc_msgSend_setAnimatingBackgroundView_(void *a1, const char *a2, ...)
{
  return [a1 setAnimatingBackgroundView:];
}

id objc_msgSend_setAnimationDuration_(void *a1, const char *a2, ...)
{
  return [a1 setAnimationDuration:];
}

id objc_msgSend_setAnimationOptions_(void *a1, const char *a2, ...)
{
  return [a1 setAnimationOptions:];
}

id objc_msgSend_setAppAvailableInStorefront_(void *a1, const char *a2, ...)
{
  return [a1 setAppAvailableInStorefront:];
}

id objc_msgSend_setAppWindow_(void *a1, const char *a2, ...)
{
  return [a1 setAppWindow:];
}

id objc_msgSend_setApplicationBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setApplicationBundleIdentifier:];
}

id objc_msgSend_setApproximateSpeechDuration_(void *a1, const char *a2, ...)
{
  return [a1 setApproximateSpeechDuration:];
}

id objc_msgSend_setAssistantBulletin_(void *a1, const char *a2, ...)
{
  return [a1 setAssistantBulletin:];
}

id objc_msgSend_setAttentionLostTimeout_(void *a1, const char *a2, ...)
{
  return [a1 setAttentionLostTimeout:];
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return [a1 setAttributedText:];
}

id objc_msgSend_setAttributes_range_(void *a1, const char *a2, ...)
{
  return [a1 setAttributes:range:];
}

id objc_msgSend_setAudioSessionID_(void *a1, const char *a2, ...)
{
  return [a1 setAudioSessionID:];
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return [a1 setAutoresizingMask:];
}

id objc_msgSend_setAuxiliaryView_(void *a1, const char *a2, ...)
{
  return [a1 setAuxiliaryView:];
}

id objc_msgSend_setBackgroundBlurViewController_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundBlurViewController:];
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundColor:];
}

id objc_msgSend_setBackgroundPlatteredCardView_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundPlatteredCardView:];
}

id objc_msgSend_setBackgroundPlatteredCardViewOriginalFrame_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundPlatteredCardViewOriginalFrame:];
}

id objc_msgSend_setBackgroundView_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundView:];
}

id objc_msgSend_setBackingStore_(void *a1, const char *a2, ...)
{
  return [a1 setBackingStore:];
}

id objc_msgSend_setBlendEffectEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setBlendEffectEnabled:];
}

id objc_msgSend_setBlueValue_(void *a1, const char *a2, ...)
{
  return [a1 setBlueValue:];
}

id objc_msgSend_setBluetoothCarInvocationContext_(void *a1, const char *a2, ...)
{
  return [a1 setBluetoothCarInvocationContext:];
}

id objc_msgSend_setBlurrableView_(void *a1, const char *a2, ...)
{
  return [a1 setBlurrableView:];
}

id objc_msgSend_setBody_(void *a1, const char *a2, ...)
{
  return [a1 setBody:];
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setBool:forKey:];
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return [a1 setBorderColor:];
}

id objc_msgSend_setBorderStyle_(void *a1, const char *a2, ...)
{
  return [a1 setBorderStyle:];
}

id objc_msgSend_setBorderWidth_(void *a1, const char *a2, ...)
{
  return [a1 setBorderWidth:];
}

id objc_msgSend_setBottomContentInset_(void *a1, const char *a2, ...)
{
  return [a1 setBottomContentInset:];
}

id objc_msgSend_setBottomContentInset_animatedWithContext_(void *a1, const char *a2, ...)
{
  return [a1 setBottomContentInset:animatedWithContext:];
}

id objc_msgSend_setBottomFloatingButton_(void *a1, const char *a2, ...)
{
  return [a1 setBottomFloatingButton:];
}

id objc_msgSend_setBounces_(void *a1, const char *a2, ...)
{
  return [a1 setBounces:];
}

id objc_msgSend_setBoundingMapRegion_(void *a1, const char *a2, ...)
{
  return [a1 setBoundingMapRegion:];
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return [a1 setBounds:];
}

id objc_msgSend_setBugReportingAvailable_(void *a1, const char *a2, ...)
{
  return [a1 setBugReportingAvailable:];
}

id objc_msgSend_setBundleId_(void *a1, const char *a2, ...)
{
  return [a1 setBundleId:];
}

id objc_msgSend_setBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setBundleIdentifier:];
}

id objc_msgSend_setButtonDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setButtonDelegate:];
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return [a1 setByAddingObjectsFromSet:];
}

id objc_msgSend_setCallRecipient_(void *a1, const char *a2, ...)
{
  return [a1 setCallRecipient:];
}

id objc_msgSend_setCallRecords_(void *a1, const char *a2, ...)
{
  return [a1 setCallRecords:];
}

id objc_msgSend_setCanBeRefreshed_(void *a1, const char *a2, ...)
{
  return [a1 setCanBeRefreshed:];
}

id objc_msgSend_setCanUseServerTTS_(void *a1, const char *a2, ...)
{
  return [a1 setCanUseServerTTS:];
}

id objc_msgSend_setCardData_(void *a1, const char *a2, ...)
{
  return [a1 setCardData:];
}

id objc_msgSend_setCardId_(void *a1, const char *a2, ...)
{
  return [a1 setCardId:];
}

id objc_msgSend_setCardSectionId_(void *a1, const char *a2, ...)
{
  return [a1 setCardSectionId:];
}

id objc_msgSend_setCardSections_(void *a1, const char *a2, ...)
{
  return [a1 setCardSections:];
}

id objc_msgSend_setCategoryIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setCategoryIdentifier:];
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return [a1 setCenter:];
}

id objc_msgSend_setChevronHidden_(void *a1, const char *a2, ...)
{
  return [a1 setChevronHidden:];
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return [a1 setClasses:forSelector:argumentIndex:ofReply:];
}

id objc_msgSend_setClassifiedAsUnintended_(void *a1, const char *a2, ...)
{
  return [a1 setClassifiedAsUnintended:];
}

id objc_msgSend_setClientStateManagerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setClientStateManagerDelegate:];
}

id objc_msgSend_setClientWindowContextID_(void *a1, const char *a2, ...)
{
  return [a1 setClientWindowContextID:];
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setClipsToBounds:];
}

id objc_msgSend_setCollapseLoadingWith_collapseLoadingSize_(void *a1, const char *a2, ...)
{
  return [a1 setCollapseLoadingWith:collapseLoadingSize:];
}

id objc_msgSend_setCombinedRank_(void *a1, const char *a2, ...)
{
  return [a1 setCombinedRank:];
}

id objc_msgSend_setCombinedScore_(void *a1, const char *a2, ...)
{
  return [a1 setCombinedScore:];
}

id objc_msgSend_setCommands_(void *a1, const char *a2, ...)
{
  return [a1 setCommands:];
}

id objc_msgSend_setCompactViewHasContent_(void *a1, const char *a2, ...)
{
  return [a1 setCompactViewHasContent:];
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setCompletion:];
}

id objc_msgSend_setCompositingFilter_(void *a1, const char *a2, ...)
{
  return [a1 setCompositingFilter:];
}

id objc_msgSend_setConfiguration_shouldReset_(void *a1, const char *a2, ...)
{
  return [a1 setConfiguration:shouldReset:];
}

id objc_msgSend_setConfirmationOptions_(void *a1, const char *a2, ...)
{
  return [a1 setConfirmationOptions:];
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return [a1 setConstant:];
}

id objc_msgSend_setContainerView_(void *a1, const char *a2, ...)
{
  return [a1 setContainerView:];
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentCompressionResistancePriority:forAxis:];
}

id objc_msgSend_setContentHuggingPriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentHuggingPriority:forAxis:];
}

id objc_msgSend_setContentLayoutEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setContentLayoutEnabled:];
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return [a1 setContentMode:];
}

id objc_msgSend_setContentPlatterViewController_(void *a1, const char *a2, ...)
{
  return [a1 setContentPlatterViewController:];
}

id objc_msgSend_setContentType_(void *a1, const char *a2, ...)
{
  return [a1 setContentType:];
}

id objc_msgSend_setContentViewController_(void *a1, const char *a2, ...)
{
  return [a1 setContentViewController:];
}

id objc_msgSend_setContentViewControllers_(void *a1, const char *a2, ...)
{
  return [a1 setContentViewControllers:];
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return [a1 setContext:];
}

id objc_msgSend_setContextInfo_(void *a1, const char *a2, ...)
{
  return [a1 setContextInfo:];
}

id objc_msgSend_setContextMenuIsPresented_(void *a1, const char *a2, ...)
{
  return [a1 setContextMenuIsPresented:];
}

id objc_msgSend_setContinuousCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 setContinuousCornerRadius:];
}

id objc_msgSend_setConversationItemIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setConversationItemIdentifier:];
}

id objc_msgSend_setConversationSnippetViews_(void *a1, const char *a2, ...)
{
  return [a1 setConversationSnippetViews:];
}

id objc_msgSend_setConversationViewHidden_(void *a1, const char *a2, ...)
{
  return [a1 setConversationViewHidden:];
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return [a1 setCornerRadius:];
}

id objc_msgSend_setCornerRoundingStyle_(void *a1, const char *a2, ...)
{
  return [a1 setCornerRoundingStyle:];
}

id objc_msgSend_setCurrentScene_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentScene:];
}

id objc_msgSend_setCustomBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setCustomBackgroundColor:];
}

id objc_msgSend_setCustomLeftPadding_(void *a1, const char *a2, ...)
{
  return [a1 setCustomLeftPadding:];
}

id objc_msgSend_setCustomRightPadding_(void *a1, const char *a2, ...)
{
  return [a1 setCustomRightPadding:];
}

id objc_msgSend_setDamping_(void *a1, const char *a2, ...)
{
  return [a1 setDamping:];
}

id objc_msgSend_setDarkenIntensity_(void *a1, const char *a2, ...)
{
  return [a1 setDarkenIntensity:];
}

id objc_msgSend_setData_(void *a1, const char *a2, ...)
{
  return [a1 setData:];
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return [a1 setDataSource:];
}

id objc_msgSend_setDateFormat_(void *a1, const char *a2, ...)
{
  return [a1 setDateFormat:];
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDateStyle:];
}

id objc_msgSend_setDefaultActionURL_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultActionURL:];
}

id objc_msgSend_setDefaultColorForTemplate_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultColorForTemplate:];
}

id objc_msgSend_setDefaultViewInsets_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultViewInsets:];
}

id objc_msgSend_setDeferredRendering_(void *a1, const char *a2, ...)
{
  return [a1 setDeferredRendering:];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDelegateClass_(void *a1, const char *a2, ...)
{
  return [a1 setDelegateClass:];
}

id objc_msgSend_setDescriptionText_(void *a1, const char *a2, ...)
{
  return [a1 setDescriptionText:];
}

id objc_msgSend_setDestinations_(void *a1, const char *a2, ...)
{
  return [a1 setDestinations:];
}

id objc_msgSend_setDeviceIsPad_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceIsPad:];
}

id objc_msgSend_setDialogIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDialogIdentifier:];
}

id objc_msgSend_setDialogIdentifiers_forAceViewSpeakableTextWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDialogIdentifiers:forAceViewSpeakableTextWithIdentifier:];
}

id objc_msgSend_setDialogPhase_(void *a1, const char *a2, ...)
{
  return [a1 setDialogPhase:];
}

id objc_msgSend_setDictationResult_withCorrectionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDictationResult:withCorrectionIdentifier:];
}

id objc_msgSend_setDictionary_(void *a1, const char *a2, ...)
{
  return [a1 setDictionary:];
}

id objc_msgSend_setDidReportInstrument_(void *a1, const char *a2, ...)
{
  return [a1 setDidReportInstrument:];
}

id objc_msgSend_setDismissalGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 setDismissalGestureRecognizer:];
}

id objc_msgSend_setDisplayColorScheme_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayColorScheme:];
}

id objc_msgSend_setDisplayContrast_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayContrast:];
}

id objc_msgSend_setDisplayGamut_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayGamut:];
}

id objc_msgSend_setDisplayScale_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayScale:];
}

id objc_msgSend_setDisplayView_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayView:];
}

id objc_msgSend_setDomain_(void *a1, const char *a2, ...)
{
  return [a1 setDomain:];
}

id objc_msgSend_setDomainObject_forIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDomainObject:forIdentifier:];
}

id objc_msgSend_setDomainObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setDomainObject:forKey:];
}

id objc_msgSend_setDropletContainerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDropletContainerDelegate:];
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return [a1 setDuration:];
}

id objc_msgSend_setDynamicTypeSize_(void *a1, const char *a2, ...)
{
  return [a1 setDynamicTypeSize:];
}

id objc_msgSend_setEarliestBeginDate_(void *a1, const char *a2, ...)
{
  return [a1 setEarliestBeginDate:];
}

id objc_msgSend_setEdgeInsets_(void *a1, const char *a2, ...)
{
  return [a1 setEdgeInsets:];
}

id objc_msgSend_setEditable_(void *a1, const char *a2, ...)
{
  return [a1 setEditable:];
}

id objc_msgSend_setEditableUtteranceViewHasContent_(void *a1, const char *a2, ...)
{
  return [a1 setEditableUtteranceViewHasContent:];
}

id objc_msgSend_setEffect_(void *a1, const char *a2, ...)
{
  return [a1 setEffect:];
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEnabled:];
}

id objc_msgSend_setEnablesReturnKeyAutomatically_(void *a1, const char *a2, ...)
{
  return [a1 setEnablesReturnKeyAutomatically:];
}

id objc_msgSend_setEnablesReturnKeyOnNonWhiteSpaceContent_(void *a1, const char *a2, ...)
{
  return [a1 setEnablesReturnKeyOnNonWhiteSpaceContent:];
}

id objc_msgSend_setEndTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setEndTextColor:];
}

id objc_msgSend_setEnded_(void *a1, const char *a2, ...)
{
  return [a1 setEnded:];
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return [a1 setError:];
}

id objc_msgSend_setErrorCode_(void *a1, const char *a2, ...)
{
  return [a1 setErrorCode:];
}

id objc_msgSend_setErrorDomain_(void *a1, const char *a2, ...)
{
  return [a1 setErrorDomain:];
}

id objc_msgSend_setEstimatedVisibleSnippetDisplaySize_(void *a1, const char *a2, ...)
{
  return [a1 setEstimatedVisibleSnippetDisplaySize:];
}

id objc_msgSend_setEventHandlerWithQueue_block_(void *a1, const char *a2, ...)
{
  return [a1 setEventHandlerWithQueue:block:];
}

id objc_msgSend_setEventMask_(void *a1, const char *a2, ...)
{
  return [a1 setEventMask:];
}

id objc_msgSend_setEventStreams_(void *a1, const char *a2, ...)
{
  return [a1 setEventStreams:];
}

id objc_msgSend_setExclusiveTouch_(void *a1, const char *a2, ...)
{
  return [a1 setExclusiveTouch:];
}

id objc_msgSend_setExists_(void *a1, const char *a2, ...)
{
  return [a1 setExists:];
}

id objc_msgSend_setExpandText_(void *a1, const char *a2, ...)
{
  return [a1 setExpandText:];
}

id objc_msgSend_setExpirationDate_(void *a1, const char *a2, ...)
{
  return [a1 setExpirationDate:];
}

id objc_msgSend_setExpirationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setExpirationHandler:];
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return [a1 setExportedInterface];
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return [a1 setExportedObject];
}

id objc_msgSend_setFaceTime_(void *a1, const char *a2, ...)
{
  return [a1 setFaceTime:];
}

id objc_msgSend_setFaceTimeAudio_(void *a1, const char *a2, ...)
{
  return [a1 setFaceTimeAudio:];
}

id objc_msgSend_setFakeNavigationBarBackgroundHidden_(void *a1, const char *a2, ...)
{
  return [a1 setFakeNavigationBarBackgroundHidden:];
}

id objc_msgSend_setFamilyName_(void *a1, const char *a2, ...)
{
  return [a1 setFamilyName:];
}

id objc_msgSend_setFeedbackDomain_(void *a1, const char *a2, ...)
{
  return [a1 setFeedbackDomain:];
}

id objc_msgSend_setFilters_(void *a1, const char *a2, ...)
{
  return [a1 setFilters:];
}

id objc_msgSend_setFirstCommonAncestralView_(void *a1, const char *a2, ...)
{
  return [a1 setFirstCommonAncestralView:];
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return [a1 setFont:];
}

id objc_msgSend_setFooter_(void *a1, const char *a2, ...)
{
  return [a1 setFooter:];
}

id objc_msgSend_setFormattedTextPieces_(void *a1, const char *a2, ...)
{
  return [a1 setFormattedTextPieces:];
}

id objc_msgSend_setFormattingContext_(void *a1, const char *a2, ...)
{
  return [a1 setFormattingContext:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setFromPlatteredCardView_(void *a1, const char *a2, ...)
{
  return [a1 setFromPlatteredCardView:];
}

id objc_msgSend_setFromPlatteredCardViewOriginalFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFromPlatteredCardViewOriginalFrame:];
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return [a1 setFromValue:];
}

id objc_msgSend_setFrontMostAppOrientation_(void *a1, const char *a2, ...)
{
  return [a1 setFrontMostAppOrientation:];
}

id objc_msgSend_setFullScreenDimmingLayerVisible_animated_(void *a1, const char *a2, ...)
{
  return [a1 setFullScreenDimmingLayerVisible:animated:];
}

id objc_msgSend_setGender_(void *a1, const char *a2, ...)
{
  return [a1 setGender:];
}

id objc_msgSend_setGenerativeAssistantOnboardingCommandAceID_(void *a1, const char *a2, ...)
{
  return [a1 setGenerativeAssistantOnboardingCommandAceID];
}

id objc_msgSend_setGivenName_(void *a1, const char *a2, ...)
{
  return [a1 setGivenName:];
}

id objc_msgSend_setGreenValue_(void *a1, const char *a2, ...)
{
  return [a1 setGreenValue:];
}

id objc_msgSend_setGuideHidden_(void *a1, const char *a2, ...)
{
  return [a1 setGuideHidden:];
}

id objc_msgSend_setGuideHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 setGuideHidden:animated:];
}

id objc_msgSend_setHandleTTSCodes_(void *a1, const char *a2, ...)
{
  return [a1 setHandleTTSCodes:];
}

id objc_msgSend_setHandledIntent_(void *a1, const char *a2, ...)
{
  return [a1 setHandledIntent:];
}

id objc_msgSend_setHasChevron_(void *a1, const char *a2, ...)
{
  return [a1 setHasChevron:];
}

id objc_msgSend_setHasDefaultAction_(void *a1, const char *a2, ...)
{
  return [a1 setHasDefaultAction:];
}

id objc_msgSend_setHasPresentedSiriAdvancedFeaturesAssetsDownloadNotification_(void *a1, const char *a2, ...)
{
  return [a1 setHasPresentedSiriAdvancedFeaturesAssetsDownloadNotification:];
}

id objc_msgSend_setHasPresentedSiriAssetsNotification_(void *a1, const char *a2, ...)
{
  return [a1 setHasPresentedSiriAssetsNotification];
}

id objc_msgSend_setHeaderText_(void *a1, const char *a2, ...)
{
  return [a1 setHeaderText:];
}

id objc_msgSend_setHeight_(void *a1, const char *a2, ...)
{
  return [a1 setHeight:];
}

id objc_msgSend_setHelpButtonEmphasized_(void *a1, const char *a2, ...)
{
  return [a1 setHelpButtonEmphasized:];
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return [a1 setHidden:];
}

id objc_msgSend_setHidesBackButton_(void *a1, const char *a2, ...)
{
  return [a1 setHidesBackButton:];
}

id objc_msgSend_setHidesTextRequestView_(void *a1, const char *a2, ...)
{
  return [a1 setHidesTextRequestView:];
}

id objc_msgSend_setHighlightColorForTemplate_(void *a1, const char *a2, ...)
{
  return [a1 setHighlightColorForTemplate];
}

id objc_msgSend_setHighlighted_(void *a1, const char *a2, ...)
{
  return [a1 setHighlighted:];
}

id objc_msgSend_setHiresTrailerUri_(void *a1, const char *a2, ...)
{
  return [a1 setHiresTrailerUri:];
}

id objc_msgSend_setHitTestsAsOpaque_(void *a1, const char *a2, ...)
{
  return [a1 setHitTestsAsOpaque:];
}

id objc_msgSend_setHyphenationFactor_(void *a1, const char *a2, ...)
{
  return [a1 setHyphenationFactor:];
}

id objc_msgSend_setIconImage_(void *a1, const char *a2, ...)
{
  return [a1 setIconImage:];
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setIdentifier:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setImageIsRightAligned_(void *a1, const char *a2, ...)
{
  return [a1 setImageIsRightAligned:];
}

id objc_msgSend_setImageRepresentationOfSnippet_(void *a1, const char *a2, ...)
{
  return [a1 setImageRepresentationOfSnippet:];
}

id objc_msgSend_setImageView_(void *a1, const char *a2, ...)
{
  return [a1 setImageView:];
}

id objc_msgSend_setInlinePredictionType_(void *a1, const char *a2, ...)
{
  return [a1 setInlinePredictionType:];
}

id objc_msgSend_setInputType_(void *a1, const char *a2, ...)
{
  return [a1 setInputType:];
}

id objc_msgSend_setInsertionPointColor_(void *a1, const char *a2, ...)
{
  return [a1 setInsertionPointColor:];
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setInteger:forKey:];
}

id objc_msgSend_setIntentMessageData_(void *a1, const char *a2, ...)
{
  return [a1 setIntentMessageData:];
}

id objc_msgSend_setIntentMessageName_(void *a1, const char *a2, ...)
{
  return [a1 setIntentMessageName:];
}

id objc_msgSend_setIntentMetadata_(void *a1, const char *a2, ...)
{
  return [a1 setIntentMetadata:];
}

id objc_msgSend_setIntentResponseMessageData_(void *a1, const char *a2, ...)
{
  return [a1 setIntentResponseMessageData:];
}

id objc_msgSend_setIntentResponseMessageName_(void *a1, const char *a2, ...)
{
  return [a1 setIntentResponseMessageName:];
}

id objc_msgSend_setInteractionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setInteractionDelegate:];
}

id objc_msgSend_setInteractionId_(void *a1, const char *a2, ...)
{
  return [a1 setInteractionId:];
}

id objc_msgSend_setInteractive_(void *a1, const char *a2, ...)
{
  return [a1 setInteractive:];
}

id objc_msgSend_setInterface_(void *a1, const char *a2, ...)
{
  return [a1 setInterface:];
}

id objc_msgSend_setInterface_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return [a1 setInterface:forSelector:argumentIndex:ofReply:];
}

id objc_msgSend_setInterfaceTarget_(void *a1, const char *a2, ...)
{
  return [a1 setInterfaceTarget:];
}

id objc_msgSend_setInterpretations_(void *a1, const char *a2, ...)
{
  return [a1 setInterpretations:];
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setInterruptionHandler:];
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setInvalidationHandler:];
}

id objc_msgSend_setIsBold_(void *a1, const char *a2, ...)
{
  return [a1 setIsBold:];
}

id objc_msgSend_setIsCentered_(void *a1, const char *a2, ...)
{
  return [a1 setIsCentered:];
}

id objc_msgSend_setIsDeviceLocked_(void *a1, const char *a2, ...)
{
  return [a1 setIsDeviceLocked:];
}

id objc_msgSend_setIsExternalKeyboardPresented_(void *a1, const char *a2, ...)
{
  return [a1 setIsExternalKeyboardPresented:];
}

id objc_msgSend_setIsFirstSnippet_(void *a1, const char *a2, ...)
{
  return [a1 setIsFirstSnippet:];
}

id objc_msgSend_setIsForBluetoothCar_(void *a1, const char *a2, ...)
{
  return [a1 setIsForBluetoothCar:];
}

id objc_msgSend_setIsFromDevice_(void *a1, const char *a2, ...)
{
  return [a1 setIsFromDevice:];
}

id objc_msgSend_setIsHint_(void *a1, const char *a2, ...)
{
  return [a1 setIsHint:];
}

id objc_msgSend_setIsInAmbient_(void *a1, const char *a2, ...)
{
  return [a1 setIsInAmbient:];
}

id objc_msgSend_setIsInAmbientInteractivity_(void *a1, const char *a2, ...)
{
  return [a1 setIsInAmbientInteractivity:];
}

id objc_msgSend_setIsInGenerativeAssistantTextFollowup(void *a1, const char *a2, ...)
{
  return _[a1 setIsInGenerativeAssistantTextFollowup];
}

id objc_msgSend_setIsInTamaleAndCollapsed_(void *a1, const char *a2, ...)
{
  return [a1 setIsInTamaleAndCollapsed:];
}

id objc_msgSend_setIsNextLevelCard_(void *a1, const char *a2, ...)
{
  return [a1 setIsNextLevelCard:];
}

id objc_msgSend_setIsTemplate_(void *a1, const char *a2, ...)
{
  return [a1 setIsTemplate:];
}

id objc_msgSend_setItem_(void *a1, const char *a2, ...)
{
  return [a1 setItem:];
}

id objc_msgSend_setItemType_(void *a1, const char *a2, ...)
{
  return [a1 setItemType:];
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return [a1 setItems:];
}

id objc_msgSend_setKeyboardAppearance_(void *a1, const char *a2, ...)
{
  return [a1 setKeyboardAppearance:];
}

id objc_msgSend_setKeyboardAppearanceBringUpTurnID_(void *a1, const char *a2, ...)
{
  return [a1 setKeyboardAppearanceBringUpTurnID];
}

id objc_msgSend_setKeyboardHasContent_(void *a1, const char *a2, ...)
{
  return [a1 setKeyboardHasContent:];
}

id objc_msgSend_setKeylineCustomBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setKeylineCustomBackgroundColor:];
}

id objc_msgSend_setKeylineType_(void *a1, const char *a2, ...)
{
  return [a1 setKeylineType:];
}

id objc_msgSend_setLanguageCode_(void *a1, const char *a2, ...)
{
  return [a1 setLanguageCode:];
}

id objc_msgSend_setLanguageString_(void *a1, const char *a2, ...)
{
  return [a1 setLanguageString:];
}

id objc_msgSend_setLargeSubheaderText_(void *a1, const char *a2, ...)
{
  return [a1 setLargeSubheaderText:];
}

id objc_msgSend_setLastKnownInterfaceOrientation_(void *a1, const char *a2, ...)
{
  return [a1 setLastKnownInterfaceOrientation:];
}

id objc_msgSend_setLat_(void *a1, const char *a2, ...)
{
  return [a1 setLat:];
}

id objc_msgSend_setLatestDeviceMotionEvent_(void *a1, const char *a2, ...)
{
  return [a1 setLatestDeviceMotionEvent:];
}

id objc_msgSend_setLatestFaceAwarenessEvent_(void *a1, const char *a2, ...)
{
  return [a1 setLatestFaceAwarenessEvent:];
}

id objc_msgSend_setLaunchId_(void *a1, const char *a2, ...)
{
  return [a1 setLaunchId:];
}

id objc_msgSend_setLeadingSubtitle_(void *a1, const char *a2, ...)
{
  return [a1 setLeadingSubtitle:];
}

id objc_msgSend_setLeadingText_(void *a1, const char *a2, ...)
{
  return [a1 setLeadingText:];
}

id objc_msgSend_setLeftView_(void *a1, const char *a2, ...)
{
  return [a1 setLeftView:];
}

id objc_msgSend_setLeftViewMode_(void *a1, const char *a2, ...)
{
  return [a1 setLeftViewMode:];
}

id objc_msgSend_setLineFragmentPadding_(void *a1, const char *a2, ...)
{
  return [a1 setLineFragmentPadding:];
}

id objc_msgSend_setLineSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setLineSpacing:];
}

id objc_msgSend_setListenAfterSpeaking_(void *a1, const char *a2, ...)
{
  return [a1 setListenAfterSpeaking:];
}

id objc_msgSend_setListenAfterSpeakingBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setListenAfterSpeakingBehavior:];
}

id objc_msgSend_setLng_(void *a1, const char *a2, ...)
{
  return [a1 setLng:];
}

id objc_msgSend_setLoadKeyboardsForSiriLanguage_(void *a1, const char *a2, ...)
{
  return [a1 setLoadKeyboardsForSiriLanguage:];
}

id objc_msgSend_setLocalImageType_(void *a1, const char *a2, ...)
{
  return [a1 setLocalImageType:];
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return [a1 setLocation:];
}

id objc_msgSend_setLowresTrailerUri_(void *a1, const char *a2, ...)
{
  return [a1 setLowresTrailerUri:];
}

id objc_msgSend_setMachServiceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setMachServiceIdentifier:];
}

id objc_msgSend_setMaskedCorners_(void *a1, const char *a2, ...)
{
  return [a1 setMaskedCorners:];
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return [a1 setMasksToBounds:];
}

id objc_msgSend_setMass_(void *a1, const char *a2, ...)
{
  return [a1 setMass:];
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return [a1 setMaxConcurrentOperationCount:];
}

id objc_msgSend_setMaxLines_(void *a1, const char *a2, ...)
{
  return [a1 setMaxLines:];
}

id objc_msgSend_setMergedResultsForTransition(void *a1, const char *a2, ...)
{
  return _[a1 setMergedResultsForTransition];
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return [a1 setMessage:];
}

id objc_msgSend_setMetricsContext_(void *a1, const char *a2, ...)
{
  return [a1 setMetricsContext:];
}

id objc_msgSend_setMiddleName_(void *a1, const char *a2, ...)
{
  return [a1 setMiddleName:];
}

id objc_msgSend_setMinimumFontSize_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumFontSize:];
}

id objc_msgSend_setMinimumIdleTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumIdleTimeInterval:];
}

id objc_msgSend_setMinimumInteritemSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumInteritemSpacing:];
}

id objc_msgSend_setMinimumLineSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumLineSpacing:];
}

id objc_msgSend_setMinimumScrollViewBottomInset_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumScrollViewBottomInset:];
}

id objc_msgSend_setModalPresentationCapturesStatusBarAppearance_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationCapturesStatusBarAppearance:];
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationStyle:];
}

id objc_msgSend_setModelData_(void *a1, const char *a2, ...)
{
  return [a1 setModelData:];
}

id objc_msgSend_setMultiLevelViewHasContent_(void *a1, const char *a2, ...)
{
  return [a1 setMultiLevelViewHasContent:];
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return [a1 setName:];
}

id objc_msgSend_setNamePrefix_(void *a1, const char *a2, ...)
{
  return [a1 setNamePrefix:];
}

id objc_msgSend_setNameSuffix_(void *a1, const char *a2, ...)
{
  return [a1 setNameSuffix:];
}

id objc_msgSend_setNavigating_(void *a1, const char *a2, ...)
{
  return [a1 setNavigating:];
}

id objc_msgSend_setNavigationBarHasContent_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHasContent:];
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHidden:];
}

id objc_msgSend_setNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHidden:animated:];
}

id objc_msgSend_setNavigationStackIsPopping_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationStackIsPopping:];
}

id objc_msgSend_setNavigationStackSize_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationStackSize:];
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsLayout];
}

id objc_msgSend_setNeedsStatusBarAppearanceUpdate(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsStatusBarAppearanceUpdate];
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _[a1 setNeedsUpdateConstraints];
}

id objc_msgSend_setNickname_(void *a1, const char *a2, ...)
{
  return [a1 setNickname:];
}

id objc_msgSend_setNotificationCategories_(void *a1, const char *a2, ...)
{
  return [a1 setNotificationCategories:];
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfLines:];
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:atIndexedSubscript:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setOnDeviceUtterancesPresent_(void *a1, const char *a2, ...)
{
  return [a1 setOnDeviceUtterancesPresent:];
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return [a1 setOpaque:];
}

id objc_msgSend_setOperation_(void *a1, const char *a2, ...)
{
  return [a1 setOperation:];
}

id objc_msgSend_setOrientation_(void *a1, const char *a2, ...)
{
  return [a1 setOrientation:];
}

id objc_msgSend_setOriginalRank_(void *a1, const char *a2, ...)
{
  return [a1 setOriginalRank:];
}

id objc_msgSend_setOriginalRequestOptions_(void *a1, const char *a2, ...)
{
  return [a1 setOriginalRequestOptions:];
}

id objc_msgSend_setOriginalScore_(void *a1, const char *a2, ...)
{
  return [a1 setOriginalScore:];
}

id objc_msgSend_setOutput_(void *a1, const char *a2, ...)
{
  return [a1 setOutput:];
}

id objc_msgSend_setPatternId_forViewId_(void *a1, const char *a2, ...)
{
  return [a1 setPatternId:forViewId:];
}

id objc_msgSend_setPercentComplete_(void *a1, const char *a2, ...)
{
  return [a1 setPercentComplete:];
}

id objc_msgSend_setPhrases_(void *a1, const char *a2, ...)
{
  return [a1 setPhrases:];
}

id objc_msgSend_setPinBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setPinBehavior:];
}

id objc_msgSend_setPinColor_(void *a1, const char *a2, ...)
{
  return [a1 setPinColor:];
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return [a1 setPlaceholder:];
}

id objc_msgSend_setPlayTrailer_(void *a1, const char *a2, ...)
{
  return [a1 setPlayTrailer:];
}

id objc_msgSend_setPlaybackCommand_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackCommand:];
}

id objc_msgSend_setPlaybackObserver_(void *a1, const char *a2, ...)
{
  return [a1 setPlaybackObserver:];
}

id objc_msgSend_setPlayer_(void *a1, const char *a2, ...)
{
  return [a1 setPlayer:];
}

id objc_msgSend_setPopAnimationType_(void *a1, const char *a2, ...)
{
  return [a1 setPopAnimationType:];
}

id objc_msgSend_setPopToRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPopToRootViewController:];
}

id objc_msgSend_setPopoverViewController_(void *a1, const char *a2, ...)
{
  return [a1 setPopoverViewController:];
}

id objc_msgSend_setPreSynthesizeTTSCommand_(void *a1, const char *a2, ...)
{
  return [a1 setPreSynthesizeTTSCommand:];
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setPredicate:];
}

id objc_msgSend_setPresentation_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 setPresentation:animated:completion:];
}

id objc_msgSend_setPresentationDomain_(void *a1, const char *a2, ...)
{
  return [a1 setPresentationDomain:];
}

id objc_msgSend_setPresentationIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setPresentationIdentifier:];
}

id objc_msgSend_setPresentationMode_(void *a1, const char *a2, ...)
{
  return [a1 setPresentationMode:];
}

id objc_msgSend_setPreviousInteractionInputType_(void *a1, const char *a2, ...)
{
  return [a1 setPreviousInteractionInputType:];
}

id objc_msgSend_setPreviousSiriRequestErrorTimestamp_(void *a1, const char *a2, ...)
{
  return [a1 setPreviousSiriRequestErrorTimestamp:];
}

id objc_msgSend_setPreviousTurnID_(void *a1, const char *a2, ...)
{
  return [a1 setPreviousTurnID:];
}

id objc_msgSend_setPreviousTurnIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setPreviousTurnIdentifier:];
}

id objc_msgSend_setPreviousUtterance_(void *a1, const char *a2, ...)
{
  return [a1 setPreviousUtterance:];
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return [a1 setPriority:];
}

id objc_msgSend_setPromptEntryView_(void *a1, const char *a2, ...)
{
  return [a1 setPromptEntryView:];
}

id objc_msgSend_setPronunciationContext_(void *a1, const char *a2, ...)
{
  return [a1 setPronunciationContext:];
}

id objc_msgSend_setPronunciationRequest_(void *a1, const char *a2, ...)
{
  return [a1 setPronunciationRequest:];
}

id objc_msgSend_setPunchOutUri_(void *a1, const char *a2, ...)
{
  return [a1 setPunchOutUri:];
}

id objc_msgSend_setPunchoutOptions_(void *a1, const char *a2, ...)
{
  return [a1 setPunchoutOptions:];
}

id objc_msgSend_setQualityOfService_(void *a1, const char *a2, ...)
{
  return [a1 setQualityOfService:];
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return [a1 setReason:];
}

id objc_msgSend_setRecognition_(void *a1, const char *a2, ...)
{
  return [a1 setRecognition:];
}

id objc_msgSend_setRedComponent_(void *a1, const char *a2, ...)
{
  return [a1 setRedComponent:];
}

id objc_msgSend_setRedValue_(void *a1, const char *a2, ...)
{
  return [a1 setRedValue:];
}

id objc_msgSend_setRefId_(void *a1, const char *a2, ...)
{
  return [a1 setRefId:];
}

id objc_msgSend_setReferenceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setReferenceIdentifier:];
}

id objc_msgSend_setReferencedCommands_(void *a1, const char *a2, ...)
{
  return [a1 setReferencedCommans:];
}

id objc_msgSend_setReferentialCommand_(void *a1, const char *a2, ...)
{
  return [a1 setReferentialCommand:];
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteObjectInterface:];
}

id objc_msgSend_setRequestHandlingStatus_(void *a1, const char *a2, ...)
{
  return [a1 setRequestHandlingStatus:];
}

id objc_msgSend_setRequestInfo_(void *a1, const char *a2, ...)
{
  return [a1 setRequestInfo:];
}

id objc_msgSend_setRequestOptions_(void *a1, const char *a2, ...)
{
  return [a1 setRequestOptions:];
}

id objc_msgSend_setRequestSource_(void *a1, const char *a2, ...)
{
  return [a1 setRequestSource:];
}

id objc_msgSend_setRequestSourceIsQuickTypeTamale_(void *a1, const char *a2, ...)
{
  return [a1 setRequestSourceIsQuickTypeTamale:];
}

id objc_msgSend_setRequiresExternalPower_(void *a1, const char *a2, ...)
{
  return [a1 setRequiresExternalPower:];
}

id objc_msgSend_setRequiresNetworkConnectivity_(void *a1, const char *a2, ...)
{
  return [a1 setRequiresNetworkConnectivity:];
}

id objc_msgSend_setResponseViewId_(void *a1, const char *a2, ...)
{
  return [a1 setResponseViewId:];
}

id objc_msgSend_setResultEligibleForLightEffects_(void *a1, const char *a2, ...)
{
  return [a1 setResultEligibleForLightEffects:];
}

id objc_msgSend_setResultWithResultView_resultSize_eligibleForLightEffects_(void *a1, const char *a2, ...)
{
  return [a1 setResultWithResultView:resultSize:eligibleForLightEffects:];
}

id objc_msgSend_setReturnKeyType_(void *a1, const char *a2, ...)
{
  return [a1 setReturnKeyType:];
}

id objc_msgSend_setRevealRecognizedSpeech_(void *a1, const char *a2, ...)
{
  return [a1 setRevealRecognizedSpeech:];
}

id objc_msgSend_setRole_(void *a1, const char *a2, ...)
{
  return [a1 setRole:];
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 setRootViewController:];
}

id objc_msgSend_setRoute_(void *a1, const char *a2, ...)
{
  return [a1 setRoute:];
}

id objc_msgSend_setSamplingInterval_(void *a1, const char *a2, ...)
{
  return [a1 setSamplingInterval:];
}

id objc_msgSend_setSash_(void *a1, const char *a2, ...)
{
  return [a1 setSash:];
}

id objc_msgSend_setScale_(void *a1, const char *a2, ...)
{
  return [a1 setScale:];
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setScrollEnabled:];
}

id objc_msgSend_setSelectable_(void *a1, const char *a2, ...)
{
  return [a1 setSelectable:];
}

id objc_msgSend_setSelected_(void *a1, const char *a2, ...)
{
  return [a1 setSelected:];
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionStyle:];
}

id objc_msgSend_setSelectionText_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionText:];
}

id objc_msgSend_setSeparatorColor_(void *a1, const char *a2, ...)
{
  return [a1 setSeparatorColor:];
}

id objc_msgSend_setSeparatorStyle_(void *a1, const char *a2, ...)
{
  return [a1 setSeparatorStyle:];
}

id objc_msgSend_setSeparatorType_(void *a1, const char *a2, ...)
{
  return [a1 setSeparatorType:];
}

id objc_msgSend_setServerCommandId_(void *a1, const char *a2, ...)
{
  return [a1 setServerCommandId:];
}

id objc_msgSend_setServerUtterances_(void *a1, const char *a2, ...)
{
  return [a1 setServerUtterances:];
}

id objc_msgSend_setServiceQuality_(void *a1, const char *a2, ...)
{
  return [a1 setServiceQuality:];
}

id objc_msgSend_setSessionCreationTime_(void *a1, const char *a2, ...)
{
  return [a1 setSessionCreationTime:];
}

id objc_msgSend_setSessionId_(void *a1, const char *a2, ...)
{
  return [a1 setSessionId:];
}

id objc_msgSend_setShadowView_(void *a1, const char *a2, ...)
{
  return [a1 setShadowView:];
}

id objc_msgSend_setSharedMapsUserSessionEntity_shareSessionIDWithMaps_(void *a1, const char *a2, ...)
{
  return [a1 setSharedMapsUserSessionEntity:shareSessionIDWithMaps:];
}

id objc_msgSend_setShouldIgnoreDoNotDisturb_(void *a1, const char *a2, ...)
{
  return [a1 setShouldIgnoreDoNotDisturb:];
}

id objc_msgSend_setShouldIgnoreRingerSwitch_(void *a1, const char *a2, ...)
{
  return [a1 setShouldIgnoreRingerSwitch:];
}

id objc_msgSend_setShouldPassTouchesThroughToSpringBoard_(void *a1, const char *a2, ...)
{
  return [a1 setShouldPassTouchesThroughToSpringBoard:];
}

id objc_msgSend_setShouldSuppressDefaultAction_(void *a1, const char *a2, ...)
{
  return [a1 setShouldSuppressDefaultAction:];
}

id objc_msgSend_setShouldSuppressErrorTTS_(void *a1, const char *a2, ...)
{
  return [a1 setShouldSuppressErrorTTS:];
}

id objc_msgSend_setShowSnippetView_animated_(void *a1, const char *a2, ...)
{
  return [a1 setShowSnippetView:animated:];
}

id objc_msgSend_setShowsSensitiveUI_(void *a1, const char *a2, ...)
{
  return [a1 setShowsSensitiveUI:];
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsVerticalScrollIndicator:];
}

id objc_msgSend_setSignalDomain_(void *a1, const char *a2, ...)
{
  return [a1 setSignalDomain:];
}

id objc_msgSend_setSignalIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setSignalIdentifier:];
}

id objc_msgSend_setSiriContentViewControllers_(void *a1, const char *a2, ...)
{
  return [a1 setSiriContentViewControllers:];
}

id objc_msgSend_setSiriDialog_(void *a1, const char *a2, ...)
{
  return [a1 setSiriDialog:];
}

id objc_msgSend_setSiriIsActive_(void *a1, const char *a2, ...)
{
  return [a1 setSiriIsActive:];
}

id objc_msgSend_setSiriRequestErrorCount_(void *a1, const char *a2, ...)
{
  return [a1 setSiriRequestErrorCount:];
}

id objc_msgSend_setSiriViewControllerIsEditing_(void *a1, const char *a2, ...)
{
  return [a1 setSiriViewControllerIsEditing:];
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return [a1 setSize:];
}

id objc_msgSend_setSizeFormat_(void *a1, const char *a2, ...)
{
  return [a1 setSizeFormat:];
}

id objc_msgSend_setSmartDialogAnimationInProgress_(void *a1, const char *a2, ...)
{
  return [a1 setSmartDialogAnimationInProgress:];
}

id objc_msgSend_setSnippet_(void *a1, const char *a2, ...)
{
  return [a1 setSnippet:];
}

id objc_msgSend_setSnippetBackgroundView_(void *a1, const char *a2, ...)
{
  return [a1 setSnippetBackgroundView:];
}

id objc_msgSend_setSnippetViewController_(void *a1, const char *a2, ...)
{
  return [a1 setSnippetViewController:];
}

id objc_msgSend_setSortDescriptors_(void *a1, const char *a2, ...)
{
  return [a1 setSortDescriptors:];
}

id objc_msgSend_setSource_(void *a1, const char *a2, ...)
{
  return [a1 setSource:];
}

id objc_msgSend_setSpeakableContextInfo_(void *a1, const char *a2, ...)
{
  return [a1 setSpeakableContextInfo:];
}

id objc_msgSend_setSpeakableDelimiter_(void *a1, const char *a2, ...)
{
  return [a1 setSpeakableDelimiter:];
}

id objc_msgSend_setSpeakableFinalDelimiter_(void *a1, const char *a2, ...)
{
  return [a1 setSpeakableFinalDelimiter:];
}

id objc_msgSend_setSpeakableSuffix_(void *a1, const char *a2, ...)
{
  return [a1 setSpeakableSuffix:];
}

id objc_msgSend_setSpeakableText_(void *a1, const char *a2, ...)
{
  return [a1 setSpeakableText:];
}

id objc_msgSend_setSpeechRecognitionHypothesis_(void *a1, const char *a2, ...)
{
  return [a1 setSpeechRecognitionHypothesis:];
}

id objc_msgSend_setSpeechRecognitionHypothesisForSuggestion_(void *a1, const char *a2, ...)
{
  return [a1 setSpeechRecognitionHypothesisForSuggestion:];
}

id objc_msgSend_setSpeechRequestOptions_(void *a1, const char *a2, ...)
{
  return [a1 setSpeechRequestOptions:];
}

id objc_msgSend_setStartRecordingSoundId_(void *a1, const char *a2, ...)
{
  return [a1 setStartRecordingSoundId:];
}

id objc_msgSend_setStartedOrChanged_(void *a1, const char *a2, ...)
{
  return [a1 setStartedOrChanged:];
}

id objc_msgSend_setState_animated_transitionSpeed_completion_(void *a1, const char *a2, ...)
{
  return [a1 setState:animated:transitionSpeed:completion:];
}

id objc_msgSend_setStatusBarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 setStatusBarHidden:animated:];
}

id objc_msgSend_setStatusBarHidden_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 setStatusBarHidden:animated:completion:];
}

id objc_msgSend_setStatusViewDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setStatusViewDisabled:];
}

id objc_msgSend_setStatusViewHidden_(void *a1, const char *a2, ...)
{
  return [a1 setStatusViewHidden:];
}

id objc_msgSend_setStatusViewUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setStatusViewUserInteractionEnabled:];
}

id objc_msgSend_setStiffness_(void *a1, const char *a2, ...)
{
  return [a1 setStiffness:];
}

id objc_msgSend_setStoredGenerativeAssistantOnboardingCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setStoredGenerativeAssistantOnboardingCompletion:];
}

id objc_msgSend_setSubFeature_(void *a1, const char *a2, ...)
{
  return [a1 setSubFeature:];
}

id objc_msgSend_setSubheaderText_(void *a1, const char *a2, ...)
{
  return [a1 setSubheaderText:];
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return [a1 setSubtitle:];
}

id objc_msgSend_setSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestions:];
}

id objc_msgSend_setSummaryTitle_(void *a1, const char *a2, ...)
{
  return [a1 setSummaryTitle:];
}

id objc_msgSend_setSynchronizedWithServer_(void *a1, const char *a2, ...)
{
  return [a1 setSynchronizedWithServer:];
}

id objc_msgSend_setSystemExtensionBundleId_(void *a1, const char *a2, ...)
{
  return [a1 setSystemExtensionBundleId:];
}

id objc_msgSend_setTagPhrase_(void *a1, const char *a2, ...)
{
  return [a1 setTagPhrase:];
}

id objc_msgSend_setTaskCompletedWithSuccess_(void *a1, const char *a2, ...)
{
  return [a1 setTaskCompletedWithSuccess:];
}

id objc_msgSend_setTaskIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setTaskIdentifier:];
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return [a1 setText:];
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setTextAlignment:];
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setTextColor:];
}

id objc_msgSend_setTextContainerInset_(void *a1, const char *a2, ...)
{
  return [a1 setTextContainerInset:];
}

id objc_msgSend_setTextContainerStyle_(void *a1, const char *a2, ...)
{
  return [a1 setTextContainerStyle:];
}

id objc_msgSend_setTextDirection_(void *a1, const char *a2, ...)
{
  return [a1 setTextDirection:];
}

id objc_msgSend_setTextDragOptions_(void *a1, const char *a2, ...)
{
  return [a1 setTextDragOptions:];
}

id objc_msgSend_setTextFieldHeight_(void *a1, const char *a2, ...)
{
  return [a1 setTextFieldHeight:];
}

id objc_msgSend_setTextFieldWithTextFieldView_(void *a1, const char *a2, ...)
{
  return [a1 setTextFieldWithTextFieldView:];
}

id objc_msgSend_setTextLegibilityWeight_(void *a1, const char *a2, ...)
{
  return [a1 setTextLegibilityWeight:];
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return [a1 setTimeStyle:];
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setTintColor:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:forState:];
}

id objc_msgSend_setToPlatteredCardView_(void *a1, const char *a2, ...)
{
  return [a1 setToPlatteredCardView:];
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return [a1 setToValue:];
}

id objc_msgSend_setTokens_(void *a1, const char *a2, ...)
{
  return [a1 setTokens:];
}

id objc_msgSend_setTopContentInset_animated_(void *a1, const char *a2, ...)
{
  return [a1 setTopContentInset:animated:];
}

id objc_msgSend_setTopPadding_(void *a1, const char *a2, ...)
{
  return [a1 setTopPadding:];
}

id objc_msgSend_setTrailingSubtitle_(void *a1, const char *a2, ...)
{
  return [a1 setTrailingSubtitle:];
}

id objc_msgSend_setTrailingText_(void *a1, const char *a2, ...)
{
  return [a1 setTrailingText:];
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return [a1 setTransform:];
}

id objc_msgSend_setTransitionController_(void *a1, const char *a2, ...)
{
  return [a1 setTransitionController:];
}

id objc_msgSend_setTransitionDuration_(void *a1, const char *a2, ...)
{
  return [a1 setTransitionDuration:];
}

id objc_msgSend_setTransitionLoadingToResultWithResultSize_(void *a1, const char *a2, ...)
{
  return [a1 setTransitionLoadingToResultWithResultSize:];
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setTranslatesAutoresizingMaskIntoConstraints:];
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return [a1 setType:];
}

id objc_msgSend_setTypeName_(void *a1, const char *a2, ...)
{
  return [a1 setTypeName:];
}

id objc_msgSend_setTypeToSiriViewHidden_(void *a1, const char *a2, ...)
{
  return [a1 setTypeToSiriViewHidden:];
}

id objc_msgSend_setUpConversationStarterSuggestionsWith_(void *a1, const char *a2, ...)
{
  return [a1 setUpConversationStarterSuggestionsWith:];
}

id objc_msgSend_setUpViews(void *a1, const char *a2, ...)
{
  return _[a1 setUpViews];
}

id objc_msgSend_setUrlValue_(void *a1, const char *a2, ...)
{
  return [a1 setUrlValue:];
}

id objc_msgSend_setUrls_(void *a1, const char *a2, ...)
{
  return [a1 setUrls:];
}

id objc_msgSend_setUserAttentionController_(void *a1, const char *a2, ...)
{
  return [a1 setUserAttentionController:];
}

id objc_msgSend_setUserData_(void *a1, const char *a2, ...)
{
  return [a1 setUserData:];
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return [a1 setUserInfo:];
}

id objc_msgSend_setUserInput_(void *a1, const char *a2, ...)
{
  return [a1 setUserInput:];
}

id objc_msgSend_setUserInteractedWithTouchIDSensor_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractedWithTouchIDSensor:];
}

id objc_msgSend_setUserInteractedWithTouchScreen_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractedWithTouchScreen:];
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractionEnabled:];
}

id objc_msgSend_setUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 setUserInterfaceStyle:];
}

id objc_msgSend_setUserUtteranceViewHeight_(void *a1, const char *a2, ...)
{
  return [a1 setUserUtteranceViewHeight:];
}

id objc_msgSend_setUtsId_(void *a1, const char *a2, ...)
{
  return [a1 setUtsId:];
}

id objc_msgSend_setUtteranceSource_(void *a1, const char *a2, ...)
{
  return [a1 setUtteranceSource:];
}

id objc_msgSend_setUtteranceUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUtteranceUserInteractionEnabled:];
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return [a1 setValue:];
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKey:];
}

id objc_msgSend_setVideoPlayerControllerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setVideoPlayerControllerDelegate:];
}

id objc_msgSend_setVideoPlaying_(void *a1, const char *a2, ...)
{
  return [a1 setVideoPlaying:];
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return [a1 setView:];
}

id objc_msgSend_setViewController_(void *a1, const char *a2, ...)
{
  return [a1 setViewController:];
}

id objc_msgSend_setViewId_(void *a1, const char *a2, ...)
{
  return [a1 setViewId:];
}

id objc_msgSend_setViewModelChangeObserver_(void *a1, const char *a2, ...)
{
  return [a1 setViewModelChangeObserver];
}

id objc_msgSend_setViewRequiringExtendedTimeoutVisible_(void *a1, const char *a2, ...)
{
  return [a1 setViewRequiringExtendedTimeoutVisible:];
}

id objc_msgSend_setViews_(void *a1, const char *a2, ...)
{
  return [a1 setViews:];
}

id objc_msgSend_setVisualMode_(void *a1, const char *a2, ...)
{
  return [a1 setVisualMode:];
}

id objc_msgSend_setVisualResponseLocation_(void *a1, const char *a2, ...)
{
  return [a1 setVisualResponseLocation:];
}

id objc_msgSend_setVoiceLoading_(void *a1, const char *a2, ...)
{
  return [a1 setVoiceLoading:];
}

id objc_msgSend_setWidth_(void *a1, const char *a2, ...)
{
  return [a1 setWidth:];
}

id objc_msgSend_setWindowScene_(void *a1, const char *a2, ...)
{
  return [a1 setWindowScene:];
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return [a1 setWithArray:];
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 setWithCapacity:];
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return [a1 setWithObject:];
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 setWithObjects:];
}

id objc_msgSend_setWords_(void *a1, const char *a2, ...)
{
  return [a1 setWords:];
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _[a1 settings];
}

id objc_msgSend_setupBackgroundAssetCheck(void *a1, const char *a2, ...)
{
  return _[a1 setupBackgroundAssetCheck];
}

id objc_msgSend_setupTextFieldForTextInput(void *a1, const char *a2, ...)
{
  return _[a1 setupTextFieldForTextInput];
}

id objc_msgSend_setupUserNotificationCenterDelegateIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 setupUserNotificationCenterDelegateIfNeeded:];
}

id objc_msgSend_sf_isChinaRegionCellularDevice(void *a1, const char *a2, ...)
{
  return [a1 sf_isChinaRegionCellularDevice];
}

id objc_msgSend_shadowView(void *a1, const char *a2, ...)
{
  return _[a1 shadowView];
}

id objc_msgSend_sharedAVSystemController(void *a1, const char *a2, ...)
{
  return _[a1 sharedAVSystemController];
}

id objc_msgSend_sharedAccessoryManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedAccessoryManager];
}

id objc_msgSend_sharedAnalytics(void *a1, const char *a2, ...)
{
  return _[a1 sharedAnalytics];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedCache(void *a1, const char *a2, ...)
{
  return _[a1 sharedCache];
}

id objc_msgSend_sharedDefaultEvaluator(void *a1, const char *a2, ...)
{
  return _[a1 sharedDefaultEvaluator];
}

id objc_msgSend_sharedGuard(void *a1, const char *a2, ...)
{
  return _[a1 sharedGuard];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedObserver(void *a1, const char *a2, ...)
{
  return _[a1 sharedObserver];
}

id objc_msgSend_sharedPreferences(void *a1, const char *a2, ...)
{
  return _[a1 sharedPreferences];
}

id objc_msgSend_sharedScheduler(void *a1, const char *a2, ...)
{
  return _[a1 sharedScheduler];
}

id objc_msgSend_sharedSiriPresentationPluginHost(void *a1, const char *a2, ...)
{
  return _[a1 sharedSiriPresentationPluginHost];
}

id objc_msgSend_sharedSystemAudioContext(void *a1, const char *a2, ...)
{
  return _[a1 sharedSystemAudioContext];
}

id objc_msgSend_sharedSystemState(void *a1, const char *a2, ...)
{
  return _[a1 sharedSystemState];
}

id objc_msgSend_shortTapActionWithRequestOptions_(void *a1, const char *a2, ...)
{
  return [a1 shortTapActionWithRequestOptions:];
}

id objc_msgSend_shouldAllowSurveyByDefault(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllowSurveyByDefault];
}

id objc_msgSend_shouldAllowTouchPassThrough(void *a1, const char *a2, ...)
{
  return _[a1 shouldAllowTouchPassThrough];
}

id objc_msgSend_shouldAutomaticallyScaleContentInAmbient(void *a1, const char *a2, ...)
{
  return _[a1 shouldAutomaticallyScaleContentInAmbient];
}

id objc_msgSend_shouldDismiss(void *a1, const char *a2, ...)
{
  return _[a1 shouldDismiss];
}

id objc_msgSend_shouldDismissForIdling(void *a1, const char *a2, ...)
{
  return _[a1 shouldDismissForIdling];
}

id objc_msgSend_shouldEnableInteractionForSiriViewController_(void *a1, const char *a2, ...)
{
  return [a1 shouldEnableInteractionForSiriViewController:];
}

id objc_msgSend_shouldMitigateBasedOnActivationHistory_(void *a1, const char *a2, ...)
{
  return [a1 shouldMitigateBasedOnActivationHistory:];
}

id objc_msgSend_shouldPlayHighResolutionContent(void *a1, const char *a2, ...)
{
  return _[a1 shouldPlayHighResolutionContent];
}

id objc_msgSend_shouldPunchOutInPlace(void *a1, const char *a2, ...)
{
  return _[a1 shouldPunchOutInPlace];
}

id objc_msgSend_shouldRedactSnippetForAddViews_(void *a1, const char *a2, ...)
{
  return [a1 shouldRedactSnippetForAddViews:];
}

id objc_msgSend_shouldRedactSpeakableTextForAceObject_(void *a1, const char *a2, ...)
{
  return [a1 shouldRedactSpeakableTextForAceObject:];
}

id objc_msgSend_shouldResumeInterruptedAudioPlaybackForAttendingState_(void *a1, const char *a2, ...)
{
  return [a1 shouldResumeInterruptedAudioPlaybackForAttendingState:];
}

id objc_msgSend_shouldShowAssetDownloadBanner(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowAssetDownloadBanner];
}

id objc_msgSend_shouldShowInSmartDialog(void *a1, const char *a2, ...)
{
  return _[a1 shouldShowInSmartDialog];
}

id objc_msgSend_shouldSkipAutoDismissal(void *a1, const char *a2, ...)
{
  return _[a1 shouldSkipAutoDismissal];
}

id objc_msgSend_shouldUseEventDrivenIdleAndQuietUpdates(void *a1, const char *a2, ...)
{
  return _[a1 shouldUseEventDrivenIdleAndQuietUpdates];
}

id objc_msgSend_showAcousticIDSpinner(void *a1, const char *a2, ...)
{
  return _[a1 showAcousticIDSpinner];
}

id objc_msgSend_showBannerFor_(void *a1, const char *a2, ...)
{
  return [a1 showBannerFor:];
}

id objc_msgSend_showEmptyView(void *a1, const char *a2, ...)
{
  return _[a1 showEmptyView];
}

id objc_msgSend_showFullScreenEffect_(void *a1, const char *a2, ...)
{
  return [a1 showFullScreenEffect:];
}

id objc_msgSend_showRequestHandlingStatus_(void *a1, const char *a2, ...)
{
  return [a1 showRequestHandlingStatus:];
}

id objc_msgSend_showScreenshotUI(void *a1, const char *a2, ...)
{
  return _[a1 showScreenshotUI];
}

id objc_msgSend_showSpeechAlternatives_(void *a1, const char *a2, ...)
{
  return [a1 showSpeechAlternatives:];
}

id objc_msgSend_showTapToEditTipCount(void *a1, const char *a2, ...)
{
  return _[a1 showTapToEditTipCount];
}

id objc_msgSend_showsFavoriteStar(void *a1, const char *a2, ...)
{
  return _[a1 showsFavoriteStar];
}

id objc_msgSend_showtimeSnippet(void *a1, const char *a2, ...)
{
  return _[a1 showtimeSnippet];
}

id objc_msgSend_signalDomain(void *a1, const char *a2, ...)
{
  return _[a1 signalDomain];
}

id objc_msgSend_signalIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 signalIdentifier];
}

id objc_msgSend_signalWithInlineStreaming_(void *a1, const char *a2, ...)
{
  return [a1 signalWithInlineStreaming:];
}

id objc_msgSend_siriAudioRecordingDidChangePowerLevel_(void *a1, const char *a2, ...)
{
  return [a1 siriAudioRecordingDidChangePowerLevel:];
}

id objc_msgSend_siriAudioRecordingDidChangePowerLevel_peakLevel_(void *a1, const char *a2, ...)
{
  return [a1 siriAudioRecordingDidChangePowerLevel:peakLevel:];
}

id objc_msgSend_siriCompactViewController_willDismissViewController_(void *a1, const char *a2, ...)
{
  return [a1 siriCompactViewController:willDismissViewController:];
}

id objc_msgSend_siriCompactViewController_willPresentViewController_(void *a1, const char *a2, ...)
{
  return [a1 siriCompactViewController:willPresentViewController:];
}

id objc_msgSend_siriDeviceLockStateForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 siriDeviceLockStateForSiriPresentation:];
}

id objc_msgSend_siriDialog(void *a1, const char *a2, ...)
{
  return _[a1 siriDialog];
}

id objc_msgSend_siriDidActivate(void *a1, const char *a2, ...)
{
  return _[a1 siriDidActivate];
}

id objc_msgSend_siriDidActivateFromSource_(void *a1, const char *a2, ...)
{
  return [a1 siriDidActivateFromSource:];
}

id objc_msgSend_siriDidBeginTaskWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 siriDidBeginTaskWithIdentifier:];
}

id objc_msgSend_siriDidDeactivate(void *a1, const char *a2, ...)
{
  return _[a1 siriDidDeactivate];
}

id objc_msgSend_siriDidDeactivateWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 siriDidDeactivateWithCompletion:];
}

id objc_msgSend_siriDidDetectMusic(void *a1, const char *a2, ...)
{
  return _[a1 siriDidDetectMusic];
}

id objc_msgSend_siriDidEnterLatencyState(void *a1, const char *a2, ...)
{
  return _[a1 siriDidEnterLatencyState];
}

id objc_msgSend_siriDidFinishActionsForConversationItemWithIdentifier_inConversation_(void *a1, const char *a2, ...)
{
  return [a1 siriDidFinishActionsForConversationItemWithIdentifier:inConversation:];
}

id objc_msgSend_siriDidHidePasscodeUnlock(void *a1, const char *a2, ...)
{
  return _[a1 siriDidHidePasscodeUnlock];
}

id objc_msgSend_siriDidOpenURL_bundleId_inPlace_(void *a1, const char *a2, ...)
{
  return [a1 siriDidOpenURL:bundleId:inPlace:];
}

id objc_msgSend_siriDidReceiveAdditionalContent_(void *a1, const char *a2, ...)
{
  return [a1 siriDidReceiveAdditionalContent:];
}

id objc_msgSend_siriDidReceiveLatencyInformation_(void *a1, const char *a2, ...)
{
  return [a1 siriDidReceiveLatencyInformation:];
}

id objc_msgSend_siriDidReceiveStartGenAIEnablementFlowCommand_completion_(void *a1, const char *a2, ...)
{
  return [a1 siriDidReceiveStartGenAIEnablementFlowCommand:completion:];
}

id objc_msgSend_siriDidReceiveStartImmersiveExperienceCommand_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriDidReceiveStartImmersiveExperienceCommand:completion:");
}

id objc_msgSend_siriDidSpeakHint(void *a1, const char *a2, ...)
{
  return _[a1 siriDidSpeakHint];
}

id objc_msgSend_siriDidStartNewConversationWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 siriDidStartNewConversationWithIdentifier:];
}

id objc_msgSend_siriDidStartSpeakingWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 siriDidStartSpeakingWithIdentifier:];
}

id objc_msgSend_siriDidStopSpeakingWithIdentifier_speechQueueIsEmpty_(void *a1, const char *a2, ...)
{
  return [a1 siriDidStopSpeakingWithIdentifier:speechQueueIsEmpty:];
}

id objc_msgSend_siriDidTapOutsideContent(void *a1, const char *a2, ...)
{
  return _[a1 siriDidTapOutsideContent];
}

id objc_msgSend_siriDidTransitionFromState_event_(void *a1, const char *a2, ...)
{
  return [a1 siriDidTransitionFromState:event:];
}

id objc_msgSend_siriDidUpdateASRWithRecognition_(void *a1, const char *a2, ...)
{
  return [a1 siriDidUpdateASRWithRecognition:];
}

id objc_msgSend_siriEnabledAppListForSiriViewController_(void *a1, const char *a2, ...)
{
  return [a1 siriEnabledAppListForSiriViewController:];
}

id objc_msgSend_siriGMAssetsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 siriGMAssetsAvailable];
}

id objc_msgSend_siriIdleAndQuietStatusDidChange_(void *a1, const char *a2, ...)
{
  return [a1 siriIdleAndQuietStatusDidChange:];
}

id objc_msgSend_siriIsActive(void *a1, const char *a2, ...)
{
  return _[a1 siriIsActive];
}

id objc_msgSend_siriIsIdleAndQuiet(void *a1, const char *a2, ...)
{
  return _[a1 siriIsIdleAndQuiet];
}

id objc_msgSend_siriIsIdleAndQuietStatusDidChange_isAttending_(void *a1, const char *a2, ...)
{
  return [a1 siriIsIdleAndQuietStatusDidChange:isAttending:];
}

id objc_msgSend_siriIsShowingPasscodeUnlock(void *a1, const char *a2, ...)
{
  return _[a1 siriIsShowingPasscodeUnlock];
}

id objc_msgSend_siriNetworkAvailabilityDidChange(void *a1, const char *a2, ...)
{
  return _[a1 siriNetworkAvailabilityDidChange];
}

id objc_msgSend_siriPresentation_activateConversationWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:activateConversationWithIdentifier:];
}

id objc_msgSend_siriPresentation_conversationWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:conversationWithIdentifier:];
}

id objc_msgSend_siriPresentation_didCorrectRecognition_correctionIdentifier_forConversationItemWithIdentifier_userSelectionResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:didCorrectRecognition:correctionIdentifier:forConversationItemWithIdentifier:userSelectionResults:");
}

id objc_msgSend_siriPresentation_didDismissViewController_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:didDismissViewController:];
}

id objc_msgSend_siriPresentation_didPresentConversationItemsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:didPresentConversationItemsWithIdentifiers:];
}

id objc_msgSend_siriPresentation_didPresentViewController_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:didPresentViewController:];
}

id objc_msgSend_siriPresentation_handleStartLocalRequest_turnIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:handleStartLocalRequest:turnIdentifier:];
}

id objc_msgSend_siriPresentation_inputTypeDidChange_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:inputTypeDidChange:];
}

id objc_msgSend_siriPresentation_openURL_conversationId_completion_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:openURL:conversationId:completion:];
}

id objc_msgSend_siriPresentation_performAceCommand_conversationItemIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:performAceCommand:conversationItemIdentifier:completion:");
}

id objc_msgSend_siriPresentation_performAceCommand_conversationItemIdentifier_turnIdentifier_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:performAceCommand:conversationItemIdentifier:turnIdentifier:completion:");
}

id objc_msgSend_siriPresentation_preventOutsideTouchesFromDismissingSiri_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:preventOutsideTouchesFromDismissingSiri:];
}

id objc_msgSend_siriPresentation_reduceOrbOpacity_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:reduceOrbOpacity:];
}

id objc_msgSend_siriPresentation_requestHostBlurVisible_reason_fence_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:requestHostBlurVisible:reason:fence:];
}

id objc_msgSend_siriPresentation_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:requestsKeyboardWithCompletion:];
}

id objc_msgSend_siriPresentation_setBugReportingAvailable_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:setBugReportingAvailable:];
}

id objc_msgSend_siriPresentation_setFullScreenDimmingLayerVisible_animated_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:setFullScreenDimmingLayerVisible:animated:];
}

id objc_msgSend_siriPresentation_setStatusBarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:setStatusBarHidden:animated:];
}

id objc_msgSend_siriPresentation_setStatusViewHidden_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:setStatusViewHidden:];
}

id objc_msgSend_siriPresentation_startEditedRequestWithText_correctionIdentifier_userSelectionResults_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:startEditedRequestWithText:correctionIdentifier:userSelectionResults:];
}

id objc_msgSend_siriPresentation_startRequestForSuggestion_inputType_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:startRequestForSuggestion:inputType:];
}

id objc_msgSend_siriPresentation_startRequestForText_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:startRequestForText:];
}

id objc_msgSend_siriPresentation_startRequestWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:startRequestWithOptions:];
}

id objc_msgSend_siriPresentation_synthesizeSpeechWithPhoneticText_completion_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:synthesizeSpeechWithPhoneticText:completion:];
}

id objc_msgSend_siriPresentation_synthesizeSpeechWithText_completion_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:synthesizeSpeechWithText:completion:];
}

id objc_msgSend_siriPresentation_viewDidAppearWithAceObject_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:viewDidAppearWithAceObject:];
}

id objc_msgSend_siriPresentation_viewDidAppearWithClassDescriptor_identifier_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:viewDidAppearWithClassDescriptor:identifier:];
}

id objc_msgSend_siriPresentation_viewDidDisappearWithClassDescriptor_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:viewDidDisappearWithClassDescriptor:identifier:");
}

id objc_msgSend_siriPresentation_willBeginEditingOfType_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:willBeginEditingOfType:];
}

id objc_msgSend_siriPresentation_willChangeKeyboardVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:willChangeKeyboardVisibility:");
}

id objc_msgSend_siriPresentation_willDismissViewController_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentation:willDismissViewController:];
}

id objc_msgSend_siriPresentation_willPresentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriPresentation:willPresentViewController:");
}

id objc_msgSend_siriPresentationCancelHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentationCancelHIDEventDefferal:];
}

id objc_msgSend_siriPresentationDidEndEditing_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentationDidEndEditing:];
}

id objc_msgSend_siriPresentationDidPresentConversationFromBreadcrumb_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentationDidPresentConversationFromBreadcrumb:];
}

id objc_msgSend_siriPresentationDidPresentUserInterface_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentationDidPresentUserInterface:];
}

id objc_msgSend_siriPresentationDidResignFirstResponder_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentationDidResignFirstResponder:];
}

id objc_msgSend_siriPresentationIsPresentingSystemUI_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentationIsPresentingSystemUI:];
}

id objc_msgSend_siriPresentationRequestsHIDEventDefferal_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentationRequestsHIDEventDefferal:];
}

id objc_msgSend_siriPresentationRequestsSystemUICollapse_(void *a1, const char *a2, ...)
{
  return [a1 siriPresentationRequestsSystemUICollapse:];
}

id objc_msgSend_siriRequestErrorCount(void *a1, const char *a2, ...)
{
  return _[a1 siriRequestErrorCount];
}

id objc_msgSend_siriRequestWillStartWithRequestOptions_(void *a1, const char *a2, ...)
{
  return [a1 siriRequestWillStartWithRequestOptions:];
}

id objc_msgSend_siriResponseModeDidChange_(void *a1, const char *a2, ...)
{
  return [a1 siriResponseModeDidChange:];
}

id objc_msgSend_siriResponseModeDidChange_isWiredMicOrBTHeadsetOrWx_(void *a1, const char *a2, ...)
{
  return [a1 siriResponseModeDidChange:isWiredMicOrBTHeadsetOrWx];
}

id objc_msgSend_siriResponseShouldAlwaysPrint(void *a1, const char *a2, ...)
{
  return _[a1 siriResponseShouldAlwaysPrint];
}

id objc_msgSend_siriResultsDidDismissInTamale(void *a1, const char *a2, ...)
{
  return _[a1 siriResultsDidDismissInTamale];
}

id objc_msgSend_siriResultsDidDismissInTamaleForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 siriResultsDidDismissInTamaleForSiriPresentation];
}

id objc_msgSend_siriResultsWillDismissInTamale(void *a1, const char *a2, ...)
{
  return _[a1 siriResultsWillDismissInTamale];
}

id objc_msgSend_siriSAEViewCOntrollerRequestStopAttending_(void *a1, const char *a2, ...)
{
  return [a1 siriSAEViewCOntrollerRequestStopAttending:];
}

id objc_msgSend_siriSAEViewController_willDismissViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSAEViewController:willDismissViewController:");
}

id objc_msgSend_siriSAEViewController_willPresentViewController_(void *a1, const char *a2, ...)
{
  return [a1 siriSAEViewController:willPresentViewController:];
}

id objc_msgSend_siriSAEViewControllerRequestsTextActivation_withRequestSource_(void *a1, const char *a2, ...)
{
  return [a1 siriSAEViewControllerRequestsTextActivation:withRequestSource:];
}

id objc_msgSend_siriSAEViewControllerRequestsVoiceActivation_withRequestOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSAEViewControllerRequestsVoiceActivation:withRequestOptions:");
}

id objc_msgSend_siriServiceStream(void *a1, const char *a2, ...)
{
  return _[a1 siriServiceStream];
}

id objc_msgSend_siriSessionAudioRecordingDidChangePowerLevel_(void *a1, const char *a2, ...)
{
  return [a1 siriSessionAudioRecordingDidChangePowerLevel:];
}

id objc_msgSend_siriSessionDidInitializeSessionInfo_(void *a1, const char *a2, ...)
{
  return [a1 siriSessionDidInitializeSessionInfo:];
}

id objc_msgSend_siriSessionDidReceiveAddViewsCommand_completion_(void *a1, const char *a2, ...)
{
  return [a1 siriSessionDidReceiveAddViewsCommand:completion:];
}

id objc_msgSend_siriSessionDidReceivePlayContentCommand_completion_(void *a1, const char *a2, ...)
{
  return [a1 siriSessionDidReceivePlayContentCommand:completion:];
}

id objc_msgSend_siriSessionDidReceiveSayItCommand_completion_(void *a1, const char *a2, ...)
{
  return [a1 siriSessionDidReceiveSayItCommand:completion:];
}

id objc_msgSend_siriSessionDidReceiveSpeechPartialResultCommand_(void *a1, const char *a2, ...)
{
  return [a1 siriSessionDidReceiveSpeechPartialResultCommand:];
}

id objc_msgSend_siriSessionDidReceiveSpeechRecognizedCommand_(void *a1, const char *a2, ...)
{
  return [a1 siriSessionDidReceiveSpeechRecognizedCommand:];
}

id objc_msgSend_siriSessionDidStartNewTurn_associatedLaunchStartContext_machAbsoluteTime_linkPreviousTurn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "siriSessionDidStartNewTurn:associatedLaunchStartContext:machAbsoluteTime:linkPreviousTurn:");
}

id objc_msgSend_siriSessionDidUpdateSessionInfo_(void *a1, const char *a2, ...)
{
  return [a1 siriSessionDidUpdateSessionInfo:];
}

id objc_msgSend_siriSessionWillCancelRequest(void *a1, const char *a2, ...)
{
  return _[a1 siriSessionWillCancelRequest];
}

id objc_msgSend_siriSnippetViewController_didShowGuideStartDate_endDate_(void *a1, const char *a2, ...)
{
  return [a1 siriSnippetViewController:didShowGuideStartDate:endDate:];
}

id objc_msgSend_siriSnippetViewController_pushSirilandSnippets_(void *a1, const char *a2, ...)
{
  return [a1 siriSnippetViewController:pushSirilandSnippets:];
}

id objc_msgSend_siriSnippetViewControllerIsVisible_(void *a1, const char *a2, ...)
{
  return [a1 siriSnippetViewControllerIsVisible:];
}

id objc_msgSend_siriState(void *a1, const char *a2, ...)
{
  return _[a1 siriState];
}

id objc_msgSend_siriStateForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 siriStateForSiriPresentation:];
}

id objc_msgSend_siriUIDidPresentDynamicSnippetWithInfo_(void *a1, const char *a2, ...)
{
  return [a1 siriUIDidPresentDynamicSnippetWithInfo:];
}

id objc_msgSend_siriUILocalizedStringForKey_(void *a1, const char *a2, ...)
{
  return [a1 siriUILocalizedStringForKey:];
}

id objc_msgSend_siriUILocalizedStringForKey_table_(void *a1, const char *a2, ...)
{
  return [a1 siriUILocalizedStringForKey:table:];
}

id objc_msgSend_siriUILocalizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 siriUILocalizedStringForKey:value:table:];
}

id objc_msgSend_siriViewController_addSelectionResponse_(void *a1, const char *a2, ...)
{
  return [a1 siriViewController:addSelectionResponse:];
}

id objc_msgSend_siriViewController_performAceCommands_(void *a1, const char *a2, ...)
{
  return [a1 siriViewController:performAceCommands:];
}

id objc_msgSend_siriViewController_startCorrectedSpeechRequestWithText_correctionIdentifier_userSelectionResults_(void *a1, const char *a2, ...)
{
  return [a1 siriViewController:startCorrectedSpeechRequestWithText:correctionIdentifier:userSelectionResults:];
}

id objc_msgSend_siriViewControllerDidEndEditing_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerDidEndEditing:];
}

id objc_msgSend_siriViewControllerDidResignFirstResponder_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerDidResignFirstResponder:];
}

id objc_msgSend_siriViewControllerExpectedWidth_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerExpectedWidth:];
}

id objc_msgSend_siriViewControllerHeightDidChange_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerHeightDidChange:];
}

id objc_msgSend_siriViewControllerHeightDidChange_pinTopOfSnippet_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerHeightDidChange:pinTopOfSnippet:];
}

id objc_msgSend_siriViewControllerIsEditing(void *a1, const char *a2, ...)
{
  return _[a1 siriViewControllerIsEditing];
}

id objc_msgSend_siriViewControllerRequestKeyboardForTapToEditWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerRequestKeyboardForTapToEditWithCompletion:];
}

id objc_msgSend_siriViewControllerRequestTearDownEditingViewController_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerRequestTearDownEditingViewController:];
}

id objc_msgSend_siriViewControllerRequestToPin_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerRequestToPin:];
}

id objc_msgSend_siriViewControllerShouldOpenUrl_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerShouldOpenUrl:];
}

id objc_msgSend_siriViewControllerShouldPreventUserInteraction_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerShouldPreventUserInteraction];
}

id objc_msgSend_siriViewControllerWillBeginEditing_(void *a1, const char *a2, ...)
{
  return [a1 siriViewControllerWillBeginEditing:];
}

id objc_msgSend_siriWillActivateFromSource_(void *a1, const char *a2, ...)
{
  return [a1 siriWillActivateFromSource:];
}

id objc_msgSend_siriWillBePresented_(void *a1, const char *a2, ...)
{
  return [a1 siriWillBePresented:];
}

id objc_msgSend_siriWillBeginTearDownForDismissalReason_(void *a1, const char *a2, ...)
{
  return [a1 siriWillBeginTearDownForDismissalReason:];
}

id objc_msgSend_siriWillBeginTearDownForDismissalReason_withOriginalDismissalOptions_(void *a1, const char *a2, ...)
{
  return [a1 siriWillBeginTearDownForDismissalReason:withOriginalDismissalOptions:];
}

id objc_msgSend_siriWillDismissWithReason_completion_(void *a1, const char *a2, ...)
{
  return [a1 siriWillDismissWithReason:completion:];
}

id objc_msgSend_siriWillHidePasscodeUnlock(void *a1, const char *a2, ...)
{
  return _[a1 siriWillHidePasscodeUnlock];
}

id objc_msgSend_siriWillHidePasscodeUnlockForResult_(void *a1, const char *a2, ...)
{
  return [a1 siriWillHidePasscodeUnlockForResult:];
}

id objc_msgSend_siriWillProcessAppLaunchWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 siriWillProcessAppLaunchWithBundleIdentifier:];
}

id objc_msgSend_siriWillShowPasscodeUnlock(void *a1, const char *a2, ...)
{
  return _[a1 siriWillShowPasscodeUnlock];
}

id objc_msgSend_siriWillShowPasscodeUnlockAndCancelRequest_(void *a1, const char *a2, ...)
{
  return [a1 siriWillShowPasscodeUnlockAndCancelRequest:];
}

id objc_msgSend_siriWillStartRequest(void *a1, const char *a2, ...)
{
  return _[a1 siriWillStartRequest];
}

id objc_msgSend_siriWillStartTextInputRequest(void *a1, const char *a2, ...)
{
  return _[a1 siriWillStartTextInputRequest];
}

id objc_msgSend_siriWillStopAttending_(void *a1, const char *a2, ...)
{
  return [a1 siriWillStopAttending:];
}

id objc_msgSend_siriui_blendEffectColor(void *a1, const char *a2, ...)
{
  return [a1 siriui_blendEffectColor];
}

id objc_msgSend_siriui_card(void *a1, const char *a2, ...)
{
  return [a1 siriui_card];
}

id objc_msgSend_siriui_card_compact(void *a1, const char *a2, ...)
{
  return [a1 siriui_card_compact];
}

id objc_msgSend_siriui_eventInfo(void *a1, const char *a2, ...)
{
  return [a1 siriui_eventInfo];
}

id objc_msgSend_siriui_lightHighlightColor(void *a1, const char *a2, ...)
{
  return [a1 siriui_lightHighlightColor];
}

id objc_msgSend_siriui_lightInsertionPointColor(void *a1, const char *a2, ...)
{
  return [a1 siriui_lightInsertionPointColor];
}

id objc_msgSend_siriui_lightKeylineColor(void *a1, const char *a2, ...)
{
  return [a1 siriui_lightKeylineColor];
}

id objc_msgSend_siriui_lightTextColor(void *a1, const char *a2, ...)
{
  return [a1 siriui_lightTextColor];
}

id objc_msgSend_siriui_lightWeightBodySubtextSizeFont(void *a1, const char *a2, ...)
{
  return [a1 siriui_lightWeightBodySubtextSizeFont];
}

id objc_msgSend_siriui_lightWeightFontWithSize_(void *a1, const char *a2, ...)
{
  return [a1 siriui_lightWeightFontWithSize:];
}

id objc_msgSend_siriui_maskingColor(void *a1, const char *a2, ...)
{
  return [a1 siriui_maskingColor];
}

id objc_msgSend_siriui_mediumWeightBodySizeFont(void *a1, const char *a2, ...)
{
  return [a1 siriui_mediumWeightBodySizeFont];
}

id objc_msgSend_siriui_mediumWeightFontWithSize_(void *a1, const char *a2, ...)
{
  return [a1 siriui_mediumWeightFontWithSize:];
}

id objc_msgSend_siriui_serverTipFont(void *a1, const char *a2, ...)
{
  return [a1 siriui_serverTipFont];
}

id objc_msgSend_siriui_serverTipPrefixFont(void *a1, const char *a2, ...)
{
  return [a1 siriui_serverTipPrefixFont];
}

id objc_msgSend_siriui_serverUtteranceCorrectionPromptFont(void *a1, const char *a2, ...)
{
  return [a1 siriui_serverUtteranceCorrectionPromptFont];
}

id objc_msgSend_siriui_serverUtteranceFont(void *a1, const char *a2, ...)
{
  return [a1 siriui_serverUtteranceFont];
}

id objc_msgSend_siriui_setBlendEffectEnabled_(void *a1, const char *a2, ...)
{
  return [a1 siriui_setBlendEffectEnabled:];
}

id objc_msgSend_siriui_tapToEditColor(void *a1, const char *a2, ...)
{
  return [a1 siriui_tapToEditColor];
}

id objc_msgSend_siriui_tapToEditMaskingColor(void *a1, const char *a2, ...)
{
  return [a1 siriui_tapToEditMaskingColor];
}

id objc_msgSend_siriui_userUtteranceEditModeVibrancyEffect(void *a1, const char *a2, ...)
{
  return [a1 siriui_userUtteranceEditModeVibrancyEffect];
}

id objc_msgSend_siriui_userUtteranceFont(void *a1, const char *a2, ...)
{
  return [a1 siriui_userUtteranceFont];
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return [a1 sizeThatFits:];
}

id objc_msgSend_sizeThatFits_text_(void *a1, const char *a2, ...)
{
  return [a1 sizeThatFits:text:];
}

id objc_msgSend_sizeThatFits_text_edgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:text:edgeInsets:");
}

id objc_msgSend_sizeThatFits_text_font_textContainerStyle_(void *a1, const char *a2, ...)
{
  return [a1 sizeThatFits:text:font:textContainerStyle:];
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _[a1 sizeToFit];
}

id objc_msgSend_smallSystemFontSize(void *a1, const char *a2, ...)
{
  return _[a1 smallSystemFontSize];
}

id objc_msgSend_snippet(void *a1, const char *a2, ...)
{
  return _[a1 snippet];
}

id objc_msgSend_snippetBackgroundView(void *a1, const char *a2, ...)
{
  return _[a1 snippetBackgroundView];
}

id objc_msgSend_snippetContentDidUpdate(void *a1, const char *a2, ...)
{
  return _[a1 snippetContentDidUpdate];
}

id objc_msgSend_snippetLayoutDidUpdateForView_(void *a1, const char *a2, ...)
{
  return [a1 snippetLayoutDidUpdateForView:];
}

id objc_msgSend_snippetView(void *a1, const char *a2, ...)
{
  return _[a1 snippetView];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_speakableContextInfo(void *a1, const char *a2, ...)
{
  return _[a1 speakableContextInfo];
}

id objc_msgSend_speakableDelimiter(void *a1, const char *a2, ...)
{
  return _[a1 speakableDelimiter];
}

id objc_msgSend_speakableFinalDelimiter(void *a1, const char *a2, ...)
{
  return _[a1 speakableFinalDelimiter];
}

id objc_msgSend_speakableProviderForObject_(void *a1, const char *a2, ...)
{
  return [a1 speakableProviderForObject:];
}

id objc_msgSend_speakableSuffix(void *a1, const char *a2, ...)
{
  return _[a1 speakableSuffix];
}

id objc_msgSend_speakableText(void *a1, const char *a2, ...)
{
  return _[a1 speakableText];
}

id objc_msgSend_speakableTextOverride(void *a1, const char *a2, ...)
{
  return _[a1 speakableTextOverride];
}

id objc_msgSend_speech(void *a1, const char *a2, ...)
{
  return _[a1 speech];
}

id objc_msgSend_speechAlternativeHighlightListWithScore_(void *a1, const char *a2, ...)
{
  return [a1 speechAlternativeHighlightListWithScore:];
}

id objc_msgSend_speechRecognitionHypothesis(void *a1, const char *a2, ...)
{
  return _[a1 speechRecognitionHypothesis];
}

id objc_msgSend_speechRecognized_(void *a1, const char *a2, ...)
{
  return [a1 speechRecognized:];
}

id objc_msgSend_speechRecordingDidBeginOnRecordRoute_(void *a1, const char *a2, ...)
{
  return [a1 speechRecordingDidBeginOnRecordRoute:];
}

id objc_msgSend_speechRecordingDidCancelForRequest_onAVRecordRoute_(void *a1, const char *a2, ...)
{
  return [a1 speechRecordingDidCancelForRequest:onAVRecordRoute:];
}

id objc_msgSend_speechRecordingDidDetectSpeechStartpoint(void *a1, const char *a2, ...)
{
  return _[a1 speechRecordingDidDetectSpeechStartpoint];
}

id objc_msgSend_speechRecordingDidEndForRequest_onAVRecordRoute_(void *a1, const char *a2, ...)
{
  return [a1 speechRecordingDidEndForRequest:onAVRecordRoute:];
}

id objc_msgSend_speechRecordingDidFailForRequest_onAVRecordRoute_withError_(void *a1, const char *a2, ...)
{
  return [a1 speechRecordingDidFailForRequest:onAVRecordRoute:withError:];
}

id objc_msgSend_speechRequestOptions(void *a1, const char *a2, ...)
{
  return _[a1 speechRequestOptions];
}

id objc_msgSend_speechTokensForUtteranceAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 speechTokensForUtteranceAtIndex:];
}

id objc_msgSend_spokenLanguageCode(void *a1, const char *a2, ...)
{
  return _[a1 spokenLanguageCode];
}

id objc_msgSend_spokenOnly(void *a1, const char *a2, ...)
{
  return _[a1 spokenOnly];
}

id objc_msgSend_spokenText(void *a1, const char *a2, ...)
{
  return _[a1 spokenText];
}

id objc_msgSend_sr_applySnippetProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sr_applySnippetProperties:");
}

id objc_msgSend_sr_inPerson(void *a1, const char *a2, ...)
{
  return [a1 sr_inPerson];
}

id objc_msgSend_sr_sirilandShim(void *a1, const char *a2, ...)
{
  return [a1 sr_sirilandShim];
}

id objc_msgSend_sruif_aceCommandType(void *a1, const char *a2, ...)
{
  return [a1 sruif_aceCommandType];
}

id objc_msgSend_sruif_appPunchOutEventWithRefId_URL_appDisplayName_bundleId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sruif_appPunchOutEventWithRefId:URL:appDisplayName:bundleId:");
}

id objc_msgSend_sruif_combinedSpeakableText(void *a1, const char *a2, ...)
{
  return [a1 sruif_combinedSpeakableText];
}

id objc_msgSend_sruif_commandFailedWithRefId_(void *a1, const char *a2, ...)
{
  return [a1 sruif_commandFailedWithRefId:];
}

id objc_msgSend_sruif_commandSucceededWithRefId_(void *a1, const char *a2, ...)
{
  return [a1 sruif_commandSucceededWithRefId:];
}

id objc_msgSend_sruif_dialogPhase(void *a1, const char *a2, ...)
{
  return [a1 sruif_dialogPhase];
}

id objc_msgSend_sruif_hasExternalDomainsForStringWithFormat_shouldRedactLog_(void *a1, const char *a2, ...)
{
  return [a1 sruif_hasExternalDomainsForStringWithFormat:shouldRedactLog:];
}

id objc_msgSend_sruif_ignoresMuteSwitch(void *a1, const char *a2, ...)
{
  return [a1 sruif_ignoresMuteSwitch];
}

id objc_msgSend_sruif_setRecognitionWithCorrectedSpeech_(void *a1, const char *a2, ...)
{
  return [a1 sruif_setRecognitionWithCorrectedSpeech:];
}

id objc_msgSend_sruif_speakableUtteranceParserForCurrentLanguage(void *a1, const char *a2, ...)
{
  return [a1 sruif_speakableUtteranceParserForCurrentLanguage];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAlertSoundID(void *a1, const char *a2, ...)
{
  return _[a1 startAlertSoundID];
}

id objc_msgSend_startAutoDismissalAttentionController(void *a1, const char *a2, ...)
{
  return _[a1 startAutoDismissalAttentionController];
}

id objc_msgSend_startCorrectedRequestWithText_correctionIdentifier_userSelectionResults_turnIdentifier_machAbsoluteTime_(void *a1, const char *a2, ...)
{
  return [a1 startCorrectedRequestWithText:correctionIdentifier:userSelectionResults:turnIdentifier:machAbsoluteTime:];
}

id objc_msgSend_startDateSortDescriptorAscending_(void *a1, const char *a2, ...)
{
  return [a1 startDateSortDescriptorAscending:];
}

id objc_msgSend_startIfNeededForTypes_completionQueue_completion_(void *a1, const char *a2, ...)
{
  return [a1 startIfNeededForTypes:completionQueue:completion:];
}

id objc_msgSend_startIfNeededForTypes_error_(void *a1, const char *a2, ...)
{
  return [a1 startIfNeededForTypes:error:];
}

id objc_msgSend_startLatencyLightOnActivePill(void *a1, const char *a2, ...)
{
  return _[a1 startLatencyLightOnActivePill];
}

id objc_msgSend_startNewConversation(void *a1, const char *a2, ...)
{
  return _[a1 startNewConversation];
}

id objc_msgSend_startPlaying(void *a1, const char *a2, ...)
{
  return _[a1 startPlaying];
}

id objc_msgSend_startRequestForSuggestion_inputType_(void *a1, const char *a2, ...)
{
  return [a1 startRequestForSuggestion:inputType:];
}

id objc_msgSend_startRequestForText_(void *a1, const char *a2, ...)
{
  return [a1 startRequestForText:];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateData(void *a1, const char *a2, ...)
{
  return _[a1 stateData];
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _[a1 status];
}

id objc_msgSend_statusBarFrameDidChange(void *a1, const char *a2, ...)
{
  return _[a1 statusBarFrameDidChange];
}

id objc_msgSend_statusBarFrameForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 statusBarFrameForSiriPresentation:];
}

id objc_msgSend_statusBarFrameForSuggestionsViewController_(void *a1, const char *a2, ...)
{
  return [a1 statusBarFrameForSuggestionsViewController:];
}

id objc_msgSend_statusBarOrientation(void *a1, const char *a2, ...)
{
  return _[a1 statusBarOrientation];
}

id objc_msgSend_statusViewHeightDidChange(void *a1, const char *a2, ...)
{
  return _[a1 statusViewHeightDidChange];
}

id objc_msgSend_statusViewHeightForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 statusViewHeightForSiriPresentation:];
}

id objc_msgSend_statusViewHeightForSuggestionsViewController_(void *a1, const char *a2, ...)
{
  return [a1 statusViewHeightForSuggestionsViewController:];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopAttending(void *a1, const char *a2, ...)
{
  return _[a1 stopAttending];
}

id objc_msgSend_stopAutoDismissalAttentionController(void *a1, const char *a2, ...)
{
  return _[a1 stopAutoDismissalAttentionController];
}

id objc_msgSend_stopIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 stopIfNeeded:];
}

id objc_msgSend_stopIfNeededForTypes_error_(void *a1, const char *a2, ...)
{
  return [a1 stopIfNeededForTypes:error:];
}

id objc_msgSend_stopLatencyAnimationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 stopLatencyAnimationIfNeeded];
}

id objc_msgSend_stopPlaying(void *a1, const char *a2, ...)
{
  return _[a1 stopPlaying];
}

id objc_msgSend_stopRecordingSpeech(void *a1, const char *a2, ...)
{
  return _[a1 stopRecordingSpeech];
}

id objc_msgSend_stopRecordingSpeechForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 stopRecordingSpeechForSiriPresentation:];
}

id objc_msgSend_stopSpeakingForCompactViewController_(void *a1, const char *a2, ...)
{
  return [a1 stopSpeakingForCompactViewController:];
}

id objc_msgSend_stopSpeakingForSAEViewController_(void *a1, const char *a2, ...)
{
  return [a1 stopSpeakingForSAEViewController:];
}

id objc_msgSend_stopSpeakingForSiriPresentation_(void *a1, const char *a2, ...)
{
  return [a1 stopSpeakingForSiriPresentation:];
}

id objc_msgSend_stopWakeGestureUpdates(void *a1, const char *a2, ...)
{
  return _[a1 stopWakeGestureUpdates];
}

id objc_msgSend_storeClientGeneratedDUC_(void *a1, const char *a2, ...)
{
  return [a1 storeClientGeneratedDUC:];
}

id objc_msgSend_storeCurrentInstrumentationTurnContext_(void *a1, const char *a2, ...)
{
  return [a1 storeCurrentInstrumentationTurnContext:];
}

id objc_msgSend_storeDialogPhasesForItemsAtIndexPaths_forConversation_(void *a1, const char *a2, ...)
{
  return [a1 storeDialogPhasesForItemsAtIndexPaths:forConversation:];
}

id objc_msgSend_storedConversationTranscriptItems(void *a1, const char *a2, ...)
{
  return _[a1 storedConversationTranscriptItems];
}

id objc_msgSend_storedGenerativeAssistantOnboardingCompletion(void *a1, const char *a2, ...)
{
  return _[a1 storedGenerativeAssistantOnboardingCompletion];
}

id objc_msgSend_strategyWithMode_supportedAttentionAwarenessEvents_deviceSupportsRaiseGestureDetection_isWiredMicOrBTHeadsetOrWx_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strategyWithMode:supportedAttentionAwarenessEvents:deviceSupportsRaiseGestureDetection:isWiredMicOrBTHeadsetOrWx:");
}

id objc_msgSend_streamIds(void *a1, const char *a2, ...)
{
  return _[a1 streamIds];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_string_isSameAsUserUtterance_(void *a1, const char *a2, ...)
{
  return [a1 string:isSameAsUserUtterance:];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingFormat:];
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingPathComponent:];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return [a1 stringByTrimmingCharactersInSet:];
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return [a1 stringForKey:];
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return [a1 stringWithString:];
}

id objc_msgSend_stringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return [a1 stringWithValidatedFormat:validFormatSpecifiers:error:];
}

id objc_msgSend_subFeature(void *a1, const char *a2, ...)
{
  return _[a1 subFeature];
}

id objc_msgSend_submitTaskRequest_error_(void *a1, const char *a2, ...)
{
  return [a1 submitTaskRequest:error:];
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return [a1 substringWithRange:];
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _[a1 subtitle];
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _[a1 subviews];
}

id objc_msgSend_suffix(void *a1, const char *a2, ...)
{
  return _[a1 suffix];
}

id objc_msgSend_suggestionId(void *a1, const char *a2, ...)
{
  return _[a1 suggestionId];
}

id objc_msgSend_suggestionTapAnimationWithIndex_isTouchUp_(void *a1, const char *a2, ...)
{
  return [a1 suggestionTapAnimationWithIndex:isTouchUp:];
}

id objc_msgSend_suggestionText(void *a1, const char *a2, ...)
{
  return _[a1 suggestionText];
}

id objc_msgSend_suggestionsViewController_didHideVibrantView_(void *a1, const char *a2, ...)
{
  return [a1 suggestionsViewController:didHideVibrantView:];
}

id objc_msgSend_suggestionsViewDidShowSuggestions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suggestionsViewDidShowSuggestions:");
}

id objc_msgSend_summaryTitle(void *a1, const char *a2, ...)
{
  return _[a1 summaryTitle];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_supportedEvents(void *a1, const char *a2, ...)
{
  return _[a1 supportedEvents];
}

id objc_msgSend_supportsCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 supportsCarPlay];
}

id objc_msgSend_supportsTextInput(void *a1, const char *a2, ...)
{
  return _[a1 supportsTextInput];
}

id objc_msgSend_supportsTransformationForAceCommand_(void *a1, const char *a2, ...)
{
  return [a1 supportsTransformationForAceCommand:];
}

id objc_msgSend_surveySampleRateKey(void *a1, const char *a2, ...)
{
  return _[a1 surveySampleRateKey];
}

id objc_msgSend_switchPresentationToTextInput(void *a1, const char *a2, ...)
{
  return _[a1 switchPresentationToTextInput];
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_synthesizeWithRequest_didFinish_(void *a1, const char *a2, ...)
{
  return [a1 synthesizeWithRequest:didFinish:];
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBackgroundColor];
}

id objc_msgSend_systemFillColor(void *a1, const char *a2, ...)
{
  return _[a1 systemFillColor];
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 systemFontOfSize:];
}

id objc_msgSend_systemUptime(void *a1, const char *a2, ...)
{
  return _[a1 systemUptime];
}

id objc_msgSend_tagPhrase(void *a1, const char *a2, ...)
{
  return _[a1 tagPhrase];
}

id objc_msgSend_tallParagraphStyleForCurrentScaleWithTextAlignment_(void *a1, const char *a2, ...)
{
  return [a1 tallParagraphStyleForCurrentScaleWithTextAlignment:];
}

id objc_msgSend_tapToEditPresented(void *a1, const char *a2, ...)
{
  return _[a1 tapToEditPresented];
}

id objc_msgSend_tapToEditPresented_(void *a1, const char *a2, ...)
{
  return [a1 tapToEditPresented];
}

id objc_msgSend_taskIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 taskIdentifier];
}

id objc_msgSend_tearDown(void *a1, const char *a2, ...)
{
  return _[a1 tearDown];
}

id objc_msgSend_tearDownViews(void *a1, const char *a2, ...)
{
  return _[a1 tearDownViews];
}

id objc_msgSend_testingContext(void *a1, const char *a2, ...)
{
  return _[a1 testingContext];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textAlignment(void *a1, const char *a2, ...)
{
  return _[a1 textAlignment];
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _[a1 textColor];
}

id objc_msgSend_textContainer(void *a1, const char *a2, ...)
{
  return _[a1 textContainer];
}

id objc_msgSend_textFieldContainerView(void *a1, const char *a2, ...)
{
  return _[a1 textFieldContainerView];
}

id objc_msgSend_textFieldHeight(void *a1, const char *a2, ...)
{
  return _[a1 textFieldHeight];
}

id objc_msgSend_textInputEnabled(void *a1, const char *a2, ...)
{
  return _[a1 textInputEnabled];
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _[a1 textLabel];
}

id objc_msgSend_textOfUtteranceAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 textOfUtteranceAtIndex:];
}

id objc_msgSend_textRequestController_didChangeText_(void *a1, const char *a2, ...)
{
  return [a1 textRequestController:didChangeText:];
}

id objc_msgSend_textRequestController_didEnableSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 textRequestController:didEnableSuggestions:];
}

id objc_msgSend_textRequestController_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 textRequestController:requestsKeyboardWithCompletion:];
}

id objc_msgSend_textRequestController_siriRequestCommittedWithText_(void *a1, const char *a2, ...)
{
  return [a1 textRequestController:siriRequestCommittedWithText:];
}

id objc_msgSend_textRequestControllerDidEndEditing_(void *a1, const char *a2, ...)
{
  return [a1 textRequestControllerDidEndEditing:];
}

id objc_msgSend_textRequestControllerDidEndTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return [a1 textRequestControllerDidEndTextEditMenuInteraction];
}

id objc_msgSend_textRequestControllerRequestsVoiceActivation_(void *a1, const char *a2, ...)
{
  return [a1 textRequestControllerRequestsVoiceActivation];
}

id objc_msgSend_textRequestControllerWillBeginEditing_(void *a1, const char *a2, ...)
{
  return [a1 textRequestControllerWillBeginEditing:];
}

id objc_msgSend_textRequestControllerWillBeginTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return [a1 textRequestControllerWillBeginTextEditMenuInteraction];
}

id objc_msgSend_textRequestSuggestionsButton_didEnableSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 textRequestSuggestionsButton:didEnableSuggestions:];
}

id objc_msgSend_textRequestView_didChangeTextFieldText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestView:didChangeTextFieldText:");
}

id objc_msgSend_textRequestView_didEnableSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 textRequestView:didEnableSuggestions:];
}

id objc_msgSend_textRequestView_requestsKeyboardWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 textRequestView:requestsKeyboardWithCompletion:];
}

id objc_msgSend_textRequestView_siriRequestCommittedWithText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRequestView:siriRequestCommittedWithText:");
}

id objc_msgSend_textRequestViewDidEndEditing_(void *a1, const char *a2, ...)
{
  return [a1 textRequestViewDidEndEditing:];
}

id objc_msgSend_textRequestViewDidEndTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return [a1 textRequestViewDidEndTextEditMenuInteraction];
}

id objc_msgSend_textRequestViewRequestsVoiceActivation_(void *a1, const char *a2, ...)
{
  return [a1 textRequestViewRequestsVoiceActivation:];
}

id objc_msgSend_textRequestViewWillBeginEditing_(void *a1, const char *a2, ...)
{
  return [a1 textRequestViewWillBeginEditing:];
}

id objc_msgSend_textRequestViewWillBeginTextEditMenuInteraction_(void *a1, const char *a2, ...)
{
  return [a1 textRequestViewWillBeginTextEditMenuInteraction:];
}

id objc_msgSend_textWithString_(void *a1, const char *a2, ...)
{
  return [a1 textWithString:];
}

id objc_msgSend_theaterShowtimeListSnippet(void *a1, const char *a2, ...)
{
  return _[a1 theaterShowtimeListSnippet];
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_tipPrefix(void *a1, const char *a2, ...)
{
  return _[a1 tipPrefix];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_titleBoldedRange(void *a1, const char *a2, ...)
{
  return _[a1 titleBoldedRange];
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _[a1 titleLabel];
}

id objc_msgSend_toPlatteredCardView(void *a1, const char *a2, ...)
{
  return _[a1 toPlatteredCardView];
}

id objc_msgSend_toggle(void *a1, const char *a2, ...)
{
  return _[a1 toggle];
}

id objc_msgSend_toggleHomeAffordanceHidden_(void *a1, const char *a2, ...)
{
  return [a1 toggleHomeAffordanceHidden:];
}

id objc_msgSend_toggleSiriHomeAffordanceGestureControl_(void *a1, const char *a2, ...)
{
  return [a1 toggleSiriHomeAffordanceGestureControl:];
}

id objc_msgSend_tokenizer(void *a1, const char *a2, ...)
{
  return _[a1 tokenizer];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topObject(void *a1, const char *a2, ...)
{
  return _[a1 topObject];
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _[a1 topViewController];
}

id objc_msgSend_touchAttentionAwarenessClient(void *a1, const char *a2, ...)
{
  return _[a1 touchAttentionAwarenessClient];
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _[a1 trailingAnchor];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_traitCollectionWithPreferredContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionWithPreferredContentSizeCategory:];
}

id objc_msgSend_traitOverrides(void *a1, const char *a2, ...)
{
  return _[a1 traitOverrides];
}

id objc_msgSend_transcriptItemForObject_(void *a1, const char *a2, ...)
{
  return [a1 transcriptItemForObject:];
}

id objc_msgSend_transcriptItemForObject_sizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transcriptItemForObject:sizeClass:");
}

id objc_msgSend_transcriptItemWithAceObject_(void *a1, const char *a2, ...)
{
  return [a1 transcriptItemWithAceObject:];
}

id objc_msgSend_transformAddDialogs_forMode_(void *a1, const char *a2, ...)
{
  return [a1 transformAddDialogs:forMode:];
}

id objc_msgSend_transformAddViews_forMode_(void *a1, const char *a2, ...)
{
  return [a1 transformAddViews:forMode:];
}

id objc_msgSend_transformAddViews_mode_idiom_(void *a1, const char *a2, ...)
{
  return [a1 transformAddViews:mode:idiom:];
}

id objc_msgSend_transformModel_mode_currentIdiom_(void *a1, const char *a2, ...)
{
  return [a1 transformModel:mode:currentIdiom:];
}

id objc_msgSend_transformVisualResponse_forMode_idiom_shouldHideSnippet_(void *a1, const char *a2, ...)
{
  return [a1 transformVisualResponse:forMode:idiom:shouldHideSnippet:];
}

id objc_msgSend_transitionController(void *a1, const char *a2, ...)
{
  return _[a1 transitionController];
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 transitionCoordinator];
}

id objc_msgSend_transitionDuration(void *a1, const char *a2, ...)
{
  return _[a1 transitionDuration];
}

id objc_msgSend_transitionDuration_(void *a1, const char *a2, ...)
{
  return [a1 transitionDuration:];
}

id objc_msgSend_transitionFromResultToCollapseLoading(void *a1, const char *a2, ...)
{
  return _[a1 transitionFromResultToCollapseLoading];
}

id objc_msgSend_transitionFromViewController_toViewController_duration_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionFromViewController:toViewController:duration:options:animations:completion:");
}

id objc_msgSend_transitionMergedResults(void *a1, const char *a2, ...)
{
  return _[a1 transitionMergedResults];
}

id objc_msgSend_transitionToRemovedResponseElements_(void *a1, const char *a2, ...)
{
  return [a1 transitionToRemovedResponseElements:];
}

id objc_msgSend_transitionToResult(void *a1, const char *a2, ...)
{
  return _[a1 transitionToResult];
}

id objc_msgSend_transitionToSuggestionsCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 transitionToSuggestionsCollapsed];
}

id objc_msgSend_transitionToSuggestionsCollapsedWithIndex_animated_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 transitionToSuggestionsCollapsedWithIndex:animated:completionBlock:];
}

id objc_msgSend_transitionToSuggestionsExpanded(void *a1, const char *a2, ...)
{
  return _[a1 transitionToSuggestionsExpanded];
}

id objc_msgSend_transitionToUpdatedContentInset(void *a1, const char *a2, ...)
{
  return _[a1 transitionToUpdatedContentInset];
}

id objc_msgSend_transitionVoiceLoadingToLoading(void *a1, const char *a2, ...)
{
  return _[a1 transitionVoiceLoadingToLoading];
}

id objc_msgSend_transitionWasCancelled(void *a1, const char *a2, ...)
{
  return _[a1 transitionWasCancelled];
}

id objc_msgSend_translationInView_(void *a1, const char *a2, ...)
{
  return [a1 translationInView:];
}

id objc_msgSend_trustsURL_(void *a1, const char *a2, ...)
{
  return [a1 trustsURL:];
}

id objc_msgSend_turnIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 turnIdentifier];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_typedData(void *a1, const char *a2, ...)
{
  return _[a1 typedData];
}

id objc_msgSend_uiPresentationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uiPresentationIdentifier];
}

id objc_msgSend_understandingOnDeviceAssetsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 understandingOnDeviceAssetsAvailable];
}

id objc_msgSend_unregisterNonButtonSourceWithType_withUUID_(void *a1, const char *a2, ...)
{
  return [a1 unregisterNonButtonSourceWithType:withUUID:];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_upcomingResultHasSnippet(void *a1, const char *a2, ...)
{
  return _[a1 upcomingResultHasSnippet];
}

id objc_msgSend_updateBackgroundIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateBackgroundIfNeeded];
}

id objc_msgSend_updateBackgroundView_smartDialogView_isSnippetAsyncColored_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBackgroundView:smartDialogView:isSnippetAsyncColored:");
}

id objc_msgSend_updateCacheWithGuideUpdate_completion_(void *a1, const char *a2, ...)
{
  return [a1 updateCacheWithGuideUpdate:completion:];
}

id objc_msgSend_updateClientSettingsWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 updateClientSettingsWithBlock:];
}

id objc_msgSend_updateConstraintConstants(void *a1, const char *a2, ...)
{
  return _[a1 updateConstraintConstants];
}

id objc_msgSend_updateDictationResult_withAlternativeUtteranceAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 updateDictationResult:withAlternativeUtteranceAtIndex:];
}

id objc_msgSend_updateEdgeLightWindowLevel_(void *a1, const char *a2, ...)
{
  return [a1 updateEdgeLightWindowLevel:];
}

id objc_msgSend_updateFeedbackFormWithSpeakableText_(void *a1, const char *a2, ...)
{
  return [a1 updateFeedbackFormWithSpeakableText:];
}

id objc_msgSend_updateInteractiveTransition_(void *a1, const char *a2, ...)
{
  return [a1 updateInteractiveTransition:];
}

id objc_msgSend_updateKeyboardInfo_(void *a1, const char *a2, ...)
{
  return [a1 updateKeyboardInfo:];
}

id objc_msgSend_updateKeyboardLightEffects_(void *a1, const char *a2, ...)
{
  return [a1 updateKeyboardLightEffects:];
}

id objc_msgSend_updateLoadingPillSizeWithCandidateSize_(void *a1, const char *a2, ...)
{
  return [a1 updateLoadingPillSizeWithCandidateSize:];
}

id objc_msgSend_updateMinimumIdleTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 updateMinimumIdleTimeInterval:];
}

id objc_msgSend_updateResultSizeWithResultSize_(void *a1, const char *a2, ...)
{
  return [a1 updateResultSizeWithResultSize:];
}

id objc_msgSend_updateSessionIDFromUUIDString_(void *a1, const char *a2, ...)
{
  return [a1 updateSessionIDFromUUIDString:];
}

id objc_msgSend_updateSharedState_(void *a1, const char *a2, ...)
{
  return [a1 updateSharedState:];
}

id objc_msgSend_updateSpeechRecognitionHypothesisForSuggestion_(void *a1, const char *a2, ...)
{
  return [a1 updateSpeechRecognitionHypothesisForSuggestion:];
}

id objc_msgSend_updateSuggestedUtterances_forLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSuggestedUtterances:forLanguage:");
}

id objc_msgSend_updateSystemUIForAddViews_viewMode_lockState_isInAmbient_(void *a1, const char *a2, ...)
{
  return [a1 updateSystemUIForAddViews:viewMode:lockState:isInAmbient:];
}

id objc_msgSend_updateTopInset_animated_(void *a1, const char *a2, ...)
{
  return [a1 updateTopInset:animated:];
}

id objc_msgSend_updateUserUtteranceVisibilityIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateUserUtteranceVisibilityIfNeeded];
}

id objc_msgSend_updateWithUpdateViewsCommand_(void *a1, const char *a2, ...)
{
  return [a1 updateWithUpdateViewsCommand:];
}

id objc_msgSend_updatedItemIndexPaths(void *a1, const char *a2, ...)
{
  return _[a1 updatedItemIndexPaths];
}

id objc_msgSend_updatedUserUtteranceForRefId_(void *a1, const char *a2, ...)
{
  return [a1 updatedUserUtteranceForRefId:];
}

id objc_msgSend_updatedUserUtteranceForSiriViewController_(void *a1, const char *a2, ...)
{
  return [a1 updatedUserUtteranceForSiriViewController];
}

id objc_msgSend_uppercaseStringWithLocale_(void *a1, const char *a2, ...)
{
  return [a1 uppercaseStringWithLocale:];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_useDeviceSpeakerForTTS(void *a1, const char *a2, ...)
{
  return _[a1 useDeviceSpeakerForTTS];
}

id objc_msgSend_userAttentionController(void *a1, const char *a2, ...)
{
  return _[a1 userAttentionController];
}

id objc_msgSend_userAttentionController_didGainAttentionWithEvent_(void *a1, const char *a2, ...)
{
  return [a1 userAttentionController:didGainAttentionWithEvent:];
}

id objc_msgSend_userAttentionController_didLoseAttentionWithEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAttentionController:didLoseAttentionWithEvent:");
}

id objc_msgSend_userDefaults(void *a1, const char *a2, ...)
{
  return _[a1 userDefaults];
}

id objc_msgSend_userDidReportConcernWithModel_(void *a1, const char *a2, ...)
{
  return [a1 userDidReportConcernWithModel:];
}

id objc_msgSend_userDrilledIntoSnippet(void *a1, const char *a2, ...)
{
  return _[a1 userDrilledIntoSnippet];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInput(void *a1, const char *a2, ...)
{
  return _[a1 userInput];
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyle];
}

id objc_msgSend_userSelectionResults_(void *a1, const char *a2, ...)
{
  return [a1 userSelectionResults:];
}

id objc_msgSend_userStringForError_reflectionDialogWasPlayed_(void *a1, const char *a2, ...)
{
  return [a1 userStringForError:reflectionDialogWasPlayed:];
}

id objc_msgSend_userTouchedSnippet(void *a1, const char *a2, ...)
{
  return _[a1 userTouchedSnippet];
}

id objc_msgSend_userTypedInSiri(void *a1, const char *a2, ...)
{
  return _[a1 userTypedInSiri];
}

id objc_msgSend_userUtterance(void *a1, const char *a2, ...)
{
  return _[a1 userUtterance];
}

id objc_msgSend_utsId(void *a1, const char *a2, ...)
{
  return _[a1 utsId];
}

id objc_msgSend_utteranceIndex(void *a1, const char *a2, ...)
{
  return _[a1 utteranceIndex];
}

id objc_msgSend_utteranceTextDidBecomeFirstResponder_(void *a1, const char *a2, ...)
{
  return [a1 utteranceTextDidBecomeFirstResponder:];
}

id objc_msgSend_utteranceTextDidReceiveReturnKey_(void *a1, const char *a2, ...)
{
  return [a1 utteranceTextDidReceiveReturnKey:];
}

id objc_msgSend_utteranceTextDidResignFirstResponder_(void *a1, const char *a2, ...)
{
  return [a1 utteranceTextDidResignFirstResponder:];
}

id objc_msgSend_utteranceViewEligibleForLightEffects_(void *a1, const char *a2, ...)
{
  return [a1 utteranceViewEligibleForLightEffects:];
}

id objc_msgSend_utterances(void *a1, const char *a2, ...)
{
  return _[a1 utterances];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueAnnotation(void *a1, const char *a2, ...)
{
  return _[a1 valueAnnotation];
}

id objc_msgSend_velocityInView_(void *a1, const char *a2, ...)
{
  return [a1 velocityInView:];
}

id objc_msgSend_verticalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 verticalSizeClass];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return _[a1 viewController];
}

id objc_msgSend_viewController_didFinishEditingUtteranceWithText_originalUserUtterance_selectionResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:didFinishEditingUtteranceWithText:originalUserUtterance:selectionResults:");
}

id objc_msgSend_viewController_openURL_completion_(void *a1, const char *a2, ...)
{
  return [a1 viewController:openURL:completion:];
}

id objc_msgSend_viewController_performAceCommands_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:performAceCommands:completion:");
}

id objc_msgSend_viewController_reduceOrbOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:reduceOrbOpacity:");
}

id objc_msgSend_viewController_requestsHostBackgroundBlurVisible_reason_fence_(void *a1, const char *a2, ...)
{
  return [a1 viewController:requestsHostBackgroundBlurVisible:reason:fence:];
}

id objc_msgSend_viewController_siriRequestEnteredWithSuggestion_(void *a1, const char *a2, ...)
{
  return [a1 viewController:siriRequestEnteredWithSuggestion:];
}

id objc_msgSend_viewController_siriRequestEnteredWithText_(void *a1, const char *a2, ...)
{
  return [a1 viewController:siriRequestEnteredWithText:];
}

id objc_msgSend_viewController_willChangeKeyboardVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController:willChangeKeyboardVisibility:");
}

id objc_msgSend_viewControllerDidPresentUserInterface_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerDidPresentUserInterface:];
}

id objc_msgSend_viewControllerForKey_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForKey:];
}

id objc_msgSend_viewControllerViewWillDisappear_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerViewWillDisappear:];
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_viewForKey_(void *a1, const char *a2, ...)
{
  return [a1 viewForKey:];
}

id objc_msgSend_viewForModel_mode_(void *a1, const char *a2, ...)
{
  return [a1 viewForModel:mode:];
}

id objc_msgSend_viewForSnippetModel_bundleName_mode_(void *a1, const char *a2, ...)
{
  return [a1 viewForSnippetModel:bundleName:mode:];
}

id objc_msgSend_viewId(void *a1, const char *a2, ...)
{
  return _[a1 viewId];
}

id objc_msgSend_viewRegionForPresentedAceObject_(void *a1, const char *a2, ...)
{
  return [a1 viewRegionForPresentedAceObject];
}

id objc_msgSend_viewRegionForPresentedAceObject_resultTrasncriptItems_conversationTranscriptItems_serverUtterances_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewRegionForPresentedAceObject:resultTrasncriptItems:conversationTranscriptItems:serverUtterances:");
}

id objc_msgSend_viewStackContainer(void *a1, const char *a2, ...)
{
  return _[a1 viewStackContainer];
}

id objc_msgSend_viewState(void *a1, const char *a2, ...)
{
  return _[a1 viewState];
}

id objc_msgSend_views(void *a1, const char *a2, ...)
{
  return _[a1 views];
}

id objc_msgSend_visibleViewController(void *a1, const char *a2, ...)
{
  return _[a1 visibleViewController];
}

id objc_msgSend_visualMode(void *a1, const char *a2, ...)
{
  return _[a1 visualMode];
}

id objc_msgSend_visualResponse(void *a1, const char *a2, ...)
{
  return _[a1 visualResponse];
}

id objc_msgSend_visualResponseProvider(void *a1, const char *a2, ...)
{
  return _[a1 visualResponseProvider];
}

id objc_msgSend_visualStylingProviderForCategory_(void *a1, const char *a2, ...)
{
  return [a1 visualStylingProviderForCategory:];
}

id objc_msgSend_voiceFeedbackSetting(void *a1, const char *a2, ...)
{
  return _[a1 voiceFeedbackSetting];
}

id objc_msgSend_voiceName(void *a1, const char *a2, ...)
{
  return _[a1 voiceName];
}

id objc_msgSend_voicemailPlayer(void *a1, const char *a2, ...)
{
  return _[a1 voicemailPlayer];
}

id objc_msgSend_wakeGestureManager(void *a1, const char *a2, ...)
{
  return _[a1 wakeGestureManager];
}

id objc_msgSend_wasAddedToTranscript(void *a1, const char *a2, ...)
{
  return _[a1 wasAddedToTranscript];
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 weakObjectsHashTable];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceAndNewlineCharacterSet];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceCharacterSet];
}

id objc_msgSend_willBeginEditingFromUtterancePresenter_(void *a1, const char *a2, ...)
{
  return [a1 willBeginEditingFromUtterancePresenter:];
}

id objc_msgSend_willBeginEditingFromUtteranceView_(void *a1, const char *a2, ...)
{
  return [a1 willBeginEditingFromUtteranceView:];
}

id objc_msgSend_willBeginEditingFromUtteranceViewController_(void *a1, const char *a2, ...)
{
  return [a1 willBeginEditingFromUtteranceViewController:];
}

id objc_msgSend_willDismissEditableUtterancePresenter_transitionCoordinator_(void *a1, const char *a2, ...)
{
  return [a1 willDismissEditableUtterancePresenter:transitionCoordinator:];
}

id objc_msgSend_willDismissModalContent(void *a1, const char *a2, ...)
{
  return _[a1 willDismissModalContent];
}

id objc_msgSend_willEnterForegroundHandler(void *a1, const char *a2, ...)
{
  return _[a1 willEnterForegroundHandler];
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 willMoveToParentViewController:];
}

id objc_msgSend_willPresentModalContent(void *a1, const char *a2, ...)
{
  return _[a1 willPresentModalContent];
}

id objc_msgSend_willResignActiveHandler(void *a1, const char *a2, ...)
{
  return _[a1 willResignActiveHandler];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _[a1 windowScene];
}

id objc_msgSend_words(void *a1, const char *a2, ...)
{
  return _[a1 words];
}

id objc_msgSend_wrapCommandInStartLocalRequest_(void *a1, const char *a2, ...)
{
  return [a1 wrapCommandInStartLocalRequest:];
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_zoomLevel(void *a1, const char *a2, ...)
{
  return _[a1 zoomLevel];
}