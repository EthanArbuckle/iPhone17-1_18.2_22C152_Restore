uint64_t specialized static MOSuggestionAssetReference.consolidatedType(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;

  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v4 = v3;
  if (v2 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v4 == v5) {
    goto LABEL_13;
  }
  v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7) {
    return MOSuggestionAssetsTypePhoto;
  }
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v10 = v9;
  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    return MOSuggestionAssetsTypePhoto;
  }
  v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v16 = v15;
    if (v14 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v16 != v17)
    {
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0) {
        return a1;
      }
      return MOSuggestionAssetsTypePhoto;
    }
    goto LABEL_13;
  }
  return MOSuggestionAssetsTypePhoto;
}

uint64_t specialized static MOSuggestionAssetReference.consolidatedGroupType(_:)(uint64_t a1)
{
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  if (v2 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v4 == v5) {
    goto LABEL_13;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
    if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11) {
      goto LABEL_13;
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;
      if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17)
      {
LABEL_13:
        swift_bridgeObjectRelease_n();
        goto LABEL_14;
      }
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v20) {
        goto LABEL_14;
      }
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;
      if (v21 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v23 != v24)
      {
        char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v25) {
          goto LABEL_25;
        }
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;
        if (v26 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v28 != v29)
        {
          char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v30 & 1) == 0) {
            return a1;
          }
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_25:
      v18 = &MOSuggestionAssetsTypePhoto;
      return *(void *)v18;
    }
  }
LABEL_14:
  v18 = &MOSuggestionAssetsTypeWorkout;
  return *(void *)v18;
}

uint64_t outlined destroy of UUID?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100143488@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 120))();
  *a2 = result;
  return result;
}

uint64_t sub_1001434D4(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(void **)a2 + 128))(*a1);
}

uint64_t sub_100143528@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 144))();
  *a2 = result;
  return result;
}

uint64_t sub_100143574(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 152))(*a1);
}

uint64_t sub_1001435BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 168))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100143608(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 176);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_100143670(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 192))();
}

uint64_t sub_1001436B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 216))();
  *a2 = result;
  return result;
}

uint64_t sub_100143704(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(void **)a2 + 224))(*a1);
}

uint64_t sub_100143758@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 344))();
  *a2 = result;
  return result;
}

uint64_t sub_1001437AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 352);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100143808@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 360))();
  *a2 = result;
  return result;
}

uint64_t sub_10014385C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 368);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1001438B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 384))();
  *a2 = result;
  return result;
}

uint64_t sub_10014390C(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 392);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10014396C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 408))();
  *a2 = result;
  return result;
}

uint64_t sub_1001439C0(uint64_t a1, uint64_t a2)
{
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 416);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100143A1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 344))();
  *a2 = result;
  return result;
}

uint64_t sub_100143A70(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(void **)a2 + 352))(*a1);
}

uint64_t sub_100143ACC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 344))();
  *a2 = result;
  return result;
}

uint64_t sub_100143B20(uint64_t a1, uint64_t a2)
{
  id v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 352);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ObjC metadata update function for MOSuggestionAssetReference()
{
  return type metadata accessor for MOSuggestionAssetReference(0);
}

uint64_t type metadata accessor for MOSuggestionAssetReference(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOSuggestionAssetReference);
}

void type metadata completion function for MOSuggestionAssetReference()
{
  type metadata accessor for UUID?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t ObjC metadata update function for MOEvergreenAssetReference()
{
  return type metadata accessor for MOEvergreenAssetReference(0);
}

uint64_t type metadata accessor for MOEvergreenAssetReference(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOEvergreenAssetReference);
}

uint64_t type metadata completion function for MOEvergreenAssetReference()
{
  return type metadata completion function for MOEvergreenAssetReference();
}

{
  return swift_updateClassMetadata2();
}

uint64_t ObjC metadata update function for MOMultiMapAssetReference()
{
  return type metadata accessor for MOMultiMapAssetReference(0);
}

uint64_t type metadata accessor for MOMultiMapAssetReference(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOMultiMapAssetReference);
}

uint64_t type metadata completion function for MOMultiMapAssetReference()
{
  return swift_updateClassMetadata2();
}

uint64_t ObjC metadata update function for MOGenericMapAssetReference()
{
  return type metadata accessor for MOGenericMapAssetReference(0);
}

uint64_t type metadata accessor for MOGenericMapAssetReference(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOGenericMapAssetReference);
}

uint64_t type metadata completion function for MOGenericMapAssetReference()
{
  return type metadata completion function for MOEvergreenAssetReference();
}

uint64_t ObjC metadata update function for MOWorkoutGroupAssetReference()
{
  return type metadata accessor for MOWorkoutGroupAssetReference(0);
}

uint64_t type metadata accessor for MOWorkoutGroupAssetReference(uint64_t a1)
{
  return type metadata accessor for MOSuggestionCollectionViewCellViewModel.MOSuggestionCollectionViewAssetPlaceHolderResult(a1, (uint64_t *)&type metadata singleton initialization cache for MOWorkoutGroupAssetReference);
}

uint64_t type metadata completion function for MOWorkoutGroupAssetReference()
{
  return type metadata completion function for MOEvergreenAssetReference();
}

uint64_t MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder.order.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t getEnumTagSinglePayload for MOClientPresentationDetails(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[16]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for MOClientPresentationDetails(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOClientPresentationDetails()
{
  return &type metadata for MOClientPresentationDetails;
}

BOOL MOMapLocation.shouldNotUseSpecificName.getter()
{
  if ((*(double (**)(void))(*(void *)v0 + 360))() > 0.9 && (*(uint64_t (**)(void))(*(void *)v0 + 288))())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  else
  {
    double v2 = (*(double (**)(void))(*(void *)v0 + 456))();
    if (one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD != -1) {
      swift_once();
    }
    return *(double *)&static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD < v2;
  }
}

double MOMapLocation.coordinate.getter()
{
  double v1 = (*(double (**)(void))(*(void *)v0 + 240))();
  (*(void (**)(void))(*(void *)v0 + 264))();
  return v1;
}

uint64_t MOMapLocation.shouldUseMarker.getter()
{
  if ((*(double (**)(void))(*(void *)v0 + 360))() <= 0.9) {
    return 0;
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)v0 + 288))();
  if (result)
  {
    swift_unknownObjectRelease();
    return 1;
  }
  return result;
}

uint64_t MOMapLocation.renderingGeoMapItem.getter()
{
  if ((*(double (**)(void))(*(void *)v0 + 360))() <= 0.9) {
    return 0;
  }
  double v2 = *(uint64_t (**)(void))(*(void *)v0 + 288);
  if (!v2()) {
    return 0;
  }
  swift_unknownObjectRelease();

  return v2();
}

uint64_t MOMapLocation.__allocating_init(fromGEOMapItem:title:confidenceLevel:enclosingArea:poiCategory:startDate:horizontalUncertainty:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  [a1 coordinate];
  double v17 = v16;
  [a1 coordinate];
  uint64_t v18 = (*(uint64_t (**)(void, unint64_t, void, uint64_t, void, void, void, void, double, _BYTE, void, unint64_t))(v8 + 528))(0, 0xE000000000000000, 0, 1, 0, 0, 0, 0, v17, 0, 0, 0xE000000000000000);
  v19 = (void *)(v18 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem);
  swift_beginAccess();
  void *v19 = a1;
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  char v20 = (void *)(v18 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title);
  swift_beginAccess();
  *char v20 = a2;
  v20[1] = a3;
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)(v18 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
  swift_beginAccess();
  *uint64_t v21 = a4;
  v21[1] = a5;
  swift_bridgeObjectRelease();
  uint64_t v22 = v18 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate;
  swift_beginAccess();
  outlined assign with copy of Date?(a8, v22);
  swift_endAccess();
  if (a7)
  {
    uint64_t v23 = (void *)(v18 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory);
    swift_beginAccess();
    *uint64_t v23 = a6;
    v23[1] = a7;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  __swift_project_value_buffer(v24, (uint64_t)static MOAngelLogger.assets);
  char v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 134218240;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "[MOMapLocation] confidence: %f, unc=%f", (uint8_t *)v27, 0x16u);
    swift_slowDealloc();
  }

  swift_unknownObjectRelease();
  outlined destroy of Date?(a8);
  return v18;
}

uint64_t MOMapLocation.__allocating_init(fromResource:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4 - 8);
  v6 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 data];
  if (!v7) {
    goto LABEL_19;
  }
  uint64_t v8 = v7;
  uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  v12 = self;
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v100 = 0;
  id v14 = [v12 JSONObjectWithData:isa options:0 error:&v100];

  if (!v14)
  {
    id v46 = v100;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    outlined consume of Data._Representation(v9, v11);
    swift_errorRelease();
    goto LABEL_19;
  }
  id v15 = v100;
  _bridgeAnyObjectToAny(_:)();
  outlined consume of Data._Representation(v9, v11);
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:

    return 0;
  }
  double v16 = v99;
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(*(void *)&v16 + 16)
    || (unint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)(v17, v18), (v20 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v21 = *(void **)(*(void *)(*(void *)&v16 + 56) + 8 * v19);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  id v100 = v21;
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_25;
  }
  double v22 = v99;
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(*(void *)&v22 + 16)) {
    goto LABEL_24;
  }
  unint64_t v25 = specialized __RawDictionaryStorage.find<A>(_:)(v23, v24);
  if ((v26 & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v27 = *(void **)(*(void *)(*(void *)&v22 + 56) + 8 * v25);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  id v100 = v27;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_26:

    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  double v28 = v99;
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(*(void *)&v22 + 16)
    || (unint64_t v31 = specialized __RawDictionaryStorage.find<A>(_:)(v29, v30), (v32 & 1) == 0))
  {
LABEL_24:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  v33 = *(void **)(*(void *)(*(void *)&v22 + 56) + 8 * v31);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  id v100 = v33;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_26;
  }
  double v34 = v99;
  [a1 placeNameConfidence];
  uint64_t v36 = (*(uint64_t (**)(void, unint64_t, void, uint64_t, void, void, void, void, double, double, double, double, _BYTE, void, unint64_t))(v2 + 528))(0, 0xE000000000000000, 0, 1, 0, 0, 0, 0, v28, v34, v35, 0.0, 0, 0, 0xE000000000000000);
  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v39 = v38;
  if (!*(void *)(*(void *)&v16 + 16))
  {
    swift_retain();
    goto LABEL_28;
  }
  uint64_t v40 = v37;
  swift_retain();
  unint64_t v41 = specialized __RawDictionaryStorage.find<A>(_:)(v40, v39);
  if ((v42 & 1) == 0)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  v43 = *(void **)(*(void *)(*(void *)&v16 + 56) + 8 * v41);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  id v100 = v43;
  if (swift_dynamicCast())
  {
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v44 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v6, 0, 1, v44);
    uint64_t v45 = v36 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate;
    swift_beginAccess();
    outlined assign with take of Date?((uint64_t)v6, v45);
    swift_endAccess();
  }
LABEL_29:
  uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(*(void *)&v16 + 16)
    && (unint64_t v50 = specialized __RawDictionaryStorage.find<A>(_:)(v48, v49), (v51 & 1) != 0))
  {
    v52 = *(void **)(*(void *)(*(void *)&v16 + 56) + 8 * v50);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    id v100 = v52;
    if (swift_dynamicCast())
    {
      Date.init(timeIntervalSinceReferenceDate:)();
      uint64_t v53 = type metadata accessor for Date();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v6, 0, 1, v53);
      uint64_t v54 = v36 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate;
      swift_beginAccess();
      outlined assign with take of Date?((uint64_t)v6, v54);
      swift_endAccess();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(*(void *)&v16 + 16)
    && (unint64_t v57 = specialized __RawDictionaryStorage.find<A>(_:)(v55, v56), (v58 & 1) != 0))
  {
    v59 = *(void **)(*(void *)(*(void *)&v16 + 56) + 8 * v57);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    id v100 = v59;
    if (swift_dynamicCast())
    {
      BOOL v60 = *(void *)&v99 == 2;
      v61 = (BOOL *)(v36 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork);
      swift_beginAccess();
      BOOL *v61 = v60;
      swift_beginAccess();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(*(void *)&v16 + 16)) {
    goto LABEL_43;
  }
  unint64_t v64 = specialized __RawDictionaryStorage.find<A>(_:)(v62, v63);
  if ((v65 & 1) == 0) {
    goto LABEL_43;
  }
  double v66 = *(double *)(*(void *)(*(void *)&v16 + 56) + 8 * v64);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  double v99 = v66;
  if (swift_dynamicCast())
  {
    id v67 = v100;
    uint64_t v68 = v101;
    v69 = (void *)(v36 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory);
    swift_beginAccess();
    void *v69 = v67;
    v69[1] = v68;
LABEL_43:
    swift_bridgeObjectRelease();
  }
  uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(*(void *)&v16 + 16)) {
    goto LABEL_48;
  }
  unint64_t v72 = specialized __RawDictionaryStorage.find<A>(_:)(v70, v71);
  if ((v73 & 1) == 0) {
    goto LABEL_48;
  }
  double v74 = *(double *)(*(void *)(*(void *)&v16 + 56) + 8 * v72);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  double v99 = v74;
  if (swift_dynamicCast())
  {
    id v75 = v100;
    uint64_t v76 = v101;
    v77 = (void *)(v36 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
    swift_beginAccess();
    void *v77 = v75;
    v77[1] = v76;
LABEL_48:
    swift_bridgeObjectRelease();
  }
  uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(*(void *)&v16 + 16)
    && (unint64_t v80 = specialized __RawDictionaryStorage.find<A>(_:)(v78, v79), (v81 & 1) != 0))
  {
    double v82 = *(double *)(*(void *)(*(void *)&v16 + 56) + 8 * v80);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v99 = v82;
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_55;
    }
    id v83 = v100;
    uint64_t v84 = v101;
    v85 = (void *)(v36 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
    swift_beginAccess();
    void *v85 = v83;
    v85[1] = v84;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_55:
  uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(*(void *)&v22 + 16)
    && (unint64_t v88 = specialized __RawDictionaryStorage.find<A>(_:)(v86, v87), (v89 & 1) != 0))
  {
    v90 = *(void **)(*(void *)(*(void *)&v22 + 56) + 8 * v88);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v100 = v90;
    if (swift_dynamicCast())
    {
      double v91 = v99;
      v92 = (double *)(v36 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty);
      swift_beginAccess();
      double *v92 = v91;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v93 = [a1 name];
  uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v96 = v95;

  v97 = (uint64_t *)(v36 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title);
  swift_beginAccess();
  uint64_t *v97 = v94;
  v97[1] = v96;
  swift_release();
  swift_bridgeObjectRelease();
  return v36;
}

unint64_t MOMapLocation.transferrableMetadata.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v43 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any?)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DB460;
  uint64_t v8 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
  *(void *)(inited + 32) = MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
  if ((*(double (**)(void *))(*(void *)v0 + 360))(v8) > 0.9
    && (*(uint64_t (**)(void))(*(void *)v0 + 288))())
  {
    uint64_t v9 = swift_unknownObjectRelease();
  }
  else
  {
    double v11 = (*(double (**)(void))(*(void *)v0 + 456))();
    if (one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD != -1) {
      uint64_t v9 = swift_once();
    }
    v10.n128_u64[0] = static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD;
    if (*(double *)&static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD < v11)
    {
      *(_OWORD *)(inited + 40) = 0u;
      *(_OWORD *)(inited + 56) = 0u;
      goto LABEL_9;
    }
  }
  uint64_t v12 = (*(uint64_t (**)(uint64_t, __n128))(*(void *)v0 + 336))(v9, v10);
  *(void *)(inited + 64) = &type metadata for String;
  *(void *)(inited + 40) = v12;
  *(void *)(inited + 48) = v13;
LABEL_9:
  id v14 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
  *(void *)(inited + 72) = MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
  (*(void (**)(void *))(*(void *)v0 + 192))(v14);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v44(v6, 1, v15) == 1)
  {
    outlined destroy of Date?((uint64_t)v6);
    *(_OWORD *)(inited + 80) = 0u;
    *(_OWORD *)(inited + 96) = 0u;
  }
  else
  {
    *(void *)(inited + 104) = v15;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 80));
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_1, v6, v15);
  }
  uint64_t v18 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
  *(void *)(inited + 112) = MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
  (*(void (**)(void *))(*(void *)v0 + 216))(v18);
  if (v44(v4, 1, v15) == 1)
  {
    outlined destroy of Date?((uint64_t)v4);
    *(_OWORD *)(inited + 120) = 0u;
    *(_OWORD *)(inited + 136) = 0u;
  }
  else
  {
    *(void *)(inited + 144) = v15;
    unint64_t v19 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 120));
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(v19, v4, v15);
  }
  char v20 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitLattitude;
  *(void *)(inited + 152) = MOSuggestionAssetMetadataKeyLocationPreviewVisitLattitude;
  uint64_t v21 = *(double (**)(void *))(*(void *)v0 + 240);
  *(double *)(inited + 160) = v21(v20);
  double v22 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitLatitude;
  *(void *)(inited + 184) = &type metadata for Double;
  *(void *)(inited + 192) = v22;
  *(double *)(inited + 200) = v21(v22);
  uint64_t v23 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitLongitude;
  *(void *)(inited + 224) = &type metadata for Double;
  *(void *)(inited + 232) = v23;
  *(double *)(inited + 240) = (*(double (**)(void *))(*(void *)v0 + 264))(v23);
  uint64_t v24 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewCityName;
  *(void *)(inited + 264) = &type metadata for Double;
  *(void *)(inited + 272) = v24;
  uint64_t v25 = (*(uint64_t (**)(void *))(*(void *)v0 + 432))(v24);
  if (v26)
  {
    uint64_t v27 = &type metadata for String;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v27 = 0;
    *(void *)(inited + 296) = 0;
  }
  *(void *)(inited + 280) = v25;
  *(void *)(inited + 288) = v26;
  double v28 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitMapItem;
  *(void *)(inited + 304) = v27;
  *(void *)(inited + 312) = v28;
  *(_OWORD *)(inited + 320) = 0u;
  *(_OWORD *)(inited + 336) = 0u;
  uint64_t v29 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
  *(void *)(inited + 352) = MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
  uint64_t v30 = *(uint64_t (**)(void *))(*(void *)v0 + 408);
  id v31 = v28;
  *(void *)(inited + 360) = v30(v29);
  char v32 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitHorizontalUncertainty;
  *(void *)(inited + 384) = &type metadata for Int;
  *(void *)(inited + 392) = v32;
  double v33 = (*(double (**)(void *))(*(void *)v0 + 456))(v32);
  *(void *)(inited + 424) = &type metadata for Double;
  *(double *)(inited + 400) = v33;
  unint64_t v34 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  uint64_t v35 = (*(uint64_t (**)(void))(*(void *)v0 + 288))();
  if (v35)
  {
    id v36 = [objc_allocWithZone((Class)MKMapItem) initWithGeoMapItem:v35 isPlaceHolderPlace:1];
    if (v36)
    {
      uint64_t v37 = v36;
      uint64_t v38 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitMapItem;
      v47[3] = type metadata accessor for MKMapItem();
      v47[0] = v37;
      outlined init with take of Any?((uint64_t)v47, (uint64_t)v46);
      id v39 = v38;
      id v40 = v37;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v45 = v34;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v46, v39, isUniquelyReferenced_nonNull_native);
      unint64_t v34 = v45;

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return v34;
}

uint64_t MOMapLocation.isPOIUndefined.getter()
{
  if ((*(uint64_t (**)(void))(*(void *)v0 + 504))() == 0xD00000000000001DLL && v1 == 0x80000001001E8580)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    return v3 & 1;
  }
}

uint64_t outlined assign with copy of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of Date?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined assign with take of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *MOSuggestionSheetMosaicCell.margin.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetMosaicCell.margin;
}

void *MOSuggestionSheetMosaicCell.identifier.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetMosaicCell.identifier;
}

long long *MOSuggestionSheetMosaicCell.checkPlatterViewSize.unsafeMutableAddressor()
{
  if (one-time initialization token for checkPlatterViewSize != -1) {
    swift_once();
  }
  return &static MOSuggestionSheetMosaicCell.checkPlatterViewSize;
}

unint64_t static MOSuggestionSheetMosaicCell.identifier.getter()
{
  return 0xD000000000000019;
}

__n128 one-time initialization function for checkPlatterViewSize()
{
  __asm { FMOV            V0.2D, #22.0 }
  static MOSuggestionSheetMosaicCell.checkPlatterViewSize = (__int128)result;
  return result;
}

{
  __n128 result;

  __asm { FMOV            V0.2D, #28.0 }
  static MOSuggestionCarouselAssetCell.checkPlatterViewSize = (__int128)result;
  return result;
}

double static MOSuggestionSheetMosaicCell.checkPlatterViewSize.getter()
{
  if (one-time initialization token for checkPlatterViewSize != -1) {
    swift_once();
  }
  return *(double *)&static MOSuggestionSheetMosaicCell.checkPlatterViewSize;
}

void *MOSuggestionSheetMosaicCell.checkPlatterViewMargin.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetMosaicCell.checkPlatterViewMargin;
}

double MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.getter()
{
  uint64_t v1 = (unsigned char *)(v0
               + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin);
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin
                 + 8) & 1) == 0)
    return *(double *)v1;
  *(void *)uint64_t v1 = 0x4018000000000000;
  v1[8] = 0;
  return 6.0;
}

void MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.setter(double a1)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin;
  *(double *)uint64_t v2 = a1;
  *(unsigned char *)(v2 + 8) = 0;
}

void *(*MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.modify(uint64_t a1))(void *result)
{
  *(void *)(a1 + 8) = v1;
  *(double *)a1 = MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.getter();
  return MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.modify;
}

void *MOSuggestionSheetMosaicCell.xPlatterViewCellMargin.modify(void *result)
{
  uint64_t v1 = result[1]
     + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin;
  *(void *)uint64_t v1 = *result;
  *(unsigned char *)(v1 + 8) = 0;
  return result;
}

uint64_t MOSuggestionSheetMosaicCell.assetViewModel.getter()
{
  return swift_retain();
}

uint64_t MOSuggestionSheetMosaicCell.assetViewModel.setter(uint64_t a1)
{
  char v3 = (void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetViewModel);
  swift_beginAccess();
  *char v3 = a1;
  swift_retain();
  uint64_t v4 = swift_release();
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x150))(v4);
  return swift_release();
}

uint64_t (*MOSuggestionSheetMosaicCell.assetViewModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionSheetMosaicCell.assetViewModel.modify;
}

uint64_t MOSuggestionSheetMosaicCell.assetViewModel.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(a1 + 24)) + 0x150))(result);
  }
  return result;
}

uint64_t MOSuggestionSheetMosaicCell.isInterstitial.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial);
  swift_beginAccess();
  return *v1;
}

id MOSuggestionSheetMosaicCell.isInterstitial.setter(char a1)
{
  char v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial);
  swift_beginAccess();
  *char v3 = a1;
  id result = *(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView);
  if (result) {
    return [result setHidden:(a1 & 1) == 0];
  }
  return result;
}

void (*MOSuggestionSheetMosaicCell.isInterstitial.modify(void *a1))(void **a1, char a2)
{
  char v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return MOSuggestionSheetMosaicCell.isInterstitial.modify;
}

void MOSuggestionSheetMosaicCell.isInterstitial.modify(void **a1, char a2)
{
  char v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView);
    if (v5) {
      [v5 setHidden:(*(unsigned char *)(v4 + v3[4]) & 1) == 0];
    }
  }

  free(v3);
}

id MOSuggestionSheetMosaicCell.isSelected.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  return [super isSelected];
}

uint64_t type metadata accessor for MOSuggestionSheetMosaicCell()
{
  return self;
}

void MOSuggestionSheetMosaicCell.isSelected.setter(char a1)
{
  objc_super v2 = v1;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  [super setSelected:a1 & 1];
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v2 isSelected];
    (*(void (**)(id))((swift_isaMask & *v5) + 0xA0))(v6);
  }
  if ([v2 isSelected])
  {
    id v7 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView];
    if (v7) {
      [v7 removeFromSuperview];
    }
  }
  else
  {
    uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView];
    if (v8)
    {
      uint64_t v9 = self;
      id v10 = v8;
      id v11 = [v9 effectWithStyle:6];
      id v12 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v11];
      [v10 bounds];
      [v12 setFrame:];
      [v12 setAutoresizingMask:18];
      [v12 setAlpha:0.5];
      [v10 addSubview:v12];
      uint64_t v13 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView];
      *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView] = v12;
    }
  }
}

void closure #1 in MOSuggestionSheetMosaicCell.overflowDetail.didset()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView;
    char v3 = *(void **)(Strong + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView);
    if (v3
      || (type metadata accessor for MOSuggestionSheetOverflowView(),
          id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init],
          uint64_t v5 = *(void **)((char *)v1 + v2),
          *(void *)((char *)v1 + v2) = v4,
          v5,
          (char v3 = *(void **)((char *)v1 + v2)) != 0))
    {
      id v6 = *(void (**)(void))((swift_isaMask & *v1) + 0x138);
      id v7 = v3;
      v6();
      (*(void (**)(uint64_t))((swift_isaMask & *v7) + 0x70))(v8);

      uint64_t v9 = *(void **)((char *)v1 + v2);
      if (v9)
      {
        id v10 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x138);
        id v11 = v9;
        [v11 setHidden:(v10() & 1) == 0];
      }
    }
  }
}

uint64_t MOSuggestionSheetMosaicCell.overflowDetail.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail);
  swift_beginAccess();
  return *v1;
}

uint64_t MOSuggestionSheetMosaicCell.overflowDetail.setter(char a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail;
  swift_beginAccess();
  *(unsigned char *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return MOSuggestionSheetMosaicCell.overflowDetail.didset((uint64_t)partial apply for closure #1 in MOSuggestionSheetMosaicCell.overflowDetail.didset, (uint64_t)&block_descriptor_21_1);
}

uint64_t (*MOSuggestionSheetMosaicCell.overflowDetail.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionSheetMosaicCell.overflowDetail.modify;
}

uint64_t MOSuggestionSheetMosaicCell.overflowDetail.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return MOSuggestionSheetMosaicCell.overflowDetail.didset((uint64_t)partial apply for closure #1 in MOSuggestionSheetMosaicCell.overflowDetail.didset, (uint64_t)&block_descriptor_21_1);
  }
  return result;
}

id MOSuggestionSheetMosaicCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin];
  *(void *)uint64_t v9 = 0;
  v9[8] = 1;
  *(void *)&v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetViewModel] = 0;
  v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial] = 0;
  id v10 = &v4[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail];
  *id v10 = 0;
  *((void *)v10 + 1) = 0;
  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  id v11 = [super initWithFrame:a1, a2, a3, a4];
  [v11 setAutoresizingMask:18];
  [v11 setAutoresizesSubviews:1];

  return v11;
}

Swift::Void __swiftcall MOSuggestionSheetMosaicCell.initMosaicCell()()
{
}

uint64_t MOSuggestionSheetMosaicCell.overflowDetail.didset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = a1;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = a2;
  objc_super v13 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

void closure #1 in MOSuggestionSheetMosaicCell.initMosaicCell()()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x158))();
  }
}

Swift::Void __swiftcall MOSuggestionSheetMosaicCell._initMosaicCell()()
{
  uint64_t v1 = v0;
  if ((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x108))())
  {
    uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView);
    v47 = (char *)OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView;
    if (v2)
    {
      char v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView);
    }
    else
    {
      type metadata accessor for MOSuggestionSheetAssetView();
      char v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      uint64_t v2 = 0;
    }
    id v4 = v2;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void (**)(uint64_t))((swift_isaMask & *v3) + 0xA0);
    uint64_t v6 = swift_retain();
    v5(v6);
    [v1 addSubview:v3];
    id v7 = v3;
    id v8 = [v7 superview];
    if (v8)
    {
      uint64_t v9 = v8;
      [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v10 = [v7 topAnchor];
      id v11 = [v9 topAnchor];
      id v12 = [v10 constraintEqualToAnchor:v11];

      [v12 setConstant:2.0];
      if (v12)
      {
        id v13 = v12;
        [v13 setActive:1];

        objc_super v14 = v13;
      }
      else
      {
        objc_super v14 = 0;
        id v13 = v7;
      }
    }
    else
    {
      objc_super v14 = 0;
      uint64_t v9 = v7;
    }

    uint64_t v15 = v7;
    id v16 = [v15 superview];
    if (v16)
    {
      uint64_t v17 = v16;
      [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v18 = [v15 leadingAnchor];
      id v19 = [v17 leadingAnchor];
      id v20 = [v18 constraintEqualToAnchor:v19];

      [v20 setConstant:2.0];
      if (v20)
      {
        id v21 = v20;
        [v21 setActive:1];

        double v22 = v21;
      }
      else
      {
        double v22 = 0;
        id v21 = v15;
      }
    }
    else
    {
      double v22 = 0;
      uint64_t v17 = v15;
    }

    uint64_t v23 = v15;
    id v24 = [v23 superview];
    if (v24)
    {
      uint64_t v25 = v24;
      [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v26 = [v23 trailingAnchor];
      id v27 = [v25 trailingAnchor];
      id v28 = [v26 constraintEqualToAnchor:v27];

      [v28 setConstant:-2.0];
      if (v28)
      {
        id v29 = v28;
        [v29 setActive:1];

        uint64_t v30 = v29;
      }
      else
      {
        uint64_t v30 = 0;
        id v29 = v23;
      }
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v25 = v23;
    }

    id v31 = v23;
    id v32 = [v31 superview];
    if (v32)
    {
      double v33 = v32;
      [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v34 = [v31 bottomAnchor];
      id v35 = [v33 bottomAnchor];
      id v36 = [v34 constraintEqualToAnchor:v35];

      if (v36)
      {
        [v36 setConstant:-2.0];
        id v37 = v36;
        [v37 setActive:1];

        uint64_t v38 = v37;
      }
      else
      {
        uint64_t v38 = 0;
        id v37 = v31;
      }
    }
    else
    {
      uint64_t v38 = 0;
      double v33 = v31;
    }

    id v39 = *(void **)&v47[(void)v1];
    *(void *)&v47[(void)v1] = v3;
    uint64_t v48 = v31;

    uint64_t v40 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView;
    unint64_t v41 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView);
    if (v41)
    {
      id v42 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView);
    }
    else
    {
      type metadata accessor for MOSuggestionSheetOverflowView();
      id v42 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      unint64_t v41 = 0;
    }
    id v43 = v41;
    [v1 addSubview:v42];
    [v42 setHidden:1];
    uint64_t v44 = *(void **)((char *)v1 + v40);
    *(void *)((char *)v1 + v40) = v42;
    id v45 = v42;

    if ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x120))())
    {
      MOSuggestionSheetMosaicCell.addSelectButton()();
      id v46 = v45;
    }
    else
    {
      id v46 = v48;
      uint64_t v48 = v45;
    }
    swift_release();
  }
}

Swift::Void __swiftcall MOSuggestionSheetMosaicCell.layoutSubviews()()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  [super layoutSubviews];
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView];
  if (v1)
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView];
    if (v2)
    {
      id v3 = v1;
      id v4 = v2;
      [v3 frame];
      [v4 setFrame:];
    }
  }
}

void MOSuggestionSheetMosaicCell.updateUnselectedBlur()()
{
  if ([v0 isSelected])
  {
    uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView];
    if (v1)
    {
      [v1 removeFromSuperview];
    }
  }
  else
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView];
    if (v2)
    {
      id v3 = self;
      id v4 = v2;
      id v5 = [v3 effectWithStyle:6];
      id v6 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v5];
      [v4 bounds];
      [v6 setFrame:];
      [v6 setAutoresizingMask:18];
      [v6 setAlpha:0.5];
      [v4 addSubview:v6];
      id v7 = *(id *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView];
      *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView] = v6;
    }
  }
}

void MOSuggestionSheetMosaicCell.addSelectButton()()
{
  if (one-time initialization token for checkPlatterViewSize != -1) {
    swift_once();
  }
  id v1 = [objc_allocWithZone((Class)type metadata accessor for CanvasAssetAccessoryView()) initWithFrame:0.0, 0.0, static MOSuggestionSheetMosaicCell.checkPlatterViewSize];
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView] = v1;

  id v4 = *(void **)&v0[v2];
  if (v4)
  {
    id v24 = v4;
    [v24 setUserInteractionEnabled:0];
    [v0 addSubview:v24];
    double v5 = *(double *)&static MOSuggestionSheetMosaicCell.checkPlatterViewSize;
    [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v24 widthAnchor];
    id v7 = [v6 constraintEqualToConstant:v5];

    [v7 setActive:1];
    double v8 = *((double *)&static MOSuggestionSheetMosaicCell.checkPlatterViewSize + 1);
    [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v9 = [v24 heightAnchor];
    id v10 = [v9 constraintEqualToConstant:v8];

    [v10 setActive:1];
    id v11 = [v24 superview];
    if (v11)
    {
      id v12 = v11;
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v13 = [v24 bottomAnchor];
      id v14 = [v12 bottomAnchor];
      id v15 = [v13 constraintEqualToAnchor:v14];

      if (v15)
      {
        [v15 setConstant:-4.0];
        id v16 = v15;
        [v16 setActive:1];
      }
    }
    id v17 = [v24 superview];
    if (v17)
    {
      id v18 = v17;
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v19 = [v24 trailingAnchor];
      id v20 = [v18 trailingAnchor];
      id v21 = [v19 constraintEqualToAnchor:v20];

      [v21 setConstant:-4.0];
      id v22 = v21;
      [v22 setActive:1];
    }
    id v23 = [v0 isSelected];
    (*(void (**)(id))((swift_isaMask & *v24) + 0x70))(v23);
  }
}

Swift::Void __swiftcall MOSuggestionSheetMosaicCell.cleanup()()
{
  id v1 = v0;
  id v2 = [v0 subviews];
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIView);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    id v7 = v6;
    [v6 removeFromSuperview];
  }
LABEL_10:
  swift_bridgeObjectRelease();
  double v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView);
  *(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView) = 0;

  id v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView);
  *(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView) = 0;

  uint64_t v10 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x108))();
  if (v10)
  {
    (*(void (**)(uint64_t))(*(void *)v10 + 1800))(v10);
    swift_release();
  }
  (*(void (**)(void))((swift_isaMask & *v1) + 0x110))(0);
  uint64_t v11 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView;
  id v12 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView);
  if (v12)
  {
    id v13 = *(void (**)(void))((swift_isaMask & *v12) + 0xC8);
    id v14 = v12;
    v13();

    id v12 = *(void **)((char *)v1 + v11);
  }
  *(void *)((char *)v1 + v11) = 0;

  id v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView);
  *(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView) = 0;
}

Swift::Void __swiftcall MOSuggestionSheetMosaicCell.prepareForReuse()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  [super prepareForReuse];
  (*(void (**)(id))((swift_isaMask & *v0) + 0x170))(v1);
}

id MOSuggestionSheetMosaicCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetMosaicCell();
  return [super dealloc];
}

void specialized MOSuggestionSheetMosaicCell.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_checkPlatterView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_blurEffectView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowView] = 0;
  id v1 = &v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell____lazy_storage___xPlatterViewCellMargin];
  *(void *)id v1 = 0;
  v1[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_assetViewModel] = 0;
  v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_isInterstitial] = 0;
  objc_super v2 = &v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionSheetMosaicCell_overflowDetail];
  *objc_super v2 = 0;
  *((void *)v2 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1001477E8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionSheetMosaicCell.initMosaicCell()()
{
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

void sub_100147840(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((swift_isaMask & **a1) + 0xF0))();
}

uint64_t sub_10014789C(double *a1, void **a2)
{
  return (*(uint64_t (**)(double))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t sub_1001478F4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x108))();
  *a2 = result;
  return result;
}

uint64_t sub_100147958(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x110);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1001479C4@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100147A2C(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0x128))(*a1);
}

uint64_t sub_100147A8C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x138))();
  *(unsigned char *)a2 = result & 1;
  *(void *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_100147AF8(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void, void))((swift_isaMask & **a2) + 0x140))(*a1, *((void *)a1 + 1));
}

void partial apply for closure #1 in MOSuggestionSheetMosaicCell.overflowDetail.didset()
{
}

void MOSuggestionSheetVideoPlaybackView.__allocating_init(url:frame:assignedTileSize:cropRect:)(uint64_t a1, char a2, uint64_t a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  id v15 = objc_allocWithZone(v7);
  MOSuggestionSheetVideoPlaybackView.init(url:frame:assignedTileSize:cropRect:)(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t MOSuggestionSheetVideoPlaybackView.ThumbnailView.__allocating_init(thumbnail:assignedTileSize:cropRect:duration:)(void *a1, char a2, uint64_t a3, void *a4, char a5)
{
  char v10 = a5 & 1;
  id v11 = objc_allocWithZone(v5);
  return MOSuggestionSheetVideoPlaybackView.ThumbnailView.init(thumbnail:assignedTileSize:cropRect:duration:)(a1, a2, a3, a4, v10);
}

double MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.contentFrame.getter()
{
  return *(double *)v0;
}

void MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.contentFrame.setter(double a1, double a2, double a3, double a4)
{
  *uint64_t v4 = a1;
  v4[1] = a2;
  v4[2] = a3;
  v4[3] = a4;
}

double MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.verticalShift.getter()
{
  return *(double *)(v0 + 32);
}

void MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.verticalShift.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

double MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.horizontalShift.getter()
{
  return *(double *)(v0 + 40);
}

void MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.horizontalShift.setter(double a1)
{
  *(double *)(v1 + 40) = a1;
}

void (__swiftcall *MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.horizontalShift.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

void MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment.init(contentFrame:verticalShift:horizontalShift:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = a7;
}

uint64_t static MOSuggestionSheetBaseVideoPlaybackView.layerClass.getter()
{
  return type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for AVPlayerLayer);
}

id MOSuggestionSheetBaseVideoPlaybackView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id MOSuggestionSheetBaseVideoPlaybackView.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView();
  [super initWithCoder:a1];

  return v3;
}

id MOSuggestionSheetBaseVideoPlaybackView.__deallocating_deinit()
{
  return MOSuggestionSheetBaseVideoPlaybackView.__deallocating_deinit(type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView);
}

CGFloat static MOSuggestionSheetBaseVideoPlaybackView.baseViewRect(viewport:cropRect:)@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>, CGFloat a7@<D5>, CGFloat a8@<D6>, CGFloat a9@<D7>)
{
  v29.origin.x = a6;
  v29.origin.y = a7;
  v29.size.width = a8;
  v29.size.height = a9;
  CGRectGetWidth(v29);
  v30.origin.x = a6;
  v30.origin.y = a7;
  v30.size.width = a8;
  v30.size.height = a9;
  CGRectGetHeight(v30);
  v31.origin.x = a2;
  v31.origin.y = a3;
  v31.size.width = a4;
  v31.size.height = a5;
  CGRectGetWidth(v31);
  v32.origin.x = a2;
  v32.origin.y = a3;
  v32.size.width = a4;
  v32.size.height = a5;
  CGRectGetHeight(v32);
  double v18 = CGRectMake_1();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v26 = v23;
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  CGFloat v24 = CGRectGetWidth(v33) * a6;
  v34.origin.x = a2;
  v34.origin.y = a3;
  v34.size.width = a4;
  v34.size.height = a5;
  CGFloat result = CGRectGetHeight(v34) * a7;
  *(double *)a1 = v18;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v22;
  *(void *)(a1 + 24) = v26;
  *(CGFloat *)(a1 + 32) = result;
  *(CGFloat *)(a1 + 40) = v24;
  return result;
}

__CFString *one-time initialization function for PLAYBACK_SHOULD_PAUSE_NOTIFICATION()
{
  static MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION = @"MOSuggestionSheetVideoPlaybackViewPlaybackShouldPause";
  return @"MOSuggestionSheetVideoPlaybackViewPlaybackShouldPause";
}

uint64_t *MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION.unsafeMutableAddressor()
{
  if (one-time initialization token for PLAYBACK_SHOULD_PAUSE_NOTIFICATION != -1) {
    swift_once();
  }
  return &static MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION;
}

id static MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION.getter()
{
  if (one-time initialization token for PLAYBACK_SHOULD_PAUSE_NOTIFICATION != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION;

  return v0;
}

id MOSuggestionSheetVideoPlaybackView.config.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_config);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionSheetVideoPlaybackView.config.setter(void *a1)
{
}

uint64_t (*MOSuggestionSheetVideoPlaybackView.config.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetVideoPlaybackView.isPlaying.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying);
  swift_beginAccess();
  return *v1;
}

void MOSuggestionSheetVideoPlaybackView.isPlaying.setter(char a1)
{
  int v3 = a1 & 1;
  uint64_t v4 = (char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying;
  uint64_t v5 = swift_beginAccess();
  int v6 = *v4;
  *uint64_t v4 = a1;
  if (v6 != v3)
  {
    id v7 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x128))(v5);
    double v8 = v7;
    id v9 = &selRef_play;
    if ((a1 & 1) == 0) {
      id v9 = &selRef_pause;
    }
    [v7 *v9];
  }
}

void (*MOSuggestionSheetVideoPlaybackView.isPlaying.modify(void *a1))(uint64_t a1)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return MOSuggestionSheetVideoPlaybackView.isPlaying.modify;
}

void MOSuggestionSheetVideoPlaybackView.isPlaying.modify(uint64_t a1)
{
  uint64_t v1 = *(void ***)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  uint64_t v2 = *(void *)(*(void *)a1 + 32);
  int v4 = *(unsigned __int8 *)(*(void *)a1 + 40);
  int v5 = *(unsigned __int8 *)(v3 + v2);
  *(unsigned char *)(v3 + v2) = v4;
  if (v4 != v5)
  {
    int v6 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1[3]) + 0x128))();
    id v7 = v6;
    double v8 = &selRef_play;
    if (!v4) {
      double v8 = &selRef_pause;
    }
    [v6 *v8];
  }

  free(v1);
}

id MOSuggestionSheetVideoPlaybackView.player.getter()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView) layer];
  self;
  id v2 = [(id)swift_dynamicCastObjCClassUnconditional() player];

  return v2;
}

void MOSuggestionSheetVideoPlaybackView.player.setter(void *a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView) layer];
  self;
  [(id)swift_dynamicCastObjCClassUnconditional() setPlayer:a1];
}

void (*MOSuggestionSheetVideoPlaybackView.player.modify(void *a1))(id *a1, char a2)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView);
  a1[1] = v3;
  id v4 = [v3 layer];
  self;
  id v5 = [(id)swift_dynamicCastObjCClassUnconditional() player];

  *a1 = v5;
  return MOSuggestionSheetVideoPlaybackView.player.modify;
}

void MOSuggestionSheetVideoPlaybackView.player.modify(id *a1, char a2)
{
  id v2 = *a1;
  id v3 = a1[1];
  if (a2)
  {
    id v2 = v2;
    id v4 = [v3 layer];
    self;
    [(id)swift_dynamicCastObjCClassUnconditional() setPlayer:v2];
  }
  else
  {
    id v4 = [a1[1] layer];
    self;
    [(id)swift_dynamicCastObjCClassUnconditional() setPlayer:v2];
  }
}

void MOSuggestionSheetVideoPlaybackView.init(url:frame:assignedTileSize:cropRect:)(uint64_t a1, char a2, uint64_t a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  uint64_t v198 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_verticalShift;
  *(void *)&v7[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_verticalShift] = 0;
  uint64_t v197 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_horizontalShift;
  *(void *)&v7[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_horizontalShift] = 0;
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_config;
  id v14 = self;
  id v15 = v7;
  v199 = v14;
  id v16 = [v14 grayColor];
  id v17 = self;
  id v18 = [v17 configurationWithHierarchicalColor:v16];

  uint64_t v19 = self;
  id v20 = [v19 systemFontOfSize:50.0];
  id v21 = [v17 configurationWithFont:v20];

  id v22 = [v18 configurationByApplyingConfiguration:v21];
  *(void *)&v7[v13] = v22;
  v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying] = 0;
  uint64_t v23 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(void *)&v15[v23] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton] = 0;
  uint64_t v24 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButtonConfig;
  id v200 = v19;
  id v25 = [v19 preferredFontForTextStyle:UIFontTextStyleTitle3];
  id v26 = [v17 configurationWithFont:v25];

  *(void *)&v15[v24] = v26;
  uint64_t v27 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_unMutedImage;
  NSString v28 = String._bridgeToObjectiveC()();
  CGRect v29 = self;
  id v30 = [v29 systemImageNamed:v28];

  *(void *)&v15[v27] = v30;
  uint64_t v31 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_mutedImage;
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = [v29 systemImageNamed:v32];

  *(void *)&v15[v31] = v33;
  char v205 = a2;
  v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_assignedSizeType] = a2;
  outlined init with take of CGRect?(a3, (uint64_t)&v208);
  if (v209 == 1)
  {
    CGRect v34 = (double *)&v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_targetBaseFrame];
    *CGRect v34 = a4;
    v34[1] = a5;
    v34[2] = a6;
    v34[3] = a7;
    double v35 = a4;
    double v36 = a5;
    double v37 = a6;
    double v38 = a7;
  }
  else
  {
    CGFloat x = v208.origin.x;
    CGFloat y = v208.origin.y;
    CGFloat width = v208.size.width;
    CGFloat height = v208.size.height;
    double v195 = v208.origin.x;
    double v202 = v208.origin.y;
    CGRectGetWidth(v208);
    v211.origin.CGFloat x = x;
    v211.origin.CGFloat y = y;
    v211.size.CGFloat width = width;
    v211.size.CGFloat height = height;
    CGRectGetHeight(v211);
    v212.origin.CGFloat x = a4;
    v212.origin.CGFloat y = a5;
    v212.size.CGFloat width = a6;
    v212.size.CGFloat height = a7;
    CGRectGetWidth(v212);
    v213.origin.CGFloat x = a4;
    v213.origin.CGFloat y = a5;
    v213.size.CGFloat width = a6;
    v213.size.CGFloat height = a7;
    CGRectGetHeight(v213);
    double v35 = CGRectMake_1();
    double v36 = v43;
    double v37 = v44;
    double v38 = v45;
    v214.origin.CGFloat x = a4;
    v214.origin.CGFloat y = a5;
    v214.size.CGFloat width = a6;
    v214.size.CGFloat height = a7;
    double v196 = v195 * CGRectGetWidth(v214);
    v215.origin.CGFloat x = a4;
    v215.origin.CGFloat y = a5;
    v215.size.CGFloat width = a6;
    v215.size.CGFloat height = a7;
    CGFloat v46 = CGRectGetHeight(v215);
    v47 = (double *)&v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_targetBaseFrame];
    double *v47 = v35;
    v47[1] = v36;
    v47[2] = v37;
    v47[3] = v38;
    *(double *)&v7[v198] = v202 * v46;
    *(double *)&v7[v197] = v196;
  }
  *(void *)&v15[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView] = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView()) initWithFrame:v35, v36, v37, v38];

  v207.receiver = v15;
  v207.super_class = (Class)type metadata accessor for MOSuggestionSheetVideoPlaybackView();
  uint64_t v48 = [super initWithFrame:a4, a5, a6, a7];
  uint64_t v49 = *(void (**)(void))((swift_isaMask & *v48) + 0x178);
  unint64_t v50 = v48;
  v49();
  id v51 = [*(id *)((char *)v50 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView) layer];
  self;
  [(id)swift_dynamicCastObjCClassUnconditional() setVideoGravity:AVLayerVideoGravityResizeAspectFill];

  id v52 = objc_allocWithZone((Class)AVPlayer);
  URL._bridgeToObjectiveC()(v53);
  uint64_t v55 = v54;
  id v56 = [v52 initWithURL:v54];

  uint64_t v57 = (*(uint64_t (**)(id))((swift_isaMask & *v50) + 0x130))(v56);
  char v58 = *(uint64_t (**)(void))((swift_isaMask & *v50) + 0x128);
  v59 = (void *)((uint64_t (*)(uint64_t))v58)(v57);
  BOOL v60 = &selRef_statisticsForType_;
  if (v59)
  {
    v61 = v59;
    id v62 = [v59 currentItem];

    if (v62)
    {
      id v63 = [v62 asset];

      if (v63)
      {
        id v64 = [self videoCompositionWithPropertiesOfAsset:v63];
        [v64 setColorPrimaries:AVVideoColorPrimaries_ITU_R_709_2];
        [v64 setColorTransferFunction:AVVideoTransferFunction_ITU_R_709_2];
        [v64 setColorYCbCrMatrix:AVVideoYCbCrMatrix_ITU_R_709_2];
        [v64 renderSize];
        if (v65 <= 0.0 || (id v66 = [v64 renderSize], v67 <= 0.0))
        {
          id v72 = v63;
          id v63 = v64;
        }
        else
        {
          uint64_t v68 = (void *)((uint64_t (*)(id))v58)(v66);
          if (v68)
          {
            v69 = v68;
            uint64_t v70 = v58;
            id v71 = [v68 currentItem];

            if (v71)
            {
              id v72 = v64;
              [v71 setVideoComposition:v72];
            }
            else
            {
              id v72 = v64;
            }
            char v58 = v70;
          }
          else
          {
            id v72 = v64;
          }
        }
      }
    }
  }
  char v73 = (void *)v58();
  if (v73)
  {
    double v74 = v73;
    [v73 setMuted:1];
  }
  specialized MOSuggestionSheetVideoPlaybackView.setNonDisruptiveMute()();
  if (v205 == 3) {
    goto LABEL_78;
  }
  id v75 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v76 = (void *)v58();
  v203 = v58;
  if (!v76)
  {
    NSString v78 = 0;
    goto LABEL_22;
  }
  v77 = v76;
  NSString v78 = [v76 currentItem];

  if (!v78)
  {
LABEL_22:
    unint64_t v88 = v199;
    goto LABEL_32;
  }
  id v79 = [v78 asset];

  [v79 duration];
  CMTimeValue value = time.value;
  CMTimeEpoch epoch = time.epoch;
  uint64_t v82 = *(void *)&time.timescale;

  time.CMTimeValue value = value;
  *(void *)&time.timescale = v82;
  time.CMTimeEpoch epoch = epoch;
  double Seconds = CMTimeGetSeconds(&time);
  id v84 = [objc_allocWithZone((Class)NSDateComponentsFormatter) init];
  v85 = v84;
  if (Seconds < 60.0)
  {
    [v84 setAllowedUnits:192];
    uint64_t v86 = &selRef_setZeroFormattingBehavior_;
    uint64_t v87 = 0x10000;
LABEL_25:
    [v85 *v86 v87];
    goto LABEL_26;
  }
  if (Seconds > 3600.0)
  {
    uint64_t v86 = &selRef_setAllowedUnits_;
    uint64_t v87 = 224;
    goto LABEL_25;
  }
LABEL_26:
  id v89 = [v85 stringFromTimeInterval:Seconds];
  if (v89)
  {
    v90 = v89;
    uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v93 = v92;
  }
  else
  {
    uint64_t v91 = 0;
    unint64_t v93 = 0xE000000000000000;
  }
  if (Seconds < 60.0)
  {
    specialized Collection.dropFirst(_:)(1uLL, v91, v93);
    swift_bridgeObjectRelease();
    static String._fromSubstring(_:)();
    swift_bridgeObjectRelease();
  }

  unint64_t v88 = v199;
  NSString v78 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_32:
  [v75 setText:v78];

  id v94 = [v88 whiteColor];
  [v75 setTextColor:v94];

  id v95 = [v200 preferredFontForTextStyle:];
  Class isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  [v75 setFont:isa];
  [v75 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  id v97 = [objc_allocWithZone((Class)UIView) init];
  id v98 = [v97 layer];
  id v99 = specialized static MOSuggestionSheetVideoPlaybackView.gradient.getter();
  [v98 addSublayer:v99];

  [v50 addSubview:v97];
  [v97 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v100 = [v97 widthAnchor];
  id v101 = [v100 constraintEqualToConstant:100.0];

  [v101 setActive:1];
  [v97 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v102 = [v97 heightAnchor];
  id v103 = [v102 constraintEqualToConstant:75.0];

  [v103 setActive:1];
  [v50 addSubview:v75];
  [v50 bringSubviewToFront:v75];
  double v104 = 8.0;
  BOOL v60 = &selRef_statisticsForType_;
  if (v205 == 8)
  {
    if (one-time initialization token for checkPlatterViewSize != -1) {
      swift_once();
    }
    double v104 = *(double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize + 8.0 + 8.0;
  }
  v105 = &selRef_collectionView_didSelectItemAtIndexPath_;
  id v106 = [v75 superview];
  char v58 = v203;
  if (v106)
  {
    v107 = v106;
    [v75 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v108 = [v75 trailingAnchor];
    id v109 = [v107 trailingAnchor];
    id v110 = [v108 constraintEqualToAnchor:v109];

    [v110 setConstant:-v104];
    if (v110)
    {
      id v111 = v110;
      [v111 setActive:1];

      char v58 = v203;
      BOOL v60 = &selRef_statisticsForType_;
      v105 = &selRef_collectionView_didSelectItemAtIndexPath_;
      if (v205 != 8) {
        goto LABEL_39;
      }
LABEL_44:
      [v75 frame];
      double v118 = CGRectGetWidth(v216);
      id v119 = [v200 preferredFontForTextStyle:UIFontTextStyleFootnote];
      Class v120 = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

      double v121 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, v120, v118);
      if (one-time initialization token for checkPlatterViewSize != -1) {
        swift_once();
      }
      double v122 = *((double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize + 1);
      id v123 = [v75 superview];
      if (v123)
      {
        v124 = v123;
        [v75 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v125 = [v75 bottomAnchor];
        id v126 = [v124 bottomAnchor];
        id v127 = [v125 constraintEqualToAnchor:v126];

        if (v127)
        {
          [v127 setConstant:-(v121 * -0.5 + 8.0 + v122 * 0.5)];
          id v128 = v127;
          [v128 setActive:1];
        }
      }
      MOSuggestionSheetVideoPlaybackView.setupMuteButton()();
      uint64_t v129 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton;
      [v50 addSubview:*(void *)((char *)v50 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton)];
      id v130 = *(id *)((char *)v50 + v129);
      id v131 = [v130 superview];
      if (v131)
      {
        v132 = v131;
        [v130 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v133 = [v130 trailingAnchor];
        id v134 = [v132 trailingAnchor];
        id v135 = [v133 constraintEqualToAnchor:v134];

        [v135 setConstant:-10.0];
        if (v135)
        {
          id v135 = v135;
          [v135 setActive:1];

          id v130 = v135;
        }

        v105 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
      else
      {
        id v135 = 0;
        v132 = v130;
      }

      id v136 = *(id *)((char *)v50 + v129);
      id v137 = [v136 v105[140]];
      if (v137)
      {
        v138 = v137;
        [v136 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v139 = [v136 topAnchor];
        id v140 = [v138 topAnchor];
        id v141 = [v139 constraintEqualToAnchor:v140];

        [v141 setConstant:10.0];
        if (v141)
        {
          id v141 = v141;
          [v141 setActive:1];

          id v136 = v141;
        }
      }
      else
      {
        id v141 = 0;
        v138 = v136;
      }

      id v142 = [objc_allocWithZone((Class)type metadata accessor for MOPlayPauseButton()) init];
      uint64_t v143 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton;
      v144 = *(void **)((char *)v50
                      + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton);
      *(void *)((char *)v50 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton) = v142;

      v145 = *(void **)((char *)v50 + v143);
      if (v145
        && (v146 = *(void (**)(void *, _UNKNOWN **))((swift_isaMask & *v145) + 0xB0),
            v147 = v50,
            v148 = v145,
            v146(v48, &protocol witness table for MOSuggestionSheetVideoPlaybackView),
            v148,
            *(void *)((char *)v50 + v143)))
      {
        [v147 addSubview:];
        v149 = *(void **)((char *)v50 + v143);
        char v58 = v203;
        if (v149)
        {
          id v150 = v149;
          id v151 = [v150 superview];
          if (v151)
          {
            v152 = v151;
            [v150 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v153 = [v150 leadingAnchor];
            id v154 = [v152 leadingAnchor];
            id v155 = [v153 constraintEqualToAnchor:v154];

            [v155 setConstant:10.0];
            id v156 = v155;
            [v156 setActive:1];

            id v150 = v152;
          }
          BOOL v60 = &selRef_statisticsForType_;

          v157 = *(void **)((char *)v50 + v143);
          if (v157)
          {
            id v113 = v157;
            id v158 = [v113 superview];
            if (v158)
            {
              v159 = v158;
              [v113 setTranslatesAutoresizingMaskIntoConstraints:0];
              id v160 = [v113 topAnchor];
              id v161 = [v159 topAnchor];
              id v162 = [v160 constraintEqualToAnchor:v161];

              [v162 setConstant:10.0];
              id v163 = v162;
              BOOL v60 = &selRef_statisticsForType_;
              id v117 = v163;
              [v163 setActive:1];

              id v113 = v159;
              goto LABEL_68;
            }
LABEL_69:

            goto LABEL_70;
          }
LABEL_90:
          __break(1u);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_90;
    }

    char v58 = v203;
    BOOL v60 = &selRef_statisticsForType_;
    v105 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  if (v205 == 8) {
    goto LABEL_44;
  }
LABEL_39:
  id v112 = [v75 superview];
  if (v112)
  {
    id v113 = v112;
    [v75 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v114 = [v75 bottomAnchor];
    id v115 = [v113 bottomAnchor];
    id v116 = [v114 constraintEqualToAnchor:v115];

    if (v116)
    {
      [v116 setConstant:-8.0];
      id v117 = v116;
      [v117 setActive:1];
LABEL_68:

      goto LABEL_69;
    }
    goto LABEL_69;
  }
LABEL_70:
  [v75 intrinsicContentSize];
  double v165 = v164;
  id v166 = [v97 superview];
  if (v166)
  {
    v167 = v166;
    [v97 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v168 = [v97 trailingAnchor];
    id v169 = [v167 trailingAnchor];
    id v170 = [v168 constraintEqualToAnchor:v169];

    [v170 setConstant:50.0 - v104 + v165 * -0.5];
    id v171 = v170;
    [v171 setActive:1];
  }
  id v172 = [v97 superview];
  if (v172)
  {
    v173 = v172;
    [v97 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v174 = [v97 bottomAnchor];
    id v175 = [v173 bottomAnchor];
    id v176 = [v174 constraintEqualToAnchor:v175];

    if (v176)
    {
      [v176 setConstant:37.5];
      id v177 = v176;
      [v177 setActive:1];

      id v75 = v177;
      id v97 = v177;
    }

    id v75 = v97;
  }
  else
  {
    v173 = v97;
  }

LABEL_78:
  [v50 setIsAccessibilityElement:1];
  [v50 setAccessibilityIgnoresInvertColors:1];
  v178 = self;
  v179 = v50;
  id v180 = [v178 mainBundle];
  v210._countAndFlagsBits = 0xD00000000000002ALL;
  v210._object = (void *)0x80000001001E86B0;
  v181._countAndFlagsBits = 0x6F65646956;
  v181._object = (void *)0xE500000000000000;
  v182._countAndFlagsBits = 0;
  v182._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v181, (Swift::String_optional)0, (NSBundle)v180, v182, v210);

  NSString v183 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v179 setAccessibilityLabel:v183];

  v184 = self;
  id v185 = [v184 defaultCenter];
  v186 = v179;
  NSString v187 = String._bridgeToObjectiveC()();
  v188 = (void *)v58();
  v189 = v188;
  if (v188)
  {
    id v190 = [v188 v60[191]];

    if (v190)
    {
      time.CMTimeValue value = (CMTimeValue)v190;
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for AVPlayerItem);
      v189 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    }
    else
    {
      v189 = 0;
    }
  }
  [v185 addObserver:v186 selector:"finishedPlayingWithNote:" name:v187 object:v189];

  swift_unknownObjectRelease();
  id v191 = [v184 defaultCenter];
  uint64_t v192 = one-time initialization token for PLAYBACK_SHOULD_PAUSE_NOTIFICATION;
  v193 = v186;
  if (v192 != -1) {
    swift_once();
  }
  [v191 addObserver:v193 selector:"didReceiveInteruptionWithNote:" name:static MOSuggestionSheetVideoPlaybackView.PLAYBACK_SHOULD_PAUSE_NOTIFICATION object:0];

  uint64_t v194 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v194 - 8) + 8))(a1, v194);
}

Swift::Void __swiftcall MOSuggestionSheetVideoPlaybackView.configureBaseVideoView()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_baseVideoView];
  [v0 addSubview:v1];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
  id v3 = v0;
  id v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  int v6 = &unk_100249000;
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218752;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 22) = 2048;
    double v8 = (CGRect *)&v3[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_targetBaseFrame];
    CGRectGetWidth(*(CGRect *)&v3[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_targetBaseFrame]);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 32) = 2048;
    int v6 = (void *)&unk_100249000;
    CGRectGetHeight(*v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOSuggestionSheetVideoPlaybackView] verticalShift=%f, horizontalShift=%f, width=%f, height=%f", (uint8_t *)v7, 0x2Au);
    swift_slowDealloc();
  }
  else
  {
  }
  id v9 = (CGRect *)&v3[v6[66]];
  if (CGRectGetWidth(*v9) <= 0.0 || CGRectGetHeight(*v9) <= 0.0)
  {
    UIView.fillSuper(margin:)(0.0);
    swift_bridgeObjectRelease();
  }
  else
  {
    double v10 = *(double *)&v3[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_verticalShift];
    id v11 = [v1 superview];
    if (v11)
    {
      id v12 = v11;
      [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v13 = [v1 topAnchor];
      id v14 = [v12 topAnchor];
      id v15 = [v13 constraintEqualToAnchor:v14];

      [v15 setConstant:-v10];
      if (v15)
      {
        id v16 = v15;
        [v16 setActive:1];
      }
    }
    double v17 = *(double *)&v3[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_horizontalShift];
    id v18 = [v1 superview];
    if (v18)
    {
      uint64_t v19 = v18;
      [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v20 = [v1 leadingAnchor];
      id v21 = [v19 leadingAnchor];
      id v22 = [v20 constraintEqualToAnchor:v21];

      [v22 setConstant:-v17];
      if (v22)
      {
        id v23 = v22;
        [v23 setActive:1];
      }
    }
    double Width = CGRectGetWidth(*v9);
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v25 = [v1 widthAnchor];
    id v26 = [v25 constraintEqualToConstant:Width];

    [v26 setActive:1];
    double Height = CGRectGetHeight(*v9);
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v28 = [v1 heightAnchor];
    id v29 = [v28 constraintEqualToConstant:Height];

    [v29 setActive:1];
  }
}

id MOSuggestionSheetVideoPlaybackView.__deallocating_deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for MOSuggestionSheetVideoPlaybackView();
  return [super dealloc];
}

Swift::Void __swiftcall MOSuggestionSheetVideoPlaybackView.didReceiveInteruption(note:)(NSNotification note)
{
  (*(void (**)(void))((swift_isaMask & *v1) + 0x118))(0);
}

void MOSuggestionSheetVideoPlaybackView.setupMuteButton()()
{
  id v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128))();
  if (v1 && (uint64_t v2 = v1, v3 = [v1 isMuted], v2, v3))
  {
    id v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton);
    id v5 = *(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_mutedImage);
    if (v5) {
      goto LABEL_6;
    }
  }
  else
  {
    id v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton);
    id v5 = *(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_unMutedImage);
    if (v5)
    {
LABEL_6:
      uint64_t v6 = *(void *)((char *)v0
                     + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButtonConfig);
      id v7 = v4;
      id v5 = [v5 imageWithConfiguration:v6];
      goto LABEL_8;
    }
  }
  id v8 = v4;
LABEL_8:
  [v4 setImage:v5 forState:0];

  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton;
  double v10 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton);
  id v11 = self;
  id v12 = v10;
  id v13 = [v11 whiteColor];
  [v12 setTintColor:v13];

  id v14 = [*(id *)((char *)v0 + v9) layer];
  [v14 setMasksToBounds:0];

  id v15 = [*(id *)((char *)v0 + v9) layer];
  id v16 = [v11 blackColor];
  id v17 = [v16 CGColor];

  [v15 setShadowColor:v17];
  id v18 = [*(id *)((char *)v0 + v9) layer];
  LODWORD(v19) = 1.0;
  [v18 setShadowOpacity:v19];

  id v20 = [*(id *)((char *)v0 + v9) layer];
  [v20 setShadowRadius:16.0];

  id v21 = [*(id *)((char *)v0 + v9) layer];
  [v21 setShadowOffset:0.0, 2.0];

  id v22 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"touchMute:"];
  [*(id *)((char *)v0 + v9) addGestureRecognizer:v22];
  [*(id *)((char *)v0 + v9) setUserInteractionEnabled:1];
  [*(id *)((char *)v0 + v9) setDeliversTouchesForGesturesToSuperview:0];
}

void MOSuggestionSheetVideoPlaybackView.init(frame:)()
{
}

Swift::Void __swiftcall MOSuggestionSheetVideoPlaybackView.didReceivePlayNotification()()
{
}

Swift::Void __swiftcall MOSuggestionSheetVideoPlaybackView.didReceivePauseNotification()()
{
}

void MOSuggestionSheetVideoPlaybackView.didReceivePlayNotification()(SEL *a1)
{
  id v3 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x128))();
  [v3 *a1];
}

MomentsUIService::PlayerState __swiftcall MOSuggestionSheetVideoPlaybackView.getPlayerState()()
{
  id v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128))();
  MomentsUIService::PlayerState result = MomentsUIService_PlayerState_paused;
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 timeControlStatus];

    if (v3 == (id)2) {
      return 0;
    }
  }
  return result;
}

void protocol witness for VideoPlaybackDelegate.didReceivePlayNotification() in conformance MOSuggestionSheetVideoPlaybackView(uint64_t a1, uint64_t a2)
{
}

void protocol witness for VideoPlaybackDelegate.didReceivePauseNotification() in conformance MOSuggestionSheetVideoPlaybackView(uint64_t a1, uint64_t a2)
{
}

void protocol witness for VideoPlaybackDelegate.didReceivePlayNotification() in conformance MOSuggestionSheetVideoPlaybackView(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v5 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x128))();
  [v5 *a3];
}

BOOL protocol witness for VideoPlaybackDelegate.getPlayerState() in conformance MOSuggestionSheetVideoPlaybackView()
{
  id v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128))();
  if (!v1) {
    return 1;
  }
  uint64_t v2 = v1;
  id v3 = [v1 timeControlStatus];

  return v3 != (id)2;
}

void *PlayPauseConstants.FRAME_SIZE.unsafeMutableAddressor()
{
  return &static PlayPauseConstants.FRAME_SIZE;
}

const char *PlayPauseConstants.PLAYBUTTONSYMBOL.unsafeMutableAddressor()
{
  return "play.fill";
}

uint64_t static ProgressIndicatorConstants.PLAYBUTTONSYMBOL.getter()
{
  return 0x6C69662E79616C70;
}

const char *PlayPauseConstants.PAUSEBUTTONSYMBOL.unsafeMutableAddressor()
{
  return "pause.fill";
}

uint64_t static ProgressIndicatorConstants.PAUSEBUTTONSYMBOL.getter()
{
  return 0x69662E6573756170;
}

void *PlayPauseConstants.BORDER_LINE_WIDTH.unsafeMutableAddressor()
{
  return &static PlayPauseConstants.BORDER_LINE_WIDTH;
}

double static ProgressIndicatorConstants.BORDER_LINE_WIDTH.getter()
{
  return 2.5;
}

id MOPlayPauseButton.playButtonConfig.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playButtonConfig);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOPlayPauseButton.playButtonConfig.setter(void *a1)
{
}

uint64_t (*MOPlayPauseButton.playButtonConfig.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOPlayPauseButton.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t MOPlayPauseButton.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*MOPlayPauseButton.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetAssetGridView.delegate.modify;
}

char *MOPlayPauseButton.init()()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playButtonConfig;
  id v5 = [self whiteColor];
  uint64_t v6 = self;
  id v7 = [v6 configurationWithHierarchicalColor:v5];

  id v8 = [self systemFontOfSize:15.0];
  id v9 = [v6 configurationWithFont:v8];

  id v10 = [v7 configurationByApplyingConfiguration:v9];
  *(void *)&v3[v4] = v10;
  uint64_t v11 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_pauseImage;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = self;
  id v14 = [v13 systemImageNamed:v12];

  *(void *)&v3[v11] = v14;
  uint64_t v15 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playImage;
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v13 systemImageNamed:v16];

  *(void *)&v3[v15] = v17;
  *(void *)&v3[OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  v44.receiver = v3;
  v44.super_class = (Class)type metadata accessor for MOPlayPauseButton();
  id v18 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  double v19 = &selRef_collectionView_didSelectItemAtIndexPath_;
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v20 = [v18 widthAnchor];
  id v21 = [v20 constraintEqualToConstant:30.0];

  [v21 setActive:1];
  id v22 = (char *)v18;
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v23 = [v22 heightAnchor];
  id v24 = [v23 constraintEqualToConstant:30.0];

  [v24 setActive:1];
  id v25 = [self effectWithStyle:11];
  id v26 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v25];

  [v26 _setCornerRadius:15.0];
  [v22 addSubview:v26];
  [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
  UIView.fillSuper(margin:)(0.0);
  swift_bridgeObjectRelease();
  MOPlayPauseButton.setupPlayPauseButton()();
  uint64_t v27 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton;
  [v22 addSubview:*(void *)&v22[OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton]];
  [*(id *)&v22[v27] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v28 = *(id *)&v22[v27];
  id v29 = &selRef_collectionView_didSelectItemAtIndexPath_;
  id v30 = [v28 superview];
  if (v30)
  {
    uint64_t v31 = v30;
    [v28 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v32 = [v28 centerYAnchor];
    id v33 = [v31 centerYAnchor];
    id v34 = [v32 constraintEqualToAnchor:v33];

    [v34 setConstant:0.0];
    if (v34)
    {
      id v34 = v34;
      [v34 setActive:1];

      id v28 = v34;
    }

    double v19 = &selRef_collectionView_didSelectItemAtIndexPath_;
    id v29 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v34 = 0;
    uint64_t v31 = v28;
  }

  id v35 = *(id *)&v22[v27];
  id v36 = [v35 v29[140]];
  if (v36)
  {
    double v37 = v36;
    [v35 v19[92]:0];
    id v38 = [v35 centerXAnchor];
    id v39 = [v37 centerXAnchor];
    id v40 = [v38 constraintEqualToAnchor:v39];

    [v40 setConstant:0.0];
    if (v40)
    {
      id v41 = v40;
      [v41 setActive:1];

      id v35 = v22;
      id v42 = v41;
    }
    else
    {
      id v42 = 0;
      id v41 = v22;
    }

    id v35 = v41;
  }
  else
  {
    id v42 = 0;
    double v37 = v22;
  }

  return v22;
}

void MOPlayPauseButton.setupPlayPauseButton()()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton;
  id v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton);
  id v3 = *(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_pauseImage);
  if (v3)
  {
    uint64_t v4 = (void *)(*(uint64_t (**)(void *))((swift_isaMask & *v0) + 0x90))(v2);
    id v3 = [v3 imageWithConfiguration:v4];
  }
  else
  {
    id v5 = v2;
  }
  [v2 setImage:v3 forState:0];

  uint64_t v6 = *(void **)((char *)v0 + v1);
  id v7 = self;
  id v8 = v6;
  id v9 = [v7 whiteColor];
  [v8 setTintColor:v9];

  id v10 = [*(id *)((char *)v0 + v1) imageView];
  if (v10)
  {
    uint64_t v11 = v10;
    [v10 setContentMode:1];
  }
  id v12 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"touchPlayPause:"];
  [v0 setUserInteractionEnabled:1];
  [*(id *)((char *)v0 + v1) addGestureRecognizer:v12];
  [*(id *)((char *)v0 + v1) setUserInteractionEnabled:1];
  [*(id *)((char *)v0 + v1) setDeliversTouchesForGesturesToSuperview:0];
}

Swift::Void __swiftcall MOPlayPauseButton.setPlayerPausedButtonUI()()
{
}

Swift::Void __swiftcall MOPlayPauseButton.setPlayerPlayingButtonUI()()
{
}

void MOPlayPauseButton.setPlayerPausedButtonUI()(void *a1)
{
  id v2 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton);
  id v3 = *(void **)((char *)v1 + *a1);
  if (v3)
  {
    uint64_t v4 = (void *)(*(uint64_t (**)(void *))((swift_isaMask & *v1) + 0x90))(v2);
    id v6 = [v3 imageWithConfiguration:v4];
  }
  else
  {
    id v5 = v2;
    id v6 = 0;
  }
  [v2 setImage:v6 forState:0];
}

void MOPlayPauseButton.init(frame:)()
{
}

id MOPlayPauseButton.__deallocating_deinit()
{
  return MOSuggestionSheetBaseVideoPlaybackView.__deallocating_deinit(type metadata accessor for MOPlayPauseButton);
}

void *MOSuggestionSheetVideoPlaybackView.oneHourSeconds.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetVideoPlaybackView.oneHourSeconds;
}

double static MOSuggestionSheetVideoPlaybackView.oneHourSeconds.getter()
{
  return 3600.0;
}

void *MOSuggestionSheetVideoPlaybackView.minuteSeconds.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetVideoPlaybackView.minuteSeconds;
}

id MOSuggestionSheetVideoPlaybackView.ThumbnailView.imageView.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtCC16MomentsUIService34MOSuggestionSheetVideoPlaybackView13ThumbnailView_imageView));
}

uint64_t MOSuggestionSheetVideoPlaybackView.ThumbnailView.init(thumbnail:assignedTileSize:cropRect:duration:)(void *a1, char a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v10 = OBJC_IVAR____TtCC16MomentsUIService34MOSuggestionSheetVideoPlaybackView13ThumbnailView_imageView;
  id v11 = objc_allocWithZone((Class)UIImageView);
  id v12 = v5;
  id v13 = [v11 init];
  *(void *)&v5[v10] = v13;
  uint64_t v82 = a1;
  [v13 setImage:a1];
  [v13 setContentMode:2];
  outlined init with take of CGRect?(a3, (uint64_t)&v85);
  if ((v86 & 1) == 0)
  {
    double x = v85.origin.x;
    double y = v85.origin.y;
    double width = v85.size.width;
    double height = v85.size.height;
    v87.origin.double x = 0.0;
    v87.origin.double y = 0.0;
    v87.size.double width = 0.0;
    v87.size.double height = 0.0;
    if (!CGRectEqualToRect(v85, v87))
    {
      id v18 = [v13 layer];
      [v18 setContentsRect:x, y, width, height];
    }
  }

  v84.receiver = v12;
  v84.super_class = (Class)type metadata accessor for MOSuggestionSheetVideoPlaybackView.ThumbnailView();
  double v19 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v20 = *(void **)&v19[OBJC_IVAR____TtCC16MomentsUIService34MOSuggestionSheetVideoPlaybackView13ThumbnailView_imageView];
  id v21 = v19;
  [v21 addSubview:v20];
  id v22 = v20;
  UIView.fillSuper(margin:)(0.0);

  swift_bridgeObjectRelease();
  if (a5)
  {

    return (uint64_t)v21;
  }
  double v23 = *(double *)&a4;
  double v24 = *(double *)&a4 / 3600.0;
  if ((~COERCE__INT64(*(double *)&a4 / 3600.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_57;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v25 = (uint64_t)v24;
  *(double *)&a4 = COERCE_DOUBLE([objc_allocWithZone((Class)UILabel) init]);
  if (v25 < 1)
  {
    if (one-time initialization token for durationWithMinuteSecondFormatter != -1) {
      swift_once();
    }
    id v31 = [(id)static MODateFormatter.durationWithMinuteSecondFormatter stringFromTimeInterval:v23];
    if (v31)
    {
      id v32 = v31;
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v30 = v33;
    }
    else
    {
      uint64_t v28 = 0;
      unint64_t v30 = 0;
    }
    unint64_t v83 = v30;
    double v34 = 600.0;
    goto LABEL_21;
  }
  if (one-time initialization token for durationWithHourMinuteSecondFormatter != -1) {
    goto LABEL_59;
  }
LABEL_10:
  id v26 = [(id)static MODateFormatter.durationWithHourMinuteSecondFormatter stringFromTimeInterval:v23];
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v30 = v29;
  }
  else
  {
    uint64_t v28 = 0;
    unint64_t v30 = 0;
  }
  unint64_t v83 = v30;
  double v34 = 36000.0;
LABEL_21:
  if (v23 >= v34) {
    goto LABEL_33;
  }
  if (!v30) {
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v35 = specialized Collection.first.getter(v28, v30);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  if (!v37) {
    goto LABEL_34;
  }
  if (v35 == 48 && v37 == 0xE100000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v39 & 1) == 0)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
LABEL_28:
  uint64_t v40 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0) {
    uint64_t v40 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (v40)
  {
    uint64_t result = specialized Collection.first.getter(v28, v30);
    if (v41)
    {
      specialized RangeReplaceableCollection.removeFirst(_:)(1);
      swift_bridgeObjectRelease();
      unint64_t v30 = v83;
LABEL_33:
      if (v30) {
        goto LABEL_34;
      }
LABEL_35:
      NSString v42 = 0;
LABEL_36:
      [a4 setText:v42];

      id v43 = [self whiteColor];
      [a4 setTextColor:v43];

      id v44 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
      Class isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

      [a4 setFont:isa];
      [a4 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
      id v46 = [objc_allocWithZone((Class)UIView) init];
      id v47 = [v46 layer];
      id v48 = specialized static MOSuggestionSheetVideoPlaybackView.gradient.getter();
      [v47 addSublayer:v48];

      [v21 addSubview:v46];
      [v46 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v49 = [v46 widthAnchor];
      id v50 = [v49 constraintEqualToConstant:100.0];

      [v50 setActive:1];
      [v46 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v51 = [v46 heightAnchor];
      id v52 = [v51 constraintEqualToConstant:75.0];

      [v52 setActive:1];
      [v21 addSubview:a4];
      [v21 bringSubviewToFront:a4];
      double v53 = 8.0;
      if (a2 == 8)
      {
        if (one-time initialization token for checkPlatterViewSize != -1) {
          swift_once();
        }
        double v53 = *(double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize + 8.0 + 8.0;
      }
      id v54 = [a4 superview];
      if (v54)
      {
        uint64_t v55 = v54;
        [a4 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v56 = [a4 trailingAnchor];
        id v57 = [v55 trailingAnchor];
        id v58 = [v56 constraintEqualToAnchor:v57];

        [v58 setConstant:-v53];
        id v59 = v58;
        [v59 setActive:1];
      }
      id v60 = [a4 superview];
      if (v60)
      {
        v61 = v60;
        [a4 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v62 = [a4 bottomAnchor];
        id v63 = [v61 bottomAnchor];
        id v64 = [v62 constraintEqualToAnchor:v63];

        if (v64)
        {
          [v64 setConstant:-8.0];
          id v65 = v64;
          [v65 setActive:1];
        }
      }
      [a4 intrinsicContentSize];
      double v67 = v66;
      id v68 = [v46 superview];
      if (v68)
      {
        v69 = v68;
        [v46 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v70 = [v46 trailingAnchor];
        id v71 = [v69 trailingAnchor];
        id v72 = [v70 constraintEqualToAnchor:v71];

        [v72 setConstant:50.0 - v53 + v67 * -0.5];
        id v73 = v72;
        [v73 setActive:1];
      }
      id v74 = [v46 superview];
      if (v74)
      {
        id v75 = v74;
        [v46 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v76 = [v46 bottomAnchor];
        id v77 = [v75 bottomAnchor];
        id v78 = [v76 constraintEqualToAnchor:v77];

        if (v78)
        {
          [v78 setConstant:37.5];
          id v79 = v78;
          [v79 setActive:1];

LABEL_54:
          swift_bridgeObjectRelease();
          return (uint64_t)v21;
        }

        unint64_t v80 = (char *)v82;
      }
      else
      {
        unint64_t v80 = v21;
        id v75 = v82;
      }

      goto LABEL_54;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView()
{
  return self;
}

double CGRectMake_1()
{
  return 0.0;
}

void MOSuggestionSheetVideoPlaybackView.ThumbnailView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtCC16MomentsUIService34MOSuggestionSheetVideoPlaybackView13ThumbnailView_imageView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void MOSuggestionSheetVideoPlaybackView.ThumbnailView.init(frame:)()
{
}

id MOSuggestionSheetVideoPlaybackView.ThumbnailView.__deallocating_deinit()
{
  return MOSuggestionSheetBaseVideoPlaybackView.__deallocating_deinit(type metadata accessor for MOSuggestionSheetVideoPlaybackView.ThumbnailView);
}

id MOSuggestionSheetBaseVideoPlaybackView.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t specialized RangeReplaceableCollection.removeFirst(_:)(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (result < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t result = String.index(_:offsetBy:limitedBy:)();
      if ((v1 & 1) == 0)
      {
        uint64_t v2 = result;
        uint64_t result = 15;
        uint64_t v1 = v2;
        return String.removeSubrange(_:)(result, v1);
      }
    }
    __break(1u);
    return String.removeSubrange(_:)(result, v1);
  }
  return result;
}

void specialized MOSuggestionSheetVideoPlaybackView.setNonDisruptiveMute()()
{
  id v0 = [self sharedInstance];
  id v11 = 0;
  unsigned int v1 = [v0 setCategory:AVAudioSessionCategoryAmbient error:&v11];

  id v2 = v11;
  if (v1)
  {
    id v3 = v2;
  }
  else
  {
    id v4 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.shared);
    swift_errorRetain();
    swift_errorRetain();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      id v11 = (id)swift_slowAlloc();
      *(_DWORD *)id v8 = 136315138;
      swift_getErrorValue();
      uint64_t v9 = Error.localizedDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, (uint64_t *)&v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to set audio playback as non-disruptive %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

id specialized static MOSuggestionSheetVideoPlaybackView.gradient.getter()
{
  id v0 = [objc_allocWithZone((Class)CAGradientLayer) init];
  [v0 setType:kCAGradientLayerRadial];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001DA390;
  id v2 = self;
  id v3 = [v2 blackColor];
  id v4 = [v3 colorWithAlphaComponent:0.3];

  id v5 = [v4 CGColor];
  type metadata accessor for CGColorRef(0);
  uint64_t v7 = v6;
  *(void *)(v1 + 56) = v6;
  *(void *)(v1 + 32) = v5;
  id v8 = [v2 blackColor];
  id v9 = [v8 colorWithAlphaComponent:0.0];

  id v10 = [v9 CGColor];
  *(void *)(v1 + 88) = v7;
  *(void *)(v1 + 64) = v10;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 setColors:isa];

  [v0 setStartPoint:0.5, 0.5];
  [v0 setEndPoint:1.0, 1.0];
  [v0 setFrame:0.0, 0.0, 100.0, 75.0];
  return v0;
}

uint64_t type metadata accessor for MOSuggestionSheetVideoPlaybackView()
{
  return self;
}

uint64_t type metadata accessor for MOPlayPauseButton()
{
  return self;
}

void specialized MOSuggestionSheetVideoPlaybackView.finishedPlaying(note:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x118))(0);
  id v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton);
  if (v3)
  {
    id v4 = *(void (**)(void))((swift_isaMask & *v3) + 0xD0);
    id v5 = v3;
    v4();
  }
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x128))(v2);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [v6 currentItem];

    if (v8)
    {
      CMTimeEpoch epoch = kCMTimeZero.epoch;
      v10[0] = kCMTimeZero.value;
      v10[1] = *(void *)&kCMTimeZero.timescale;
      v10[2] = epoch;
      [v8 seekToTime:v10 completionHandler:0];
    }
  }
}

void specialized MOSuggestionSheetVideoPlaybackView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_verticalShift] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_horizontalShift] = 0;
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_config;
  id v2 = [self grayColor];
  id v3 = self;
  id v4 = [v3 configurationWithHierarchicalColor:v2];

  id v5 = self;
  id v6 = [v5 systemFontOfSize:50.0];
  id v7 = [v3 configurationWithFont:v6];

  id v8 = [v4 configurationByApplyingConfiguration:v7];
  *(void *)&v0[v1] = v8;
  v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_isPlaying] = 0;
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(void *)&v0[v9] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_playPauseButton] = 0;
  uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButtonConfig;
  id v11 = [v5 preferredFontForTextStyle:UIFontTextStyleTitle3];
  id v12 = [v3 configurationWithFont:v11];

  *(void *)&v0[v10] = v12;
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_unMutedImage;
  NSString v14 = String._bridgeToObjectiveC()();
  uint64_t v15 = self;
  id v16 = [v15 systemImageNamed:v14];

  *(void *)&v0[v13] = v16;
  uint64_t v17 = OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_mutedImage;
  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v15 systemImageNamed:v18];

  *(void *)&v0[v17] = v19;
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void specialized MOSuggestionSheetVideoPlaybackView.clearNonDisruptiveMute()()
{
  id v0 = [self sharedInstance];
  id v11 = 0;
  unsigned int v1 = [v0 setCategory:AVAudioSessionCategoryPlayback mode:AVAudioSessionModeDefault options:0 error:&v11];

  id v2 = v11;
  if (v1)
  {
    id v3 = v2;
  }
  else
  {
    id v4 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.shared);
    swift_errorRetain();
    swift_errorRetain();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      id v8 = (uint8_t *)swift_slowAlloc();
      id v11 = (id)swift_slowAlloc();
      *(_DWORD *)id v8 = 136315138;
      swift_getErrorValue();
      uint64_t v9 = Error.localizedDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v9, v10, (uint64_t *)&v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to set audio playback as disruptive %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void specialized MOSuggestionSheetVideoPlaybackView.touchMute(_:)()
{
  unsigned int v1 = v0;
  id v2 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128);
  id v3 = (void *)v2();
  if (v3 && (id v4 = v3, v5 = [v3 isMuted], v4, v5))
  {
    id v6 = (void *)v2();
    if (v6)
    {
      os_log_type_t v7 = v6;
      [v6 setMuted:0];
    }
    specialized MOSuggestionSheetVideoPlaybackView.clearNonDisruptiveMute()();
    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    (*(void (**)(void))(*(void *)static MOMusicPlaybackCoordinator.shared + 232))();
    id v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton);
    uint64_t v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_unMutedImage);
    if (v9)
    {
LABEL_12:
      uint64_t v12 = *(void *)((char *)v1
                      + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButtonConfig);
      id v13 = v8;
      id v14 = [v9 imageWithConfiguration:v12];
      goto LABEL_14;
    }
  }
  else
  {
    unint64_t v10 = (void *)v2();
    if (v10)
    {
      id v11 = v10;
      [v10 setMuted:1];
    }
    specialized MOSuggestionSheetVideoPlaybackView.setNonDisruptiveMute()();
    id v8 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_muteButton);
    uint64_t v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService34MOSuggestionSheetVideoPlaybackView_mutedImage);
    if (v9) {
      goto LABEL_12;
    }
  }
  id v15 = v8;
  id v14 = 0;
LABEL_14:
  id v16 = v14;
  [v8 setImage:forState:];
}

uint64_t specialized MOPlayPauseButton.touchPlayPause(_:)()
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xA8))();
  if (!result) {
    return result;
  }
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(ObjectType, v3) & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
    unsigned int v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton);
    id v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playImage);
    if (v6) {
      goto LABEL_7;
    }
LABEL_8:
    id v9 = v5;
    id v8 = 0;
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
  unsigned int v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton);
  id v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_pauseImage);
  if (!v6) {
    goto LABEL_8;
  }
LABEL_7:
  os_log_type_t v7 = (void *)(*(uint64_t (**)(void *))((swift_isaMask & *v0) + 0x90))(v5);
  id v8 = [v6 imageWithConfiguration:v7];

LABEL_9:
  [v5 setImage:v8 forState:0];

  return swift_unknownObjectRelease();
}

void specialized MOPlayPauseButton.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playPauseButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playButtonConfig;
  id v3 = [self whiteColor];
  id v4 = self;
  id v5 = [v4 configurationWithHierarchicalColor:v3];

  id v6 = [self systemFontOfSize:15.0];
  id v7 = [v4 configurationWithFont:v6];

  id v8 = [v5 configurationByApplyingConfiguration:v7];
  *(void *)&v0[v2] = v8;
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_pauseImage;
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = self;
  id v12 = [v11 systemImageNamed:v10];

  *(void *)&v0[v9] = v12;
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_playImage;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v11 systemImageNamed:v14];

  *(void *)&v0[v13] = v15;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService17MOPlayPauseButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for MOSuggestionSheetVideoPlaybackView.ThumbnailView()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type PlayerState and conformance PlayerState()
{
  unint64_t result = lazy protocol witness table cache variable for type PlayerState and conformance PlayerState;
  if (!lazy protocol witness table cache variable for type PlayerState and conformance PlayerState)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type PlayerState and conformance PlayerState);
  }
  return result;
}

uint64_t sub_10014D978@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t sub_10014D9D4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x100))(*a1);
}

uint64_t sub_10014DA40@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x110))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10014DAA8(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0x118))(*a1);
}

uint64_t sub_10014DB08@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x128))();
  *a2 = result;
  return result;
}

uint64_t sub_10014DB6C(id *a1, void **a2)
{
  id v2 = *a1;
  id v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x130);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10014DBDC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x90))();
  *a2 = result;
  return result;
}

uint64_t sub_10014DC38(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x98))(*a1);
}

uint64_t sub_10014DC9C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xA8))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10014DCF8(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0xB0);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment()
{
  return &type metadata for MOSuggestionSheetBaseVideoPlaybackView.ViewAdjustment;
}

unsigned char *storeEnumTagSinglePayload for PlayerState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10014DEB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayerState()
{
  return &type metadata for PlayerState;
}

ValueMetadata *type metadata accessor for PlayPauseConstants()
{
  return &type metadata for PlayPauseConstants;
}

uint64_t thunk for @escaping @callee_guaranteed () -> (@out ())(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t *MOEventBundleStore.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static MOEventBundleStore.shared;
}

BOOL MOEventBundle.recommendedEligible.getter()
{
  id v1 = [v0 rankingDictionary];
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_11:
    outlined destroy of Any?((uint64_t)&v8, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v7), (v5 & 1) != 0))
  {
    outlined init with copy of Any(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  outlined destroy of AnyHashable((uint64_t)v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1)) {
    goto LABEL_11;
  }
  return (swift_dynamicCast() & 1) != 0 && (unint64_t)(v7[0] - 1) < 2;
}

uint64_t MOEventBundle.visibilityCategory.getter()
{
  id v1 = [v0 rankingDictionary];
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_10:
    outlined destroy of Any?((uint64_t)&v8, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v8 = 0xD000000000000017;
  *((void *)&v8 + 1) = 0x80000001001E5B90;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v7), (v5 & 1) != 0))
  {
    outlined init with copy of Any(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  outlined destroy of AnyHashable((uint64_t)v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast()) {
    return v7[0];
  }
  return 0;
}

double MOEventBundle.bundleRankingScore.getter()
{
  return MOEventBundle.bundleRankingScore.getter(0x53676E696B6E6172);
}

BOOL MOEventBundle.recentEligible.getter()
{
  id v1 = [v0 rankingDictionary];
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_10:
    outlined destroy of Any?((uint64_t)&v8, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v7), (v5 & 1) != 0))
  {
    outlined init with copy of Any(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  outlined destroy of AnyHashable((uint64_t)v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast()) {
    return ((v7[0] - 1) & 0xFFFFFFFFFFFFFFFDLL) == 0;
  }
  return 0;
}

double MOEventBundle.baseScore.getter()
{
  return MOEventBundle.bundleRankingScore.getter(0x726F635365736162);
}

double MOEventBundle.bundleRankingScore.getter(uint64_t a1)
{
  id v3 = [v1 rankingDictionary];
  double v4 = 0.0;
  if (v3)
  {
    char v5 = v3;
    uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    AnyHashable.init<A>(_:)();
    if (*(void *)(v6 + 16) && (unint64_t v7 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v10), (v8 & 1) != 0))
    {
      outlined init with copy of Any(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v11);
    }
    else
    {
      long long v11 = 0u;
      long long v12 = 0u;
    }
    swift_bridgeObjectRelease();
    outlined destroy of AnyHashable((uint64_t)v10);
    if (*((void *)&v12 + 1))
    {
      if (swift_dynamicCast()) {
        return *(double *)&a1;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)&v11, &demangling cache variable for type metadata for Any?);
    }
  }
  return v4;
}

uint64_t MOEventBundleStore.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  MOEventBundleStore.init()();
  return v0;
}

uint64_t static MOEventBundleStore.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t one-time initialization function for defaultQueue()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.userInteractive.getter();
  v7[1] = &_swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  static MOEventBundleStore.defaultQueue = result;
  return result;
}

uint64_t key path getter for MOEventBundleStore.allBundles : MOEventBundleStore@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 192))();
  *a2 = result;
  return result;
}

uint64_t key path setter for MOEventBundleStore.allBundles : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 200);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t MOEventBundleStore.allBundles.getter()
{
  return MOEventBundleStore.allBundles.getter();
}

{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t MOEventBundleStore.allBundles.setter()
{
  return MOEventBundleStore.allBundles.setter();
}

{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return static Published.subscript.setter();
}

uint64_t (*MOEventBundleStore.allBundles.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOEventBundleStore.$allBundles : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 224))(v6);
}

uint64_t MOEventBundleStore.$allBundles.getter()
{
  return MOEventBundleStore.$allBundles.getter((uint64_t)&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__allBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t MOEventBundleStore.$allBundles.setter(uint64_t a1)
{
  return MOEventBundleStore.$allBundles.setter(a1, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher, (uint64_t)&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__allBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t (*MOEventBundleStore.$allBundles.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__allBundles;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  Published.projectedValue.getter();
  swift_endAccess();
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t key path getter for MOEventBundleStore.privateUIBundles : MOEventBundleStore@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 240))();
  *a2 = result;
  return result;
}

uint64_t key path setter for MOEventBundleStore.privateUIBundles : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 248);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t MOEventBundleStore.privateUIBundles.getter()
{
  return MOEventBundleStore.allBundles.getter();
}

uint64_t MOEventBundleStore.privateUIBundles.setter()
{
  return MOEventBundleStore.allBundles.setter();
}

uint64_t (*MOEventBundleStore.privateUIBundles.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOEventBundleStore.$privateUIBundles : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  __chkstk_darwin(v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 272))(v6);
}

uint64_t MOEventBundleStore.$privateUIBundles.getter()
{
  return MOEventBundleStore.$allBundles.getter((uint64_t)&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__privateUIBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t MOEventBundleStore.$privateUIBundles.setter(uint64_t a1)
{
  return MOEventBundleStore.$allBundles.setter(a1, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher, (uint64_t)&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__privateUIBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t (*MOEventBundleStore.$privateUIBundles.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__privateUIBundles;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  Published.projectedValue.getter();
  swift_endAccess();
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t property wrapper backing initializer of MOEventBundleStore.allBundles()
{
  return Published.init(initialValue:)();
}

uint64_t key path getter for MOEventBundleStore.publicUIBundles : MOEventBundleStore@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 288))();
  *a2 = result;
  return result;
}

uint64_t key path setter for MOEventBundleStore.publicUIBundles : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 296);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t MOEventBundleStore.publicUIBundles.getter()
{
  return MOEventBundleStore.allBundles.getter();
}

uint64_t MOEventBundleStore.publicUIBundles.setter()
{
  return MOEventBundleStore.allBundles.setter();
}

uint64_t (*MOEventBundleStore.publicUIBundles.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOEventBundleStore.$publicUIBundles : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  __chkstk_darwin(v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 320))(v6);
}

uint64_t MOEventBundleStore.$publicUIBundles.getter()
{
  return MOEventBundleStore.$allBundles.getter((uint64_t)&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__publicUIBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t MOEventBundleStore.$publicUIBundles.setter(uint64_t a1)
{
  return MOEventBundleStore.$allBundles.setter(a1, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher, (uint64_t)&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__publicUIBundles, &demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
}

uint64_t (*MOEventBundleStore.$publicUIBundles.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__publicUIBundles;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  Published.projectedValue.getter();
  swift_endAccess();
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t key path getter for MOEventBundleStore.isLoading : MOEventBundleStore@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 336))();
  *a2 = result & 1;
  return result;
}

uint64_t key path setter for MOEventBundleStore.isLoading : MOEventBundleStore(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 344))(*a1);
}

uint64_t MOEventBundleStore.isLoading.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t MOEventBundleStore.isLoading.setter()
{
  return static Published.subscript.setter();
}

uint64_t (*MOEventBundleStore.isLoading.modify(void *a1))()
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOEventBundleStore.$isLoading : MOEventBundleStore(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  __chkstk_darwin(v4);
  size_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 368))(v6);
}

uint64_t MOEventBundleStore.$isLoading.getter()
{
  return MOEventBundleStore.$allBundles.getter((uint64_t)&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__isLoading, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t MOEventBundleStore.$allBundles.getter(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t MOEventBundleStore.$isLoading.setter(uint64_t a1)
{
  return MOEventBundleStore.$allBundles.setter(a1, &demangling cache variable for type metadata for Published<Bool>.Publisher, (uint64_t)&OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__isLoading, &demangling cache variable for type metadata for Published<Bool>);
}

uint64_t MOEventBundleStore.$allBundles.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*MOEventBundleStore.$isLoading.modify(void *a1))()
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__isLoading;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  Published.projectedValue.getter();
  swift_endAccess();
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t MOEventBundleStore.isFirstRefresh.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isFirstRefresh);
  swift_beginAccess();
  return *v1;
}

uint64_t MOEventBundleStore.isFirstRefresh.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isFirstRefresh);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MOEventBundleStore.isFirstRefresh.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.isRunningSoftRefresh.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningSoftRefresh);
  swift_beginAccess();
  return *v1;
}

uint64_t MOEventBundleStore.isRunningSoftRefresh.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningSoftRefresh);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MOEventBundleStore.isRunningSoftRefresh.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.isRunningDatabaseUpgrade.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningDatabaseUpgrade);
  swift_beginAccess();
  return *v1;
}

void MOEventBundleStore.isRunningDatabaseUpgrade.setter(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (unsigned char *)(v2 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningDatabaseUpgrade);
  swift_beginAccess();
  *uint64_t v4 = a1;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.shared);
  swift_retain();
  size_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Performing DB Upgrade state update: %{BOOL}d", v8, 8u);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
}

void (*MOEventBundleStore.isRunningDatabaseUpgrade.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningDatabaseUpgrade;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return MOEventBundleStore.isRunningDatabaseUpgrade.modify;
}

void MOEventBundleStore.isRunningDatabaseUpgrade.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.shared);
    swift_retain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = v3[3];
      uint64_t v8 = v3[4];
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 67109120;
      *(_DWORD *)uint64_t v3 = *(unsigned __int8 *)(v7 + v8);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Performing DB Upgrade state update: %{BOOL}d", v9, 8u);
      swift_slowDealloc();
    }
    else
    {
      swift_release();
    }
  }

  free(v3);
}

uint64_t MOEventBundleStore.latestRawBundles.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOEventBundleStore.latestRawBundles.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_latestRawBundles);
}

uint64_t (*MOEventBundleStore.latestRawBundles.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.sourceThirdPartyBundleIds.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOEventBundleStore.sourceThirdPartyBundleIds.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_sourceThirdPartyBundleIds);
}

uint64_t (*MOEventBundleStore.sourceThirdPartyBundleIds.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOEventBundleStore.failedResources.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOEventBundleStore.failedResources.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_failedResources);
}

uint64_t (*MOEventBundleStore.failedResources.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.pendingHandlers.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOEventBundleStore.pendingHandlers.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_pendingHandlers);
}

uint64_t (*MOEventBundleStore.pendingHandlers.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.softRefreshHandlers.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOEventBundleStore.softRefreshHandlers.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_softRefreshHandlers);
}

uint64_t (*MOEventBundleStore.softRefreshHandlers.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOEventBundleStore.ResourceValidationResult.shouldForceDropBundle.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t MOEventBundleStore.ResourceValidationResult.thirdPartyBundleIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MOEventBundleStore.ResourceValidationResult.thirdPartyBundleIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t MOEventBundleStore.serviceFetchHandlers()()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 528))();
  uint64_t result = (*(uint64_t (**)(void *))(*(void *)v0 + 536))(_swiftEmptyArrayStorage);
  uint64_t v20 = *(void *)(v1 + 16);
  if (!v20)
  {
LABEL_25:
    return swift_bridgeObjectRelease();
  }
  unint64_t v3 = 0;
  id v19 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 456);
  uint64_t v17 = *(uint64_t (**)(unint64_t))(*(void *)v0 + 480);
  uint64_t v18 = v1 + 32;
  uint64_t v16 = v1;
  while (v3 < *(void *)(v1 + 16))
  {
    uint64_t v7 = (unsigned __int8 *)(v18 + 32 * v3);
    id v21 = (void (*)(void **, uint64_t *))*((void *)v7 + 2);
    uint64_t v8 = *((void *)v7 + 1);
    int v9 = *v7;
    uint64_t v10 = swift_retain();
    unint64_t v5 = v19(v10);
    unint64_t v6 = v5;
    if (v9 != 1 || (v8 & 1) != 0) {
      goto LABEL_5;
    }
    double v23 = _swiftEmptyArrayStorage;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v12 = result;
      if (result)
      {
LABEL_14:
        if (v12 < 1) {
          goto LABEL_29;
        }
        for (uint64_t i = 0; i != v12; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v14 = *(id *)(v6 + 8 * i + 32);
          }
          id v15 = v14;
          if ([v14 interfaceType] == (id)11)
          {
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v4 = v23;
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v12) {
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = _swiftEmptyArrayStorage;
LABEL_4:
    unint64_t v5 = swift_bridgeObjectRelease();
    unint64_t v6 = (unint64_t)v4;
LABEL_5:
    uint64_t v1 = v16;
    ++v3;
    uint64_t v22 = v17(v5);
    double v23 = (void *)v6;
    v21(&v23, &v22);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3 == v20) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *static MOEventBundleStore.bundlesSubset(presentationDetails:bundles:)(char a1, char a2, unint64_t a3)
{
  unint64_t v3 = a3;
  if (a1 & 1) == 0 || (a2)
  {
    swift_bridgeObjectRetain();
    return (void *)v3;
  }
  if (!(a3 >> 62))
  {
    uint64_t v4 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_5;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = (uint64_t)result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_5:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      if ([v7 interfaceType] == (id)11)
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v23 = a3;
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v6;
  *(unsigned char *)(v17 + 24) = a1;
  *(void *)(v17 + 32) = a2;
  *(void *)(v17 + 40) = a4;
  *(void *)(v17 + 48) = a5;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v6;
  *(unsigned char *)(v18 + 24) = a1;
  *(void *)(v18 + 32) = a2;
  *(void *)(v18 + 40) = a4;
  *(void *)(v18 + 48) = a5;
  *(void *)(v18 + 56) = partial apply for closure #1 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:);
  *(void *)(v18 + 64) = v17;
  aBlock[4] = partial apply for closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:);
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_29;
  id v19 = _Block_copy(aBlock);
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  double v24 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t closure #1 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)()
{
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static MOAngelLogger.shared);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[Pull Refresh] soft refresh from pull finished, execute fetch.", v3, 2u);
    swift_slowDealloc();
  }

  return specialized MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)();
}

void closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a4;
  *(void *)(v13 + 24) = a5;
  uint64_t v14 = *(uint64_t (**)(void *))(*(void *)a1 + 544);
  swift_retain();
  uint64_t v15 = (uint64_t (*)(void *, void))v14(aBlock);
  uint64_t v17 = v16;
  uint64_t v18 = *v16;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v17 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v18[2] + 1, 1, v18);
    *uint64_t v17 = v18;
  }
  unint64_t v21 = v18[2];
  unint64_t v20 = v18[3];
  if (v21 >= v20 >> 1)
  {
    uint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v20 > 1), v21 + 1, 1, v18);
    *uint64_t v17 = v18;
  }
  v18[2] = v21 + 1;
  uint64_t v22 = &v18[4 * v21];
  *((unsigned char *)v22 + 32) = a2 & 1;
  v22[5] = a3;
  v22[6] = thunk for @escaping @callee_guaranteed (@guaranteed [MOEventBundle], @guaranteed Set<String>?) -> ()partial apply;
  v22[7] = v13;
  uint64_t v23 = v15(aBlock, 0);
  if ((*(uint64_t (**)(uint64_t))(*(void *)a1 + 408))(v23))
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    __swift_project_value_buffer(v24, (uint64_t)static MOAngelLogger.shared);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[Pull Refresh] existing soft refresh running during pull, wait for it to finish.", v27, 2u);
      swift_slowDealloc();
    }

    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a6;
    *(void *)(v28 + 24) = a7;
    unint64_t v29 = *(uint64_t (**)(void *))(*(void *)a1 + 568);
    swift_retain();
    unint64_t v30 = (void (*)(void *, void))v29(aBlock);
    id v32 = v31;
    unint64_t v33 = *v31;
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    *id v32 = v33;
    if ((v34 & 1) == 0)
    {
      unint64_t v33 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v33[2] + 1, 1, v33);
      *id v32 = v33;
    }
    unint64_t v36 = v33[2];
    unint64_t v35 = v33[3];
    if (v36 >= v35 >> 1)
    {
      unint64_t v33 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v35 > 1), v36 + 1, 1, v33);
      *id v32 = v33;
    }
    v33[2] = v36 + 1;
    uint64_t v37 = &v33[2 * v36];
    v37[4] = partial apply for thunk for @escaping @callee_guaranteed () -> ();
    v37[5] = v28;
    v30(aBlock, 0);
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    __swift_project_value_buffer(v38, (uint64_t)static MOAngelLogger.shared);
    char v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "[Pull Refresh] no existing soft refresh during pull, trigger soft refresh.", v41, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(uint64_t))(*(void *)a1 + 416))(1);
    NSString v42 = *(void **)(a1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
    id v43 = (void *)swift_allocObject();
    v43[2] = a1;
    v43[3] = a6;
    v43[4] = a7;
    aBlock[4] = partial apply for closure #1 in closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:);
    aBlock[5] = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
    aBlock[3] = &block_descriptor_178;
    id v44 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    [v42 softRefreshEventsWithRefreshVariant:512 andIgnoreLastTrigger:1 andHandler:v44];
    _Block_release(v44);
  }
}

void closure #1 in closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.shared);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOEventBundleStore][Pull Refresh] softRefresh failed, retrying...", v10, 2u);
      swift_slowDealloc();
    }

    uint64_t v11 = *(void **)(a2 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = a2;
    v12[3] = a3;
    v12[4] = a4;
    v25[4] = partial apply for closure #1 in closure #1 in closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:);
    v25[5] = v12;
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 1107296256;
    v25[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
    v25[3] = &block_descriptor_191;
    uint64_t v13 = _Block_copy(v25);
    swift_retain();
    swift_retain();
    swift_release();
    [v11 softRefreshEventsWithRefreshVariant:512 andHandler:v13];
    _Block_release(v13);
  }
  else
  {
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a3;
    *(void *)(v14 + 24) = a4;
    uint64_t v15 = *(uint64_t (**)(void *))(*(void *)a2 + 568);
    swift_retain();
    uint64_t v16 = (uint64_t (*)(void *, void))v15(v25);
    uint64_t v18 = v17;
    id v19 = *v17;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    void *v18 = v19;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      id v19 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v19[2] + 1, 1, v19);
      void *v18 = v19;
    }
    unint64_t v22 = v19[2];
    unint64_t v21 = v19[3];
    if (v22 >= v21 >> 1)
    {
      id v19 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v21 > 1), v22 + 1, 1, v19);
      void *v18 = v19;
    }
    v19[2] = v22 + 1;
    uint64_t v23 = &v19[2 * v22];
    v23[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
    v23[5] = v14;
    uint64_t v24 = v16(v25, 0);
    (*(void (**)(uint64_t))(*(void *)a2 + 632))(v24);
  }
}

uint64_t closure #1 in closure #1 in closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  uint64_t v8 = *(uint64_t (**)(unsigned char *))(*(void *)a2 + 568);
  swift_retain();
  os_log_type_t v9 = (uint64_t (*)(unsigned char *, void))v8(v19);
  uint64_t v11 = v10;
  uint64_t v12 = *v10;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v11 = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v12[2] + 1, 1, v12);
    *uint64_t v11 = v12;
  }
  unint64_t v15 = v12[2];
  unint64_t v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    uint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v14 > 1), v15 + 1, 1, v12);
    *uint64_t v11 = v12;
  }
  v12[2] = v15 + 1;
  uint64_t v16 = &v12[2 * v15];
  v16[4] = thunk for @escaping @callee_guaranteed () -> ()partial apply;
  v16[5] = v7;
  uint64_t v17 = v9(v19, 0);
  return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 632))(v17);
}

uint64_t MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v35 = a3;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for DispatchQoS();
  uint64_t v16 = *(void *)(v36 - 8);
  uint64_t v17 = __chkstk_darwin(v36);
  id v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t))(*(void *)v7 + 336))(v17))
  {
    uint64_t v32 = a2;
    uint64_t v33 = v16;
    uint64_t v20 = a7;
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static MOAngelLogger.shared);
    unint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "A loading process is already in progress: queued", v24, 2u);
      swift_slowDealloc();
    }

    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v8;
    *(unsigned char *)(v25 + 24) = a1 & 1;
    *(void *)(v25 + 32) = v32;
    *(void *)(v25 + 40) = a6;
    *(void *)(v25 + 48) = v20;
    NSString v42 = partial apply for closure #1 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
    uint64_t v43 = v25;
    aBlock = _NSConcreteStackBlock;
    uint64_t v39 = 1107296256;
    os_log_type_t v40 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v41 = &block_descriptor_42_2;
    os_log_type_t v26 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v37 = _swiftEmptyArrayStorage;
    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v13);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v36);
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v7 + 344))(1);
    (*(void (**)(void *))(*(void *)v7 + 200))(_swiftEmptyArrayStorage);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v7;
    *(unsigned char *)(v27 + 24) = a1 & 1;
    *(void *)(v27 + 32) = a2;
    *(void *)(v27 + 40) = a6;
    uint64_t v29 = v32;
    uint64_t v28 = v33;
    *(void *)(v27 + 48) = a7;
    *(void *)(v27 + 56) = v29;
    *(void *)(v27 + 64) = v28;
    NSString v42 = partial apply for closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
    uint64_t v43 = v27;
    aBlock = _NSConcreteStackBlock;
    uint64_t v39 = 1107296256;
    os_log_type_t v40 = thunk for @escaping @callee_guaranteed () -> ();
    uint64_t v41 = &block_descriptor_36_1;
    unint64_t v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(v29);
    static DispatchQoS.unspecified.getter();
    uint64_t v37 = _swiftEmptyArrayStorage;
    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v30);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v13);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v36);
  }
  return swift_release();
}

uint64_t closure #1 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  uint64_t v11 = *(uint64_t (**)(unsigned char *))(*(void *)a1 + 544);
  swift_retain();
  uint64_t v12 = (uint64_t (*)(unsigned char *, void))v11(v22);
  uint64_t v14 = v13;
  unint64_t v15 = *v13;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v14 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
    *uint64_t v14 = v15;
  }
  unint64_t v18 = v15[2];
  unint64_t v17 = v15[3];
  if (v18 >= v17 >> 1)
  {
    unint64_t v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v17 > 1), v18 + 1, 1, v15);
    *uint64_t v14 = v15;
  }
  v15[2] = v18 + 1;
  id v19 = &v15[4 * v18];
  *((unsigned char *)v19 + 32) = a2 & 1;
  v19[5] = a3;
  v19[6] = partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [MOEventBundle], @guaranteed Set<String>?) -> ();
  v19[7] = v10;
  uint64_t v20 = v12(v22, 0);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 336))(v20);
  if ((result & 1) == 0) {
    return MOEventBundleStore.serviceFetchHandlers()();
  }
  return result;
}

uint64_t closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = swift_allocObject();
  uint64_t v38 = a4;
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  uint64_t v13 = *(uint64_t (**)(void *))(*(void *)a1 + 544);
  swift_retain();
  uint64_t v14 = (void (*)(void *, void))v13(aBlock);
  uint64_t v16 = v15;
  unint64_t v17 = *v15;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v16 = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v17[2] + 1, 1, v17);
    *uint64_t v16 = v17;
  }
  unint64_t v20 = v17[2];
  unint64_t v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    unint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v19 > 1), v20 + 1, 1, v17);
    *uint64_t v16 = v17;
  }
  v17[2] = v20 + 1;
  uint64_t v21 = &v17[4 * v20];
  char v22 = a2 & 1;
  *((unsigned char *)v21 + 32) = v22;
  v21[5] = a3;
  v21[6] = thunk for @escaping @callee_guaranteed (@guaranteed [MOEventBundle], @guaranteed Set<String>?) -> ()partial apply;
  v21[7] = v12;
  v14(aBlock, 0);
  id v23 = [self sharedInstance];
  id v24 = [v23 onboardingFlowCompletionStatus];

  if (unint64_t)v24 >= 2 && ((*(uint64_t (**)(void))(*(void *)a1 + 384))())
  {
    (*(void (**)(void))(*(void *)a1 + 392))(0);
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static MOAngelLogger.shared);
    os_log_type_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "[MOEventBundleStore] calling scheduleDatabaseUpgrade", v28, 2u);
      swift_slowDealloc();
    }

    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a1;
    *(void *)(v29 + 24) = a6;
    *(void *)(v29 + 32) = a7;
    *(unsigned char *)(v29 + 40) = v22;
    *(void *)(v29 + 48) = a3;
    *(void *)(v29 + 56) = v38;
    *(void *)(v29 + 64) = a5;
    unint64_t v30 = *(void **)(a1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = partial apply for closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
    *(void *)(v31 + 24) = v29;
    aBlock[4] = partial apply for closure #2 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
    aBlock[5] = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned MODatabaseUpgradeStatus, @guaranteed Error?) -> ();
    aBlock[3] = &block_descriptor_148;
    uint64_t v32 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(a6);
    swift_retain();
    swift_release();
    [v30 scheduleDatabaseUpgradeWithHandler:v32];
    _Block_release(v32);
    return swift_release();
  }
  else if (((*(uint64_t (**)(void))(*(void *)a1 + 408))() & 1) != 0 {
         || ((*(uint64_t (**)(void))(*(void *)a1 + 432))() & 1) != 0)
  }
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    __swift_project_value_buffer(v34, (uint64_t)static MOAngelLogger.shared);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MOEventBundleStore] softRefreshEvents still running, skipping _fetchAvailableBundles", v37, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(void))(*(void *)a1 + 344))(0);
    return MOEventBundleStore.serviceFetchHandlers()();
  }
  else
  {
    return specialized MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)();
  }
}

void closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  __swift_project_value_buffer(v6, (uint64_t)static MOAngelLogger.shared);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "[MOEventBundleStore] returning from scheduleDatabaseUpgrade", v9, 2u);
    swift_slowDealloc();
  }

  switch(a1)
  {
    case 0:
    case 1:
    case 4:
      uint64_t v10 = (*(uint64_t (**)(void))(*(void *)a2 + 440))(0);
      int v11 = 1;
      if (a3) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2:
      uint64_t v18 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 440))(1);
      if (a3)
      {
        char v19 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 432))(v18);
        a3(v19 & 1);
      }
      return;
    case 3:
      uint64_t v10 = (*(uint64_t (**)(void))(*(void *)a2 + 440))(0);
      int v11 = 0;
      if (!a3) {
        goto LABEL_8;
      }
LABEL_7:
      char v12 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 432))(v10);
      a3(v12 & 1);
LABEL_8:
      if (v11)
      {
        (*(void (**)(uint64_t))(*(void *)a2 + 416))(1);
        specialized MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)();
        uint64_t v13 = Logger.logObject.getter();
        os_log_type_t v14 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v13, v14))
        {
          unint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v15 = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, v14, "[MOEventBundleStore] calling softRefreshEvents", v15, 2u);
          swift_slowDealloc();
        }

        uint64_t v16 = *(void **)(a2 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
        v20[4] = partial apply for closure #1 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
        v20[5] = a2;
        v20[0] = _NSConcreteStackBlock;
        v20[1] = 1107296256;
        v20[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
        v20[3] = &block_descriptor_151;
        unint64_t v17 = _Block_copy(v20);
        swift_retain();
        swift_release();
        [v16 softRefreshEventsWithRefreshVariant:512 andHandler:v17];
        _Block_release(v17);
      }
      else
      {
        specialized MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)();
      }
      return;
    default:
      type metadata accessor for MODatabaseUpgradeStatus(0);
      v20[0] = a1;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x100152428);
  }
}

void closure #1 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)static MOAngelLogger.shared);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOEventBundleStore] softRefresh failed, retrying...", v6, 2u);
      swift_slowDealloc();
    }

    uint64_t v7 = *(void **)(a2 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
    v9[4] = partial apply for closure #1 in closure #1 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:);
    v9[5] = a2;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
    v9[3] = &block_descriptor_154;
    os_log_type_t v8 = _Block_copy(v9);
    swift_retain();
    swift_release();
    [v7 softRefreshEventsWithRefreshVariant:512 andHandler:v8];
    _Block_release(v8);
  }
  else
  {
    (*(void (**)(void))(*(void *)a2 + 632))();
  }
}

uint64_t closure #2 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (a2)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.shared);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[MOEventBundleStore] scheduleDatabaseUpgrade failed...", v8, 2u);
      swift_slowDealloc();
    }
  }
  return a3(a1);
}

void thunk for @escaping @callee_guaranteed (@unowned MODatabaseUpgradeStatus, @guaranteed Error?) -> ()(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t closure #1 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(unint64_t a1)
{
  unint64_t v166 = a1;
  uint64_t v178 = type metadata accessor for UUID();
  uint64_t v1 = *(NSObject **)(v178 - 8);
  __chkstk_darwin(v178);
  id v177 = (char *)&v151 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v164 = result;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    goto LABEL_147;
  }
LABEL_3:
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.shared);
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[MOEventBundleStore] returning from fetchEventBundles", v8, 2u);
    swift_slowDealloc();
  }

  os_log_type_t v9 = (void (**)(void))(*(void *)v164 + 344);
  v159 = *v9;
  id v158 = v9;
  v159(0);
  if (v166)
  {
    unint64_t v10 = v166 >> 62;
    if (v166 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      if (!v12)
      {
LABEL_149:
        swift_bridgeObjectRelease();
        goto LABEL_150;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v12 = v11;
      if (!v11) {
        goto LABEL_149;
      }
    }
    uint64_t v167 = v12;
    unint64_t v13 = v166;
    swift_bridgeObjectRetain_n();
    os_log_type_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 134217984;
      unint64_t v13 = v166;
      if (v10)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = *(void *)((v166 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v190 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "[MOEventBundleStore] bundles received from fetch: count=%ld", v16, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v193 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v168 = v13 & 0xC000000000000001;
    swift_beginAccess();
    int v157 = 0;
    unint64_t v18 = 0;
    uint64_t v163 = v13 & 0xFFFFFFFFFFFFFF8;
    unint64_t v162 = v13 + 32;
    id v175 = v1 + 1;
    id v160 = (char *)&v191 + 8;
    v152 = (char *)&v191 + 4;
    *(void *)&long long v19 = 134217984;
    long long v156 = v19;
    *(void *)&long long v19 = 136315138;
    long long v155 = v19;
    id v153 = (char *)&type metadata for Any + 8;
    *(void *)&long long v19 = 134218754;
    long long v154 = v19;
    *(void *)&long long v19 = 134218242;
    long long v170 = v19;
    *(void *)&long long v19 = 136316418;
    long long v151 = v19;
    unint64_t v165 = 0x80000001001E5B90;
    uint64_t v171 = v5;
    while (1)
    {
      if (v168)
      {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v18 >= *(void *)(v163 + 16)) {
          goto LABEL_146;
        }
        id v20 = *(id *)(v162 + 8 * v18);
      }
      uint64_t v21 = v20;
      if (__OFADD__(v18++, 1)) {
        goto LABEL_144;
      }
      id v23 = [v20 rankingDictionary];
      if (!v23) {
        break;
      }
      uint64_t v1 = v23;
      unint64_t v24 = v18;
      uint64_t v25 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v188 = 0xD000000000000017;
      unint64_t v189 = v165;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v25 + 16)
        && (unint64_t v26 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v190), (v27 & 1) != 0))
      {
        outlined init with copy of Any(*(void *)(v25 + 56) + 32 * v26, (uint64_t)&v191);
      }
      else
      {
        long long v191 = 0u;
        long long v192 = 0u;
      }
      outlined destroy of AnyHashable((uint64_t)&v190);
      swift_bridgeObjectRelease();
      unint64_t v18 = v24;
      if (!*((void *)&v192 + 1)) {
        goto LABEL_33;
      }
      if (swift_dynamicCast() && v190 == 4)
      {
        uint64_t v1 = v21;
        uint64_t v28 = Logger.logObject.getter();
        os_log_type_t v29 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = swift_slowAlloc();
          uint64_t v187 = swift_slowAlloc();
          uint64_t v190 = v187;
          *(_DWORD *)uint64_t v30 = v155;
          id v31 = [v1 bundleIdentifier];
          uint64_t v32 = v177;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v33 = v178;
          uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v36 = v35;
          ((void (*)(char *, uint64_t))v175->isa)(v32, v33);
          *(void *)(v30 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v34, v36, &v190);

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v28, v29, "[MOEventBundleStore] Filtering out bundle due to rejected ranking category id=%s", (uint8_t *)v30, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        unint64_t v18 = v24;
        goto LABEL_16;
      }
LABEL_34:
      id v37 = [v21 resources:v151, v152, v153];
      if (v37)
      {
        uint64_t v38 = v37;
        unint64_t v169 = v18;
        type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOResource);
        unint64_t v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
        id v40 = [v21 promptLanguages];
        if (v40
          && (uint64_t v41 = v40,
              uint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
              v41,
              uint64_t v43 = *(void *)(v42 + 16),
              swift_bridgeObjectRelease(),
              v43))
        {
          uint64_t v44 = (*(uint64_t (**)(unint64_t))(*(void *)v164 + 616))(v39);
          Swift::String v181 = v21;
          if (v44)
          {
            uint64_t v47 = v44;
            uint64_t v48 = v45;
            uint64_t v49 = v46;
            id v161 = v38;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            id v50 = v21;
            id v51 = Logger.logObject.getter();
            int v52 = static os_log_type_t.default.getter();
            BOOL v53 = os_log_type_enabled(v51, (os_log_type_t)v52);
            unint64_t v54 = v39 >> 62;
            uint64_t v179 = v47;
            id v180 = v50;
            unint64_t v185 = v39 >> 62;
            if (v53)
            {
              uint64_t v186 = v49;
              uint64_t v55 = swift_slowAlloc();
              uint64_t v183 = swift_slowAlloc();
              uint64_t v190 = v183;
              *(_DWORD *)uint64_t v55 = v154;
              uint64_t v56 = *(void *)(v47 + 16);
              swift_bridgeObjectRelease();
              *(void *)&long long v191 = v56;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v55 + 12) = 2048;
              uint64_t v187 = v48;
              LODWORD(v184) = v52;
              if (v54)
              {
                swift_bridgeObjectRetain();
                uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v57 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
              }
              swift_bridgeObjectRelease();
              *(void *)&long long v191 = v57;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v55 + 22) = 2048;
              swift_bridgeObjectRelease();
              if (v57 >= 0) {
                uint64_t v58 = v57;
              }
              else {
                uint64_t v58 = v57 + 1;
              }
              *(void *)&long long v191 = v58 >> 1;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v55 + 32) = 2080;
              uint64_t v182 = v55 + 34;
              id v59 = v180;
              id v60 = [v180 bundleIdentifier];
              v61 = v177;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)();

              _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v62 = v178;
              uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter();
              unint64_t v65 = v64;
              ((void (*)(char *, uint64_t))v175->isa)(v61, v62);
              *(void *)&long long v191 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v63, v65, &v190);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v184, "[MOEventBundleStore.failedResources] failed resource count=%ld, totalCount=%ld, threshold=%ld, bundleId: %s", (uint8_t *)v55, 0x2Au);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v47 = v179;
              unint64_t v54 = v185;
              LOBYTE(v48) = v187;
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }
            uint64_t v73 = *(void *)(v47 + 16);
            uint64_t v176 = v39;
            if (v54)
            {
              swift_bridgeObjectRetain();
              uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v74 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v47 + 16)) {
              BOOL v75 = v74 < 4;
            }
            else {
              BOOL v75 = 0;
            }
            int v76 = v75;
            id v77 = v180;
            if ([v180 interfaceType] == (id)11
              || (v74 >= 0 ? (uint64_t v78 = v74) : (uint64_t v78 = v74 + 1),
                  (uint64_t v79 = v78 >> 1, v74 > 3) ? (v80 = v73 < v79) : (v80 = 1),
                  v80 ? (int v81 = 0) : (int v81 = 1),
                  (v48 & 1) != 0 ? (int v82 = 1) : (int v82 = v81),
                  (v82 | v76) != 1))
            {
              uint64_t v99 = 0;
              uint64_t v100 = v179;
              uint64_t v101 = *(void *)(v179 + 56);
              uint64_t v182 = v179 + 56;
              uint64_t v102 = 1 << *(unsigned char *)(v179 + 32);
              if (v102 < 64) {
                uint64_t v103 = ~(-1 << v102);
              }
              else {
                uint64_t v103 = -1;
              }
              unint64_t v104 = v103 & v101;
              uint64_t v183 = (unint64_t)(v102 + 63) >> 6;
              uint64_t v1 = v176;
              uint64_t v105 = v176 & 0xFFFFFFFFFFFFFF8;
              os_log_t v184 = (os_log_t)(v176 & 0xFFFFFFFFFFFFFF8);
              if (v176 < 0) {
                uint64_t v105 = v176;
              }
              uint64_t v174 = v105;
              unint64_t v173 = v176 & 0xC000000000000001;
              uint64_t v172 = v176 + 32;
              uint64_t v21 = v181;
              while (1)
              {
                if (v104)
                {
                  uint64_t v186 = (v104 - 1) & v104;
                  uint64_t v187 = v99;
                  unint64_t v106 = __clz(__rbit64(v104)) | (v99 << 6);
                }
                else
                {
                  uint64_t v107 = v99 + 1;
                  if (__OFADD__(v99, 1)) {
                    goto LABEL_143;
                  }
                  if (v107 >= v183)
                  {
LABEL_108:
                    swift_release();
                    swift_bridgeObjectRelease();
                    id v125 = v161;
                    [v77 setResources:v161];

                    goto LABEL_109;
                  }
                  unint64_t v108 = *(void *)(v182 + 8 * v107);
                  uint64_t v109 = v99 + 1;
                  if (!v108)
                  {
                    uint64_t v109 = v99 + 2;
                    if (v99 + 2 >= v183) {
                      goto LABEL_108;
                    }
                    unint64_t v108 = *(void *)(v182 + 8 * v109);
                    if (!v108)
                    {
                      uint64_t v109 = v99 + 3;
                      if (v99 + 3 >= v183) {
                        goto LABEL_108;
                      }
                      unint64_t v108 = *(void *)(v182 + 8 * v109);
                      if (!v108)
                      {
                        uint64_t v110 = v99 + 4;
                        if (v99 + 4 >= v183) {
                          goto LABEL_108;
                        }
                        unint64_t v108 = *(void *)(v182 + 8 * v110);
                        if (!v108)
                        {
                          while (1)
                          {
                            uint64_t v109 = v110 + 1;
                            if (__OFADD__(v110, 1)) {
                              goto LABEL_145;
                            }
                            if (v109 >= v183) {
                              goto LABEL_108;
                            }
                            unint64_t v108 = *(void *)(v182 + 8 * v109);
                            ++v110;
                            if (v108) {
                              goto LABEL_94;
                            }
                          }
                        }
                        uint64_t v109 = v99 + 4;
                      }
                    }
                  }
LABEL_94:
                  uint64_t v186 = (v108 - 1) & v108;
                  uint64_t v187 = v109;
                  unint64_t v106 = __clz(__rbit64(v108)) + (v109 << 6);
                }
                uint64_t v111 = *(void *)(*(void *)(v100 + 48) + 8 * v106);
                id v112 = v77;
                id v113 = Logger.logObject.getter();
                os_log_type_t v114 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v113, v114))
                {
                  uint64_t v115 = swift_slowAlloc();
                  uint64_t v190 = swift_slowAlloc();
                  *(_DWORD *)uint64_t v115 = v170;
                  *(void *)(v115 + 4) = v111;
                  *(_WORD *)(v115 + 12) = 2080;
                  id v116 = [v112 bundleIdentifier];
                  id v117 = v177;
                  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

                  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
                  uint64_t v118 = v178;
                  uint64_t v119 = dispatch thunk of CustomStringConvertible.description.getter();
                  unint64_t v121 = v120;
                  ((void (*)(char *, uint64_t))v175->isa)(v117, v118);
                  *(void *)(v115 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v119, v121, &v190);

                  id v77 = v180;
                  uint64_t v1 = v176;
                  uint64_t v21 = v181;
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v113, v114, "[MOEventBundleStore.failedResources] hiding resource at index=%ld, bundleId: %s", (uint8_t *)v115, 0x16u);
                  swift_arrayDestroy();
                  uint64_t v100 = v179;
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                }
                unint64_t v104 = v186;
                uint64_t v99 = v187;
                if (v185)
                {
                  swift_bridgeObjectRetain();
                  uint64_t isa = _CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                  if (isa < 0)
                  {
                    __break(1u);
LABEL_142:
                    __break(1u);
LABEL_143:
                    __break(1u);
LABEL_144:
                    __break(1u);
LABEL_145:
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    swift_once();
                    goto LABEL_3;
                  }
                }
                else
                {
                  uint64_t isa = (uint64_t)v184[2].isa;
                }
                if ((v111 & 0x8000000000000000) == 0 && v111 < isa)
                {
                  if (v173)
                  {
                    id v123 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else
                  {
                    if ((Class)v111 >= v184[2].isa) {
                      goto LABEL_142;
                    }
                    id v123 = *(id *)(v172 + 8 * v111);
                  }
                  v124 = v123;
                  [v123 setPriorityScore:20000.0];
                }
              }
            }

            id v83 = v77;
            swift_bridgeObjectRetain();
            uint64_t v84 = v179;
            swift_bridgeObjectRetain();
            CGRect v85 = Logger.logObject.getter();
            os_log_type_t v86 = static os_log_type_t.default.getter();
            int v87 = v86;
            if (os_log_type_enabled(v85, v86))
            {
              uint64_t v88 = swift_slowAlloc();
              uint64_t v186 = v48 & 1;
              uint64_t v89 = v88;
              uint64_t v187 = swift_slowAlloc();
              uint64_t v190 = v187;
              *(_DWORD *)uint64_t v89 = v151;
              uint64_t v183 = v89 + 4;
              id v90 = [v83 bundleIdentifier];
              LODWORD(v185) = v87;
              id v91 = v90;
              os_log_t v184 = v85;
              unint64_t v92 = v177;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)();

              _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v93 = v178;
              uint64_t v94 = dispatch thunk of CustomStringConvertible.description.getter();
              unint64_t v96 = v95;
              ((void (*)(char *, uint64_t))v175->isa)(v92, v93);
              *(void *)&long long v191 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v94, v96, &v190);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              *(_WORD *)(v89 + 12) = 2048;
              uint64_t v97 = *(void *)(v84 + 16);
              swift_bridgeObjectRelease();
              *(void *)&long long v191 = v97;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v89 + 22) = 2048;
              swift_bridgeObjectRelease();
              *(void *)&long long v191 = v74;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              *(_WORD *)(v89 + 32) = 1024;
              LODWORD(v191) = v81;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v89 + 38) = 1024;
              LODWORD(v191) = v186;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v89 + 44) = 1024;
              LODWORD(v191) = v76;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              os_log_t v98 = v184;
              _os_log_impl((void *)&_mh_execute_header, v184, (os_log_type_t)v185, "[BundleEventStore.failedResources] exceeded resource prevalidation failure count, removing bundle id: %s, resource failure count:%ld out of total resource count:%ld, hasMoreInvalidsThanValids=%{BOOL}d, shouldForceDropBundle=%{BOOL}d, hasNotEnoughVariety=%{BOOL}d", (uint8_t *)v89, 0x32u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }
            int v126 = 0;
            uint64_t v21 = v181;
          }
          else
          {
            swift_bridgeObjectRelease();

LABEL_109:
            int v126 = 1;
          }
          unint64_t v127 = (unint64_t)MOEventBundle._orderedAssetReferences()();
          if (v127
            && (v127 >> 62
              ? (uint64_t v128 = _CocoaArrayWrapper.endIndex.getter())
              : (uint64_t v128 = *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10)),
                swift_bridgeObjectRelease(),
                !v128))
          {
            id v130 = v21;
            id v131 = Logger.logObject.getter();
            os_log_type_t v132 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v131, v132))
            {
              id v133 = (uint8_t *)swift_slowAlloc();
              uint64_t v190 = swift_slowAlloc();
              *(_DWORD *)id v133 = v155;
              uint64_t v187 = (uint64_t)(v133 + 4);
              id v134 = [v130 bundleIdentifier];
              id v135 = v177;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)();

              _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v136 = v178;
              uint64_t v137 = dispatch thunk of CustomStringConvertible.description.getter();
              unint64_t v139 = v138;
              ((void (*)(char *, uint64_t))v175->isa)(v135, v136);
              *(void *)&long long v191 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v137, v139, &v190);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              uint64_t v21 = v181;
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v131, v132, "[BundleEventStore] Dropping bundleId: %s due to no renderable resources", v133, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
          }
          else if (v126)
          {
            swift_beginAccess();
            id v129 = v21;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v193 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v193 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_endAccess();
            v159(0);
            int v157 = 1;
          }
          uint64_t v1 = Logger.logObject.getter();
          os_log_type_t v140 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v1, v140))
          {
            uint64_t v141 = swift_slowAlloc();
            *(_DWORD *)uint64_t v141 = v156;
            if (v193 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v142 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v142 = *(void *)((v193 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            *(void *)(v141 + 4) = v142;
            os_log_type_t v69 = v140;
            id v68 = v1;
            id v70 = "[BundleEventStore] Added n=%ld allowed bundles to store";
            id v71 = (uint8_t *)v141;
            uint32_t v72 = 12;
LABEL_127:
            _os_log_impl((void *)&_mh_execute_header, v68, v69, v70, v71, v72);
            swift_slowDealloc();

LABEL_129:
            unint64_t v18 = v169;
            goto LABEL_16;
          }
        }
        else
        {
          swift_bridgeObjectRelease();

          uint64_t v1 = Logger.logObject.getter();
          os_log_type_t v66 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v1, v66))
          {
            double v67 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)double v67 = 0;
            id v68 = v1;
            os_log_type_t v69 = v66;
            id v70 = "[MOEventBundleStore] Filtering out bundle due to missing prompts";
            id v71 = v67;
            uint32_t v72 = 2;
            goto LABEL_127;
          }
        }

        goto LABEL_129;
      }

LABEL_16:
      if (v18 == v167)
      {
        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t v143 = *(void (**)(uint64_t))(*(void *)v164 + 464);
        uint64_t v144 = swift_bridgeObjectRetain();
        v143(v144);
        MOEventBundleStore.serviceFetchHandlers()();
        if ((v157 & 1) == 0)
        {
          v145 = Logger.logObject.getter();
          os_log_type_t v146 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v145, v146))
          {
            v147 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v147 = 0;
            _os_log_impl((void *)&_mh_execute_header, v145, v146, "[BundleEventStore] No bundles added as suggestions", v147, 2u);
            swift_slowDealloc();
          }
        }
        swift_release();
        return swift_bridgeObjectRelease();
      }
    }
    long long v191 = 0u;
    long long v192 = 0u;
LABEL_33:
    outlined destroy of Any?((uint64_t)&v191, &demangling cache variable for type metadata for Any?);
    goto LABEL_34;
  }
LABEL_150:
  v148 = Logger.logObject.getter();
  os_log_type_t v149 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v148, v149))
  {
    id v150 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v150 = 0;
    _os_log_impl((void *)&_mh_execute_header, v148, v149, "[MOEventBundleStore] got nothing from fetchEventBundles", v150, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(void *))(*(void *)v164 + 464))(_swiftEmptyArrayStorage);
  MOEventBundleStore.serviceFetchHandlers()();
  return swift_release();
}

BOOL MOEventBundle.rejected.getter()
{
  id v1 = [v0 rankingDictionary];
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_11:
    outlined destroy of Any?((uint64_t)&v8, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v7), (v5 & 1) != 0))
  {
    outlined init with copy of Any(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  outlined destroy of AnyHashable((uint64_t)v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1)) {
    goto LABEL_11;
  }
  return (swift_dynamicCast() & 1) != 0 && v7[0] == 4;
}

void closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    if (a2)
    {
      if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      __swift_project_value_buffer(v11, (uint64_t)static MOAngelLogger.shared);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v13))
      {
        os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "[BundleEventStore] fetchEventBundles failed, retring...", v14, 2u);
        swift_slowDealloc();
      }

      id v15 = *(id *)(v10 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
      specialized MOEventBundleStore.allowedSourceTypes.getter();
      type metadata accessor for MOEventBundleSourceType(0);
      _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type MOEventBundleSourceType and conformance MOEventBundleSourceType, type metadata accessor for MOEventBundleSourceType);
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v10;
      v17[3] = a4;
      v17[4] = a5;
      aBlock[4] = partial apply for closure #1 in closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:);
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed NSNumber?, @guaranteed Error?) -> ();
      aBlock[3] = &block_descriptor_168;
      unint64_t v18 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      [v15 fetchEventBundlesWithAllowedSourceTypes:isa respectOnboardingDates:1 respectLearnFromThisApp:1 handler:v18];
      swift_release();
      _Block_release(v18);
    }
    else
    {
      if (a1)
      {
        id v19 = [a1 sourceAppBundleIds];
        if (v19)
        {
          id v20 = v19;
          uint64_t v21 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          (*(void (**)(uint64_t))(*(void *)v10 + 488))(v21);
        }
        id v22 = [a1 processedBundles];
        if (v22)
        {
          id v23 = v22;
          type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOEventBundle);
          a1 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          a1 = 0;
        }
      }
      a4(a1);
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t closure #1 in closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(id a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  id v5 = a1;
  if (a1)
  {
    id v7 = [a1 sourceAppBundleIds];
    if (v7)
    {
      long long v8 = v7;
      uint64_t v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(uint64_t))(*(void *)a3 + 488))(v9);
    }
    id v10 = [v5 processedBundles];
    if (v10)
    {
      uint64_t v11 = v10;
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOEventBundle);
      id v5 = (id)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      id v5 = 0;
    }
  }
  a4(v5);

  return swift_bridgeObjectRelease();
}

uint64_t MOEventBundleStore._failedResources(resources:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v34 = (char *)&v29 - v5;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = 0;
  id v37 = v12 + 2;
  v12[3] = 0;
  v12[4] = 0;
  os_log_type_t v13 = dispatch_group_create();
  dispatch_group_enter(v13);
  if (one-time initialization token for defaultQueue != -1) {
    swift_once();
  }
  uint64_t v29 = static MOEventBundleStore.defaultQueue;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  id v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = v13;
  v15[5] = v12;
  aBlock[4] = partial apply for closure #1 in MOEventBundleStore._failedResources(resources:);
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_54;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v13;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v38 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
  swift_release();
  swift_release();
  unint64_t v18 = v33;
  static DispatchTime.now()();
  id v19 = v34;
  + infix(_:_:)();
  uint64_t v20 = v36;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v35 + 8);
  v21(v18, v36);
  OS_dispatch_group.wait(timeout:)();
  v21(v19, v20);
  if (static DispatchTimeoutResult.== infix(_:_:)())
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.shared);
    id v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[BundleEventStore.failedResources] timed out while validating assets", v25, 2u);
      swift_slowDealloc();
      unint64_t v26 = v17;
      uint64_t v17 = v23;
    }
    else
    {
      unint64_t v26 = v23;
    }
  }
  swift_beginAccess();
  uint64_t v27 = v12[2];
  outlined copy of MOEventBundleStore.ResourceValidationResult?(v27);
  swift_release();
  return v27;
}

uint64_t closure #1 in MOEventBundleStore._failedResources(resources:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a3;
    *(void *)(v9 + 24) = a4;
    uint64_t v10 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, char, uint64_t), uint64_t))(*(void *)v8 + 624);
    id v11 = a3;
    swift_retain();
    v10(a2, partial apply for closure #1 in closure #1 in MOEventBundleStore._failedResources(resources:), v9);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t closure #1 in closure #1 in MOEventBundleStore._failedResources(resources:)(uint64_t a1, char a2, uint64_t a3, dispatch_group_t group, void *a5)
{
  dispatch_group_leave(group);
  swift_beginAccess();
  uint64_t v9 = a5[2];
  a5[2] = a1;
  a5[3] = a2 & 1;
  a5[4] = a3;
  outlined consume of MOEventBundleStore.ResourceValidationResult?(v9);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t MOEventBundleStore._failedResourcesAsync(resources:completion:)(unint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  v260 = a2;
  unint64_t v261 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  v255 = (char *)&v216 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v254 = (char *)&v216 - v7;
  uint64_t v262 = type metadata accessor for UUID();
  uint64_t v246 = *(void *)(v262 - 8);
  unint64_t v8 = *(void *)(v246 + 64);
  uint64_t v9 = __chkstk_darwin(v262);
  uint64_t v10 = __chkstk_darwin(v9);
  v243 = (char *)&v216 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  v244 = (char *)&v216 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  v240 = (char *)&v216 - v15;
  __chkstk_darwin(v14);
  v242 = (char *)&v216 - v16;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = &_swiftEmptySetSingleton;
  uint64_t v257 = v17 + 16;
  uint64_t v18 = swift_allocObject();
  uint64_t v266 = v18;
  *(void *)(v18 + 16) = &_swiftEmptySetSingleton;
  uint64_t v238 = v18 + 16;
  id v19 = (void *)swift_allocObject();
  *((unsigned char *)v19 + 16) = 0;
  uint64_t v20 = swift_allocObject();
  uint64_t v267 = v20;
  *(void *)(v20 + 16) = 0;
  v258 = (void *)(v20 + 16);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = 0;
  v263 = (void *)(v21 + 16);
  *(void *)&address.sa_data[6] = 0;
  *(void *)address.sa_data = 0;
  *(_WORD *)&address.sa_len = 528;
  uint64_t v22 = SCNetworkReachabilityCreateWithAddress(0, &address);
  v256 = v19;
  if (v22)
  {
    id v23 = v22;
    SCNetworkReachabilityFlags flags = 0;
    int v24 = SCNetworkReachabilityGetFlags(v22, &flags);

    if (v24) {
      BOOL v25 = (flags & 6) == 2;
    }
    else {
      BOOL v25 = 0;
    }
    id v19 = v256;
  }
  else
  {
    BOOL v25 = 0;
  }
  BOOL v253 = v25;
  int v26 = !v25;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  v247 = (void *)(v27 + 16);
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = 0;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v28;
  *(void *)(v29 + 24) = v27;
  uint64_t v30 = v267;
  *(void *)(v29 + 32) = v267;
  int v250 = v26;
  *(unsigned char *)(v29 + 40) = v26;
  *(void *)(v29 + 48) = v21;
  unint64_t v31 = v261;
  *(void *)(v29 + 56) = v261;
  *(void *)(v29 + 64) = v17;
  uint64_t v32 = v260;
  *(void *)(v29 + 72) = v19;
  *(void *)(v29 + 80) = v32;
  uint64_t v33 = v21;
  uint64_t v34 = v266;
  uint64_t v251 = v29;
  *(void *)(v29 + 88) = a3;
  *(void *)(v29 + 96) = v34;
  uint64_t v252 = v17;
  v241 = (char *)&v216 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v264 = v27;
  uint64_t v249 = a3;
  if (v31 >> 62) {
    goto LABEL_147;
  }
  uint64_t v35 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  while (1)
  {
    uint64_t v36 = v34;
    uint64_t v37 = v33;
    uint64_t v38 = (uint64_t)v28;
    uint64_t v33 = v264;
    unint64_t v39 = v261;
    uint64_t v269 = v35;
    if (!v35) {
      break;
    }
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    uint64_t v245 = 0;
    v233 = (uint64_t (**)(char *, uint64_t, uint64_t))(v246 + 48);
    v232 = (id *)(v246 + 32);
    CFStringRef v237 = @"MOStateOfMindMetaDataKeyStateOfMindID";
    v231 = (char **)(v246 + 16);
    v230 = (void *)(v246 + 8);
    v226 = &v271;
    unint64_t v228 = v8 + 7;
    unint64_t v8 = v39 & 0xC000000000000001;
    v227 = &v273;
    v259 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v246 + 56);
    CFStringRef v236 = @"MOWorkoutMetaDataKeyWorkoutID";
    CFStringRef v234 = @"MOMediaPlayMetaDataKeyPlayerBundleID";
    v224 = (char *)&v270 + 4;
    uint64_t v40 = 4;
    v235 = (char *)&type metadata for Any + 8;
    v229 = (char *)&type metadata for Swift.AnyObject + 8;
    *(void *)&long long v41 = 136315394;
    long long v223 = v41;
    *(void *)&long long v41 = 136315138;
    long long v225 = v41;
    v268 = v28;
    unint64_t v265 = v39 & 0xC000000000000001;
    uint64_t v248 = v37;
    while (1)
    {
      uint64_t v34 = v40 - 4;
      uint64_t v42 = v8 ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v39 + 8 * v40);
      uint64_t v28 = v42;
      uint64_t v43 = v40 - 3;
      if (__OFADD__(v34, 1)) {
        break;
      }
      switch((unint64_t)[v42 type])
      {
        case 2uLL:
          if (__OFADD__(*v258, 1)) {
            goto LABEL_146;
          }
          ++*v258;
          id v111 = MOResource.photoLocalIdentifier.getter();
          if (!v112)
          {

            goto LABEL_97;
          }
          specialized static MOSuggestionAssetPhotoLivePhotoVideosProvider.assetTypeFromIdentifier(_:)((uint64_t)v111, v112);
          int v114 = v113;
          swift_bridgeObjectRelease();
          if (v114 == 3) {
            goto LABEL_94;
          }
          goto LABEL_95;
        case 3uLL:
          if (!v253)
          {
            if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
              swift_once();
            }
            uint64_t v122 = type metadata accessor for Logger();
            __swift_project_value_buffer(v122, (uint64_t)static MOAngelLogger.shared);
            id v123 = Logger.logObject.getter();
            os_log_type_t v124 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v123, v124))
            {
              id v125 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v125 = 0;
              int v126 = v123;
              os_log_type_t v127 = v124;
              uint64_t v128 = "[BundleEventStore.failedResources] no internet";
              goto LABEL_92;
            }
LABEL_93:

LABEL_94:
            swift_beginAccess();
            specialized Set._Variant.insert(_:)(&v270, v40 - 4);
            swift_endAccess();
LABEL_95:

LABEL_96:
            uint64_t v30 = v267;
            goto LABEL_97;
          }
          id v63 = [v28 data];
          if (!v63) {
            goto LABEL_88;
          }
          unint64_t v64 = v63;
          uint64_t v65 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v67 = v66;

          id v68 = self;
          Class isa = Data._bridgeToObjectiveC()().super.isa;
          *(void *)&address.sa_len = 0;
          id v70 = [v68 JSONObjectWithData:isa options:0 error:&address];

          if (!v70)
          {
            id v132 = *(id *)&address.sa_len;
            _convertNSErrorToError(_:)();

            swift_willThrow();
            outlined consume of Data._Representation(v65, v67);
            swift_errorRelease();
            uint64_t v245 = 0;
LABEL_85:
            uint64_t v36 = v266;
            uint64_t v37 = v248;
LABEL_87:
            uint64_t v33 = v264;
LABEL_88:
            if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
              swift_once();
            }
            uint64_t v133 = type metadata accessor for Logger();
            __swift_project_value_buffer(v133, (uint64_t)static MOAngelLogger.shared);
            id v123 = Logger.logObject.getter();
            os_log_type_t v134 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v123, v134))
            {
              id v125 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v125 = 0;
              int v126 = v123;
              os_log_type_t v127 = v134;
              uint64_t v128 = "[BundleEventStore.failedResources] bundleId is null";
LABEL_92:
              _os_log_impl((void *)&_mh_execute_header, v126, v127, v128, v125, 2u);
              uint64_t v36 = v266;
              swift_slowDealloc();
            }
            goto LABEL_93;
          }
          id v71 = *(id *)&address.sa_len;
          _bridgeAnyObjectToAny(_:)();
          outlined consume of Data._Representation(v65, v67);
          swift_unknownObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_85;
          }
          uint64_t v72 = v270;
          uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v37 = v248;
          if (!*(void *)(v72 + 16)
            || (unint64_t v75 = specialized __RawDictionaryStorage.find<A>(_:)(v73, v74), (v76 & 1) == 0))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v36 = v266;
            goto LABEL_87;
          }
          uint64_t v77 = *(void *)(*(void *)(v72 + 56) + 8 * v75);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v270 = v77;
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_85;
          }
          swift_bridgeObjectRelease();
          id v78 = [v28 data];
          if (!v78) {
            goto LABEL_59;
          }
          uint64_t v79 = v78;
          uint64_t v80 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v82 = v81;

          *(void *)&v222.sa_data[6] = v82;
          Class v83 = Data._bridgeToObjectiveC()().super.isa;
          *(void *)&address.sa_len = 0;
          id v84 = [v68 JSONObjectWithData:v83 options:0 error:&address];

          if (!v84)
          {
            id v191 = *(id *)&address.sa_len;
            _convertNSErrorToError(_:)();

            swift_willThrow();
            outlined consume of Data._Representation(v80, *(unint64_t *)&v222.sa_data[6]);
            swift_errorRelease();
LABEL_73:

            uint64_t v245 = 0;
LABEL_74:
            uint64_t v36 = v266;
            uint64_t v30 = v267;
            uint64_t v37 = v248;
            goto LABEL_75;
          }
          id v85 = *(id *)&address.sa_len;
          _bridgeAnyObjectToAny(_:)();
          outlined consume of Data._Representation(v80, *(unint64_t *)&v222.sa_data[6]);
          swift_unknownObjectRelease();
          char v86 = swift_dynamicCast();
          uint64_t v37 = v248;
          if ((v86 & 1) == 0)
          {

            uint64_t v36 = v266;
            uint64_t v30 = v267;
LABEL_75:
            uint64_t v33 = v264;
            goto LABEL_97;
          }
          uint64_t v87 = v270;
          uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v36 = v266;
          uint64_t v33 = v264;
          if (!*(void *)(v87 + 16)
            || (unint64_t v90 = specialized __RawDictionaryStorage.find<A>(_:)(v88, v89), (v91 & 1) == 0))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_95;
          }
          uint64_t v92 = *(void *)(*(void *)(v87 + 56) + 8 * v90);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v270 = v92;
          if ((swift_dynamicCast() & 1) == 0)
          {

            uint64_t v36 = v266;
            goto LABEL_96;
          }
          uint64_t v36 = v266;
          uint64_t v30 = v267;
          unint64_t v8 = v265;
          if (*(void *)&address.sa_len == *(void *)(v239 + 16)
            && *(void *)&address.sa_data[6] == *(void *)(v239 + 24)
            || (sockaddr v222 = address, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
          {

            swift_bridgeObjectRelease();
            goto LABEL_12;
          }
          id v192 = objc_allocWithZone((Class)LSApplicationRecord);
          uint64_t v193 = *(void *)&v222.sa_data[6];
          swift_bridgeObjectRetain();
          uint64_t v194 = v245;
          id v195 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(*(uint64_t *)&v222.sa_len, v193, 1);
          if (v194)
          {
            swift_errorRelease();
            double v196 = 0;
            id v197 = 0;
            uint64_t v245 = 0;
          }
          else
          {
            uint64_t v245 = 0;
            id v197 = v195;
            if (v195)
            {
              id v198 = [v195 localizedName];
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              double v196 = v199;
            }
            else
            {
              double v196 = 0;
            }
          }
          Swift::Int v200 = *(void *)&v222.sa_len;
          Swift::Int v201 = *(void *)&v222.sa_data[6];
          sockaddr address = v222;
          uint64_t v270 = 0x6C7070612E6D6F63;
          unint64_t v271 = 0xEA00000000002E65;
          lazy protocol witness table accessor for type String and conformance String();
          if ((StringProtocol.contains<A>(_:)() & 1) == 0)
          {
            swift_beginAccess();
            swift_bridgeObjectRetain();
            specialized Set._Variant.insert(_:)(&v270, v200, v201);
            swift_endAccess();
            swift_bridgeObjectRelease();
          }
          double v202 = self;
          swift_bridgeObjectRetain();
          NSString v203 = String._bridgeToObjectiveC()();
          id v204 = [v202 applicationWithBundleIdentifier:v203];

          swift_bridgeObjectRelease();
          LODWORD(v203) = [v204 isHidden];

          if (v203)
          {
            v220 = v196;
            id v221 = v197;
            swift_beginAccess();
            specialized Set._Variant.insert(_:)(&v270, v40 - 4);
            swift_endAccess();
            if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
              swift_once();
            }
            uint64_t v205 = type metadata accessor for Logger();
            __swift_project_value_buffer(v205, (uint64_t)static MOAngelLogger.shared);
            unint64_t v206 = *(void *)&v222.sa_data[6];
            swift_bridgeObjectRetain_n();
            objc_super v207 = Logger.logObject.getter();
            os_log_type_t v208 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v207, v208))
            {
              uint64_t v209 = swift_slowAlloc();
              *(void *)&address.sa_len = swift_slowAlloc();
              *(_DWORD *)uint64_t v209 = v223;
              swift_bridgeObjectRetain();
              uint64_t v270 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(*(uint64_t *)&v222.sa_len, v206, (uint64_t *)&address);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v209 + 12) = 1024;
              LODWORD(v270) = 1;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl((void *)&_mh_execute_header, v207, v208, "[BundleEventStore.failedResources] bundleId %s, shouldDropApp=%{BOOL}d", (uint8_t *)v209, 0x12u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            id v197 = v221;
            double v196 = v220;
          }
          if (v196)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            id v221 = v197;
            if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
              swift_once();
            }
            uint64_t v210 = type metadata accessor for Logger();
            __swift_project_value_buffer(v210, (uint64_t)static MOAngelLogger.shared);
            swift_bridgeObjectRetain();
            CGRect v211 = Logger.logObject.getter();
            os_log_type_t v212 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v211, v212))
            {
              CGRect v213 = (uint8_t *)swift_slowAlloc();
              *(void *)&address.sa_len = swift_slowAlloc();
              *(_DWORD *)CGRect v213 = v225;
              v220 = (char *)(v213 + 4);
              unint64_t v214 = *(void *)&v222.sa_data[6];
              swift_bridgeObjectRetain();
              uint64_t v270 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(*(uint64_t *)&v222.sa_len, v214, (uint64_t *)&address);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v211, v212, "[BundleEventStore.failedResources] app name is nil for bundleId %s", v213, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            swift_beginAccess();
            specialized Set._Variant.insert(_:)(&v270, v40 - 4);
            swift_endAccess();
          }
          uint64_t v36 = v266;
          uint64_t v30 = v267;
          uint64_t v37 = v248;
          uint64_t v33 = v264;
          unint64_t v39 = v261;
LABEL_97:
          unint64_t v8 = v265;
LABEL_12:
          ++v40;
          uint64_t v38 = (uint64_t)v268;
          if (v43 == v269) {
            goto LABEL_143;
          }
          break;
        case 6uLL:
        case 0xCuLL:

          if (__OFADD__(*v263, 1)) {
            goto LABEL_145;
          }
          ++*v263;
          goto LABEL_12;
        case 0xAuLL:
          id v93 = [v28 data];
          if (!v93)
          {
            uint64_t v30 = v267;
            uint64_t v62 = (uint64_t)v254;
            goto LABEL_82;
          }
          uint64_t v94 = v93;
          uint64_t v95 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v97 = v96;

          os_log_t v98 = self;
          Class v99 = Data._bridgeToObjectiveC()().super.isa;
          *(void *)&address.sa_len = 0;
          id v100 = [v98 JSONObjectWithData:v99 options:0 error:&address];

          if (!v100)
          {
            id v130 = *(id *)&address.sa_len;
            _convertNSErrorToError(_:)();

            swift_willThrow();
            outlined consume of Data._Representation(v95, v97);
            swift_errorRelease();
            uint64_t v245 = 0;
LABEL_71:
            uint64_t v62 = (uint64_t)v254;
            uint64_t v36 = v266;
            uint64_t v30 = v267;
            uint64_t v33 = v264;
            unint64_t v8 = v265;
            goto LABEL_82;
          }
          id v101 = *(id *)&address.sa_len;
          _bridgeAnyObjectToAny(_:)();
          outlined consume of Data._Representation(v95, v97);
          swift_unknownObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_71;
          }
          uint64_t v102 = v270;
          uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v105 = v254;
          uint64_t v36 = v266;
          uint64_t v33 = v264;
          if (!*(void *)(v102 + 16)
            || (unint64_t v106 = specialized __RawDictionaryStorage.find<A>(_:)(v103, v104), (v107 & 1) == 0))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_81;
          }
          uint64_t v108 = *(void *)(*(void *)(v102 + 56) + 8 * v106);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v270 = v108;
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v36 = v266;
LABEL_81:
            uint64_t v30 = v267;
            unint64_t v8 = v265;
            uint64_t v62 = (uint64_t)v105;
            uint64_t v37 = v248;
LABEL_82:
            (*v259)(v62, 1, 1, v262);
            goto LABEL_83;
          }
          UUID.init(uuidString:)();
          swift_bridgeObjectRelease();
          uint64_t v109 = v262;
          int v110 = (*v233)(v105, 1, v262);
          uint64_t v36 = v266;
          if (v110 == 1)
          {
            uint64_t v30 = v267;
            unint64_t v8 = v265;
            uint64_t v62 = (uint64_t)v105;
            uint64_t v37 = v248;
            goto LABEL_83;
          }
          v147 = v242;
          id v221 = *v232;
          ((void (*)(char *, char *, uint64_t))v221)(v242, v105, v109);
          type metadata accessor for MOSuggestionAssetWorkoutProvider();
          uint64_t inited = swift_initStackObject();
          *(void *)(inited + 16) = -1;
          id v149 = [objc_allocWithZone((Class)HKHealthStore) init];
          *(void *)&v222.sa_data[6] = inited;
          *(void *)(inited + 24) = v149;
          uint64_t v150 = v109;
          if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v151 = type metadata accessor for Logger();
          __swift_project_value_buffer(v151, (uint64_t)static MOAngelLogger.shared);
          v152 = v240;
          v220 = *v231;
          ((void (*)(char *, char *, uint64_t))v220)(v240, v147, v109);
          id v153 = Logger.logObject.getter();
          os_log_type_t v154 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v153, v154))
          {
            long long v155 = (uint8_t *)swift_slowAlloc();
            unint64_t v219 = swift_slowAlloc();
            *(void *)&address.sa_len = v219;
            v218 = v155;
            *(_DWORD *)long long v155 = v225;
            _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
            os_log_t v217 = v153;
            uint64_t v156 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v270 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v156, v157, (uint64_t *)&address);
            uint64_t v150 = v262;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(void *)&v222.sa_len = *v230;
            (*(void (**)(char *, uint64_t))&v222.sa_len)(v152, v150);
            os_log_t v158 = v217;
            _os_log_impl((void *)&_mh_execute_header, v217, v154, "[MOEventBundleStore.failedResources] calling HK, id=%s", v218, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            *(void *)&v222.sa_len = *v230;
            (*(void (**)(char *, uint64_t))&v222.sa_len)(v152, v150);
          }
          uint64_t v176 = v242;
          if (__OFADD__(*v247, 1)) {
            goto LABEL_149;
          }
          ++*v247;
          ((void (*)(char *, char *, uint64_t))v220)(v244, v176, v150);
          unint64_t v177 = (*(unsigned __int8 *)(v246 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v246 + 80);
          v220 = (char *)((v177 + v228) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v178 = (unint64_t)(v220 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v219 = (v178 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v179 = v150;
          v218 = (uint8_t *)((v178 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v180 = (unint64_t)(v218 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v181 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint64_t))v221)(v181 + v177, v244, v179);
          *(void *)&v220[v181] = v256;
          *(void *)(v181 + v178) = v252;
          unint64_t v182 = v181 + v219;
          *(void *)unint64_t v182 = v34;
          *(unsigned char *)(v182 + 8) = v250;
          *(void *)&v218[v181] = v268;
          uint64_t v183 = (uint64_t (**)())(v181 + v180);
          os_log_t v184 = (uint64_t (*)())v251;
          *uint64_t v183 = partial apply for closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
          v183[1] = v184;
          unint64_t v185 = self;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v167 = v242;
          Class v186 = UUID._bridgeToObjectiveC()().super.isa;
          id v169 = [v185 predicateForObjectWithUUID:v186];

          id v187 = [self workoutType];
          uint64_t v188 = swift_allocObject();
          *(void *)(v188 + 16) = partial apply for closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
          *(void *)(v188 + 24) = v181;
          id v189 = objc_allocWithZone((Class)HKSampleQuery);
          v275 = partial apply for closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:);
          uint64_t v276 = v188;
          *(void *)&address.sa_len = _NSConcreteStackBlock;
          *(void *)&address.sa_data[6] = 1107296256;
          v273 = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed HKSampleQuery, @guaranteed [HKSample]?, @guaranteed Error?) -> ();
          v274 = &block_descriptor_90;
          uint64_t v190 = _Block_copy(&address);
          swift_retain();
          id v174 = [v189 initWithSampleType:v187 predicate:v169 limit:1 sortDescriptors:0 resultsHandler:v190];

          _Block_release(v190);
          swift_release();
          id v175 = *(void **)(*(void *)&v222.sa_data[6] + 24);
          goto LABEL_114;
        case 0xBuLL:
          id v115 = [v28 contactIdentifier];
          if (!v115)
          {

            uint64_t v30 = v267;
            goto LABEL_12;
          }
          id v116 = v115;
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v117 = [objc_allocWithZone((Class)CNContactStore) init];
          NSString v118 = String._bridgeToObjectiveC()();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
          Class v119 = Array._bridgeToObjectiveC()().super.isa;
          *(void *)&address.sa_len = 0;
          id v120 = [v117 unifiedContactWithIdentifier:v118 keysToFetch:v119 error:&address];

          if (!v120)
          {
            id v131 = *(id *)&address.sa_len;
            _convertNSErrorToError(_:)();

            swift_willThrow();
            swift_errorRelease();
            swift_bridgeObjectRelease();
            swift_beginAccess();
            specialized Set._Variant.insert(_:)(&v270, v40 - 4);
            swift_endAccess();
            goto LABEL_73;
          }
          id v121 = *(id *)&address.sa_len;

          swift_bridgeObjectRelease();
LABEL_59:

          goto LABEL_74;
        case 0x10uLL:
          id v44 = [v28 data];
          if (!v44)
          {
            uint64_t v30 = v267;
            goto LABEL_79;
          }
          uint64_t v45 = v44;
          uint64_t v46 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v48 = v47;

          uint64_t v49 = self;
          Class v50 = Data._bridgeToObjectiveC()().super.isa;
          *(void *)&address.sa_len = 0;
          id v51 = [v49 JSONObjectWithData:v50 options:0 error:&address];

          if (!v51)
          {
            id v129 = *(id *)&address.sa_len;
            _convertNSErrorToError(_:)();

            swift_willThrow();
            outlined consume of Data._Representation(v46, v48);
            swift_errorRelease();
            uint64_t v245 = 0;
LABEL_69:
            uint64_t v36 = v266;
            uint64_t v30 = v267;
            uint64_t v33 = v264;
            goto LABEL_78;
          }
          id v52 = *(id *)&address.sa_len;
          _bridgeAnyObjectToAny(_:)();
          outlined consume of Data._Representation(v46, v48);
          swift_unknownObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
          if ((swift_dynamicCast() & 1) == 0) {
            goto LABEL_69;
          }
          uint64_t v53 = v270;
          uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v36 = v266;
          uint64_t v33 = v264;
          if (!*(void *)(v53 + 16)
            || (unint64_t v56 = specialized __RawDictionaryStorage.find<A>(_:)(v54, v55), (v57 & 1) == 0))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_77;
          }
          uint64_t v58 = *(void *)(*(void *)(v53 + 56) + 8 * v56);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v270 = v58;
          if ((swift_dynamicCast() & 1) == 0)
          {
            uint64_t v36 = v266;
LABEL_77:
            uint64_t v30 = v267;
LABEL_78:
            unint64_t v8 = v265;
LABEL_79:
            uint64_t v62 = (uint64_t)v255;
            (*v259)((uint64_t)v255, 1, 1, v262);
LABEL_83:

            outlined destroy of Any?(v62, &demangling cache variable for type metadata for UUID?);
            goto LABEL_12;
          }
          id v59 = v255;
          UUID.init(uuidString:)();
          swift_bridgeObjectRelease();
          uint64_t v60 = v262;
          int v61 = (*v233)(v59, 1, v262);
          uint64_t v36 = v266;
          if (v61 == 1)
          {
            uint64_t v30 = v267;
            unint64_t v8 = v265;
            uint64_t v62 = (uint64_t)v255;
            goto LABEL_83;
          }
          id v135 = v243;
          id v221 = *v232;
          ((void (*)(char *, char *, uint64_t))v221)(v243, v255, v60);
          type metadata accessor for MOSuggestionAssetStateOfMindProvider();
          uint64_t v136 = swift_initStackObject();
          id v137 = [objc_allocWithZone((Class)HKHealthStore) init];
          *(void *)&v222.sa_data[6] = v136;
          *(void *)(v136 + 16) = v137;
          uint64_t v138 = v60;
          if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v139 = type metadata accessor for Logger();
          __swift_project_value_buffer(v139, (uint64_t)static MOAngelLogger.shared);
          os_log_type_t v140 = v241;
          v220 = *v231;
          ((void (*)(char *, char *, uint64_t))v220)(v241, v135, v60);
          uint64_t v141 = Logger.logObject.getter();
          os_log_type_t v142 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v141, v142))
          {
            uint64_t v143 = (uint8_t *)swift_slowAlloc();
            unint64_t v219 = swift_slowAlloc();
            *(void *)&address.sa_len = v219;
            v218 = v143;
            *(_DWORD *)uint64_t v143 = v225;
            _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
            os_log_t v217 = v141;
            uint64_t v144 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v270 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v144, v145, (uint64_t *)&address);
            uint64_t v138 = v262;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            *(void *)&v222.sa_len = *v230;
            (*(void (**)(char *, uint64_t))&v222.sa_len)(v140, v138);
            os_log_t v146 = v217;
            _os_log_impl((void *)&_mh_execute_header, v217, v142, "[MOEventBundleStore.failedResources] calling HK for state of mind, id=%s", v218, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            *(void *)&v222.sa_len = *v230;
            (*(void (**)(char *, uint64_t))&v222.sa_len)(v140, v138);
          }
          v159 = v243;
          if (__OFADD__(*v247, 1))
          {
            __break(1u);
LABEL_149:
            __break(1u);
          }
          ++*v247;
          ((void (*)(char *, char *, uint64_t))v220)(v244, v159, v138);
          unint64_t v160 = (*(unsigned __int8 *)(v246 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v246 + 80);
          v220 = (char *)((v160 + v228) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v219 = (unint64_t)(v220 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v161 = v138;
          v218 = (uint8_t *)((v219 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v162 = (unint64_t)(v218 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v163 = swift_allocObject();
          ((void (*)(unint64_t, char *, uint64_t))v221)(v163 + v160, v244, v161);
          *(void *)&v220[v163] = v256;
          *(void *)(v163 + v219) = v252;
          *(void *)&v218[v163] = v34;
          *(void *)(v163 + v162) = v268;
          uint64_t v164 = (uint64_t (**)())(v163 + ((v162 + 15) & 0xFFFFFFFFFFFFFFF8));
          unint64_t v165 = (uint64_t (*)())v251;
          *uint64_t v164 = partial apply for closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
          v164[1] = v165;
          unint64_t v166 = self;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v167 = v243;
          Class v168 = UUID._bridgeToObjectiveC()().super.isa;
          id v169 = [v166 predicateForObjectWithUUID:v168];

          id v170 = [self stateOfMindType];
          uint64_t v171 = swift_allocObject();
          *(void *)(v171 + 16) = partial apply for closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
          *(void *)(v171 + 24) = v163;
          id v172 = objc_allocWithZone((Class)HKSampleQuery);
          v275 = partial apply for closure #1 in MOSuggestionAssetStateOfMindProvider.getStateOfMind(stateOfMindUUID:completion:);
          uint64_t v276 = v171;
          *(void *)&address.sa_len = _NSConcreteStackBlock;
          *(void *)&address.sa_data[6] = 1107296256;
          v273 = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed HKSampleQuery, @guaranteed [HKSample]?, @guaranteed Error?) -> ();
          v274 = &block_descriptor_81;
          unint64_t v173 = _Block_copy(&address);
          swift_retain();
          id v174 = [v172 initWithSampleType:v170 predicate:v169 limit:1 sortDescriptors:0 resultsHandler:v173];

          _Block_release(v173);
          swift_release();
          id v175 = *(void **)(*(void *)&v222.sa_data[6] + 16);
LABEL_114:
          [v175 executeQuery:v174];

          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))&v222.sa_len)(v167, v262);
          goto LABEL_74;
        default:

          goto LABEL_12;
      }
    }
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_143:
  swift_bridgeObjectRelease();
  closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(v38, v33, v30, v250, v37, v39, v252, v256, v260, v249, v36);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, unint64_t a6, uint64_t a7, void *a8, void (*a9)(uint64_t, uint64_t, uint64_t), uint64_t a10, uint64_t a11)
{
  id v19 = (void (*)(uint64_t, uint64_t, uint64_t))(a2 + 16);
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  if (v20 == *(void *)(a2 + 16))
  {
    uint64_t v22 = (uint64_t *)(a7 + 16);
    swift_beginAccess();
    BOOL v23 = *(void *)(a3 + 16) == 1;
    swift_beginAccess();
    int v24 = *(unsigned char **)(a5 + 16);
    if (a6 >> 62)
    {
      swift_bridgeObjectRetain();
      BOOL v25 = (unsigned char *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      BOOL v25 = *(unsigned char **)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_beginAccess();
    uint64_t v26 = *(void *)(*v22 + 16);
    uint64_t v27 = &v25[-v26];
    if (__OFSUB__(v25, v26))
    {
      __break(1u);
    }
    else
    {
      id v19 = a9;
      BOOL v25 = a8 + 2;
      a8 = (void *)(a11 + 16);
      if (v24 == v27)
      {
        if ((a4 & 1) == 0) {
          goto LABEL_13;
        }
      }
      else if ((v23 & a4 & 1) == 0)
      {
LABEL_13:
        swift_beginAccess();
        uint64_t v32 = *v22;
        swift_beginAccess();
        uint64_t v33 = *v25;
        swift_beginAccess();
        uint64_t v34 = *a8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19(v32, v33, v34);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (serverManager._clientConnections == (NSMutableDictionary *)-1)
      {
LABEL_10:
        uint64_t v28 = type metadata accessor for Logger();
        __swift_project_value_buffer(v28, (uint64_t)static MOAngelLogger.shared);
        uint64_t v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v29, v30))
        {
          uint64_t v31 = swift_slowAlloc();
          *(_DWORD *)uint64_t v31 = 67109376;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v31 + 8) = 1024;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "[BundleEventStore.failedResources] forceDrop, shouldForceDropPhoto=%{BOOL}d, shouldForceDropSingleMap=%{BOOL}d", (uint8_t *)v31, 0xEu);
          swift_slowDealloc();
        }

        swift_beginAccess();
        *BOOL v25 = 1;
        goto LABEL_13;
      }
    }
    swift_once();
    goto LABEL_10;
  }
  return result;
}

uint64_t closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v51 = a8;
  id v52 = a1;
  uint64_t v54 = a4;
  uint64_t v55 = a7;
  int v50 = a6;
  uint64_t v49 = a5;
  uint64_t v53 = a3;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  __chkstk_darwin(v10);
  uint64_t v58 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DispatchQoS();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  unint64_t v56 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v13);
  unint64_t v48 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v45 - v17;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  __swift_project_value_buffer(v19, (uint64_t)static MOAngelLogger.shared);
  unint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v47(v18, a2, v13);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v46 = v15;
    BOOL v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v62 = a2;
    aBlock[0] = v24;
    *(_DWORD *)BOOL v23 = 136315138;
    uint64_t v45 = v23 + 4;
    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    id v63 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v25, v26, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "[MOEventBundleStore.failedResources] returning from HK, id=%s", v23, 0xCu);
    swift_arrayDestroy();
    a2 = v62;
    swift_slowDealloc();
    uint64_t v15 = v46;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  }

  uint64_t v62 = a9;
  if (one-time initialization token for defaultQueue != -1) {
    swift_once();
  }
  uint64_t v46 = static MOEventBundleStore.defaultQueue;
  uint64_t v27 = v48;
  v47(v48, a2, v13);
  unint64_t v28 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v29 = (v15 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = (void (*)(char *, uint64_t, uint64_t))((v31 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = (v31 + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v33 + v28, v27, v13);
  uint64_t v34 = v52;
  *(void *)(v33 + v29) = v52;
  uint64_t v35 = v54;
  *(void *)(v33 + v30) = v53;
  *(void *)(v33 + v31) = v35;
  uint64_t v36 = (char *)v47 + v33;
  *(void *)uint64_t v36 = v49;
  v36[8] = v50 & 1;
  *(void *)(v33 + v32) = v55;
  uint64_t v37 = (void *)(v33 + ((v32 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v38 = v62;
  *uint64_t v37 = v51;
  v37[1] = v38;
  aBlock[4] = (uint64_t)partial apply for closure #1 in closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
  aBlock[5] = v33;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = (uint64_t)&block_descriptor_123;
  unint64_t v39 = _Block_copy(aBlock);
  id v40 = v34;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  long long v41 = v56;
  static DispatchQoS.unspecified.getter();
  id v63 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  uint64_t v42 = v58;
  uint64_t v43 = v61;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v39);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v42, v43);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v41, v59);
  return swift_release();
}

uint64_t closure #1 in closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t (*a8)(void))
{
  uint64_t v34 = a3;
  uint64_t v35 = a7;
  id v36 = a2;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  __swift_project_value_buffer(v17, (uint64_t)static MOAngelLogger.shared);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v32 = a5;
    os_log_type_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    int v31 = a6;
    v39[0] = v22;
    uint64_t v33 = a8;
    *(_DWORD *)os_log_type_t v21 = 136315138;
    uint64_t v30 = a4 + 16;
    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    v37[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, v39);
    a8 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "[MOEventBundleStore.failedResources] back on queue, id=%s", v21, 0xCu);
    swift_arrayDestroy();
    LOBYTE(a6) = v31;
    swift_slowDealloc();
    a5 = v32;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  uint64_t v25 = (void *)(v35 + 16);
  if (v36)
  {
    id v26 = v36;
    uint64_t v27 = (void *)HKWorkout.distanceQuantityTypeForWorkoutType()();
    if (v27)
    {

      if (a6)
      {
        swift_beginAccess();
        specialized Set._Variant.insert(_:)(v37, a5);
        swift_endAccess();
      }
    }
  }
  else
  {
    unint64_t v28 = (unsigned char *)(v34 + 16);
    swift_beginAccess();
    *unint64_t v28 = 1;
    swift_beginAccess();
    specialized Set._Variant.insert(_:)(&v38, a5);
    swift_endAccess();
  }
  uint64_t result = swift_beginAccess();
  if (__OFADD__(*v25, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v25;
    return a8(result);
  }
  return result;
}

uint64_t closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v55 = a6;
  uint64_t v56 = a8;
  uint64_t v50 = a5;
  uint64_t v51 = a7;
  uint64_t v53 = a3;
  uint64_t v54 = a4;
  id v52 = a1;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v61 = *(void *)(v9 - 8);
  uint64_t v62 = v9;
  __chkstk_darwin(v9);
  uint64_t v59 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for DispatchQoS();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v57 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v49 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v45 - v16;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  __swift_project_value_buffer(v18, (uint64_t)static MOAngelLogger.shared);
  unint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v48(v17, a2, v12);
  os_log_type_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v46 = v14;
    uint64_t v22 = (uint8_t *)v21;
    aBlock[0] = swift_slowAlloc();
    uint64_t v47 = a2;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v45 = v22 + 4;
    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    id v63 = (void *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v23, v24, aBlock);
    a2 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "[MOEventBundleStore.failedResources] returning from HK for state of mind, id=%s", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v14 = v46;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  }

  if (one-time initialization token for defaultQueue != -1) {
    swift_once();
  }
  uint64_t v47 = static MOEventBundleStore.defaultQueue;
  uint64_t v25 = v49;
  v48(v49, a2, v12);
  unint64_t v26 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v27 = (v14 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (void (*)(char *, uint64_t, uint64_t))v12;
  unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  (*(void (**)(unint64_t, char *, void))(v13 + 32))(v32 + v26, v25, v48);
  uint64_t v34 = v52;
  uint64_t v33 = v53;
  *(void *)(v32 + v27) = v52;
  *(void *)(v32 + v28) = v33;
  uint64_t v35 = v55;
  *(void *)(v32 + v29) = v54;
  uint64_t v36 = v51;
  *(void *)(v32 + v30) = v50;
  *(void *)(v32 + v31) = v35;
  uint64_t v37 = (void *)(v32 + ((v31 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v38 = v56;
  *uint64_t v37 = v36;
  v37[1] = v38;
  aBlock[4] = (uint64_t)partial apply for closure #1 in closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:);
  aBlock[5] = v32;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = (uint64_t)&block_descriptor_129;
  unint64_t v39 = _Block_copy(aBlock);
  id v40 = v34;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  long long v41 = v57;
  static DispatchQoS.unspecified.getter();
  id v63 = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  uint64_t v42 = v59;
  uint64_t v43 = v62;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v39);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v43);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v60);
  return swift_release();
}

uint64_t closure #1 in closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t a8)
{
  uint64_t v29 = a2;
  uint64_t v30 = a6;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  __swift_project_value_buffer(v16, (uint64_t)static MOAngelLogger.shared);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    v25[0] = a3;
    os_log_type_t v20 = (uint8_t *)v19;
    v33[0] = swift_slowAlloc();
    v25[1] = a8;
    unint64_t v26 = a7;
    *(_DWORD *)os_log_type_t v20 = 136315138;
    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v21, v22, v33);
    a7 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "[MOEventBundleStore.failedResources] back on queue for state of mind, id=%s", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v25[0];
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  uint64_t v23 = (void *)(v30 + 16);
  if (!v29)
  {
    swift_beginAccess();
    *(unsigned char *)(a3 + 16) = 1;
    swift_beginAccess();
    specialized Set._Variant.insert(_:)(&v32, v28);
    swift_endAccess();
  }
  uint64_t result = swift_beginAccess();
  if (__OFADD__(*v23, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v23;
    return a7(result);
  }
  return result;
}

void *static MOEventBundleStore.filterBundlesForPublicUI(presentationDetails:bundles:)(uint64_t a1, char a2, unint64_t a3)
{
  unint64_t v3 = a3;
  if (a2)
  {
    swift_bridgeObjectRetain();
    return (void *)v3;
  }
  if (!(a3 >> 62))
  {
    uint64_t v4 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_4;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = (uint64_t)result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_4:
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      unint64_t v8 = v7;
      if ([v7 interfaceType] == (id)11)
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall MOEventBundleStore.softRefreshDidComplete()()
{
  uint64_t v1 = v0;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[MOEventBundleStore] returning from softRefreshEvents", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = (*(uint64_t (**)(void))(*(void *)v1 + 416))(0);
  uint64_t v15 = v1;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 552))(v6);
  uint64_t v7 = *(void *)(v16 + 16);
  if (v7)
  {
    uint64_t v8 = v16 + 40;
    do
    {
      uint64_t v9 = *(void (**)(void))(v8 - 8);
      swift_retain();
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "[MOEventBundleStore] executing completions that rely on soft refresh finish", v12, 2u);
        swift_slowDealloc();
      }

      v9();
      swift_release();
      v8 += 16;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(*(void *)v15 + 568))(v17);
  *uint64_t v14 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v13(v17, 0);
}

uint64_t MOEventBundleStore.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__allBundles;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  unint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__privateUIBundles, v2);
  v3(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__publicUIBundles, v2);
  uint64_t v4 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__isLoading;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t MOEventBundleStore.__deallocating_deinit()
{
  MOEventBundleStore.deinit();

  return swift_deallocClassInstance();
}

uint64_t MOEventBundleStore.init()()
{
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<Bool>);
  uint64_t v1 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + 16) = 0xD000000000000029;
  *(void *)(v0 + 24) = 0x80000001001E1270;
  uint64_t v8 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__allBundles;
  uint64_t v16 = _swiftEmptyArrayStorage;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [MOEventBundleWithAsset]);
  Published.init(initialValue:)();
  uint64_t v9 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v9(v8, v7, v4);
  uint64_t v10 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__privateUIBundles;
  uint64_t v16 = _swiftEmptyArrayStorage;
  Published.init(initialValue:)();
  v9(v10, v7, v4);
  uint64_t v11 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__publicUIBundles;
  uint64_t v16 = _swiftEmptyArrayStorage;
  Published.init(initialValue:)();
  v9(v11, v7, v4);
  uint64_t v12 = v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore__isLoading;
  LOBYTE(v16) = 0;
  Published.init(initialValue:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v12, v3, v15);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isFirstRefresh) = 1;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningSoftRefresh) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_isRunningDatabaseUpgrade) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_latestRawBundles) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_sourceThirdPartyBundleIds) = &_swiftEmptySetSingleton;
  *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_failedResources) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_pendingHandlers) = _swiftEmptyArrayStorage;
  *(void *)(v0 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_softRefreshHandlers) = _swiftEmptyArrayStorage;
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager;
  *(void *)(v0 + v13) = [objc_allocWithZone((Class)MOPromptManager) init];
  return v0;
}

uint64_t protocol witness for ObservableObject.objectWillChange.getter in conformance MOEventBundleStore@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MOEventBundleStore();
  uint64_t result = ObservableObject<>.objectWillChange.getter();
  *a1 = result;
  return result;
}

BOOL MOEventBundle.hasPhotos.getter()
{
  id v1 = [v0 resources];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOResource);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v3 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [v6 type];

      BOOL v11 = v9 == (id)2;
      BOOL v10 = v9 == (id)2;
      ++v5;
      BOOL v11 = v11 || v8 == v4;
      if (v11) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  BOOL v10 = 0;
LABEL_19:
  swift_bridgeObjectRelease_n();
  return v10;
}

BOOL MOEventBundle.accepted.getter()
{
  id v1 = [v0 rankingDictionary];
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_11:
    outlined destroy of Any?((uint64_t)&v8, &demangling cache variable for type metadata for Any?);
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v7), (v5 & 1) != 0))
  {
    outlined init with copy of Any(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  outlined destroy of AnyHashable((uint64_t)v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1)) {
    goto LABEL_11;
  }
  return (swift_dynamicCast() & 1) != 0 && v7[0] != 3;
}

uint64_t MOEvent.interfaceCategory.getter()
{
  id v1 = [v0 category];
  if (v1 == (id)5 || v1 == (id)17) {
    return 5;
  }

  return (uint64_t)[v0 category];
}

uint64_t sub_100159744@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 192))();
  *a2 = result;
  return result;
}

uint64_t sub_100159790(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 200);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1001597E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 240))();
  *a2 = result;
  return result;
}

uint64_t sub_100159830(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 248);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100159884@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 288))();
  *a2 = result;
  return result;
}

uint64_t sub_1001598D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 296);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100159934@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 336))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10015998C(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 344))(*a1);
}

uint64_t partial apply for closure #1 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)()
{
  return partial apply for closure #1 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)((uint64_t (*)(void, void, void, void, void))closure #1 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:));
}

uint64_t sub_1001599F8()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t partial apply for closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)()
{
  return partial apply for closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)((uint64_t (*)(void, void, void, void, void, void, void))closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:));
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t sub_100159A70()
{
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t partial apply for closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)()
{
  return partial apply for closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)((uint64_t (*)(void, void, void, void, void, void, void))closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:));
}

uint64_t partial apply for closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t objectdestroyTm_0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)()
{
  return partial apply for closure #1 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)((uint64_t (*)(void, void, void, void, void))closure #1 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:));
}

uint64_t partial apply for closure #1 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_100159B70()
{
  if (*(void *)(v0 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100159BB4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100159BEC()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #1 in MOEventBundleStore._failedResources(resources:)()
{
  return closure #1 in MOEventBundleStore._failedResources(resources:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t outlined copy of MOEventBundleStore.ResourceValidationResult?(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100159C88()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100159CC0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100159CD0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100159CE0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t partial apply for closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:)()
{
  return closure #1 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72), *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96));
}

uint64_t sub_100159D9C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t partial apply for closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v7);
  uint64_t v12 = *(void *)(v1 + v8);
  uint64_t v13 = v1 + v4;
  uint64_t v14 = (uint64_t *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];

  return closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(a1, v13, v9, v10, v11, v12, v15, v16);
}

uint64_t sub_100159F5C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t partial apply for closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  return closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(a1, v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + ((v6 + 31) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v6 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10015A11C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 216))();
}

uint64_t sub_10015A164(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 264))();
}

uint64_t sub_10015A1B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 312))();
}

uint64_t sub_10015A204(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 360))();
}

uint64_t sub_10015A254@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 384))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10015A2AC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 392))(*a1);
}

uint64_t sub_10015A2FC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 408))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10015A354(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 416))(*a1);
}

uint64_t sub_10015A3A4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 432))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10015A3FC(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 440))(*a1);
}

uint64_t sub_10015A44C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 456))();
  *a2 = result;
  return result;
}

uint64_t sub_10015A4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 464);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_10015A4FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 480))();
  *a2 = result;
  return result;
}

uint64_t sub_10015A550(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 488);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_10015A5AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 504))();
  *a2 = result;
  return result;
}

uint64_t sub_10015A600(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 512);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_10015A65C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 528))();
  *a2 = result;
  return result;
}

uint64_t sub_10015A6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 536);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_10015A70C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 552))();
  *a2 = result;
  return result;
}

uint64_t sub_10015A760(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 560);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t ObjC metadata update function for MOEventBundleStore()
{
  return type metadata accessor for MOEventBundleStore();
}

uint64_t type metadata accessor for MOEventBundleStore()
{
  uint64_t result = type metadata singleton initialization cache for MOEventBundleStore;
  if (!type metadata singleton initialization cache for MOEventBundleStore) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void type metadata completion function for MOEventBundleStore()
{
  type metadata accessor for Published<[MOEventBundleWithAsset]>();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<Bool>();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void type metadata accessor for Published<[MOEventBundleWithAsset]>()
{
  if (!lazy cache variable for type metadata for Published<[MOEventBundleWithAsset]>)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&demangling cache variable for type metadata for [MOEventBundleWithAsset]);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Published<[MOEventBundleWithAsset]>);
    }
  }
}

uint64_t destroy for MOEventBundleStore.ResourceValidationResult()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeBufferWithCopyOfBuffer for MOEventBundleStore.ResourceValidationResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MOEventBundleStore.ResourceValidationResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MOEventBundleStore.ResourceValidationResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MOEventBundleStore.ResourceValidationResult()
{
  return &type metadata for MOEventBundleStore.ResourceValidationResult;
}

uint64_t sub_10015AAC4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 16, v5);
}

uint64_t partial apply for closure #1 in closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  return closure #1 in closure #2 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(v0 + v2, *(void **)(v0 + v3), *(void *)(v0 + v4), *(void *)(v0 + v5), *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((v5 + 31) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(void))(v0 + ((((v5 + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10015AC90()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16, v5);
}

uint64_t partial apply for closure #1 in closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v0 + v3);
  uint64_t v9 = *(void *)(v0 + v4);
  uint64_t v10 = *(void *)(v0 + v5);
  uint64_t v11 = *(void *)(v0 + v6);
  uint64_t v12 = *(void *)(v0 + v7);
  uint64_t v13 = v0 + v2;
  uint64_t v14 = v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = *(uint64_t (**)(void))v14;
  uint64_t v16 = *(void *)(v14 + 8);

  return closure #1 in closure #3 in MOEventBundleStore._failedResourcesAsync(resources:completion:)(v13, v8, v9, v10, v11, v12, v15, v16);
}

uint64_t sub_10015AE5C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in closure #1 in MOEventBundleStore._failedResources(resources:)(uint64_t a1, char a2, uint64_t a3)
{
  return closure #1 in closure #1 in MOEventBundleStore._failedResources(resources:)(a1, a2, a3, *(dispatch_group_t *)(v3 + 16), *(void **)(v3 + 24));
}

uint64_t outlined consume of MOEventBundleStore.ResourceValidationResult?(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10015AEE4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for thunk for @escaping @callee_guaranteed (@guaranteed [MOEventBundle], @guaranteed Set<String>?) -> ()(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

unint64_t specialized static MOEventBundleStore.settingToSourceTypeMapping.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSetting, [MOEventBundleSourceType])>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DDF40;
  *(void *)(inited + 32) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOEventBundleSourceType>);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1001DA0F0;
  uint64_t v28 = (void *)MOEventBundleSourceTypeActivity;
  *(void *)(v1 + 32) = MOEventBundleSourceTypeActivity;
  *(void *)(inited + 40) = v1;
  *(void *)(inited + 48) = 2;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001DA390;
  uint64_t v3 = (void *)MOEventBundleSourceTypeMedia;
  unint64_t v4 = (void *)MOEventBundleSourceTypeThirdPartyMedia;
  *(void *)(v2 + 32) = MOEventBundleSourceTypeMedia;
  *(void *)(v2 + 40) = v4;
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 64) = 3;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1001DA0F0;
  unint64_t v6 = (void *)MOEventBundleSourceTypeContact;
  *(void *)(v5 + 32) = MOEventBundleSourceTypeContact;
  *(void *)(inited + 72) = v5;
  *(void *)(inited + 80) = 4;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001DA0F0;
  uint64_t v8 = (void *)MOEventBundleSourceTypePhoto;
  *(void *)(v7 + 32) = MOEventBundleSourceTypePhoto;
  *(void *)(inited + 88) = v7;
  *(void *)(inited + 96) = 5;
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001DA0F0;
  uint64_t v10 = (void *)MOEventBundleSourceTypeVisitLocation;
  *(void *)(v9 + 32) = MOEventBundleSourceTypeVisitLocation;
  *(void *)(inited + 104) = v9;
  *(void *)(inited + 112) = 6;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1001DA0F0;
  uint64_t v12 = (void *)MOEventBundleSourceTypePeopleContext;
  *(void *)(v11 + 32) = MOEventBundleSourceTypePeopleContext;
  *(void *)(inited + 120) = v11;
  *(void *)(inited + 128) = 9;
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001DA0F0;
  uint64_t v14 = (void *)MOEventBundleSourceTypeStateOfMind;
  *(void *)(v13 + 32) = MOEventBundleSourceTypeStateOfMind;
  *(void *)(inited + 136) = v13;
  *(void *)(inited + 144) = 10;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1001DA0F0;
  uint64_t v16 = (void *)MOEventBundleSourceTypeReflectionPrompt;
  *(void *)(v15 + 32) = MOEventBundleSourceTypeReflectionPrompt;
  *(void *)(inited + 152) = v15;
  unint64_t v17 = specialized Dictionary.init(dictionaryLiteral:)((void *)inited);
  swift_setDeallocating();
  id v18 = v28;
  id v19 = v3;
  id v20 = v4;
  id v21 = v6;
  id v22 = v8;
  id v23 = v10;
  id v24 = v12;
  id v25 = v14;
  id v26 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (MOSetting, [MOEventBundleSourceType]));
  swift_arrayDestroy();
  return v17;
}

unint64_t specialized MOEventBundleStore.allowedSourceTypes.getter()
{
  uint64_t v28 = &_swiftEmptySetSingleton;
  id v0 = [self sharedInstance];
  unint64_t result = specialized static MOEventBundleStore.settingToSourceTypeMapping.getter();
  unint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = result + 64;
  unint64_t v7 = v5 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v9 = &selRef_statisticsForType_;
  unint64_t v26 = result;
  if (v7) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 < v8)
    {
      unint64_t v13 = *(void *)(v6 + 8 * v12);
      ++v3;
      if (v13) {
        goto LABEL_20;
      }
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v8) {
        goto LABEL_27;
      }
      unint64_t v13 = *(void *)(v6 + 8 * v3);
      if (v13) {
        goto LABEL_20;
      }
      int64_t v3 = v12 + 2;
      if (v12 + 2 >= v8) {
        goto LABEL_27;
      }
      unint64_t v13 = *(void *)(v6 + 8 * v3);
      if (v13)
      {
LABEL_20:
        unint64_t v7 = (v13 - 1) & v13;
        for (unint64_t i = __clz(__rbit64(v13)) + (v3 << 6); ; unint64_t i = v10 | (v3 << 6))
        {
          uint64_t v15 = 8 * i;
          uint64_t v16 = *(void *)(*(void *)(v2 + 48) + v15);
          uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v15);
          swift_bridgeObjectRetain();
          if (objc_msgSend(v0, v9[21], v16) && (uint64_t v18 = *(void *)(v17 + 16)) != 0)
          {
            id v19 = v0;
            int64_t v20 = v8;
            unint64_t v21 = v6;
            swift_bridgeObjectRetain();
            uint64_t v22 = 0;
            do
            {
              id v23 = *(void **)(v17 + 8 * v22++ + 32);
              id v24 = v23;
              specialized Set._Variant.insert(_:)(&v27, v24);
              id v25 = v27;
            }
            while (v18 != v22);
            unint64_t result = swift_bridgeObjectRelease_n();
            unint64_t v6 = v21;
            int64_t v8 = v20;
            id v0 = v19;
            unint64_t v2 = v26;
            uint64_t v9 = &selRef_statisticsForType_;
            if (!v7) {
              goto LABEL_7;
            }
          }
          else
          {
            unint64_t result = swift_bridgeObjectRelease();
            if (!v7) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v10 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      int64_t v14 = v12 + 3;
      if (v14 < v8)
      {
        unint64_t v13 = *(void *)(v6 + 8 * v14);
        if (v13)
        {
          int64_t v3 = v14;
          goto LABEL_20;
        }
        while (1)
        {
          int64_t v3 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_29;
          }
          if (v3 >= v8) {
            break;
          }
          unint64_t v13 = *(void *)(v6 + 8 * v3);
          ++v14;
          if (v13) {
            goto LABEL_20;
          }
        }
      }
    }
LABEL_27:

    swift_release();
    return (unint64_t)v28;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t specialized MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)()
{
  uint64_t v1 = v0;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  int64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[MOEventBundleStore] calling fetchEventBundles", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = [self sharedInstance];
  [v6 reset];

  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  int64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService18MOEventBundleStore_promptManager);
  specialized MOEventBundleStore.allowedSourceTypes.getter();
  type metadata accessor for MOEventBundleSourceType(0);
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3((unint64_t *)&lazy protocol witness table cache variable for type MOEventBundleSourceType and conformance MOEventBundleSourceType, type metadata accessor for MOEventBundleSourceType);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = partial apply for closure #1 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:);
  v11[4] = v7;
  v14[4] = partial apply for closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:);
  v14[5] = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = thunk for @escaping @callee_guaranteed (@guaranteed NSNumber?, @guaranteed Error?) -> ();
  v14[3] = &block_descriptor_162;
  int64_t v12 = _Block_copy(v14);
  swift_retain();
  swift_release();
  [v8 fetchEventBundlesWithAllowedSourceTypes:isa respectOnboardingDates:1 respectLearnFromThisApp:1 handler:v12];
  _Block_release(v12);

  return swift_release();
}

uint64_t sub_10015B6B0()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void partial apply for closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1)
{
  closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t partial apply for closure #2 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1, uint64_t a2)
{
  return closure #2 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 16));
}

void partial apply for closure #1 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(uint64_t a1)
{
  closure #1 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)(a1, v1);
}

uint64_t partial apply for closure #1 in closure #1 in closure #1 in closure #2 in MOEventBundleStore.fetchAvailableBundles(clientDetails:queue:databaseUpgradingStateHandler:completionHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t partial apply for closure #1 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(unint64_t a1)
{
  return closure #1 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(a1);
}

void partial apply for closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(void *a1, uint64_t a2)
{
  closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(a1, a2, *(void *)(v2 + 16), *(void (**)(void *))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t partial apply for closure #1 in closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(void *a1, uint64_t a2)
{
  return closure #1 in closure #2 in MOEventBundleStore._fetchAvailableBundles(presentationDetails:completionHandler:)(a1, a2, *(void *)(v2 + 16), *(void (**)(id))(v2 + 24));
}

void partial apply for closure #1 in closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)(uint64_t a1)
{
  closure #1 in closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)(a1, v1[2], v1[3], v1[4]);
}

uint64_t partial apply for closure #1 in closure #1 in closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)(uint64_t a1)
{
  return closure #1 in closure #1 in closure #2 in MOEventBundleStore.refreshAndFetchBundles(presentationDetails:queue:completionHandler:)(a1, v1[2], v1[3], v1[4]);
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_3(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *CanvasAssetAccessoryView.borderColor.unsafeMutableAddressor()
{
  if (one-time initialization token for borderColor != -1) {
    swift_once();
  }
  return &static CanvasAssetAccessoryView.borderColor;
}

void one-time initialization function for unselectedConfig()
{
  id v0 = [self systemGrayColor];
  id v1 = [self configurationWithHierarchicalColor:v0];

  static CanvasAssetAccessoryView.unselectedConfig = (uint64_t)v1;
}

uint64_t *CanvasAssetAccessoryView.unselectedConfig.unsafeMutableAddressor()
{
  if (one-time initialization token for unselectedConfig != -1) {
    swift_once();
  }
  return &static CanvasAssetAccessoryView.unselectedConfig;
}

id static CanvasAssetAccessoryView.unselectedConfig.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for unselectedConfig, (void **)&static CanvasAssetAccessoryView.unselectedConfig);
}

void *CanvasAssetAccessoryView.selectedSymbol.unsafeMutableAddressor()
{
  return &static CanvasAssetAccessoryView.selectedSymbol;
}

unint64_t static CanvasAssetAccessoryView.selectedSymbol.getter()
{
  return 0xD000000000000015;
}

const char *CanvasAssetAccessoryView.unselectedSymbol.unsafeMutableAddressor()
{
  return "circle.fill";
}

uint64_t static CanvasAssetAccessoryView.unselectedSymbol.getter()
{
  return 0x662E656C63726963;
}

void one-time initialization function for borderColor()
{
  id v0 = [self whiteColor];
  id v1 = [v0 CGColor];

  static CanvasAssetAccessoryView.borderColor = (uint64_t)v1;
}

id static CanvasAssetAccessoryView.borderColor.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for borderColor, (void **)&static CanvasAssetAccessoryView.borderColor);
}

id one-time initialization function for symbolTintColor()
{
  id result = [self whiteColor];
  static CanvasAssetAccessoryView.symbolTintColor = (uint64_t)result;
  return result;
}

uint64_t *CanvasAssetAccessoryView.symbolTintColor.unsafeMutableAddressor()
{
  if (one-time initialization token for symbolTintColor != -1) {
    swift_once();
  }
  return &static CanvasAssetAccessoryView.symbolTintColor;
}

id static CanvasAssetAccessoryView.symbolTintColor.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for symbolTintColor, (void **)&static CanvasAssetAccessoryView.symbolTintColor);
}

uint64_t CanvasAssetAccessoryView.isSelected.getter()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_isSelected);
  swift_beginAccess();
  return *v1;
}

uint64_t CanvasAssetAccessoryView.isSelected.setter(char a1)
{
  int64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_isSelected);
  uint64_t result = swift_beginAccess();
  *int64_t v3 = a1;
  return result;
}

uint64_t (*CanvasAssetAccessoryView.isSelected.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id CanvasAssetAccessoryView.keyColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_keyColor);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void CanvasAssetAccessoryView.keyColor.setter(void *a1)
{
  int64_t v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_keyColor);
  swift_beginAccess();
  os_log_type_t v4 = *v3;
  *int64_t v3 = a1;
}

uint64_t (*CanvasAssetAccessoryView.keyColor.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id CanvasAssetAccessoryView.accessoryButton.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton);
}

id CanvasAssetAccessoryView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_isSelected] = 2;
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_keyColor;
  uint64_t v10 = self;
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 systemBlueColor];
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(void *)&v11[v12] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for CanvasAssetAccessoryView();
  [super initWithFrame:a1, a2, a3, a4];
  CanvasAssetAccessoryView.addButton()();

  return v13;
}

uint64_t type metadata accessor for CanvasAssetAccessoryView()
{
  return self;
}

void CanvasAssetAccessoryView.addButton()()
{
  char v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x68))();
  (*(void (**)(void))((swift_isaMask & *v0) + 0xA0))((v1 == 2) | (v1 & 1));
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton);
  id v3 = [v2 layer];
  if (one-time initialization token for borderColor != -1) {
    swift_once();
  }
  [v3 setBorderColor:static CanvasAssetAccessoryView.borderColor];

  id v4 = [v2 layer];
  [v4 setBackgroundColor:static CanvasAssetAccessoryView.borderColor];

  id v5 = [v2 layer];
  [v5 setBorderWidth:0.3];

  id v6 = [v2 layer];
  [v0 frame];
  [v6 setCornerRadius:v7 * 0.5];

  id v8 = [v2 layer];
  id v9 = [self blackColor];
  id v10 = [v9 CGColor];

  [v8 setShadowColor:v10];
  id v11 = [v2 layer];
  LODWORD(v12) = 1041865114;
  [v11 setShadowOpacity:v12];

  id v13 = [v2 layer];
  [v13 setShadowRadius:3.0];

  id v14 = [v2 layer];
  [v14 setShadowOffset:0.0, 0.0];

  id v15 = [v2 layer];
  [v2 bounds];
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  [v2 bounds];
  CGFloat v24 = CGRectGetHeight(v47) * 0.5;
  id v25 = [self bezierPathWithRoundedRect:v17 cornerRadius:v19 v21, v23, v24];
  id v26 = [v25 CGPath];

  [v15 setShadowPath:v26];
  id v27 = [v2 layer];
  [v27 setShadowPathIsBounds:1];

  [v0 addSubview:v2];
  [v0 frame];
  double Width = CGRectGetWidth(v48);
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v29 = [v2 widthAnchor];
  id v30 = [v29 constraintEqualToConstant:Width];

  [v30 setActive:1];
  [v0 frame];
  double Height = CGRectGetHeight(v49);
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v32 = [v2 heightAnchor];
  id v33 = [v32 constraintEqualToConstant:Height];

  [v33 setActive:1];
  id v34 = [v2 superview];
  if (v34)
  {
    uint64_t v35 = v34;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v36 = [v2 centerYAnchor];
    id v37 = [v35 centerYAnchor];
    id v38 = [v36 constraintEqualToAnchor:v37];

    [v38 setConstant:0.0];
    id v39 = v38;
    [v39 setActive:1];
  }
  id v40 = [v2 superview];
  if (v40)
  {
    id v45 = v40;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v41 = [v2 centerXAnchor];
    id v42 = [v45 centerXAnchor];
    id v43 = [v41 constraintEqualToAnchor:v42];

    [v43 setConstant:0.0];
    id v44 = v43;
    [v44 setActive:1];
  }
}

Swift::Void __swiftcall CanvasAssetAccessoryView.updateCheckmark(isSelected:)(Swift::Bool isSelected)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1001DD100;
  id v5 = self;
  *(void *)(v4 + 32) = [v5 whiteColor];
  id v6 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x80);
  *(void *)(v4 + 40) = v6();
  *(void *)(v4 + 48) = [v5 whiteColor];
  uint64_t v22 = v4;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [self configurationWithPaletteColors:isa];

  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for _UIImageSymbolConfiguration);
  id v9 = [(id)swift_getObjCClassFromMetadata() configurationPreferringMulticolor];
  id v20 = [v8 configurationByApplyingConfiguration:v9];

  id v10 = *(void **)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton);
  if (isSelected)
  {
    id v11 = v20;
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [self systemImageNamed:v12 withConfiguration:v11];

    if (v13)
    {
      id v14 = (void *)v6();
      id v15 = [v13 imageWithTintColor:v14];
    }
    else
    {
      id v15 = 0;
    }
    [v10 setImage:v15 forState:0 v20, v22];

    double v19 = (void *)v6();
    [v10 setTintColor:v19];
  }
  else
  {
    if (one-time initialization token for unselectedConfig != -1) {
      swift_once();
    }
    id v16 = (id)static CanvasAssetAccessoryView.unselectedConfig;
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [self systemImageNamed:v17 withConfiguration:v16];

    [v10 setImage:v18 forState:0];
    if (one-time initialization token for symbolTintColor != -1) {
      swift_once();
    }
    [v10 setTintColor:static CanvasAssetAccessoryView.symbolTintColor v20, v4];
  }
}

uint64_t CanvasAssetAccessoryView.setTapTarget(target:action:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton);
  outlined init with copy of Any?(a1, (uint64_t)v12);
  uint64_t v5 = v13;
  if (v13)
  {
    id v6 = __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v7 = *(void *)(v5 - 8);
    __chkstk_darwin(v6);
    id v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    uint64_t v10 = 0;
  }
  [v4 addTarget:v10 action:a2 forControlEvents:64];
  return swift_unknownObjectRelease();
}

id CanvasAssetAccessoryView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasAssetAccessoryView();
  return [super dealloc];
}

void specialized CanvasAssetAccessoryView.init(coder:)()
{
  v0[OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_isSelected] = 2;
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_keyColor;
  *(void *)&v0[v1] = [self systemBlueColor];
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService24CanvasAssetAccessoryView_accessoryButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(void *)&v0[v2] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10015CB9C@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t sub_10015CBF8(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0x70))(*a1);
}

uint64_t sub_10015CC50@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_10015CCAC(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x88))(*a1);
}

void *_sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDy16MomentsUIService19MOAssetAndMediaTypeVSiG_AH_Sits5NeverOTg504_s16d11UIService19fghi38VSiACSiIggyod_AC3key_Si5valuetAC_Sits5j129OIegnrzr_TR04_s16a61UIService42MOSuggestionInterstitialListAssetViewModelC32assetf38DictionaryToCountString4dictSSSDyAA015cdE27J0M32G_tFZAG_SitAG_SitXEfU_Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v1, 0);
  uint64_t result = (void *)specialized Dictionary.startIndex.getter(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v4;
  uint64_t v23 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v24 = v6;
    uint64_t v11 = *(void *)(a1 + 48) + 24 * v5;
    uint64_t v25 = *(void *)(v11 + 8);
    char v26 = *(unsigned char *)(v11 + 16);
    uint64_t v27 = *(void *)(*(void *)(a1 + 56) + 8 * v5);
    unint64_t v12 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    uint64_t result = *(id *)v11;
    id v14 = result;
    if (v12 >= v13 >> 1) {
      uint64_t result = (void *)specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v12 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v12 + 1;
    id v15 = &_swiftEmptyArrayStorage[4 * v12];
    v15[4] = v14;
    v15[5] = v25;
    *((unsigned char *)v15 + 48) = v26;
    v15[7] = v27;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v10);
    if ((v16 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v5 & 0x3F));
    if (v17)
    {
      int64_t v8 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v21;
    }
    else
    {
      unint64_t v18 = v10 + 1;
      unint64_t v19 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v21;
      if (v10 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v10)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v10++);
            if (v20)
            {
              unint64_t v18 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v24 + 1;
    uint64_t v5 = v8;
    if (v24 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *MOSuggestionCarouselView.interitemSpacing.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.interitemSpacing;
}

void *MOSuggestionCarouselView.sideViewMargin.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.sideViewMargin;
}

void *MOSuggestionCarouselView.sectionInset.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.sectionInset;
}

void *MOSuggestionCarouselView.scrollVelocityUpperbound.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.scrollVelocityUpperbound;
}

void *MOSuggestionCarouselView.scrollVelocityLowerbound.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.scrollVelocityLowerbound;
}

void *MOSuggestionCarouselView.scrollVelocityRange.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselView.scrollVelocityRange;
}

void *MOSuggestionCarouselView.collectionView.getter()
{
  int64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_collectionView);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionCarouselView.collectionView.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_collectionView);
  swift_beginAccess();
  int v4 = *v3;
  *id v3 = a1;
}

uint64_t (*MOSuggestionCarouselView.collectionView.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionCarouselView.assetViewModels.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionCarouselView.assetViewModels.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_assetViewModels);
  swift_beginAccess();
  *id v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOSuggestionCarouselView.assetViewModels.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCarouselView.selectedAssetIdentifiers.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionCarouselView.selectedAssetIdentifiers.setter(uint64_t a1)
{
  id v3 = (void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_selectedAssetIdentifiers);
  swift_beginAccess();
  *id v3 = a1;
  uint64_t v4 = swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xE0))(v4);
  if (result)
  {
    uint64_t v7 = v6;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t (*MOSuggestionCarouselView.selectedAssetIdentifiers.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionCarouselView.selectedAssetIdentifiers.modify;
}

uint64_t MOSuggestionCarouselView.selectedAssetIdentifiers.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(a1 + 24)) + 0xE0))(result);
    if (result)
    {
      uint64_t v6 = v5;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t MOSuggestionCarouselView.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t MOSuggestionCarouselView.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*MOSuggestionCarouselView.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return MOSuggestionSheetAssetGridView.delegate.modify;
}

uint64_t MOSuggestionCarouselView.controller.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

void MOSuggestionCarouselView.controller.setter(void *a1)
{
}

void (*MOSuggestionCarouselView.controller.modify(void *a1))(id **a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_controller;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return MOSuggestionSheetInterstitialView.controller.modify;
}

id MOSuggestionCarouselView.__allocating_init(controller:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MOSuggestionCarouselView.init(controller:)(a1);
}

id MOSuggestionCarouselView.init(controller:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_collectionView] = 0;
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl;
  id v4 = objc_allocWithZone((Class)UIPageControl);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_assetViewModels] = _swiftEmptyArrayStorage;
  *(void *)&v5[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  *(void *)&v5[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for MOSuggestionCarouselView();
  id v6 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v7 = self;
  id v8 = v6;
  id v9 = [v7 clearColor];
  [v8 setBackgroundColor:v9];

  MOSuggestionCarouselView.configureViewHierarchy()();
  return v8;
}

uint64_t type metadata accessor for MOSuggestionCarouselView()
{
  return self;
}

Swift::Void __swiftcall MOSuggestionCarouselView.reloadAll()()
{
  id v1 = MOSuggestionCarouselView.configurePageControl()();
  uint64_t v2 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x80))(v1);
  if (v2)
  {
    id v3 = v2;
    [v2 reloadData];
  }
}

void MOSuggestionCarouselView.reloadAll(completion:)(uint64_t a1, uint64_t a2)
{
  id v5 = MOSuggestionCarouselView.configurePageControl()();
  id v6 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v2) + 0x80))(v5);
  if (v6)
  {
    id v7 = v6;
    (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v6) + 0x70))(a1, a2);
  }
}

Swift::Void __swiftcall MOSuggestionCarouselView.reloadCell(_:index:)(Swift::OpaquePointer _, Swift::Int index)
{
  id v5 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xB8);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = v5(v6);
  if ((unint64_t)_._rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    Swift::Int v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v7 = swift_bridgeObjectRelease();
    if (v10 > index) {
      goto LABEL_3;
    }
LABEL_7:
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)static MOAngelLogger.assets);
    os_log_t oslog = (os_log_t)Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v12))
    {
      unint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v12, "[MOSuggestionSheetAssetGridView] Refusing to reconfigure due to size / index mismatch", v13, 2u);
      swift_slowDealloc();
    }
    goto LABEL_11;
  }
  if (*(void *)(((unint64_t)_._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10) <= index) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v8 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x80))(v7);
  if (!v8) {
    return;
  }
  id v9 = (void *)v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
  type metadata accessor for IndexPath();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001DA0F0;
  IndexPath.init(row:section:)();
  os_log_t oslog = (os_log_t)Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 reconfigureItemsAtIndexPaths:oslog];

LABEL_11:
}

void MOSuggestionCarouselView.reloadCellWith(_:index:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  unint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xB0))();
  if (v6 >> 62) {
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v7 > a2)
  {
    uint64_t v8 = *(uint64_t (**)(void *))((swift_isaMask & *v2) + 0xC0);
    swift_retain();
    id v9 = (uint64_t (*)(void *, void))v8(v29);
    uint64_t v11 = v10;
    uint64_t v12 = *v10;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v11 = v12;
    if (!isUniquelyReferenced_nonNull_bridgeObject || v12 < 0 || (v12 & 0x4000000000000000) != 0)
    {
      uint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew()(v12);
      *uint64_t v11 = v12;
    }
    if (a2 < 0)
    {
      __break(1u);
    }
    else if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a2)
    {
      *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = a1;
      swift_release();
      specialized Array._endMutation()();
      uint64_t v14 = v9(v29, 0);
      v29[0] = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 512))(v14);
      v29[1] = v15;
      v28[0] = 35;
      v28[1] = 0xE100000000000000;
      lazy protocol witness table accessor for type String and conformance String();
      uint64_t v16 = (void *)StringProtocol.components<A>(separatedBy:)();
      if (v16[2])
      {
        Swift::Int v17 = v16[4];
        Swift::Int v18 = v16[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v19 = (uint64_t (*)(void *, void))(*(uint64_t (**)(void *))((swift_isaMask & *v3)
                                                                                            + 0xD8))(v29);
        specialized Set._Variant.insert(_:)(v28, v17, v18);
        swift_bridgeObjectRelease();
        uint64_t v20 = v19(v29, 0);
        uint64_t v21 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x80))(v20);
        if (v21)
        {
          int v22 = (void *)v21;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<IndexPath>);
          type metadata accessor for IndexPath();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001DA0F0;
          IndexPath.init(row:section:)();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v22 reconfigureItemsAtIndexPaths:isa];
        }
        return;
      }
      goto LABEL_23;
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
LABEL_24:
  }
    swift_once();
  uint64_t v24 = type metadata accessor for Logger();
  __swift_project_value_buffer(v24, (uint64_t)static MOAngelLogger.assets);
  os_log_t oslog = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v25))
  {
    char v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v25, "[MOSuggestionSheetAssetGridView] Refusing to reconfigure due to size / index mismatch", v26, 2u);
    swift_slowDealloc();
  }
}

void MOSuggestionCarouselView.configureViewHierarchy()()
{
  id v1 = v0;
  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  id v5 = [objc_allocWithZone((Class)UICollectionViewFlowLayout) init];
  [v5 setScrollDirection:1];
  [v5 setSectionInset:0.0, 50.0, 0.0, 50.0];
  id v6 = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionSheetCollectionView()) initWithFrame:CGRectZero.origin.x, y, width, height];

  type metadata accessor for MOSuggestionCarouselAssetCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v8 = String._bridgeToObjectiveC()();
  [v6 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v8];

  id v9 = self;
  id v10 = v6;
  id v11 = [v9 clearColor];
  [v10 setBackgroundColor:v11];

  [v10 setDataSource:v1];
  [v10 setDelegate:v1];
  [v10 setShowsHorizontalScrollIndicator:0];
  [v10 setAllowsSelection:1];
  [v10 setAllowsMultipleSelection:1];
  [v1 addSubview:v10];
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl;
  [v1 addSubview:*(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl)];
  [*(id *)((char *)v1 + v12) setTranslatesAutoresizingMaskIntoConstraints:0];
  [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
  unint64_t v13 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1001DE170;
  id v15 = [v10 topAnchor];
  id v16 = [v1 topAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v14 + 32) = v17;
  id v18 = [v10 leadingAnchor];
  id v19 = [v1 leadingAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v14 + 40) = v20;
  id v21 = [v10 trailingAnchor];
  id v22 = [v1 trailingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v14 + 48) = v23;
  id v24 = [*(id *)((char *)v1 + v12) centerXAnchor];
  id v25 = [v1 centerXAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  *(void *)(v14 + 56) = v26;
  id v27 = [*(id *)((char *)v1 + v12) topAnchor];
  id v28 = [v10 bottomAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  *(void *)(v14 + 64) = v29;
  id v30 = [*(id *)((char *)v1 + v12) bottomAnchor];
  id v31 = [v1 bottomAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v14 + 72) = v32;
  specialized Array._endMutation()();
  type metadata accessor for NSLayoutConstraint();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v13 activateConstraints:isa];

  id v34 = *(void (**)(id))((swift_isaMask & *v1) + 0x88);
  id v35 = v10;
  v34(v10);
}

id MOSuggestionCarouselView.configurePageControl()()
{
  id v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0);
  unint64_t v2 = v1();
  if (v2 >> 62) {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl;
  if (v3 >= 2)
  {
    id v6 = *(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl);
    unint64_t v7 = v1();
    if (v7 >> 62) {
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    [v6 setNumberOfPages:v8];

    id v9 = *(void **)((char *)v0 + v4);
    id v10 = self;
    id v11 = v9;
    id v12 = [v10 blackColor];
    [v11 setCurrentPageIndicatorTintColor:v12];

    id v13 = *(id *)((char *)v0 + v4);
    id v14 = [v10 grayColor];
    id v15 = [v14 colorWithAlphaComponent:0.5];

    [v13 setPageIndicatorTintColor:v15];
    [*(id *)((char *)v0 + v4) setAccessibilityContainerType:4];
    id v16 = *(id *)((char *)v0 + v4);
    id v17 = [v10 clearColor];
    [v16 setBackgroundColor:v17];

    id v5 = &selRef_setUserInteractionEnabled_;
  }
  else
  {
    id v5 = &selRef_setHidden_;
  }
  id v18 = *(void **)((char *)v0 + v4);
  id v19 = *v5;

  return [v18 v19:v3 < 2];
}

void MOSuggestionCarouselView.updateSelectedAssets(_:)()
{
  id v1 = v0;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[Interstitial] Updating carousel selections)", v5, 2u);
    swift_slowDealloc();
  }

  id v6 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xD0);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = v6(v7);
  id v9 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x80))(v8);
  if (v9)
  {
    id v10 = v9;
    [v9 reloadData];
  }
}

void MOSuggestionCarouselView.init(frame:)()
{
}

id MOSuggestionCarouselView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCarouselView();
  return [super dealloc];
}

Swift::Int __swiftcall MOSuggestionCarouselView.collectionView(_:numberOfItemsInSection:)(UICollectionView _, Swift::Int numberOfItemsInSection)
{
  unint64_t v3 = (*(uint64_t (**)(Class, Swift::Int))((swift_isaMask & *v2) + 0xB0))(_.super.super.super.super.isa, numberOfItemsInSection);
  if (v3 >> 62) {
    Swift::Int v4 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    Swift::Int v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v4;
}

void MOSuggestionCarouselView.collectionView(_:cellForItemAt:)(void *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xF8))();
  if (!v4) {
    goto LABEL_29;
  }
  id v5 = (void *)v4;
  NSString v6 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v8 = [a1 dequeueReusableCellWithReuseIdentifier:v6 forIndexPath:isa];

  type metadata accessor for MOSuggestionCarouselAssetCell();
  uint64_t v9 = swift_dynamicCastClass();
  if (v9)
  {
    id v10 = (void *)v9;
    unint64_t v11 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xB0))();
    unint64_t v12 = IndexPath.item.getter();
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if ((v13 & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if ((v12 & 0x8000000000000000) != 0 || v12 >= v13)
    {
      swift_bridgeObjectRelease();
      [objc_allocWithZone((Class)UICollectionViewCell) init];

      return;
    }
    if ((v11 & 0xC000000000000001) == 0)
    {
      if (v12 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_25;
      }
      id v8 = *(id *)(v11 + 8 * v12 + 32);
      swift_retain();
LABEL_10:
      uint64_t v14 = swift_bridgeObjectRelease();
      uint64_t v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xC8))(v14);
      id v39 = *(uint64_t (**)(void))(*(void *)v8 + 512);
      uint64_t v45 = v39();
      uint64_t v46 = v16;
      uint64_t v43 = 35;
      unint64_t v44 = 0xE100000000000000;
      lazy protocol witness table accessor for type String and conformance String();
      id v17 = (void *)StringProtocol.components<A>(separatedBy:)();
      if (v17[2])
      {
        id v18 = v5;
        uint64_t v20 = v17[4];
        uint64_t v19 = v17[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v21 = specialized Set.contains(_:)(v20, v19, v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v21)
        {
          Class v22 = IndexPath._bridgeToObjectiveC()().super.isa;
          [a1 selectItemAtIndexPath:v22 animated:0 scrollPosition:1];
        }
        id v23 = *(void (**)(uint64_t))((swift_isaMask & *v10) + 0xB0);
        uint64_t v24 = swift_retain();
        v23(v24);
        id v25 = [v10 setSelected:v21 & 1];
        id v5 = v18;
        char v26 = (*(uint64_t (**)(id))((swift_isaMask & *v18) + 0x1B0))(v25);
        id v27 = self;
        id v28 = &selRef_systemBlueColor;
        if ((v26 & 1) == 0) {
          id v28 = &selRef_systemIndigoColor;
        }
        id v29 = [v27 *v28];
        (*(void (**)(id))((swift_isaMask & *v10) + 0xE0))(v29);
        if (serverManager._connectionProperties == (NSMutableDictionary *)-1) {
          goto LABEL_16;
        }
        goto LABEL_26;
      }
LABEL_25:
      __break(1u);
LABEL_26:
      swift_once();
LABEL_16:
      uint64_t v30 = type metadata accessor for Logger();
      __swift_project_value_buffer(v30, (uint64_t)static MOAngelLogger.assets);
      swift_retain_n();
      id v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.debug.getter();
      if (!os_log_type_enabled(v31, v32))
      {

        swift_release_n();
        return;
      }
      uint64_t v33 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 67109378;
      uint64_t v34 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v33 + 8) = 2080;
      uint64_t v45 = ((uint64_t (*)(uint64_t))v39)(v34);
      uint64_t v46 = v35;
      uint64_t v43 = 35;
      unint64_t v44 = 0xE100000000000000;
      id v36 = (void *)StringProtocol.components<A>(separatedBy:)();
      if (v36[2])
      {
        id v41 = v5;
        os_log_type_t v40 = v32;
        uint64_t v38 = v36[4];
        unint64_t v37 = v36[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v45 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v38, v37, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v40, "[Interstitial] cellForItemAt: %{BOOL}d id: %s", (uint8_t *)v33, 0x12u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();

        return;
      }
      __break(1u);
      goto LABEL_28;
    }
LABEL_23:
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
LABEL_28:

LABEL_29:
  __break(1u);
}

void MOSuggestionCarouselView.collectionView(_:willDisplay:forItemAt:)(uint64_t a1, id a2)
{
  unint64_t v3 = v2;
  unint64_t v37 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xF8))();
  if (!v37) {
    return;
  }
  NSString v6 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0xB0);
  unint64_t v7 = v6();
  unint64_t v8 = IndexPath.item.getter();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_36:
      unint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_9;
    }
  }
  else
  {
    unint64_t v9 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v8 & 0x8000000000000000) != 0 || v8 >= v9)
  {

    swift_bridgeObjectRelease();
    return;
  }
  if ((v7 & 0xC000000000000001) != 0) {
    goto LABEL_36;
  }
  if (v8 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_38;
  }
  unint64_t v8 = *(void *)(v7 + 8 * v8 + 32);
  swift_retain();
LABEL_9:
  swift_bridgeObjectRelease();
  type metadata accessor for MOSuggestionCarouselAssetCell();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

    swift_release();
    return;
  }
  unint64_t v7 = v10;
  id v36 = (id)a1;
  a2 = a2;
  a1 = IndexPath.item.getter();
  unint64_t v11 = v6();
  if (!(v11 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_12;
  }
LABEL_38:
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
LABEL_12:
  uint64_t v13 = swift_bridgeObjectRelease();
  if (a1 >= v12)
  {

    swift_release();

    return;
  }
  uint64_t v35 = a2;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xC8))(v13);
  uint64_t v34 = *(uint64_t (**)(void))(*(void *)v8 + 512);
  uint64_t v41 = v34();
  uint64_t v42 = v15;
  uint64_t v39 = 35;
  unint64_t v40 = 0xE100000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v16 = (void *)StringProtocol.components<A>(separatedBy:)();
  if (v16[2])
  {
    uint64_t v18 = v16[4];
    uint64_t v17 = v16[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v19 = specialized Set.contains(_:)(v18, v17, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19)
    {
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v36 selectItemAtIndexPath:isa animated:0 scrollPosition:1];
    }
    [(id)v7 setSelected:v19 & 1];
    char v21 = (*(uint64_t (**)(void))((swift_isaMask & *v37) + 0x1B0))();
    Class v22 = self;
    id v23 = &selRef_systemBlueColor;
    if ((v21 & 1) == 0) {
      id v23 = &selRef_systemIndigoColor;
    }
    id v24 = [v22 *v23];
    (*(void (**)(id))((swift_isaMask & *(void *)v7) + 0xE0))(v24);
    a2 = v35;
    if (serverManager._connectionProperties == (NSMutableDictionary *)-1) {
      goto LABEL_19;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_19:
  uint64_t v25 = type metadata accessor for Logger();
  __swift_project_value_buffer(v25, (uint64_t)static MOAngelLogger.assets);
  swift_retain_n();
  char v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 67109378;
    uint64_t v29 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v28 + 8) = 2080;
    uint64_t v41 = ((uint64_t (*)(uint64_t))v34)(v29);
    uint64_t v42 = v30;
    uint64_t v39 = 35;
    unint64_t v40 = 0xE100000000000000;
    id v31 = (void *)StringProtocol.components<A>(separatedBy:)();
    if (!v31[2])
    {
      __break(1u);
      return;
    }
    uint64_t v32 = v31[4];
    unint64_t v33 = v31[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v32, v33, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "[Interstitial] willDisplay isSelected: %{BOOL}d id: %s", (uint8_t *)v28, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release_n();
  }
}

void *MOSuggestionCarouselView.collectionView(_:didSelectItemAt:)()
{
  return specialized MOSuggestionCarouselView.collectionView(_:didSelectItemAt:)();
}

void *MOSuggestionCarouselView.collectionView(_:didDeselectItemAt:)()
{
  return specialized MOSuggestionCarouselView.collectionView(_:didDeselectItemAt:)();
}

uint64_t @objc MOSuggestionCarouselView.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  a5(v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

double MOSuggestionCarouselView.collectionView(_:layout:sizeForItemAt:)(void *a1, void *a2)
{
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = a2;
    [v4 minimumInteritemSpacing];
    double v7 = v6;
    [v4 sectionInset];
    double v9 = v7 + v8;
  }
  else
  {
    double v9 = 0.0;
  }
  [a1 frame];
  double v11 = v10;

  return v11 - v9 + -40.0;
}

uint64_t MOSuggestionCarouselView.scrollToIndex(index:animated:velocity:)(uint64_t a1, char a2, double a3)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x80))();
  if (result)
  {
    double v8 = (void *)result;
    if (a1 < 0
      || ((unint64_t v9 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xB0))(), v9 >> 62)
        ? (uint64_t v10 = _CocoaArrayWrapper.endIndex.getter())
        : (uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)),
          swift_bridgeObjectRelease(),
          v10 <= a1))
    {

      return 0;
    }
    else
    {
      [v8 frame];
      float v11 = CGRectGetWidth(v25) + -50.0 + -40.0;
      float v12 = (float)a1 * v11;
      if (v12 > 0.0) {
        float v13 = v12;
      }
      else {
        float v13 = 0.0;
      }
      [v8 contentSize];
      float v15 = v14;
      if (v13 <= v15) {
        float v15 = v13;
      }
      double v16 = v15;
      [v8 contentOffset];
      double v18 = v17;
      if (a2)
      {
        char v19 = self;
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = v8;
        *(double *)(v20 + 24) = v16;
        *(double *)(v20 + 32) = v18;
        v24[4] = partial apply for closure #1 in MOSuggestionInterstitialCarouselView.scrollToIndex(index:shouldScroll:velocity:);
        v24[5] = v20;
        v24[0] = _NSConcreteStackBlock;
        v24[1] = 1107296256;
        v24[2] = thunk for @escaping @callee_guaranteed () -> ();
        v24[3] = &block_descriptor_30;
        char v21 = _Block_copy(v24);
        id v22 = v8;
        swift_release();
        [v19 animateWithDuration:v21 animations:a3];
        _Block_release(v21);
      }
      else
      {
        [v8 setContentOffset:0 animated:v16];
      }
      id v23 = *(id *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl);
      [v23 setCurrentPage:a1];

      return *(void *)&v16;
    }
  }
  return result;
}

void MOSuggestionCarouselView.scrollViewWillEndDragging(_:withVelocity:targetContentOffset:)(void *a1, double *a2, double a3)
{
  [a1 frame];
  if (CGRectGetWidth(v15) > 0.0)
  {
    [a1 frame];
    float v6 = CGRectGetWidth(v16) + -50.0 + -40.0;
    [a1 contentOffset];
    float v8 = v7;
    float v9 = *a2;
    float v10 = v8 / v6;
    if (v9 >= v8) {
      goto LABEL_7;
    }
    float v10 = floorf(v10);
    if ((~LODWORD(v10) & 0x7F800000) != 0)
    {
      if (v10 > -9.2234e18)
      {
        if (v10 < 9.2234e18) {
          goto LABEL_10;
        }
        __break(1u);
LABEL_7:
        float v10 = ceilf(v10);
        if ((~LODWORD(v10) & 0x7F800000) != 0)
        {
          if (v10 > -9.2234e18)
          {
            if (v10 < 9.2234e18)
            {
LABEL_10:
              uint64_t v11 = (uint64_t)v10;
              [a1 frame];
              CGFloat Width = CGRectGetWidth(v17);
              uint64_t v13 = MOSuggestionCarouselView.scrollToIndex(index:animated:velocity:)(v11, 1, (1.0 - fabs(a3 / Width)) * 0.14 + 0.01);
              if ((v14 & 1) == 0) {
                *(void *)a2 = v13;
              }
              return;
            }
LABEL_17:
            __break(1u);
            return;
          }
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
}

uint64_t MOSuggestionCarouselView.assetTypeSummary.getter()
{
  unint64_t v45 = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v42 = v0;
  unint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
  uint64_t v2 = v1;
  if (v1 >> 62)
  {
LABEL_37:
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    uint64_t v37 = swift_bridgeObjectRetain();
    v44[0] = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSDy16MomentsUIService19MOAssetAndMediaTypeVSiG_AH_Sits5NeverOTg504_s16d11UIService19fghi38VSiACSiIggyod_AC3key_Si5valuetAC_Sits5j129OIegnrzr_TR04_s16a61UIService42MOSuggestionInterstitialListAssetViewModelC32assetf38DictionaryToCountString4dictSSSDyAA015cdE27J0M32G_tFZAG_SitAG_SitXEfU_Tf3nnnpf_nTf1cn_n(v37);
    swift_bridgeObjectRetain();
    specialized MutableCollection<>.sort(by:)(v44);
    swift_bridgeObjectRelease();
    uint64_t v38 = _sSlsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFSay16MomentsUIService19MOAssetAndMediaTypeV_SitG_SSs5NeverOTg504_s16d11UIService19fghi21VSiSSIggyo_AC_SitSSs5j137OIegnrzr_TR04_s16a61UIService42MOSuggestionInterstitialListAssetViewModelC25assetf44SetToCountStringySSSo09NSCountedK0CFZSSAA015cdE13J0V_P16XEfU1_Tf3nnnpf_nTf1cn_n((uint64_t)v44[0]);
    swift_release();
    v44[0] = v38;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
    lazy protocol witness table accessor for type [String] and conformance [A]();
    uint64_t v39 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v39;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_38;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v43 = v2 & 0xC000000000000001;
    uint64_t v41 = v3;
    while (1)
    {
      if (v43)
      {
        uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v5 = *(void *)(v2 + 8 * v4 + 32);
        swift_retain();
      }
      float v6 = (void *)(*(uint64_t (**)(void))(*(void *)v5 + 632))();
      if (v6) {
        break;
      }
      swift_release();
LABEL_6:
      if (v3 == ++v4) {
        goto LABEL_38;
      }
    }
    uint64_t v7 = v2;
    uint64_t v2 = *(void *)(*(void *)v5 + 776);
    id v8 = v6;
    Swift::UInt v9 = ((uint64_t (*)(void))v2)();
    uint64_t v10 = (*(uint64_t (**)(void))((swift_isaMask & *v42) + 0xC8))();
    v44[0] = (void *)(*(uint64_t (**)(void))(*(void *)v5 + 512))();
    v44[1] = v11;
    v44[4] = (void *)35;
    v44[5] = (void *)0xE100000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    float v12 = (void *)StringProtocol.components<A>(separatedBy:)();
    if (!v12[2])
    {
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v13 = v12[4];
    uint64_t v2 = v12[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = specialized Set.contains(_:)(v13, v2, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
      swift_release();

LABEL_32:
      uint64_t v2 = v7;
      uint64_t v3 = v41;
      goto LABEL_6;
    }
    CGRect v15 = (void *)v45;
    if (*(void *)(v45 + 16))
    {
      id v16 = v8;
      specialized __RawDictionaryStorage.find<A>(_:)(v16, v9, 0);
      uint64_t v2 = v17;

      if (v2)
      {
        id v18 = v16;
        uint64_t v20 = specialized Dictionary.subscript.modify(v44, v18, v9, 0);
        if ((*(unsigned char *)(v19 + 8) & 1) == 0)
        {
          if (__OFADD__(*(void *)v19, 1))
          {
            __break(1u);
            goto LABEL_40;
          }
          ++*(void *)v19;
        }
        ((void (*)(void **, void))v20)(v44, 0);

        swift_release();
        goto LABEL_32;
      }
    }
    id v21 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44[0] = v15;
    unint64_t v24 = specialized __RawDictionaryStorage.find<A>(_:)(v21, v9, 0);
    uint64_t v25 = v15[2];
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26)) {
      goto LABEL_35;
    }
    char v28 = v23;
    if (v15[3] < v27)
    {
      specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = specialized __RawDictionaryStorage.find<A>(_:)(v21, v9, 0);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_41;
      }
      unint64_t v24 = v29;
      id v31 = v44[0];
      if ((v28 & 1) == 0) {
        goto LABEL_29;
      }
LABEL_27:
      *(void *)(v31[7] + 8 * v24) = 1;
LABEL_31:
      unint64_t v45 = (unint64_t)v31;
      swift_release();

      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      id v31 = v44[0];
      if (v23) {
        goto LABEL_27;
      }
    }
    else
    {
      specialized _NativeDictionary.copy()();
      id v31 = v44[0];
      if (v28) {
        goto LABEL_27;
      }
    }
LABEL_29:
    v31[(v24 >> 6) + 8] |= 1 << v24;
    uint64_t v32 = v31[6] + 24 * v24;
    *(void *)uint64_t v32 = v21;
    *(void *)(v32 + 8) = v9;
    *(unsigned char *)(v32 + 16) = 0;
    *(void *)(v31[7] + 8 * v24) = 1;
    uint64_t v33 = v31[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_36;
    }
    v31[2] = v35;
    id v36 = v21;
    goto LABEL_31;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t specialized Dictionary.startIndex.getter(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  Swift::UInt v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void specialized MOSuggestionCarouselView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_collectionView] = 0;
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_pageControl;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIPageControl) init];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_assetViewModels] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_selectedAssetIdentifiers] = &_swiftEmptySetSingleton;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService24MOSuggestionCarouselView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *specialized MOSuggestionCarouselView.collectionView(_:didSelectItemAt:)()
{
  uint64_t v2 = v0;
  unint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
  unint64_t v4 = IndexPath.item.getter();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_31;
    }
  }
  else
  {
    unint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v4 & 0x8000000000000000) != 0 || v4 >= v5) {
    goto LABEL_16;
  }
  if ((v3 & 0xC000000000000001) == 0)
  {
    if (v4 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_33;
    }
    unsigned int v6 = *(void **)(v3 + 8 * v4 + 32);
    swift_retain();
    goto LABEL_8;
  }
LABEL_31:
  unsigned int v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
  uint64_t v7 = swift_bridgeObjectRelease();
  unint64_t v8 = (uint64_t (**)(void))(*v6 + 512);
  uint64_t v1 = *v8;
  if (((uint64_t (*)(uint64_t))*v8)(v7) != 0x6C6F686563616C70 || v9 != 0xEB00000000726564)
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v11)
    {
      return (void *)swift_release();
    }
    if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
    {
LABEL_21:
      uint64_t v13 = type metadata accessor for Logger();
      __swift_project_value_buffer(v13, (uint64_t)static MOAngelLogger.assets);
      swift_retain_n();
      char v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v14, v15))
      {
        os_log_type_t v29 = v15;
        id v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        *(_DWORD *)id v16 = 136315138;
        uint64_t v31 = v1();
        uint64_t v32 = v17;
        Swift::Int v33 = 35;
        unint64_t v34 = 0xE100000000000000;
        lazy protocol witness table accessor for type String and conformance String();
        uint64_t result = (void *)StringProtocol.components<A>(separatedBy:)();
        if (!result[2]) {
          goto LABEL_35;
        }
        uint64_t v19 = result[4];
        unint64_t v18 = result[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v31 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v19, v18, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v14, v29, "[MOSuggestionCarouselView] selecting %s", v16, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        uint64_t v20 = swift_release_n();
      }
      uint64_t v31 = ((uint64_t (*)(uint64_t))v1)(v20);
      uint64_t v32 = v21;
      Swift::Int v33 = 35;
      unint64_t v34 = 0xE100000000000000;
      lazy protocol witness table accessor for type String and conformance String();
      uint64_t result = (void *)StringProtocol.components<A>(separatedBy:)();
      if (result[2])
      {
        Swift::Int v22 = result[4];
        Swift::Int v23 = result[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v24 = (uint64_t (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))((swift_isaMask & *v2)
                                                                                              + 0xD8))(&v31);
        specialized Set._Variant.insert(_:)(&v33, v22, v23);
        swift_bridgeObjectRelease();
        uint64_t v25 = v24(&v31, 0);
        if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xE0))(v25))
        {
          uint64_t v27 = v26;
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v27 + 8))(ObjectType, v27);
          swift_unknownObjectRelease();
        }
        return (void *)swift_release();
      }
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
LABEL_33:
    swift_once();
    goto LABEL_21;
  }
  swift_release();
LABEL_16:

  return (void *)swift_bridgeObjectRelease();
}

void *specialized MOSuggestionCarouselView.collectionView(_:didDeselectItemAt:)()
{
  uint64_t v2 = v0;
  unint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
  unint64_t v4 = IndexPath.item.getter();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_22;
    }
  }
  else
  {
    unint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v4 & 0x8000000000000000) == 0 && v4 < v5)
  {
    if ((v3 & 0xC000000000000001) == 0)
    {
      if (v4 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_24:
        swift_once();
LABEL_9:
        uint64_t v6 = type metadata accessor for Logger();
        __swift_project_value_buffer(v6, (uint64_t)static MOAngelLogger.assets);
        swift_retain_n();
        uint64_t v7 = Logger.logObject.getter();
        os_log_type_t v8 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v7, v8))
        {
          uint64_t v9 = (uint8_t *)swift_slowAlloc();
          uint64_t v22 = swift_slowAlloc();
          *(_DWORD *)uint64_t v9 = 136315138;
          uint64_t v23 = (*(uint64_t (**)(void))(*(void *)v1 + 512))();
          uint64_t v24 = v10;
          uint64_t v25 = 35;
          unint64_t v26 = 0xE100000000000000;
          lazy protocol witness table accessor for type String and conformance String();
          uint64_t result = (void *)StringProtocol.components<A>(separatedBy:)();
          if (!result[2]) {
            goto LABEL_26;
          }
          uint64_t v13 = result[4];
          unint64_t v12 = result[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v23 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v12, &v22);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v7, v8, "[MOSuggestionCarouselView] un-selecting %s", v9, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        uint64_t v23 = (*(uint64_t (**)(void))(*(void *)v1 + 512))();
        uint64_t v24 = v14;
        uint64_t v25 = 35;
        unint64_t v26 = 0xE100000000000000;
        lazy protocol witness table accessor for type String and conformance String();
        uint64_t result = (void *)StringProtocol.components<A>(separatedBy:)();
        if (result[2])
        {
          uint64_t v15 = result[4];
          uint64_t v16 = result[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v17 = (uint64_t (*)(uint64_t *, void))(*(uint64_t (**)(uint64_t *))((swift_isaMask & *v2)
                                                                                                + 0xD8))(&v23);
          specialized Set._Variant.remove(_:)(v15, v16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v18 = v17(&v23, 0);
          if ((*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xE0))(v18))
          {
            uint64_t v20 = v19;
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20);
            swift_unknownObjectRelease();
          }
          return (void *)swift_release();
        }
        __break(1u);
LABEL_26:
        __break(1u);
        return result;
      }
      uint64_t v1 = *(void *)(v3 + 8 * v4 + 32);
      swift_retain();
LABEL_8:
      swift_bridgeObjectRelease();
      if (serverManager._connectionProperties == (NSMutableDictionary *)-1) {
        goto LABEL_9;
      }
      goto LABEL_24;
    }
LABEL_22:
    uint64_t v1 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }

  return (void *)swift_bridgeObjectRelease();
}

uint64_t sub_100161484()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t sub_1001614D4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_100161530(id *a1, void **a2)
{
  id v2 = *a1;
  unint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x88);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100161598@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t sub_1001615F4(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xB8);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100161658@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001616B4(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xD0);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100161718@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE0))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100161774(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0xE8);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_1001617E8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t sub_100161844(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x100);
  id v4 = *a1;
  return v3(v2);
}

void MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  type metadata accessor for MOSuggestionAssetWorkoutProvider();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = -1;
  *(void *)(inited + 24) = [objc_allocWithZone((Class)HKHealthStore) init];
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = v4;
  swift_retain();
  swift_retain();
  MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(a1, (uint64_t)partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:), (uint64_t)v9);
  swift_release();
  swift_setDeallocating();
}

uint64_t closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(void *a1, uint64_t (*a2)(void), uint64_t a3, void *a4)
{
  if (a1)
  {
    uint64_t v7 = (void *)a4[4];
    a4[4] = a1;
    id v8 = a1;

    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a2;
    *(void *)(v9 + 24) = a3;
    uint64_t v10 = *(void (**)(void (*)(void *), uint64_t))(*a4 + 160);
    swift_retain();
    v10(partial apply for closure #1 in closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:), v9);

    return swift_release();
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.shared);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed to locate workout", v15, 2u);
      swift_slowDealloc();
    }

    return a2(0);
  }
}

uint64_t partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(void *a1)
{
  return closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

void closure #1 in closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(void *a1, void (*a2)(void *))
{
  if (a1)
  {
    id v8 = a1;
    a2(a1);
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.shared);
    unint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to generate route", v7, 2u);
      swift_slowDealloc();
    }

    a2(0);
  }
}

void MOSuggestionAssetWorkoutRouteProvider.generateRoute(completion:)(void (*a1)(void), uint64_t a2)
{
  unint64_t v5 = *(void **)(v2 + 32);
  if (v5)
  {
    os_log_type_t v6 = self;
    id v7 = v5;
    id v8 = [v6 predicateForObjectsFromWorkout:v7];
    id v9 = [self workoutRouteType];
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = a1;
    void v10[3] = a2;
    v10[4] = v2;
    id v11 = objc_allocWithZone((Class)HKAnchoredObjectQuery);
    v14[4] = partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.generateRoute(completion:);
    v14[5] = v10;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed HKAnchoredObjectQuery, @guaranteed [HKSample]?, @guaranteed [HKDeletedObject]?, @guaranteed HKQueryAnchor?, @guaranteed Error?) -> ();
    v14[3] = &block_descriptor_31;
    uint64_t v12 = _Block_copy(v14);
    swift_retain();
    swift_retain();
    id v13 = [v11 initWithType:v9 predicate:v8 anchor:0 limit:0 resultsHandler:v12];

    _Block_release(v12);
    swift_release();
    [*(id *)(v2 + 16) executeQuery:v13];
  }
  else
  {
    a1(0);
  }
}

void closure #1 in MOSuggestionAssetWorkoutRouteProvider.generateRoute(completion:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void), uint64_t a7, uint64_t a8)
{
  if (!a2) {
    goto LABEL_14;
  }
  uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
  if (!(a2 >> 62))
  {
    uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_13;
  }
LABEL_4:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v12 + 16))
    {
      __break(1u);
      return;
    }
    id v14 = *(id *)(a2 + 32);
  }
  id v16 = v14;
  swift_bridgeObjectRelease();
  self;
  uint64_t v15 = swift_dynamicCastObjCClass();
  if (!v15)
  {

LABEL_14:
    a6(0);
    return;
  }
  (*(void (**)(uint64_t, void (*)(void), uint64_t))(*(void *)a8 + 168))(v15, a6, a7);
}

void partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.generateRoute(completion:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  closure #1 in MOSuggestionAssetWorkoutRouteProvider.generateRoute(completion:)(a1, a2, a3, a4, a5, *(void (**)(void))(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
}

void MOSuggestionAssetWorkoutRouteProvider.fetchRouteLocations(_:completion:)(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  os_log_type_t v6 = *(void **)(v3 + 32);
  if (v6)
  {
    id v8 = (void *)swift_allocObject();
    v8[2] = v3;
    v8[3] = v6;
    v8[4] = a2;
    v8[5] = a3;
    id v9 = objc_allocWithZone((Class)HKWorkoutRouteQuery);
    v13[4] = partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.fetchRouteLocations(_:completion:);
    v13[5] = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed HKWorkoutRouteQuery, @guaranteed [CLLocation]?, @unowned Bool, @guaranteed Error?) -> ();
    v13[3] = &block_descriptor_9_0;
    uint64_t v10 = _Block_copy(v13);
    id v11 = v6;
    swift_retain();
    swift_retain();
    id v12 = [v9 initWithRoute:a1 dataHandler:v10];
    _Block_release(v10);
    swift_release();
    [*(id *)(v3 + 16) executeQuery:v12];
  }
  else
  {
    a2(0);
  }
}

void closure #1 in MOSuggestionAssetWorkoutRouteProvider.fetchRouteLocations(_:completion:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(id))
{
  if (a2)
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v11)
    {
      specialized ContiguousArray.reserveCapacity(_:)();
      if (v11 < 0)
      {
        __break(1u);
        return;
      }
      uint64_t v12 = 0;
      do
      {
        if ((a2 & 0xC000000000000001) != 0) {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v13 = *(id *)(a2 + 8 * v12 + 32);
        }
        id v14 = v13;
        if (one-time initialization token for shared != -1) {
          swift_once();
        }
        ++v12;
        (*(void (**)(void *))(*(void *)static MOLocationShifter.shared + 104))(v14);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v11 != v12);
    }
    swift_beginAccess();
    specialized Array.append<A>(contentsOf:)((unint64_t)_swiftEmptyArrayStorage);
    swift_endAccess();
  }
  if (a3)
  {
    swift_beginAccess();
    id v15 = objc_allocWithZone((Class)MOSuggestionAssetWorkoutRoute);
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation);
    swift_bridgeObjectRetain();
    id v16 = a6;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v18 = [v15 init:isa workout:v16];

    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    __swift_project_value_buffer(v19, (uint64_t)static MOAngelLogger.shared);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Fetched workout route", v22, 2u);
      swift_slowDealloc();
    }

    id v23 = v18;
    a7(v18);
  }
}

void *MOSuggestionAssetWorkoutRouteProvider.__allocating_init()()
{
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = [objc_allocWithZone((Class)HKHealthStore) init];
  v0[3] = _swiftEmptyArrayStorage;
  v0[4] = 0;
  return v0;
}

void *MOSuggestionAssetWorkoutRouteProvider.init()()
{
  v0[2] = [objc_allocWithZone((Class)HKHealthStore) init];
  v0[3] = _swiftEmptyArrayStorage;
  v0[4] = 0;
  return v0;
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable (@guaranteed HKAnchoredObjectQuery, @guaranteed [HKSample]?, @guaranteed [HKDeletedObject]?, @guaranteed HKQueryAnchor?, @guaranteed Error?) -> ()(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v9 = a3;
  uint64_t v11 = *(void (**)(id, uint64_t, uint64_t, void *, void *))(a1 + 32);
  if (a3)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKSample);
    uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  if (a4)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKDeletedObject);
    a4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v12 = a2;
  id v13 = a5;
  id v14 = a6;
  v11(v12, v9, a4, a5, a6);
  swift_release();

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t sub_10016261C()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.fetchRouteLocations(_:completion:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4)
{
  closure #1 in MOSuggestionAssetWorkoutRouteProvider.fetchRouteLocations(_:completion:)(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(void (**)(id))(v4 + 32));
}

uint64_t thunk for @escaping @callee_guaranteed @Sendable (@guaranteed HKWorkoutRouteQuery, @guaranteed [CLLocation]?, @unowned Bool, @guaranteed Error?) -> ()(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = a3;
  uint64_t v9 = *(void (**)(id, uint64_t, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation);
    uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a5;
  v9(v10, v7, a4, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for MOSuggestionAssetWorkoutRouteProvider()
{
  return self;
}

uint64_t sub_100162760()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #1 in closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(void *a1)
{
  closure #1 in closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:)(a1, *(void (**)(void *))(v1 + 16));
}

void *MOSuggestionMotionAssetView.__allocating_init(image:title:subtitle:assignedTileSize:frame:snowglobeView:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, double a8, double a9, double a10, double a11)
{
  id v23 = objc_allocWithZone(v11);
  return MOSuggestionMotionAssetView.init(image:title:subtitle:assignedTileSize:frame:snowglobeView:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

id closure #1 in variable initialization expression of MOSuggestionMotionAssetView.exerciseNameLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = specialized static UIFont.preferredFont(forTextStyle:design:symbolicTraits:weight:compatibleWith:)((uint64_t)UIFontTextStyleFootnote, 0, 0x100000000, *(uint64_t *)&UIFontWeightBold, 0, 0);
  [v0 setFont:v1];

  [v0 setTextAlignment:0];
  [v0 setLineBreakMode:4];
  [v0 setAdjustsFontForContentSizeCategory:1];
  [v0 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  [v0 setNumberOfLines:2];
  return v0;
}

id MOSuggestionMotionAssetView.exerciseNameLabel.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_exerciseNameLabel);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionMotionAssetView.exerciseNameLabel.setter(void *a1)
{
}

uint64_t (*MOSuggestionMotionAssetView.exerciseNameLabel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionMotionAssetView.workoutDataLabel.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_workoutDataLabel);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionMotionAssetView.workoutDataLabel.setter(void *a1)
{
}

uint64_t (*MOSuggestionMotionAssetView.workoutDataLabel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionMotionAssetView.labelStack.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_labelStack);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionMotionAssetView.labelStack.setter(void *a1)
{
}

uint64_t (*MOSuggestionMotionAssetView.labelStack.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOSuggestionMotionAssetView.imageView.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_imageView);
}

void *MOSuggestionMotionAssetView.init(image:title:subtitle:assignedTileSize:frame:snowglobeView:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7, double a8, double a9, double a10, double a11)
{
  os_log_type_t v21 = v11;
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = self;
  id v24 = [v23 colorNamed:v22];

  if (!v24) {
    id v24 = [v23 systemWhiteColor];
  }
  *(void *)&v21[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_motionBackground] = v24;
  uint64_t v25 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_exerciseNameLabel;
  *(void *)&v21[v25] = closure #1 in variable initialization expression of MOSuggestionMotionAssetView.exerciseNameLabel();
  uint64_t v26 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_workoutDataLabel;
  id v27 = [objc_allocWithZone((Class)UILabel) init];
  id v28 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v27 setFont:v28];

  [v27 setTextAlignment:0];
  [v27 setAdjustsFontForContentSizeCategory:1];
  [v27 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  *(void *)&v21[v26] = v27;
  uint64_t v29 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_labelStack;
  id v30 = [objc_allocWithZone((Class)UIStackView) init];
  [v30 setAxis:1];
  [v30 setAlignment:1];
  *(void *)&v21[v29] = v30;
  uint64_t v31 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_imageView;
  type metadata accessor for MOSuggestionRoundView();
  *(void *)&v21[v31] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v32 = &v21[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_title];
  *uint64_t v32 = a2;
  v32[1] = a3;
  v21[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_assignedTileSize] = a6;
  Swift::Int v33 = &v21[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_subtitle];
  void *v33 = a4;
  v33[1] = a5;
  *(void *)&v21[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_snowglobeView] = a7;
  id v34 = a7;

  v47.receiver = v21;
  v47.super_class = (Class)type metadata accessor for MOSuggestionMotionAssetView();
  uint64_t v35 = [super initWithFrame:a8, a9, a10, a11];
  [v35 setContentMode:1];
  (*(void (**)(void *))((swift_isaMask & *v35) + 0xE8))(a1);
  [v35 setIsAccessibilityElement:1];
  id v36 = self;
  uint64_t v37 = v35;
  id v38 = [v36 mainBundle];
  v48._countAndFlagsBits = 0xD000000000000036;
  v48._object = (void *)0x80000001001E30E0;
  v39._countAndFlagsBits = 0x676E696B6C6157;
  v39._object = (void *)0xE700000000000000;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v39, (Swift::String_optional)0, (NSBundle)v38, v40, v48);

  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v37 setAccessibilityLabel:v41];

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1001DA0F0;
  *(void *)(v42 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v42 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  unint64_t v43 = v37;
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v43;
}

uint64_t type metadata accessor for MOSuggestionMotionAssetView()
{
  return self;
}

Swift::Void __swiftcall MOSuggestionMotionAssetView.makeUIView(image:)(UIImage_optional image)
{
  Class isa = image.value.super.isa;
  id v3 = [v1 setBackgroundColor:*(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_motionBackground)];
  (*(void (**)(id))((swift_isaMask & *v1) + 0xF0))(v3);
  id v4 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_snowglobeView);
  if (v4)
  {
    id v156 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_snowglobeView);
    id v5 = v4;
    [v1 addSubview:v5];
    id v4 = [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    goto LABEL_14;
  }
  if (!isa)
  {
    id v156 = 0;
    goto LABEL_14;
  }
  id v6 = objc_allocWithZone((Class)UIImageView);
  os_log_type_t v154 = isa;
  uint64_t v7 = (objc_class *)[v6 initWithImage:];
  [(objc_class *)v7 setContentMode:1];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self colorNamed:v8];

  [(objc_class *)v7 setTintColor:v9];
  id v156 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_imageView);
  [v156 addSubview:v7];
  [v1 addSubview:v156];
  [v156 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v10 = [(objc_class *)v7 heightAnchor];
  id v11 = [v156 heightAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11 multiplier:0.5];

  [v12 setActive:1];
  id v13 = [(objc_class *)v7 widthAnchor];
  id v14 = [v156 widthAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14 multiplier:0.5];

  [v15 setActive:1];
  id v16 = [(objc_class *)v7 superview];
  if (v16)
  {
    uint64_t v17 = v16;
    [(objc_class *)v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [(objc_class *)v7 centerYAnchor];
    id v19 = [v17 centerYAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:0.0];
    id v21 = v20;
    [v21 setActive:1];
  }
  NSString v22 = (objc_class *)[(objc_class *)v7 superview];
  if (!v22)
  {
    id v23 = v154;
LABEL_12:

    goto LABEL_13;
  }
  id v23 = v22;
  [(objc_class *)v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v24 = [(objc_class *)v7 centerXAnchor];
  id v25 = [(objc_class *)v23 centerXAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  [v26 setConstant:0.0];
  if (!v26)
  {

    uint64_t v7 = v154;
    goto LABEL_12;
  }
  id v27 = v26;
  [v27 setActive:1];

LABEL_13:
  id v4 = v156;
LABEL_14:
  id v28 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x98);
  uint64_t v29 = (void *)((uint64_t (*)(id))v28)(v4);
  NSString v30 = String._bridgeToObjectiveC()();
  [v29 setText:v30];

  uint64_t v31 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xB0);
  uint64_t v32 = (void *)v31();
  NSString v33 = String._bridgeToObjectiveC()();
  [v32 setText:v33];

  id v34 = v156;
  if (!v156) {
    return;
  }
  unsigned int v35 = *((unsigned __int8 *)v1 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_assignedTileSize);
  if (v35 > 8) {
    goto LABEL_80;
  }
  if (((1 << v35) & 0xD0) != 0)
  {
    id v157 = v156;
    id v55 = [v157 superview];
    if (v55)
    {
      uint64_t v56 = v55;
      [v157 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v57 = [v157 leadingAnchor];
      id v58 = [v56 leadingAnchor];
      id v59 = [v57 constraintEqualToAnchor:v58];

      [v59 setConstant:8.0];
      if (v59)
      {
        id v60 = v59;
        [v60 setActive:1];
      }
    }
    id v61 = [v157 superview];
    if (v61)
    {
      uint64_t v62 = v61;
      [v157 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v63 = [v157 topAnchor];
      id v64 = [v62 topAnchor];
      id v65 = [v63 constraintEqualToAnchor:v64];

      [v65 setConstant:8.0];
      if (v65)
      {
        id v66 = v65;
        [v66 setActive:1];
      }
    }
    id v67 = [v157 superview];
    if (v67)
    {
      id v68 = v67;
      [v157 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v69 = [v157 bottomAnchor];
      id v70 = [v68 bottomAnchor];
      id v71 = [v69 constraintEqualToAnchor:v70];

      if (v71)
      {
        [v71 setConstant:-8.0];
        id v72 = v71;
        [v72 setActive:1];
      }
    }
    id v73 = [v157 widthAnchor];
    id v74 = [v157 heightAnchor];
    id v75 = [v73 constraintEqualToAnchor:v74];

    [v75 setActive:1];
    char v76 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC8);
    uint64_t v77 = (void *)v76();
    id v78 = (void *)v28();
    [v77 addArrangedSubview:v78];

    uint64_t v79 = (void *)v76();
    uint64_t v80 = (void *)v31();
    [v79 addArrangedSubview:v80];

    uint64_t v81 = (void *)v76();
    [v81 setTranslatesAutoresizingMaskIntoConstraints:0];

    uint64_t v82 = (void *)v76();
    [v1 addSubview:v82];

    Class v83 = (void *)v76();
    [v83 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v84 = [v83 leadingAnchor];
    id v85 = [v157 trailingAnchor];
    id v86 = [v84 constraintEqualToAnchor:v85];

    [v86 setConstant:8.0];
    [v86 setActive:1];

    uint64_t v87 = (void *)v76();
    id v88 = [v87 superview];
    if (v88)
    {
      uint64_t v89 = v88;
      [v87 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v90 = [v87 centerYAnchor];
      id v91 = [v89 centerYAnchor];
      id v92 = [v90 constraintEqualToAnchor:v91];

      [v92 setConstant:0.0];
      id v93 = &selRef_collectionView_didSelectItemAtIndexPath_;
      if (v92)
      {
        id v92 = v92;
        uint64_t v94 = &selRef_collectionView_didSelectItemAtIndexPath_;
        [v92 setActive:1];

        uint64_t v87 = v92;
      }
      else
      {
        uint64_t v94 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
    }
    else
    {
      id v92 = 0;
      uint64_t v89 = v87;
      uint64_t v94 = &selRef_collectionView_didSelectItemAtIndexPath_;
      id v93 = &selRef_collectionView_didSelectItemAtIndexPath_;
    }

    uint64_t v109 = (void *)v76();
    id v110 = [v109 superview];
    if (v110)
    {
      id v155 = v110;
      [v109 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v111 = [v109 trailingAnchor];
      id v112 = [v155 trailingAnchor];
      id v113 = [v111 v93[147] v112];

      [v113 setConstant:-8.0];
      id v114 = v113;
      [v114 v94[139] 1];
LABEL_78:

      id v34 = v155;
      goto LABEL_80;
    }
LABEL_79:

    id v34 = v157;
    goto LABEL_80;
  }
  if (((1 << v35) & 0xC) == 0)
  {
    if (((1 << v35) & 0x120) == 0)
    {
LABEL_80:

      return;
    }
    id v157 = v156;
    id v36 = (void *)v28();
    [v1 addSubview:v36];

    id v153 = v31;
    uint64_t v37 = (void *)v31();
    [v1 addSubview:v37];

    if (v35 == 8)
    {
      id v38 = (void *)v28();
      Swift::String v39 = self;
      id v40 = [v39 preferredFontForTextStyle:UIFontTextStyleBody];
      id v41 = [v40 fontDescriptor];
      id v42 = [v41 fontDescriptorWithSymbolicTraits:2];

      if (v42)
      {
        id v43 = [v39 fontWithDescriptor:v42 size:0.0];

        [v38 setFont:v43];
        unint64_t v44 = (void *)v153();
        id v45 = [v39 preferredFontForTextStyle:UIFontTextStyleBody];
        id v46 = [v45 fontDescriptor];
        id v47 = [v46 fontDescriptorWithSymbolicTraits:2];

        if (v47)
        {
          id v48 = [v39 fontWithDescriptor:v47 size:0.0];

          [v44 setFont:v48];
          goto LABEL_23;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
LABEL_23:
    CGRect v49 = (void *)v28();
    id v50 = [v49 superview];
    if (v50)
    {
      uint64_t v51 = v50;
      [v49 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v52 = [v49 topAnchor];
      id v53 = [v51 topAnchor];
      id v54 = [v52 constraintEqualToAnchor:v53];

      [v54 setConstant:12.0];
      if (v54)
      {
        id v54 = v54;
        [v54 setActive:1];

        CGRect v49 = v54;
      }
    }
    else
    {
      id v54 = 0;
      uint64_t v51 = v49;
    }

    unint64_t v96 = (void *)v28();
    id v97 = [v96 superview];
    if (v97)
    {
      os_log_t v98 = v97;
      [v96 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v99 = [v96 leadingAnchor];
      id v100 = [v98 leadingAnchor];
      id v101 = [v99 constraintEqualToAnchor:v100];

      [v101 setConstant:16.0];
      if (v101)
      {
        id v101 = v101;
        [v101 setActive:1];

        unint64_t v96 = v101;
      }
    }
    else
    {
      id v101 = 0;
      os_log_t v98 = v96;
    }

    uint64_t v102 = (void *)v28();
    id v103 = [v102 superview];
    if (v103)
    {
      uint64_t v104 = v103;
      [v102 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v105 = [v102 trailingAnchor];
      id v106 = [v104 trailingAnchor];
      id v107 = [v105 constraintEqualToAnchor:v106];

      [v107 setConstant:-16.0];
      if (v107)
      {
        id v107 = v107;
        uint64_t v108 = &selRef_collectionView_didSelectItemAtIndexPath_;
        [v107 setActive:1];

        uint64_t v102 = v107;
      }
      else
      {
        uint64_t v108 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
    }
    else
    {
      uint64_t v108 = &selRef_collectionView_didSelectItemAtIndexPath_;
      id v107 = 0;
      uint64_t v104 = v102;
    }

    id v115 = (void *)v28();
    [v115 setTextAlignment:1];

    id v116 = (void *)v28();
    [v157 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v117 = [v157 topAnchor];
    id v118 = [v116 topAnchor];
    id v119 = [v117 constraintEqualToAnchor:v118 constant:24.0];

    [v119 v108[139] 1];
    id v120 = (void *)v153();
    [v157 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v121 = [v157 bottomAnchor];
    id v122 = [v120 bottomAnchor];
    id v123 = [v121 constraintEqualToAnchor:v122 constant:-24.0];

    [v123 v108[139] 1];
    id v124 = [v157 superview];
    if (v124)
    {
      id v125 = v124;
      [v157 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v126 = [v157 centerXAnchor];
      id v127 = [v125 centerXAnchor];
      id v128 = [v126 constraintEqualToAnchor:v127];

      [v128 setConstant:0.0];
      id v129 = v128;
      [v129 v108[139] 1];
    }
    id v130 = [v157 widthAnchor];
    id v131 = [v157 heightAnchor];
    id v132 = [v130 constraintEqualToAnchor:v131];

    [v132 v108[139]:1];
    uint64_t v133 = (void *)v153();
    [v133 setTextAlignment:1];

    os_log_type_t v134 = (void *)v28();
    [v134 setTextAlignment:1];

    id v135 = (void *)v153();
    id v136 = [v135 superview];
    if (v136)
    {
      id v137 = v136;
      [v135 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v138 = [v135 bottomAnchor];
      id v139 = [v137 bottomAnchor];
      id v140 = [v138 constraintEqualToAnchor:v139];

      if (v140)
      {
        [v140 setConstant:-12.0];
        id v140 = v140;
        uint64_t v141 = &selRef_collectionView_didSelectItemAtIndexPath_;
        [v140 setActive:1];

        id v135 = v140;
        os_log_type_t v142 = v153;
      }
      else
      {
        os_log_type_t v142 = v153;
        uint64_t v141 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
    }
    else
    {
      id v140 = 0;
      id v137 = v135;
      os_log_type_t v142 = v153;
      uint64_t v141 = &selRef_collectionView_didSelectItemAtIndexPath_;
    }

    uint64_t v143 = (void *)v142();
    id v144 = [v143 superview];
    if (v144)
    {
      unint64_t v145 = v144;
      [v143 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v146 = [v143 leadingAnchor];
      id v147 = [v145 leadingAnchor];
      id v148 = [v146 constraintEqualToAnchor:v147];

      [v148 setConstant:0.0];
      if (v148)
      {
        id v148 = v148;
        [v148 v141[139] 1];

        uint64_t v143 = v148;
      }
    }
    else
    {
      id v148 = 0;
      unint64_t v145 = v143;
    }

    uint64_t v109 = (void *)v142();
    id v149 = [v109 superview];
    if (v149)
    {
      id v155 = v149;
      [v109 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v150 = [v109 trailingAnchor];
      id v151 = [v155 trailingAnchor];
      id v152 = [v150 constraintEqualToAnchor:v151];

      [v152 setConstant:-8.0];
      id v114 = v152;
      [v114 v141[139] 1];
      goto LABEL_78;
    }
    goto LABEL_79;
  }
  id v95 = v156;
  UIView.fillSuper(margin:)(8.0);

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MOSuggestionMotionAssetView.handleTraitChange()()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 userInterfaceStyle];

  if (v2 == (id)2)
  {
    id v16 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_imageView);
    uint64_t v17 = self;
    id v18 = [v17 systemBlackColor];
    id v19 = [v18 colorWithAlphaComponent:0.2];

    [v16 setBackgroundColor:v19];
    id v20 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x98);
    id v21 = (void *)v20();
    id v22 = [v17 systemBackgroundColor];
    id v23 = [v22 colorWithAlphaComponent:0.6];

    [v21 setTextColor:v23];
    id v24 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0);
    id v25 = (void *)v24();
    id v26 = [v17 secondarySystemBackgroundColor];
    id v27 = [v26 colorWithAlphaComponent:0.5];

    [v25 setTextColor:v27];
    id v28 = (void *)v20();
    [v28 setOverrideUserInterfaceStyle:1];

    id v29 = (id)v24();
    [v29 setOverrideUserInterfaceStyle:1];
  }
  else
  {
    if (v2 != (id)1) {
      return;
    }
    id v3 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_imageView);
    id v4 = self;
    id v5 = [v4 systemWhiteColor];
    id v6 = [v5 colorWithAlphaComponent:0.55];

    [v3 setBackgroundColor:v6];
    uint64_t v7 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0x98);
    NSString v8 = (void *)v7();
    id v9 = [v4 systemBackgroundColor];
    id v10 = [v9 colorWithAlphaComponent:0.6];

    [v8 setTextColor:v10];
    id v11 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0);
    id v12 = (void *)v11();
    id v13 = [v4 secondarySystemBackgroundColor];
    id v14 = [v13 colorWithAlphaComponent:0.5];

    [v12 setTextColor:v14];
    id v15 = (void *)v7();
    [v15 setOverrideUserInterfaceStyle:2];

    id v29 = (id)v11();
    [v29 setOverrideUserInterfaceStyle:2];
  }
}

Swift::Void __swiftcall MOSuggestionMotionAssetView.layoutSubviews()()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for MOSuggestionMotionAssetView();
  [super layoutSubviews];
  id v2 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0xB0))(v1);
  id v3 = [v2 layer];

  id v4 = [v0 traitCollection];
  [v4 userInterfaceStyle];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setCompositingFilter:v5];
}

void MOSuggestionMotionAssetView.init(frame:)()
{
}

id MOSuggestionMotionAssetView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionMotionAssetView();
  return [super dealloc];
}

void specialized MOSuggestionMotionAssetView.init(coder:)()
{
  NSString v1 = String._bridgeToObjectiveC()();
  objc_super v2 = self;
  id v3 = [v2 colorNamed:v1];

  if (!v3) {
    id v3 = [v2 systemWhiteColor];
  }
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_motionBackground] = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_exerciseNameLabel;
  *(void *)&v0[v4] = closure #1 in variable initialization expression of MOSuggestionMotionAssetView.exerciseNameLabel();
  uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_workoutDataLabel;
  id v6 = [objc_allocWithZone((Class)UILabel) init];
  id v7 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v6 setFont:v7];

  [v6 setTextAlignment:0];
  [v6 setAdjustsFontForContentSizeCategory:1];
  [v6 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  *(void *)&v0[v5] = v6;
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_labelStack;
  id v9 = [objc_allocWithZone((Class)UIStackView) init];
  [v9 setAxis:1];
  [v9 setAlignment:1];
  *(void *)&v0[v8] = v9;
  uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService27MOSuggestionMotionAssetView_imageView;
  type metadata accessor for MOSuggestionRoundView();
  *(void *)&v0[v10] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100165008@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x98))();
  *a2 = result;
  return result;
}

uint64_t sub_100165064(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xA0))(*a1);
}

uint64_t sub_1001650C8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  *a2 = result;
  return result;
}

uint64_t sub_100165124(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xB8))(*a1);
}

uint64_t sub_100165188@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001651E4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD0))(*a1);
}

uint64_t *MOMusicPlaybackCoordinator.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static MOMusicPlaybackCoordinator.shared;
}

uint64_t MOMusicPlaybackCoordinator.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  MOMusicPlaybackCoordinator.init()();
  return v0;
}

uint64_t static MOMusicPlaybackCoordinator.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t MOMusicPlaybackCoordinator.nowPlayingTrackID.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MOMusicPlaybackCoordinator.nowPlayingTrackID.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOMusicPlaybackCoordinator.nowPlayingTrackID.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOMusicPlaybackCoordinator.init()()
{
  *(void *)(v0 + 16) = [self systemMusicPlayer];
  *(void *)(v0 + 24) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 32) = 0;
  (*(void (**)(void))(*(void *)v0 + 224))();
  id v1 = [*(id *)(v0 + 16) nowPlayingItem];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 playbackStoreID];
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    swift_beginAccess();
    *(void *)(v0 + 40) = v4;
    *(void *)(v0 + 48) = v6;
    swift_bridgeObjectRelease();
  }
  return v0;
}

id *MOMusicPlaybackCoordinator.deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  (*((void (**)(void))*v0 + 40))();
  [v0[2] endGeneratingPlaybackNotifications];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOMusicPlaybackCoordinator.__deallocating_deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  (*((void (**)(void))*v0 + 40))();
  [v0[2] endGeneratingPlaybackNotifications];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t MOMusicPlaybackCoordinator.register(view:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (v7)
  {
    uint64_t v8 = result;
    uint64_t v9 = v7;
    uint64_t v10 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 136);
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = v10(v11);
    if (*(void *)(v12 + 16) && (unint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)(v8, v9), (v14 & 1) != 0))
    {
      id v15 = *(void **)(*(void *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)a1, (uint64_t)v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v15[2] + 1, 1, v15);
      }
      unint64_t v17 = v15[2];
      unint64_t v16 = v15[3];
      if (v17 >= v16 >> 1) {
        id v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v16 > 1), v17 + 1, 1, v15);
      }
      v15[2] = v17 + 1;
      outlined init with take of Tip(v23, (uint64_t)&v15[5 * v17 + 4]);
      uint64_t v18 = (*(uint64_t (**)(long long *))(*(void *)v2 + 152))(v23);
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<MOMusicPlaybackCoordinatorDelegate>);
      id v15 = (void *)swift_allocObject();
      *((_OWORD *)v15 + 1) = xmmword_1001DA0F0;
      outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)a1, (uint64_t)(v15 + 4));
      uint64_t v18 = (*(uint64_t (**)(long long *))(*(void *)v2 + 152))(v23);
    }
    id v20 = (uint64_t (*)(long long *, void))v18;
    id v21 = v19;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v21;
    *id v21 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v15, v8, v9, isUniquelyReferenced_nonNull_native);
    *id v21 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v20(v23, 0);
  }
  return result;
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.subscribeToNowPlaying()()
{
  [*(id *)(v0 + 16) beginGeneratingPlaybackNotifications];
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 removeObserver:v0];

  id v3 = [v1 defaultCenter];
  [v3 addObserver:v0 selector:"playbackStateDidChangeWithNote:" name:MPMusicPlayerControllerPlaybackStateDidChangeNotification object:0];

  id v4 = [v1 defaultCenter];
  [v4 addObserver:v0 selector:"nowPlayingItemChangedWithNote:" name:MPMusicPlayerControllerNowPlayingItemDidChangeNotification object:0];
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.pauseSystemPlayback()()
{
  [*(id *)(v0 + 16) pause];
}

Swift::Bool __swiftcall MOMusicPlaybackCoordinator.matchesNowPlayingMediaItem(track:)(Swift::String_optional track)
{
  object = track.value._object;
  uint64_t countAndFlagsBits = track.value._countAndFlagsBits;
  id v4 = [*(id *)(v1 + 16) nowPlayingItem];
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  id v6 = [v4 playbackStoreID];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  if (!object)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  if (v7 != countAndFlagsBits || v9 != object)
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();

    return (v11 & 1) != 0;
  }
  swift_bridgeObjectRelease();

  return 1;
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.sendPlayNotificationsForID(track:)(Swift::String track)
{
  object = track._object;
  uint64_t countAndFlagsBits = track._countAndFlagsBits;
  id v4 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 136);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = v4(v5);
  if (*(void *)(v6 + 16)
    && (unint64_t v7 = specialized __RawDictionaryStorage.find<A>(_:)(countAndFlagsBits, (uint64_t)object), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = v9 + 32;
      do
      {
        outlined init with copy of MOProtectedAppsManagerDelegate(v11, (uint64_t)v14);
        uint64_t v12 = v15;
        uint64_t v13 = v16;
        __swift_project_boxed_opaque_existential_1(v14, v15);
        (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
        v11 += 40;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.sendStopNotificationsForID(track:)(Swift::String track)
{
  object = track._object;
  uint64_t countAndFlagsBits = track._countAndFlagsBits;
  id v4 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 136);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = v4(v5);
  if (*(void *)(v6 + 16)
    && (unint64_t v7 = specialized __RawDictionaryStorage.find<A>(_:)(countAndFlagsBits, (uint64_t)object), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = v9 + 32;
      do
      {
        outlined init with copy of MOProtectedAppsManagerDelegate(v11, (uint64_t)v14);
        uint64_t v12 = v15;
        uint64_t v13 = v16;
        __swift_project_boxed_opaque_existential_1(v14, v15);
        (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
        v11 += 40;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.sendProgressNotificationsForID(track:progress:)(Swift::String track, Swift::Float progress)
{
  object = track._object;
  uint64_t countAndFlagsBits = track._countAndFlagsBits;
  uint64_t v6 = *(uint64_t (**)(uint64_t))(*(void *)v2 + 136);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = v6(v7);
  if (*(void *)(v8 + 16)
    && (unint64_t v9 = specialized __RawDictionaryStorage.find<A>(_:)(countAndFlagsBits, (uint64_t)object), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = v11 + 32;
      do
      {
        outlined init with copy of MOProtectedAppsManagerDelegate(v13, (uint64_t)v16);
        uint64_t v14 = v17;
        uint64_t v15 = v18;
        __swift_project_boxed_opaque_existential_1(v16, v17);
        (*(void (**)(uint64_t, uint64_t, Swift::Float))(v15 + 32))(v14, v15, progress);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        v13 += 40;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.updateNowPlayingTrack()()
{
  uint64_t v1 = (*((uint64_t (**)(void))*v0 + 23))();
  if (!v2) {
    return;
  }
  uint64_t v3 = v1;
  uint64_t v4 = v2;
  id v5 = [v0[2] nowPlayingItem];
  if (v5)
  {
    id v16 = v5;
    id v6 = [v5 playbackStoreID];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    (*((void (**)(uint64_t, uint64_t))*v0 + 24))(v7, v9);
    id v10 = [v16 playbackStoreID];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    if (v3 != v11 || v4 != v13)
    {
      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0) {
        (*((void (**)(uint64_t, uint64_t))*v0 + 32))(v3, v4);
      }
      swift_bridgeObjectRelease();

      return;
    }
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.updatePlayState()()
{
  id v1 = [v0[2] nowPlayingItem];
  if (v1)
  {
    id v9 = v1;
    id v2 = [v1 playbackStoreID];
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;

    char v6 = (*((uint64_t (**)(void))*v0 + 41))();
    uint64_t v7 = (void (**)(uint64_t, void))*v0;
    if (v6)
    {
      v7[32](v3, v5);
      swift_bridgeObjectRelease();
    }
    else
    {
      v7[31](v3, v5);
      uint64_t v8 = swift_bridgeObjectRelease();
      (*((void (**)(uint64_t))*v0 + 39))(v8);
    }
  }
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.updateDelegateProgressIndication()()
{
  id v1 = [v0[2] nowPlayingItem];
  if (v1)
  {
    id v11 = v1;
    id v2 = [v1 playbackStoreID];
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;

    [v0[2] currentPlaybackTime];
    double v7 = v6;
    [v11 playbackDuration];
    float v9 = v8;
    if (v9 > 0.0)
    {
      float v10 = v7;
      (*((void (**)(uint64_t, uint64_t, float))*v0 + 33))(v3, v5, v10 / v9);
    }
    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.playbackStateDidChange(note:)(NSNotification note)
{
  (*(void (**)(void))(*(void *)v1 + 280))();
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.nowPlayingItemChanged(note:)(NSNotification note)
{
  (*(void (**)(void))(*(void *)v1 + 272))();
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.createTimerIfNeeded()()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 160);
  id v2 = (void *)v1();

  if (!v2)
  {
    id v3 = [self scheduledTimerWithTimeInterval:v0 target:"updateDelegateProgressIndication" selector:0 userInfo:1 repeats:1.0];
    uint64_t v4 = (*(uint64_t (**)(id))(*(void *)v0 + 168))(v3);
    uint64_t v5 = (void *)((uint64_t (*)(uint64_t))v1)(v4);
    if (v5)
    {
      double v6 = v5;
      [v5 setTolerance:0.2];
    }
    double v7 = *(void (**)(void))(*(void *)v0 + 288);
    v7();
  }
}

Swift::Void __swiftcall MOMusicPlaybackCoordinator.invalidateTimerIfNeeded()()
{
  uint64_t v1 = *(uint64_t (**)(void))(*(void *)v0 + 160);
  id v2 = (void *)v1();

  if (v2)
  {
    id v3 = (void *)v1();
    [v3 invalidate];

    uint64_t v4 = *(void (**)(void))(*(void *)v0 + 168);
    v4(0);
  }
}

Swift::Bool __swiftcall MOMusicPlaybackCoordinator.updateTimerForPauseState()()
{
  id v1 = [v0[2] playbackState];
  if (v1 != (id)1) {
    (*((void (**)(void))*v0 + 40))();
  }
  return v1 != (id)1;
}

Swift::Bool __swiftcall MOMusicPlaybackCoordinator.isPlaying()()
{
  return [*(id *)(v0 + 16) playbackState] == (id)1;
}

uint64_t MOMusicPlaybackCoordinator.doesMediaViewIDMatchNowPlaying(view:)(void *a1)
{
  id v3 = [*(id *)(v1 + 16) nowPlayingItem];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 playbackStoreID];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v9);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
    if (v12)
    {
      if (v6 == v11 && v12 == v8) {
        char v14 = 1;
      }
      else {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      char v14 = 0;
    }
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

BOOL MOMusicPlaybackCoordinator.isMediaViewNowPlaying(view:)()
{
  return ((*(uint64_t (**)(void))(*(void *)v0 + 344))() & 1) != 0
      && ((*(uint64_t (**)(void))(*(void *)v0 + 336))() & 1) != 0;
}

void MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:)(void *a1)
{
  id v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (v7) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = 0;
  }
  if (v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = 0xE000000000000000;
  }
  if ((*(uint64_t (**)(void *))(*v1 + 344))(a1))
  {
    if ((*(uint64_t (**)(void))(*v1 + 336))())
    {
      if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.shared);
      swift_bridgeObjectRetain();
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136315138;
        swift_bridgeObjectRetain();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "[MOMusicPlayerCoordinator] pause trackId=%s", v13, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      [(id)v2[2] pause];
    }
    else
    {
      if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v22 = type metadata accessor for Logger();
      __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.shared);
      swift_bridgeObjectRetain();
      id v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v23, v24))
      {
        id v25 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)id v25 = 136315138;
        swift_bridgeObjectRetain();
        getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v8, v9, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "[MOMusicPlayerCoordinator] Resuming trackId=%s", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      [(id)v2[2] play];
    }
  }
  else
  {
    char v14 = (void *)v1[2];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1001DA0F0;
    *(void *)(v15 + 32) = v8;
    *(void *)(v15 + 40) = v9;
    swift_bridgeObjectRetain();
    id v16 = v14;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v16 setQueueWithStoreIDs:isa];

    uint64_t v18 = (void *)v1[2];
    id v19 = (void *)swift_allocObject();
    v19[2] = v8;
    v19[3] = v9;
    v19[4] = v1;
    aBlock[4] = (uint64_t)partial apply for closure #1 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:);
    aBlock[5] = (uint64_t)v19;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
    aBlock[3] = (uint64_t)&block_descriptor_32;
    id v20 = _Block_copy(aBlock);
    id v21 = v18;
    swift_retain();
    swift_release();
    [v21 prepareToPlayWithCompletionHandler:v20];
    _Block_release(v20);
  }
}

void closure #1 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  if (a1)
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.shared);
    swift_errorRetain();
    swift_errorRetain();
    os_log_t oslog = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Error?);
      uint64_t v7 = Optional.debugDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "[MOMusicPlayerCoordinator] error %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.shared);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(a2, a3, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "[MOMusicPlayerCoordinator] Playing trackId=%s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    [*(id *)(a4 + 16) play];
  }
}

uint64_t sub_10016720C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:)(uint64_t a1)
{
  closure #1 in MOMusicPlaybackCoordinator.handlePlayPauseButtonChange(view:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t sub_100167270@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 136))();
  *a2 = result;
  return result;
}

uint64_t sub_1001672BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 144);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_100167310@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 160))();
  *a2 = result;
  return result;
}

uint64_t sub_10016735C(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))(**(void **)a2 + 168);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_1001673B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 184))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100167400(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 192);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t type metadata accessor for MOMusicPlaybackCoordinator()
{
  return self;
}

void MOSuggestionSheetListPlayButton.mediaAssetID.didset()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v1 = static MOMusicPlaybackCoordinator.shared;
  uint64_t v2 = type metadata accessor for MOSuggestionSheetListPlayButton();
  uint64_t v11 = v2;
  uint64_t v12 = &protocol witness table for MOSuggestionSheetListPlayButton;
  v10[0] = v0;
  uint64_t v3 = *(void (**)(void *))(*(void *)v1 + 216);
  id v4 = v0;
  v3(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  uint64_t v11 = v2;
  uint64_t v12 = &protocol witness table for MOSuggestionSheetListPlayButton;
  v10[0] = v4;
  os_log_type_t v5 = *(void (**)(void *))(*(void *)static MOMusicPlaybackCoordinator.shared + 352);
  id v6 = v4;
  v5(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  id v7 = [self configurationWithPointSize:6 weight:10.0];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8 withConfiguration:v7];

  if (!v9) {
    id v9 = [objc_allocWithZone((Class)UIImage) init];
  }
  [v6 setImage:v9 forState:0];
}

uint64_t MOSuggestionSheetListPlayButton.mediaAssetID.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

void MOSuggestionSheetListPlayButton.mediaAssetID.setter(uint64_t a1, uint64_t a2)
{
  os_log_type_t v5 = (void *)(v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID);
  swift_beginAccess();
  *os_log_type_t v5 = a1;
  v5[1] = a2;
  swift_bridgeObjectRelease();
  MOSuggestionSheetListPlayButton.mediaAssetID.didset();
}

void (*MOSuggestionSheetListPlayButton.mediaAssetID.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionSheetListPlayButton.mediaAssetID.modify;
}

void MOSuggestionSheetListPlayButton.mediaAssetID.modify(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    MOSuggestionSheetListPlayButton.mediaAssetID.didset();
  }
}

id MOSuggestionSheetListPlayButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID];
  uint64_t v10 = (objc_class *)type metadata accessor for MOSuggestionSheetListPlayButton();
  *(void *)id v9 = 0;
  *((void *)v9 + 1) = 0;
  v13.receiver = v4;
  v13.super_class = v10;
  id v11 = [super initWithFrame:a1, a2, a3, a4];
  MOSuggestionSheetListPlayButton.sharedInit()();

  return v11;
}

uint64_t type metadata accessor for MOSuggestionSheetListPlayButton()
{
  return self;
}

id MOSuggestionSheetListPlayButton.init(coder:)(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetListPlayButton_mediaAssetID];
  id v4 = (objc_class *)type metadata accessor for MOSuggestionSheetListPlayButton();
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  v9.receiver = v1;
  v9.super_class = v4;
  [super initWithCoder:a1];
  id v6 = v5;
  if (v5)
  {
    id v7 = v5;
    MOSuggestionSheetListPlayButton.sharedInit()();
  }
  return v6;
}

uint64_t MOSuggestionSheetListPlayButton.sharedInit()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for UIButton.Configuration();
  uint64_t v13 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  static UIButton.Configuration.filled()();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for UIButton.Configuration.Size.medium(_:), v9);
  UIButton.Configuration.buttonSize.setter();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v5);
  UIButton.Configuration.cornerStyle.setter();
  id v16 = self;
  id v17 = [v16 tertiarySystemFillColor];
  UIButton.Configuration.baseBackgroundColor.setter();
  id v18 = [v16 systemIndigoColor];
  UIButton.Configuration.baseForegroundColor.setter();
  id v19 = [self configurationWithPointSize:6 weight:10.0];
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [self systemImageNamed:v20 withConfiguration:v19];

  UIButton.Configuration.image.setter();
  id v22 = [self mainBundle];
  v31._object = (void *)0x80000001001E9040;
  v23._uint64_t countAndFlagsBits = 0x64654D2079616C50;
  v23._object = (void *)0xEA00000000006169;
  v24._uint64_t countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v31._uint64_t countAndFlagsBits = 0xD000000000000027;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v31);

  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setAccessibilityLabel:v25];

  uint64_t v26 = v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v4, v15, v30);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v4, 0, 1, v26);
  UIButton.configuration.setter();
  type metadata accessor for UIAction();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v1 addAction:v27 forControlEvents:64];

  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v26);
}

void closure #1 in MOSuggestionSheetListPlayButton.sharedInit()()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x80))();
  }
}

Swift::Void __swiftcall MOSuggestionSheetListPlayButton.setPublicUI(_:)(Swift::Bool a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v10 - v6;
  UIButton.configuration.getter();
  uint64_t v8 = type metadata accessor for UIButton.Configuration();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    outlined init with copy of UIButton.Configuration?((uint64_t)v7, (uint64_t)v5);
    UIButton.configuration.setter();
    outlined destroy of UIButton.Configuration?((uint64_t)v7);
  }
  else
  {
    id v9 = [self systemIndigoColor];
    UIButton.Configuration.baseForegroundColor.setter();
    UIButton.configuration.setter();
  }
  [v1 setNeedsUpdateConfiguration];
}

Swift::Void __swiftcall MOSuggestionSheetListPlayButton.touchPlayback()()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v1 = static MOMusicPlaybackCoordinator.shared;
  v4[3] = type metadata accessor for MOSuggestionSheetListPlayButton();
  v4[4] = &protocol witness table for MOSuggestionSheetListPlayButton;
  v4[0] = v0;
  uint64_t v2 = *(void (**)(void *))(*(void *)v1 + 360);
  id v3 = v0;
  v2(v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t MOSuggestionSheetListPlayButton.__ivar_destroyer()
{
  return swift_bridgeObjectRelease();
}

id MOSuggestionSheetListPlayButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetListPlayButton();
  return [super dealloc];
}

uint64_t MOSuggestionSheetListPlayButton.mediaID.getter()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x58))();
}

Swift::Void __swiftcall MOSuggestionSheetListPlayButton.didReceiveShouldPlayNotification()()
{
}

Swift::Void __swiftcall MOSuggestionSheetListPlayButton.didReceiveShouldStopNotification()()
{
}

void MOSuggestionSheetListPlayButton.didReceiveShouldPlayNotification()(const char *a1)
{
  id v3 = v1;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.shared);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a1, v7, 2u);
    swift_slowDealloc();
  }

  id v8 = [self configurationWithPointSize:6 weight:10.0];
  NSString v9 = String._bridgeToObjectiveC()();
  id v11 = [self systemImageNamed:v9 withConfiguration:v8];

  id v10 = v11;
  if (!v11) {
    id v10 = [objc_allocWithZone((Class)UIImage) init];
  }
  id v12 = v10;
  [v3 setImage:forState:];
}

uint64_t protocol witness for MOMusicPlaybackCoordinatorDelegate.mediaID.getter in conformance MOSuggestionSheetListPlayButton()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x58))();
}

void protocol witness for MOMusicPlaybackCoordinatorDelegate.didReceiveShouldPlayNotification() in conformance MOSuggestionSheetListPlayButton()
{
}

void protocol witness for MOMusicPlaybackCoordinatorDelegate.didReceiveShouldStopNotification() in conformance MOSuggestionSheetListPlayButton()
{
}

uint64_t sub_100168508@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x58))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100168564(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x60);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_1001685DC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionSheetListPlayButton.sharedInit()()
{
}

uint64_t MOSuggestionAssetReference.visualSubtypeWithCount.getter()
{
  type metadata accessor for MOMultiMapAssetReference(0);
  uint64_t v0 = swift_dynamicCastClass();
  if (!v0) {
    return MOSuggestionAssetReference.visualSubType.getter();
  }
  uint64_t v1 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 360);
  uint64_t v2 = swift_retain();
  if ((unint64_t)v1(v2) >> 62) {
    _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRelease();
  swift_release();
  return 15;
}

void *one-time initialization function for assetTypeDirectMapping()
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetsType, MOSuggestionAssetVisualSubType)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DB6A0;
  uint64_t v1 = (void *)MOSuggestionAssetsTypePhoto;
  *(void *)(inited + 32) = MOSuggestionAssetsTypePhoto;
  *(unsigned char *)(inited + 40) = 12;
  uint64_t v2 = (void *)MOSuggestionAssetsTypeLivePhoto;
  *(void *)(inited + 48) = MOSuggestionAssetsTypeLivePhoto;
  *(unsigned char *)(inited + 56) = 13;
  uint64_t v3 = (void *)MOSuggestionAssetsTypeVideo;
  *(void *)(inited + 64) = MOSuggestionAssetsTypeVideo;
  *(unsigned char *)(inited + 72) = 14;
  uint64_t v4 = (void *)MOSuggestionAssetsTypeWorkoutGroup;
  *(void *)(inited + 80) = MOSuggestionAssetsTypeWorkoutGroup;
  *(unsigned char *)(inited + 88) = 10;
  uint64_t v5 = (void *)MOSuggestionAssetsTypeWorkout;
  *(void *)(inited + 96) = MOSuggestionAssetsTypeWorkout;
  *(unsigned char *)(inited + 104) = 7;
  os_log_type_t v6 = (void *)MOSuggestionAssetsTypeMultiPinMap;
  *(void *)(inited + 112) = MOSuggestionAssetsTypeMultiPinMap;
  *(unsigned char *)(inited + 120) = 15;
  uint64_t v7 = (void *)MOSuggestionAssetsTypeStateOfMindAsset;
  *(void *)(inited + 128) = MOSuggestionAssetsTypeStateOfMindAsset;
  *(unsigned char *)(inited + 136) = 25;
  id v8 = v1;
  id v9 = v2;
  id v10 = v3;
  id v11 = v4;
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  uint64_t result = (void *)specialized Dictionary.init(dictionaryLiteral:)(inited);
  static MOSuggestionAssetReference.assetTypeDirectMapping = result;
  return result;
}

unint64_t MOSuggestionAssetReference.mediaSubType.getter()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 272))();
  if ((v2 & 1) != 0 || (unint64_t)(v1 - 1) > 7) {
    return 26;
  }
  else {
    return 0x605041A011A0200uLL >> (8 * (v1 - 1));
  }
}

uint64_t MOSuggestionAssetReference.motionActivitySubType.getter()
{
  uint64_t v1 = (*(uint64_t (**)(void))(*(void *)v0 + 280))();
  if (!v1) {
    return 26;
  }
  char v2 = (void *)v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_20:

    return 17;
  }
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  if (v9 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_23;
  }
  char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_23:

    return 18;
  }
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;
  uint64_t v19 = 19;
  if (v15 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v17 != v18)
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
      uint64_t v19 = 19;
    }
    else {
      uint64_t v19 = 26;
    }
  }
  id v20 = v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t MOSuggestionAssetReference.genericMapSubType.getter()
{
  type metadata accessor for MOGenericMapAssetReference(0);
  uint64_t v0 = swift_dynamicCastClass();
  if (!v0) {
    return 26;
  }
  uint64_t v1 = *(uint64_t (**)(uint64_t))(*(void *)v0 + 344);
  uint64_t v2 = swift_retain();
  uint64_t v3 = (void *)v1(v2);
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_16:
    swift_release();

    return 20;
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_18:
    swift_release();

    return 21;
  }
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
  {

    swift_release();
    swift_bridgeObjectRelease_n();
    return 22;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21) {
    return 22;
  }
  return 26;
}

unint64_t MOSuggestionAssetReference.visualSubType.getter()
{
  if (one-time initialization token for assetTypeDirectMapping != -1) {
    swift_once();
  }
  uint64_t v1 = static MOSuggestionAssetReference.assetTypeDirectMapping;
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v0 + 120);
  uint64_t v3 = v2();
  uint64_t v4 = (void *)v3;
  if (v1[2])
  {
    uint64_t v5 = specialized __RawDictionaryStorage.find<A>(_:)(v3);
    if (v6)
    {
      uint64_t v7 = *(unsigned __int8 *)(v1[7] + v5);

      return v7;
    }
  }

  char v9 = (void *)v2();
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_21:

    return MOSuggestionAssetReference.mediaSubType.getter();
  }
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_25;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_25:

    return MOSuggestionAssetReference.motionActivitySubType.getter();
  }
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = v23;
  if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      return 26;
    }
  }

  return MOSuggestionAssetReference.genericMapSubType.getter();
}

void static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithBundleIdentifier:v7];

  if (one-time initialization token for iconDescriptor != -1) {
    swift_once();
  }
  uint64_t v9 = static MOSuggestionAssetAppIconProvider.iconDescriptor;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  v12[4] = _s16MomentsUIService32MOSuggestionAssetAppIconProviderC11getImageFor16bundleIdentifier10completionySS_ySo7UIImageCSgctFZySo10CGImageRefaSgcfU_TA_0;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
  void v12[3] = &block_descriptor_33;
  uint64_t v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  [v8 getCGImageForImageDescriptor:v9 completion:v11];
  _Block_release(v11);
}

uint64_t MOSuggestionAssetAppIconProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  id v1 = [self mainScreen];
  [v1 scale];
  double v3 = v2;

  *(void *)(v0 + 16) = [objc_allocWithZone((Class)ISImageDescriptor) initWithSize:350.0 scale:350.0];
  return v0;
}

uint64_t *MOSuggestionAssetAppIconProvider.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static MOSuggestionAssetAppIconProvider.shared;
}

uint64_t static MOSuggestionAssetAppIconProvider.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }

  return swift_retain();
}

id one-time initialization function for iconDescriptor()
{
  id v0 = [self mainScreen];
  [v0 scale];
  double v2 = v1;

  id result = [objc_allocWithZone((Class)ISImageDescriptor) initWithSize:50.0 scale:50.0];
  static MOSuggestionAssetAppIconProvider.iconDescriptor = (uint64_t)result;
  return result;
}

void MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithBundleIdentifier:v8];

  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  v13[4] = partial apply for closure #1 in MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:);
  v13[5] = v11;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
  v13[3] = &block_descriptor_6_2;
  uint64_t v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  [v9 getCGImageForImageDescriptor:v10 completion:v12];
  _Block_release(v12);
}

void closure #1 in MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:)(void *a1, void (*a2)(void))
{
  if (a1)
  {
    id v4 = objc_allocWithZone((Class)UIImage);
    id v5 = a1;
    id v6 = [v4 initWithCGImage:v5];
    uint64_t v7 = MOSuggestionAssetsTypeAppIcon;
    type metadata accessor for UIImage();
    id v8 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v6 type:v7 contentClassType:swift_getObjCClassFromMetadata()];
    a2();
  }
  else
  {
    a2();
  }
}

uint64_t sub_100169594()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void _s16MomentsUIService32MOSuggestionAssetAppIconProviderC11getImageFor16bundleIdentifier10completionySS_ySo7UIImageCSgctFZySo10CGImageRefaSgcfU_TA_0(void *a1)
{
  closure #1 in static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:completion:)(a1, *(void (**)(void))(v1 + 16));
}

uint64_t block_copy_helper_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_33()
{
  return swift_release();
}

void static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:shouldApplyMask:completion:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  id v8 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithBundleIdentifier:v9];

  if (one-time initialization token for iconDescriptor != -1) {
    swift_once();
  }
  uint64_t v11 = static MOSuggestionAssetAppIconProvider.iconDescriptor;
  [(id)static MOSuggestionAssetAppIconProvider.iconDescriptor setShouldApplyMask:a3 & 1];
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  v14[4] = partial apply for closure #1 in static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:shouldApplyMask:completion:);
  v14[5] = v12;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
  void v14[3] = &block_descriptor_12_1;
  uint64_t v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  [v10 getCGImageForImageDescriptor:v11 completion:v13];
  _Block_release(v13);
}

void closure #1 in static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:completion:)(void *a1, void (*a2)(void))
{
  if (a1)
  {
    id v4 = objc_allocWithZone((Class)UIImage);
    id v5 = a1;
    id v6 = [v4 initWithCGImage:v5];
    a2();
  }
  else
  {
    a2();
  }
}

uint64_t MOSuggestionAssetAppIconProvider.init()()
{
  id v1 = [self mainScreen];
  [v1 scale];
  double v3 = v2;

  *(void *)(v0 + 16) = [objc_allocWithZone((Class)ISImageDescriptor) initWithSize:350.0 scale:350.0];
  return v0;
}

void partial apply for closure #1 in MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:)(void *a1)
{
  closure #1 in MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:)(a1, *(void (**)(void))(v1 + 16));
}

uint64_t type metadata accessor for MOSuggestionAssetAppIconProvider()
{
  return self;
}

uint64_t Array.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  type metadata accessor for Array();
  swift_getWitnessTable();
  RandomAccessCollection<>.indices.getter();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Range<Int>);
  if (Range.contains(_:)())
  {
    Array.subscript.getter();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, v4, 1, a1);
}

id static MOSuggestionTheme.Fonts.footnoteBoldTightLeading()()
{
  return static MOSuggestionTheme.Fonts.footnoteBoldTightLeading()(&UIFontTextStyleFootnote);
}

id static MOSuggestionTheme.Fonts.caption1BoldTightLeading()()
{
  return static MOSuggestionTheme.Fonts.footnoteBoldTightLeading()(&UIFontTextStyleCaption1);
}

id static MOSuggestionTheme.Fonts.footnoteBoldTightLeading()(void *a1)
{
  id v1 = [self preferredFontDescriptorWithTextStyle:*a1];
  id v2 = [v1 fontDescriptorWithSymbolicTraits:32770];

  if (!v2) {
    return 0;
  }
  id v3 = [self fontWithDescriptor:v2 size:0.0];

  return v3;
}

void static MOSuggestionTheme.Fonts.footnoteBoldFont()()
{
}

id static MOSuggestionTheme.Fonts.footnote()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleFootnote);
}

Class static MOSuggestionTheme.Fonts.subheaderEmphFont()()
{
  return static MOSuggestionTheme.Fonts.subheaderEmphFont()(&UIFontTextStyleSubheadline, (UIFontWeight *)&UIFontWeightSemibold);
}

id static MOSuggestionTheme.Fonts.subheaderFont()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleSubheadline);
}

id static MOSuggestionTheme.Colors.keyColor(publicUI:)(char a1)
{
  id v2 = self;
  id v3 = &selRef_systemBlueColor;
  if ((a1 & 1) == 0) {
    id v3 = &selRef_systemIndigoColor;
  }
  id v4 = [v2 *v3];

  return v4;
}

id static MOSuggestionTheme.Colors.backgroundPrimary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_systemBackgroundColor);
}

void static MOSuggestionTheme.Fonts.headlineBoldFont()()
{
}

id static MOSuggestionTheme.Colors.backgroundGroupedSecondary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_secondarySystemGroupedBackgroundColor);
}

void static MOSuggestionTheme.Fonts.subheaderFontBold()()
{
}

Class static MOSuggestionTheme.Fonts.footnoteEmphFont()()
{
  return static MOSuggestionTheme.Fonts.subheaderEmphFont()(&UIFontTextStyleFootnote, (UIFontWeight *)&UIFontWeightSemibold);
}

id static MOSuggestionTheme.Colors.secondaryColor(publicUI:)(char a1)
{
  id v2 = self;
  id v3 = &selRef_systemBlueColor;
  if ((a1 & 1) == 0) {
    id v3 = &selRef_systemIndigoColor;
  }
  id v4 = [v2 *v3];
  id v5 = [v4 colorWithAlphaComponent:0.15];

  return v5;
}

id static MOSuggestionTheme.Colors.textPrimary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_labelColor);
}

id static MOSuggestionTheme.Colors.tertiaryFill()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_tertiarySystemFillColor);
}

uint64_t *MOSuggestionTheme.Colors.exerciseGreen.unsafeMutableAddressor()
{
  if (one-time initialization token for exerciseGreen != -1) {
    swift_once();
  }
  return &static MOSuggestionTheme.Colors.exerciseGreen;
}

uint64_t *MOSuggestionTheme.Sizes.cornerRadius.unsafeMutableAddressor()
{
  if (one-time initialization token for cornerRadius != -1) {
    swift_once();
  }
  return &static MOSuggestionTheme.Sizes.cornerRadius;
}

void *MOSuggestionTheme.Styles.shadowOpacity.unsafeMutableAddressor()
{
  return &static MOSuggestionTheme.Styles.shadowOpacity;
}

void *MOSuggestionTheme.Styles.blurRadius.unsafeMutableAddressor()
{
  return &static MOSuggestionTheme.Styles.blurRadius;
}

id static MOSuggestionTheme.Colors.backgroundGroupedPrimary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_systemGroupedBackgroundColor);
}

id static MOSuggestionTheme.Colors.darkModePlatterBackgroundColor()()
{
  id v0 = [self whiteColor];
  id v1 = [v0 colorWithAlphaComponent:0.15];

  return v1;
}

Class static MOSuggestionTheme.Fonts.title3Font()()
{
  return static MOSuggestionTheme.Fonts.subheaderEmphFont()(&UIFontTextStyleTitle3, (UIFontWeight *)&UIFontWeightRegular);
}

id static MOSuggestionTheme.Fonts.callout()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleCallout);
}

id one-time initialization function for exerciseGreen()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.650980392 green:1.0 blue:0.0 alpha:1.0];
  static MOSuggestionTheme.Colors.exerciseGreen = (uint64_t)result;
  return result;
}

id UIColor.init(rgbColorCodeRed:green:blue:alpha:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  double v5 = (double)a1 / 255.0;
  double v6 = (double)a2 / 255.0;
  double v7 = (double)a3 / 255.0;
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v8 initWithRed:v5 green:v6 blue:v7 alpha:a4];
}

id static MOSuggestionTheme.Colors.exerciseGreen.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for exerciseGreen, (void **)&static MOSuggestionTheme.Colors.exerciseGreen);
}

id one-time initialization function for exerciseGreenFaded()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.650980392 green:1.0 blue:0.0 alpha:0.18];
  static MOSuggestionTheme.Colors.exerciseGreenFaded = (uint64_t)result;
  return result;
}

uint64_t *MOSuggestionTheme.Colors.exerciseGreenFaded.unsafeMutableAddressor()
{
  if (one-time initialization token for exerciseGreenFaded != -1) {
    swift_once();
  }
  return &static MOSuggestionTheme.Colors.exerciseGreenFaded;
}

id static MOSuggestionTheme.Colors.exerciseGreenFaded.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for exerciseGreenFaded, (void **)&static MOSuggestionTheme.Colors.exerciseGreenFaded);
}

id static MOSuggestionTheme.Colors.textWhite()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_whiteColor);
}

id static MOSuggestionTheme.Colors.textSecondary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_secondaryLabelColor);
}

id static MOSuggestionTheme.Colors.textSecondaryVibrant()()
{
  return static MOSuggestionTheme.Colors.textSecondaryVibrant()(0.7);
}

id static MOSuggestionTheme.Colors.textSecondaryVibrantThirdParty()()
{
  return static MOSuggestionTheme.Colors.textSecondaryVibrant()(0.6);
}

id static MOSuggestionTheme.Colors.textTertiary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_tertiaryLabelColor);
}

id static MOSuggestionTheme.Colors.textTertiaryVibrant()()
{
  return static MOSuggestionTheme.Colors.textSecondaryVibrant()(0.4);
}

id static MOSuggestionTheme.Colors.textTertiaryVibrantThirdParty()()
{
  return static MOSuggestionTheme.Colors.textSecondaryVibrant()(0.25);
}

id static MOSuggestionTheme.Colors.textSecondaryVibrant()(double a1)
{
  id v2 = [self whiteColor];
  id v3 = [v2 colorWithAlphaComponent:a1];

  return v3;
}

id static MOSuggestionTheme.Colors.textQuaternary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_quaternaryLabelColor);
}

id static MOSuggestionTheme.Colors.backgroundSecondary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_secondarySystemBackgroundColor);
}

id static MOSuggestionTheme.Colors.backgroundTertiary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_tertiarySystemBackgroundColor);
}

id static MOSuggestionTheme.Colors.primaryFill()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_systemFillColor);
}

id static MOSuggestionTheme.Colors.selectedBackgroundColor()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_secondarySystemFillColor);
}

id static MOSuggestionTheme.Colors.backgroundGroupedTertiary()()
{
  return static MOSuggestionTheme.Colors.backgroundPrimary()((SEL *)&selRef_tertiarySystemGroupedBackgroundColor);
}

id static MOSuggestionTheme.Colors.backgroundPrimary()(SEL *a1)
{
  id v1 = [self *a1];

  return v1;
}

void one-time initialization function for contactAsset()
{
  id v0 = [self systemGreenColor];
  id v1 = [v0 colorWithAlphaComponent:0.2];

  static MOSuggestionTheme.Colors.contactAsset = (uint64_t)v1;
}

uint64_t *MOSuggestionTheme.Colors.contactAsset.unsafeMutableAddressor()
{
  if (one-time initialization token for contactAsset != -1) {
    swift_once();
  }
  return &static MOSuggestionTheme.Colors.contactAsset;
}

id static MOSuggestionTheme.Colors.contactAsset.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for contactAsset, (void **)&static MOSuggestionTheme.Colors.contactAsset);
}

id static MOSuggestionTheme.Fonts.boldFont()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleHeadline);
}

void static MOSuggestionTheme.Fonts.largeTitle()()
{
}

void static MOSuggestionTheme.Fonts.calloutBold()()
{
}

id static MOSuggestionTheme.Fonts.bodyFont()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleBody);
}

void static MOSuggestionTheme.Fonts.primaryFontBold()()
{
}

void static MOSuggestionTheme.Fonts.captionBold()()
{
}

id static MOSuggestionTheme.Fonts.caption()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleCaption1);
}

id static MOSuggestionTheme.Fonts.caption2()()
{
  return static MOSuggestionTheme.Fonts.footnote()(&UIFontTextStyleCaption2);
}

Class static MOSuggestionTheme.Fonts.caption2EmphFont()()
{
  return static MOSuggestionTheme.Fonts.subheaderEmphFont()(&UIFontTextStyleCaption2, (UIFontWeight *)&UIFontWeightSemibold);
}

Class static MOSuggestionTheme.Fonts.bodyEmphFont()()
{
  return static MOSuggestionTheme.Fonts.subheaderEmphFont()(&UIFontTextStyleBody, (UIFontWeight *)&UIFontWeightSemibold);
}

Class static MOSuggestionTheme.Fonts.subheaderEmphFont()(void *a1, UIFontWeight *a2)
{
  id v3 = [self preferredFontForTextStyle:*a1];
  Class isa = UIFont.withWeight(_:)(*a2).super.isa;

  return isa;
}

id static MOSuggestionTheme.Fonts.footnote()(void *a1)
{
  id v1 = [self preferredFontForTextStyle:*a1];

  return v1;
}

void static MOSuggestionTheme.Fonts.title3Bold()()
{
}

void static MOSuggestionTheme.Fonts.footnoteBold()(void *a1)
{
  id v2 = self;
  id v3 = [v2 preferredFontForTextStyle:*a1];
  id v4 = [v3 fontDescriptor];
  id v5 = [v4 fontDescriptorWithSymbolicTraits:2];

  if (v5)
  {
    [v2 fontWithDescriptor:v5 size:0.0];
  }
  else
  {
    __break(1u);
  }
}

void one-time initialization function for cornerRadius()
{
  static MOSuggestionTheme.Sizes.cornerRadius = 0x4024000000000000;
}

double static MOSuggestionTheme.Sizes.cornerRadius.getter()
{
  return static MOSuggestionSheetInterstitialViewConstants.BUTTON_BOTTOM_MARGIN_LANDSCAPE.getter(&one-time initialization token for cornerRadius, (uint64_t)&static MOSuggestionTheme.Sizes.cornerRadius);
}

void one-time initialization function for gutterMargin()
{
  static MOSuggestionTheme.Sizes.gutterMargin = 0x4010000000000000;
}

uint64_t *MOSuggestionTheme.Sizes.gutterMargin.unsafeMutableAddressor()
{
  if (one-time initialization token for gutterMargin != -1) {
    swift_once();
  }
  return &static MOSuggestionTheme.Sizes.gutterMargin;
}

double static MOSuggestionTheme.Sizes.gutterMargin.getter()
{
  return static MOSuggestionSheetInterstitialViewConstants.BUTTON_BOTTOM_MARGIN_LANDSCAPE.getter(&one-time initialization token for gutterMargin, (uint64_t)&static MOSuggestionTheme.Sizes.gutterMargin);
}

double static MOSuggestionTheme.Sizes.assetGridHeight(assetCount:totalWidth:)(uint64_t a1, double a2)
{
  if (!a1) {
    return 0.0;
  }
  if (one-time initialization token for gutterMargin != -1) {
    swift_once();
  }
  double result = (a2 - *(double *)&static MOSuggestionTheme.Sizes.gutterMargin) * 0.5;
  if (a1 > 5) {
    return result + result;
  }
  return result;
}

void *MOSuggestionTheme.Styles.unfocusedAlpha.unsafeMutableAddressor()
{
  return &static MOSuggestionTheme.Styles.unfocusedAlpha;
}

double static MOSuggestionTheme.Styles.unfocusedAlpha.getter()
{
  return 0.45;
}

void *MOSuggestionTheme.Styles.assetGridCornerRadius.unsafeMutableAddressor()
{
  return &static MOSuggestionTheme.Styles.assetGridCornerRadius;
}

void *MOSuggestionTheme.Styles.platterCornerRadius.unsafeMutableAddressor()
{
  return &static MOSuggestionTheme.Styles.platterCornerRadius;
}

float static MOSuggestionTheme.Styles.shadowOpacity.getter()
{
  return 0.1;
}

UIColor __swiftcall UIColor.init(hex:)(Swift::String hex)
{
  object = hex._object;
  uint64_t countAndFlagsBits = hex._countAndFlagsBits;
  unint64_t v3 = String.index(_:offsetBy:)();
  specialized Collection.subscript.getter(v3, countAndFlagsBits, (unint64_t)object);
  swift_bridgeObjectRelease();
  static String._fromSubstring(_:)();
  swift_bridgeObjectRelease();
  id v4 = objc_allocWithZone((Class)NSScanner);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithString:v5];

  uint64_t v10 = 0;
  if ([v6 scanHexLongLong:&v10]) {
    double v7 = (objc_class *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithRed:(double)BYTE3(v10) / 255.0 green:(double)BYTE2(v10) / 255.0 blue:(double)BYTE1(v10) / 255.0 alpha:(double)v10 / 255.0];
  }
  else {
    double v7 = (objc_class *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithRed:0.0 green:0.0 blue:0.0 alpha:0.0];
  }
  v8.super.Class isa = v7;

  return v8;
}

unint64_t specialized Collection.subscript.getter(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return String.subscript.getter();
  }
  __break(1u);
  return result;
}

id specialized static MOSuggestionTheme.Fonts.footnoteEmphShortFont()()
{
  id v0 = self;
  id v1 = [v0 preferredFontForTextStyle:UIFontTextStyleFootnote];
  v2.super.Class isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  id v3 = [(objc_class *)v2.super.isa fontDescriptor];
  id v4 = [(objc_class *)v2.super.isa fontDescriptor];
  unsigned int v5 = [v4 symbolicTraits];

  id v6 = [v3 fontDescriptorWithSymbolicTraits:v5 | 0x10000];
  if (v6)
  {
    id v7 = [v0 fontWithDescriptor:v6 size:0.0];
  }
  else
  {

    return 0;
  }
  return v7;
}

id specialized static MOSuggestionTheme.Fonts.footnoteShortFont()()
{
  id v0 = self;
  id v1 = [v0 preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v2 = [v1 fontDescriptor];
  id v3 = [v1 fontDescriptor];
  unsigned int v4 = [v3 symbolicTraits];

  id v5 = [v2 fontDescriptorWithSymbolicTraits:v4 | 0x10000];
  if (v5)
  {
    id v6 = [v0 fontWithDescriptor:v5 size:0.0];
  }
  else
  {

    return 0;
  }
  return v6;
}

void specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(void *a1, uint64_t a2)
{
  id v4 = [self whiteColor];
  id v5 = v4;
  if (a2 == 2)
  {
    id v6 = [v4 colorWithAlphaComponent:0.15];

    int v7 = 1050253722;
    id v5 = v6;
  }
  else
  {
    int v7 = 1036831949;
  }
  [a1 setBackgroundColor:v5];

  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v8 = [a1 layer];
  [v8 setMasksToBounds:0];

  id v9 = [a1 layer];
  [v9 setCornerRadius:8.0];

  id v10 = [a1 layer];
  id v11 = [self blackColor];
  id v12 = [v11 CGColor];

  [v10 setShadowColor:v12];
  id v13 = [a1 layer];
  LODWORD(v14) = v7;
  [v13 setShadowOpacity:v14];

  id v15 = [a1 layer];
  [v15 setShadowOffset:0.0, 2.0];

  id v16 = [a1 layer];
  [v16 setShadowRadius:4.0];

  id v17 = [a1 layer];
  [v17 setCornerCurve:kCACornerCurveContinuous];

  id v18 = [a1 layer];
  [v18 setShadowPathIsBounds:1];
}

id specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()()
{
  id v0 = self;
  id v1 = [v0 preferredFontForTextStyle:UIFontTextStyleFootnote];
  Class isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  id v3 = [(objc_class *)isa fontDescriptor];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIFontDescriptorAttributeName, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DA0F0;
  *(void *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<[UIFontDescriptorFeatureKey : Int]>);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1001DA0F0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(UIFontDescriptorFeatureKey, Int)>);
  uint64_t v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_1001DA390;
  int v7 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(v6 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
  *(void *)(v6 + 40) = 38;
  id v8 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(v6 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
  *(void *)(v6 + 56) = 1;
  id v9 = UIFontDescriptorFeatureSettingsAttribute;
  id v10 = v7;
  id v11 = v8;
  *(void *)(v5 + 32) = specialized Dictionary.init(dictionaryLiteral:)(v6);
  *(void *)(inited + 64) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[UIFontDescriptorFeatureKey : Int]]);
  *(void *)(inited + 40) = v5;
  specialized Dictionary.init(dictionaryLiteral:)(inited);
  type metadata accessor for UIFontDescriptorAttributeName(0);
  lazy protocol witness table accessor for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName();
  Class v12 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v3 fontDescriptorByAddingAttributes:v12];

  id v14 = [v0 preferredFontForTextStyle:UIFontTextStyleFootnote];
  Class v15 = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  [(objc_class *)v15 pointSize];
  double v17 = v16;

  id v18 = [v0 fontWithDescriptor:v13 size:v17];
  return v18;
}

uint64_t type metadata accessor for MOSuggestionTheme()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionTheme.Colors()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionTheme.Fonts()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionTheme.Sizes()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionTheme.Styles()
{
  return self;
}

unint64_t lazy protocol witness table accessor for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName()
{
  unint64_t result = lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName;
  if (!lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName)
  {
    type metadata accessor for UIFontDescriptorAttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type UIFontDescriptorAttributeName and conformance UIFontDescriptorAttributeName);
  }
  return result;
}

uint64_t MOSuggestionAssetGradientRouteRenderer.__allocating_init(routeLocations:)(unint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return MOSuggestionAssetGradientRouteRenderer.init(routeLocations:)(a1);
}

uint64_t MOSuggestionAssetGradientRouteRenderer.routeLocations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MOSuggestionAssetGradientRouteRenderer.init(routeLocations:)(unint64_t a1)
{
  id v2 = v1;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations] = a1;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    int v7 = _swiftEmptyArrayStorage;
LABEL_14:
    id v17 = [self polylineWithCoordinates:v7 + 4 count:v4];
    swift_bridgeObjectRelease();
    v19.receiver = v2;
    v19.super_class = (Class)type metadata accessor for MOSuggestionAssetGradientRouteRenderer();
    [super initWithOverlay:v17];

    return (uint64_t)v18;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  id v20 = _swiftEmptyArrayStorage;
  uint64_t result = specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    int v7 = v20;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v6 + 32);
      }
      id v9 = v8;
      [v8 coordinate];
      uint64_t v11 = v10;
      uint64_t v13 = v12;

      id v20 = v7;
      unint64_t v15 = v7[2];
      unint64_t v14 = v7[3];
      if (v15 >= v14 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        int v7 = v20;
      }
      ++v6;
      void v7[2] = v15 + 1;
      double v16 = &v7[2 * v15];
      v16[4] = v11;
      v16[5] = v13;
    }
    while (v4 != v6);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

double MOSuggestionAssetGradientRouteRenderer.offsetPoint(_:from:)(double a1, double a2, double a3)
{
  return a1 - a3;
}

BOOL MOSuggestionAssetGradientRouteRenderer.hasMinimumDistance(_:from:to:)(double a1, double a2, double a3, double a4, double a5)
{
  return a1 * a1 <= (a4 - a2) * (a4 - a2) + (a5 - a3) * (a5 - a3);
}

Swift::Bool __swiftcall MOSuggestionAssetGradientRouteRenderer.canDrawLine(from:to:within:)(MKMapPoint from, MKMapPoint to, MKMapRect within)
{
  double height = within.size.height;
  double width = within.size.width;
  double y = within.origin.y;
  double x = within.origin.x;
  v9.origin.double x = fmin(from.x, to.x);
  v9.origin.double y = fmin(from.y, to.y);
  v9.size.double width = vabdd_f64(from.x, to.x);
  v9.size.double height = vabdd_f64(from.y, to.y);
  v8.origin.double x = x;
  v8.origin.double y = y;
  v8.size.double width = width;
  v8.size.double height = height;
  return MKMapRectIntersectsRect(v8, v9);
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowRed.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowRed;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowRed.getter()
{
  return 255.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowGreen.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowGreen;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowGreen.getter()
{
  return 59.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowBlue.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowBlue;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.slowBlue.getter()
{
  return 48.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageRed.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageRed;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageGreen.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageGreen;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageGreen.getter()
{
  return 204.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageBlue.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageBlue;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastRed.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastRed;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastRed.getter()
{
  return 76.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastGreen.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastGreen;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastGreen.getter()
{
  return 217.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastBlue.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastBlue;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.fastBlue.getter()
{
  return 100.0;
}

void *MOSuggestionAssetGradientRouteRenderer.SpeedColor.alpha.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetGradientRouteRenderer.SpeedColor.alpha;
}

double static MOSuggestionAssetGradientRouteRenderer.SpeedColor.alpha.getter()
{
  return 0.85;
}

id static MOSuggestionAssetGradientRouteRenderer.SpeedColor.averageColor.getter()
{
  id v0 = objc_allocWithZone((Class)UIColor);

  return [v0 initWithRed:1.0 green:0.8 blue:0.0 alpha:0.85];
}

uint64_t MOSuggestionAssetGradientRouteRenderer.draw(_:zoomScale:in:)(uint64_t a1, double a2, double a3, double a4, double a5, MKZoomScale a6)
{
  objc_msgSend(objc_msgSend(v6, "overlay"), "boundingMapRect");
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  CGFloat v13 = MKRoadWidthAtZoomScale(a6) * 0.666666667;
  [v6 applyStrokePropertiesToContext:a1 atZoomScale:a6];
  double v16 = v6;
  uint64_t v17 = v10;
  uint64_t v18 = v12;
  return (*(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t *, CGFloat))((swift_isaMask & *v6)
                                                                                          + 0x78))(a1, partial apply for closure #1 in MOSuggestionAssetGradientRouteRenderer.draw(_:zoomScale:in:), &v15, v13);
}

void MOSuggestionAssetGradientRouteRenderer.draw(lineWidth:in:pointFromMapPoint:)(CGContext *a1, double (*a2)(double, double), uint64_t a3, CGFloat a4)
{
  uint64_t v5 = v4;
  id v55 = a2;
  uint64_t v56 = a3;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v47 = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  unint64_t v12 = *(void *)((char *)v5
                  + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_3:
      unint64_t v54 = v12 & 0xC000000000000001;
      uint64_t v57 = v8;
      if ((v12 & 0xC000000000000001) != 0)
      {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_26:
          __break(1u);
          return;
        }
        id v14 = *(id *)(v12 + 32);
      }
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      id v16 = v15;
      id v17 = [v15 timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      Date.timeIntervalSinceReferenceDate.getter();
      double v19 = v18;
      uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v21 = v9 + 8;
      id v20 = v22;
      v22(v11, v57);
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        if (!v23)
        {
LABEL_19:
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v23) {
          goto LABEL_19;
        }
      }
      uint64_t v24 = *(uint64_t (**)(double, double, double, double, double))((swift_isaMask & *v5) + 0x68);
      uint64_t v52 = (swift_isaMask & *v5) + 104;
      id v53 = v24;
      if (v23 >= 1)
      {
        unint64_t v50 = v12;
        uint64_t v51 = v5;
        uint64_t v25 = 0;
        uint64_t v48 = v23;
        CGRect v49 = v20;
        do
        {
          if (v54) {
            id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v35 = *(id *)(v12 + 8 * v25 + 32);
          }
          id v36 = v35;
          uint64_t v37 = v21;
          [v16 coordinate];
          MKMapPoint v38 = MKMapPointForCoordinate(v59);
          [v36 coordinate];
          MKMapPoint v39 = MKMapPointForCoordinate(v60);
          id v40 = v55;
          double v41 = v55(v38.x, v38.y);
          double v43 = v42;
          double v44 = v40(v39.x, v39.y);
          double v46 = v45;
          if (v53(a4, v41, v43, v44, v45))
          {
            char v26 = &selRef_statisticsForType_;
            id v27 = [v36 timestamp];
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            Date.timeIntervalSinceReferenceDate.getter();
            double v29 = v28;
            uint64_t v30 = v57;
            Swift::String v31 = v49;
            v49(v11, v57);
            [v36 speed:v29 - v19];
            MOSuggestionAssetGradientRouteRenderer.drawLine(from:to:at:in:withDashes:lineWidth:)(v47, v29 - v19 > 5.0, v41, v43, v44, v46, v32, a4);

            id v16 = v36;
          }
          else
          {
            uint64_t v30 = v57;
            char v26 = &selRef_statisticsForType_;
            Swift::String v31 = v49;
          }
          ++v25;
          id v33 = [v36 v26[262]];
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          Date.timeIntervalSinceReferenceDate.getter();
          double v19 = v34;

          v31(v11, v30);
          uint64_t v21 = v37;
          unint64_t v12 = v50;
        }
        while (v48 != v25);
        goto LABEL_19;
      }
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

void MOSuggestionAssetGradientRouteRenderer.drawLine(from:to:at:in:withDashes:lineWidth:)(CGContext *a1, char a2, double a3, double a4, double a5, double a6, double a7, CGFloat a8)
{
  CGMutablePathRef Mutable = CGPathCreateMutable();
  CGMutablePathRef.move(to:transform:)();
  CGMutablePathRef.addLine(to:transform:)();
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<CGFloat>);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1001DA390;
    *(void *)(v12 + 32) = 0;
    *(CGFloat *)(v12 + 40) = a8 + a8;
    uint64_t v13 = (const CGPath *)CGPathRef.copy(dashingWithPhase:lengths:transform:)();
    swift_bridgeObjectRelease();
    CGContextAddPath(a1, v13);
    CGContextSetLineWidth(a1, a8);
    CGContextSetLineCap(a1, kCGLineCapRound);
    id v14 = [self grayColor];
    uint64_t v15 = (CGColor *)[v14 CGColor];

    CGContextSetStrokeColorWithColor(a1, v15);
    CGPathDrawingMode v16 = kCGPathStroke;
  }
  else
  {
    uint64_t v13 = (const CGPath *)CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)();
    CGContextAddPath(a1, v13);
    uint64_t v15 = (CGColor *)MOSuggestionAssetGradientRouteRenderer.relativeColor(for:)(a7);
    CGContextSetFillColorWithColor(a1, v15);
    CGPathDrawingMode v16 = kCGPathFill;
  }

  CGContextDrawPath(a1, v16);
}

uint64_t MOSuggestionAssetGradientRouteRenderer.relativeColor(for:)(double a1)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC16MomentsUIService38MOSuggestionAssetGradientRouteRenderer_routeLocations);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v13) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_34;
  }
LABEL_3:
  uint64_t result = specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      [v7 speed];
      double v10 = v9;

      unint64_t v12 = *(void *)&_swiftEmptyArrayStorage[2];
      unint64_t v11 = *(void *)&_swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v13)
    {
LABEL_12:
      double v14 = _swiftEmptyArrayStorage[4];
      uint64_t v15 = v13 - 1;
      if (v13 != 1)
      {
        CGPathDrawingMode v16 = &_swiftEmptyArrayStorage[5];
        do
        {
          double v17 = *v16++;
          double v18 = v17;
          if (v17 < v14) {
            double v14 = v18;
          }
          --v15;
        }
        while (v15);
      }
      double v19 = (double)v13;
      if ((unint64_t)v13 >= 4)
      {
        uint64_t v20 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        float64x2_t v22 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v19, 0);
        uint64_t v23 = (float64x2_t *)&_swiftEmptyArrayStorage[6];
        double v21 = 0.0;
        uint64_t v24 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        do
        {
          float64x2_t v25 = vdivq_f64(v23[-1], v22);
          float64x2_t v26 = vdivq_f64(*v23, v22);
          double v21 = v21 + v25.f64[0] + v25.f64[1] + v26.f64[0] + v26.f64[1];
          v23 += 2;
          v24 -= 4;
        }
        while (v24);
        if (v13 == v20)
        {
LABEL_24:
          double v30 = _swiftEmptyArrayStorage[4];
          uint64_t v31 = v13 - 1;
          if (v31)
          {
            double v32 = &_swiftEmptyArrayStorage[5];
            do
            {
              double v33 = *v32++;
              double v34 = v33;
              if (v30 < v33) {
                double v30 = v34;
              }
              --v31;
            }
            while (v31);
          }
          swift_bridgeObjectRelease();
          if (v21 * 0.9 >= a1)
          {
            if (a1 < 0.0 || v21 == 0.0) {
              goto LABEL_41;
            }
LABEL_39:
            double v35 = (a1 - v14) / (v30 - v14);
            if (v35 >= 0.5)
            {
              double v41 = v35 + -0.5 + v35 + -0.5;
              double v37 = round(v41 * -179.0 + 255.0);
              double v38 = round(v41 * 13.0 + 204.0);
              double v39 = v41 * 100.0 + 0.0;
            }
            else
            {
              double v36 = v35 + v35;
              double v37 = round(v36 * 0.0 + 255.0);
              double v38 = round(v36 * 145.0 + 59.0);
              double v39 = 48.0 - v36 * 48.0;
            }
            id v40 = [objc_allocWithZone((Class)UIColor) initWithRed:v37 / 255.0 green:v38 / 255.0 blue:round(v39) / 255.0 alpha:0.85];
            goto LABEL_44;
          }
LABEL_36:
          if (a1 < 0.0 || v21 == 0.0 || v21 * 1.1 > a1) {
            goto LABEL_41;
          }
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v20 = 0;
        double v21 = 0.0;
      }
      uint64_t v27 = v13 - v20;
      double v28 = &_swiftEmptyArrayStorage[v20 + 4];
      do
      {
        double v29 = *v28++;
        double v21 = v21 + v29 / v19;
        --v27;
      }
      while (v27);
      goto LABEL_24;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    double v21 = 0.0;
    double v14 = 0.0;
    double v30 = 0.0;
    if (a1 <= 0.0)
    {
LABEL_41:
      id v40 = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:0.8 blue:0.0 alpha:0.85];
LABEL_44:
      double v42 = v40;
      id v43 = [v40 CGColor];

      return (uint64_t)v43;
    }
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

id MOSuggestionAssetGradientRouteRenderer.__allocating_init(overlay:)(uint64_t a1)
{
  id v2 = [objc_allocWithZone(v1) initWithOverlay:a1];
  swift_unknownObjectRelease();
  return v2;
}

void MOSuggestionAssetGradientRouteRenderer.init(overlay:)()
{
}

id MOSuggestionAssetGradientRouteRenderer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionAssetGradientRouteRenderer();
  [super dealloc];
}

uint64_t type metadata accessor for MOSuggestionAssetGradientRouteRenderer()
{
  return self;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetGradientRouteRenderer.SpeedColor()
{
  return &type metadata for MOSuggestionAssetGradientRouteRenderer.SpeedColor;
}

uint64_t partial apply for closure #1 in MOSuggestionAssetGradientRouteRenderer.draw(_:zoomScale:in:)(__n128 a1, __n128 a2)
{
  return (*(uint64_t (**)(__n128, __n128, double, double))((swift_isaMask & **(void **)(v2 + 16)) + 0x60))(a1, a2, *(double *)(v2 + 24), *(double *)(v2 + 32));
}

uint64_t key path getter for MOSuggestionSheetCollectionView.callback : MOSuggestionSheetCollectionView@<X0>(void **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x58))();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = v4;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    id v7 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
  }
  else
  {
    id v7 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t key path setter for MOSuggestionSheetCollectionView.callback : MOSuggestionSheetCollectionView(uint64_t *a1, void **a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = partial apply for thunk for @escaping @callee_guaranteed () -> (@out ());
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  id v7 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((swift_isaMask & **a2) + 0x60);
  outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(v3);
  return v7(v6, v5);
}

uint64_t MOSuggestionSheetCollectionView.callback.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetCollectionView_callback);
  swift_beginAccess();
  uint64_t v2 = *v1;
  outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?(*v1);
  return v2;
}

uint64_t MOSuggestionSheetCollectionView.callback.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetCollectionView_callback);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return outlined consume of (@escaping @callee_guaranteed () -> ())?(v6);
}

uint64_t (*MOSuggestionSheetCollectionView.callback.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOSuggestionSheetCollectionView.reloadDataWithCompletion(callback:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v2) + 0x60);
  swift_retain();
  v5(a1, a2);
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for MOSuggestionSheetCollectionView();
  [super reloadData];
  return [v2 layoutIfNeeded];
}

uint64_t type metadata accessor for MOSuggestionSheetCollectionView()
{
  return self;
}

Swift::Void __swiftcall MOSuggestionSheetCollectionView.layoutSubviews()()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MOSuggestionSheetCollectionView();
  [super layoutSubviews];
  uint64_t v2 = (void (*)(void))(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x58))(v1);
  if (v2)
  {
    uint64_t v3 = (uint64_t)v2;
    v2();
    outlined consume of (@escaping @callee_guaranteed () -> ())?(v3);
  }
  (*(void (**)(void, void))((swift_isaMask & *v0) + 0x60))(0, 0);
}

id MOSuggestionSheetCollectionView.init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  unint64_t v11 = &v5[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetCollectionView_callback];
  unint64_t v12 = (objc_class *)type metadata accessor for MOSuggestionSheetCollectionView();
  *(void *)unint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  v15.receiver = v5;
  v15.super_class = v12;
  [super initWithFrame:a1 collectionViewLayout:a2];

  return v13;
}

id MOSuggestionSheetCollectionView.init(coder:)(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetCollectionView_callback];
  objc_super v4 = (objc_class *)type metadata accessor for MOSuggestionSheetCollectionView();
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  v7.receiver = v1;
  v7.super_class = v4;
  [super initWithCoder:a1];

  return v5;
}

id MOSuggestionSheetCollectionView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetCollectionView();
  [super dealloc];
}

uint64_t sub_10016C8F4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

double MOLinkShareView.intrinsicContentSize.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOLinkShareView();
  [super intrinsicContentSize];
  return 0.0;
}

uint64_t type metadata accessor for MOLinkShareView()
{
  return self;
}

id MOLinkShareView.init(url:)(uint64_t a1)
{
  return MOLinkShareView.init(url:)(a1, (uint64_t (*)(void))&URL._bridgeToObjectiveC(), (SEL *)&selRef_initWithURL_, (uint64_t (*)(void))&type metadata accessor for URL);
}

id MOLinkShareView.init(metadata:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MOLinkShareView();
  [super initWithMetadata:a1];

  return v3;
}

id MOLinkShareView.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for MOLinkShareView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id MOLinkShareView.init(presentationProperties:)(uint64_t a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MOLinkShareView();
  [super initWithPresentationProperties:a1];
  swift_unknownObjectRelease();
  return v3;
}

id @objc MOLinkShareView.init(metadata:)(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for MOLinkShareView();
  return [super a3];
}

id MOLinkShareView.init(presentationProperties:url:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of URL?(a2, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    unint64_t v12 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  double v14 = (objc_class *)type metadata accessor for MOLinkShareView();
  v17.receiver = v3;
  v17.super_class = v14;
  [super initWithPresentationProperties:a1 URL:v12];
  swift_unknownObjectRelease();

  outlined destroy of URL?(a2);
  return v15;
}

id MOLinkShareView.init(metadataLoadedFrom:)(uint64_t a1)
{
  return MOLinkShareView.init(url:)(a1, (uint64_t (*)(void))&URL._bridgeToObjectiveC(), (SEL *)&selRef_initWithMetadataLoadedFromURL_, (uint64_t (*)(void))&type metadata accessor for URL);
}

{
  return MOLinkShareView.init(url:)(a1, (uint64_t (*)(void))&URLRequest._bridgeToObjectiveC(), (SEL *)&selRef_initWithMetadataLoadedFromRequest_, (uint64_t (*)(void))&type metadata accessor for URLRequest);
}

id MOLinkShareView.init(url:)(uint64_t a1, uint64_t (*a2)(void), SEL *a3, uint64_t (*a4)(void))
{
  uint64_t v7 = v4;
  uint64_t v9 = (void *)a2();
  v13.receiver = v7;
  v13.super_class = (Class)type metadata accessor for MOLinkShareView();
  [super v9];

  uint64_t v11 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
  return v10;
}

id @objc MOLinkShareView.init(url:)(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t), SEL *a7)
{
  uint64_t v12 = a4(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v21 - v14;
  uint64_t v16 = a5(a3);
  objc_super v17 = (void *)a6(v16);
  double v18 = (objc_class *)type metadata accessor for MOLinkShareView();
  v21.receiver = a1;
  v21.super_class = v18;
  id v19 = [super v17];

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v19;
}

id MOLinkShareView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOLinkShareView();
  return [super dealloc];
}

id MOSuggestionAssetLinkPreviewView.makeUIView(context:)(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  id v11 = [a2 title];
  [v10 setTitle:v11];

  id v12 = [a2 URL];
  if (v12)
  {
    uint64_t v13 = v12;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
    {
      id v15 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v14);
      id v15 = v16;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    id v15 = 0;
  }
  [v10 setURL:v15];

  id v17 = [a2 iconProvider];
  [v10 setIconProvider:v17];

  id v18 = [objc_allocWithZone((Class)type metadata accessor for MOLinkShareView()) initWithFrame:0.0, 0.0, 50.0, 50.0];
  [v18 setMetadata:v10];
  [v18 _setPreferredSizeClass:4];

  return v18;
}

id protocol witness for UIViewRepresentable.makeUIView(context:) in conformance MOSuggestionAssetLinkPreviewView(uint64_t a1)
{
  return MOSuggestionAssetLinkPreviewView.makeUIView(context:)(a1, *v1);
}

uint64_t protocol witness for UIViewRepresentable._resetUIView(_:coordinator:destroy:) in conformance MOSuggestionAssetLinkPreviewView()
{
  return UIViewRepresentable._resetUIView(_:coordinator:destroy:)();
}

uint64_t protocol witness for static UIViewRepresentable.dismantleUIView(_:coordinator:) in conformance MOSuggestionAssetLinkPreviewView()
{
  return static UIViewRepresentable.dismantleUIView(_:coordinator:)();
}

uint64_t protocol witness for UIViewRepresentable.makeCoordinator() in conformance MOSuggestionAssetLinkPreviewView()
{
  return UIViewRepresentable<>.makeCoordinator()();
}

uint64_t protocol witness for UIViewRepresentable._identifiedViewTree(in:) in conformance MOSuggestionAssetLinkPreviewView()
{
  return UIViewRepresentable._identifiedViewTree(in:)();
}

uint64_t protocol witness for UIViewRepresentable.sizeThatFits(_:uiView:context:) in conformance MOSuggestionAssetLinkPreviewView()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t protocol witness for UIViewRepresentable._overrideSizeThatFits(_:in:uiView:) in conformance MOSuggestionAssetLinkPreviewView()
{
  return UIViewRepresentable._overrideSizeThatFits(_:in:uiView:)();
}

uint64_t protocol witness for UIViewRepresentable._overrideLayoutTraits(_:for:) in conformance MOSuggestionAssetLinkPreviewView()
{
  return UIViewRepresentable._overrideLayoutTraits(_:for:)();
}

uint64_t protocol witness for static UIViewRepresentable._modifyBridgedViewInputs(_:) in conformance MOSuggestionAssetLinkPreviewView()
{
  return static UIViewRepresentable._modifyBridgedViewInputs(_:)();
}

uint64_t protocol witness for static UIViewRepresentable._layoutOptions(_:) in conformance MOSuggestionAssetLinkPreviewView()
{
  return static UIViewRepresentable._layoutOptions(_:)();
}

uint64_t protocol witness for static View._makeView(view:inputs:) in conformance MOSuggestionAssetLinkPreviewView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._makeViewList(view:inputs:) in conformance MOSuggestionAssetLinkPreviewView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = lazy protocol witness table accessor for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t protocol witness for static View._viewListCount(inputs:) in conformance MOSuggestionAssetLinkPreviewView()
{
  return static View._viewListCount(inputs:)();
}

void protocol witness for View.body.getter in conformance MOSuggestionAssetLinkPreviewView()
{
}

void closure #1 in MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)static MOAngelLogger.shared);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = a2;
    id v18 = v17;
    *(_DWORD *)id v17 = 134217984;
    double v34 = a4;
    v32[1] = v17 + 4;
    v32[2] = v14;
    URL.absoluteString.getter();
    id v19 = a1;
    uint64_t v20 = String.hashValue.getter();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t v36 = v20;
    a1 = v19;
    a4 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "[Assets] Link Preview completed fetching data for %ld", v18, 0xCu);
    a2 = v33;
    swift_slowDealloc();

    if (!a1) {
      goto LABEL_9;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

    if (!a1) {
      goto LABEL_9;
    }
  }
  if (!a2)
  {
    uint64_t v21 = MOSuggestionAssetsTypeLinkPreview;
    type metadata accessor for LPLinkMetadata();
    id v22 = objc_allocWithZone((Class)MOSuggestionAsset);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v24 = a1;
    id v25 = [v22 init:v24 type:v21 contentClassType:ObjCClassFromMetadata];
    a4();

    return;
  }
LABEL_9:
  swift_errorRetain();
  swift_errorRetain();
  float64x2_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v26, v27))
  {
    double v28 = a4;
    double v29 = (uint8_t *)swift_slowAlloc();
    double v30 = (void *)swift_slowAlloc();
    *(_DWORD *)double v29 = 138412290;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v36 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      uint64_t v36 = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v31 = 0;
    }
    *double v30 = v31;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "[Assets] LPMetadata error: %@", v29, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    a4 = v28;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  ((void (*)(void))a4)(0);
}

void specialized MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v37 = v9;
  double v38 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - v10;
  id v39 = [objc_allocWithZone((Class)LPMetadataProvider) init];
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.shared);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v36(v11, a1, v6);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    id v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = a1;
    os_log_type_t v16 = v15;
    uint64_t v35 = v6;
    *(_DWORD *)id v15 = 134217984;
    double v32 = v15 + 4;
    URL.absoluteString.getter();
    uint64_t v17 = String.hashValue.getter();
    uint64_t v34 = a2;
    uint64_t v18 = a3;
    uint64_t v19 = v17;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v35);
    aBlock[0] = v19;
    a3 = v18;
    a2 = v34;
    uint64_t v6 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[Assets] Link Preview fetching data for %ld", v16, 0xCu);
    a1 = v33;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }

  URL._bridgeToObjectiveC()(v20);
  id v22 = v21;
  uint64_t v23 = v38;
  v36(v38, a1, v6);
  unint64_t v24 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v25 = (v37 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v6;
  uint64_t v28 = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v26 + v24, v23, v27);
  double v29 = (void *)(v28 + v25);
  *double v29 = a2;
  v29[1] = a3;
  aBlock[4] = partial apply for closure #1 in MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:);
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed NSNumber?, @guaranteed Error?) -> ();
  aBlock[3] = &block_descriptor_34;
  double v30 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v31 = v39;
  [v39 startFetchingMetadataForURL:v22 completionHandler:v30];
  _Block_release(v30);
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView()
{
  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView);
  }
  return result;
}

{
  unint64_t result;

  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetLinkPreviewView and conformance MOSuggestionAssetLinkPreviewView);
  }
  return result;
}

void *associated type witness table accessor for View.Body : View in MOSuggestionAssetLinkPreviewView()
{
  return &protocol witness table for Never;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetLinkPreviewView()
{
  return &type metadata for MOSuggestionAssetLinkPreviewView;
}

uint64_t type metadata accessor for MOSuggestionAssetLinkPreviewProvider()
{
  return self;
}

uint64_t sub_10016DFBC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

void partial apply for closure #1 in MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:)(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void (**)(void))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  closure #1 in MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:)(a1, a2, v7, v9, v10);
}

uint64_t block_copy_helper_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_34()
{
  return swift_release();
}

unint64_t type metadata accessor for LPLinkMetadata()
{
  unint64_t result = lazy cache variable for type metadata for LPLinkMetadata;
  if (!lazy cache variable for type metadata for LPLinkMetadata)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for LPLinkMetadata);
  }
  return result;
}

uint64_t CLLocation.shiftedIfNecessary.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)static MOLocationShifter.shared + 104))(v0);
}

uint64_t MOLocationShifter.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  MOLocationShifter.init()();
  return v0;
}

uint64_t *MOLocationShifter.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static MOLocationShifter.shared;
}

uint64_t static MOLocationShifter.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }

  return swift_retain();
}

Swift::Bool __swiftcall MOLocationShifter.shiftNeeded(_:)(CLLocation a1)
{
  Class isa = a1.super.isa;
  [(objc_class *)a1.super.isa coordinate];
  double v3 = v2;
  [(objc_class *)isa coordinate];
  return [self isLocationShiftRequiredForCoordinate:v3, v4];
}

CLLocation __swiftcall MOLocationShifter.shiftedIfNecessary(_:)(CLLocation a1)
{
  Class isa = a1.super.isa;
  uint64_t v1 = type metadata accessor for DispatchTime();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v74 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  [(objc_class *)isa coordinate];
  double v13 = v12;
  [(objc_class *)isa coordinate];
  double v15 = v14;
  if (objc_msgSend(self, "isLocationShiftRequiredForCoordinate:", v13, v14))
  {
    uint64_t v79 = v7;
    uint64_t v80 = v2;
    uint64_t v81 = v1;
    uint64_t v16 = swift_allocObject();
    *(double *)(v16 + 16) = v13;
    *(double *)(v16 + 24) = v15;
    uint64_t v17 = swift_allocObject();
    [(objc_class *)isa horizontalAccuracy];
    *(void *)(v17 + 16) = v18;
    uint64_t v19 = *(void **)(v84 + 16);
    [(objc_class *)isa horizontalAccuracy];
    uint64_t v82 = v17 + 16;
    uint64_t v83 = v16 + 16;
    if (objc_msgSend(v19, "shiftCoordinate:accuracy:shiftedCoordinate:shiftedAccuracy:", v16 + 16, v17 + 16, v13, v15, v20))
    {
      double v21 = *(double *)(v16 + 16);
      double v22 = *(double *)(v16 + 24);
      [(objc_class *)isa altitude];
      double v24 = v23;
      double v25 = *(double *)(v17 + 16);
      [(objc_class *)isa verticalAccuracy];
      double v27 = v26;
      id v28 = [(objc_class *)isa timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v29 = objc_allocWithZone((Class)CLLocation);
      Class v30 = Date._bridgeToObjectiveC()().super.isa;
      id v31 = [(objc_class *)v29 initWithCoordinate:v30 altitude:v21 horizontalAccuracy:v22 verticalAccuracy:v24 timestamp:v25];

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      swift_release();
      swift_release();
    }
    else
    {
      char v76 = v11;
      uint64_t v77 = v9;
      uint64_t v78 = v8;
      uint64_t v35 = dispatch_group_create();
      dispatch_group_enter(v35);
      [(objc_class *)isa horizontalAccuracy];
      double v37 = v36;
      double v38 = (void *)swift_allocObject();
      v38[2] = v16;
      v38[3] = v17;
      v38[4] = v35;
      id v90 = partial apply for closure #1 in MOLocationShifter.shiftedIfNecessary(_:);
      id v91 = v38;
      aBlock = _NSConcreteStackBlock;
      uint64_t v87 = 1107296256;
      uint64_t v39 = v17;
      id v88 = thunk for @escaping @callee_guaranteed (@unowned GEOLocationCoordinate2D, @unowned Double) -> ();
      uint64_t v89 = &block_descriptor_35;
      id v40 = _Block_copy(&aBlock);
      uint64_t v75 = v16;
      swift_retain();
      uint64_t v74 = v39;
      swift_retain();
      double v41 = v35;
      swift_release();
      id v90 = closure #2 in MOLocationShifter.shiftedIfNecessary(_:);
      id v91 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v87 = 1107296256;
      id v88 = thunk for @escaping @callee_guaranteed () -> ();
      uint64_t v89 = &block_descriptor_9_1;
      double v42 = _Block_copy(&aBlock);
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = v41;
      id v90 = partial apply for closure #3 in MOLocationShifter.shiftedIfNecessary(_:);
      id v91 = (void *)v43;
      aBlock = _NSConcreteStackBlock;
      uint64_t v87 = 1107296256;
      id v88 = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
      uint64_t v89 = &block_descriptor_15_1;
      double v44 = _Block_copy(&aBlock);
      double v45 = v41;
      swift_release();
      [v19 shiftCoordinate:v40 accuracy:v42 withCompletionHandler:v44 mustGoToNetworkCallback:v13 errorHandler:v15 callbackQueue:v37];
      _Block_release(v44);
      _Block_release(v42);
      _Block_release(v40);
      static DispatchTime.now()();
      double v46 = v79;
      + infix(_:_:)();
      uint64_t v47 = v81;
      uint64_t v48 = *(void (**)(char *, uint64_t))(v80 + 8);
      v48(v5, v81);
      OS_dispatch_group.wait(timeout:)();
      v48(v46, v47);
      if ((static DispatchTimeoutResult.== infix(_:_:)() & 1) == 0)
      {
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v49 = type metadata accessor for Logger();
        __swift_project_value_buffer(v49, (uint64_t)static MOAngelLogger.assets);
        unint64_t v50 = Logger.logObject.getter();
        os_log_type_t v51 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v52 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v52 = 0;
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "[LocationShifter] Timed out", v52, 2u);
          swift_slowDealloc();
        }
      }
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v53 = type metadata accessor for Logger();
      __swift_project_value_buffer(v53, (uint64_t)static MOAngelLogger.assets);
      unint64_t v54 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.default.getter();
      BOOL v56 = os_log_type_enabled(v54, v55);
      uint64_t v57 = v78;
      uint64_t v58 = v77;
      CLLocationCoordinate2D v59 = v76;
      uint64_t v60 = v75;
      uint64_t v61 = v74;
      if (v56)
      {
        uint64_t v62 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v62 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "[LocationShifter] Returning shifted location", v62, 2u);
        swift_slowDealloc();
      }

      swift_beginAccess();
      double v63 = *(double *)(v60 + 16);
      double v64 = *(double *)(v60 + 24);
      [(objc_class *)isa altitude];
      double v66 = v65;
      swift_beginAccess();
      double v67 = *(double *)(v61 + 16);
      [(objc_class *)isa verticalAccuracy];
      double v69 = v68;
      id v70 = [(objc_class *)isa timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v71 = objc_allocWithZone((Class)CLLocation);
      Class v72 = Date._bridgeToObjectiveC()().super.isa;
      id v31 = [v71 initWithCoordinate:v72 altitude:v63 horizontalAccuracy:v64 verticalAccuracy:v66 timestamp:v67];

      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v57);
      swift_release();
      swift_release();
    }
    uint64_t v34 = v31;
  }
  else
  {
    Class v33 = isa;
    uint64_t v34 = v33;
  }
  result._internal = v32;
  result.super.Class isa = v34;
  return result;
}

void closure #1 in MOLocationShifter.shiftedIfNecessary(_:)(uint64_t a1, uint64_t a2, NSObject *a3, double a4, double a5, double a6)
{
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  __swift_project_value_buffer(v12, (uint64_t)static MOAngelLogger.assets);
  double v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    double v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[LocationShifter] Shifted location async", v15, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = a5;
  swift_beginAccess();
  *(double *)(a2 + 16) = a6;
  dispatch_group_leave(a3);
}

uint64_t thunk for @escaping @callee_guaranteed (@unowned GEOLocationCoordinate2D, @unowned Double) -> ()(uint64_t a1, double a2, double a3, double a4)
{
  uint64_t v7 = *(void (**)(uint64_t, double, double, double))(a1 + 32);
  uint64_t v8 = swift_retain();
  v7(v8, a2, a3, a4);

  return swift_release();
}

void closure #2 in MOLocationShifter.shiftedIfNecessary(_:)()
{
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static MOAngelLogger.assets);
  os_log_t oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "[LocationShifter] Needs to download shifting function", v2, 2u);
    swift_slowDealloc();
  }
}

void closure #3 in MOLocationShifter.shiftedIfNecessary(_:)(uint64_t a1, dispatch_group_t group)
{
  if (a1)
  {
    swift_errorRetain();
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    __swift_project_value_buffer(v3, (uint64_t)static MOAngelLogger.assets);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_getErrorValue();
      uint64_t v7 = Error.localizedDescription.getter();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v7, v8, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[LocationShifter] error: %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  dispatch_group_leave(group);
}

__C::CLLocationCoordinate2D __swiftcall MOLocationShifter.shiftedIfNecessary(_:)(__C::CLLocationCoordinate2D a1)
{
  id v2 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:a1.latitude longitude:a1.longitude];
  uint64_t v3 = (void *)(*(uint64_t (**)(void))(*(void *)v1 + 104))();
  [v3 coordinate];
  double v5 = v4;
  double v7 = v6;

  double v8 = v5;
  double v9 = v7;
  result.longitude = v9;
  result.latitude = v8;
  return result;
}

uint64_t MOLocationShifter.deinit()
{
  return v0;
}

uint64_t MOLocationShifter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t MOLocationShifter.init()()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  *(void *)(v0 + 16) = [objc_allocWithZone((Class)GEOLocationShifter) init];
  type metadata accessor for OS_dispatch_queue();
  static DispatchQoS.unspecified.getter();
  v8[1] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  *(void *)(v0 + 24) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  return v0;
}

uint64_t sub_10016F38C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016F39C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10016F3AC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void partial apply for closure #1 in MOLocationShifter.shiftedIfNecessary(_:)(double a1, double a2, double a3)
{
  closure #1 in MOLocationShifter.shiftedIfNecessary(_:)(*(void *)(v3 + 16), *(void *)(v3 + 24), *(NSObject **)(v3 + 32), a1, a2, a3);
}

uint64_t block_copy_helper_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_35()
{
  return swift_release();
}

uint64_t sub_10016F418()
{
  return _swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #3 in MOLocationShifter.shiftedIfNecessary(_:)(uint64_t a1)
{
  closure #3 in MOLocationShifter.shiftedIfNecessary(_:)(a1, *(dispatch_group_t *)(v1 + 16));
}

uint64_t CLLocationCoordinate2D.shiftedIfNecessary.getter(double a1, double a2)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return (*(uint64_t (**)(double, double))(*(void *)static MOLocationShifter.shared + 112))(a1, a2);
}

uint64_t type metadata accessor for MOLocationShifter()
{
  return self;
}

uint64_t *MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD.unsafeMutableAddressor()
{
  if (one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD != -1) {
    swift_once();
  }
  return &static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD;
}

void *MOMapLocation.METERS_TO_DEGREES.unsafeMutableAddressor()
{
  return &static MOMapLocation.METERS_TO_DEGREES;
}

uint64_t MOMapLocation.__allocating_init(latitude:longitude:title:clusterCount:geoMapItem:confidenceLevel:isWork:enclosingArea:horizontalUncertainty:isScaledDownPOI:poiCateogory:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  char v24 = a4 & 1;
  uint64_t v25 = swift_allocObject();
  MOMapLocation.init(latitude:longitude:title:clusterCount:geoMapItem:confidenceLevel:isWork:enclosingArea:horizontalUncertainty:isScaledDownPOI:poiCateogory:)(a1, a2, a3, v24, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  return v25;
}

void *MOMapLocation.MEDIUM_AND_HIGH_CONFIDENCE_THRESHOLD.unsafeMutableAddressor()
{
  return &static MOMapLocation.MEDIUM_AND_HIGH_CONFIDENCE_THRESHOLD;
}

uint64_t one-time initialization function for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD()
{
  if (one-time initialization token for defaults != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static MOAngelDefaultsManager.defaults;
  if (!static MOAngelDefaultsManager.defaults)
  {
    long long v6 = 0u;
    long long v7 = 0u;
LABEL_11:
    uint64_t result = outlined destroy of Any?((uint64_t)&v6, &demangling cache variable for type metadata for Any?);
    goto LABEL_12;
  }
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  outlined init with take of Any?((uint64_t)v5, (uint64_t)&v6);
  if (!*((void *)&v7 + 1)) {
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_12:
    uint64_t v4 = 0x4062C00000000000;
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)&v5[0];
LABEL_13:
  static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD = v4;
  return result;
}

double static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD.getter()
{
  if (one-time initialization token for LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD != -1) {
    swift_once();
  }
  return *(double *)&static MOMapLocation.LOW_CONFIDENCE_HIGH_CERTAINTITY_THRESHOLD;
}

double static MOMapLocation.METERS_TO_DEGREES.getter()
{
  return 111000.0;
}

double static MOMapLocation.MEDIUM_AND_HIGH_CONFIDENCE_THRESHOLD.getter()
{
  return 0.9;
}

uint64_t key path setter for MOMapLocation.startDate : MOMapLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 200))(v6);
}

uint64_t MOMapLocation.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  return MOMapLocation.startDate.getter(&OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate, a1);
}

uint64_t MOMapLocation.startDate.setter(uint64_t a1)
{
  return MOMapLocation.startDate.setter(a1, &OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate);
}

uint64_t (*MOMapLocation.startDate.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path setter for MOMapLocation.endDate : MOMapLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4 - 8);
  long long v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))(**(void **)a2 + 224))(v6);
}

uint64_t MOMapLocation.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  return MOMapLocation.startDate.getter(&OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate, a1);
}

uint64_t MOMapLocation.startDate.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return outlined init with copy of Date?(v4, a2);
}

uint64_t MOMapLocation.endDate.setter(uint64_t a1)
{
  return MOMapLocation.startDate.setter(a1, &OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate);
}

uint64_t MOMapLocation.startDate.setter(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  outlined assign with take of Date?(a1, v4);
  return swift_endAccess();
}

uint64_t (*MOMapLocation.endDate.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOMapLocation.latitude.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_latitude;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t MOMapLocation.latitude.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_latitude);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.latitude.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOMapLocation.longitude.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_longitude;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t MOMapLocation.longitude.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_longitude);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.longitude.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.mapItem.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t MOMapLocation.mapItem.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*MOMapLocation.mapItem.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.clusterCount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_clusterCount;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t MOMapLocation.clusterCount.setter(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_clusterCount;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*MOMapLocation.clusterCount.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.title.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title);
}

uint64_t MOMapLocation.title.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title);
}

uint64_t (*MOMapLocation.title.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOMapLocation.confidenceLevel.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t MOMapLocation.confidenceLevel.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.confidenceLevel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.isWork.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork);
  swift_beginAccess();
  return *v1;
}

uint64_t MOMapLocation.isWork.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.isWork.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.userPlaceType.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_userPlaceType;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t MOMapLocation.userPlaceType.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_userPlaceType);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.userPlaceType.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.enclosingArea.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t MOMapLocation.enclosingArea.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOMapLocation.enclosingArea.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

double MOMapLocation.horizontalUncertainty.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t MOMapLocation.horizontalUncertainty.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.horizontalUncertainty.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.isScaledDownPOI.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isScaledDownPOI);
  swift_beginAccess();
  return *v1;
}

uint64_t MOMapLocation.isScaledDownPOI.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isScaledDownPOI);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MOMapLocation.isScaledDownPOI.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOMapLocation.poiCategory.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory);
}

uint64_t MOMapLocation.poiCategory.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory);
}

uint64_t (*MOMapLocation.poiCategory.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOMapLocation.init(latitude:longitude:title:clusterCount:geoMapItem:confidenceLevel:isWork:enclosingArea:horizontalUncertainty:isScaledDownPOI:poiCateogory:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v21 = v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate;
  uint64_t v22 = type metadata accessor for Date();
  double v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  v23(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate, 1, 1, v22);
  char v24 = (void *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem);
  *(void *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_mapItem) = 0;
  uint64_t v25 = v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_clusterCount;
  *(void *)uint64_t v25 = 0;
  *(unsigned char *)(v25 + 8) = 1;
  double v26 = (double *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel);
  *(void *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_confidenceLevel) = 0;
  double v27 = (unsigned char *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork);
  *(unsigned char *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isWork) = 0;
  *(void *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_userPlaceType) = -1;
  id v28 = (void *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_enclosingArea);
  *id v28 = 0;
  v28[1] = 0;
  id v29 = (double *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty);
  *(void *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_horizontalUncertainty) = 0;
  Class v30 = (unsigned char *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isScaledDownPOI);
  *(unsigned char *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_isScaledDownPOI) = 0;
  id v31 = (void *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_poiCategory);
  *id v31 = 0;
  v31[1] = 0xE000000000000000;
  *(double *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_latitude) = a9;
  *(double *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_longitude) = a10;
  double v32 = (void *)(v15 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_title);
  *double v32 = a1;
  v32[1] = a2;
  swift_beginAccess();
  *(void *)uint64_t v25 = a3;
  *(unsigned char *)(v25 + 8) = a4 & 1;
  swift_beginAccess();
  *char v24 = a5;
  swift_unknownObjectRelease();
  swift_beginAccess();
  *double v26 = a11;
  swift_beginAccess();
  *double v27 = a6;
  swift_beginAccess();
  *id v28 = a7;
  v28[1] = a8;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *id v29 = a12;
  swift_beginAccess();
  *Class v30 = a13;
  swift_beginAccess();
  *id v31 = a14;
  v31[1] = a15;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t outlined init with copy of Date?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MOMapLocation.shiftedIfNecessary.getter()
{
  uint64_t v1 = v0;
  double v2 = (*(double (**)(void))(*(void *)v0 + 240))();
  id v3 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v2 longitude:(*(double (**)(void))(*(void *)v0 + 264))()];
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)v0 + 288);
  uint64_t v5 = v4();
  swift_unknownObjectRelease();
  if (v5) {
    goto LABEL_6;
  }
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v6 = static MOLocationShifter.shared;
  if (((*(uint64_t (**)(id))(*(void *)static MOLocationShifter.shared + 96))(v3) & 1) == 0)
  {
LABEL_6:

    swift_retain();
  }
  else
  {
    long long v7 = (void *)(*(uint64_t (**)(id))(*(void *)v6 + 104))(v3);
    [v7 coordinate];
    double v9 = v8;
    id v10 = [v7 coordinate];
    double v12 = v11;
    uint64_t v13 = (*(uint64_t (**)(id))(*(void *)v1 + 336))(v10);
    uint64_t v26 = v14;
    uint64_t v27 = v13;
    uint64_t v15 = (*(uint64_t (**)(void))(*(void *)v1 + 312))();
    char v17 = v16 & 1;
    uint64_t v18 = v4();
    double v19 = (*(double (**)(void))(*(void *)v1 + 360))();
    char v20 = (*(uint64_t (**)(void))(*(void *)v1 + 384))();
    uint64_t v21 = (*(uint64_t (**)(void))(*(void *)v1 + 432))();
    uint64_t v23 = v22;
    double v24 = (*(double (**)(void))(*(void *)v1 + 456))();
    type metadata accessor for MOMapLocation();
    uint64_t v1 = swift_allocObject();
    MOMapLocation.init(latitude:longitude:title:clusterCount:geoMapItem:confidenceLevel:isWork:enclosingArea:horizontalUncertainty:isScaledDownPOI:poiCateogory:)(v27, v26, v15, v17, v18, v20 & 1, v21, v23, v9, v12, v19, v24, 0, 0, 0xE000000000000000);
  }
  return v1;
}

uint64_t type metadata accessor for MOMapLocation()
{
  uint64_t result = type metadata singleton initialization cache for MOMapLocation;
  if (!type metadata singleton initialization cache for MOMapLocation) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MOMapLocation.deinit()
{
  outlined destroy of Any?(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined destroy of Any?(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate, (uint64_t *)&demangling cache variable for type metadata for Date?);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOMapLocation.__deallocating_deinit()
{
  outlined destroy of Any?(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_startDate, (uint64_t *)&demangling cache variable for type metadata for Date?);
  outlined destroy of Any?(v0 + OBJC_IVAR____TtC16MomentsUIService13MOMapLocation_endDate, (uint64_t *)&demangling cache variable for type metadata for Date?);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100170E60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 192))();
}

uint64_t sub_100170EA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 216))();
}

void sub_100170EF0(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 240))();
}

uint64_t sub_100170F3C(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 248))(*a1);
}

void sub_100170F84(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 264))();
}

uint64_t sub_100170FD8(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 272))(*a1);
}

uint64_t sub_100171028@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 288))();
  *a2 = result;
  return result;
}

uint64_t sub_10017107C(uint64_t a1, uint64_t a2)
{
  double v2 = *(uint64_t (**)(uint64_t))(**(void **)a2 + 296);
  uint64_t v3 = swift_unknownObjectRetain();
  return v2(v3);
}

uint64_t sub_1001710D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 312))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_100171134(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void))(**(void **)a2 + 320))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_100171190@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 336))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001711E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 344);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

void sub_100171254(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 360))();
}

uint64_t sub_1001712A8(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 368))(*a1);
}

uint64_t sub_1001712F8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 384))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100171350(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 392))(*a1);
}

uint64_t sub_1001713A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 408))();
  *a2 = result;
  return result;
}

uint64_t sub_1001713F4(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 416))(*a1);
}

uint64_t sub_100171444@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 432))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_100171498(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 440);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

void sub_100171508(uint64_t a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))(**(void **)a1 + 456))();
}

uint64_t sub_10017155C(double *a1, uint64_t a2)
{
  return (*(uint64_t (**)(double))(**(void **)a2 + 464))(*a1);
}

uint64_t sub_1001715AC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 480))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_100171604(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 488))(*a1);
}

uint64_t sub_100171654@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 504))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1001716A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(**(void **)a2 + 512);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t ObjC metadata update function for MOMapLocation()
{
  return type metadata accessor for MOMapLocation();
}

void type metadata completion function for MOMapLocation()
{
  type metadata accessor for Date?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void type metadata accessor for Date?()
{
  if (!lazy cache variable for type metadata for Date?)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for Date?);
    }
  }
}

void *MOSuggestionSheetStateOfMindTipCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetStateOfMindTipCell.reuseIdentifier;
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.__allocating_init(publicUI:tip:)(char a1, char a2)
{
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 17) = 2;
  *(unsigned char *)(v4 + 16) = a1;
  swift_beginAccess();
  *(unsigned char *)(v4 + 17) = a2;
  return v4;
}

unint64_t static MOSuggestionSheetStateOfMindTipCell.reuseIdentifier.getter()
{
  return 0xD000000000000023;
}

uint64_t MOSuggestionSheetStateOfMindTipCell.tipModel.getter()
{
  return swift_retain();
}

uint64_t MOSuggestionSheetStateOfMindTipCell.tipModel.setter(uint64_t a1)
{
  uint64_t v3 = (void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_tipModel);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_retain();
  uint64_t v4 = swift_release();
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x98))(v4);
  return swift_release();
}

uint64_t (*MOSuggestionSheetStateOfMindTipCell.tipModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionSheetStateOfMindTipCell.tipModel.modify;
}

uint64_t MOSuggestionSheetStateOfMindTipCell.tipModel.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(a1 + 24)) + 0x98))(result);
  }
  return result;
}

void MOSuggestionSheetStateOfMindTipCell.init(coder:)()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_tipModel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *MOSuggestionSheetStateOfMindTipCell.init(frame:)()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetStateOfMindTipCell_tipModel] = 0;
  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for MOSuggestionSheetStateOfMindTipCell();
  uint64_t v4 = [super initWithFrame:CGRectZero.origin.x, y, width, height];
  uint64_t v5 = *(void (**)(void))((swift_isaMask & *v4) + 0x98);
  uint64_t v6 = v4;
  v5();

  return v6;
}

Swift::Void __swiftcall MOSuggestionSheetStateOfMindTipCell.setUpTip()()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    swift_unknownObjectWeakAssign();
    [v3 removeFromSuperview];
  }
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x78))();
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 96))(v4);
    swift_release();
  }
  lazy protocol witness table accessor for type MOSuggestionStateOfMindTip and conformance MOSuggestionStateOfMindTip();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v5 = objc_allocWithZone((Class)type metadata accessor for TipUIView());
  uint64_t v6 = (void *)TipUIView.init(_:arrowEdge:actionHandler:)();
  [v1 addSubview:v6];
  swift_unknownObjectWeakAssign();
  long long v7 = self;
  id v33 = v6;
  id v8 = [v7 grayColor];
  [v33 setTintColor:v8];

  id v9 = [v33 superview];
  if (v9)
  {
    id v10 = v9;
    [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v11 = [v33 topAnchor];
    id v12 = [v10 topAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    [v13 setConstant:0.0];
    if (v13)
    {
      id v14 = v13;
      [v14 setActive:1];
    }
  }
  id v15 = [v33 superview];
  if (v15)
  {
    char v16 = v15;
    [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v17 = [v33 bottomAnchor];
    id v18 = [v16 bottomAnchor];
    id v19 = [v17 constraintEqualToAnchor:v18];

    if (v19)
    {
      [v19 setConstant:-0.0];
      id v20 = v19;
      [v20 setActive:1];
    }
  }
  id v21 = [v33 superview];
  if (v21)
  {
    uint64_t v22 = v21;
    [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v23 = [v33 leadingAnchor];
    id v24 = [v22 leadingAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24];

    [v25 setConstant:20.0];
    if (v25)
    {
      id v26 = v25;
      [v26 setActive:1];
    }
  }
  id v27 = [v33 superview];
  if (v27)
  {
    id v28 = v27;
    [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v33 trailingAnchor];
    id v30 = [v28 trailingAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    [v31 setConstant:-20.0];
    if (v31)
    {
      id v32 = v31;
      [v32 setActive:1];
    }
  }
  TipUIView.imageSize.setter();
}

void closure #1 in MOSuggestionSheetStateOfMindTipCell.setUpTip()()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if (Tips.Action.id.getter() == 0x656C62616E65 && v2 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0)
      {
LABEL_7:

        return;
      }
    }
    specialized MOSuggestionSheetStateOfMindTipCell.enableButtonTapped()();
    goto LABEL_7;
  }
}

id MOSuggestionSheetStateOfMindTipCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetStateOfMindTipCell();
  return [super dealloc];
}

unint64_t MOSuggestionStateOfMindTip.id.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t MOSuggestionStateOfMindTip.title.getter()
{
  return specialized MOSuggestionStateOfMindTip.title.getter();
}

uint64_t MOSuggestionStateOfMindTip.image.getter()
{
  return Image.init(_internalSystemName:)(0xD000000000000011, 0x80000001001E11D0);
}

uint64_t MOSuggestionStateOfMindTip.options.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of static Tips.OptionsBuilder.buildPartialBlock<A>(first:)>>.0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for <<opaque return type of static Tips.OptionsBuilder.buildExpression<A>(_:)>>.0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Tips.IgnoresDisplayFrequency>);
  uint64_t v8 = type metadata accessor for Tips.IgnoresDisplayFrequency();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1001DA0F0;
  Tips.IgnoresDisplayFrequency.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  swift_bridgeObjectRelease();
  uint64_t v12 = v8;
  id v13 = &protocol witness table for Tips.IgnoresDisplayFrequency;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v12 = v4;
  id v13 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v10 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

void *MOSuggestionStateOfMindTip.actions.getter(char a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Tips.Action>);
  type metadata accessor for Tips.Action();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001DA0F0;
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  Tips.Action.init(id:perform:_:)();
  char v3 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay6TipKit4TipsO6ActionVGG_ALs5NeverOTgq505_sSi6f4Kit4h2O6i34VAEIgynr_Si6offset_AE7elementtAEs5J94OIegnrzr_TR03_s6a4Kit4c3O13D54BuilderV16buildFinalResultySayAC0D0VGAIFZAHSi_AHtXEfU_Tf3nnnpf_nTf1cn_n(v2);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v3;
}

uint64_t closure #1 in MOSuggestionStateOfMindTip.actions.getter(char a1)
{
  LocalizedStringKey.init(stringLiteral:)();
  LOWORD(v12) = 2;
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5;
  long long v7 = self;
  uint64_t v8 = &selRef_systemBlueColor;
  if ((a1 & 1) == 0) {
    uint64_t v8 = &selRef_systemIndigoColor;
  }
  id v9 = [v7 *v8:53 v12];
  Color.init(_:)();
  uint64_t v10 = Text.foregroundStyle<A>(_:)();
  outlined consume of Text.Storage(v2, v4, v6 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

void *protocol witness for Tip.actions.getter in conformance MOSuggestionStateOfMindTip()
{
  char v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Tips.Action>);
  type metadata accessor for Tips.Action();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1001DA0F0;
  *(unsigned char *)(swift_allocObject() + 16) = v1;
  Tips.Action.init(id:perform:_:)();
  uint64_t v3 = _sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay6TipKit4TipsO6ActionVGG_ALs5NeverOTgq505_sSi6f4Kit4h2O6i34VAEIgynr_Si6offset_AE7elementtAEs5J94OIegnrzr_TR03_s6a4Kit4c3O13D54BuilderV16buildFinalResultySayAC0D0VGAIFZAHSi_AHtXEfU_Tf3nnnpf_nTf1cn_n(v2);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v3;
}

uint64_t protocol witness for Tip.rules.getter in conformance MOSuggestionStateOfMindTip()
{
  return Tip.rules.getter();
}

void protocol witness for Identifiable.id.getter in conformance MOSuggestionStateOfMindTip(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000001001DE730;
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.isPublicUI.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.tip.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.tip.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 17) = a1;
  return result;
}

uint64_t (*MOSuggestionSheetStateOfMindTipCellModel.tip.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.init(publicUI:tip:)(char a1, char a2)
{
  *(unsigned char *)(v2 + 17) = 2;
  *(unsigned char *)(v2 + 16) = a1;
  swift_beginAccess();
  *(unsigned char *)(v2 + 17) = a2;
  return v2;
}

uint64_t type metadata accessor for MOSuggestionSheetStateOfMindTipCell()
{
  return self;
}

uint64_t sub_100172C44()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionSheetStateOfMindTipCell.setUpTip()()
{
}

uint64_t MOSuggestionSheetStateOfMindTipCellModel.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void *_sSTsE3mapySayqd__Gqd__7ElementQzqd_0_YKXEqd_0_YKs5ErrorRd_0_r0_lFs18EnumeratedSequenceVySay6TipKit4TipsO6ActionVGG_ALs5NeverOTgq505_sSi6f4Kit4h2O6i34VAEIgynr_Si6offset_AE7elementtAEs5J94OIegnrzr_TR03_s6a4Kit4c3O13D54BuilderV16buildFinalResultySayAC0D0VGAIFZAHSi_AHtXEfU_Tf3nnnpf_nTf1cn_n(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Tips.Action();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Tips.Action));
  uint64_t v6 = __chkstk_darwin(v41);
  id v40 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v39 = (uint64_t *)((char *)&v31 - v9);
  __chkstk_darwin(v8);
  id v11 = (char *)&v31 - v10;
  double v42 = _swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, 0, 0);
  uint64_t v12 = v42;
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v38 = v13;
  uint64_t v31 = a1;
  if (v13)
  {
    uint64_t v14 = 0;
    char v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v15 = v3 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    unint64_t v34 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
    uint64_t v35 = v16;
    uint64_t v18 = a1 + v34;
    id v19 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v36 = v15;
    uint64_t v37 = v2;
    id v32 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v33 = v17;
    do
    {
      uint64_t v20 = v41;
      id v21 = &v40[*(int *)(v41 + 48)];
      v35(v21, v18, v2);
      uint64_t v22 = v19;
      uint64_t v23 = (uint64_t)v39;
      id v24 = (char *)v39 + *(int *)(v20 + 48);
      *uint64_t v39 = v14;
      id v25 = *v22;
      (*v22)(v24, v21, v2);
      outlined init with take of (offset: Int, element: Tips.Action)(v23, (uint64_t)v11);
      Tips.Action.with(index:)();
      outlined destroy of (offset: Int, element: Tips.Action)((uint64_t)v11);
      uint64_t v12 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v12[2] + 1, 1);
        uint64_t v12 = v42;
      }
      unint64_t v27 = v12[2];
      unint64_t v26 = v12[3];
      if (v27 >= v26 >> 1)
      {
        specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
        uint64_t v12 = v42;
      }
      ++v14;
      v12[2] = v27 + 1;
      uint64_t v28 = v33;
      unint64_t v29 = (unint64_t)v12 + v34 + v27 * v33;
      uint64_t v2 = v37;
      id v19 = v32;
      v25((char *)v29, v5, v37);
      double v42 = v12;
      v18 += v28;
    }
    while (v38 != v14);
  }
  swift_bridgeObjectRelease();
  return v12;
}

size_t specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(size_t a1, int64_t a2, char a3)
{
  size_t result = specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

size_t specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Tips.Action>);
  uint64_t v10 = *(void *)(type metadata accessor for Tips.Action() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size_0(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for Tips.Action() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

void specialized MOSuggestionSheetStateOfMindTipCell.enableButtonTapped()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [self defaultWorkspace];
  if (v3)
  {
    uint64_t v4 = v3;
    URL.init(string:)();
    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v8 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
    {
      URL._bridgeToObjectiveC()(v7);
      uint64_t v8 = v9;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
    }
    [v4 openSensitiveURL:v8 withOptions:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t specialized MOSuggestionStateOfMindTip.title.getter()
{
  id v0 = [self mainBundle];
  v4._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v4._object = (void *)0x80000001001E9710;
  v1._object = (void *)0x80000001001E96F0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  lazy protocol witness table accessor for type String and conformance String();
  return Text.init<A>(_:)();
}

uint64_t specialized MOSuggestionStateOfMindTip.message.getter()
{
  id v0 = [self mainBundle];
  v1._uint64_t countAndFlagsBits = 0xD000000000000075;
  v4._object = (void *)0x80000001001E96C0;
  v1._object = (void *)0x80000001001E9640;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v4._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  lazy protocol witness table accessor for type String and conformance String();
  return Text.init<A>(_:)();
}

uint64_t sub_100173488()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionStateOfMindTip.actions.getter()
{
  return closure #1 in MOSuggestionStateOfMindTip.actions.getter(*(unsigned char *)(v0 + 16));
}

uint64_t sub_1001734F8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x78))();
  *a2 = result;
  return result;
}

uint64_t sub_100173554(uint64_t a1, void **a2)
{
  Swift::String v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x80);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1001735B8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 96))();
  *a2 = result;
  return result;
}

uint64_t sub_100173604(unsigned __int8 *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(**(void **)a2 + 104))(*a1);
}

unsigned char *storeEnumTagSinglePayload for MOSuggestionStateOfMindTip(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100173718);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionStateOfMindTip()
{
  return &type metadata for MOSuggestionStateOfMindTip;
}

uint64_t type metadata accessor for MOSuggestionSheetStateOfMindTipCellModel()
{
  return self;
}

uint64_t sub_100173774()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t outlined init with take of (offset: Int, element: Tips.Action)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Tips.Action));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of (offset: Int, element: Tips.Action)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for (offset: Int, element: Tips.Action));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t outlined consume of Text.Storage(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

void *ProgressIndicatorConstants.STARTLAYEROFFSETDEGREE.unsafeMutableAddressor()
{
  return &static ProgressIndicatorConstants.STARTLAYEROFFSETDEGREE;
}

float static ProgressIndicatorConstants.STARTLAYEROFFSETDEGREE.getter()
{
  return -90.0;
}

void *ProgressIndicatorConstants.FRAME_SIZE.unsafeMutableAddressor()
{
  return &static ProgressIndicatorConstants.FRAME_SIZE;
}

const char *ProgressIndicatorConstants.PLAYBUTTONSYMBOL.unsafeMutableAddressor()
{
  return "play.fill";
}

const char *ProgressIndicatorConstants.PAUSEBUTTONSYMBOL.unsafeMutableAddressor()
{
  return "pause.fill";
}

void *ProgressIndicatorConstants.BORDER_LINE_WIDTH.unsafeMutableAddressor()
{
  return &static ProgressIndicatorConstants.BORDER_LINE_WIDTH;
}

id MOCircularProgressIndicatorView.borderLayer.getter()
{
  Swift::String v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOCircularProgressIndicatorView.borderLayer.setter(void *a1)
{
}

uint64_t (*MOCircularProgressIndicatorView.borderLayer.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

id MOCircularProgressIndicatorView.progressLayer.getter()
{
  Swift::String v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOCircularProgressIndicatorView.progressLayer.setter(void *a1)
{
}

uint64_t (*MOCircularProgressIndicatorView.progressLayer.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOCircularProgressIndicatorView.playPauseButton.getter()
{
  Swift::String v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOCircularProgressIndicatorView.playPauseButton.setter(void *a1)
{
}

uint64_t (*MOCircularProgressIndicatorView.playPauseButton.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOCircularProgressIndicatorView.config.getter()
{
  Swift::String v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_config);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOCircularProgressIndicatorView.config.setter(void *a1)
{
}

uint64_t (*MOCircularProgressIndicatorView.config.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOCircularProgressIndicatorView.playButtonConfig.getter()
{
  Swift::String v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playButtonConfig);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOCircularProgressIndicatorView.playButtonConfig.setter(void *a1)
{
}

uint64_t (*MOCircularProgressIndicatorView.playButtonConfig.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOCircularProgressIndicatorView.mediaAssetID.getter()
{
  Swift::String v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_mediaAssetID);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t MOCircularProgressIndicatorView.mediaAssetID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_mediaAssetID);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOCircularProgressIndicatorView.mediaAssetID.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOCircularProgressIndicatorView.__allocating_init(mediaAssetID:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return MOCircularProgressIndicatorView.init(mediaAssetID:)(a1, a2);
}

void *MOCircularProgressIndicatorView.init(mediaAssetID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer;
  id v4 = objc_allocWithZone((Class)CAShapeLayer);
  id v5 = v2;
  *(void *)&v2[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(void *)&v5[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_config;
  uint64_t v9 = self;
  id v10 = [v9 whiteColor];
  uint64_t v11 = self;
  id v12 = [v11 configurationWithHierarchicalColor:v10];

  uint64_t v13 = self;
  id v14 = [v13 systemFontOfSize:15.0];
  id v15 = [v11 configurationWithFont:v14];

  id v16 = [v12 configurationByApplyingConfiguration:v15];
  *(void *)&v5[v8] = v16;
  uint64_t v17 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playButtonConfig;
  id v18 = [v9 whiteColor];
  id v19 = [v11 configurationWithHierarchicalColor:v18];

  id v20 = [v13 systemFontOfSize:15.0];
  id v21 = [v11 configurationWithFont:v20];

  id v22 = [v19 configurationByApplyingConfiguration:v21];
  *(void *)&v5[v17] = v22;
  uint64_t v23 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_blurMaterialView;
  id v24 = [self effectWithStyle:11];
  id v25 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v24];

  *(void *)&v5[v23] = v25;
  unint64_t v26 = &v5[OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_mediaAssetID];
  *(void *)unint64_t v26 = 0;
  *((void *)v26 + 1) = 0;
  uint64_t v27 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderPath;
  *(void *)&v5[v27] = [objc_allocWithZone((Class)UIBezierPath) init];
  swift_beginAccess();
  *(void *)unint64_t v26 = a1;
  *((void *)v26 + 1) = a2;

  swift_bridgeObjectRelease();
  uint64_t v28 = (objc_class *)type metadata accessor for MOCircularProgressIndicatorView();
  v77.receiver = v5;
  v77.super_class = v28;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v30 = one-time initialization token for shared;
  id v31 = v29;
  if (v30 != -1) {
    swift_once();
  }
  v76[3] = v28;
  v76[4] = &protocol witness table for MOCircularProgressIndicatorView;
  v76[0] = v31;
  id v32 = *(void (**)(void *))(*(void *)static MOMusicPlaybackCoordinator.shared + 216);
  uint64_t v33 = v31;
  v32(v76);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
  unint64_t v34 = (id *)((char *)v33 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer);
  swift_beginAccess();
  id v35 = *v34;
  NSString v36 = String._bridgeToObjectiveC()();
  [v35 setName:v36];

  [*v34 setLineWidth:2.5];
  id v37 = *v34;
  id v38 = [v9 whiteColor];
  id v39 = [v38 colorWithAlphaComponent:0.6];

  id v40 = [v39 CGColor];
  [v37 setStrokeColor:v40];

  id v41 = *v34;
  id v42 = [v9 clearColor];
  id v43 = [v42 CGColor];

  [v41 setFillColor:v43];
  [*v34 setLineCap:kCALineCapRound];
  double v44 = (id *)((char *)v33 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer);
  swift_beginAccess();
  id v45 = *v44;
  NSString v46 = String._bridgeToObjectiveC()();
  [v45 setName:v46];

  id v47 = *v44;
  id v48 = [v9 clearColor];
  id v49 = [v48 CGColor];

  [v47 setFillColor:v49];
  id v50 = *v44;
  id v51 = [v9 whiteColor];
  id v52 = [v51 CGColor];

  [v50 setStrokeColor:v52];
  [*v44 setLineWidth:2.5];
  uint64_t v53 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_blurMaterialView;
  [*(id *)((char *)v33 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_blurMaterialView) _setCornerRadius:15.0];
  [v33 addSubview:*(void *)((char *)v33 + v53)];
  unint64_t v54 = &selRef_collectionView_didSelectItemAtIndexPath_;
  [*(id *)((char *)v33 + v53) setTranslatesAutoresizingMaskIntoConstraints:0];
  id v55 = *(id *)((char *)v33 + v53);
  UIView.fillSuper(margin:)(0.0);

  swift_bridgeObjectRelease();
  id v56 = [v33 layer];
  [v56 addSublayer:*v34];

  id v57 = [v33 layer];
  [v57 addSublayer:*v44];

  (*(void (**)(void))((swift_isaMask & *v33) + 0x158))();
  uint64_t v58 = (id *)((char *)v33 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton);
  swift_beginAccess();
  [v33 addSubview:*v58];
  [*v58 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v59 = *v58;
  id v60 = [v59 superview];
  if (v60)
  {
    uint64_t v61 = v60;
    [v59 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v62 = [v59 centerYAnchor];
    id v63 = [v61 centerYAnchor];
    id v64 = [v62 constraintEqualToAnchor:v63];

    [v64 setConstant:0.0];
    if (v64)
    {
      id v64 = v64;
      [v64 setActive:1];

      id v59 = v64;
    }

    unint64_t v54 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v64 = 0;
    uint64_t v61 = v59;
  }

  id v65 = *v58;
  id v66 = [v65 superview];
  if (v66)
  {
    double v67 = v66;
    [v65 v54[92]];
    id v68 = [v65 centerXAnchor];
    id v69 = [v67 centerXAnchor];
    id v70 = [v68 constraintEqualToAnchor:v69];

    [v70 setConstant:0.0];
    if (v70)
    {
      id v71 = v70;
      [v71 setActive:1];

      id v65 = v33;
      Class v72 = v71;
    }
    else
    {
      Class v72 = 0;
      id v71 = v33;
    }

    id v65 = v71;
  }
  else
  {
    Class v72 = 0;
    double v67 = v33;
  }

  return v33;
}

uint64_t type metadata accessor for MOCircularProgressIndicatorView()
{
  return self;
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.layoutSubviews()()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MOCircularProgressIndicatorView();
  [super layoutSubviews];
  [v0 bounds];
  CGRectGetMidX(v6);
  [v0 bounds];
  CGRectGetMidY(v7);
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderPath;
  id v2 = [*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderPath) addArcWithCenter:radius:startAngle:endAngle:clockwise:];
  uint64_t v3 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x90))(v2);
  id v4 = [*(id *)((char *)v0 + v1) CGPath];
  [v3 setPath:v4];
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.setupPlayPauseButton()()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v1 = static MOMusicPlaybackCoordinator.shared;
  v25[3] = type metadata accessor for MOCircularProgressIndicatorView();
  v25[4] = &protocol witness table for MOCircularProgressIndicatorView;
  v25[0] = v0;
  id v2 = *(uint64_t (**)(void *))(*(void *)v1 + 352);
  uint64_t v3 = v0;
  char v4 = v2(v25);
  uint64_t v5 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  CGRect v6 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xC0))(v5);
  if (v4)
  {
    CGRect v7 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xD8))();
    NSString v8 = String._bridgeToObjectiveC()();
    id v9 = [self systemImageNamed:v8 withConfiguration:v7];

    [v6 setImage:v9 forState:0];
    id v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xA8))();
    [v10 setHidden:0];

    uint64_t v11 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x90))();
    [v11 setHidden:0];
  }
  else
  {
    id v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xF0))();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [self systemImageNamed:v13 withConfiguration:v12];

    [v6 setImage:v14 forState:0];
    id v15 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xA8))();
    [v15 setHidden:1];

    uint64_t v11 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x90))();
    [v11 setHidden:1];
  }

  id v16 = *(uint64_t (**)(void))((swift_isaMask & *v3) + 0xC0);
  uint64_t v17 = (void *)v16();
  id v18 = [v17 imageView];

  if (v18)
  {
    [v18 setContentMode:1];
  }
  id v19 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v3 action:"touchPlayback:"];
  id v20 = (void *)((uint64_t (*)(id))v16)([v3 setUserInteractionEnabled:1]);
  [v20 addGestureRecognizer:v19];

  id v21 = (void *)v16();
  [v21 setUserInteractionEnabled:1];

  id v22 = (void *)v16();
  [v22 setDeliversTouchesForGesturesToSuperview:0];

  uint64_t v23 = (void *)v16();
  id v24 = [self labelColor];
  [v23 setTintColor:v24];
}

Swift::Float __swiftcall MOCircularProgressIndicatorView.degreesToRadians(degrees:)(Swift::Float degrees)
{
  return (float)(degrees * 3.1416) / 180.0;
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.setProgress(progress:)(Swift::Float progress)
{
  [v1 bounds];
  CGRectGetMidX(v14);
  [v1 bounds];
  CGRectGetMidY(v15);
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  double v4 = v3;
  double v6 = v5;
  id v7 = [objc_allocWithZone((Class)UIBezierPath) init];
  NSString v8 = *(float (**)(float))((swift_isaMask & *v1) + 0x160);
  double v9 = v8(-90.0);
  id v10 = [v7 addArcWithCenter:1 radius:v4 startAngle:v6 endAngle:13.75 clockwise:[(v8)((float)(progress * 360.0) + -90.0).n128_f32[0]];
  uint64_t v11 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v1) + 0xA8))(v10);
  id v12 = [v7 CGPath];
  [v11 setPath:v12];
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.touchPlayback(_:)(UITapGestureRecognizer a1)
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  uint64_t v2 = static MOMusicPlaybackCoordinator.shared;
  v5[3] = type metadata accessor for MOCircularProgressIndicatorView();
  v5[4] = &protocol witness table for MOCircularProgressIndicatorView;
  v5[0] = v1;
  double v3 = *(void (**)(void *))(*(void *)v2 + 360);
  id v4 = v1;
  v3(v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

id MOCircularProgressIndicatorView.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  id v4 = v3;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for MOCircularProgressIndicatorView();
  [super hitTest:a1 withEvent:a2];
  double v9 = *(uint64_t (**)(void))((swift_isaMask & *v4) + 0xC0);
  id v10 = (void *)v9();
  uint64_t v11 = v10;
  if (!v8)
  {

    goto LABEL_5;
  }
  type metadata accessor for UIView();
  id v12 = v8;
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
LABEL_5:
    id v14 = [v4 superview];
    goto LABEL_6;
  }
  id v14 = (id)v9();
  id v8 = v12;
LABEL_6:

  return v14;
}

void MOCircularProgressIndicatorView.init(frame:)()
{
}

id MOCircularProgressIndicatorView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOCircularProgressIndicatorView();
  return [super dealloc];
}

uint64_t MOCircularProgressIndicatorView.mediaID.getter()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120))();
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.didReceiveShouldPlayNotification()()
{
  uint64_t v1 = v0;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  double v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    double v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[MOCircularProgressIndicatorView] Start Playing Notification", v5, 2u);
    swift_slowDealloc();
  }

  double v6 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC0))();
  id v7 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xD8))();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8 withConfiguration:v7];

  [v6 setImage:v9 forState:0];
  id v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA8))();
  [v10 setHidden:0];

  id v11 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x90))();
  [v11 setHidden:0];
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.didReceiveShouldStopNotification()()
{
  uint64_t v1 = v0;
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.shared);
  double v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    double v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "[MOCircularProgressIndicatorView] Stop Playing Notification", v5, 2u);
    swift_slowDealloc();
  }

  double v6 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xC0))();
  id v7 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xF0))();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8 withConfiguration:v7];

  [v6 setImage:v9 forState:0];
  id v10 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA8))();
  [v10 setHidden:1];

  id v11 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x90))();
  [v11 setHidden:1];

  id v12 = *(void (**)(__n128))((swift_isaMask & *v1) + 0x168);
  v13.n128_u64[0] = 0;

  v12(v13);
}

Swift::Void __swiftcall MOCircularProgressIndicatorView.didReceiveProgressNotification(_:)(Swift::Float a1)
{
  (*(void (**)(float))((swift_isaMask & *v1) + 0x168))(a1);
}

uint64_t protocol witness for MOMusicPlaybackCoordinatorDelegate.mediaID.getter in conformance MOCircularProgressIndicatorView()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x120))();
}

void protocol witness for MOMusicPlaybackCoordinatorDelegate.didReceiveShouldPlayNotification() in conformance MOCircularProgressIndicatorView()
{
}

void protocol witness for MOMusicPlaybackCoordinatorDelegate.didReceiveShouldStopNotification() in conformance MOCircularProgressIndicatorView()
{
}

uint64_t protocol witness for MOMusicPlaybackCoordinatorDelegate.didReceiveProgressNotification(_:) in conformance MOCircularProgressIndicatorView()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x168))();
}

void specialized MOCircularProgressIndicatorView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderLayer;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_progressLayer;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)CAShapeLayer) init];
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playPauseButton;
  type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  *(void *)&v0[v3] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_config;
  double v5 = self;
  id v6 = [v5 whiteColor];
  id v7 = self;
  id v8 = [v7 configurationWithHierarchicalColor:v6];

  id v9 = self;
  id v10 = [v9 systemFontOfSize:15.0];
  id v11 = [v7 configurationWithFont:v10];

  id v12 = [v8 configurationByApplyingConfiguration:v11];
  *(void *)&v0[v4] = v12;
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_playButtonConfig;
  id v14 = [v5 whiteColor];
  id v15 = [v7 configurationWithHierarchicalColor:v14];

  id v16 = [v9 systemFontOfSize:15.0];
  id v17 = [v7 configurationWithFont:v16];

  id v18 = [v15 configurationByApplyingConfiguration:v17];
  *(void *)&v0[v13] = v18;
  uint64_t v19 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_blurMaterialView;
  id v20 = [self effectWithStyle:11];
  id v21 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v20];

  *(void *)&v0[v19] = v21;
  id v22 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_mediaAssetID];
  *(void *)id v22 = 0;
  *((void *)v22 + 1) = 0;
  uint64_t v23 = OBJC_IVAR____TtC16MomentsUIService31MOCircularProgressIndicatorView_borderPath;
  *(void *)&v0[v23] = [objc_allocWithZone((Class)UIBezierPath) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100175E28@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x90))();
  *a2 = result;
  return result;
}

uint64_t sub_100175E84(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x98))(*a1);
}

uint64_t sub_100175EE8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xA8))();
  *a2 = result;
  return result;
}

uint64_t sub_100175F44(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xB0))(*a1);
}

uint64_t sub_100175FA8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC0))();
  *a2 = result;
  return result;
}

uint64_t sub_100176004(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xC8))(*a1);
}

uint64_t sub_100176068@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001760C4(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xE0))(*a1);
}

uint64_t sub_100176128@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF0))();
  *a2 = result;
  return result;
}

uint64_t sub_100176184(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t sub_1001761E8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x120))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10017624C(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x128);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

ValueMetadata *type metadata accessor for ProgressIndicatorConstants()
{
  return &type metadata for ProgressIndicatorConstants;
}

unsigned char *MOSuggestionAddedView.__allocating_init(symbolOnly:)(char a1)
{
  uint64_t v3 = [objc_allocWithZone(v1) initWithFrame:0.0, 0.0, 0.0, 0.0];
  v3[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] = a1;
  uint64_t v4 = v3;
  [v4 setClipsToBounds:1];
  MOSuggestionAddedView.initAddedView()();

  return v4;
}

uint64_t *MOSuggestionAddedView.font.unsafeMutableAddressor()
{
  if (one-time initialization token for font != -1) {
    swift_once();
  }
  return &static MOSuggestionAddedView.font;
}

id static MOSuggestionAddedView.font.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for font, (void **)&static MOSuggestionAddedView.font);
}

uint64_t *MOSuggestionAddedView.config.unsafeMutableAddressor()
{
  if (one-time initialization token for config != -1) {
    swift_once();
  }
  return &static MOSuggestionAddedView.config;
}

id static MOSuggestionAddedView.config.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for config, (void **)&static MOSuggestionAddedView.config);
}

const char *MOSuggestionAddedView.systemSymbol.unsafeMutableAddressor()
{
  return "checkmark";
}

void *MOSuggestionAddedView.savedSymbol.unsafeMutableAddressor()
{
  return &static MOSuggestionAddedView.savedSymbol;
}

id one-time initialization function for fontColor()
{
  id result = [self systemGrayColor];
  static MOSuggestionAddedView.fontColor = (uint64_t)result;
  return result;
}

uint64_t *MOSuggestionAddedView.fontColor.unsafeMutableAddressor()
{
  if (one-time initialization token for fontColor != -1) {
    swift_once();
  }
  return &static MOSuggestionAddedView.fontColor;
}

id static MOSuggestionAddedView.fontColor.getter()
{
  return default argument 3 of MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(&one-time initialization token for fontColor, (void **)&static MOSuggestionAddedView.fontColor);
}

id MOSuggestionAddedView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_addedLabel;
  id v10 = objc_allocWithZone((Class)UILabel);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_backgroundView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIView) init];
  v11[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] = 0;
  *(void *)&v11[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnlyBackgroundRatio] = 0x3FE0000000000000;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for MOSuggestionAddedView();
  return [super initWithFrame:a1, a2, a3, a4];
}

void MOSuggestionAddedView.initAddedView()()
{
  uint64_t v1 = v0;
  id v41 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v2 = self;
  id v3 = [v2 whiteColor];
  [v41 setBackgroundColor:v3];

  [v41 setAlpha:0.45];
  [v41 _setCornerRadius:8.0];
  [v1 insertSubview:v41 atIndex:0];
  UIView.fillSuper(margin:)(0.0);
  swift_bridgeObjectRelease();
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly) != 1)
  {
    id v20 = [objc_allocWithZone((Class)UIStackView) init];
    [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v20 setAxis:0];
    [v20 setDistribution:2];
    [v20 setAlignment:3];
    [v1 addSubview:v20];
    id v15 = v20;
    id v21 = [v2 systemWhiteColor];
    id v22 = [v21 colorWithAlphaComponent:0.9];

    [v15 setBackgroundColor:v22];
    id v23 = [v15 layer];
    [v23 setCornerRadius:12.0];

    [v15 setLayoutMarginsRelativeArrangement:1];
    [v15 setLayoutMargins:3.0, 10.0, 3.0, 10.0];
    id v24 = [v15 superview];
    id v25 = &selRef_collectionView_didSelectItemAtIndexPath_;
    if (v24)
    {
      unint64_t v26 = v24;
      [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v27 = [v15 centerXAnchor];
      id v28 = [v26 centerXAnchor];
      id v29 = [v27 constraintEqualToAnchor:v28];

      id v25 = &selRef_collectionView_didSelectItemAtIndexPath_;
      [v29 setConstant:0.0];
      id v30 = v29;
      [v30 setActive:1];
    }
    id v31 = [v15 superview];
    if (v31)
    {
      id v32 = v31;
      [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
      uint64_t v33 = v25;
      id v34 = [v15 centerYAnchor];
      id v35 = [v32 centerYAnchor];
      id v36 = [v34 constraintEqualToAnchor:v35];

      [v36 v33[148]:0.0];
      id v37 = v36;
      [v37 setActive:1];
    }
    id v38 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView);
    if (one-time initialization token for fontColor != -1) {
      swift_once();
    }
    uint64_t v39 = static MOSuggestionAddedView.fontColor;
    [v38 setTintColor:static MOSuggestionAddedView.fontColor];
    [v15 addArrangedSubview:v38];
    id v40 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_addedLabel);
    [v40 setTextColor:v39];
    if (one-time initialization token for font != -1) {
      swift_once();
    }
    [v40 setFont:static MOSuggestionAddedView.font];
    [v15 addArrangedSubview:v40];
    goto LABEL_20;
  }
  uint64_t v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_backgroundView);
  id v5 = [v2 whiteColor];
  id v6 = [v5 colorWithAlphaComponent:0.9];

  [v4 setBackgroundColor:v6];
  [v1 addSubview:v4];
  id v7 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView);
  [v1 addSubview:v7];
  if (one-time initialization token for fontColor != -1) {
    swift_once();
  }
  [v7 setTintColor:static MOSuggestionAddedView.fontColor];
  id v8 = [v7 superview];
  if (v8)
  {
    uint64_t v9 = v8;
    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v7 centerXAnchor];
    id v11 = [v9 centerXAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:0.0];
    if (v12)
    {
      id v13 = v12;
      [v13 setActive:1];
    }
  }
  id v14 = [v7 superview];
  if (v14)
  {
    id v15 = v14;
    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v7 centerYAnchor];
    id v17 = [v15 centerYAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:0.0];
    if (v18)
    {
      id v19 = v18;
      [v19 setActive:1];
    }
LABEL_20:
  }
  (*(void (**)(void))((swift_isaMask & *v1) + 0x98))(0);
}

uint64_t type metadata accessor for MOSuggestionAddedView()
{
  return self;
}

Swift::Void __swiftcall MOSuggestionAddedView.layoutSubviews()()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MOSuggestionAddedView();
  [super layoutSubviews];
  if (v0[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] == 1)
  {
    [v0 frame];
    CGFloat Width = CGRectGetWidth(v5);
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_backgroundView];
    CGFloat v3 = Width * 0.5 * 0.5;
    MOSuggestionInterstitialExpandableListViewCellConstants.init()();
    [v2 setFrame:];
    [v2 _setCornerRadius:v3];
  }
}

Swift::Void __swiftcall MOSuggestionAddedView.updateRepresentation(interactionState:)(MomentsUIService::MOSuggestionCollectionViewInteractionState interactionState)
{
  CGFloat v3 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_addedLabel);
  id v4 = [self mainBundle];
  if (interactionState)
  {
    v17._uint64_t countAndFlagsBits = 0xD000000000000034;
    v17._object = (void *)0x80000001001E9880;
    v9._uint64_t countAndFlagsBits = 0x6465766153;
    v9._object = (void *)0xE500000000000000;
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v4, v10, v17);

    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 setText:v11];

    id v8 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView);
    if (one-time initialization token for config == -1) {
      goto LABEL_5;
    }
    goto LABEL_8;
  }
  v16._uint64_t countAndFlagsBits = 0xD000000000000024;
  v16._object = (void *)0x80000001001E98C0;
  v5._uint64_t countAndFlagsBits = 0x6465646441;
  v5._object = (void *)0xE500000000000000;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v16);

  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setText:v7];

  id v8 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView);
  if (one-time initialization token for config != -1) {
LABEL_8:
  }
    swift_once();
LABEL_5:
  id v12 = (id)static MOSuggestionAddedView.config;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [self systemImageNamed:v13 withConfiguration:v12];

  [v8 setImage:v14];
}

id MOSuggestionAddedView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionAddedView();
  return [super dealloc];
}

void specialized MOSuggestionAddedView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_addedLabel;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_checkmarkImageView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_backgroundView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIView) init];
  v0[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnly] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService21MOSuggestionAddedView_symbolOnlyBackgroundRatio] = 0x3FE0000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *MOSuggestionInterstitialListAssetViewModel.__allocating_init(motionAssets:)(unint64_t a1)
{
  uint64_t v198 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  uint64_t v199 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  id v4 = (char **)((char *)v180 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  Swift::Int v200 = (char *)v180 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  *(void *)&long long v201 = (char *)v180 - v8;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  NSString v13 = (char *)v180 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)v180 - v14;
  if (!(a1 >> 62))
  {
    uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v16 > 2)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v17 = type metadata accessor for Logger();
      __swift_project_value_buffer(v17, (uint64_t)static MOAngelLogger.shared);
      id v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v18, v19))
      {
        id v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "[MOSuggestionInterstitialListAssetViewModel.motionAssets] Currently only supports 1 pair of motion activity", v20, 2u);
        swift_slowDealloc();
      }

      return 0;
    }
    unint64_t v209 = (unint64_t)_swiftEmptyArrayStorage;
    if (v16) {
      goto LABEL_9;
    }
LABEL_60:
    swift_bridgeObjectRelease();
    id v56 = 0;
    goto LABEL_61;
  }
  swift_bridgeObjectRetain();
  uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v66 > 2) {
    goto LABEL_3;
  }
  unint64_t v209 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v16) {
    goto LABEL_60;
  }
LABEL_9:
  if (v16 < 1)
  {
    __break(1u);
    goto LABEL_78;
  }
  uint64_t v192 = v1;
  uint64_t v193 = v4;
  uint64_t v194 = v13;
  id v195 = v15;
  uint64_t v196 = v10;
  uint64_t v197 = v9;
  uint64_t v202 = 0;
  NSString v203 = 0;
  for (uint64_t i = 0; i != v16; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v24 = *(id *)(a1 + 8 * i + 32);
    }
    id v23 = v24;
    id v25 = [v24 assetType];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v28 = v27;
    if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29) {
      char v31 = 1;
    }
    else {
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v31)
    {
      id v22 = v23;

      id v23 = v203;
      NSString v203 = v22;
      goto LABEL_12;
    }
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;
    if (v32 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v34 == v35)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0) {
        goto LABEL_12;
      }
    }
    id v38 = v23;
    id v23 = (void *)v202;
    uint64_t v202 = (uint64_t)v38;
LABEL_12:
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = v203;
  if (!v203)
  {
    id v56 = (void *)v202;
LABEL_61:
    swift_bridgeObjectRelease();
    uint64_t v39 = 0;
    goto LABEL_62;
  }
  id v40 = v203;
  id v4 = &selRef_collectionView_didSelectItemAtIndexPath_;
  id v41 = [v40 content];
  self;
  uint64_t v42 = swift_dynamicCastObjCClass();
  if (!v42
    || (uint64_t v43 = v42,
        id v44 = [v40 metadata],
        uint64_t v45 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(),
        v44,
        uint64_t v1 = specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v45),
        swift_bridgeObjectRelease(),
        !v1))
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

    id v56 = (void *)v202;
LABEL_62:
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v67 = type metadata accessor for Logger();
    __swift_project_value_buffer(v67, (uint64_t)static MOAngelLogger.shared);
    id v68 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v68, v69))
    {
      id v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v70 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "[MOSuggestionInterstitialListAssetViewModel.motionAssets] Missing date information", v70, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  if (!*(void *)(v1 + 16))
  {
    long long v210 = 0u;
    long long v211 = 0u;
    goto LABEL_45;
  }
  id v46 = MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
  uint64_t v47 = specialized __RawDictionaryStorage.find<A>(_:)(v46);
  if ((v48 & 1) == 0)
  {
    long long v210 = 0u;
    long long v211 = 0u;

    goto LABEL_45;
  }
  outlined init with copy of Any(*(void *)(v1 + 56) + 32 * v47, (uint64_t)&v210);

  if (!*((void *)&v211 + 1))
  {
LABEL_45:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    id v56 = (void *)v202;
    outlined destroy of Any?((uint64_t)&v210, &demangling cache variable for type metadata for Any?);
    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  type metadata accessor for MOSuggestionAssetMotionActivityType(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    id v56 = (void *)v202;
    swift_bridgeObjectRelease();
    goto LABEL_62;
  }
  id v49 = v207;
  uint64_t v50 = *(void *)(v1 + 16);
  id v191 = v40;
  id v190 = v41;
  if (!v50)
  {
    long long v210 = 0u;
    long long v211 = 0u;
    uint64_t v53 = v197;
    uint64_t v54 = v196;
    uint64_t v57 = v201;
LABEL_54:
    outlined destroy of Any?((uint64_t)&v210, &demangling cache variable for type metadata for Any?);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v57, 1, 1, v53);
    goto LABEL_55;
  }
  uint64_t v188 = v43;
  id v189 = v207;
  id v51 = MOSuggestionAssetMetadataKeyMotionActivityStartDate;
  uint64_t v52 = specialized __RawDictionaryStorage.find<A>(_:)(v51);
  uint64_t v53 = v197;
  uint64_t v54 = v196;
  if (v55)
  {
    outlined init with copy of Any(*(void *)(v1 + 56) + 32 * v52, (uint64_t)&v210);
  }
  else
  {
    long long v210 = 0u;
    long long v211 = 0u;
  }

  id v49 = v189;
  uint64_t v57 = v201;
  if (!*((void *)&v211 + 1)) {
    goto LABEL_54;
  }
  int v58 = swift_dynamicCast();
  id v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 56);
  uint64_t v187 = v54 + 56;
  v59((char *)v57, v58 ^ 1u, 1, v53);
  Class v186 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  if (v186(v57, 1, v53) == 1)
  {
LABEL_55:

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v65 = v57;
LABEL_56:
    outlined destroy of Any?(v65, (uint64_t *)&demangling cache variable for type metadata for Date?);
    id v56 = (void *)v202;
    uint64_t v39 = v203;
    goto LABEL_62;
  }
  uint64_t v60 = v53;
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
  v61(v195, v57, v60);
  if (!*(void *)(v1 + 16))
  {
    long long v210 = 0u;
    long long v211 = 0u;
LABEL_75:
    outlined destroy of Any?((uint64_t)&v210, &demangling cache variable for type metadata for Any?);
    objc_super v77 = v200;
    uint64_t v75 = v197;
    v59(v200, 1, 1, v197);
    goto LABEL_76;
  }
  id v62 = MOSuggestionAssetMetadataKeyMotionActivityEndDate;
  uint64_t v63 = specialized __RawDictionaryStorage.find<A>(_:)(v62);
  if (v64)
  {
    outlined init with copy of Any(*(void *)(v1 + 56) + 32 * v63, (uint64_t)&v210);
  }
  else
  {
    long long v210 = 0u;
    long long v211 = 0u;
  }

  if (!*((void *)&v211 + 1)) {
    goto LABEL_75;
  }
  id v73 = (void (*)(char *, char *, uint64_t))v61;
  uint64_t v74 = v59;
  NSString v13 = v200;
  uint64_t v75 = v197;
  int v76 = swift_dynamicCast();
  *(void *)&long long v201 = v74;
  v74(v13, v76 ^ 1u, 1, v75);
  objc_super v77 = v13;
  if (v186((uint64_t)v13, 1, v75) == 1)
  {
LABEL_76:

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v196 + 8))(v195, v75);
    swift_bridgeObjectRelease();
    uint64_t v65 = (uint64_t)v77;
    goto LABEL_56;
  }
  v73(v194, v13, v75);
  uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v80 = v79;
  if (v78 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v80 == v81)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_79;
  }
LABEL_78:
  char v82 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v82 & 1) == 0)
  {
    uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v88 = v87;
    if (v86 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v88 == v89)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v147 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v147 & 1) == 0)
      {
        uint64_t v160 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v162 = v161;
        if (v160 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v162 == v163)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v164 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v164 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_131;
          }
        }
        if (*(void *)(v1 + 16))
        {
          id v165 = MOSuggestionAssetMetadataKeyMotionActivityStepCountLocalized;
          uint64_t v166 = specialized __RawDictionaryStorage.find<A>(_:)(v165);
          if (v167)
          {
            outlined init with copy of Any(*(void *)(v1 + 56) + 32 * v166, (uint64_t)&v210);
          }
          else
          {
            long long v210 = 0u;
            long long v211 = 0u;
          }
        }
        else
        {
          long long v210 = 0u;
          long long v211 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((void *)&v211 + 1)) {
          goto LABEL_130;
        }
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_131;
        }
        id v71 = v207;
        uint64_t v90 = v208;
        unsigned int v182 = 22;
        int v91 = 19;
        goto LABEL_91;
      }
    }
    if (*(void *)(v1 + 16))
    {
      id v148 = MOSuggestionAssetMetadataKeyMotionActivityStepCountLocalized;
      uint64_t v149 = specialized __RawDictionaryStorage.find<A>(_:)(v148);
      if (v150)
      {
        outlined init with copy of Any(*(void *)(v1 + 56) + 32 * v149, (uint64_t)&v210);
      }
      else
      {
        long long v210 = 0u;
        long long v211 = 0u;
      }
    }
    else
    {
      long long v210 = 0u;
      long long v211 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v211 + 1)) {
      goto LABEL_130;
    }
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_131;
    }
    id v71 = v207;
    uint64_t v90 = v208;
    unsigned int v182 = 21;
    int v91 = 18;
LABEL_91:
    LODWORD(v200) = v91;
    id v92 = *(void (**)(char **, char *, uint64_t))(v196 + 16);
    uint64_t v93 = (uint64_t)v193;
    uint64_t v94 = v197;
    v92(v193, v195, v197);
    uint64_t v95 = v93 + *(int *)(v198 + 20);
    v92((char **)v95, v194, v94);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v201)(v95, 0, 1, v94);
    unint64_t v96 = self;
    swift_unknownObjectRetain();
    id v97 = [v96 redColor];
    NSString v98 = String._bridgeToObjectiveC()();
    id v99 = [v96 colorNamed:v98];

    long long v210 = 0u;
    long long v211 = 0u;
    char v212 = 1;
    uint64_t v181 = type metadata accessor for MOSuggestionSheetImage();
    swift_allocObject();
    uint64_t v198 = MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(v188, (uint64_t)v97, 0, v99, 0, (uint64_t)&v210, 0, 1);
    swift_bridgeObjectRetain();
    NSString v203 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v101 = v203[2];
    unint64_t v100 = v203[3];
    if (v101 >= v100 >> 1) {
      NSString v203 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v100 > 1), v101 + 1, 1, v203);
    }
    uint64_t v102 = v203;
    v203[2] = v101 + 1;
    id v103 = &v102[2 * v101];
    uint64_t v104 = v71;
    v103[4] = v71;
    v103[5] = v90;
    id v105 = [v191 identifier];
    uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v108 = v107;

    objc_super v207 = (void *)v106;
    uint64_t v208 = v108;
    uint64_t v205 = 35;
    unint64_t v206 = 0xE100000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v109 = (void *)StringProtocol.components<A>(separatedBy:)();
    if (v109[2])
    {
      uint64_t v110 = v109[4];
      id v71 = (void *)v109[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionSheetAssetDateRange>);
      uint64_t v112 = *(unsigned __int8 *)(v199 + 80);
      uint64_t v113 = (v112 + 32) & ~v112;
      uint64_t v114 = v113 + *(void *)(v199 + 72);
      uint64_t v188 = v111;
      uint64_t v187 = v114;
      Class v186 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))(v112 | 7);
      uint64_t v115 = swift_allocObject();
      long long v201 = xmmword_1001DA0F0;
      *(_OWORD *)(v115 + 16) = xmmword_1001DA0F0;
      uint64_t v199 = v113;
      outlined init with copy of MOSuggestionSheetAssetDateRange((uint64_t)v193, v115 + v113);
      v180[2] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
      NSString v13 = (char *)swift_allocObject();
      *((_OWORD *)v13 + 1) = v201;
      *((void *)v13 + 4) = v104;
      *((void *)v13 + 5) = v90;
      uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v116 = swift_allocObject();
      long long v184 = xmmword_1001DA250;
      *(_OWORD *)(v116 + 16) = xmmword_1001DA250;
      *(void *)(v116 + 32) = v198;
      objc_super v207 = (void *)v116;
      specialized Array._endMutation()();
      uint64_t v117 = (uint64_t)v207;
      v180[1] = type metadata accessor for MOSuggestionInterstitialListAssetViewModel();
      swift_allocObject();
      swift_retain();
      uint64_t v108 = MOSuggestionInterstitialListAssetViewModel.init(id:subViewModels:topLevelGroupHeading:dates:titles:icons:assetVisualSubType:selectable:isLoadingPlaceHolder:isFallback:)(v110, (uint64_t)v71, 0, 0, 0, v115, (uint64_t)v13, v117, (char)v200, 1, 0, 0);
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v209 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v209 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_95;
      }
    }
    else
    {
      __break(1u);
    }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_95:
    uint64_t v183 = v108;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v118 = [v191 identifier];
    uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v121 = v120;

    objc_super v207 = (void *)v119;
    uint64_t v208 = v121;
    uint64_t v205 = 35;
    unint64_t v206 = 0xE100000000000000;
    id v122 = (void *)StringProtocol.components<A>(separatedBy:)();
    if (v122[2])
    {
      uint64_t v123 = v122[4];
      uint64_t v124 = v122[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      HIBYTE(v179) = 0;
      *(_WORD *)((char *)&v179 + 1) = 1;
      LOBYTE(v179) = (_BYTE)v200;
      id v71 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void, void, void, void, void, void, int))(v192 + 344))(v123, v124, 0, 0, 0, 0, 0, 0, v179);
      id v125 = (void *)v202;
      if (v202)
      {
        swift_retain();
        NSString v13 = v125;
        id v126 = [v13 v4[173]];
        self;
        uint64_t v127 = swift_dynamicCastObjCClass();
        if (v127)
        {
          uint64_t v128 = v127;
          swift_allocObject();
          swift_unknownObjectRetain();
          Swift::Int v200 = (char *)MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(v128, 0, 0, 0, 0, (uint64_t)&v210, 0, 1);
          uint64_t v202 = MOSuggestionAssetVisualSubType.singularLocalizedString.getter(v182);
          uint64_t v192 = v129;
          id v130 = [v13 identifier];
          uint64_t v131 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v133 = v132;

          objc_super v207 = (void *)v131;
          uint64_t v208 = v133;
          uint64_t v205 = 35;
          unint64_t v206 = 0xE100000000000000;
          os_log_type_t v134 = (void *)StringProtocol.components<A>(separatedBy:)();
          if (v134[2])
          {
            uint64_t v135 = v134[5];
            uint64_t v181 = v134[4];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v136 = swift_allocObject();
            *(_OWORD *)(v136 + 16) = v201;
            outlined init with copy of MOSuggestionSheetAssetDateRange((uint64_t)v193, v136 + v199);
            uint64_t v137 = swift_allocObject();
            *(_OWORD *)(v137 + 16) = v201;
            uint64_t v138 = v192;
            *(void *)(v137 + 32) = v202;
            *(void *)(v137 + 40) = v138;
            uint64_t v139 = swift_allocObject();
            *(_OWORD *)(v139 + 16) = v184;
            *(void *)(v139 + 32) = v200;
            objc_super v207 = (void *)v139;
            specialized Array._endMutation()();
            uint64_t v140 = (uint64_t)v207;
            swift_allocObject();
            swift_bridgeObjectRetain();
            swift_retain();
            MOSuggestionInterstitialListAssetViewModel.init(id:subViewModels:topLevelGroupHeading:dates:titles:icons:assetVisualSubType:selectable:isLoadingPlaceHolder:isFallback:)(v181, v135, 0, 0, 0, v136, v137, v140, v182, 1, 0, 0);
            swift_retain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v209 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v209 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            {
LABEL_100:
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
              unint64_t v142 = v203[2];
              unint64_t v141 = v203[3];
              if (v142 >= v141 >> 1) {
                NSString v203 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v141 > 1), v142 + 1, 1, v203);
              }
              uint64_t v143 = v203;
              v203[2] = v142 + 1;
              id v144 = &v143[2 * v142];
              uint64_t v145 = v192;
              v144[4] = v202;
              v144[5] = v145;
              swift_release();
              swift_release();
              swift_unknownObjectRelease();

              unint64_t v146 = v209;
              swift_beginAccess();
              v71[2] = v146;
              goto LABEL_109;
            }
LABEL_140:
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            goto LABEL_100;
          }
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        swift_retain();
        NSString v13 = 0;
      }
LABEL_109:
      swift_bridgeObjectRelease();
      uint64_t v151 = MOSuggestionInterstitialListAssetViewModel._groupAssetTypeAndCountDescription(with:)(0);
      uint64_t v153 = v152;
      swift_beginAccess();
      v71[3] = v151;
      v71[4] = v153;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v71[6] = v203;
      swift_bridgeObjectRelease();
      uint64_t v154 = swift_allocObject();
      *(_OWORD *)(v154 + 16) = v184;
      *(void *)(v154 + 32) = v198;
      uint64_t v204 = v154;
      specialized Array._endMutation()();
      uint64_t v155 = v204;
      swift_beginAccess();
      v71[7] = v155;
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v156 = swift_allocObject();
      *(_OWORD *)(v156 + 16) = v201;
      outlined init with take of MOSuggestionSheetAssetDateRange((uint64_t)v193, v156 + v199);

      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      id v157 = v191;

      os_log_t v158 = *(void (**)(char *, uint64_t))(v196 + 8);
      uint64_t v159 = v197;
      v158(v194, v197);
      v158(v195, v159);
      swift_beginAccess();
      v71[5] = v156;
      swift_release();
      swift_bridgeObjectRelease();
      return v71;
    }
    __break(1u);
    goto LABEL_139;
  }
LABEL_79:
  if (*(void *)(v1 + 16))
  {
    id v83 = MOSuggestionAssetMetadataKeyMotionActivityStepCountLocalized;
    uint64_t v84 = specialized __RawDictionaryStorage.find<A>(_:)(v83);
    if (v85)
    {
      outlined init with copy of Any(*(void *)(v1 + 56) + 32 * v84, (uint64_t)&v210);
    }
    else
    {
      long long v210 = 0u;
      long long v211 = 0u;
    }
  }
  else
  {
    long long v210 = 0u;
    long long v211 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v211 + 1))
  {
LABEL_130:
    outlined destroy of Any?((uint64_t)&v210, &demangling cache variable for type metadata for Any?);
    goto LABEL_131;
  }
  if (swift_dynamicCast())
  {
    id v71 = v207;
    uint64_t v90 = v208;
    unsigned int v182 = 20;
    int v91 = 17;
    goto LABEL_91;
  }
LABEL_131:
  uint64_t v168 = v197;
  uint64_t v169 = v196;
  id v170 = v195;
  uint64_t v171 = v194;
  id v172 = v191;
  unint64_t v173 = (void *)v202;
  swift_bridgeObjectRelease();
  if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v174 = type metadata accessor for Logger();
  __swift_project_value_buffer(v174, (uint64_t)static MOAngelLogger.shared);
  id v175 = Logger.logObject.getter();
  os_log_type_t v176 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v175, v176))
  {
    unint64_t v177 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v177 = 0;
    _os_log_impl((void *)&_mh_execute_header, v175, v176, "[MOSuggestionInterstitialListAssetViewModel.motionAssets] Missing steps/distance information", v177, 2u);
    swift_slowDealloc();
  }

  swift_unknownObjectRelease();
  unint64_t v178 = *(void (**)(char *, uint64_t))(v169 + 8);
  v178(v171, v168);
  v178(v170, v168);
  return 0;
}

uint64_t specialized Collection.first.getter(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v3 = __CocoaSet.startIndex.getter();
    uint64_t v5 = v4;
    __CocoaSet.endIndex.getter();
    char v6 = static __CocoaSet.Index.== infix(_:_:)();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      outlined consume of Set<UIScene>.Index._Variant(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    specialized Set.subscript.getter(v3, v5, v2 != 0, a1);
    uint64_t v7 = v11;
    outlined consume of Set<UIScene>.Index._Variant(v3, v5, v2 != 0);
    return v7;
  }
  uint64_t result = specialized _NativeSet.startIndex.getter(a1);
  if ((v10 & 1) == 0)
  {
    uint64_t v5 = v9;
    if (*(_DWORD *)(a1 + 36) == v9)
    {
      uint64_t v3 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

{
  uint64_t result;
  int v3;
  char v4;

  uint64_t result = specialized Set.startIndex.getter(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  else {
    return specialized Set.subscript.getter(result, v3, 0, a1);
  }
}

{
  if (*(void *)(a1 + 16)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  uint64_t result = specialized Set.startIndex.getter(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = specialized Set.subscript.getter(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t specialized Collection.first.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return String.subscript.getter();
  }
  else {
    return 0;
  }
}

void *MOSuggestionInterstitialListAssetViewModel.__allocating_init(mediaAssets:)(unint64_t a1)
{
  uint64_t v254 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  uint64_t v253 = *(void *)(v254 - 8);
  uint64_t v3 = __chkstk_darwin(v254);
  uint64_t v259 = (uint64_t)&v239 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v6 = (char *)&v239 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v7 - 8);
  unint64_t v265 = (char *)&v239 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v270 - 8);
  __chkstk_darwin(v270);
  uint64_t v267 = (char *)&v239 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_143:
    swift_bridgeObjectRetain();
    int64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12 < 1) {
      goto LABEL_144;
    }
  }
  else
  {
    int64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12 < 1) {
      goto LABEL_144;
    }
  }
  uint64_t v271 = v11;
  uint64_t v269 = (char *)v9;
  v260 = v6;
  v243 = v1;
  uint64_t rawValue = (uint64_t)_swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v12, 0);
  uint64_t v11 = 0;
  v13._uint64_t rawValue = (void *)rawValue;
  unint64_t v274 = a1 & 0xC000000000000001;
  char v6 = (char *)0xE100000000000000;
  unint64_t v273 = a1;
  do
  {
    if (v274) {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v14 = *(id *)(a1 + 8 * v11 + 32);
    }
    id v15 = v14;
    id v16 = [v14 identifier];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    *(void *)&v283[0] = v9;
    *((void *)&v283[0] + 1) = v18;
    *(void *)&unsigned long long v275 = 35;
    *((void *)&v275 + 1) = 0xE100000000000000;
    uint64_t v1 = v283;
    unint64_t v272 = lazy protocol witness table accessor for type String and conformance String();
    os_log_type_t v19 = (void *)StringProtocol.components<A>(separatedBy:)();
    if (!v19[2])
    {
      __break(1u);
      goto LABEL_143;
    }
    uint64_t v20 = v19[4];
    uint64_t v21 = v19[5];
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t rawValue = (uint64_t)v13._rawValue;
    unint64_t v23 = *((void *)v13._rawValue + 2);
    unint64_t v22 = *((void *)v13._rawValue + 3);
    if (v23 >= v22 >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
      v13._uint64_t rawValue = (void *)rawValue;
    }
    ++v11;
    *((void *)v13._rawValue + 2) = v23 + 1;
    id v24 = (char *)v13._rawValue + 16 * v23;
    *((void *)v24 + 4) = v20;
    *((void *)v24 + 5) = v21;
    a1 = v273;
  }
  while (v12 != v11);
  Swift::String v25 = String.init(combinedIdentifiersFrom:)(v13);
  object = v25._object;
  unint64_t v281 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v282 = (unint64_t)_swiftEmptyArrayStorage;
  v280 = &_swiftEmptySetSingleton;
  if (v271)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v28 = (uint64_t)v265;
  uint64_t countAndFlagsBits = v25._countAndFlagsBits;
  if (!v27)
  {
    swift_bridgeObjectRelease();
    LOBYTE(v11) = 26;
    unint64_t v224 = (unint64_t)_swiftEmptyArrayStorage;
    v263 = _swiftEmptyArrayStorage;
    uint64_t v264 = _swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_124;
    }
LABEL_132:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v27) {
      goto LABEL_133;
    }
LABEL_125:
    if ((v224 & 0xC000000000000001) == 0)
    {
      if (!*(void *)((v224 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_150;
      }
      uint64_t v27 = *(void *)(v224 + 32);
      swift_retain();
LABEL_128:
      swift_bridgeObjectRelease();
      specialized Collection.first.getter((uint64_t)v280);
      char v226 = v225;
      swift_bridgeObjectRelease();
      if ((v226 & 1) != 0 || v11 == 26)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_134;
      }
      HIBYTE(v238) = 0;
      *(_WORD *)((char *)&v238 + 1) = 1;
      LOBYTE(v238) = v11;
      object = (void *)(*((uint64_t (**)(uint64_t, void *, void, void, void, void, void, void, int))v243
                          + 43))(countAndFlagsBits, object, 0, 0, 0, 0, 0, 0, v238);
      unint64_t v224 = v282;
      if (!(v282 >> 62))
      {
        uint64_t v227 = *(void *)((v282 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        if (v227 >= 2) {
          goto LABEL_137;
        }
        goto LABEL_141;
      }
LABEL_150:
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v236 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v236 >= 2)
      {
LABEL_137:
        if ((v224 & 0x8000000000000000) != 0 || (v224 & 0x4000000000000000) != 0)
        {
          unint64_t v237 = swift_bridgeObjectRetain();
          uint64_t v228 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v237);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v228 = v224 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
        }
        *(void *)&unsigned long long v275 = v228;
        specialized MutableCollection<>.sort(by:)((uint64_t *)&v275);
        swift_bridgeObjectRelease();
        uint64_t v229 = v275;
        swift_beginAccess();
        object[2] = v229;
      }
LABEL_141:
      swift_bridgeObjectRelease();
      uint64_t v230 = MOSuggestionInterstitialListAssetViewModel._groupAssetTypeAndCountDescription(with:)(0);
      uint64_t v232 = v231;
      swift_beginAccess();
      object[3] = v230;
      object[4] = v232;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      object[6] = v264;
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v233 = swift_allocObject();
      *(_OWORD *)(v233 + 16) = xmmword_1001DA250;
      *(void *)(v233 + 32) = v27;
      uint64_t v277 = v233;
      specialized Array._endMutation()();
      uint64_t v234 = v277;
      swift_beginAccess();
      object[7] = v234;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      object[5] = v263;
      swift_release();
      swift_bridgeObjectRelease();
      return object;
    }
LABEL_148:
    uint64_t v27 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_128;
  }
  if (v27 < 1)
  {
LABEL_147:
    __break(1u);
    goto LABEL_148;
  }
  v244 = v25._object;
  uint64_t v11 = 0;
  v268 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v269 + 56);
  uint64_t v266 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v269 + 48);
  uint64_t v257 = (void (**)(char *, uint64_t, uint64_t))(v269 + 32);
  uint64_t v246 = (void (**)(uint64_t, char *, uint64_t))(v269 + 16);
  v256 = (void (**)(char *, uint64_t))(v269 + 8);
  int v255 = 26;
  uint64_t v269 = (char *)&type metadata for Any + 8;
  v241 = "";
  long long v251 = xmmword_1001DA0F0;
  long long v245 = xmmword_1001DA250;
  v240 = "erest";
  uint64_t v239 = "person.crop.circle";
  v263 = _swiftEmptyArrayStorage;
  uint64_t v264 = _swiftEmptyArrayStorage;
  uint64_t v271 = v27;
  while (2)
  {
    if (v274) {
      id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v29 = *(id *)(a1 + 8 * v11 + 32);
    }
    id v30 = v29;
    id v31 = [v29 assetType:v239, v240, v241];
    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;
    if (v32 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v34 == v35) {
      goto LABEL_34;
    }
    char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_35;
    }
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v39;
    if (v38 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v40 == v41)
    {
LABEL_34:
      swift_bridgeObjectRelease_n();
      goto LABEL_35;
    }
    char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0)
    {
      uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v46 = v45;
      if (v44 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v46 != v47)
      {
        char v87 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v48 = v31;
        if ((v87 & 1) == 0) {
          goto LABEL_36;
        }
        goto LABEL_35;
      }
      goto LABEL_34;
    }
LABEL_35:
    char v48 = (void *)MOSuggestionAssetsTypePhoto;
LABEL_36:
    id v49 = v48;

    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v51;
    if (v50 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v52 == v53)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v55 & 1) == 0)
      {
        [v30 contentClassType];
        uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
        if (ObjCClassMetadata != type metadata accessor for MOSuggestionGenericFallBackInfo())
        {
          if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v57 = type metadata accessor for Logger();
          __swift_project_value_buffer(v57, (uint64_t)static MOAngelLogger.shared);
          uint64_t v27 = Logger.logObject.getter();
          os_log_type_t v58 = static os_log_type_t.error.getter();
          if (os_log_type_enabled((os_log_t)v27, v58))
          {
            id v59 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v59 = 0;
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v27, v58, "[MOSuggestionInterstitialListAssetViewModel.mediaAssets] Mismatched init for asset type", v59, 2u);
            swift_slowDealloc();
          }

          goto LABEL_54;
        }
      }
    }
    uint64_t v27 = (uint64_t)[v30 content];
    self;
    uint64_t v60 = swift_dynamicCastObjCClass();
    if (!v60)
    {

      swift_unknownObjectRelease();
      goto LABEL_18;
    }
    object = (void *)v60;
    id v61 = [v30 metadata];
    uint64_t v62 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v63 = specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v62);
    swift_bridgeObjectRelease();
    if (!v63)
    {
      swift_unknownObjectRelease();
LABEL_54:

      goto LABEL_18;
    }
    if (*(void *)(v63 + 16))
    {
      id v64 = MOSuggestionAssetMetadataKeyMediaStartDate;
      uint64_t v65 = specialized __RawDictionaryStorage.find<A>(_:)(v64);
      if (v66)
      {
        outlined init with copy of Any(*(void *)(v63 + 56) + 32 * v65, (uint64_t)&v275);
      }
      else
      {
        long long v276 = 0u;
        unsigned long long v275 = 0u;
      }
    }
    else
    {
      long long v276 = 0u;
      unsigned long long v275 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v276 + 1))
    {
      outlined destroy of Any?((uint64_t)&v275, &demangling cache variable for type metadata for Any?);
      (*v268)(v28, 1, 1, v270);
LABEL_63:
      swift_unknownObjectRelease();

      outlined destroy of Any?(v28, (uint64_t *)&demangling cache variable for type metadata for Date?);
      goto LABEL_18;
    }
    uint64_t v67 = v270;
    int v68 = swift_dynamicCast();
    os_log_type_t v69 = *v268;
    (*v268)(v28, v68 ^ 1u, 1, v67);
    if ((*v266)(v28, 1, v67) == 1) {
      goto LABEL_63;
    }
    v258 = v69;
    (*v257)(v267, v28, v270);
    id v70 = [object mediaType];
    uint64_t v71 = 0;
    int v72 = 26;
    char v73 = 1;
    uint64_t v74 = 0;
    switch((unint64_t)v70)
    {
      case 1uLL:
        id v108 = [object artistName];
        uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v111 = v110;

        *(void *)&unsigned long long v275 = v109;
        *((void *)&v275 + 1) = v111;
        swift_bridgeObjectRetain();
        v112._uint64_t countAndFlagsBits = 0x20A280E220;
        v112._object = (void *)0xA500000000000000;
        String.append(_:)(v112);
        swift_bridgeObjectRelease();
        unint64_t v114 = *((void *)&v275 + 1);
        unint64_t v113 = v275;
        id v115 = [object title];
        uint64_t v116 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v118 = v117;

        unsigned long long v275 = __PAIR128__(v114, v113);
        uint64_t v28 = (uint64_t)v265;
        swift_bridgeObjectRetain();
        v119._uint64_t countAndFlagsBits = v116;
        v119._object = v118;
        String.append(_:)(v119);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v73 = 0;
        int v72 = 0;
        uint64_t v74 = *((void *)&v275 + 1);
        uint64_t v71 = v275;
        goto LABEL_90;
      case 2uLL:
      case 5uLL:
        id v75 = [object artistName];
        uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v78 = v77;

        *(void *)&unsigned long long v275 = v76;
        *((void *)&v275 + 1) = v78;
        swift_bridgeObjectRetain();
        v79._uint64_t countAndFlagsBits = 0x20A280E220;
        v79._object = (void *)0xA500000000000000;
        String.append(_:)(v79);
        swift_bridgeObjectRelease();
        unint64_t v81 = *((void *)&v275 + 1);
        unint64_t v80 = v275;
        id v82 = [object title];
        uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        char v85 = v84;

        unsigned long long v275 = __PAIR128__(v81, v80);
        uint64_t v28 = (uint64_t)v265;
        swift_bridgeObjectRetain();
        v86._uint64_t countAndFlagsBits = v83;
        v86._object = v85;
        String.append(_:)(v86);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v73 = 0;
        uint64_t v74 = *((void *)&v275 + 1);
        uint64_t v71 = v275;
        int v72 = 2;
        goto LABEL_90;
      case 4uLL:
        id v120 = [object artistName];
        uint64_t v121 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v123 = v122;

        *(void *)&unsigned long long v275 = v121;
        *((void *)&v275 + 1) = v123;
        swift_bridgeObjectRetain();
        v124._uint64_t countAndFlagsBits = 0x20A280E220;
        v124._object = (void *)0xA500000000000000;
        String.append(_:)(v124);
        swift_bridgeObjectRelease();
        unint64_t v126 = *((void *)&v275 + 1);
        unint64_t v125 = v275;
        id v127 = [object albumTitle];
        uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v130 = v129;

        unsigned long long v275 = __PAIR128__(v126, v125);
        uint64_t v28 = (uint64_t)v265;
        swift_bridgeObjectRetain();
        v131._uint64_t countAndFlagsBits = v128;
        v131._object = v130;
        String.append(_:)(v131);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v73 = 0;
        uint64_t v74 = *((void *)&v275 + 1);
        uint64_t v71 = v275;
        int v72 = 1;
        goto LABEL_90;
      case 6uLL:
        id v132 = [object artistName];
        uint64_t v133 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v135 = v134;

        if (v133 || v135 != 0xE000000000000000)
        {
          char v139 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v139 & 1) == 0)
          {
            id v151 = [object artistName];
            uint64_t v152 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v154 = v153;

            *(void *)&unsigned long long v275 = v152;
            *((void *)&v275 + 1) = v154;
            swift_bridgeObjectRetain();
            v155._uint64_t countAndFlagsBits = 0x20A280E220;
            v155._object = (void *)0xA500000000000000;
            String.append(_:)(v155);
            swift_bridgeObjectRelease();
            uint64_t v157 = *((void *)&v275 + 1);
            uint64_t v156 = v275;
            id v158 = [object title];
            goto LABEL_88;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        id v140 = [object albumTitle];
        uint64_t v141 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v143 = v142;

        if (!v141 && v143 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease();
LABEL_82:
          id v145 = [object title];
          uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v74 = v146;

          char v73 = 0;
          goto LABEL_89;
        }
        char v144 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v144) {
          goto LABEL_82;
        }
        id v159 = [object albumTitle];
        uint64_t v160 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v162 = v161;

        *(void *)&unsigned long long v275 = v160;
        *((void *)&v275 + 1) = v162;
        swift_bridgeObjectRetain();
        v163._uint64_t countAndFlagsBits = 0x20A280E220;
        v163._object = (void *)0xA500000000000000;
        String.append(_:)(v163);
        swift_bridgeObjectRelease();
        uint64_t v157 = *((void *)&v275 + 1);
        uint64_t v156 = v275;
        id v158 = [object title];
LABEL_88:
        id v164 = v158;
        uint64_t v165 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        char v167 = v166;

        *(void *)&unsigned long long v275 = v156;
        uint64_t v28 = (uint64_t)v265;
        *((void *)&v275 + 1) = v157;
        swift_bridgeObjectRetain();
        v168._uint64_t countAndFlagsBits = v165;
        v168._object = v167;
        String.append(_:)(v168);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v73 = 0;
        uint64_t v74 = *((void *)&v275 + 1);
        uint64_t v71 = v275;
LABEL_89:
        int v72 = 4;
        goto LABEL_90;
      case 7uLL:
        id v88 = [object artistName];
        uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v91 = v90;

        id v92 = [object albumTitle];
        uint64_t v93 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v95 = v94;

        if (v89 == v93 && v91 == v95)
        {
          swift_bridgeObjectRelease_n();
LABEL_76:
          id v137 = [object albumTitle];
          uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v74 = v138;

          char v73 = 0;
          int v72 = 5;
          goto LABEL_90;
        }
        char v136 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v136) {
          goto LABEL_76;
        }
        id v147 = [object artistName];
        uint64_t v148 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v150 = v149;

        if (!v148 && v150 == 0xE000000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_76;
        }
        char v211 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v211) {
          goto LABEL_76;
        }
        id v212 = [object artistName];
        uint64_t v213 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v215 = v214;

        *(void *)&unsigned long long v275 = v213;
        *((void *)&v275 + 1) = v215;
        swift_bridgeObjectRetain();
        v216._uint64_t countAndFlagsBits = 0x20A280E220;
        v216._object = (void *)0xA500000000000000;
        String.append(_:)(v216);
        swift_bridgeObjectRelease();
        unint64_t v218 = *((void *)&v275 + 1);
        unint64_t v217 = v275;
        id v219 = [object albumTitle];
        uint64_t v220 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        sockaddr v222 = v221;

        unsigned long long v275 = __PAIR128__(v218, v217);
        uint64_t v28 = (uint64_t)v265;
        swift_bridgeObjectRetain();
        v223._uint64_t countAndFlagsBits = v220;
        v223._object = v222;
        String.append(_:)(v223);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v73 = 0;
        uint64_t v74 = *((void *)&v275 + 1);
        uint64_t v71 = v275;
        int v72 = 5;
LABEL_90:
        int v262 = v72;
        uint64_t v261 = v71;
        uint64_t v169 = [object albumArt];
        if (v169)
        {
          if (!v74) {
            goto LABEL_99;
          }
        }
        else
        {
          uint64_t v170 = v74;
          specialized FallbackAssetSymbol.init(assetType:mediaType:)([v30 assetType], (uint64_t)[object mediaType], 0);
          NSString v171 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          uint64_t v169 = [self _systemImageNamed:v171];

          uint64_t v74 = v170;
          if (!v170) {
            goto LABEL_99;
          }
        }
        if (v169) {
          char v172 = v73;
        }
        else {
          char v172 = 1;
        }
        if (v172)
        {
          swift_bridgeObjectRelease();
LABEL_99:
          if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v173 = type metadata accessor for Logger();
          __swift_project_value_buffer(v173, (uint64_t)static MOAngelLogger.shared);
          uint64_t v174 = Logger.logObject.getter();
          os_log_type_t v175 = static os_log_type_t.error.getter();
          BOOL v176 = os_log_type_enabled(v174, v175);
          a1 = v273;
          if (v176)
          {
            unint64_t v177 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)unint64_t v177 = 0;
            _os_log_impl((void *)&_mh_execute_header, v174, v175, "[MOSuggestionInterstitialListAssetViewModel.mediaAssets] Failed to construct valid media asset view model", v177, 2u);
            swift_slowDealloc();
            unint64_t v178 = v169;
          }
          else
          {
            unint64_t v178 = v174;
            uint64_t v174 = v169;
          }

          swift_unknownObjectRelease();
          (*v256)(v267, v270);
          goto LABEL_18;
        }
        uint64_t v252 = v74;
        uint64_t v179 = (uint64_t)v260;
        uint64_t v180 = v270;
        (*v246)((uint64_t)v260, v267, v270);
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v258)(v179 + *(int *)(v254 + 20), 1, 1, v180);
        uint64_t v181 = self;
        unsigned int v182 = v169;
        id v183 = [v181 whiteColor];
        id v184 = [v181 grayColor];
        memset(v283, 0, sizeof(v283));
        char v284 = 1;
        type metadata accessor for MOSuggestionSheetImage();
        swift_allocObject();
        v258 = v182;
        uint64_t v185 = MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)((uint64_t)v182, (uint64_t)v183, v184, 0, 0, (uint64_t)v283, 0, 1);
        int v186 = v255;
        if (v255 == 26) {
          int v186 = v262;
        }
        id v187 = [v30 identifier];
        uint64_t v188 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v190 = v189;

        *(void *)&unsigned long long v275 = v188;
        *((void *)&v275 + 1) = v190;
        uint64_t rawValue = 35;
        unint64_t v279 = 0xE100000000000000;
        id v191 = (void *)StringProtocol.components<A>(separatedBy:)();
        if (!v191[2])
        {
          __break(1u);
          goto LABEL_147;
        }
        int v255 = v186;
        uint64_t v193 = v191[4];
        uint64_t v192 = v191[5];
        uint64_t v248 = v193;
        uint64_t v247 = v192;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionSheetAssetDateRange>);
        unint64_t v194 = (*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80);
        uint64_t v250 = *(void *)(v253 + 72);
        uint64_t v195 = swift_allocObject();
        *(_OWORD *)(v195 + 16) = v251;
        unint64_t v249 = v194;
        outlined init with copy of MOSuggestionSheetAssetDateRange(v179, v195 + v194);
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
        uint64_t v196 = swift_allocObject();
        *(_OWORD *)(v196 + 16) = v251;
        uint64_t v197 = v252;
        *(void *)(v196 + 32) = v261;
        *(void *)(v196 + 40) = v197;
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
        uint64_t v198 = swift_allocObject();
        *(_OWORD *)(v198 + 16) = v245;
        *(void *)(v198 + 32) = v185;
        *(void *)&unsigned long long v275 = v198;
        specialized Array._endMutation()();
        uint64_t v199 = v275;
        type metadata accessor for MOSuggestionInterstitialListAssetViewModel();
        swift_allocObject();
        swift_bridgeObjectRetain();
        swift_retain();
        MOSuggestionInterstitialListAssetViewModel.init(id:subViewModels:topLevelGroupHeading:dates:titles:icons:assetVisualSubType:selectable:isLoadingPlaceHolder:isFallback:)(v248, v247, 0, 0, 0, v195, v196, v199, v262, 1, 0, 0);
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v282 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v282 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        a1 = v273;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v264 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v264[2] + 1, 1, v264);
        }
        uint64_t v201 = v261;
        unint64_t v203 = v264[2];
        unint64_t v202 = v264[3];
        if (v203 >= v202 >> 1) {
          uint64_t v264 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v202 > 1), v203 + 1, 1, v264);
        }
        uint64_t v204 = v264;
        v264[2] = v203 + 1;
        uint64_t v205 = &v204[2 * v203];
        uint64_t v206 = v252;
        v205[4] = v201;
        v205[5] = v206;
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v281 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v281 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        outlined init with copy of MOSuggestionSheetAssetDateRange((uint64_t)v260, v259);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v263 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v263[2] + 1, 1, (unint64_t)v263);
        }
        unint64_t v208 = v263[2];
        unint64_t v207 = v263[3];
        if (v208 >= v207 >> 1) {
          v263 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v207 > 1, v208 + 1, 1, (unint64_t)v263);
        }
        unint64_t v209 = v263;
        v263[2] = v208 + 1;
        outlined init with take of MOSuggestionSheetAssetDateRange(v259, (uint64_t)v209 + v249 + v208 * v250);
        specialized Set._Variant.insert(_:)((Swift::UInt *)&v275, (Swift::UInt)[object mediaType]);
        long long v210 = v258;

        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        outlined destroy of MOSuggestionSheetAssetDateRange((uint64_t)v260);
        (*v256)(v267, v270);
        uint64_t v28 = (uint64_t)v265;
LABEL_18:
        if (v271 != ++v11) {
          continue;
        }
        swift_bridgeObjectRelease();
        unint64_t v224 = v281;
        object = v244;
        LOBYTE(v11) = v255;
        if (v281 >> 62) {
          goto LABEL_132;
        }
LABEL_124:
        if (*(void *)((v224 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_125;
        }
LABEL_133:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_134:
        swift_bridgeObjectRelease();
LABEL_144:
        swift_bridgeObjectRelease();
        return 0;
      case 8uLL:
        id v96 = [object artistName];
        uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v99 = v98;

        *(void *)&unsigned long long v275 = v97;
        *((void *)&v275 + 1) = v99;
        swift_bridgeObjectRetain();
        v100._uint64_t countAndFlagsBits = 0x20A280E220;
        v100._object = (void *)0xA500000000000000;
        String.append(_:)(v100);
        swift_bridgeObjectRelease();
        unint64_t v102 = *((void *)&v275 + 1);
        unint64_t v101 = v275;
        id v103 = [object title];
        uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v106 = v105;

        unsigned long long v275 = __PAIR128__(v102, v101);
        uint64_t v28 = (uint64_t)v265;
        swift_bridgeObjectRetain();
        v107._uint64_t countAndFlagsBits = v104;
        v107._object = v106;
        String.append(_:)(v107);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v73 = 0;
        uint64_t v74 = *((void *)&v275 + 1);
        uint64_t v71 = v275;
        int v72 = 6;
        goto LABEL_90;
      default:
        goto LABEL_90;
    }
  }
}

uint64_t specialized Set.startIndex.getter(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void specialized Set.subscript.getter(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      type metadata accessor for UIScene();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  type metadata accessor for UIScene();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = static NSObject.== infix(_:_:)();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  id v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t specialized Set.subscript.getter(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 16 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t specialized _NativeSet.startIndex.getter(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t outlined consume of Set<UIScene>.Index._Variant(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t type metadata accessor for UIScene()
{
  unint64_t result = lazy cache variable for type metadata for UIScene;
  if (!lazy cache variable for type metadata for UIScene)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIScene);
  }
  return result;
}

char *MOSuggestionWorkoutIconGlyphView.__allocating_init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(void *a1, void *a2, void *a3, void *a4)
{
  id v9 = objc_allocWithZone(v4);
  return MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(a1, a2, a3, a4);
}

id MOSuggestionWorkoutsSnowGlobeView.__allocating_init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v9 = objc_allocWithZone(v4);
  id v10 = specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(a1, a2, a3, a4);

  return v10;
}

id MOSuggestionWorkoutsSnowGlobeView.__allocating_init(alreadyRoundedIcons:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:)(a1);
}

void *MOSuggestionActivityIconAssetView.__allocating_init(imageView:name:assignedTileSize:frame:calories:duration:distance:averageHeartRate:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, uint64_t a14, uint64_t a15)
{
  id v28 = objc_allocWithZone(v15);
  return MOSuggestionActivityIconAssetView.init(imageView:name:assignedTileSize:frame:calories:duration:distance:averageHeartRate:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

id MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(a1, a2, a3, a4);

  return v7;
}

uint64_t closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(unint64_t a1, void *a2, void *a3, void *a4)
{
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_17:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v5 >= 1)
  {
    swift_beginAccess();
    swift_beginAccess();
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(a1 + 8 * i + 32);
      }
      id v9 = v8;
      objc_allocWithZone((Class)type metadata accessor for MOSuggestionWorkoutIconGlyphView());
      id v10 = v9;
      uint64_t v11 = MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(v10, a2, a3, a4);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        char v13 = (void *)Strong;
        id v14 = (void *)(Strong + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews);
        swift_beginAccess();
        id v15 = v11;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
      }
      id v16 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v16)
      {
        uint64_t v17 = v16;
        [v16 addSubview:v11];
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews] = _swiftEmptyArrayStorage;
  id v9 = (objc_class *)type metadata accessor for MOSuggestionWorkoutsSnowGlobeView();
  v20.receiver = v1;
  v20.super_class = v9;
  id v10 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v11 = v10;
  id v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v13;
  aBlock[4] = partial apply for closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:);
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_36;
  id v15 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v17);
  return v11;
}

uint64_t closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:)(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_17:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    swift_beginAccess();
    swift_beginAccess();
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      id v7 = [objc_allocWithZone((Class)UIImageView) initWithImage:v5];
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v9 = (void *)Strong;
        id v10 = (void *)(Strong + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews);
        swift_beginAccess();
        id v11 = v7;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
      }
      id v12 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v12)
      {
        uint64_t v13 = v12;
        [v12 addSubview:v7];
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall MOSuggestionWorkoutsSnowGlobeView.layoutSubviews()()
{
  unint64_t v1 = (unint64_t)v0;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    goto LABEL_34;
  }
  while (1)
  {
    uint64_t v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
    uint64_t v3 = (id *)(id)v1;
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      id v7 = (id *)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews);
      swift_beginAccess();
      if (*v7 >> 62)
      {
        swift_bridgeObjectRetain();
        _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v4, v5, "[MOSuggestionWorkoutsSnowGlobeView] layoutSubviews iconsCount: %ld", v6, 0xCu);
      swift_slowDealloc();
    }
    else
    {
    }
    id v8 = (unint64_t *)((char *)v3
                            + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews);
    swift_beginAccess();
    if (*v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v28 < 2) {
        return;
      }
    }
    else if (*(uint64_t *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2)
    {
      return;
    }
    [v3 bounds];
    double v10 = v9;
    float64_t v12 = v11;
    if (*v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v14 = specialized static MOSuggestionAssetSnowglobeEffect.layoutRectsFor(targetSize:count:)(v13, v10, v12);
    unint64_t v1 = *v8;
    id v31 = (id *)*v8;
    if (*v8 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v1 = (unint64_t)v31;
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      if (!v15)
      {
LABEL_39:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v15) {
        goto LABEL_39;
      }
    }
    unint64_t v34 = v1 & 0xC000000000000001;
    if ((v1 & 0xC000000000000001) == 0) {
      break;
    }
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_16:
    uint64_t v17 = v16;
    uint64_t v33 = *(void *)(v14 + 16);
    if (!v33)
    {
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    unint64_t v18 = 0;
    uint64_t v29 = v1 & 0xFFFFFFFFFFFFFF8;
    os_log_type_t v19 = (double *)(v14 + 56);
    uint64_t v32 = v15 - 1;
    id v30 = v3;
    while (1)
    {
      id v35 = v17;
      uint64_t v21 = v14;
      unint64_t v22 = v3;
      unint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 134218240;
        uint64_t v26 = v8;
        if (*v8 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v27 = *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        *(void *)(v25 + 4) = v27;

        *(_WORD *)(v25 + 12) = 2048;
        *(void *)(v25 + 14) = v18;
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "[MOSuggestionWorkoutsSnowGlobeView] iconsCount: %ld index: %ld", (uint8_t *)v25, 0x16u);
        swift_slowDealloc();
        uint64_t v3 = v30;
        unint64_t v1 = (unint64_t)v31;
        id v8 = v26;
      }
      else
      {

        unint64_t v23 = v22;
      }

      if (v18 >= *(void *)(v21 + 16)) {
        break;
      }
      uint64_t v14 = v21;
      [v35 setFrame:*(v19 - 3), *(v19 - 2), *(v19 - 1), *v19];

      if (v32 == v18) {
        goto LABEL_39;
      }
      if (v34)
      {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v18 + 1 >= *(void *)(v29 + 16)) {
          goto LABEL_33;
        }
        id v20 = *(id *)(v1 + 8 * v18 + 40);
      }
      uint64_t v17 = v20;
      ++v18;
      v19 += 4;
      if (v33 == v18) {
        goto LABEL_31;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_once();
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(v1 + 32);
    goto LABEL_16;
  }
  __break(1u);
}

void MOSuggestionWorkoutsSnowGlobeView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void MOSuggestionWorkoutsSnowGlobeView.init(frame:)()
{
}

id MOSuggestionWorkoutsSnowGlobeView.__deallocating_deinit()
{
  return MOSuggestionWorkoutsSnowGlobeView.__deallocating_deinit(type metadata accessor for MOSuggestionWorkoutsSnowGlobeView);
}

id MOSuggestionWorkoutIconGlyphView.iconView.getter()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionWorkoutIconGlyphView.iconView.setter(void *a1)
{
}

uint64_t (*MOSuggestionWorkoutIconGlyphView.iconView.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

void *MOSuggestionWorkoutIconGlyphView.lightBackgroundColor.getter()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_lightBackgroundColor);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionWorkoutIconGlyphView.lightBackgroundColor.setter(void *a1)
{
}

uint64_t (*MOSuggestionWorkoutIconGlyphView.lightBackgroundColor.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionWorkoutIconGlyphView.darkBackgroundColor.getter()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_darkBackgroundColor);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionWorkoutIconGlyphView.darkBackgroundColor.setter(void *a1)
{
}

uint64_t (*MOSuggestionWorkoutIconGlyphView.darkBackgroundColor.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

char *MOSuggestionWorkoutIconGlyphView.init(image:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  double v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_lightBackgroundColor] = 0;
  *(void *)&v11[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_darkBackgroundColor] = 0;

  v28.receiver = v11;
  v28.super_class = (Class)type metadata accessor for MOSuggestionWorkoutIconGlyphView();
  float64_t v12 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v13 = (id *)&v12[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView];
  swift_beginAccess();
  id v14 = *v13;
  uint64_t v15 = v12;
  id v16 = v14;
  id v17 = [a1 imageWithRenderingMode:2];
  [v16 setImage:v17];

  unint64_t v18 = (void **)&v15[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_lightBackgroundColor];
  swift_beginAccess();
  os_log_type_t v19 = *v18;
  NSObject *v18 = a2;
  id v20 = a2;

  uint64_t v21 = (void **)&v15[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_darkBackgroundColor];
  swift_beginAccess();
  unint64_t v22 = *v21;
  *uint64_t v21 = a3;
  id v23 = a3;

  [*v13 setTintColor:a4];
  [*v13 setContentMode:1];
  [v15 addSubview:*v13];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1001DA0F0;
  *(void *)(v24 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v24 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  uint64_t v25 = v15;
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();

  uint64_t v26 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((swift_isaMask & *(void *)v25) + 0xB8))(v26);

  return v25;
}

Swift::Void __swiftcall MOSuggestionWorkoutIconGlyphView.layoutSubviews()()
{
  [v0 bounds];
  id v2 = [v0 _setCornerRadius:v1 * 0.5];
  id v3 = (id)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x68))(v2);
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  [v3 setFrame:];
}

void MOSuggestionWorkoutIconGlyphView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_iconView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_lightBackgroundColor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService32MOSuggestionWorkoutIconGlyphView_darkBackgroundColor] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall MOSuggestionWorkoutIconGlyphView.handleTraitChange()()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 userInterfaceStyle];

  if (v2 == (id)2) {
    uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x98))();
  }
  else {
    uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x80))();
  }
  id v4 = (id)v3;
  [v0 setBackgroundColor:];
}

void MOSuggestionWorkoutIconGlyphView.init(frame:)()
{
}

id MOSuggestionWorkoutIconGlyphView.__deallocating_deinit()
{
  return MOSuggestionWorkoutsSnowGlobeView.__deallocating_deinit(type metadata accessor for MOSuggestionWorkoutIconGlyphView);
}

void closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.exerciseNameLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = self;
  id v2 = [v1 preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v3 = [v2 fontDescriptor];
  id v4 = [v3 fontDescriptorWithSymbolicTraits:2];

  if (v4)
  {
    id v5 = [v1 fontWithDescriptor:v4 size:0.0];

    [v0 setFont:v5];
    id v6 = [self whiteColor];
    [v0 setTextColor:v6];

    [v0 setTextAlignment:0];
    [v0 setLineBreakMode:4];
    [v0 setNumberOfLines:2];
    [v0 setAdjustsFontForContentSizeCategory:1];
    [v0 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionActivityIconAssetView.exerciseNameLabel.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_exerciseNameLabel);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void MOSuggestionActivityIconAssetView.exerciseNameLabel.setter(void *a1)
{
}

uint64_t (*MOSuggestionActivityIconAssetView.exerciseNameLabel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.workoutDataLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = self;
  id v2 = [v1 preferredFontForTextStyle:UIFontTextStyleFootnote];
  id v3 = [v2 fontDescriptor];
  id v4 = [v3 fontDescriptorWithSymbolicTraits:2];

  if (v4)
  {
    id v5 = [v1 fontWithDescriptor:v4 size:0.0];

    [v0 setFont:v5];
    id v6 = [self tertiaryLabelColor];
    [v0 setTextColor:v6];

    [v0 setTextAlignment:0];
    [v0 setAdjustsFontForContentSizeCategory:1];
    [v0 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionActivityIconAssetView.workoutDataLabel.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_workoutDataLabel);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void MOSuggestionActivityIconAssetView.workoutDataLabel.setter(void *a1)
{
}

uint64_t (*MOSuggestionActivityIconAssetView.workoutDataLabel.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

id MOSuggestionActivityIconAssetView.labelStack.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_labelStack);
  swift_beginAccess();
  id v2 = *v1;

  return v2;
}

void MOSuggestionActivityIconAssetView.labelStack.setter(void *a1)
{
}

uint64_t (*MOSuggestionActivityIconAssetView.labelStack.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionActivityIconAssetView.init(imageView:name:assignedTileSize:frame:calories:duration:distance:averageHeartRate:)(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, uint64_t a14, uint64_t a15)
{
  uint64_t v24 = v15;
  NSString v25 = String._bridgeToObjectiveC()();
  uint64_t v26 = self;
  id v27 = [v26 colorNamed:v25];

  if (!v27) {
    id v27 = [v26 systemBlueColor];
  }
  *(void *)&v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distanceBlue] = v27;
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v26 colorNamed:v28];

  if (!v29) {
    id v29 = [v26 systemYellowColor];
  }
  *(void *)&v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_timeYellow] = v29;
  NSString v30 = String._bridgeToObjectiveC()();
  id v31 = [v26 colorNamed:v30];

  if (!v31) {
    id v31 = [v26 systemPinkColor];
  }
  *(void *)&v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_movePink] = v31;
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = [v26 colorNamed:v32];

  if (!v33) {
    id v33 = [v26 systemRedColor];
  }
  *(void *)&v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_heartRed] = v33;
  uint64_t v34 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_exerciseNameLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.exerciseNameLabel();
  *(void *)&v24[v34] = v35;
  uint64_t v36 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_workoutDataLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.workoutDataLabel();
  *(void *)&v24[v36] = v37;
  uint64_t v38 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_labelStack;
  id v39 = [objc_allocWithZone((Class)UIStackView) init];
  [v39 setAxis:1];
  [v39 setAlignment:1];
  *(void *)&v24[v38] = v39;
  uint64_t v40 = &v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_name];
  *uint64_t v40 = a2;
  v40[1] = a3;
  v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_assignedTileSize] = a4;
  uint64_t v41 = &v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_calories];
  *uint64_t v41 = a5;
  v41[1] = a6;
  *(double *)&v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_duration] = a13;
  uint64_t v42 = &v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance];
  *uint64_t v42 = a7;
  v42[1] = a8;
  char v43 = &v24[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_averageHeartRate];
  void *v43 = a14;
  v43[1] = a15;

  v53.receiver = v24;
  v53.super_class = (Class)type metadata accessor for MOSuggestionActivityIconAssetView();
  id v44 = [super initWithFrame:a9, a10, a11, a12];
  [v44 setContentMode:1];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1001DA0F0;
  *(void *)(v45 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v45 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  uint64_t v46 = v44;
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(void *))((swift_isaMask & *v46) + 0x108))(a1);

  return v46;
}

Swift::Void __swiftcall MOSuggestionActivityIconAssetView.makeUIView(imageView:)(UIView imageView)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v432 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v420 = (char *)&v413 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = self;
  id v7 = [v6 blackColor];
  [v1 setBackgroundColor:v7];

  [v1 setAccessibilityIgnoresInvertColors:1];
  id v8 = [v1 addSubview:imageView.super.super.isa];
  uint64_t v9 = (swift_isaMask & *(void *)v1) + 184;
  v434 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v1) + 0xB8);
  *(void *)&long long v436 = v9;
  id v10 = (void *)((uint64_t (*)(id))v434)(v8);
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 setText:v11];

  unint64_t v12 = *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_calories + 8];
  v428 = *(void ***)&v2[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_calories];
  unint64_t v429 = v12;
  uint64_t v443 = 0;
  unint64_t v444 = 0xE000000000000000;
  if (one-time initialization token for queue != -1) {
    swift_once();
  }
  uint64_t v13 = static MOSuggestionAssetWorkoutProvider.queue;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &v443;
  *(void *)(v14 + 24) = v2;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = partial apply for closure #1 in MOSuggestionActivityIconAssetView.makeUIView(imageView:);
  *(void *)(v15 + 24) = v14;
  uint64_t v419 = v14;
  v441 = partial apply for thunk for @escaping @callee_guaranteed () -> ();
  uint64_t v442 = v15;
  aBlock = _NSConcreteStackBlock;
  uint64_t v438 = 1107296256;
  v439 = thunk for @escaping @callee_guaranteed () -> ();
  v440 = &block_descriptor_14;
  id v16 = _Block_copy(&aBlock);
  id v17 = v2;
  swift_retain();
  swift_release();
  dispatch_sync(v13, v16);
  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  uint64_t v18 = swift_release();
  if (v13)
  {
    __break(1u);
    goto LABEL_149;
  }
  uint64_t v19 = *(void *)&v17[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_averageHeartRate + 8];
  v425 = *(void ***)&v17[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_averageHeartRate];
  uint64_t v424 = v19;
  uint64_t v20 = (swift_isaMask & *(void *)v17) + 208;
  v427 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v17) + 0xD0);
  uint64_t v426 = v20;
  uint64_t v21 = (void *)((uint64_t (*)(uint64_t))v427)(v18);
  id v22 = [v6 systemWhiteColor];
  [v21 setTextColor:v22];

  v435 = v17;
  int v23 = v17[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_assignedTileSize];
  uint64_t v24 = &selRef_collectionView_didSelectItemAtIndexPath_;
  v418 = v2;
  uint64_t v431 = v4;
  switch(v23)
  {
    case 2:
      id v131 = [(objc_class *)imageView.super.super.isa superview];
      if (v131)
      {
        id v132 = v131;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v133 = [(objc_class *)imageView.super.super.isa topAnchor];
        id v134 = [v132 topAnchor];
        id v135 = [v133 constraintEqualToAnchor:v134];

        [v135 setConstant:8.0];
        id v136 = v135;
        [v136 setActive:1];
      }
      id v137 = [(objc_class *)imageView.super.super.isa superview];
      if (v137)
      {
        uint64_t v138 = v137;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v139 = [(objc_class *)imageView.super.super.isa bottomAnchor];
        id v140 = [v138 bottomAnchor];
        id v141 = [v139 constraintEqualToAnchor:v140];

        if (v141)
        {
          [v141 setConstant:-8.0];
          id v142 = v141;
          [v142 setActive:1];
        }
      }
      id v143 = [(objc_class *)imageView.super.super.isa superview];
      if (v143)
      {
        char v144 = v143;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v145 = [(objc_class *)imageView.super.super.isa trailingAnchor];
        id v146 = [v144 trailingAnchor];
        id v147 = [v145 constraintEqualToAnchor:v146];

        [v147 setConstant:-8.0];
        id v148 = v147;
        [v148 setActive:1];
      }
      id v149 = [(objc_class *)imageView.super.super.isa superview];
      if (v149) {
        goto LABEL_68;
      }
      goto LABEL_71;
    case 3:
      id v150 = [(objc_class *)imageView.super.super.isa superview];
      if (v150)
      {
        id v151 = v150;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v152 = [(objc_class *)imageView.super.super.isa topAnchor];
        id v153 = [v151 topAnchor];
        id v154 = [v152 constraintEqualToAnchor:v153];

        [v154 setConstant:5.0];
        id v155 = v154;
        [v155 setActive:1];
      }
      id v156 = [(objc_class *)imageView.super.super.isa superview];
      if (v156)
      {
        uint64_t v157 = v156;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v158 = [(objc_class *)imageView.super.super.isa bottomAnchor];
        id v159 = [v157 bottomAnchor];
        id v160 = [v158 constraintEqualToAnchor:v159];

        if (v160)
        {
          [v160 setConstant:-5.0];
          id v161 = v160;
          [v161 setActive:1];
        }
      }
      id v162 = [(objc_class *)imageView.super.super.isa superview];
      if (v162)
      {
        Swift::String v163 = v162;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v164 = [(objc_class *)imageView.super.super.isa trailingAnchor];
        id v165 = [v163 trailingAnchor];
        id v166 = [v164 constraintEqualToAnchor:v165];

        [v166 setConstant:-5.0];
        id v167 = v166;
        [v167 setActive:1];
      }
      id v168 = [(objc_class *)imageView.super.super.isa superview];
      if (v168)
      {
        uint64_t v169 = v168;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v170 = [(objc_class *)imageView.super.super.isa leadingAnchor];
        id v171 = [v169 leadingAnchor];
        id v172 = [v170 constraintEqualToAnchor:v171];

        [v172 setConstant:5.0];
        id v173 = v172;
        [v173 setActive:1];
      }
      id v149 = [(objc_class *)imageView.super.super.isa superview];
      if (v149)
      {
LABEL_68:
        uint64_t v174 = v149;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v175 = [(objc_class *)imageView.super.super.isa leadingAnchor];
        id v176 = [v174 leadingAnchor];
        id v177 = [v175 constraintEqualToAnchor:v176];

        [v177 setConstant:8.0];
        if (v177)
        {
          id v178 = v177;
          [v178 setActive:1];
        }
      }
      goto LABEL_71;
    case 4:
    case 6:
    case 7:
      LODWORD(v433) = v23;
      id v25 = [(objc_class *)imageView.super.super.isa superview];
      if (v25)
      {
        uint64_t v26 = v25;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v27 = [(objc_class *)imageView.super.super.isa topAnchor];
        id v28 = [v26 topAnchor];
        id v29 = [v27 constraintEqualToAnchor:v28];

        [v29 setConstant:8.0];
        id v30 = v29;
        [v30 setActive:1];
      }
      [v435 frame];
      double v32 = v31 + -16.0;
      [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
      id v33 = [(objc_class *)imageView.super.super.isa widthAnchor];
      id v34 = [v33 constraintEqualToConstant:v32];

      [v34 setActive:1];
      id v35 = [(objc_class *)imageView.super.super.isa superview];
      if (v35)
      {
        uint64_t v36 = v35;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v37 = [(objc_class *)imageView.super.super.isa bottomAnchor];
        id v38 = [v36 bottomAnchor];
        id v39 = [v37 constraintEqualToAnchor:v38];

        if (v39)
        {
          [v39 setConstant:-8.0];
          id v40 = v39;
          [v40 setActive:1];
        }
      }
      id v41 = [(objc_class *)imageView.super.super.isa superview];
      if (v41)
      {
        uint64_t v42 = v41;
        [(objc_class *)imageView.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
        id v43 = [(objc_class *)imageView.super.super.isa leadingAnchor];
        id v44 = [v42 leadingAnchor];
        id v45 = [v43 constraintEqualToAnchor:v44];

        [v45 setConstant:8.0];
        id v46 = v45;
        [v46 setActive:1];
      }
      id v47 = v435;
      char v48 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v435) + 0xE8);
      id v49 = (void *)v48();
      uint64_t v50 = (void *)v434();
      [v49 addArrangedSubview:v50];

      uint64_t v51 = (void *)v48();
      uint64_t v52 = (void *)v427();
      [v51 addArrangedSubview:v52];

      objc_super v53 = (void *)v48();
      [v53 setTranslatesAutoresizingMaskIntoConstraints:0];

      uint64_t v54 = (void *)v48();
      [v47 addSubview:v54];

      char v55 = (void *)v48();
      [v55 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v56 = [v55 leadingAnchor];
      id v57 = [(objc_class *)imageView.super.super.isa trailingAnchor];
      id v58 = [v56 constraintEqualToAnchor:v57];

      [v58 setConstant:8.0];
      [v58 setActive:1];

      id v59 = (void *)v48();
      id v60 = [v59 superview];
      if (v60)
      {
        id v61 = v60;
        [v59 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v62 = [v59 centerYAnchor];
        id v63 = [v61 centerYAnchor];
        id v64 = [v62 constraintEqualToAnchor:v63];

        [v64 setConstant:0.0];
        if (v64)
        {
          id v64 = v64;
          [v64 setActive:1];

          id v59 = v64;
        }
      }
      else
      {
        id v64 = 0;
        id v61 = v59;
      }

      uint64_t v110 = (void *)v48();
      id v111 = [v110 superview];
      if (v111)
      {
        Swift::String v112 = v111;
        [v110 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v113 = [v110 trailingAnchor];
        id v114 = [v112 trailingAnchor];
        id v115 = [v113 constraintEqualToAnchor:v114];

        [v115 setConstant:-8.0];
        if (v115)
        {
          id v116 = v115;
          [v116 setActive:1];

          uint64_t v117 = v428;
          uint64_t v24 = &selRef_collectionView_didSelectItemAtIndexPath_;
          if ((v433 & 0xFE) != 6) {
            goto LABEL_41;
          }
          goto LABEL_74;
        }
      }
      else
      {
        Swift::String v112 = v110;
      }
      uint64_t v117 = v428;
      uint64_t v24 = &selRef_collectionView_didSelectItemAtIndexPath_;
      char v180 = (char)v433;

      if ((v180 & 0xFE) != 6)
      {
LABEL_41:
        id v118 = self;
        id v119 = [v118 mainBundle];
        v449._uint64_t countAndFlagsBits = 0xD000000000000018;
        v449._object = (void *)0x80000001001E4C10;
        v120._uint64_t countAndFlagsBits = 16421;
        v120._object = (void *)0xE200000000000000;
        v121._uint64_t countAndFlagsBits = 0;
        v121._object = (void *)0xE000000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v120, (Swift::String_optional)0, (NSBundle)v119, v121, v449);

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v122 = swift_allocObject();
        long long v436 = xmmword_1001DA0F0;
        *(_OWORD *)(v122 + 16) = xmmword_1001DA0F0;
        *(void *)(v122 + 56) = &type metadata for String;
        unint64_t v123 = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v122 + 64) = v123;
        unint64_t v124 = v429;
        *(void *)(v122 + 32) = v117;
        *(void *)(v122 + 40) = v124;
        swift_bridgeObjectRetain();
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v126 = *(void *)&v435[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance];
        uint64_t v125 = *(void *)&v435[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance + 8];
        if ((v126 || v125 != 0xE000000000000000) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          id v127 = [v118 mainBundle];
          v450._uint64_t countAndFlagsBits = 0xD000000000000018;
          v450._object = (void *)0x80000001001E4BF0;
          v128._uint64_t countAndFlagsBits = 16421;
          v128._object = (void *)0xE200000000000000;
          v129._uint64_t countAndFlagsBits = 0;
          v129._object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v128, (Swift::String_optional)0, (NSBundle)v127, v129, v450);

          uint64_t v130 = swift_allocObject();
          *(_OWORD *)(v130 + 16) = v436;
          *(void *)(v130 + 56) = &type metadata for String;
          *(void *)(v130 + 64) = v123;
          *(void *)(v130 + 32) = v126;
          *(void *)(v130 + 40) = v125;
          swift_bridgeObjectRetain();
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
LABEL_146:
          swift_bridgeObjectRelease();
          uint64_t v179 = v435;
          goto LABEL_147;
        }
        goto LABEL_71;
      }
LABEL_74:
      uint64_t v181 = v435;
      unint64_t v182 = v429;
      if (!v425 && v424 == 0xE000000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || !v117 && v182 == 0xE000000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        if (!v117 && v182 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          id v183 = [self mainBundle];
          v451._uint64_t countAndFlagsBits = 0xD000000000000018;
          v451._object = (void *)0x80000001001E9BA0;
          v184._uint64_t countAndFlagsBits = 16421;
          v184._object = (void *)0xE200000000000000;
          v185._uint64_t countAndFlagsBits = 0;
          v185._object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v184, (Swift::String_optional)0, (NSBundle)v183, v185, v451);

          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          uint64_t v186 = swift_allocObject();
          *(_OWORD *)(v186 + 16) = xmmword_1001DA0F0;
          uint64_t v188 = v443;
          unint64_t v187 = v444;
          *(void *)(v186 + 56) = &type metadata for String;
          *(void *)(v186 + 64) = lazy protocol witness table accessor for type String and conformance String();
          *(void *)(v186 + 32) = v188;
          *(void *)(v186 + 40) = v187;
          unint64_t v182 = v429;
          goto LABEL_136;
        }
        id v189 = [self mainBundle];
        v452._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
        v452._object = (void *)0x80000001001E9B80;
        v190._uint64_t countAndFlagsBits = 0x402520B7C2204025;
        v190._object = (void *)0xA800000000000000;
        v191._uint64_t countAndFlagsBits = 0;
        v191._object = (void *)0xE000000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v190, (Swift::String_optional)0, (NSBundle)v189, v191, v452);

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v192 = swift_allocObject();
        *(_OWORD *)(v192 + 16) = xmmword_1001DA390;
        *(void *)(v192 + 56) = &type metadata for String;
        unint64_t v193 = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v192 + 32) = v117;
        *(void *)(v192 + 40) = v182;
        uint64_t v194 = v443;
        unint64_t v195 = v444;
        *(void *)(v192 + 96) = &type metadata for String;
        *(void *)(v192 + 104) = v193;
        *(void *)(v192 + 64) = v193;
        *(void *)(v192 + 72) = v194;
        *(void *)(v192 + 80) = v195;
      }
      else
      {
        id v291 = [self mainBundle];
        v456._uint64_t countAndFlagsBits = 0xD000000000000046;
        v456._object = (void *)0x80000001001E9AC0;
        v292._object = (void *)0x80000001001E9AA0;
        v292._uint64_t countAndFlagsBits = 0x1000000000000012;
        v293._uint64_t countAndFlagsBits = 0;
        v293._object = (void *)0xE000000000000000;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v292, (Swift::String_optional)0, (NSBundle)v291, v293, v456);

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
        uint64_t v294 = swift_allocObject();
        *(_OWORD *)(v294 + 16) = xmmword_1001DA740;
        *(void *)(v294 + 56) = &type metadata for String;
        unint64_t v295 = lazy protocol witness table accessor for type String and conformance String();
        *(void *)(v294 + 32) = v117;
        *(void *)(v294 + 40) = v182;
        uint64_t v296 = v443;
        unint64_t v297 = v444;
        *(void *)(v294 + 96) = &type metadata for String;
        *(void *)(v294 + 104) = v295;
        *(void *)(v294 + 64) = v295;
        *(void *)(v294 + 72) = v296;
        *(void *)(v294 + 80) = v297;
        *(void *)(v294 + 136) = &type metadata for String;
        *(void *)(v294 + 144) = v295;
        uint64_t v298 = v424;
        *(void *)(v294 + 112) = v425;
        *(void *)(v294 + 120) = v298;
        swift_bridgeObjectRetain();
        unint64_t v182 = v429;
      }
      swift_bridgeObjectRetain();
LABEL_136:
      swift_bridgeObjectRetain();
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v299 = &v181[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance];
      uint64_t v301 = *(void *)&v181[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance];
      unint64_t v300 = *((void *)v299 + 1);
      uint64_t v302 = HIBYTE(v300) & 0xF;
      if ((v300 & 0x2000000000000000) == 0) {
        uint64_t v302 = v301 & 0xFFFFFFFFFFFFLL;
      }
      if (v302)
      {
        swift_bridgeObjectRelease();
        if ((v182 & 0x2000000000000000) != 0) {
          uint64_t v303 = HIBYTE(v182) & 0xF;
        }
        else {
          uint64_t v303 = (unint64_t)v117 & 0xFFFFFFFFFFFFLL;
        }
        id v304 = [self mainBundle];
        if (v303)
        {
          unint64_t v305 = v182;
          v457._uint64_t countAndFlagsBits = 0xD000000000000030;
          v457._object = (void *)0x80000001001E9B10;
          v306._uint64_t countAndFlagsBits = 0x402520B7C2204025;
          v306._object = (void *)0xAE00402520B7C220;
          v307._uint64_t countAndFlagsBits = 0;
          v307._object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v306, (Swift::String_optional)0, (NSBundle)v304, v307, v457);

          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          uint64_t v308 = swift_allocObject();
          *(_OWORD *)(v308 + 16) = xmmword_1001DA740;
          *(void *)(v308 + 56) = &type metadata for String;
          unint64_t v309 = lazy protocol witness table accessor for type String and conformance String();
          *(void *)(v308 + 32) = v301;
          *(void *)(v308 + 40) = v300;
          uint64_t v310 = v443;
          unint64_t v311 = v444;
          *(void *)(v308 + 96) = &type metadata for String;
          *(void *)(v308 + 104) = v309;
          *(void *)(v308 + 64) = v309;
          *(void *)(v308 + 72) = v310;
          *(void *)(v308 + 80) = v311;
          *(void *)(v308 + 136) = &type metadata for String;
          *(void *)(v308 + 144) = v309;
          *(void *)(v308 + 112) = v117;
          *(void *)(v308 + 120) = v305;
          swift_bridgeObjectRetain();
        }
        else
        {
          v458._uint64_t countAndFlagsBits = 0xD000000000000025;
          v458._object = (void *)0x80000001001E9B50;
          v312._uint64_t countAndFlagsBits = 0x402520B7C2204025;
          v312._object = (void *)0xA800000000000000;
          v313._uint64_t countAndFlagsBits = 0;
          v313._object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v312, (Swift::String_optional)0, (NSBundle)v304, v313, v458);

          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
          uint64_t v314 = swift_allocObject();
          *(_OWORD *)(v314 + 16) = xmmword_1001DA390;
          *(void *)(v314 + 56) = &type metadata for String;
          unint64_t v315 = lazy protocol witness table accessor for type String and conformance String();
          *(void *)(v314 + 32) = v301;
          *(void *)(v314 + 40) = v300;
          uint64_t v316 = v443;
          unint64_t v317 = v444;
          *(void *)(v314 + 96) = &type metadata for String;
          *(void *)(v314 + 104) = v315;
          *(void *)(v314 + 64) = v315;
          *(void *)(v314 + 72) = v316;
          *(void *)(v314 + 80) = v317;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        goto LABEL_146;
      }
LABEL_71:
      uint64_t v179 = v435;
      goto LABEL_147;
    case 5:
    case 8:
      int v65 = v23;
      id v430 = self;
      id v66 = [v430 mainBundle];
      v445._uint64_t countAndFlagsBits = 0xD000000000000018;
      v445._object = (void *)0x80000001001E9BA0;
      v67._uint64_t countAndFlagsBits = 16421;
      v67._object = (void *)0xE200000000000000;
      v68._uint64_t countAndFlagsBits = 0;
      v68._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v67, (Swift::String_optional)0, (NSBundle)v66, v68, v445);

      v422 = (void *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v69 = swift_allocObject();
      *(_OWORD *)(v69 + 16) = xmmword_1001DA0F0;
      uint64_t v71 = v443;
      unint64_t v70 = v444;
      *(void *)(v69 + 56) = &type metadata for String;
      unint64_t v423 = lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v69 + 64) = v423;
      *(void *)(v69 + 32) = v71;
      *(void *)(v69 + 40) = v70;
      swift_bridgeObjectRetain();
      id v433 = (id)static String.localizedStringWithFormat(_:_:)();
      char v73 = v72;
      swift_bridgeObjectRelease();
      uint64_t v74 = swift_bridgeObjectRelease();
      id v75 = v428;
      if (v428) {
        BOOL v76 = 0;
      }
      else {
        BOOL v76 = v429 == 0xE000000000000000;
      }
      char v77 = v76;
      if (!v76)
      {
        unint64_t v78 = v429;
        uint64_t v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((v74 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          id v79 = [v430 mainBundle];
          v446._uint64_t countAndFlagsBits = 0xD000000000000021;
          v446._object = (void *)0x80000001001E4B70;
          v80._uint64_t countAndFlagsBits = 0x402520B7C2204025;
          v80._object = (void *)0xA800000000000000;
          v81._uint64_t countAndFlagsBits = 0;
          v81._object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v80, (Swift::String_optional)0, (NSBundle)v79, v81, v446);

          uint64_t v82 = swift_allocObject();
          *(_OWORD *)(v82 + 16) = xmmword_1001DA390;
          unint64_t v83 = v423;
          *(void *)(v82 + 56) = &type metadata for String;
          *(void *)(v82 + 64) = v83;
          *(void *)(v82 + 32) = v75;
          *(void *)(v82 + 40) = v78;
          uint64_t v84 = v443;
          unint64_t v85 = v444;
          *(void *)(v82 + 96) = &type metadata for String;
          *(void *)(v82 + 104) = v83;
          *(void *)(v82 + 72) = v84;
          *(void *)(v82 + 80) = v85;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v433 = (id)static String.localizedStringWithFormat(_:_:)();
          char v73 = v86;
          swift_bridgeObjectRelease();
          uint64_t v74 = swift_bridgeObjectRelease();
        }
      }
      char v87 = v434;
      uint64_t v88 = *(void *)&v435[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance];
      unint64_t v89 = *(void *)&v435[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance + 8];
      if (v88 || v89 != 0xE000000000000000)
      {
        uint64_t v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((v74 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          id v90 = [v430 mainBundle];
          v447._uint64_t countAndFlagsBits = 0xD000000000000021;
          v447._object = (void *)0x80000001001E4C30;
          v91._uint64_t countAndFlagsBits = 0x402520B7C2204025;
          v91._object = (void *)0xA800000000000000;
          v92._uint64_t countAndFlagsBits = 0;
          v92._object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v91, (Swift::String_optional)0, (NSBundle)v90, v92, v447);

          uint64_t v93 = swift_allocObject();
          *(_OWORD *)(v93 + 16) = xmmword_1001DA390;
          unint64_t v94 = v423;
          *(void *)(v93 + 56) = &type metadata for String;
          *(void *)(v93 + 64) = v94;
          *(void *)(v93 + 32) = v88;
          *(void *)(v93 + 40) = v89;
          uint64_t v95 = v443;
          unint64_t v96 = v444;
          *(void *)(v93 + 96) = &type metadata for String;
          *(void *)(v93 + 104) = v94;
          *(void *)(v93 + 72) = v95;
          *(void *)(v93 + 80) = v96;
          swift_bridgeObjectRetain();
          char v87 = v434;
          swift_bridgeObjectRetain();
          id v433 = (id)static String.localizedStringWithFormat(_:_:)();
          char v73 = v97;
          swift_bridgeObjectRelease();
          uint64_t v74 = swift_bridgeObjectRelease();
        }
      }
      id v98 = v435;
      uint64_t v99 = (void *)((uint64_t (*)(uint64_t))v87)(v74);
      [v98 addSubview:v99];

      Swift::String v100 = (void *)v427();
      [v98 addSubview:v100];

      if (v65 == 8)
      {
        if (!v425 && v424 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          if (v77) {
            goto LABEL_90;
          }
        }
        else
        {
          if (v77) {
            goto LABEL_90;
          }
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            swift_bridgeObjectRelease();
            id v196 = [v430 mainBundle];
            v453._uint64_t countAndFlagsBits = 0xD000000000000046;
            v453._object = (void *)0x80000001001E9AC0;
            v197._object = (void *)0x80000001001E9AA0;
            v197._uint64_t countAndFlagsBits = 0x1000000000000012;
            v198._uint64_t countAndFlagsBits = 0;
            v198._object = (void *)0xE000000000000000;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v197, (Swift::String_optional)0, (NSBundle)v196, v198, v453);

            uint64_t v199 = swift_allocObject();
            *(_OWORD *)(v199 + 16) = xmmword_1001DA740;
            unint64_t v200 = v423;
            *(void *)(v199 + 56) = &type metadata for String;
            *(void *)(v199 + 64) = v200;
            *(void *)(v199 + 32) = v428;
            *(void *)(v199 + 40) = v429;
            uint64_t v201 = v443;
            unint64_t v202 = v444;
            *(void *)(v199 + 96) = &type metadata for String;
            *(void *)(v199 + 104) = v200;
            *(void *)(v199 + 72) = v201;
            *(void *)(v199 + 80) = v202;
            *(void *)(v199 + 136) = &type metadata for String;
            *(void *)(v199 + 144) = v200;
            uint64_t v203 = v424;
            *(void *)(v199 + 112) = v425;
            *(void *)(v199 + 120) = v203;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_89;
          }
        }
        unint64_t v101 = v428;
        unint64_t v102 = v429;
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          id v103 = [v430 mainBundle];
          v448._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
          v448._object = (void *)0x80000001001E9B80;
          v104._uint64_t countAndFlagsBits = 0x402520B7C2204025;
          v104._object = (void *)0xA800000000000000;
          v105._uint64_t countAndFlagsBits = 0;
          v105._object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v104, (Swift::String_optional)0, (NSBundle)v103, v105, v448);

          uint64_t v106 = swift_allocObject();
          *(_OWORD *)(v106 + 16) = xmmword_1001DA390;
          unint64_t v107 = v423;
          *(void *)(v106 + 56) = &type metadata for String;
          *(void *)(v106 + 64) = v107;
          *(void *)(v106 + 32) = v101;
          *(void *)(v106 + 40) = v102;
          uint64_t v108 = v443;
          unint64_t v109 = v444;
          *(void *)(v106 + 96) = &type metadata for String;
          *(void *)(v106 + 104) = v107;
          *(void *)(v106 + 72) = v108;
          *(void *)(v106 + 80) = v109;
          swift_bridgeObjectRetain();
LABEL_89:
          swift_bridgeObjectRetain();
          id v433 = (id)static String.localizedStringWithFormat(_:_:)();
          char v73 = v204;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v87 = v434;
        }
LABEL_90:
        uint64_t v205 = HIBYTE(v89) & 0xF;
        if ((v89 & 0x2000000000000000) == 0) {
          uint64_t v205 = v88 & 0xFFFFFFFFFFFFLL;
        }
        if (v205)
        {
          swift_bridgeObjectRelease();
          uint64_t v206 = v428;
          unint64_t v207 = v429;
          if ((v429 & 0x2000000000000000) != 0) {
            uint64_t v208 = HIBYTE(v429) & 0xF;
          }
          else {
            uint64_t v208 = (unint64_t)v428 & 0xFFFFFFFFFFFFLL;
          }
          id v209 = [v430 mainBundle];
          if (v208)
          {
            v454._uint64_t countAndFlagsBits = 0xD000000000000030;
            v454._object = (void *)0x80000001001E9B10;
            v210._uint64_t countAndFlagsBits = 0x402520B7C2204025;
            v210._object = (void *)0xAE00402520B7C220;
            v211._uint64_t countAndFlagsBits = 0;
            v211._object = (void *)0xE000000000000000;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v210, (Swift::String_optional)0, (NSBundle)v209, v211, v454);

            uint64_t v212 = swift_allocObject();
            *(_OWORD *)(v212 + 16) = xmmword_1001DA740;
            unint64_t v213 = v423;
            *(void *)(v212 + 56) = &type metadata for String;
            *(void *)(v212 + 64) = v213;
            *(void *)(v212 + 32) = v88;
            *(void *)(v212 + 40) = v89;
            uint64_t v214 = v443;
            unint64_t v215 = v444;
            *(void *)(v212 + 96) = &type metadata for String;
            *(void *)(v212 + 104) = v213;
            *(void *)(v212 + 72) = v214;
            *(void *)(v212 + 80) = v215;
            *(void *)(v212 + 136) = &type metadata for String;
            *(void *)(v212 + 144) = v213;
            *(void *)(v212 + 112) = v206;
            *(void *)(v212 + 120) = v207;
            swift_bridgeObjectRetain();
          }
          else
          {
            v455._uint64_t countAndFlagsBits = 0xD000000000000025;
            v455._object = (void *)0x80000001001E9B50;
            v216._uint64_t countAndFlagsBits = 0x402520B7C2204025;
            v216._object = (void *)0xA800000000000000;
            v217._uint64_t countAndFlagsBits = 0;
            v217._object = (void *)0xE000000000000000;
            NSLocalizedString(_:tableName:bundle:value:comment:)(v216, (Swift::String_optional)0, (NSBundle)v209, v217, v455);

            uint64_t v218 = swift_allocObject();
            *(_OWORD *)(v218 + 16) = xmmword_1001DA390;
            unint64_t v219 = v423;
            *(void *)(v218 + 56) = &type metadata for String;
            *(void *)(v218 + 64) = v219;
            *(void *)(v218 + 32) = v88;
            *(void *)(v218 + 40) = v89;
            uint64_t v220 = v443;
            unint64_t v221 = v444;
            *(void *)(v218 + 96) = &type metadata for String;
            *(void *)(v218 + 104) = v219;
            *(void *)(v218 + 72) = v220;
            *(void *)(v218 + 80) = v221;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v433 = (id)static String.localizedStringWithFormat(_:_:)();
          char v73 = v222;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v87 = v434;
        }
        Swift::String v223 = (void *)v87();
        unint64_t v224 = self;
        id v225 = [v224 preferredFontForTextStyle:UIFontTextStyleBody];
        id v226 = [v225 fontDescriptor];
        id v227 = [v226 fontDescriptorWithSymbolicTraits:2];

        if (v227)
        {
          id v228 = [v224 fontWithDescriptor:v227 size:0.0];

          [v223 setFont:v228];
          uint64_t v229 = (void *)v427();
          id v230 = [v224 preferredFontForTextStyle:UIFontTextStyleBody];
          id v231 = [v230 fontDescriptor];
          id v232 = [v231 fontDescriptorWithSymbolicTraits:2];

          if (v232)
          {
            id v430 = v73;
            id v233 = [v224 fontWithDescriptor:v232 size:0.0];

            [v229 setFont:v233];
            char v87 = v434;
            goto LABEL_103;
          }
LABEL_150:
          __break(1u);
          JUMPOUT(0x100181124);
        }
LABEL_149:
        __break(1u);
        goto LABEL_150;
      }
      id v430 = v73;
LABEL_103:
      uint64_t v179 = v435;
      uint64_t v234 = (void *)v87();
      id v235 = [v234 superview];
      uint64_t v236 = &selRef_collectionView_didSelectItemAtIndexPath_;
      if (v235)
      {
        unint64_t v237 = v235;
        [v234 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v238 = [v234 topAnchor];
        id v239 = [v237 topAnchor];
        id v240 = [v238 constraintEqualToAnchor:v239];

        [v240 setConstant:12.0];
        if (v240)
        {
          id v240 = v240;
          [v240 setActive:1];

          uint64_t v234 = v240;
        }

        v241 = &selRef_collectionView_didSelectItemAtIndexPath_;
        uint64_t v236 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
      else
      {
        id v240 = 0;
        unint64_t v237 = v234;
        v241 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }

      v242 = (void *)v87();
      id v243 = [v242 superview];
      if (v243)
      {
        v244 = v243;
        [v242 v241[92]];
        id v245 = [v242 leadingAnchor];
        id v246 = [v244 leadingAnchor];
        id v247 = [v245 constraintEqualToAnchor:v246];

        [v247 setConstant:16.0];
        if (v247)
        {
          id v247 = v247;
          [v247 setActive:1];

          v242 = v247;
        }

        uint64_t v236 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
      else
      {
        id v247 = 0;
        v244 = v242;
      }

      uint64_t v248 = (void *)v87();
      id v249 = [v248 superview];
      if (v249)
      {
        uint64_t v250 = v249;
        [v248 v241[92]];
        id v251 = [v248 trailingAnchor];
        id v252 = [v250 trailingAnchor];
        id v253 = [v251 constraintEqualToAnchor:v252];

        [v253 setConstant:-16.0];
        if (v253)
        {
          id v253 = v253;
          [v253 setActive:1];

          uint64_t v248 = v253;
        }
        uint64_t v236 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }
      else
      {
        id v253 = 0;
        uint64_t v250 = v248;
      }

      uint64_t v254 = (void *)v87();
      [v254 setTextAlignment:1];

      [imageView.super.super.isa v241[92]];
      id v255 = [imageView.super.super.isa v236[144]];
      v256 = (void *)v87();
      id v257 = [v256 bottomAnchor];

      id v258 = [v255 constraintEqualToAnchor:v257 constant:5.0];
      [v258 setActive:1];

      id v259 = [(objc_class *)imageView.super.super.isa bottomAnchor];
      v260 = v427;
      uint64_t v261 = (void *)v427();
      id v262 = [v261 v236[144]];

      id v263 = [v259 constraintEqualToAnchor:v262 constant:-5.0];
      [v263 setActive:1];

      id v264 = [(objc_class *)imageView.super.super.isa widthAnchor];
      id v265 = [(objc_class *)imageView.super.super.isa heightAnchor];
      id v266 = [v264 constraintEqualToAnchor:v265];

      [v266 setActive:1];
      id v267 = [(objc_class *)imageView.super.super.isa centerXAnchor];
      id v268 = [v179 centerXAnchor];
      id v269 = [v267 constraintEqualToAnchor:v268];

      [v269 setActive:1];
      uint64_t v270 = (void *)v260();
      [v270 setTextAlignment:1];

      uint64_t v271 = (void *)v434();
      [v271 setTextAlignment:1];

      unint64_t v272 = (void *)v260();
      id v273 = [v272 superview];
      if (v273)
      {
        unint64_t v274 = v273;
        [v272 v241[92]];
        id v275 = [v272 bottomAnchor];
        id v276 = [v274 bottomAnchor];
        id v277 = [v275 constraintEqualToAnchor:v276];

        uint64_t v24 = &selRef_collectionView_didSelectItemAtIndexPath_;
        if (v277)
        {
          [v277 setConstant:-12.0];
          id v277 = v277;
          [v277 setActive:1];

          unint64_t v272 = v277;
        }
      }
      else
      {
        id v277 = 0;
        unint64_t v274 = v272;
        uint64_t v24 = &selRef_collectionView_didSelectItemAtIndexPath_;
      }

      v278 = (void *)v427();
      id v279 = [v278 superview];
      if (v279)
      {
        v280 = v279;
        [v278 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v281 = [v278 leadingAnchor];
        id v282 = [v280 leadingAnchor];
        id v283 = [v281 constraintEqualToAnchor:v282];

        [v283 setConstant:8.0];
        if (v283)
        {
          id v283 = v283;
          [v283 setActive:1];

          v278 = v283;
        }
      }
      else
      {
        id v283 = 0;
        v280 = v278;
      }

      char v284 = (void *)v427();
      id v285 = [v284 superview];
      if (v285)
      {
        v286 = v285;
        [v284 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v287 = [v284 trailingAnchor];
        id v288 = [v286 trailingAnchor];
        id v289 = [v287 constraintEqualToAnchor:v288];

        [v289 setConstant:-8.0];
        if (v289)
        {
          id v290 = v289;
          [v290 setActive:1];
        }
        else
        {
        }
      }
      else
      {
      }
LABEL_147:
      id v318 = objc_allocWithZone((Class)NSMutableAttributedString);
      NSString v319 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v320 = [v318 initWithString:v319];

      v434 = (uint64_t (*)(void))self;
      id v321 = [v434 v24[119]];
      v422 = (void *)0x80000001001E4B10;
      v459._object = (void *)0x80000001001E4B10;
      v322._uint64_t countAndFlagsBits = 16421;
      v322._object = (void *)0xE200000000000000;
      v323._uint64_t countAndFlagsBits = 0;
      v323._object = (void *)0xE000000000000000;
      v459._uint64_t countAndFlagsBits = 0xD000000000000010;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v322, (Swift::String_optional)0, (NSBundle)v321, v323, v459);

      uint64_t v421 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      v324 = v179;
      uint64_t v325 = swift_allocObject();
      long long v436 = xmmword_1001DA0F0;
      *(_OWORD *)(v325 + 16) = xmmword_1001DA0F0;
      v327 = *(void **)&v324[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance + 8];
      NSAttributedStringKey v416 = *(NSAttributedStringKey *)&v324[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distance];
      NSAttributedStringKey v326 = v416;
      *(void *)(v325 + 56) = &type metadata for String;
      v328 = (void *)lazy protocol witness table accessor for type String and conformance String();
      *(void *)(v325 + 64) = v328;
      id v430 = v328;
      *(void *)(v325 + 32) = v326;
      *(void *)(v325 + 40) = v327;
      id v415 = v327;
      swift_bridgeObjectRetain();
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v433 = v320;
      id v329 = [v320 mutableString];
      NSString v330 = String._bridgeToObjectiveC()();
      [v329 rangeOfString:v330 options:1];

      unint64_t v423 = (unint64_t)NSForegroundColorAttributeName;
      [v320 addAttribute:value:range:];
      swift_bridgeObjectRelease();
      v414._object = *(void **)&v324[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_timeYellow];
      v331 = v434;
      id v332 = [v434 v24[119]];
      v417 = (void *)0x80000001001E4B30;
      v460._object = (void *)0x80000001001E4B30;
      v333._uint64_t countAndFlagsBits = 16421;
      v333._object = (void *)0xE200000000000000;
      v334._uint64_t countAndFlagsBits = 0;
      v334._object = (void *)0xE000000000000000;
      v460._uint64_t countAndFlagsBits = 0xD000000000000010;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v333, (Swift::String_optional)0, (NSBundle)v332, v334, v460);

      uint64_t v335 = swift_allocObject();
      *(_OWORD *)(v335 + 16) = v436;
      uint64_t v337 = v443;
      unint64_t v336 = v444;
      *(void *)(v335 + 56) = &type metadata for String;
      *(void *)(v335 + 64) = v328;
      *(void *)(v335 + 32) = v337;
      *(void *)(v335 + 40) = v336;
      swift_bridgeObjectRetain();
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v338 = v433;
      id v339 = [v433 mutableString];
      NSString v340 = String._bridgeToObjectiveC()();
      id v341 = [v339 rangeOfString:v340 options:1];
      uint64_t v343 = v342;

      v344 = v338;
      unint64_t v345 = v423;
      [v344 addAttribute:v423 value:v414._object range:v341];
      swift_bridgeObjectRelease();
      v414._object = *(void **)&v324[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_movePink];
      id v346 = [v331 mainBundle];
      v461._object = (void *)0x80000001001E4B50;
      v347._uint64_t countAndFlagsBits = 16421;
      v347._object = (void *)0xE200000000000000;
      v348._uint64_t countAndFlagsBits = 0;
      v348._object = (void *)0xE000000000000000;
      v461._uint64_t countAndFlagsBits = 0xD000000000000010;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v347, (Swift::String_optional)0, (NSBundle)v346, v348, v461);

      uint64_t v349 = swift_allocObject();
      *(_OWORD *)(v349 + 16) = v436;
      id v350 = v430;
      *(void *)(v349 + 56) = &type metadata for String;
      *(void *)(v349 + 64) = v350;
      *(void *)(v349 + 32) = v428;
      *(void *)(v349 + 40) = v429;
      swift_bridgeObjectRetain();
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v351 = v433;
      id v352 = [v433 mutableString];
      NSString v353 = String._bridgeToObjectiveC()();
      id v354 = [v352 rangeOfString:v353 options:1];
      uint64_t v356 = v355;

      [v351 addAttribute:v345 value:v414._object range:v354];
      swift_bridgeObjectRelease();
      id v413 = *(id *)&v435[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_heartRed];
      v357 = v434;
      id v358 = [v434 mainBundle];
      v462._uint64_t countAndFlagsBits = 0xD000000000000012;
      v414._uint64_t countAndFlagsBits = 0xD000000000000012;
      v414._object = (void *)0x80000001001E9A80;
      v462._object = (void *)0x80000001001E9A80;
      v359._uint64_t countAndFlagsBits = 0x475641204025;
      v359._object = (void *)0xE600000000000000;
      v360._uint64_t countAndFlagsBits = 0;
      v360._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v359, (Swift::String_optional)0, (NSBundle)v358, v360, v462);

      uint64_t v361 = swift_allocObject();
      *(_OWORD *)(v361 + 16) = v436;
      *(void *)(v361 + 56) = &type metadata for String;
      *(void *)(v361 + 64) = v350;
      *(void *)(v361 + 32) = v425;
      *(void *)(v361 + 40) = v424;
      swift_bridgeObjectRetain();
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v362 = [v351 mutableString];
      NSString v363 = String._bridgeToObjectiveC()();
      id v364 = [v362 rangeOfString:v363 options:1];
      uint64_t v366 = v365;

      [v351 addAttribute:v423 value:v413 range:v364];
      swift_bridgeObjectRelease();
      id v413 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      id v367 = [v357 mainBundle];
      v463._object = v422;
      v368._uint64_t countAndFlagsBits = 16421;
      v368._object = (void *)0xE200000000000000;
      v369._uint64_t countAndFlagsBits = 0;
      v369._object = (void *)0xE000000000000000;
      v463._uint64_t countAndFlagsBits = 0xD000000000000010;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v368, (Swift::String_optional)0, (NSBundle)v367, v369, v463);

      uint64_t v370 = swift_allocObject();
      *(_OWORD *)(v370 + 16) = v436;
      aBlock = v416;
      uint64_t v438 = (uint64_t)v415;
      v371 = v420;
      CharacterSet.init(charactersIn:)();
      unint64_t v423 = lazy protocol witness table accessor for type String and conformance String();
      uint64_t v372 = StringProtocol.trimmingCharacters(in:)();
      uint64_t v374 = v373;
      v375 = *(void (**)(void, void))(v432 + 8);
      v432 += 8;
      v422 = v375;
      v375(v371, v431);
      id v376 = v430;
      *(void *)(v370 + 56) = &type metadata for String;
      *(void *)(v370 + 64) = v376;
      *(void *)(v370 + 32) = v372;
      *(void *)(v370 + 40) = v374;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v377 = v433;
      id v378 = [v433 mutableString];
      NSString v379 = String._bridgeToObjectiveC()();
      [v378 rangeOfString:v379 options:1];

      NSAttributedStringKey v416 = NSFontAttributeName;
      v380 = v413;
      [v377 addAttribute:value:range:];

      swift_bridgeObjectRelease();
      id v415 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      id v381 = [v434 mainBundle];
      v464._object = v417;
      v382._uint64_t countAndFlagsBits = 16421;
      v382._object = (void *)0xE200000000000000;
      v383._uint64_t countAndFlagsBits = 0;
      v383._object = (void *)0xE000000000000000;
      v464._uint64_t countAndFlagsBits = 0xD000000000000010;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v382, (Swift::String_optional)0, (NSBundle)v381, v383, v464);

      uint64_t v384 = swift_allocObject();
      *(_OWORD *)(v384 + 16) = v436;
      aBlock = v428;
      uint64_t v438 = v429;
      CharacterSet.init(charactersIn:)();
      uint64_t v385 = StringProtocol.trimmingCharacters(in:)();
      uint64_t v387 = v386;
      ((void (*)(char *, uint64_t))v422)(v371, v431);
      *(void *)(v384 + 56) = &type metadata for String;
      *(void *)(v384 + 64) = v376;
      *(void *)(v384 + 32) = v385;
      *(void *)(v384 + 40) = v387;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v388 = [v377 mutableString];
      NSString v389 = String._bridgeToObjectiveC()();
      id v390 = [v388 rangeOfString:v389 options:1];
      uint64_t v392 = v391;

      NSAttributedStringKey v393 = v416;
      v394 = v415;
      [v377 addAttribute:v416 value:v415 range:v390];

      swift_bridgeObjectRelease();
      id v395 = specialized static MOSuggestionTheme.Fonts.footnoteEmphFontSmallCaps()();
      id v396 = [v434 mainBundle];
      v397._uint64_t countAndFlagsBits = 0x475641204025;
      v397._object = (void *)0xE600000000000000;
      v398._uint64_t countAndFlagsBits = 0;
      v398._object = (void *)0xE000000000000000;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v397, (Swift::String_optional)0, (NSBundle)v396, v398, v414);

      uint64_t v399 = swift_allocObject();
      *(_OWORD *)(v399 + 16) = v436;
      aBlock = v425;
      uint64_t v438 = v424;
      CharacterSet.init(charactersIn:)();
      uint64_t v400 = StringProtocol.trimmingCharacters(in:)();
      uint64_t v402 = v401;
      ((void (*)(char *, uint64_t))v422)(v371, v431);
      id v403 = v430;
      *(void *)(v399 + 56) = &type metadata for String;
      *(void *)(v399 + 64) = v403;
      *(void *)(v399 + 32) = v400;
      *(void *)(v399 + 40) = v402;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v404 = v433;
      id v405 = [v433 mutableString];
      NSString v406 = String._bridgeToObjectiveC()();
      id v407 = [v405 rangeOfString:v406 options:1];
      uint64_t v409 = v408;

      [v404 addAttribute:v393 value:v395 range:v407];
      uint64_t v410 = swift_bridgeObjectRelease();
      v411 = v435;
      v412 = (void *)((uint64_t (*)(uint64_t))v427)(v410);
      [v412 setAttributedText:v404];

      (*(void (**)(void))((swift_isaMask & *v411) + 0x110))();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    default:
      goto LABEL_71;
  }
}

uint64_t closure #1 in MOSuggestionActivityIconAssetView.makeUIView(imageView:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v36 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MeasurementFormatUnitUsage<NSUnitDuration>);
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FloatingPointFormatStyle<Double>?);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle.UnitWidth);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  __chkstk_darwin(v9);
  NSString v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle);
  uint64_t v33 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitDuration>);
  uint64_t v30 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = [objc_allocWithZone((Class)FIUIFormattingManager) init];
  id v19 = [v18 stringWithDuration:2 durationFormat:*(double *)(a2 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_duration)];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    object = v22;
  }
  else
  {
    id v24 = [self minutes];
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSUnitDuration);
    Measurement.init(value:unit:)();
    static Measurement<>.FormatStyle.UnitWidth.abbreviated.getter();
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for FloatingPointFormatStyle<Double>);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
    static MeasurementFormatUnitUsage.general.getter();
    static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v35);
    outlined destroy of FloatingPointFormatStyle<Double>?((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
    lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type Measurement<NSUnitDuration><>.FormatStyle and conformance Measurement<A><>.FormatStyle, &demangling cache variable for type metadata for Measurement<NSUnitDuration><>.FormatStyle);
    Measurement<>.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v12);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v15);
    uint64_t v41 = v43;
    uint64_t v42 = v44;
    uint64_t v39 = 32;
    unint64_t v40 = 0xE100000000000000;
    uint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
    swift_bridgeObjectRelease();
    Swift::String v26 = String.uppercased()();
    uint64_t countAndFlagsBits = v26._countAndFlagsBits;
    object = v26._object;
    swift_bridgeObjectRelease();
  }
  id v27 = v36;
  *uint64_t v36 = countAndFlagsBits;
  v27[1] = (uint64_t)object;
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MOSuggestionActivityIconAssetView.adjustForFontSizeChanges()()
{
  int v1 = *((unsigned __int8 *)v0 + OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_assignedTileSize);
  id v2 = [v0 traitCollection];
  id v3 = [v2 preferredContentSizeCategory];

  LOBYTE(v2) = static UIContentSizeCategory.> infix(_:_:)();
  if ((v2 & 1) != 0 && (v1 != 8 ? (BOOL v4 = v1 == 6) : (BOOL v4 = 1), v4))
  {
    id v5 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD0))();
    [v5 setNumberOfLines:3];
  }
  else
  {
    id v5 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xD0))();
    [v5 setNumberOfLines:1];
  }
}

Swift::Void __swiftcall MOSuggestionActivityIconAssetView.handleTraitChange()()
{
  (*(void (**)(void))((swift_isaMask & *v0) + 0x110))();
}

void MOSuggestionActivityIconAssetView.init(frame:)()
{
}

id MOSuggestionActivityIconAssetView.__deallocating_deinit()
{
  return MOSuggestionWorkoutsSnowGlobeView.__deallocating_deinit(type metadata accessor for MOSuggestionActivityIconAssetView);
}

id MOSuggestionWorkoutsSnowGlobeView.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

id specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v29 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  NSString v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v12 - 8);
  uint64_t v28 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionWorkoutsSnowGlobeView_iconViews] = _swiftEmptyArrayStorage;
  uint64_t v15 = (objc_class *)type metadata accessor for MOSuggestionWorkoutsSnowGlobeView();
  v31.receiver = v4;
  v31.super_class = v15;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v17 = v16;
  id v18 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a1;
  v20[3] = a2;
  v20[4] = a3;
  v20[5] = a4;
  void v20[6] = v19;
  aBlock[4] = partial apply for closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:);
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_43;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = a2;
  id v23 = a3;
  id v24 = a4;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [String] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();

  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
  return v17;
}

uint64_t type metadata accessor for MOSuggestionWorkoutsSnowGlobeView()
{
  return self;
}

uint64_t sub_100181D10()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100181D48()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:)()
{
  return closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(alreadyRoundedIcons:)(*(void *)(v0 + 16));
}

uint64_t block_copy_helper_36(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_36()
{
  return swift_release();
}

uint64_t type metadata accessor for MOSuggestionWorkoutIconGlyphView()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionActivityIconAssetView()
{
  return self;
}

void specialized MOSuggestionActivityIconAssetView.init(coder:)()
{
  NSString v1 = String._bridgeToObjectiveC()();
  uint64_t v2 = self;
  id v3 = [v2 colorNamed:v1];

  if (!v3) {
    id v3 = [v2 systemBlueColor];
  }
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_distanceBlue] = v3;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 colorNamed:v4];

  if (!v5) {
    id v5 = [v2 systemYellowColor];
  }
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_timeYellow] = v5;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v2 colorNamed:v6];

  if (!v7) {
    id v7 = [v2 systemPinkColor];
  }
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_movePink] = v7;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v2 colorNamed:v8];

  if (!v9) {
    id v9 = [v2 systemRedColor];
  }
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_heartRed] = v9;
  uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_exerciseNameLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.exerciseNameLabel();
  *(void *)&v0[v10] = v11;
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_workoutDataLabel;
  closure #1 in variable initialization expression of MOSuggestionActivityIconAssetView.workoutDataLabel();
  *(void *)&v0[v12] = v13;
  uint64_t v14 = OBJC_IVAR____TtC16MomentsUIService33MOSuggestionActivityIconAssetView_labelStack;
  id v15 = [objc_allocWithZone((Class)UIStackView) init];
  [v15 setAxis:1];
  [v15 setAlignment:1];
  *(void *)&v0[v14] = v15;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100182084()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionActivityIconAssetView.makeUIView(imageView:)()
{
  return closure #1 in MOSuggestionActivityIconAssetView.makeUIView(imageView:)(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001820C4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001820D4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x68))();
  *a2 = result;
  return result;
}

uint64_t sub_100182130(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x70))(*a1);
}

uint64_t sub_100182194@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x80))();
  *a2 = result;
  return result;
}

uint64_t sub_1001821F0(id *a1, void **a2)
{
  id v2 = *a1;
  id v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x88);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_100182258@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x98))();
  *a2 = result;
  return result;
}

uint64_t sub_1001822B4(id *a1, void **a2)
{
  id v2 = *a1;
  id v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xA0);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10018231C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB8))();
  *a2 = result;
  return result;
}

uint64_t sub_100182378(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xC0))(*a1);
}

uint64_t sub_1001823DC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD0))();
  *a2 = result;
  return result;
}

uint64_t sub_100182438(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD8))(*a1);
}

uint64_t sub_10018249C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xE8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001824F8(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0xF0))(*a1);
}

uint64_t sub_100182580()
{
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)()
{
  return closure #1 in MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

void *MOSuggestionSheetPrivacyOverlayView.__allocating_init(frame:clientIdentifier:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  id v13 = objc_allocWithZone(v6);
  return MOSuggestionSheetPrivacyOverlayView.init(frame:clientIdentifier:)(a1, a2, a3, a4, a5, a6);
}

void *MOSuggestionSheetPrivacyOverlayView.init(frame:clientIdentifier:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  *(void *)&v6[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel] = 0;
  uint64_t v11 = &v6[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_currentClientIdentifier];
  *(void *)uint64_t v11 = a1;
  *((void *)v11 + 1) = a2;
  v18.receiver = v6;
  v18.super_class = (Class)type metadata accessor for MOSuggestionSheetPrivacyOverlayView();
  [super initWithFrame:a3, a4, a5, a6];
  id v13 = self;
  uint64_t v14 = v12;
  id v15 = [v13 blackColor];
  id v16 = [v15 colorWithAlphaComponent:0.8];

  [v14 setBackgroundColor:v16];
  (*(void (**)(void))((swift_isaMask & *v14) + 0xA0))(0);

  return v14;
}

uint64_t type metadata accessor for MOSuggestionSheetPrivacyOverlayView()
{
  return self;
}

Swift::Void __swiftcall MOSuggestionSheetPrivacyOverlayView.hide(animated:)(Swift::Bool animated)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  if (animated)
  {
    id v4 = self;
    aBlock[4] = partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.hide(animated:);
    aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_37;
    id v5 = _Block_copy(aBlock);
    id v6 = v1;
    swift_retain();
    swift_release();
    [v4 animateWithDuration:v5 animations:0.2];
    swift_release();
    _Block_release(v5);
  }
  else
  {
    id v7 = [v1 layer];
    [v7 setOpacity:0.0];
    swift_release();
  }
}

uint64_t sub_100182958()
{
  return _swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.hide(animated:)()
{
  closure #1 in MOSuggestionSheetPrivacyOverlayView.hide(animated:)(*(void **)(v0 + 16), 0.0);
}

uint64_t block_copy_helper_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_37()
{
  return swift_release();
}

Swift::Void __swiftcall MOSuggestionSheetPrivacyOverlayView.show(animated:)(Swift::Bool animated)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  if (animated)
  {
    id v4 = self;
    aBlock[4] = partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.show(animated:);
    aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
    aBlock[3] = &block_descriptor_6_3;
    id v5 = _Block_copy(aBlock);
    id v6 = v1;
    swift_retain();
    swift_release();
    [v4 animateWithDuration:v5 animations:0.2];
    swift_release();
    _Block_release(v5);
  }
  else
  {
    id v8 = [v1 layer];
    LODWORD(v7) = 1.0;
    [v8 setOpacity:v7];
    swift_release();
  }
}

void closure #1 in MOSuggestionSheetPrivacyOverlayView.hide(animated:)(void *a1, float a2)
{
  id v4 = [a1 layer];
  *(float *)&double v3 = a2;
  [v4 setOpacity:v3];
}

void partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.show(animated:)()
{
  closure #1 in MOSuggestionSheetPrivacyOverlayView.hide(animated:)(*(void **)(v0 + 16), 1.0);
}

Swift::Void __swiftcall MOSuggestionSheetPrivacyOverlayView.updateClientLabel()()
{
  NSString v1 = v0;
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_currentClientIdentifier];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_currentClientIdentifier
                    + 8];
  id v4 = objc_allocWithZone((Class)LSApplicationRecord);
  swift_bridgeObjectRetain();
  id v5 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v3, v2, 1);
  id v6 = v5;
  if (v5)
  {
    id v7 = [v5 localizedName];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  id v11 = [self mainScreen];
  [v11 scale];
  double v13 = v12;

  id v14 = [objc_allocWithZone((Class)ISImageDescriptor) initWithSize:350.0 scale:350.0 v13];
  id v15 = (void *)swift_allocObject();
  v15[2] = v1;
  v15[3] = v8;
  v15[4] = v10;
  id v16 = objc_allocWithZone((Class)ISIcon);
  swift_bridgeObjectRetain();
  id v17 = v1;
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [v16 initWithBundleIdentifier:v18];

  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel();
  *(void *)(v20 + 24) = v15;
  aBlock[4] = partial apply for closure #1 in MOSuggestionAssetAppIconProvider.getAssetFor(bundleIdentifier:completion:);
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
  aBlock[3] = &block_descriptor_15_2;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v19 getCGImageForImageDescriptor:v14 completion:v21];
  _Block_release(v21);

  swift_release();
}

uint64_t closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  double v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for OS_dispatch_queue();
  id v14 = (void *)static OS_dispatch_queue.main.getter();
  id v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  aBlock[4] = partial apply for closure #1 in closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel();
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_26;
  id v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v17 = a1;
  id v18 = a2;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v20);
}

void closure #1 in closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()(void *a1, void *a2, uint64_t a3, NSString a4)
{
  if (a1)
  {
    id v6 = a1;
    id v20 = [v6 content];
    id v7 = [objc_allocWithZone((Class)UIImageView) initWithImage:v20];
    uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView;
    uint64_t v9 = *(void **)((char *)a2 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView);
    *(void *)((char *)a2 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView) = v7;

    id v10 = [objc_allocWithZone((Class)UILabel) init];
    uint64_t v11 = OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel;
    uint64_t v12 = *(void **)((char *)a2 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel);
    *(void *)((char *)a2 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel) = v10;

    double v13 = *(void **)((char *)a2 + v11);
    if (v13)
    {
      id v14 = v13;
      if (a4) {
        a4 = String._bridgeToObjectiveC()();
      }
      [v13 setText:a4];
    }
    id v15 = *(void **)((char *)a2 + v8);
    if (v15)
    {
      id v16 = *(void **)((char *)a2 + v11);
      if (v16)
      {
        id v17 = v15;
        id v18 = v16;
        [a2 addSubview:v17];
        id v19 = [a2 addSubview:v18];
        (*(void (**)(id))((swift_isaMask & *a2) + 0xB8))(v19);
      }
    }
  }
}

Swift::Void __swiftcall MOSuggestionSheetPrivacyOverlayView.layoutIconAndLabels()()
{
  NSString v1 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel);
    if (v2)
    {
      id v3 = v1;
      id v4 = v2;
      [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v5 = [v3 heightAnchor];
      id v6 = [v5 constraintEqualToConstant:35.0];

      [v6 setActive:1];
      id v7 = [v3 widthAnchor];
      id v8 = [v7 constraintEqualToConstant:35.0];

      [v8 setActive:1];
      id v9 = [v3 superview];
      if (v9)
      {
        id v10 = v9;
        [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v11 = [v3 leadingAnchor];
        id v12 = [v10 leadingAnchor];
        id v13 = [v11 constraintEqualToAnchor:v12];

        [v13 setConstant:25.0];
        id v14 = v13;
        [v14 setActive:1];
      }
      id v15 = [v3 superview];
      if (v15)
      {
        id v16 = v15;
        [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v17 = [v3 topAnchor];
        id v18 = [v16 topAnchor];
        id v19 = [v17 constraintEqualToAnchor:v18];

        [v19 setConstant:60.0];
        id v20 = v19;
        [v20 setActive:1];
      }
      [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v21 = [v4 topAnchor];
      id v22 = [v3 topAnchor];
      id v23 = [v21 constraintEqualToAnchor:v22];

      [v23 setActive:1];
      id v24 = [v4 bottomAnchor];
      id v25 = [v3 bottomAnchor];
      id v26 = [v24 constraintEqualToAnchor:v25];

      [v26 setActive:1];
      id v27 = [v4 leadingAnchor];
      id v28 = [v3 trailingAnchor];
      id v29 = [v27 constraintEqualToAnchor:v28 constant:10.0];

      [v29 setActive:1];
      id v30 = [v4 superview];
      if (v30)
      {
        objc_super v31 = v30;
        [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v32 = [v4 trailingAnchor];
        id v33 = [v31 trailingAnchor];
        id v34 = [v32 constraintEqualToAnchor:v33];

        [v34 setConstant:25.0];
        id v35 = v34;
        [v35 setActive:1];
      }
      id v36 = [self whiteColor];
      [v4 setTextColor:v36];
    }
  }
}

void MOSuggestionSheetPrivacyOverlayView.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientIconView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService35MOSuggestionSheetPrivacyOverlayView_clientLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void MOSuggestionSheetPrivacyOverlayView.init(frame:)()
{
}

id MOSuggestionSheetPrivacyOverlayView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetPrivacyOverlayView();
  return [super dealloc];
}

uint64_t sub_1001839D8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()(void *a1)
{
  return closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100183A24()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100183A5C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void partial apply for closure #1 in closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()()
{
  closure #1 in closure #1 in MOSuggestionSheetPrivacyOverlayView.updateClientLabel()(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(NSString *)(v0 + 40));
}

void *MOSuggestionCarouselAssetCell.checkPlatterViewMargin.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselAssetCell.checkPlatterViewMargin;
}

long long *MOSuggestionCarouselAssetCell.checkPlatterViewSize.unsafeMutableAddressor()
{
  if (one-time initialization token for checkPlatterViewSize != -1) {
    swift_once();
  }
  return &static MOSuggestionCarouselAssetCell.checkPlatterViewSize;
}

void *MOSuggestionCarouselAssetCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCarouselAssetCell.reuseIdentifier;
}

unint64_t static MOSuggestionCarouselAssetCell.reuseIdentifier.getter()
{
  return 0xD00000000000001DLL;
}

double static MOSuggestionCarouselAssetCell.checkPlatterViewSize.getter()
{
  if (one-time initialization token for checkPlatterViewSize != -1) {
    swift_once();
  }
  return *(double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize;
}

uint64_t MOSuggestionCarouselAssetCell.assetViewModel.getter()
{
  return swift_retain();
}

uint64_t MOSuggestionCarouselAssetCell.assetViewModel.setter(uint64_t a1)
{
  id v3 = (void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetViewModel);
  swift_beginAccess();
  *id v3 = a1;
  swift_retain();
  uint64_t v4 = swift_release();
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0xF0))(v4);
  return swift_release();
}

uint64_t (*MOSuggestionCarouselAssetCell.assetViewModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionCarouselAssetCell.assetViewModel.modify;
}

uint64_t MOSuggestionCarouselAssetCell.assetViewModel.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(a1 + 24)) + 0xF0))(result);
  }
  return result;
}

void *MOSuggestionCarouselAssetCell.keyColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor);
  swift_beginAccess();
  objc_super v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionCarouselAssetCell.keyColor.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  id v6 = *v3;
  if (*v3)
  {
    id v7 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView);
    if (v7)
    {
      id v8 = *(void (**)(id))((swift_isaMask & *v7) + 0x88);
      id v9 = v6;
      id v10 = v7;
      v8(v9);

      id v5 = v10;
    }
  }
}

void (*MOSuggestionCarouselAssetCell.keyColor.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return MOSuggestionCarouselAssetCell.keyColor.modify;
}

void MOSuggestionCarouselAssetCell.keyColor.modify(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    id v5 = *(void **)(v4 + v3[4]);
    if (v5)
    {
      id v6 = *(void **)(v4 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView);
      if (v6)
      {
        id v7 = *(void (**)(id))((swift_isaMask & *v6) + 0x88);
        id v8 = v5;
        id v9 = v6;
        v7(v8);
      }
    }
  }

  free(v3);
}

id MOSuggestionCarouselAssetCell.isSelected.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  return [super isSelected];
}

uint64_t type metadata accessor for MOSuggestionCarouselAssetCell()
{
  return self;
}

void MOSuggestionCarouselAssetCell.isSelected.setter(char a1)
{
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  [super setSelected:a1 & 1];
  id v3 = *(void **)&v1[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView];
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v1 isSelected];
    (*(void (**)(id))((swift_isaMask & *v4) + 0xA0))(v5);
  }
}

Swift::Void __swiftcall MOSuggestionCarouselAssetCell.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  [super layoutSubviews];
  id v1 = *(id *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView];
  [v0 bounds];
  [v1 setFrame:];
}

Swift::Void __swiftcall MOSuggestionCarouselAssetCell.setAssetViewModel()()
{
  id v1 = *(uint64_t (**)(void))((swift_isaMask & *v0) + 0xA8);
  uint64_t v2 = v1();
  if (v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 808))(1);
    swift_release();
  }
  uint64_t v4 = *(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView);
  uint64_t v3 = v1();
  (*(void (**)(uint64_t))((swift_isaMask & *v4) + 0xA0))(v3);
}

void MOSuggestionCarouselAssetCell.addSelectButton()()
{
  if (one-time initialization token for checkPlatterViewSize != -1) {
    swift_once();
  }
  id v1 = [objc_allocWithZone((Class)type metadata accessor for CanvasAssetAccessoryView()) initWithFrame:0.0, 0.0, static MOSuggestionSheetMosaicCell.checkPlatterViewSize];
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView] = v1;

  uint64_t v4 = *(void **)&v0[v2];
  if (v4)
  {
    id v24 = v4;
    [v24 setUserInteractionEnabled:0];
    [v0 addSubview:v24];
    if (one-time initialization token for checkPlatterViewSize != -1) {
      swift_once();
    }
    double v5 = *(double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize;
    [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v24 widthAnchor];
    id v7 = [v6 constraintEqualToConstant:v5];

    [v7 setActive:1];
    double v8 = *((double *)&static MOSuggestionCarouselAssetCell.checkPlatterViewSize + 1);
    [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v9 = [v24 heightAnchor];
    id v10 = [v9 constraintEqualToConstant:v8];

    [v10 setActive:1];
    id v11 = [v24 superview];
    id v12 = v24;
    if (v11)
    {
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v13 = [v24 bottomAnchor];
      id v14 = [v11 bottomAnchor];
      id v15 = [v13 constraintEqualToAnchor:v14];

      if (v15)
      {
        [v15 setConstant:-8.0];
        id v16 = v15;
        [v16 setActive:1];
      }
      id v12 = v24;
    }
    id v17 = [v12 superview];
    if (v17)
    {
      id v18 = v17;
      [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v19 = [v24 trailingAnchor];
      id v20 = [v18 trailingAnchor];
      id v21 = [v19 constraintEqualToAnchor:v20];

      [v21 setConstant:-8.0];
      id v22 = v21;
      [v22 setActive:1];
    }
    id v23 = [v0 isSelected];
    (*(void (**)(id))((swift_isaMask & *v24) + 0x70))(v23);
  }
}

Swift::Void __swiftcall MOSuggestionCarouselAssetCell.prepareForReuse()()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  [super prepareForReuse];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView];
  uint64_t v2 = *(void (**)(void))((swift_isaMask & *v1) + 0xC8);
  uint64_t v3 = v1;
  v2();
}

id MOSuggestionCarouselAssetCell.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  return [super dealloc];
}

char *specialized MOSuggestionCarouselAssetCell.init(frame:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_blurEffectView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetViewModel] = 0;
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView;
  type metadata accessor for MOSuggestionSheetAssetView();
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  *(void *)&v3[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor] = 0;

  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  v24.receiver = v3;
  v24.super_class = (Class)type metadata accessor for MOSuggestionCarouselAssetCell();
  id v7 = [(char *)[super initWithFrame:CGRectZero.origin.x, y, width, height]];
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView];
  id v9 = v7;
  [v9 addSubview:v8];
  id v10 = self;
  id v11 = v9;
  id v12 = [v10 clearColor];
  [v11 setBackgroundColor:v12];

  [v11 setClipsToBounds:0];
  id v13 = [v11 layer];
  [v13 setCornerRadius:11.0];

  MOSuggestionCarouselAssetCell.addSelectButton()();
  id v14 = [v11 layer];
  id v15 = [v10 blackColor];
  id v16 = [v15 CGColor];

  [v14 setShadowColor:v16];
  id v17 = [v11 layer];
  LODWORD(v18) = 1036831949;
  [v17 setShadowOpacity:v18];

  id v19 = [v11 layer];
  [v19 setShadowOffset:0.0, 2.0];

  id v20 = [v11 layer];
  [v20 setShadowRadius:4.0];

  id v21 = [v11 layer];
  [v21 setCornerCurve:kCACornerCurveContinuous];

  id v22 = [v11 layer];
  [v22 setShadowPathIsBounds:1];

  return v11;
}

void specialized MOSuggestionCarouselAssetCell.init(coder:)()
{
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_checkPlatterView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_blurEffectView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetViewModel] = 0;
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_assetView;
  type metadata accessor for MOSuggestionSheetAssetView();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService29MOSuggestionCarouselAssetCell_keyColor] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100184DCC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xA8))();
  *a2 = result;
  return result;
}

uint64_t sub_100184E28(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xB0);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_100184E8C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_100184EE8(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xE0);
  id v4 = *a1;
  return v3(v2);
}

double MOSuggestionPickerBadgeIconView.C1_1.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_1);
}

double MOSuggestionPickerBadgeIconView.C1_2.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_2);
}

id MOSuggestionPickerBadgeIconView.suggestionsImageView.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView));
}

id MOSuggestionPickerBadgeIconView.privacyImageView.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView);
}

Swift::Void __swiftcall MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay()()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v19 = *(void *)(v4 - 8);
  uint64_t v20 = v4;
  __chkstk_darwin(v4);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v18 - v12;
  type metadata accessor for OS_dispatch_queue();
  id v14 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  double v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, v7);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v0;
  aBlock[4] = partial apply for closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay();
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  aBlock[3] = &block_descriptor_38;
  id v16 = _Block_copy(aBlock);
  id v17 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  v18(v13, v7);
}

void closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay()(char *a1)
{
  double v2 = *(double *)&a1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_1];
  double v3 = *(double *)&a1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_1 + 8];
  double v4 = *(double *)&a1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_2];
  double v5 = *(double *)&a1[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_2 + 8];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = 2097408;
  id v7 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v11[4] = partial apply for closure #1 in closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay();
  v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = thunk for @escaping @callee_guaranteed () -> ();
  v11[3] = &block_descriptor_6_4;
  uint64_t v8 = _Block_copy(v11);
  uint64_t v9 = a1;
  swift_release();
  id v10 = [v7 initWithDuration:v8 controlPoint1:0.5 controlPoint2:v2 animations:v3, v4, v5];
  _Block_release(v8);
  [v10 startAnimation];
}

id MOSuggestionPickerBadgeIconView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionPickerBadgeIconView();
  return [super dealloc];
}

char *specialized MOSuggestionPickerBadgeIconView.init(frame:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_1];
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  *(void *)uint64_t v1 = v2;
  *((void *)v1 + 1) = v3;
  double v4 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_2];
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  *(void *)double v4 = v5;
  *((void *)v4 + 1) = v6;
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView;
  uint64_t v8 = v0;
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = self;
  id v11 = [v10 imageNamed:v9];

  id v12 = [objc_allocWithZone((Class)UIImageView) initWithImage:v11];
  *(void *)&v0[v7] = v12;
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v10 imageNamed:v14];

  id v16 = [objc_allocWithZone((Class)UIImageView) initWithImage:v15];
  *(void *)&v8[v13] = v16;

  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  v30.receiver = v8;
  v30.super_class = (Class)type metadata accessor for MOSuggestionPickerBadgeIconView();
  uint64_t v20 = (char *)objc_msgSendSuper2(&v30, "initWithFrame:", CGRectZero.origin.x, y, width, height);
  uint64_t v21 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView;
  id v22 = *(void **)&v20[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView];
  id v23 = v20;
  [v22 setAutoresizingMask:18];
  id v24 = v22;
  [v23 bounds];
  [v24 setFrame:];

  [v23 addSubview:*(void *)&v20[v21]];
  uint64_t v25 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView;
  id v26 = *(void **)&v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView];
  [v26 setAutoresizingMask:18];
  id v27 = v26;
  [v23 bounds];
  [v27 setFrame:];

  id v28 = *(void **)&v23[v25];
  [v28 setHidden:1];
  [v23 addSubview:v28];

  return v23;
}

void specialized MOSuggestionPickerBadgeIconView.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_1];
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  *(void *)uint64_t v1 = v2;
  *((void *)v1 + 1) = v3;
  double v4 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_C1_2];
  MOSuggestionInterstitialExpandableListViewCellConstants.init()();
  *(void *)double v4 = v5;
  *((void *)v4 + 1) = v6;
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView;
  NSString v8 = String._bridgeToObjectiveC()();
  NSString v9 = self;
  id v10 = [v9 imageNamed:v8];

  id v11 = [objc_allocWithZone((Class)UIImageView) initWithImage:v10];
  *(void *)&v0[v7] = v11;
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v9 imageNamed:v13];

  id v15 = [objc_allocWithZone((Class)UIImageView) initWithImage:v14];
  *(void *)&v0[v12] = v15;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100185958()
{
  return _swift_deallocObject(v0, 24, 7);
}

void partial apply for closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay()()
{
  closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay()(*(char **)(v0 + 16));
}

uint64_t block_copy_helper_38(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_38()
{
  return swift_release();
}

uint64_t type metadata accessor for MOSuggestionPickerBadgeIconView()
{
  return self;
}

uint64_t sub_1001859D4()
{
  return _swift_deallocObject(v0, 32, 7);
}

id partial apply for closure #1 in closure #1 in MOSuggestionPickerBadgeIconView.flipToPrivacyIconAfterDelay()()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = self;
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_suggestionsImageView);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionPickerBadgeIconView_privacyImageView);

  return [v3 transitionFromView:v4 toView:v5 duration:v1 options:0 completion:0.5];
}

long long *NewEntryHeaderConstants.HEADER_LABEL.unsafeMutableAddressor()
{
  if (one-time initialization token for HEADER_LABEL != -1) {
    swift_once();
  }
  return &static NewEntryHeaderConstants.HEADER_LABEL;
}

void static NewEntryHeaderConstants.HEADER_FONT.getter()
{
  uint64_t v0 = self;
  id v1 = [v0 preferredFontForTextStyle:UIFontTextStyleTitle3];
  id v2 = [v1 fontDescriptor];
  id v3 = [v2 fontDescriptorWithSymbolicTraits:2];

  if (v3)
  {
    [v0 fontWithDescriptor:v3 size:0.0];
  }
  else
  {
    __break(1u);
  }
}

void *MOSuggestionCollectionViewBlankEntrySectionHeaderView.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewBlankEntrySectionHeaderView.reuseIdentifier;
}

void *MOSuggestionCollectionViewOnboardingSectionHeaderView.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewOnboardingSectionHeaderView.reuseIdentifier;
}

void *NewEntryHeaderConstants.HORIZONTAL_MARGIN.unsafeMutableAddressor()
{
  return &static NewEntryHeaderConstants.HORIZONTAL_MARGIN;
}

double static NewEntryHeaderConstants.HORIZONTAL_MARGIN.getter()
{
  return 24.0;
}

void *NewEntryHeaderConstants.SEGMENTED_CONTROL_TOP_PADDING.unsafeMutableAddressor()
{
  return &static NewEntryHeaderConstants.SEGMENTED_CONTROL_TOP_PADDING;
}

void *NewEntryHeaderConstants.BUTTON_HEIGHT.unsafeMutableAddressor()
{
  return &static NewEntryHeaderConstants.BUTTON_HEIGHT;
}

double static NewEntryHeaderConstants.BUTTON_HEIGHT.getter()
{
  return 44.0;
}

void one-time initialization function for HEADER_LABEL()
{
  id v0 = [self mainBundle];
  v4._uint64_t countAndFlagsBits = 0xD000000000000045;
  v4._object = (void *)0x80000001001EA340;
  v1._object = (void *)0x80000001001EA320;
  v1._uint64_t countAndFlagsBits = 0xD000000000000017;
  v2._uint64_t countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  Swift::String v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  static NewEntryHeaderConstants.HEADER_LABEL = (__int128)v3;
}

uint64_t static NewEntryHeaderConstants.HEADER_LABEL.getter()
{
  if (one-time initialization token for HEADER_LABEL != -1) {
    swift_once();
  }
  uint64_t v0 = static NewEntryHeaderConstants.HEADER_LABEL;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t static MOSuggestionCollectionViewBlankEntrySectionHeaderView.reuseIdentifier.getter()
{
  return 0xD000000000000035;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.segmentedDelegate.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.segmentedDelegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2
                + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_segmentedDelegate);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_unknownObjectRelease();
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.segmentedDelegate.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.getter(&OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryDelegate, a1);
}

uint64_t outlined init with copy of MOSuggestionSheetNewEntryButtonDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetNewEntryButtonDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.setter(a1, &OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryDelegate);
}

uint64_t outlined assign with take of MOSuggestionSheetNewEntryButtonDelegate?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetNewEntryButtonDelegate?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipShown.getter()
{
  Swift::String v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipShown);
  swift_beginAccess();
  return *v1;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipShown.setter(char a1)
{
  Swift::String v3 = (unsigned char *)(v1
               + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipShown);
  uint64_t result = swift_beginAccess();
  *Swift::String v3 = a1;
  return result;
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipShown.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.headerLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setNumberOfLines:2];
  [v0 setAdjustsFontSizeToFitWidth:1];
  [v0 setAdjustsFontForContentSizeCategory:1];
  uint64_t v1 = self;
  id v2 = [v1 preferredFontForTextStyle:UIFontTextStyleTitle3];
  id v3 = [v2 fontDescriptor];
  id v4 = [v3 fontDescriptorWithSymbolicTraits:2];

  if (v4)
  {
    id v5 = [v1 fontWithDescriptor:v4 size:0.0];

    [v0 setFont:v5];
    if (one-time initialization token for HEADER_LABEL != -1) {
      swift_once();
    }
    NSString v6 = String._bridgeToObjectiveC()();
    [v0 setText:v6];

    [v0 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];
    [v0 setHidden:1];
  }
  else
  {
    __break(1u);
  }
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.suggestionSegmentedControl()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<Any>);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1001DA390;
  uint64_t v1 = self;
  id v2 = [v1 mainBundle];
  v17._object = (void *)0xEB00000000646564;
  v3._uint64_t countAndFlagsBits = 0x6E656D6D6F636552;
  v3._object = (void *)0xEB00000000646564;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0x6E656D6D6F636552;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v17);

  *(void *)(v0 + 56) = &type metadata for String;
  *(Swift::String *)(v0 + 32) = v5;
  id v6 = [v1 mainBundle];
  v18._object = (void *)0xE600000000000000;
  v7._uint64_t countAndFlagsBits = 0x746E65636552;
  v7._object = (void *)0xE600000000000000;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v18._uint64_t countAndFlagsBits = 0x746E65636552;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v18);

  *(void *)(v0 + 88) = &type metadata for String;
  *(Swift::String *)(v0 + 64) = v9;
  id v10 = objc_allocWithZone((Class)UISegmentedControl);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithItems:isa];

  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  NSString v13 = self;
  id v14 = v12;
  id v15 = [v13 secondarySystemBackgroundColor];
  [v14 setBackgroundColor:v15];

  [v14 setSelectedSegmentIndex:0];
  [v14 setHidden:1];
  return v14;
}

void MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.didset()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView;
  if (*(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView])
  {
    Swift::String v3 = self;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:isa];

    Swift::String v5 = *(void **)&v1[v2];
    if (v5)
    {
      id v6 = v5;
      [v6 removeFromSuperview];
      Swift::String v7 = *(void **)&v1[v2];
      *(void *)&v1[v2] = 0;
    }
    [v1 setNeedsLayout];
  }
  Swift::String v8 = &v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel];
  swift_beginAccess();
  if (*(void *)v8)
  {
    type metadata accessor for MOSuggestionPrivacyTipCell();
    id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    swift_retain();
    id v10 = [v9 init];
    id v11 = *(void (**)(uint64_t))((swift_isaMask & *v10) + 0x88);
    uint64_t v12 = swift_retain();
    v11(v12);
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v10 setHidden:1];
    NSString v13 = *(void **)&v1[v2];
    *(void *)&v1[v2] = v10;
    swift_release();
  }
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.getter()
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.getter();
}

{
  swift_beginAccess();
  return swift_retain();
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.setter(a1, &OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel, (void (*)(uint64_t))MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.didset);
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify(uint64_t a1, char a2)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify(a1, a2, (uint64_t (*)(uint64_t))MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.didset);
}

void MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.didset()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView;
  if (*(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView])
  {
    Swift::String v3 = self;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:isa];

    Swift::String v5 = *(void **)&v1[v2];
    if (v5)
    {
      id v6 = v5;
      [v6 removeFromSuperview];
      Swift::String v7 = *(void **)&v1[v2];
      *(void *)&v1[v2] = 0;
    }
    [v1 setNeedsLayout];
  }
  Swift::String v8 = &v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel];
  swift_beginAccess();
  if (*(void *)v8)
  {
    type metadata accessor for MOSuggestionSheetStateOfMindTipCell();
    id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    swift_retain();
    id v10 = [v9 init];
    id v11 = *(void (**)(uint64_t))((swift_isaMask & *v10) + 0x80);
    uint64_t v12 = swift_retain();
    v11(v12);
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v10 setHidden:1];
    NSString v13 = *(void **)&v1[v2];
    *(void *)&v1[v2] = v10;
    id v14 = v10;

    [v1 setNeedsLayout];
    swift_release();
  }
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.getter()
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.getter();
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.setter(a1, &OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel, (void (*)(uint64_t))MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.didset);
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.setter(uint64_t a1, void *a2, void (*a3)(uint64_t))
{
  id v6 = (void *)(v3 + *a2);
  swift_beginAccess();
  void *v6 = a1;
  swift_retain();
  uint64_t v7 = swift_release();
  a3(v7);
  return swift_release();
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.modify;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.modify(uint64_t a1, char a2)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify(a1, a2, (uint64_t (*)(uint64_t))MOSuggestionCollectionViewBlankEntrySectionHeaderView.stateOfMindTipModel.didset);
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.modify(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.usePublicUI.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_usePublicUI);
  swift_beginAccess();
  return *v1;
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.usePublicUI.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1
               + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_usePublicUI);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*MOSuggestionCollectionViewBlankEntrySectionHeaderView.usePublicUI.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.setPublicUI(_:)(Swift::Bool a1)
{
  if (((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x198))() & 1) != a1)
  {
    if (a1) {
      MOSuggestionCollectionViewBlankEntrySectionHeaderView.set3PConstraints()();
    }
    else {
      MOSuggestionCollectionViewBlankEntrySectionHeaderView.set1PConstraints()();
    }
    (*(void (**)(Swift::Bool))((swift_isaMask & *v1) + 0x1A0))(a1);
    [v1 setNeedsLayout];
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.activateTipConstraints()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView];
  if (v1)
  {
    uint64_t v2 = v0;
    id v3 = v1;
    [v0 addSubview:v3];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1001DA110;
    id v5 = [v3 topAnchor];
    id v6 = [*(id *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl] bottomAnchor];
    id v7 = [v5 constraintEqualToAnchor:v6 constant:24.0];

    *(void *)(v4 + 32) = v7;
    id v8 = [v3 bottomAnchor];
    id v9 = [v2 bottomAnchor];
    id v10 = [v8 constraintLessThanOrEqualToAnchor:v9];

    *(void *)(v4 + 40) = v10;
    id v11 = [v3 leadingAnchor];
    id v12 = [v2 leadingAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12 constant:0.0];

    *(void *)(v4 + 48) = v13;
    id v14 = [v3 trailingAnchor];
    id v15 = [v2 trailingAnchor];
    id v16 = [v14 constraintEqualToAnchor:v15 constant:0.0];

    *(void *)(v4 + 56) = v16;
    specialized Array._endMutation()();
    *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipConstraints] = v4;
    swift_bridgeObjectRelease();
    Swift::String v17 = self;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v17 activateConstraints:isa];
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.activatePrivacyTipConstraints()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView];
  if (v1)
  {
    uint64_t v2 = v0;
    id v3 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v0) + 0xF0);
    uint64_t v20 = v1;
    if (v3())
    {
      Class v4 = v20;
    }
    else
    {
      [v0 addSubview:v20];
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1001DA110;
      id v6 = [(objc_class *)v20 topAnchor];
      id v7 = [*(id *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl] bottomAnchor];
      id v8 = [v6 constraintEqualToAnchor:v7 constant:24.0];

      *(void *)(v5 + 32) = v8;
      id v9 = [(objc_class *)v20 bottomAnchor];
      id v10 = [v2 bottomAnchor];
      id v11 = [v9 constraintLessThanOrEqualToAnchor:v10];

      *(void *)(v5 + 40) = v11;
      id v12 = [(objc_class *)v20 leadingAnchor];
      id v13 = [v2 leadingAnchor];
      id v14 = [v12 constraintEqualToAnchor:v13 constant:0.0];

      *(void *)(v5 + 48) = v14;
      id v15 = [(objc_class *)v20 trailingAnchor];
      id v16 = [v2 trailingAnchor];
      id v17 = [v15 constraintEqualToAnchor:v16 constant:0.0];

      *(void *)(v5 + 56) = v17;
      specialized Array._endMutation()();
      *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipConstraints] = v5;
      swift_bridgeObjectRelease();
      Swift::String v18 = self;
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v18 activateConstraints:isa];

      Class v4 = isa;
    }
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.updateSelectedSegment(withSegment:)(MomentsUIService::SegmentType withSegment)
{
  char v2 = withSegment & 1;
  id v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(unsigned char *)(v4 + 24) = v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = partial apply for closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.updateSelectedSegment(withSegment:);
  *(void *)(v5 + 24) = v4;
  v9[4] = partial apply for thunk for @escaping @callee_guaranteed () -> ();
  v9[5] = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = thunk for @escaping @callee_guaranteed () -> ();
  v9[3] = &block_descriptor_39;
  id v6 = _Block_copy(v9);
  id v7 = v1;
  swift_retain();
  swift_release();
  [v3 performWithoutAnimation:v6];
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
}

void MOSuggestionCollectionViewBlankEntrySectionHeaderView.set1PConstraints()()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains;
  unint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4)
  {
    uint64_t v5 = self;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 deactivateConstraints:isa];

    *(void *)((char *)v1 + v2) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton;
  [v1 addSubview:*(void *)((char *)v1+ OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton)];
  id v8 = *(void **)((char *)v1
                + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel);
  [v1 addSubview:v8];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1001DA530;
  id v10 = [*(id *)((char *)v1 + v7) topAnchor];
  uint64_t v50 = (char *)v2;
  id v11 = [v1 topAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v9 + 32) = v12;
  id v13 = [*(id *)((char *)v1 + v7) centerXAnchor];
  id v14 = [v1 centerXAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v9 + 40) = v15;
  id v16 = [*(id *)((char *)v1 + v7) heightAnchor];
  id v17 = [v16 constraintEqualToConstant:44.0];

  *(void *)(v9 + 48) = v17;
  id v18 = [*(id *)((char *)v1 + v7) leadingAnchor];
  id v19 = [v1 leadingAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19 constant:24.0];

  *(void *)(v9 + 56) = v20;
  id v21 = [*(id *)((char *)v1 + v7) trailingAnchor];
  id v22 = [v1 trailingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22 constant:-24.0];

  *(void *)(v9 + 64) = v23;
  id v24 = [v8 topAnchor];
  id v25 = [*(id *)((char *)v1 + v7) bottomAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25 constant:24.0];

  *(void *)(v9 + 72) = v26;
  id v27 = [v8 leadingAnchor];
  id v28 = [v1 leadingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28 constant:24.0];

  *(void *)(v9 + 80) = v29;
  id v30 = [v8 trailingAnchor];
  id v31 = [v1 trailingAnchor];
  id v32 = [v30 constraintLessThanOrEqualToAnchor:v31];

  *(void *)(v9 + 88) = v32;
  uint64_t v33 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  id v34 = [*(id *)((char *)v1+ OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl) topAnchor];
  id v35 = [v8 bottomAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35 constant:8.0];

  *(void *)(v9 + 96) = v36;
  id v37 = [*(id *)((char *)v1 + v33) centerXAnchor];
  id v38 = [v1 centerXAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v9 + 104) = v39;
  id v40 = [*(id *)((char *)v1 + v33) bottomAnchor];
  id v41 = [v1 bottomAnchor];
  id v42 = [v40 constraintLessThanOrEqualToAnchor:v41];

  *(void *)(v9 + 112) = v42;
  id v43 = [*(id *)((char *)v1 + v33) leadingAnchor];
  id v44 = [v1 leadingAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 constant:24.0];

  *(void *)(v9 + 120) = v45;
  id v46 = [*(id *)((char *)v1 + v33) trailingAnchor];
  id v47 = [v1 trailingAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47 constant:-24.0];

  *(void *)(v9 + 128) = v48;
  specialized Array._endMutation()();
  *(void *)&v50[(void)v1] = v9;
  swift_bridgeObjectRelease();
  id v49 = self;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  swift_bridgeObjectRetain();
  Class v51 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v49 activateConstraints:v51];
}

void MOSuggestionCollectionViewBlankEntrySectionHeaderView.set3PConstraints()()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains;
  unint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v4)
  {
    uint64_t v5 = self;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 deactivateConstraints:isa];

    *(void *)&v1[v2] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
  }
  [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton] removeFromSuperview];
  [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel] removeFromSuperview];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1001DBD90;
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  id v9 = [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl] topAnchor];
  id v10 = [v1 topAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v7 + 32) = v11;
  id v12 = [*(id *)&v1[v8] centerXAnchor];
  id v13 = [v1 centerXAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v7 + 40) = v14;
  id v15 = [*(id *)&v1[v8] bottomAnchor];
  id v16 = [v1 bottomAnchor];
  id v17 = [v15 constraintLessThanOrEqualToAnchor:v16];

  *(void *)(v7 + 48) = v17;
  id v18 = [*(id *)&v1[v8] leadingAnchor];
  id v19 = [v1 leadingAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19 constant:24.0];

  *(void *)(v7 + 56) = v20;
  id v21 = [*(id *)&v1[v8] trailingAnchor];
  id v22 = [v1 trailingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22 constant:-24.0];

  *(void *)(v7 + 64) = v23;
  specialized Array._endMutation()();
  *(void *)&v1[v2] = v7;
  swift_bridgeObjectRelease();
  id v24 = self;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  swift_bridgeObjectRetain();
  Class v25 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v24 activateConstraints:v25];
}

uint64_t sub_100187E00()
{
  return _swift_deallocObject(v0, 25, 7);
}

id partial apply for closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.updateSelectedSegment(withSegment:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  [*(id *)(v1+ OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl) setSelectedSegmentIndex:v2];
  uint64_t v4 = *(void **)(v1 + v3);

  return [v4 layoutIfNeeded];
}

uint64_t sub_100187E90()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_39()
{
  return swift_release();
}

char *MOSuggestionCollectionViewBlankEntrySectionHeaderView.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = &v4[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_segmentedDelegate];
  *id v9 = 0;
  v9[1] = 0;
  id v10 = &v4[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryDelegate];
  *(_OWORD *)id v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  v4[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipShown] = 0;
  uint64_t v11 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel;
  id v12 = v4;
  closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.headerLabel();
  *(void *)&v4[v11] = v13;
  uint64_t v14 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  *(void *)&v12[v14] = closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.suggestionSegmentedControl();
  uint64_t v15 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton;
  type metadata accessor for MOSuggestionSheetNewEntryButton();
  *(void *)&v12[v15] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel] = 0;
  *(void *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel] = 0;
  v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_usePublicUI] = 0;
  *(void *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains] = _swiftEmptyArrayStorage;
  *(void *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipConstraints] = _swiftEmptyArrayStorage;

  v22.receiver = v12;
  v22.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView();
  id v16 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v17 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  uint64_t v18 = *(void *)&v16[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl];
  id v19 = v16;
  [v19 addSubview:v18];
  uint64_t v20 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton;
  [*(id *)&v19[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton] addTarget:v19 action:"pressedNewEntryButton" forControlEvents:64];
  [*(id *)&v16[v17] addTarget:v19 action:"pressedSegmentControl" forControlEvents:4096];
  [*(id *)&v19[v20] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v19[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel] setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v16[v17] setTranslatesAutoresizingMaskIntoConstraints:0];
  MOSuggestionCollectionViewBlankEntrySectionHeaderView.set1PConstraints()();

  return v19;
}

uint64_t type metadata accessor for MOSuggestionSheetNewEntryButton()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView()
{
  return self;
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.pressedSegmentControl()()
{
  id v1 = [*(id *)((char *)v0+ OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl) selectedSegmentIndex];
  if (v1)
  {
    if (v1 != (id)1) {
      return;
    }
    uint64_t v2 = 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xC0))())
  {
    uint64_t v4 = v3;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, void, uint64_t, uint64_t))(v4 + 8))(v2, 0, 0, ObjectType, v4);
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.pressedNewEntryButton()()
{
  (*(void (**)(void *__return_ptr))((swift_isaMask & *v0) + 0xD8))(aBlock);
  if (v10)
  {
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)aBlock, (uint64_t)v6);
    outlined destroy of MOSuggestionSheetNewEntryButtonDelegate?((uint64_t)aBlock);
    uint64_t v1 = v7;
    uint64_t v2 = v8;
    __swift_project_boxed_opaque_existential_1(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    outlined destroy of MOSuggestionSheetNewEntryButtonDelegate?((uint64_t)aBlock);
  }
  id v3 = [objc_allocWithZone((Class)MOPromptManager) init];
  NSString v4 = String._bridgeToObjectiveC()();
  uint64_t v11 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  uint64_t v12 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed Error?) -> ();
  id v10 = &block_descriptor_7_0;
  uint64_t v5 = _Block_copy(aBlock);
  [v3 triggerFeedbackAssistantFlow:v4 handler:v5];
  _Block_release(v5);
}

id MOSuggestionCollectionViewBlankEntrySectionHeaderView.__deallocating_deinit()
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.__deallocating_deinit(type metadata accessor for MOSuggestionCollectionViewBlankEntrySectionHeaderView);
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.shouldUpdateHeader(newEntryButtonOnly:)(Swift::Bool newEntryButtonOnly)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  id v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = newEntryButtonOnly;
  aBlock[4] = partial apply for closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.shouldUpdateHeader(newEntryButtonOnly:);
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  void aBlock[3] = &block_descriptor_16;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  lazy protocol witness table accessor for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [DispatchWorkItemFlags] and conformance [A]();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.shouldUpdateHeader(newEntryButtonOnly:)(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl));

    [v5 setHidden:a2 & 1];
  }
  swift_beginAccess();
  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    id v8 = objc_retain(*(id *)(v6
                           + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel));

    [v8 setHidden:a2 & 1];
  }
  swift_beginAccess();
  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (v9)
  {
    id v10 = (void *)v9;
    uint64_t v11 = *(void **)(v9
                   + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView);
    id v12 = v11;

    if (v11)
    {
      [v12 setHidden:a2 & 1];
    }
  }
  swift_beginAccess();
  uint64_t v13 = swift_unknownObjectWeakLoadStrong();
  if (v13)
  {
    uint64_t v14 = (void *)v13;
    uint64_t v15 = *(void **)(v13
                   + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView);
    id v16 = v15;

    if (v15)
    {
      [v16 setHidden:a2 & 1];
    }
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.showTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  if (tipType == MomentsUIService_MOSuggestionTipType_stateOfMind)
  {
    (*(void (**)(void))((swift_isaMask & *v1) + 0x1B8))();
  }
  else if (tipType == MomentsUIService_MOSuggestionTipType_privacy)
  {
    (*(void (**)(void))((swift_isaMask & *v1) + 0x1C0))();
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewBlankEntrySectionHeaderView.removeTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  if (tipType == MomentsUIService_MOSuggestionTipType_stateOfMind)
  {
    id v5 = self;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v5 deactivateConstraints:isa];

    uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView;
  }
  else
  {
    if (tipType != MomentsUIService_MOSuggestionTipType_privacy) {
      return;
    }
    uint64_t v2 = self;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    swift_bridgeObjectRetain();
    Class v3 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v2 deactivateConstraints:v3];

    uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView;
  }
  uint64_t v7 = (void **)&v1[v4];
  id v8 = *(void **)&v1[v4];
  if (v8)
  {
    id v9 = v8;
    [v9 removeFromSuperview];
    id v10 = *v7;
    *uint64_t v7 = 0;
  }

  [v1 setNeedsLayout];
}

unint64_t static MOSuggestionCollectionViewOnboardingSectionHeaderView.reuseIdentifier.getter()
{
  return 0xD000000000000035;
}

uint64_t MOSuggestionCollectionViewOnboardingSectionHeaderView.newEntryDelegate.getter@<X0>(uint64_t a1@<X8>)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.getter(&OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryDelegate, a1);
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return outlined init with copy of MOSuggestionSheetNewEntryButtonDelegate?(v4, a2);
}

uint64_t MOSuggestionCollectionViewOnboardingSectionHeaderView.newEntryDelegate.setter(uint64_t a1)
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.setter(a1, &OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryDelegate);
}

uint64_t MOSuggestionCollectionViewBlankEntrySectionHeaderView.newEntryDelegate.setter(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  outlined assign with take of MOSuggestionSheetNewEntryButtonDelegate?(a1, v4);
  return swift_endAccess();
}

uint64_t (*MOSuggestionCollectionViewOnboardingSectionHeaderView.newEntryDelegate.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewOnboardingSectionHeaderView.onboardingTipModel.getter()
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.privacyTipModel.getter();
}

uint64_t MOSuggestionCollectionViewOnboardingSectionHeaderView.onboardingTipModel.setter(uint64_t a1)
{
  Class v3 = (void *)(v1
                + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipModel);
  swift_beginAccess();
  *Class v3 = a1;
  swift_retain();
  swift_release();
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView;
  id v5 = *(void **)(v1
                + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView);
  if (v5)
  {
    id v6 = v5;
    [v6 removeFromSuperview];
    uint64_t v7 = *(void **)(v1 + v4);
    *(void *)(v1 + v4) = 0;
  }
  if (*v3)
  {
    uint64_t v8 = swift_retain();
    MOSuggestionCollectionViewOnboardingSectionHeaderView.setupOnboardingTip(tipModel:)(v8);
    swift_release();
  }
  return swift_release();
}

void (*MOSuggestionCollectionViewOnboardingSectionHeaderView.onboardingTipModel.modify(void *a1))(void **a1, char a2)
{
  Class v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipModel;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return MOSuggestionCollectionViewOnboardingSectionHeaderView.onboardingTipModel.modify;
}

void MOSuggestionCollectionViewOnboardingSectionHeaderView.onboardingTipModel.modify(void **a1, char a2)
{
  Class v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView;
    id v6 = *(void **)(v4
                  + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView);
    if (v6)
    {
      id v7 = v6;
      [v7 removeFromSuperview];
      uint64_t v8 = *(void **)(v4 + v5);
      *(void *)(v4 + v5) = 0;

      uint64_t v4 = v3[3];
    }
    if (*(void *)(v4 + v3[4]))
    {
      uint64_t v9 = swift_retain();
      MOSuggestionCollectionViewOnboardingSectionHeaderView.setupOnboardingTip(tipModel:)(v9);
      swift_release();
    }
  }

  free(v3);
}

Swift::Void __swiftcall MOSuggestionCollectionViewOnboardingSectionHeaderView.setPublicUI(_:)(Swift::Bool a1)
{
  [*(id *)&v1[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton] setHidden:a1];

  [v1 setNeedsDisplay];
}

char *MOSuggestionCollectionViewOnboardingSectionHeaderView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = &v4[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryDelegate];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton;
  type metadata accessor for MOSuggestionSheetNewEntryButton();
  id v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  *(void *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v12[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipModel] = 0;

  v35.receiver = v12;
  v35.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewOnboardingSectionHeaderView();
  uint64_t v13 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v14 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton;
  uint64_t v15 = *(void *)&v13[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton];
  id v16 = v13;
  [v16 addSubview:v15];
  [*(id *)&v13[v14] addTarget:v16 action:"pressedNewEntryButton" forControlEvents:64];
  uint64_t v17 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1001DBD90;
  id v19 = [*(id *)&v13[v14] centerXAnchor];
  id v20 = [v16 centerXAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v18 + 32) = v21;
  id v22 = [*(id *)&v13[v14] heightAnchor];
  id v23 = [v22 constraintEqualToConstant:44.0];

  *(void *)(v18 + 40) = v23;
  id v24 = [*(id *)&v13[v14] topAnchor];
  id v25 = [v16 topAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25];

  *(void *)(v18 + 48) = v26;
  id v27 = [*(id *)&v13[v14] leadingAnchor];
  id v28 = [v16 leadingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28 constant:24.0];

  *(void *)(v18 + 56) = v29;
  id v30 = [*(id *)&v13[v14] trailingAnchor];
  id v31 = [v16 trailingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31 constant:-24.0];

  *(void *)(v18 + 64) = v32;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 activateConstraints:isa];

  return v16;
}

uint64_t MOSuggestionCollectionViewOnboardingSectionHeaderView.setupOnboardingTip(tipModel:)(uint64_t a1)
{
  uint64_t v2 = v1;
  type metadata accessor for MOSuggestionSheetOnboardingTipCell();
  uint64_t v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v5 = *(void (**)(uint64_t))((swift_isaMask & *v4) + 0x60);
  uint64_t v6 = swift_retain();
  v5(v6);
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v7 = *(void **)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView];
  *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView] = v4;
  uint64_t v8 = v4;

  LODWORD(v7) = *(unsigned __int8 *)(a1 + 32);
  id v9 = [v8 topAnchor];
  if (v7 == 1)
  {
    id v10 = [v2 topAnchor];
    id v11 = [v9 constraintEqualToAnchor:v10 constant:12.0];
  }
  else
  {
    id v10 = [*(id *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton] bottomAnchor];
    id v11 = [v9 constraintEqualToAnchor:v10 constant:24.0];
  }
  id v12 = v11;

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001DA110;
  *(void *)(v13 + 32) = v12;
  id v14 = v12;
  id v15 = [v8 bottomAnchor];
  id v16 = [v2 bottomAnchor];
  id v17 = [v15 constraintLessThanOrEqualToAnchor:v16];

  *(void *)(v13 + 40) = v17;
  id v18 = [v8 leadingAnchor];
  id v19 = [v2 leadingAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v13 + 48) = v20;
  id v21 = [v8 trailingAnchor];
  id v22 = [v2 trailingAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v13 + 56) = v23;
  specialized Array._endMutation()();
  *(void *)&v2[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipConstraints] = v13;

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MOSuggestionCollectionViewOnboardingSectionHeaderView.activateOnboardingConstraints()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView];
  if (v1)
  {
    id v2 = v1;
    [v0 addSubview:v2];
    Class v3 = self;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 activateConstraints:isa];
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewOnboardingSectionHeaderView.pressedNewEntryButton()()
{
  (*(void (**)(void *__return_ptr))((swift_isaMask & *v0) + 0x78))(v6);
  if (v6[3])
  {
    outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v6, (uint64_t)v3);
    outlined destroy of MOSuggestionSheetNewEntryButtonDelegate?((uint64_t)v6);
    uint64_t v1 = v4;
    uint64_t v2 = v5;
    __swift_project_boxed_opaque_existential_1(v3, v4);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    outlined destroy of MOSuggestionSheetNewEntryButtonDelegate?((uint64_t)v6);
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewOnboardingSectionHeaderView.removeTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  if (tipType == MomentsUIService_MOSuggestionTipType_onboarding)
  {
    uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView;
    Class v3 = *(void **)(v1
                  + OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView);
    if (v3)
    {
      id v4 = v3;
      [v4 removeFromSuperview];
      id v5 = *(id *)(v1 + v2);
      *(void *)(v1 + v2) = 0;
    }
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewOnboardingSectionHeaderView.showTip(tipType:)(MomentsUIService::MOSuggestionTipType tipType)
{
  if (tipType == MomentsUIService_MOSuggestionTipType_onboarding) {
    (*(void (**)(void))((swift_isaMask & *v1) + 0x108))();
  }
}

id MOSuggestionCollectionViewOnboardingSectionHeaderView.__deallocating_deinit()
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.__deallocating_deinit(type metadata accessor for MOSuggestionCollectionViewOnboardingSectionHeaderView);
}

uint64_t protocol witness for MOSuggestionCollectionViewBlankEntrySectionHeaderViewDelegate.shouldUpdateHeader(newEntryButtonOnly:) in conformance MOSuggestionCollectionViewOnboardingSectionHeaderView()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x120))();
}

uint64_t protocol witness for MOSuggestionCollectionViewBlankEntrySectionHeaderViewDelegate.showTip(tipType:) in conformance MOSuggestionCollectionViewOnboardingSectionHeaderView()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x128))();
}

uint64_t protocol witness for MOSuggestionCollectionViewBlankEntrySectionHeaderViewDelegate.removeTip(tipType:) in conformance MOSuggestionCollectionViewOnboardingSectionHeaderView()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x118))();
}

id MOSuggestionSheetNewEntryButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for MOSuggestionSheetNewEntryButton();
  [super initWithFrame:a1, a2, a3, a4];
  MOSuggestionSheetNewEntryButton.sharedInit()();

  return v9;
}

id MOSuggestionSheetNewEntryButton.init(coder:)(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for MOSuggestionSheetNewEntryButton();
  [super initWithCoder:a1];
  id v4 = v3;
  if (v3)
  {
    id v5 = v3;
    MOSuggestionSheetNewEntryButton.sharedInit()();
  }
  return v4;
}

uint64_t MOSuggestionSheetNewEntryButton.sharedInit()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UIButton.Configuration?);
  __chkstk_darwin(v0 - 8);
  id v45 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  __chkstk_darwin(v2);
  id v41 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  id v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for AttributedString?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for UIButton.Configuration();
  uint64_t v9 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  objc_super v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = self;
  id v13 = [v12 preferredFontForTextStyle:UIFontTextStyleHeadline];
  id v14 = [self configurationWithFont:v13];

  NSString v15 = String._bridgeToObjectiveC()();
  id v39 = [self systemImageNamed:v15 withConfiguration:v14];

  static UIButton.Configuration.filled()();
  id v16 = self;
  id v17 = [v16 systemIndigoColor];
  id v18 = [v16 systemIndigoColor];
  id v19 = [v18 colorWithAlphaComponent:0.15];

  id v20 = [self mainBundle];
  v47._uint64_t countAndFlagsBits = 0xD000000000000019;
  v47._object = (void *)0x80000001001EA2B0;
  v21._uint64_t countAndFlagsBits = 0x72746E452077654ELL;
  v21._object = (void *)0xE900000000000079;
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v47);

  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(NSAttributedStringKey, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DA390;
  *(void *)(inited + 32) = NSFontAttributeName;
  id v24 = NSFontAttributeName;
  id v25 = [v12 preferredFontForTextStyle:UIFontTextStyleHeadline];
  uint64_t v26 = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
  *(void *)(inited + 40) = v25;
  *(void *)(inited + 64) = v26;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  *(void *)(inited + 104) = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  *(void *)(inited + 80) = v17;
  id v27 = NSForegroundColorAttributeName;
  id v28 = v17;
  id v29 = v39;
  id v30 = v28;
  specialized Dictionary.init(dictionaryLiteral:)(inited);
  AttributeContainer.init(_:)();
  AttributedString.init(_:attributes:)();
  uint64_t v31 = type metadata accessor for AttributedString();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v8, 0, 1, v31);
  UIButton.Configuration.attributedTitle.setter();
  (*(void (**)(char *, void, uint64_t))(v42 + 104))(v41, enum case for UIButton.Configuration.CornerStyle.large(_:), v43);
  UIButton.Configuration.cornerStyle.setter();
  if (v29) {
    id v32 = [v29 imageWithTintColor:v30 renderingMode:1];
  }
  UIButton.Configuration.image.setter();
  id v33 = v19;
  UIButton.Configuration.baseBackgroundColor.setter();
  id v34 = v46;
  [v46 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v36 = v44;
  objc_super v35 = v45;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v45, v11, v44);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v35, 0, 1, v36);
  UIButton.configuration.setter();
  [v34 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v36);
}

id MOSuggestionSheetNewEntryButton.__deallocating_deinit()
{
  return MOSuggestionCollectionViewBlankEntrySectionHeaderView.__deallocating_deinit(type metadata accessor for MOSuggestionSheetNewEntryButton);
}

id MOSuggestionCollectionViewBlankEntrySectionHeaderView.__deallocating_deinit(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

void specialized MOSuggestionCollectionViewBlankEntrySectionHeaderView.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_segmentedDelegate];
  *uint64_t v1 = 0;
  v1[1] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryDelegate];
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((void *)v2 + 4) = 0;
  v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipShown] = 0;
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_headerLabel;
  closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.headerLabel();
  *(void *)&v0[v3] = v4;
  uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_suggestionSegmentedControl;
  *(void *)&v0[v5] = closure #1 in variable initialization expression of MOSuggestionCollectionViewBlankEntrySectionHeaderView.suggestionSegmentedControl();
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_newEntryButton;
  type metadata accessor for MOSuggestionSheetNewEntryButton();
  *(void *)&v0[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipModel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipModel] = 0;
  v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_usePublicUI] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_layoutConstrains] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_privacyTipConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewBlankEntrySectionHeaderView_stateOfMindTipConstraints] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t outlined destroy of MOSuggestionSheetNewEntryButtonDelegate?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionSheetNewEntryButtonDelegate?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10018A504()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018A53C()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void partial apply for closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.shouldUpdateHeader(newEntryButtonOnly:)()
{
  closure #1 in MOSuggestionCollectionViewBlankEntrySectionHeaderView.shouldUpdateHeader(newEntryButtonOnly:)(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t type metadata accessor for MOSuggestionCollectionViewOnboardingSectionHeaderView()
{
  return self;
}

void specialized MOSuggestionCollectionViewOnboardingSectionHeaderView.init(coder:)()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryDelegate];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_newEntryButton;
  type metadata accessor for MOSuggestionSheetNewEntryButton();
  *(void *)&v0[v2] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService53MOSuggestionCollectionViewOnboardingSectionHeaderView_onboardingTipModel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10018A670@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC0))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10018A6CC(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0xC8);
  uint64_t v4 = swift_unknownObjectRetain();
  return v3(v4, v2);
}

uint64_t sub_10018A740(void **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
}

uint64_t sub_10018A794(uint64_t a1, void **a2)
{
  outlined init with copy of MOSuggestionSheetNewEntryButtonDelegate?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))((swift_isaMask & **a2) + 0xE0))(v4);
}

uint64_t sub_10018A800@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10018A860(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0xF8))(*a1);
}

uint64_t sub_10018A8B8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x150))();
  *a2 = result;
  return result;
}

uint64_t sub_10018A91C(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x158);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_10018A988@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x180))();
  *a2 = result;
  return result;
}

uint64_t sub_10018A9EC(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x188);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_10018AA58@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x198))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_10018AAC0(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0x1A0))(*a1);
}

uint64_t sub_10018AB20(void **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x78))();
}

uint64_t sub_10018AB74(uint64_t a1, void **a2)
{
  outlined init with copy of MOSuggestionSheetNewEntryButtonDelegate?(a1, (uint64_t)v4);
  return (*(uint64_t (**)(unsigned char *))((swift_isaMask & **a2) + 0x80))(v4);
}

uint64_t sub_10018ABE0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xD8))();
  *a2 = result;
  return result;
}

uint64_t sub_10018AC3C(uint64_t a1, void **a2)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0xE0);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

ValueMetadata *type metadata accessor for NewEntryHeaderConstants()
{
  return &type metadata for NewEntryHeaderConstants;
}

uint64_t specialized RangeReplaceableCollection<>.removeLast()(uint64_t a1)
{
  uint64_t v2 = v1[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    if ((*v1 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if ((v2 & 0xF00000000000000) == 0)
  {
    __break(1u);
    return String.remove(at:)(a1);
  }
LABEL_5:
  a1 = String.index(before:)();

  return String.remove(at:)(a1);
}

Swift::String __swiftcall String.init(combinedIdentifiersFrom:)(Swift::OpaquePointer combinedIdentifiersFrom)
{
  uint64_t v1 = *((void *)combinedIdentifiersFrom._rawValue + 2);
  if (v1 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v1)
    {
      uint64_t v2 = (char *)combinedIdentifiersFrom._rawValue + 40;
      do
      {
        Swift::String v8 = *(Swift::String *)(v2 - 8);
        swift_bridgeObjectRetain_n();
        v3._uint64_t countAndFlagsBits = 38;
        v3._object = (void *)0xE100000000000000;
        String.append(_:)(v3);
        swift_bridgeObjectRelease();
        String.append(_:)(v8);
        swift_bridgeObjectRelease();
        v2 += 16;
        --v1;
      }
      while (v1);
    }
    uint64_t v4 = swift_bridgeObjectRelease();
    specialized RangeReplaceableCollection<>.removeLast()(v4);
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = String.init<A>(_:)();
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

int64_t MOSuggestionInterstitialListAssetViewModel.__allocating_init(photoAssets:)(unint64_t a1)
{
  uint64_t v149 = type metadata accessor for MOSuggestionSheetAssetDateRange(0);
  uint64_t v148 = *(void *)(v149 - 8);
  uint64_t v3 = __chkstk_darwin(v149);
  uint64_t v150 = (uint64_t)&v131 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v155 = (uint64_t)&v131 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v6 - 8);
  Swift::String v8 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for Date();
  uint64_t v9 = *(char **)(v158 - 8);
  __chkstk_darwin(v158);
  id v151 = (char *)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v11 = (void *)(a1 >> 62);
  if (a1 >> 62) {
    goto LABEL_116;
  }
  int64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v12 < 1) {
    goto LABEL_117;
  }
LABEL_3:
  id v161 = v11;
  id v159 = v9;
  id v156 = v8;
  id v141 = v1;
  uint64_t v167 = (uint64_t)_swiftEmptyArrayStorage;
  specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, v12, 0);
  uint64_t v9 = 0;
  objc_super v11 = (void *)v167;
  unint64_t v163 = a1 & 0xC000000000000001;
  unint64_t v162 = a1;
  do
  {
    if (v163) {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v13 = *(id *)(a1 + 8 * (void)v9 + 32);
    }
    id v14 = v13;
    id v15 = [v13 identifier];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    uint64_t v171 = v16;
    uint64_t v172 = v18;
    *(void *)&long long v164 = 35;
    *((void *)&v164 + 1) = 0xE100000000000000;
    Swift::String v8 = (char *)lazy protocol witness table accessor for type String and conformance String();
    uint64_t v1 = &v171;
    id v19 = (void *)StringProtocol.components<A>(separatedBy:)();
    if (!v19[2])
    {
      __break(1u);
LABEL_116:
      swift_bridgeObjectRetain();
      int64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v12 < 1) {
        goto LABEL_117;
      }
      goto LABEL_3;
    }
    uint64_t v20 = v19[4];
    uint64_t v21 = v19[5];
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v167 = (uint64_t)v11;
    unint64_t v23 = v11[2];
    unint64_t v22 = v11[3];
    if (v23 >= v22 >> 1)
    {
      specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, v23 + 1, 1);
      objc_super v11 = (void *)v167;
    }
    ++v9;
    v11[2] = v23 + 1;
    id v24 = &v11[2 * v23];
    v24[4] = v20;
    v24[5] = v21;
    a1 = v162;
  }
  while ((char *)v12 != v9);
  Swift::String v25 = String.init(combinedIdentifiersFrom:)((Swift::OpaquePointer)v11);
  unint64_t v169 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v170 = (unint64_t)_swiftEmptyArrayStorage;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain();
  uint64_t v154 = v27;
  id v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    id v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v30 = 134217984;
    a1 = v162;
    uint64_t v171 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "[MOSuggestionInterstitialListAssetViewModel.photoAssets] Processing count=%ld", v30, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  if (v161)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  object = v25._object;
  uint64_t countAndFlagsBits = v25._countAndFlagsBits;
  if (!v31)
  {
    LODWORD(v161) = 26;
    id v153 = _swiftEmptyArrayStorage;
    id v152 = _swiftEmptyArrayStorage;
LABEL_98:
    swift_bridgeObjectRelease();
    unint64_t v117 = v169;
    if (v169 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v118 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v118 = *(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    LOBYTE(a1) = (_BYTE)v161;
    if (v118)
    {
      if ((v117 & 0xC000000000000001) != 0) {
        goto LABEL_122;
      }
      if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v118 = *(void *)(v117 + 32);
        swift_retain();
        goto LABEL_104;
      }
      __break(1u);
      goto LABEL_124;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_107:
    swift_bridgeObjectRelease();
LABEL_117:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v31 < 1) {
    goto LABEL_121;
  }
  int64_t v12 = 0;
  uint64_t v157 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v159 + 56);
  id v143 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48);
  id v134 = (void (**)(char *, uint64_t, uint64_t))(v159 + 32);
  id v133 = (void (**)(uint64_t, char *, uint64_t))(v159 + 16);
  id v132 = (void (**)(char *, uint64_t))(v159 + 8);
  LODWORD(v161) = 26;
  id v159 = (char *)&type metadata for Any + 8;
  long long v142 = xmmword_1001DA0F0;
  long long v131 = xmmword_1001DA250;
  id v153 = _swiftEmptyArrayStorage;
  id v152 = _swiftEmptyArrayStorage;
  uint64_t v160 = v31;
  while (2)
  {
    if (v163) {
      id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v33 = *(id *)(a1 + 8 * v12 + 32);
    }
    id v34 = v33;
    id v35 = [v33 assetType:v131];
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;
    if (v36 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v38 == v39) {
      goto LABEL_41;
    }
    char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v41)
    {
LABEL_42:
      uint64_t v52 = (void *)MOSuggestionAssetsTypePhoto;
      goto LABEL_43;
    }
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;
    if (v42 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v44 == v45)
    {
LABEL_41:
      swift_bridgeObjectRelease_n();
      goto LABEL_42;
    }
    char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v47) {
      goto LABEL_42;
    }
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;
    if (v48 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v50 == v51) {
      goto LABEL_41;
    }
    char v88 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v52 = v35;
    if (v88) {
      goto LABEL_42;
    }
LABEL_43:
    id v53 = v52;

    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v56 = v55;
    if (v54 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v56 == v57)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0)
      {
        [v34 contentClassType];
        uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
        if (ObjCClassMetadata != type metadata accessor for MOSuggestionGenericFallBackInfo())
        {
          id v61 = Logger.logObject.getter();
          os_log_type_t v62 = static os_log_type_t.error.getter();
          BOOL v63 = os_log_type_enabled(v61, v62);
          uint64_t v32 = v160;
          if (v63)
          {
            id v64 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v64 = 0;
            _os_log_impl((void *)&_mh_execute_header, v61, v62, "[MOSuggestionInterstitialListAssetViewModel.photoAssets] Mismatched init for asset type", v64, 2u);
            swift_slowDealloc();
          }

LABEL_25:
          if (v32 == ++v12) {
            goto LABEL_98;
          }
          continue;
        }
      }
    }
    break;
  }
  unint64_t v65 = specialized MOSuggestionAssetVisualSubType.init(assetType:mediaType:motionActivityType:)([v34 assetType], 0, 1, 0);
  uint64_t v66 = v65;
  int v67 = (int)v161;
  if (v161 == 26) {
    int v67 = v65;
  }
  LODWORD(v161) = v67;
  id v68 = [v34 metadata];
  uint64_t v69 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v70 = specialized _dictionaryDownCastConditional<A, B, C, D>(_:)(v69);
  swift_bridgeObjectRelease();
  if (!v70) {
    goto LABEL_23;
  }
  if (v66 == 26)
  {
    swift_bridgeObjectRelease();
LABEL_23:

    goto LABEL_24;
  }
  id v71 = [v34 content];
  self;
  uint64_t v72 = swift_dynamicCastObjCClass();
  if (!v72)
  {
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    goto LABEL_24;
  }
  if (!*(void *)(v70 + 16))
  {
    long long v165 = 0u;
    long long v164 = 0u;
LABEL_69:
    outlined destroy of Any?((uint64_t)&v164, &demangling cache variable for type metadata for Any?);
    uint64_t v77 = (uint64_t)v156;
    (*v157)(v156, 1, 1, v158);
    goto LABEL_70;
  }
  uint64_t v73 = v72;
  id v74 = MOSuggestionAssetMetadataKeyPhotoTakenDate;
  uint64_t v75 = specialized __RawDictionaryStorage.find<A>(_:)(v74);
  if (v76)
  {
    outlined init with copy of Any(*(void *)(v70 + 56) + 32 * v75, (uint64_t)&v164);
  }
  else
  {
    long long v165 = 0u;
    long long v164 = 0u;
  }

  if (!*((void *)&v165 + 1)) {
    goto LABEL_69;
  }
  uint64_t v77 = (uint64_t)v156;
  uint64_t v78 = v158;
  int v79 = swift_dynamicCast();
  Swift::String v80 = *v157;
  (*v157)((char *)v77, v79 ^ 1u, 1, v78);
  if ((*v143)(v77, 1, v78) == 1)
  {
LABEL_70:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    outlined destroy of Any?(v77, (uint64_t *)&demangling cache variable for type metadata for Date?);
    goto LABEL_71;
  }
  id v146 = v71;
  Swift::String v81 = v151;
  uint64_t v82 = v158;
  (*v134)(v151, v77, v158);
  uint64_t v83 = v155;
  (*v133)(v155, v81, v82);
  v80((char *)(v83 + *(int *)(v149 + 20)), 1, 1, v82);
  uint64_t v144 = MOSuggestionAssetVisualSubType.singularLocalizedString.getter(v66);
  uint64_t v145 = v84;
  if (*(void *)(v70 + 16))
  {
    id v85 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
    uint64_t v86 = specialized __RawDictionaryStorage.find<A>(_:)(v85);
    if (v87)
    {
      outlined init with copy of Any(*(void *)(v70 + 56) + 32 * v86, (uint64_t)&v164);
    }
    else
    {
      long long v165 = 0u;
      long long v164 = 0u;
    }
  }
  else
  {
    long long v165 = 0u;
    long long v164 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v165 + 1))
  {
    type metadata accessor for MOSuggestionAssetPhotoCropRect();
    if (swift_dynamicCast())
    {
      uint64_t v89 = v167;
      [(id)v167 cgRect];
      char v94 = 0;
      goto LABEL_82;
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v164, &demangling cache variable for type metadata for Any?);
  }
  uint64_t v89 = 0;
  char v94 = 1;
  uint64_t v90 = 0;
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  uint64_t v93 = 0;
LABEL_82:
  uint64_t v171 = v90;
  uint64_t v172 = v91;
  uint64_t v173 = v92;
  uint64_t v174 = v93;
  char v175 = v94;
  type metadata accessor for MOSuggestionSheetImage();
  swift_allocObject();
  swift_unknownObjectRetain();
  a1 = MOSuggestionSheetImage.init(image:associatedTintColor:associatedBackgroundColor:tileBackgroundColor:shouldBeRounded:squareCrop:extraMargin:)(v73, 0, 0, 0, 0, (uint64_t)&v171, 0, 1);
  id v95 = [v34 identifier];
  uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v98 = v97;

  *(void *)&long long v164 = v96;
  *((void *)&v164 + 1) = v98;
  uint64_t v167 = 35;
  unint64_t v168 = 0xE100000000000000;
  uint64_t v99 = (void *)StringProtocol.components<A>(separatedBy:)();
  if (v99[2])
  {
    id v139 = (void *)v89;
    uint64_t v100 = v99[5];
    uint64_t v136 = v99[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionSheetAssetDateRange>);
    unint64_t v101 = (*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80);
    uint64_t v138 = *(void *)(v148 + 72);
    uint64_t v102 = swift_allocObject();
    *(_OWORD *)(v102 + 16) = v142;
    unint64_t v137 = v101;
    outlined init with copy of MOSuggestionSheetAssetDateRange(v155, v102 + v101);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v103 = swift_allocObject();
    *(_OWORD *)(v103 + 16) = v142;
    uint64_t v104 = v145;
    *(void *)(v103 + 32) = v144;
    *(void *)(v103 + 40) = v104;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v105 = swift_allocObject();
    *(_OWORD *)(v105 + 16) = v131;
    *(void *)(v105 + 32) = a1;
    *(void *)&long long v164 = v105;
    specialized Array._endMutation()();
    uint64_t v135 = v164;
    type metadata accessor for MOSuggestionInterstitialListAssetViewModel();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_retain();
    MOSuggestionInterstitialListAssetViewModel.init(id:subViewModels:topLevelGroupHeading:dates:titles:icons:assetVisualSubType:selectable:isLoadingPlaceHolder:isFallback:)(v136, v100, 0, 0, 0, v102, v103, v135, v66, 1, 0, 0);
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v106 = v144;
    }
    else
    {
      uint64_t v106 = v144;
      id v152 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v152[2] + 1, 1, v152);
    }
    unint64_t v108 = v152[2];
    unint64_t v107 = v152[3];
    unint64_t v109 = v139;
    if (v108 >= v107 >> 1) {
      id v152 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v107 > 1), v108 + 1, 1, v152);
    }
    uint64_t v110 = v152;
    v152[2] = v108 + 1;
    id v111 = &v110[2 * v108];
    uint64_t v112 = v145;
    v111[4] = v106;
    v111[5] = v112;
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v169 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    outlined init with copy of MOSuggestionSheetAssetDateRange(v155, v150);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v153 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v153[2] + 1, 1, (unint64_t)v153);
    }
    uint64_t v113 = v138;
    unint64_t v115 = v153[2];
    unint64_t v114 = v153[3];
    if (v115 >= v114 >> 1) {
      id v153 = (void *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v114 > 1, v115 + 1, 1, (unint64_t)v153);
    }
    id v116 = v153;
    v153[2] = v115 + 1;
    outlined init with take of MOSuggestionSheetAssetDateRange(v150, (uint64_t)v116 + v137 + v115 * v113);

    swift_unknownObjectRelease();
    swift_release();
    swift_release();

    outlined destroy of MOSuggestionSheetAssetDateRange(v155);
    (*v132)(v151, v158);
LABEL_71:
    a1 = v162;
LABEL_24:
    uint64_t v32 = v160;
    goto LABEL_25;
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  uint64_t v118 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_104:
  swift_bridgeObjectRelease();
  if (a1 == 26)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_107;
  }
  HIBYTE(v130) = 0;
  *(_WORD *)((char *)&v130 + 1) = 1;
  LOBYTE(v130) = a1;
  int64_t v12 = ((uint64_t (*)(uint64_t, void *, void, void, void, void, void, void, int))v141[43])(countAndFlagsBits, object, 0, 0, 0, 0, 0, 0, v130);
  unint64_t v117 = v170;
  if (v170 >> 62)
  {
LABEL_124:
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v128 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v128 >= 2) {
      goto LABEL_110;
    }
    goto LABEL_114;
  }
  uint64_t v119 = *(void *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  if (v119 >= 2)
  {
LABEL_110:
    if ((v117 & 0x8000000000000000) != 0 || (v117 & 0x4000000000000000) != 0)
    {
      unint64_t v129 = swift_bridgeObjectRetain();
      uint64_t v120 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v129);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v120 = v117 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    *(void *)&long long v164 = v120;
    specialized MutableCollection<>.sort(by:)((uint64_t *)&v164);
    swift_bridgeObjectRelease();
    uint64_t v121 = v164;
    swift_beginAccess();
    *(void *)(v12 + 16) = v121;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  uint64_t v122 = MOSuggestionInterstitialListAssetViewModel._groupAssetTypeAndCountDescription(with:)(0);
  uint64_t v124 = v123;
  swift_beginAccess();
  *(void *)(v12 + 24) = v122;
  *(void *)(v12 + 32) = v124;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v12 + 48) = v152;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v125 = swift_allocObject();
  *(_OWORD *)(v125 + 16) = xmmword_1001DA250;
  *(void *)(v125 + 32) = v118;
  uint64_t v166 = v125;
  specialized Array._endMutation()();
  uint64_t v126 = v166;
  swift_beginAccess();
  *(void *)(v12 + 56) = v126;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v12 + 40) = v153;
  swift_release();
  swift_bridgeObjectRelease();
  return v12;
}

const char *String.MULTI_ID_SEPERATOR.unsafeMutableAddressor()
{
  return "&";
}

uint64_t static String.MULTI_ID_SEPERATOR.getter()
{
  return 38;
}

unint64_t type metadata accessor for MOSuggestionAssetPhotoCropRect()
{
  unint64_t result = lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect;
  if (!lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetPhotoCropRect);
  }
  return result;
}

uint64_t property wrapper backing initializer of MOSecureWindow.controller()
{
  return Published.init(initialValue:)();
}

uint64_t key path getter for MOSecureWindow.controller : MOSecureWindow@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
  *a2 = result;
  return result;
}

uint64_t key path setter for MOSecureWindow.controller : MOSecureWindow(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x68))(*a1);
}

uint64_t MOSecureWindow.controller.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10018C4C8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
  *a2 = result;
  return result;
}

uint64_t sub_10018C524(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x68))(*a1);
}

uint64_t MOSecureWindow.controller.setter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return static Published.subscript.setter();
}

void (*MOSecureWindow.controller.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = static Published.subscript.modify();
  return MOAngelControllerWrapper.isVisible.modify;
}

uint64_t key path setter for MOSecureWindow.$controller : MOSecureWindow(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>.Publisher);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  return (*(uint64_t (**)(char *))((swift_isaMask & **a2) + 0x80))(v6);
}

uint64_t MOSecureWindow.$controller.getter()
{
  return swift_endAccess();
}

uint64_t MOSecureWindow.$controller.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>.Publisher);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>);
  Published.projectedValue.setter();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*MOSecureWindow.$controller.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>.Publisher);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow__controller;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>);
  Published.projectedValue.getter();
  swift_endAccess();
  return MOAngelControllerWrapper.$isVisible.modify;
}

uint64_t MOSecureWindow.clientConnectionId.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of UUID?(v1 + OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow_clientConnectionId, a1);
}

void *MOSecureWindow.__allocating_init(windowScene:session:clientConnection:)(void *a1, void *a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return MOSecureWindow.init(windowScene:session:clientConnection:)(a1, a2, a3);
}

void *MOSecureWindow.init(windowScene:session:clientConnection:)(void *a1, void *a2, uint64_t a3)
{
  uint64_t v45 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = &v3[OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow__controller];
  id v14 = objc_allocWithZone((Class)type metadata accessor for MOAngelControllerWrapper());
  id v15 = v3;
  id v47 = [v14 init];
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v12, v9);
  outlined init with copy of UUID?(a3, (uint64_t)&v15[OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow_clientConnectionId]);

  uint64_t v16 = (objc_class *)type metadata accessor for MOSecureWindow();
  v46.receiver = v15;
  v46.super_class = v16;
  [v46 initWithWindowScene:a1];
  uint64_t v18 = self;
  id v19 = v17;
  id v20 = [v18 clearColor];
  [v19 setBackgroundColor:v20];

  [v19 setOpaque:0];
  [v19 makeKeyAndVisible];
  id v21 = [v19 setClipsToBounds:1];
  unint64_t v22 = *(uint64_t (**)(id))((swift_isaMask & *v19) + 0x60);
  uint64_t v44 = (swift_isaMask & *v19) + 96;
  unint64_t v23 = (void *)v22(v21);
  id v24 = objc_allocWithZone((Class)type metadata accessor for MOAngelRootViewController());
  Swift::String v25 = MOAngelRootViewController.init(_:)(v23);
  uint64_t result = [v25 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v27 = result;
  type metadata accessor for UIColor();
  static Color.clear.getter();
  id v28 = (void *)UIColor.init(_:)();
  [v27 setBackgroundColor:v28];

  uint64_t result = [v25 view];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  os_log_type_t v29 = result;
  uint64_t v42 = (uint64_t (*)(uint64_t))v22;
  id v43 = a1;
  id v30 = [result layer];

  [v30 setAllowsHitTesting:0];
  id v31 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v25];
  [v19 setRootViewController:v31];
  uint64_t result = [v19 _rootSheetPresentationController];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v32 = result;
  [result _setShouldScaleDownBehindDescendantSheets:0];

  id v33 = [self sharedInstance];
  uint64_t v34 = a3;
  outlined init with copy of UUID?(a3, (uint64_t)v8);
  uint64_t v35 = type metadata accessor for UUID();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48))(v8, 1, v35);
  Class isa = 0;
  if (v37 != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    uint64_t v37 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v8, v35);
  }
  uint64_t v39 = (void *)v42(v37);
  id v40 = v45;
  [v33 didConnectToSecureWindowWithSession:v45 connectionId:isa delegate:v39];

  outlined destroy of UUID?(v34);
  return v19;
}

uint64_t type metadata accessor for MOSecureWindow()
{
  uint64_t result = type metadata singleton initialization cache for MOSecureWindow;
  if (!type metadata singleton initialization cache for MOSecureWindow) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t type metadata accessor for UIColor()
{
  unint64_t result = lazy cache variable for type metadata for UIColor;
  if (!lazy cache variable for type metadata for UIColor)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for UIColor);
  }
  return result;
}

Swift::Void __swiftcall MOSecureWindow.didDisconnect()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of UUID?(v0 + OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow_clientConnectionId, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    outlined destroy of UUID?((uint64_t)v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    id v8 = [self sharedInstance];
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v8 didDisonnectToSecureWindowForConnectionId:isa];

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void MOSecureWindow.init(coder:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Published<MOAngelControllerWrapper>);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &v0[OBJC_IVAR____TtC16MomentsUIService14MOSecureWindow__controller];
  v6[1] = [objc_allocWithZone((Class)type metadata accessor for MOAngelControllerWrapper()) init];
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v4, v1);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id MOSecureWindow.__allocating_init(windowScene:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithWindowScene:a1];

  return v3;
}

void MOSecureWindow.init(windowScene:)()
{
}

void MOSecureWindow.init(frame:)()
{
}

{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MOSecureWindow.__allocating_init(contentRect:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);

  return [v9 initWithContentRect:a1, a2, a3, a4];
}

void MOSecureWindow.init(contentRect:)()
{
}

void @objc MOSecureWindow.init(frame:)()
{
}

id MOSecureWindow.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSecureWindow();
  return [super dealloc];
}

uint64_t sub_10018D61C(void **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x78))();
}

uint64_t ObjC metadata update function for MOSecureWindow()
{
  return type metadata accessor for MOSecureWindow();
}

void type metadata completion function for MOSecureWindow()
{
  type metadata accessor for Published<MOAngelControllerWrapper>(319, &lazy cache variable for type metadata for Published<MOAngelControllerWrapper>, (uint64_t (*)(uint64_t))type metadata accessor for MOAngelControllerWrapper, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
  if (v0 <= 0x3F)
  {
    type metadata accessor for Published<MOAngelControllerWrapper>(319, (unint64_t *)&lazy cache variable for type metadata for UUID?, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void type metadata accessor for Published<MOAngelControllerWrapper>(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *MOSuggestionInterstitialSupplementaryCheckmarkView.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionInterstitialSupplementaryCheckmarkView.reuseIdentifier;
}

Swift::Void __swiftcall MOSuggestionInterstitialSupplementaryCheckmarkView.updateState(selected:)(Swift::Bool selected)
{
  (*(void (**)(Swift::Bool))((swift_isaMask & **(void **)(v1
                                                                     + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                      + 0xA0))(selected);
}

unint64_t static MOSuggestionInterstitialSupplementaryCheckmarkView.reuseIdentifier.getter()
{
  return 0xD000000000000032;
}

id MOSuggestionInterstitialSupplementaryCheckmarkView.checkmarkView.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView));
}

void MOSuggestionInterstitialSupplementaryCheckmarkView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView;
  if (one-time initialization token for CHECK_PLATTER_VIEW_SIZE != -1) {
    swift_once();
  }
  *(void *)&v0[v1] = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView()) initWithFrame:0.0, 0.0, static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE];
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void *MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor);
  swift_beginAccess();
  objc_super v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor.setter(void *a1)
{
  id v3 = (id *)(v1 + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  if (*v3) {
    (*(void (**)(id))((swift_isaMask & **(void **)(v1
  }
                                                              + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                               + 0x88))(*v3);
}

void (*MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor.modify(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor;
  void v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor.modify;
}

void MOSuggestionInterstitialSupplementaryCheckmarkView.keyColor.modify(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    id v5 = *(void **)(v4 + v3[4]);
    if (v5) {
      (*(void (**)(void *))((swift_isaMask & **(void **)(v4
    }
                                                                    + OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView))
                                     + 0x88))(v5);
  }

  free(v3);
}

id MOSuggestionInterstitialSupplementaryCheckmarkView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
  return [super dealloc];
}

char *specialized MOSuggestionInterstitialSupplementaryCheckmarkView.init(frame:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView;
  uint64_t v2 = one-time initialization token for CHECK_PLATTER_VIEW_SIZE;
  id v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  *(void *)&v0[v1] = [objc_allocWithZone((Class)type metadata accessor for MOSuggestionInterstitialCarouselCheckMarkView()) initWithFrame:0.0, 0.0, static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE];
  *(void *)&v3[OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_keyColor] = 0;

  v35.receiver = v3;
  v35.super_class = (Class)type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView();
  id v4 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v5 = self;
  uint64_t v6 = (char *)v4;
  id v7 = [v5 clearColor];
  [v6 setBackgroundColor:v7];

  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView;
  uint64_t v9 = *(void **)&v6[OBJC_IVAR____TtC16MomentsUIService50MOSuggestionInterstitialSupplementaryCheckmarkView_checkmarkView];
  [v6 addSubview:v9];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  double v10 = *(double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE;
  id v11 = v9;
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v12 = [v11 widthAnchor];
  id v13 = [v12 constraintEqualToConstant:v10];

  [v13 setActive:1];
  double v14 = *((double *)&static MOSuggestionInterstitialCarouselViewConstants.CHECK_PLATTER_VIEW_SIZE + 1);
  id v15 = *(id *)&v6[v8];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = [v15 heightAnchor];
  id v17 = [v16 constraintEqualToConstant:v14];

  [v17 setActive:1];
  id v18 = *(id *)&v6[v8];
  id v19 = [v18 superview];
  id v20 = &selRef_collectionView_didSelectItemAtIndexPath_;
  if (v19)
  {
    id v21 = v19;
    [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [v18 centerYAnchor];
    id v23 = [v21 centerYAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    [v24 setConstant:0.0];
    if (v24)
    {
      id v24 = v24;
      [v24 setActive:1];

      id v18 = v24;
    }

    id v20 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v24 = 0;
    id v21 = v18;
  }

  id v25 = *(id *)&v6[v8];
  id v26 = [v25 superview];
  if (v26)
  {
    uint64_t v27 = v26;
    [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v28 = [v25 centerXAnchor];
    id v29 = [v27 centerXAnchor];
    id v30 = v20;
    id v31 = v29;
    id v32 = [v28 v30[147] v29];

    [v32 setConstant:0.0];
    if (v32)
    {
      id v32 = v32;
      [v32 setActive:1];

      id v25 = v32;
    }
  }
  else
  {
    id v32 = 0;
    uint64_t v27 = v25;
  }

  [v6 setUserInteractionEnabled:0];
  id v33 = *(id *)&v6[v8];
  [v33 setUserInteractionEnabled:0];

  return v6;
}

uint64_t type metadata accessor for MOSuggestionInterstitialSupplementaryCheckmarkView()
{
  return self;
}

uint64_t sub_10018E220@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
  *a2 = result;
  return result;
}

uint64_t sub_10018E27C(id *a1, void **a2)
{
  id v2 = *a1;
  id v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x68);
  id v4 = *a1;
  return v3(v2);
}

void *specialized static MOSuggestionSheetAssetViewModel.placeholders(count:parent:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t result = (void *)__chkstk_darwin(v10 - 8);
  id v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 < 0)
  {
    __break(1u);
  }
  else if (a1)
  {
    memset(v22, 0, sizeof(v22));
    char v23 = 1;
    uint64_t v20 = type metadata accessor for URL();
    uint64_t v14 = *(void *)(v20 - 8);
    id v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    uint64_t v18 = v14 + 56;
    id v19 = v15;
    do
    {
      v19(v13, 1, 1, v20);
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
      uint64_t v17 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
      type metadata accessor for MOSuggestionSheetAssetViewModel(0);
      swift_allocObject();
      swift_retain();
      MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, a2, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, (uint64_t)v13, 0, 0, 0, 0xE000000000000000, 0,
        0xE000000000000000,
        0,
        0xE000000000000000,
        0,
        0,
        0,
        0xE000000000000000,
        0,
        0xE000000000000000,
        0,
        0,
        0,
        0,
        0,
        0,
        0xE000000000000000,
        (uint64_t)v9,
        0,
        0xE000000000000000,
        0,
        0,
        0,
        0xE000000000000000,
        0,
        0xE000000000000000,
        0,
        (uint64_t)v22,
        (uint64_t)v22,
        (uint64_t)v22,
        11,
        0,
        0,
        0,
        0,
        0,
        1,
        1,
        0,
        0,
        0xE000000000000000,
        1,
        0,
        0xE000000000000000,
        0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      --a1;
    }
    while (a1);
    return (void *)v21;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *specialized static MOSuggestionSheetAssetViewModel.PLACEHOLDER_VIEW_MODEL(parent:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>?);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Measurement<NSUnitTemperature>);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
  memset(v15, 0, sizeof(v15));
  char v16 = 1;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  type metadata accessor for MOSuggestionSheetAssetViewModel(0);
  swift_allocObject();
  swift_retain();
  return MOSuggestionSheetAssetViewModel.init(id:parent:image:activitySummary:routeMap:linkMetadata:assetType:assetVisualSubType:evergreenData:reflectionIndex:mediaAssetID:URL:mediaType:isSquare:contactName:contactFirstName:workoutName:livePhoto:videoAsset:activityName:activityStepCount:motionActivityNumSteps:title:subtitle:weatherString:weatherTemperature:calories:duration:distance:averageHeartRate:shouldAutoPlay:squareCropRect:landscapeCropRect:portraitCropRect:assignedAssetTileSize:mapPrimaryField:mapSecondaryField:mapLocationCount:isLoadingPlaceHolder:renderedView:valenceClassificationAndReflectiveInterval:reflectiveInterval:stateOfMindLabels:stateOfMindLabelsShortened:stateOfMindDomains:stateOfMindDomainsShortened:stateOfMindAssociatedColorsLight:stateOfMindAssociatedColorsDark:stateOfMindDate:bgColor:mediaThirdPartyAppAssociatedColors:bgColorVariant:)(0x6C6F686563616C70, 0xEB00000000726564, a1, 0, 0, 0, 0, 0, 26, 0, 0, 0, 0, (uint64_t)v10, 0, 0, 0, 0xE000000000000000, 0,
           0xE000000000000000,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0xE000000000000000,
           (uint64_t)v7,
           0,
           0xE000000000000000,
           0,
           0,
           0,
           0xE000000000000000,
           0,
           0xE000000000000000,
           0,
           (uint64_t)v15,
           (uint64_t)v15,
           (uint64_t)v15,
           11,
           0,
           0,
           0,
           0,
           0,
           1,
           1,
           0,
           0,
           0xE000000000000000,
           1,
           0,
           0xE000000000000000,
           0);
}

void *MOSceneDelegate.window.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSceneDelegate.window.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*MOSceneDelegate.window.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

Swift::Void __swiftcall MOSceneDelegate.scene(_:willConnectTo:options:)(UIScene _, UISceneSession willConnectTo, UISceneConnectionOptions options)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v43 - v12;
  __chkstk_darwin(v11);
  id v15 = (char *)&v43 - v14;
  id v16 = [(objc_class *)options.super.isa _fbsScene];
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = [v16 identityToken];
  }
  else
  {
    id v18 = 0;
  }
  id v47 = [objc_allocWithZone((Class)UISceneConfiguration) init];
  self;
  uint64_t v19 = swift_dynamicCastObjCClass();
  if (v19)
  {
    uint64_t v20 = (void *)v19;
    Class isa = willConnectTo.super.isa;
    uint64_t v45 = v3;
    id v46 = v18;
    uint64_t v21 = type metadata accessor for UUID();
    id v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
    v22(v15, 1, 1, v21);
    id v43 = _.super.super.isa;
    id v23 = [(objc_class *)options.super.isa userActivities];
    type metadata accessor for NSUserActivity();
    lazy protocol witness table accessor for type NSUserActivity and conformance NSObject();
    uint64_t v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    specialized Sequence.first(where:)(v24);
    id v26 = v25;
    swift_bridgeObjectRelease();
    if (!v26) {
      goto LABEL_19;
    }
    id v27 = [v26 userInfo];
    if (v27)
    {
      id v28 = v27;
      uint64_t v29 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      strcpy((char *)v48, "connectionId");
      HIBYTE(v48[6]) = 0;
      v48[7] = -5120;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v29 + 16) && (unint64_t v30 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v49), (v31 & 1) != 0))
      {
        outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v30, (uint64_t)&v50);
      }
      else
      {
        long long v50 = 0u;
        long long v51 = 0u;
      }

      outlined destroy of AnyHashable((uint64_t)v49);
      outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);
      swift_bridgeObjectRelease();
      if (*((void *)&v51 + 1))
      {
        uint64_t v33 = swift_dynamicCast() ^ 1;
        uint64_t v34 = v13;
LABEL_18:
        v22(v34, v33, 1, v21);
        outlined init with take of UUID?((uint64_t)v13, (uint64_t)v15);
LABEL_19:
        outlined init with copy of UUID?((uint64_t)v15, (uint64_t)v10);
        id v35 = objc_allocWithZone((Class)type metadata accessor for MOSecureWindow());
        uint64_t v36 = v43;
        uint64_t v37 = MOSecureWindow.init(windowScene:session:clientConnection:)(v20, isa, (uint64_t)v10);
        uint64_t v38 = (id *)(v45 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window);
        swift_beginAccess();
        id v39 = *v38;
        *uint64_t v38 = v37;

        if (*v38)
        {
          [*v38 makeKeyAndVisible];
          if (*v38) {
            [*v38 setHidden:0];
          }
        }
        id v40 = [self sharedApplication];
        id v41 = [v40 delegate];

        uint64_t v42 = v46;
        if (v41)
        {
          type metadata accessor for MOAppDelegate();
          swift_dynamicCastClassUnconditional();
          [v20 _setKeepContextAssociationInBackground:1];

          swift_unknownObjectRelease();
          outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);
        }
        else
        {
          __break(1u);
        }
        return;
      }
    }
    else
    {
      outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);

      long long v50 = 0u;
      long long v51 = 0u;
    }
    outlined destroy of Any?((uint64_t)&v50, &demangling cache variable for type metadata for Any?);
    uint64_t v34 = v13;
    uint64_t v33 = 1;
    goto LABEL_18;
  }

  id v32 = v47;
}

unint64_t type metadata accessor for NSUserActivity()
{
  unint64_t result = lazy cache variable for type metadata for NSUserActivity;
  if (!lazy cache variable for type metadata for NSUserActivity)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&lazy cache variable for type metadata for NSUserActivity);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type NSUserActivity and conformance NSObject()
{
  unint64_t result = lazy protocol witness table cache variable for type NSUserActivity and conformance NSObject;
  if (!lazy protocol witness table cache variable for type NSUserActivity and conformance NSObject)
  {
    type metadata accessor for NSUserActivity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type NSUserActivity and conformance NSObject);
  }
  return result;
}

void specialized Sequence.first(where:)(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NSUserActivity();
    lazy protocol witness table accessor for type NSUserActivity and conformance NSObject();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v24;
    uint64_t v23 = v25;
    uint64_t v2 = v26;
    uint64_t v3 = v27;
    unint64_t v4 = v28;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v23 = a1 + 56;
    uint64_t v6 = ~v5;
    uint64_t v7 = -v5;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = v6;
    uint64_t v3 = 0;
  }
  uint64_t v21 = v2;
  int64_t v22 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!__CocoaSet.Iterator.next()()) {
    goto LABEL_36;
  }
  type metadata accessor for NSUserActivity();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v9 = v29;
  swift_unknownObjectRelease();
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  if (!v29) {
    goto LABEL_36;
  }
  while (1)
  {
    id v16 = [v9 activityType:v21];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    if (v17 == 0xD000000000000028 && v19 == 0x80000001001EA590)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v20) {
      goto LABEL_36;
    }

    uint64_t v3 = v10;
    unint64_t v4 = v11;
    if (v1 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v4) {
      break;
    }
    uint64_t v11 = (v4 - 1) & v4;
    unint64_t v12 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v10 = v3;
LABEL_29:
    id v9 = *(id *)(*(void *)(v1 + 48) + 8 * v12);
    if (!v9) {
      goto LABEL_36;
    }
  }
  int64_t v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    return;
  }
  if (v13 >= v22) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v23 + 8 * v13);
  uint64_t v10 = v3 + 1;
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 2;
  if (v3 + 2 >= v22) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v23 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 3;
  if (v3 + 3 >= v22) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v23 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 4;
  if (v3 + 4 >= v22) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v23 + 8 * v10);
  if (v14) {
    goto LABEL_28;
  }
  uint64_t v10 = v3 + 5;
  if (v3 + 5 >= v22) {
    goto LABEL_36;
  }
  unint64_t v14 = *(void *)(v23 + 8 * v10);
  if (v14)
  {
LABEL_28:
    uint64_t v11 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
    goto LABEL_29;
  }
  uint64_t v15 = v3 + 6;
  while (v22 != v15)
  {
    unint64_t v14 = *(void *)(v23 + 8 * v15++);
    if (v14)
    {
      uint64_t v10 = v15 - 1;
      goto LABEL_28;
    }
  }
LABEL_36:
  outlined consume of Set<String>.Iterator._Variant();
}

Swift::Void __swiftcall MOSceneDelegate.sceneDidDisconnect(_:)(UIScene a1)
{
  self;
  uint64_t v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    unint64_t v4 = (void *)v3;
    uint64_t v5 = a1.super.super.isa;
    [v4 _setBackgroundStyle:1];
    id v6 = [self sharedApplication];
    id v7 = [v6 delegate];

    if (v7)
    {
      type metadata accessor for MOAppDelegate();
      swift_dynamicCastClassUnconditional();
      uint64_t v8 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window);
      swift_beginAccess();
      id v9 = *v8;
      if (*v8)
      {
        uint64_t v10 = *(void (**)(void))((swift_isaMask & *v9) + 0x98);
        uint64_t v11 = v9;
        v10();
      }
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

id MOSceneDelegate.init()()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService15MOSceneDelegate_window] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return [super init];
}

uint64_t type metadata accessor for MOSceneDelegate()
{
  return self;
}

void *MOSuggestionSheetOversizedBoundsButton.enlargementPercentage.unsafeMutableAddressor()
{
  return &static MOSuggestionSheetOversizedBoundsButton.enlargementPercentage;
}

double static MOSuggestionSheetOversizedBoundsButton.enlargementPercentage.getter()
{
  return 1.5;
}

BOOL MOSuggestionSheetOversizedBoundsButton.point(inside:with:)(CGFloat a1, CGFloat a2)
{
  [v2 bounds];
  double v6 = v5;
  [v2 bounds];
  double v8 = v7;
  [v2 bounds];
  CGRect v12 = CGRectInset(v11, v6 * -1.5, v8 * -1.5);
  v10.double x = a1;
  v10.double y = a2;
  return CGRectContainsPoint(v12, v10);
}

id MOSuggestionSheetOversizedBoundsButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  return [super initWithFrame:a1, a2, a3, a4];
}

uint64_t type metadata accessor for MOSuggestionSheetOversizedBoundsButton()
{
  return self;
}

id MOSuggestionSheetOversizedBoundsButton.init(coder:)(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  [super initWithCoder:a1];

  return v3;
}

id MOSuggestionSheetOversizedBoundsButton.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MOSuggestionSheetOversizedBoundsButton();
  return [super dealloc];
}

uint64_t PropertyDescriptor.className.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PropertyDescriptor() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for PropertyDescriptor()
{
  uint64_t result = type metadata singleton initialization cache for PropertyDescriptor;
  if (!type metadata singleton initialization cache for PropertyDescriptor) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PropertyDescriptor.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PropertyDescriptor() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PropertyDescriptor.stringValue.getter()
{
  uint64_t v1 = type metadata accessor for PropertyDescriptor();
  outlined init with copy of Any(v0 + *(int *)(v1 + 28), (uint64_t)v4);
  if (swift_dynamicCast()) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t PropertyDescriptor.classPropertyValues.getter()
{
  uint64_t v1 = type metadata accessor for PropertyDescriptor();
  uint64_t result = 0;
  uint64_t v3 = (void *)(v0 + *(int *)(v1 + 20));
  if (*v3 != 0x7961727241534ELL || v3[1] != 0xE700000000000000)
  {
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      return 0;
    }
    else
    {
      outlined init with copy of Any(v0 + *(int *)(v1 + 28), (uint64_t)v6);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PropertyDescriptor]);
      if (swift_dynamicCast()) {
        return v5;
      }
      else {
        return 0;
      }
    }
  }
  return result;
}

uint64_t PropertyDescriptor.nestedArrayValue.getter()
{
  uint64_t v1 = type metadata accessor for PropertyDescriptor();
  objc_super v2 = (void *)(v0 + *(int *)(v1 + 20));
  BOOL v3 = *v2 == 0x7961727241534ELL && v2[1] == 0xE700000000000000;
  if (!v3 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  outlined init with copy of Any(v0 + *(int *)(v1 + 28), (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PropertyDescriptor]);
  if (swift_dynamicCast()) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t PropertyDescriptor.nestedDictionaryValue.getter()
{
  uint64_t v1 = type metadata accessor for PropertyDescriptor();
  outlined init with copy of Any(v0 + *(int *)(v1 + 28), (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : PropertyDescriptor]);
  if (swift_dynamicCast()) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t PropertyDescriptor.fullDescription.getter()
{
  uint64_t v0 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v0 - 8);
  PropertyDescriptor.buildFullDescriptionJson()(v13);
  uint64_t v1 = self;
  __swift_project_boxed_opaque_existential_1(v13, (uint64_t)v13[3]);
  id v12 = 0;
  id v2 = [v1 dataWithJSONObject:_bridgeAnythingToObjectiveC<A>(_:)() options:1 error:&v12];
  swift_unknownObjectRelease();
  id v3 = v12;
  if (!v2)
  {
    objc_super v10 = v3;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
LABEL_5:
    uint64_t v7 = 0;
    goto LABEL_6;
  }
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  static String.Encoding.utf8.getter();
  uint64_t v7 = String.init(data:encoding:)();
  uint64_t v9 = v8;
  outlined consume of Data._Representation(v4, v6);
  if (!v9) {
    goto LABEL_5;
  }
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v7;
}

uint64_t PropertyDescriptor.buildFullDescriptionJson()@<X0>(double **a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PropertyDescriptor();
  uint64_t v93 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v92 = (uint64_t)&v90 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  CGRect v11 = (char *)&v90 - v10;
  id v12 = (void *)(v1 + *(int *)(v9 + 20));
  BOOL v13 = *v12 == 0x7961727241534ELL && v12[1] == 0xE700000000000000;
  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    outlined init with copy of Any(v1 + *(int *)(v3 + 28), (uint64_t)v97);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PropertyDescriptor]);
    if (swift_dynamicCast())
    {
      uint64_t v14 = *(void *)(*(void *)&v96[0] + 16);
      if (v14)
      {
        uint64_t v15 = a1;
        uint64_t v16 = *(void *)&v96[0]
            + ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80));
        uint64_t v17 = *(void *)(v93 + 72);
        uint64_t v18 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v19 = outlined init with copy of PropertyDescriptor(v16, (uint64_t)v11);
          PropertyDescriptor.buildFullDescriptionJson()(v97, v19);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v18 + 2) + 1, 1, v18);
          }
          unint64_t v21 = *((void *)v18 + 2);
          unint64_t v20 = *((void *)v18 + 3);
          if (v21 >= v20 >> 1) {
            uint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v20 > 1), v21 + 1, 1, v18);
          }
          *((void *)v18 + 2) = v21 + 1;
          outlined init with take of Any(v97, &v18[4 * v21 + 4]);
          outlined destroy of PropertyDescriptor((uint64_t)v11);
          v16 += v17;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        a1 = v15;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = _swiftEmptyArrayStorage;
      }
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Any]);
      a1[3] = (double *)result;
      *a1 = v18;
      return result;
    }
  }
  uint64_t v22 = v1 + *(int *)(v3 + 28);
  outlined init with copy of Any(v22, (uint64_t)v97);
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : PropertyDescriptor]);
  if (swift_dynamicCast())
  {
    uint64_t v90 = a1;
    uint64_t v23 = *(void **)&v96[0];
    uint64_t v24 = *(void *)(*(void *)&v96[0] + 64);
    uint64_t v94 = *(void *)&v96[0] + 64;
    uint64_t v25 = 1 << *(unsigned char *)(*(void *)&v96[0] + 32);
    uint64_t v26 = -1;
    if (v25 < 64) {
      uint64_t v26 = ~(-1 << v25);
    }
    unint64_t v27 = v26 & v24;
    int64_t v28 = (unint64_t)(v25 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v29 = 0;
    unint64_t v30 = &_swiftEmptyDictionarySingleton;
    uint64_t v91 = v23;
    if (v27) {
      goto LABEL_22;
    }
LABEL_23:
    while (2)
    {
      int64_t v33 = v29 + 1;
      if (__OFADD__(v29, 1))
      {
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      if (v33 < v28)
      {
        unint64_t v34 = *(void *)(v94 + 8 * v33);
        ++v29;
        if (v34) {
          goto LABEL_40;
        }
        int64_t v29 = v33 + 1;
        if (v33 + 1 >= v28) {
          break;
        }
        unint64_t v34 = *(void *)(v94 + 8 * v29);
        if (v34) {
          goto LABEL_40;
        }
        int64_t v29 = v33 + 2;
        if (v33 + 2 >= v28) {
          break;
        }
        unint64_t v34 = *(void *)(v94 + 8 * v29);
        if (v34) {
          goto LABEL_40;
        }
        int64_t v29 = v33 + 3;
        if (v33 + 3 >= v28) {
          break;
        }
        unint64_t v34 = *(void *)(v94 + 8 * v29);
        if (v34) {
          goto LABEL_40;
        }
        int64_t v29 = v33 + 4;
        if (v33 + 4 >= v28) {
          break;
        }
        unint64_t v34 = *(void *)(v94 + 8 * v29);
        if (v34)
        {
LABEL_40:
          unint64_t v27 = (v34 - 1) & v34;
          for (unint64_t i = __clz(__rbit64(v34)) + (v29 << 6); ; unint64_t i = v31 | (v29 << 6))
          {
            uint64_t v36 = (uint64_t *)(v23[6] + 16 * i);
            uint64_t v38 = *v36;
            uint64_t v37 = v36[1];
            uint64_t v39 = v23[2];
            swift_bridgeObjectRetain();
            if (v39)
            {
              unint64_t v40 = specialized __RawDictionaryStorage.find<A>(_:)(v38, v37);
              if (v41) {
                break;
              }
            }
            swift_bridgeObjectRetain();
            unint64_t v53 = specialized __RawDictionaryStorage.find<A>(_:)(v38, v37);
            char v55 = v54;
            swift_bridgeObjectRelease();
            if (v55)
            {
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              id v95 = v30;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                specialized _NativeDictionary.copy()();
                unint64_t v30 = v95;
              }
              swift_bridgeObjectRelease();
              outlined init with take of Any((_OWORD *)(v30[7] + 32 * v53), v96);
              specialized _NativeDictionary._delete(at:)(v53, (uint64_t)v30);
              swift_bridgeObjectRelease();
            }
            else
            {
              memset(v96, 0, sizeof(v96));
            }
            swift_bridgeObjectRelease();
            outlined destroy of Any?((uint64_t)v96);
            if (!v27) {
              goto LABEL_23;
            }
LABEL_22:
            unint64_t v31 = __clz(__rbit64(v27));
            v27 &= v27 - 1;
          }
          uint64_t v42 = v92;
          uint64_t v43 = outlined init with copy of PropertyDescriptor(v23[7] + *(void *)(v93 + 72) * v40, v92);
          PropertyDescriptor.buildFullDescriptionJson()(v97, v43);
          outlined destroy of PropertyDescriptor(v42);
          outlined init with take of Any(v97, v96);
          char v44 = swift_isUniquelyReferenced_nonNull_native();
          id v95 = v30;
          unint64_t v46 = specialized __RawDictionaryStorage.find<A>(_:)(v38, v37);
          uint64_t v47 = v30[2];
          BOOL v48 = (v45 & 1) == 0;
          uint64_t v49 = v47 + v48;
          if (__OFADD__(v47, v48)) {
            goto LABEL_92;
          }
          char v50 = v45;
          if (v30[3] < v49)
          {
            specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v49, v44);
            unint64_t v51 = specialized __RawDictionaryStorage.find<A>(_:)(v38, v37);
            if ((v50 & 1) != (v52 & 1)) {
              goto LABEL_97;
            }
            unint64_t v46 = v51;
            unint64_t v30 = v95;
            if ((v50 & 1) == 0) {
              goto LABEL_56;
            }
LABEL_54:
            uint64_t v57 = (_OWORD *)(v30[7] + 32 * v46);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
            outlined init with take of Any(v96, v57);
            goto LABEL_58;
          }
          if (v44)
          {
            unint64_t v30 = v95;
            if (v45) {
              goto LABEL_54;
            }
          }
          else
          {
            specialized _NativeDictionary.copy()();
            unint64_t v30 = v95;
            if (v50) {
              goto LABEL_54;
            }
          }
LABEL_56:
          v30[(v46 >> 6) + 8] |= 1 << v46;
          id v58 = (uint64_t *)(v30[6] + 16 * v46);
          *id v58 = v38;
          v58[1] = v37;
          outlined init with take of Any(v96, (_OWORD *)(v30[7] + 32 * v46));
          uint64_t v59 = v30[2];
          BOOL v60 = __OFADD__(v59, 1);
          uint64_t v61 = v59 + 1;
          if (v60) {
            goto LABEL_93;
          }
          v30[2] = v61;
          swift_bridgeObjectRetain();
LABEL_58:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v23 = v91;
          if (!v27) {
            continue;
          }
          goto LABEL_22;
        }
        int64_t v35 = v33 + 5;
        if (v35 < v28)
        {
          unint64_t v34 = *(void *)(v94 + 8 * v35);
          if (v34)
          {
            int64_t v29 = v35;
            goto LABEL_40;
          }
          while (1)
          {
            int64_t v29 = v35 + 1;
            if (__OFADD__(v35, 1)) {
              goto LABEL_96;
            }
            if (v29 >= v28) {
              goto LABEL_81;
            }
            unint64_t v34 = *(void *)(v94 + 8 * v29);
            ++v35;
            if (v34) {
              goto LABEL_40;
            }
          }
        }
      }
      break;
    }
LABEL_81:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
    uint64_t v86 = v90;
    v90[3] = (double *)result;
    *uint64_t v86 = (double *)v30;
    return result;
  }
  BOOL v62 = *v12 == 0x7961727241534ELL && v12[1] == 0xE700000000000000;
  if (v62
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || (outlined init with copy of Any(v22, (uint64_t)v97),
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PropertyDescriptor]),
        (swift_dynamicCast() & 1) == 0))
  {
    outlined init with copy of Any(v22, (uint64_t)v97);
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      unint64_t v88 = *((void *)&v96[0] + 1);
      char v87 = *(double **)&v96[0];
    }
    else
    {
      char v87 = 0;
      unint64_t v88 = 0xE000000000000000;
    }
    a1[3] = (double *)&type metadata for String;
    *a1 = v87;
    a1[1] = (double *)v88;
    return result;
  }
  uint64_t v90 = a1;
  uint64_t v63 = *(void *)(*(void *)&v96[0] + 16);
  if (v63)
  {
    uint64_t v64 = *(void *)&v96[0]
        + ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80));
    uint64_t v65 = *(void *)(v93 + 72);
    uint64_t v92 = *(void *)&v96[0];
    uint64_t v93 = v65;
    uint64_t v66 = &_swiftEmptyDictionarySingleton;
    uint64_t v94 = v3;
    while (1)
    {
      outlined init with copy of PropertyDescriptor(v64, (uint64_t)v6);
      id v68 = (uint64_t *)&v6[*(int *)(v3 + 24)];
      uint64_t v70 = *v68;
      uint64_t v69 = v68[1];
      uint64_t v71 = swift_bridgeObjectRetain();
      uint64_t v72 = (uint64_t)v6;
      PropertyDescriptor.buildFullDescriptionJson()(v97, v71);
      outlined init with take of Any(v97, v96);
      char v73 = swift_isUniquelyReferenced_nonNull_native();
      id v95 = v66;
      unint64_t v75 = specialized __RawDictionaryStorage.find<A>(_:)(v70, v69);
      uint64_t v76 = v66[2];
      BOOL v77 = (v74 & 1) == 0;
      uint64_t v78 = v76 + v77;
      if (__OFADD__(v76, v77)) {
        goto LABEL_94;
      }
      char v79 = v74;
      if (v66[3] >= v78)
      {
        if (v73)
        {
          uint64_t v66 = v95;
          if ((v74 & 1) == 0) {
            goto LABEL_77;
          }
        }
        else
        {
          specialized _NativeDictionary.copy()();
          uint64_t v66 = v95;
          if ((v79 & 1) == 0) {
            goto LABEL_77;
          }
        }
      }
      else
      {
        specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v78, v73);
        unint64_t v80 = specialized __RawDictionaryStorage.find<A>(_:)(v70, v69);
        if ((v79 & 1) != (v81 & 1)) {
          goto LABEL_97;
        }
        unint64_t v75 = v80;
        uint64_t v66 = v95;
        if ((v79 & 1) == 0)
        {
LABEL_77:
          v66[(v75 >> 6) + 8] |= 1 << v75;
          uint64_t v82 = (uint64_t *)(v66[6] + 16 * v75);
          *uint64_t v82 = v70;
          v82[1] = v69;
          outlined init with take of Any(v96, (_OWORD *)(v66[7] + 32 * v75));
          uint64_t v83 = v66[2];
          BOOL v60 = __OFADD__(v83, 1);
          uint64_t v84 = v83 + 1;
          if (v60) {
            goto LABEL_95;
          }
          v66[2] = v84;
          swift_bridgeObjectRetain();
          goto LABEL_69;
        }
      }
      int v67 = (_OWORD *)(v66[7] + 32 * v75);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      outlined init with take of Any(v96, v67);
LABEL_69:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v6 = (char *)v72;
      outlined destroy of PropertyDescriptor(v72);
      uint64_t v3 = v94;
      v64 += v93;
      if (!--v63)
      {
        swift_bridgeObjectRelease();
        goto LABEL_90;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v66 = &_swiftEmptyDictionarySingleton;
LABEL_90:
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Any]);
  uint64_t v89 = v90;
  v90[3] = (double *)result;
  *uint64_t v89 = (double *)v66;
  return result;
}

uint64_t static PropertyDescriptor.from(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for PropertyDescriptor();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v65 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v59 - v9;
  __chkstk_darwin(v8);
  id v12 = (char *)v59 - v11;
  uint64_t v64 = (void *)type metadata accessor for NSFastEnumerationIterator();
  uint64_t v13 = *(v64 - 1);
  __chkstk_darwin(v64);
  uint64_t v15 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [a1 propertyValue];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSArray);
  if (swift_dynamicCast())
  {
    BOOL v60 = a1;
    uint64_t v61 = v4;
    uint64_t v62 = a2;
    uint64_t v65 = (char *)v71;
    NSArray.makeIterator()();
    NSFastEnumerationIterator.next()();
    if (v74)
    {
      uint64_t v17 = _swiftEmptyArrayStorage;
      do
      {
        outlined init with take of Any(&v73, &v71);
        type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PrettyPropertyDescription);
        swift_dynamicCast();
        uint64_t v18 = (void *)v70;
        static PropertyDescriptor.from(_:)(v70);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v17 + 2) + 1, 1, (unint64_t)v17);
        }
        unint64_t v20 = *((void *)v17 + 2);
        unint64_t v19 = *((void *)v17 + 3);
        if (v20 >= v19 >> 1) {
          uint64_t v17 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v19 > 1, v20 + 1, 1, (unint64_t)v17);
        }
        *((void *)v17 + 2) = v20 + 1;
        outlined init with take of PropertyDescriptor((uint64_t)v12, (uint64_t)v17+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v20);
        NSFastEnumerationIterator.next()();
      }
      while (v74);
    }
    else
    {
      uint64_t v17 = _swiftEmptyArrayStorage;
    }
    (*(void (**)(char *, void *))(v13 + 8))(v15, v64);
    uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [PropertyDescriptor]);

    *(void *)&long long v73 = v17;
    a2 = v62;
    uint64_t v4 = v61;
    a1 = v60;
    goto LABEL_35;
  }
  id v21 = [a1 propertyValue];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for NSDictionary);
  if (!swift_dynamicCast())
  {
    id v44 = [a1 propertyValue];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PrettyPropertyDescription);
    if (swift_dynamicCast())
    {
      char v45 = (void *)v71;
      uint64_t v74 = (uint64_t)v4;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v73);
      static PropertyDescriptor.from(_:)(v45);
    }
    else
    {
      id v46 = [a1 propertyValue];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      uint64_t v72 = &type metadata for String;
      swift_dynamicCast();
      outlined init with take of Any(&v71, &v73);
    }
LABEL_35:
    id v47 = [a1 className];
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;

    id v51 = [a1 propertyName];
    if (v51)
    {
      char v52 = v51;
      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v55 = v54;
    }
    else
    {
      uint64_t v53 = 0;
      unint64_t v55 = 0xE000000000000000;
    }
    outlined init with copy of Any((uint64_t)&v73, a2 + v4[7]);
    UUID.init()();
    uint64_t v56 = (uint64_t *)(a2 + v4[5]);
    *uint64_t v56 = v48;
    v56[1] = v50;
    uint64_t v57 = (uint64_t *)(a2 + v4[6]);
    *uint64_t v57 = v53;
    v57[1] = v55;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  uint64_t v64 = (void *)v71;
  id v22 = [(id)v71 allKeys];
  uint64_t v63 = (char *)&type metadata for Any + 8;
  uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = &_swiftEmptyDictionarySingleton;
LABEL_34:
    uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : PropertyDescriptor]);

    *(void *)&long long v73 = v26;
    goto LABEL_35;
  }
  BOOL v60 = a1;
  uint64_t v61 = v4;
  uint64_t v62 = a2;
  v59[1] = v23;
  uint64_t v25 = v23 + 32;
  uint64_t v26 = &_swiftEmptyDictionarySingleton;
  while (1)
  {
    outlined init with copy of Any(v25, (uint64_t)&v73);
    outlined init with copy of Any((uint64_t)&v73, (uint64_t)&v71);
    swift_dynamicCast();
    uint64_t v28 = v68;
    uint64_t v27 = v69;
    __swift_project_boxed_opaque_existential_1(&v73, v74);
    id v29 = [v64 __swift_objectForKeyedSubscript:_bridgeAnythingToObjectiveC<A>(_:)()];
    swift_unknownObjectRelease();
    if (!v29) {
      break;
    }
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    outlined init with take of Any(&v67, &v70);
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PrettyPropertyDescription);
    swift_dynamicCast();
    unint64_t v30 = v66;
    static PropertyDescriptor.from(_:)(v66);

    outlined init with take of PropertyDescriptor((uint64_t)v10, (uint64_t)v65);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v70 = v26;
    unint64_t v33 = specialized __RawDictionaryStorage.find<A>(_:)(v28, v27);
    uint64_t v34 = v26[2];
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      break;
    }
    char v37 = v32;
    if (v26[3] >= v36)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v26 = (void *)v70;
        if (v32) {
          goto LABEL_13;
        }
      }
      else
      {
        specialized _NativeDictionary.copy()();
        uint64_t v26 = (void *)v70;
        if (v37) {
          goto LABEL_13;
        }
      }
    }
    else
    {
      specialized _NativeDictionary._copyOrMoveAndResize(capacity:moveElements:)(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = specialized __RawDictionaryStorage.find<A>(_:)(v28, v27);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_42;
      }
      unint64_t v33 = v38;
      uint64_t v26 = (void *)v70;
      if (v37)
      {
LABEL_13:
        outlined assign with take of PropertyDescriptor((uint64_t)v65, v26[7] + *(void *)(v5 + 72) * v33);
        goto LABEL_14;
      }
    }
    v26[(v33 >> 6) + 8] |= 1 << v33;
    unint64_t v40 = (uint64_t *)(v26[6] + 16 * v33);
    *unint64_t v40 = v28;
    v40[1] = v27;
    outlined init with take of PropertyDescriptor((uint64_t)v65, v26[7] + *(void *)(v5 + 72) * v33);
    uint64_t v41 = v26[2];
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42) {
      goto LABEL_40;
    }
    v26[2] = v43;
    swift_bridgeObjectRetain();
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
    v25 += 32;
    if (!--v24)
    {
      swift_bridgeObjectRelease();
      a2 = v62;
      uint64_t v4 = v61;
      a1 = v60;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_42:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t outlined init with take of PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PropertyDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t outlined assign with take of PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PropertyDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for PropertyDescriptor(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *((void *)v18 + 3);
    *(uint64_t *)((char *)a1 + v16 + 24) = v19;
    unint64_t v20 = **(void (***)(char *, char *, uint64_t))(v19 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);

  return __swift_destroy_boxed_opaque_existential_1(v5);
}

uint64_t initializeWithCopy for PropertyDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(v17 + 24);
  *(void *)(a1 + v15 + 24) = v18;
  uint64_t v19 = **(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  return a1;
}

uint64_t assignWithCopy for PropertyDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t initializeWithTake for PropertyDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  int v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  long long v11 = v10[1];
  *int v9 = *v10;
  v9[1] = v11;
  return a1;
}

uint64_t assignWithTake for PropertyDescriptor(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  int v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (_OWORD *)(a1 + v17);
  uint64_t v19 = (_OWORD *)(a2 + v17);
  __swift_destroy_boxed_opaque_existential_1(a1 + v17);
  long long v20 = v19[1];
  _OWORD *v18 = *v19;
  v18[1] = v20;
  return a1;
}

uint64_t getEnumTagSinglePayload for PropertyDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001918B0);
}

uint64_t sub_1001918B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PropertyDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100191988);
}

uint64_t sub_100191988(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata completion function for PropertyDescriptor()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t outlined init with copy of PropertyDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PropertyDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t outlined destroy of PropertyDescriptor(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PropertyDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.initiateAuthentication()()
{
  id v22 = &type metadata for MOAppProtectionFeatureFlags;
  unint64_t v1 = lazy protocol witness table accessor for type MOAppProtectionFeatureFlags and conformance MOAppProtectionFeatureFlags();
  uint64_t v23 = (uint64_t (*)(char, uint64_t))v1;
  char v2 = isFeatureEnabled(_:)();
  uint64_t v3 = __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  if (v2)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v0 + 496))(v3);
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    id v22 = &type metadata for MOAppProtectionFeatureFlags;
    uint64_t v23 = (uint64_t (*)(char, uint64_t))v1;
    swift_retain_n();
    char v6 = isFeatureEnabled(_:)();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    if (v6)
    {
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = 0;
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 0;
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = v7;
      v9[3] = v4;
      v9[4] = v8;
      v9[5] = partial apply for closure #1 in MOSuggestionCollectionViewModel.initiateAuthentication();
      void v9[6] = v5;
      uint64_t v10 = *(void *)(v4 + 16);
      if (v10)
      {
        id v20 = self;
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v11 = (uint64_t *)(v4 + 40);
        do
        {
          uint64_t v13 = *(v11 - 1);
          uint64_t v12 = *v11;
          uint64_t v14 = one-time initialization token for accessGuard;
          swift_bridgeObjectRetain();
          if (v14 != -1) {
            swift_once();
          }
          v11 += 2;
          uint64_t v15 = (void *)static MOProtectedAppsManager.accessGuard;
          NSString v16 = String._bridgeToObjectiveC()();
          id v17 = [v20 applicationWithBundleIdentifier:v16];

          uint64_t v18 = (void *)swift_allocObject();
          v18[2] = v13;
          v18[3] = v12;
          v18[4] = v8;
          v18[5] = _s16MomentsUIService22MOProtectedAppsManagerC13requestAccess10appSources10completionySayAA0C9AppSourceVG_yAA0cK20AuthenticationResultOctFZyycfU_TA_0;
          v18[6] = v9;
          uint64_t v23 = partial apply for closure #2 in static MOProtectedAppsManager.requestAccess(appSources:completion:);
          uint64_t v24 = v18;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = thunk for @escaping @callee_guaranteed (@unowned Bool, @guaranteed Error?) -> ();
          id v22 = (ValueMetadata *)&block_descriptor_40;
          uint64_t v19 = _Block_copy(aBlock);
          swift_retain();
          swift_retain();
          swift_release();
          [v15 authenticateForSubject:v17 completion:v19];
          _Block_release(v19);

          --v10;
        }
        while (v10);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_release();
        swift_release();
      }
      swift_release();
    }
    else
    {
      closure #1 in MOSuggestionCollectionViewModel.initiateAuthentication()(0);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
  }
}

uint64_t sub_100191F48()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(unsigned char *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (uint64_t)&type metadata for MOAppProtectionFeatureFlags;
  uint64_t v69 = &type metadata for MOAppProtectionFeatureFlags;
  unint64_t v63 = lazy protocol witness table accessor for type MOAppProtectionFeatureFlags and conformance MOAppProtectionFeatureFlags();
  long long v70 = (uint64_t (*)(void *, uint64_t))v63;
  char v9 = isFeatureEnabled(_:)();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  if (v9)
  {
    uint64_t v61 = a2;
    uint64_t v62 = a3;
    if (one-time initialization token for allFixedApps != -1) {
      goto LABEL_50;
    }
    while (1)
    {
      swift_beginAccess();
      uint64_t v11 = *(void (**)(uint64_t))(*(void *)v4 + 504);
      uint64_t v12 = swift_bridgeObjectRetain();
      v11(v12);
      if (!a1)
      {
LABEL_31:
        if (one-time initialization token for filtering != -1) {
          swift_once();
        }
        uint64_t v33 = type metadata accessor for Logger();
        __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.filtering);
        swift_retain_n();
        uint64_t v34 = Logger.logObject.getter();
        os_log_type_t v35 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = (uint8_t *)swift_slowAlloc();
          aBlock[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v36 = 136315138;
          (*(void (**)(void))(*(void *)v4 + 496))();
          char v37 = (ValueMetadata *)v8;
          uint64_t v38 = Array.debugDescription.getter();
          unint64_t v40 = v39;
          swift_bridgeObjectRelease();
          uint64_t v41 = v38;
          uint64_t v8 = (uint64_t)v37;
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v41, v40, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "[validateConditions] targetProtectedApps=%s", v36, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          uint64_t v42 = swift_release_n();
        }
        uint64_t v43 = (uint64_t)v61;
        uint64_t v44 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 496))(v42);
        uint64_t v45 = swift_allocObject();
        swift_weakInit();
        id v46 = (void *)swift_allocObject();
        v46[2] = v45;
        v46[3] = v61;
        v46[4] = v62;
        uint64_t v69 = (ValueMetadata *)v8;
        long long v70 = (uint64_t (*)(void *, uint64_t))v63;
        swift_retain();
        outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?((uint64_t)v61);
        swift_retain();
        outlined copy of (@escaping @callee_guaranteed @Sendable (@guaranteed HKStatisticsCollectionQuery, @guaranteed HKStatisticsCollection?, @guaranteed Error?) -> ())?((uint64_t)v61);
        char v47 = isFeatureEnabled(_:)();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        if (v47)
        {
          uint64_t v48 = swift_allocObject();
          *(void *)(v48 + 16) = 0;
          uint64_t v49 = swift_allocObject();
          *(unsigned char *)(v49 + 16) = 1;
          uint64_t v50 = (void *)swift_allocObject();
          v50[2] = v48;
          v50[3] = v44;
          v50[4] = v49;
          v50[5] = partial apply for closure #1 in MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:);
          v50[6] = v46;
          uint64_t v51 = *(void *)(v44 + 16);
          if (v51)
          {
            id v67 = self;
            swift_bridgeObjectRetain_n();
            swift_retain();
            swift_retain();
            swift_retain();
            char v52 = (uint64_t *)(v44 + 40);
            do
            {
              uint64_t v54 = *(v52 - 1);
              uint64_t v53 = *v52;
              uint64_t v55 = one-time initialization token for accessGuard;
              swift_bridgeObjectRetain();
              if (v55 != -1) {
                swift_once();
              }
              v52 += 2;
              uint64_t v56 = (void *)static MOProtectedAppsManager.accessGuard;
              NSString v57 = String._bridgeToObjectiveC()();
              id v58 = [v67 applicationWithBundleIdentifier:v57];

              uint64_t v59 = (void *)swift_allocObject();
              void v59[2] = v49;
              v59[3] = v54;
              v59[4] = v53;
              v59[5] = _s16MomentsUIService22MOProtectedAppsManagerC17requiresChallenge10appSources10completionySayAA0C9AppSourceVG_yAA0ckG6ResultOctFZyycfU_TA_0;
              v59[6] = v50;
              long long v70 = partial apply for closure #2 in static MOProtectedAppsManager.requiresChallenge(appSources:completion:);
              long long v71 = v59;
              aBlock[0] = (uint64_t)_NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed (@guaranteed NSNumber?, @guaranteed Error?) -> ();
              uint64_t v69 = (ValueMetadata *)&block_descriptor_27_0;
              BOOL v60 = _Block_copy(aBlock);
              swift_retain();
              swift_retain();
              swift_release();
              [v56 getIsChallengeCurrentlyRequiredForSubject:v58 completion:v60];
              _Block_release(v60);

              --v51;
            }
            while (v51);
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v43 = (uint64_t)v61;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_release();
            swift_release();
          }
          swift_release();
          swift_release();
        }
        else
        {
          closure #1 in MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(1, v45, v61);
          swift_release();
        }
        swift_release();
        outlined consume of (@escaping @callee_guaranteed () -> ())?(v43);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      uint64_t v64 = a1 + 56;
      uint64_t v13 = 1 << a1[32];
      uint64_t v14 = -1;
      if (v13 < 64) {
        uint64_t v14 = ~(-1 << v13);
      }
      unint64_t v15 = v14 & *((void *)a1 + 7);
      int64_t v65 = (unint64_t)(v13 + 63) >> 6;
      swift_bridgeObjectRetain();
      uint64_t v8 = 0;
      uint64_t v66 = a1;
      if (v15)
      {
LABEL_7:
        unint64_t v16 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v17 = v16 | (v8 << 6);
        goto LABEL_22;
      }
      while (1)
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v18 >= v65) {
          goto LABEL_30;
        }
        unint64_t v19 = *(void *)&v64[8 * v18];
        ++v8;
        if (!v19)
        {
          uint64_t v8 = v18 + 1;
          if (v18 + 1 >= v65) {
            goto LABEL_30;
          }
          unint64_t v19 = *(void *)&v64[8 * v8];
          if (!v19)
          {
            uint64_t v8 = v18 + 2;
            if (v18 + 2 >= v65) {
              goto LABEL_30;
            }
            unint64_t v19 = *(void *)&v64[8 * v8];
            if (!v19) {
              break;
            }
          }
        }
LABEL_21:
        unint64_t v15 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_22:
        uint64_t v21 = (uint64_t *)(*((void *)a1 + 6) + 16 * v17);
        uint64_t v23 = *v21;
        uint64_t v22 = v21[1];
        uint64_t v24 = *(uint64_t (**)(uint64_t *))(*(void *)v4 + 512);
        swift_bridgeObjectRetain();
        uint64_t v25 = (void (*)(uint64_t *, void))v24(aBlock);
        uint64_t v27 = v26;
        uint64_t v28 = *v26;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v27 = v28;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v28 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v28[2] + 1, 1, v28);
          *uint64_t v27 = v28;
        }
        unint64_t v31 = v28[2];
        unint64_t v30 = v28[3];
        if (v31 >= v30 >> 1)
        {
          uint64_t v28 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v30 > 1), v31 + 1, 1, v28);
          *uint64_t v27 = v28;
        }
        Swift::Int v28[2] = v31 + 1;
        char v32 = &v28[2 * v31];
        v32[4] = v23;
        v32[5] = v22;
        v25(aBlock, 0);
        a1 = v66;
        if (v15) {
          goto LABEL_7;
        }
      }
      int64_t v20 = v18 + 3;
      if (v20 >= v65)
      {
LABEL_30:
        swift_release();
        uint64_t v8 = (uint64_t)&type metadata for MOAppProtectionFeatureFlags;
        goto LABEL_31;
      }
      unint64_t v19 = *(void *)&v64[8 * v20];
      if (v19) {
        break;
      }
      while (1)
      {
        uint64_t v8 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          break;
        }
        if (v8 >= v65) {
          goto LABEL_30;
        }
        unint64_t v19 = *(void *)&v64[8 * v8];
        ++v20;
        if (v19) {
          goto LABEL_21;
        }
      }
LABEL_49:
      __break(1u);
LABEL_50:
      swift_once();
    }
    uint64_t v8 = v20;
    goto LABEL_21;
  }
  if (a2) {
    return a2(result);
  }
  return result;
}

uint64_t closure #1 in MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(char a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (a1)
  {
    if (one-time initialization token for filtering != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    __swift_project_value_buffer(v11, (uint64_t)static MOAngelLogger.filtering);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Authentication not required", v14, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      (*(void (**)(void *__return_ptr))(*(void *)Strong + 400))(v27);
      swift_release();
      if (v28)
      {
        outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v27, (uint64_t)v24);
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v27);
        uint64_t v16 = v25;
        uint64_t v17 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 8))(1, v16, v17);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      }
      else
      {
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v27);
      }
    }
    swift_beginAccess();
    uint64_t v19 = swift_weakLoadStrong();
    if (v19)
    {
      (*(void (**)(void))(*(void *)v19 + 528))(0);
      goto LABEL_24;
    }
  }
  else
  {
    if (one-time initialization token for filtering != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.filtering);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Authentication required", v7, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    uint64_t v8 = swift_weakLoadStrong();
    if (v8)
    {
      (*(void (**)(void *__return_ptr))(*(void *)v8 + 400))(v27);
      swift_release();
      if (v28)
      {
        outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v27, (uint64_t)v24);
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v27);
        uint64_t v9 = v25;
        uint64_t v10 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        (*(void (**)(void, uint64_t, uint64_t))(v10 + 8))(0, v9, v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      }
      else
      {
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v27);
      }
    }
    swift_beginAccess();
    uint64_t v18 = swift_weakLoadStrong();
    if (v18)
    {
      (*(void (**)(uint64_t))(*(void *)v18 + 528))(1);
      swift_release();
    }
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      MOSuggestionCollectionViewModel.initiateAuthentication()();
LABEL_24:
      swift_release();
    }
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v21._uint64_t rawValue = (void *)(*(uint64_t (**)(uint64_t))(*(void *)result + 496))(result);
    swift_release();
    swift_beginAccess();
    uint64_t v22 = swift_weakLoadStrong();
    if (v22)
    {
      id v23 = *(id *)(v22 + 200);
      swift_release();
      MOProtectedAppsManager.subscribeToChanges(apps:)(v21);
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  if (a3) {
    return a3(result);
  }
  return result;
}

uint64_t closure #1 in MOSuggestionCollectionViewModel.initiateAuthentication()(char a1)
{
  if (a1)
  {
    if (one-time initialization token for filtering != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.filtering);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Authentication failed", v11, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      (*(void (**)(void *__return_ptr))(*(void *)Strong + 400))(v19);
      swift_release();
      if (v20)
      {
        outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v19, (uint64_t)v16);
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v19);
        uint64_t v13 = v17;
        uint64_t v14 = v18;
        __swift_project_boxed_opaque_existential_1(v16, v17);
        (*(void (**)(void, uint64_t, uint64_t))(v14 + 8))(0, v13, v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      }
      else
      {
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v19);
      }
    }
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(uint64_t))(*(void *)result + 528))(1);
      return swift_release();
    }
  }
  else
  {
    if (one-time initialization token for filtering != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    __swift_project_value_buffer(v1, (uint64_t)static MOAngelLogger.filtering);
    char v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Authentication succeeded", v4, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    uint64_t v5 = swift_weakLoadStrong();
    if (v5)
    {
      (*(void (**)(void *__return_ptr))(*(void *)v5 + 400))(v19);
      swift_release();
      if (v20)
      {
        outlined init with copy of MOProtectedAppsManagerDelegate((uint64_t)v19, (uint64_t)v16);
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v19);
        uint64_t v6 = v17;
        uint64_t v7 = v18;
        __swift_project_boxed_opaque_existential_1(v16, v17);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(1, v6, v7);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      }
      else
      {
        outlined destroy of MOSuggestionCollectionViewDelegate?((uint64_t)v19);
      }
    }
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(void))(*(void *)result + 528))(0);
      return swift_release();
    }
  }
  return result;
}

uint64_t partial apply for closure #1 in MOSuggestionCollectionViewModel.initiateAuthentication()(char a1)
{
  return closure #1 in MOSuggestionCollectionViewModel.initiateAuthentication()(a1 & 1);
}

uint64_t sub_1001930C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001930D0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t _s16MomentsUIService22MOProtectedAppsManagerC13requestAccess10appSources10completionySayAA0C9AppSourceVG_yAA0cK20AuthenticationResultOctFZyycfU_TA_0()
{
  return partial apply for closure #1 in static MOProtectedAppsManager.requestAccess(appSources:completion:)((uint64_t (*)(void, void, void, void, void))closure #1 in static MOProtectedAppsManager.requestAccess(appSources:completion:));
}

uint64_t sub_1001930FC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t block_copy_helper_40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_40()
{
  return swift_release();
}

uint64_t sub_10019315C()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(char a1)
{
  return closure #1 in MOSuggestionCollectionViewModel.validateConditions(additionalBundleIds:completion:)(a1 & 1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t _s16MomentsUIService22MOProtectedAppsManagerC17requiresChallenge10appSources10completionySayAA0C9AppSourceVG_yAA0ckG6ResultOctFZyycfU_TA_0()
{
  return partial apply for closure #1 in static MOProtectedAppsManager.requestAccess(appSources:completion:)((uint64_t (*)(void, void, void, void, void))closure #1 in static MOProtectedAppsManager.requiresChallenge(appSources:completion:));
}

uint64_t partial apply for closure #1 in static MOProtectedAppsManager.requestAccess(appSources:completion:)(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1001931E8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

Swift::Void __swiftcall MOSuggestionCollectionViewModel.didChangeProtectionStatus()()
{
  (*(void (**)(void))(*(void *)v0 + 720))();
}

uint64_t protocol witness for MOProtectedAppsManagerDelegate.didChangeProtectionStatus() in conformance MOSuggestionCollectionViewModel()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 720))();
}

uint64_t outlined destroy of MOSuggestionCollectionViewDelegate?(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for MOSuggestionCollectionViewDelegate?);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *AssetViewConstants.MEDIUM_TOP.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_TOP;
}

void *AssetViewConstants.MEDIUM_BOTTOM.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_BOTTOM;
}

void *AssetViewConstants.SMALL_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SMALL_MARGIN;
}

void *AssetViewConstants.EXTRA_SMALL_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.EXTRA_SMALL_MARGIN;
}

void *AssetViewConstants.LARGE_LABEL_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.LARGE_LABEL_MARGIN;
}

void *AssetViewConstants.LARGE_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.LARGE_MARGIN;
}

void *AssetViewConstants.MEDIUM_LEADING.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_LEADING;
}

void *AssetViewConstants.MEDIUM_TRAILING.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_TRAILING;
}

void *AssetViewConstants.MEDIUM_WIDE_IMAGE_TEXT_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_WIDE_IMAGE_TEXT_MARGIN;
}

void *AssetViewConstants.CORNER_RADIUS.unsafeMutableAddressor()
{
  return &static AssetViewConstants.CORNER_RADIUS;
}

void *MOSuggestionSheetMediaAssetView.__allocating_init(mediaAssetID:mediaPreviewURL:image:mediaType:sizeType:title:subtitle:assignedTileSize:bgColor:associatedColors:colorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, long long a12, uint64_t a13)
{
  id v19 = objc_allocWithZone(v13);
  return specialized MOSuggestionSheetMediaAssetView.init(mediaAssetID:mediaPreviewURL:image:mediaType:sizeType:title:subtitle:assignedTileSize:bgColor:associatedColors:colorVariant:)(a1, a2, a3, a4, a5, a7, a8, a9, a10, a11, (void *)a12, *((uint64_t *)&a12 + 1), a13);
}

void *AssetViewConstants.FULL_IMAGE_TEXT_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.FULL_IMAGE_TEXT_MARGIN;
}

double static AssetViewConstants.FULL_IMAGE_TEXT_MARGIN.getter()
{
  return 16.0;
}

void *AssetViewConstants.MEDIUM_IMAGE_TEXT_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_IMAGE_TEXT_MARGIN;
}

void *AssetViewConstants.SMALL_IMAGE_TEXT_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SMALL_IMAGE_TEXT_MARGIN;
}

double static AssetViewConstants.SOURCE_BADGE_MARGIN_SMALL.getter()
{
  return 6.0;
}

void *AssetViewConstants.PLAY_PLATTER_MARGIN.unsafeMutableAddressor()
{
  return &static AssetViewConstants.PLAY_PLATTER_MARGIN;
}

void *AssetViewConstants.MEDIUM_WIDE_TRAILING.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_WIDE_TRAILING;
}

void *AssetViewConstants.SOURCE_BADGE_EDGE_LENGTH.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_EDGE_LENGTH;
}

double static AssetViewConstants.SOURCE_BADGE_EDGE_LENGTH.getter()
{
  return 15.0;
}

void *AssetViewConstants.SOURCE_BADGE_EDGE_LENGTH_FULLSCREEN_THIRD_PARTY.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_EDGE_LENGTH_FULLSCREEN_THIRD_PARTY;
}

void *AssetViewConstants.SOURCE_BADGE_EDGE_PADDING.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_EDGE_PADDING;
}

void *AssetViewConstants.SOURCE_BADGE_CORNER_RADIUS.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_CORNER_RADIUS;
}

double static AssetViewConstants.SOURCE_BADGE_CORNER_RADIUS.getter()
{
  return 3.0;
}

void *AssetViewConstants.SOURCE_BADGE_MARGIN_SMALL.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_MARGIN_SMALL;
}

void *AssetViewConstants.SOURCE_BADGE_MARGIN_LARGE.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_MARGIN_LARGE;
}

void *AssetViewConstants.SOURCE_BADGE_MARGIN_FULLSCREEN_THIRD_PARTY.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SOURCE_BADGE_MARGIN_FULLSCREEN_THIRD_PARTY;
}

double static AssetViewConstants.SOURCE_BADGE_MARGIN_FULLSCREEN_THIRD_PARTY.getter()
{
  return 18.0;
}

void *AssetViewConstants.LABEL_VIEW_INSET_LARGE_THIRD_PARTY.unsafeMutableAddressor()
{
  return &static AssetViewConstants.LABEL_VIEW_INSET_LARGE_THIRD_PARTY;
}

double static AssetViewConstants.LABEL_VIEW_INSET_LARGE_THIRD_PARTY.getter()
{
  return 13.0;
}

void *AssetViewConstants.EXTRA_LARGE_ICON.unsafeMutableAddressor()
{
  return &static AssetViewConstants.EXTRA_LARGE_ICON;
}

double static AssetViewConstants.EXTRA_LARGE_ICON.getter()
{
  return 90.0;
}

void *AssetViewConstants.LARGE_ICON.unsafeMutableAddressor()
{
  return &static AssetViewConstants.LARGE_ICON;
}

void *AssetViewConstants.SMALL_ICON.unsafeMutableAddressor()
{
  return &static AssetViewConstants.SMALL_ICON;
}

void *AssetViewConstants.MEDIUM_ICON.unsafeMutableAddressor()
{
  return &static AssetViewConstants.MEDIUM_ICON;
}

void *AssetViewConstants.LARGE_ICON_SIZE.unsafeMutableAddressor()
{
  return &static AssetViewConstants.LARGE_ICON_SIZE;
}

double static AssetViewConstants.LARGE_ICON_SIZE.getter()
{
  return 62.0;
}

void *AssetViewConstants.FULL_IMAGE_TEXT_MARGIN_THRID_PARTY.unsafeMutableAddressor()
{
  return &static AssetViewConstants.FULL_IMAGE_TEXT_MARGIN_THRID_PARTY;
}

void *AssetViewConstants.APP_ICON_CORNER_RADIUS.unsafeMutableAddressor()
{
  return &static AssetViewConstants.APP_ICON_CORNER_RADIUS;
}

uint64_t MOSuggestionSheetMediaAssetView.assignedTileSize.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_assignedTileSize);
  swift_beginAccess();
  return *v1;
}

uint64_t MOSuggestionSheetMediaAssetView.assignedTileSize.setter(char a1)
{
  os_log_type_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_assignedTileSize);
  uint64_t result = swift_beginAccess();
  *os_log_type_t v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetMediaAssetView.assignedTileSize.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.mediaAssetID.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaAssetID);
}

uint64_t MOSuggestionSheetMediaAssetView.mediaAssetID.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaAssetID);
}

uint64_t (*MOSuggestionSheetMediaAssetView.mediaAssetID.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t key path setter for MOSuggestionSheetMediaAssetView.mediaPreviewURL : MOSuggestionSheetMediaAssetView(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of URL?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((swift_isaMask & **a2) + 0x138))(v6);
}

uint64_t MOSuggestionSheetMediaAssetView.mediaPreviewURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL;
  swift_beginAccess();
  return outlined init with copy of URL?(v3, a1);
}

uint64_t MOSuggestionSheetMediaAssetView.mediaPreviewURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL;
  swift_beginAccess();
  outlined assign with take of URL?(a1, v3);
  return swift_endAccess();
}

uint64_t (*MOSuggestionSheetMediaAssetView.mediaPreviewURL.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetMediaAssetView.image.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionSheetMediaAssetView.image.setter(void *a1)
{
}

uint64_t (*MOSuggestionSheetMediaAssetView.image.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.mediaType.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaType;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t MOSuggestionSheetMediaAssetView.mediaType.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaType);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetMediaAssetView.mediaType.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.title.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_title);
}

uint64_t MOSuggestionSheetMediaAssetView.title.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_title);
}

uint64_t (*MOSuggestionSheetMediaAssetView.title.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.subtitle.getter()
{
  return MOSuggestionMapSnapshotView.prominentField.getter(&OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitle);
}

uint64_t MOSuggestionSheetMediaAssetView.subtitle.setter(uint64_t a1, uint64_t a2)
{
  return MOSuggestionMapSnapshotView.prominentField.setter(a1, a2, &OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitle);
}

uint64_t (*MOSuggestionSheetMediaAssetView.subtitle.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetMediaAssetView.bgColor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionSheetMediaAssetView.bgColor.setter(void *a1)
{
}

uint64_t (*MOSuggestionSheetMediaAssetView.bgColor.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.bgColorVariant.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t MOSuggestionSheetMediaAssetView.bgColorVariant.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*MOSuggestionSheetMediaAssetView.bgColorVariant.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionSheetMediaAssetView.associatedColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MOSuggestionSheetMediaAssetView.associatedColors.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors);
  swift_beginAccess();
  *id v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*MOSuggestionSheetMediaAssetView.associatedColors.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetMediaAssetView.circularProgressIndicator.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionSheetMediaAssetView.circularProgressIndicator.setter(void *a1)
{
}

uint64_t (*MOSuggestionSheetMediaAssetView.circularProgressIndicator.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

void *MOSuggestionSheetMediaAssetView.init(mediaAssetID:mediaPreviewURL:image:mediaType:sizeType:title:subtitle:assignedTileSize:bgColor:associatedColors:colorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, void *a12, uint64_t a13, uint64_t a14)
{
  return specialized MOSuggestionSheetMediaAssetView.init(mediaAssetID:mediaPreviewURL:image:mediaType:sizeType:title:subtitle:assignedTileSize:bgColor:associatedColors:colorVariant:)(a1, a2, a3, a4, a5, a7, a8, a9, a10, a11, a12, a13, a14);
}

uint64_t MOSuggestionSheetMediaAssetView.sourceImageMargin.getter()
{
  int v1 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v0) + 0x100))();
  if ((v1 - 4) < 4) {
    return 0x4018000000000000;
  }
  if (v1 == 8) {
    return 0x4024000000000000;
  }
  if (v1 == 2) {
    return 0x4018000000000000;
  }
  return 0;
}

uint64_t MOSuggestionSheetMediaAssetView.sourceImageMarginThirdParty.getter()
{
  if ((*(unsigned __int8 (**)(void))((swift_isaMask & *v0) + 0x100))() == 8) {
    return 0x4032000000000000;
  }
  else {
    return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
  }
}

uint64_t MOSuggestionSheetMediaAssetView.sourceImageLengthThirdParty.getter()
{
  int v1 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v0) + 0x100))();
  if ((v1 - 4) < 4) {
    return 0x402E000000000000;
  }
  if (v1 == 8) {
    return 0x404E000000000000;
  }
  if (v1 == 2) {
    return 0x402E000000000000;
  }
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
}

uint64_t MOSuggestionSheetMediaAssetView.sourceImageCornerRadiusThirdParty.getter()
{
  int v1 = (*(unsigned __int8 (**)(void))((swift_isaMask & *v0) + 0x100))();
  if ((v1 - 4) < 4) {
    return 0x4008000000000000;
  }
  if (v1 == 8) {
    return 0x401C000000000000;
  }
  if (v1 == 2) {
    return 0x4008000000000000;
  }
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
}

Swift::Void __swiftcall MOSuggestionSheetMediaAssetView.addSourceImage()()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
  if ((v2 & 1) == 0)
  {
    double v3 = *(double *)&v1;
    id v4 = MOSuggestionSheetMediaAssetView.sourceSymbolImage.getter();
    if (v4)
    {
      if ((*((unsigned char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback) & 1) == 0)
      {
        uint64_t v5 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView;
        id v54 = v4;
        [*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView) setImage:];
        uint64_t v6 = *(void **)((char *)v0 + v5);
        uint64_t v7 = self;
        id v8 = v6;
        id v9 = [v7 whiteColor];
        [v8 setTintColor:v9];

        uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceBlurContainerView;
        [*(id *)((char *)v0+ OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceBlurContainerView) _setCornerRadius:3.0];
        [v0 addSubview:*(void *)((char *)v0 + v10)];
        id v11 = [*(id *)((char *)v0 + v10) contentView];
        [v11 addSubview:*(void *)((char *)v0 + v5)];

        uint64_t v12 = &selRef_collectionView_didSelectItemAtIndexPath_;
        [*(id *)((char *)v0 + v5) setTranslatesAutoresizingMaskIntoConstraints:0];
        id v13 = *(id *)((char *)v0 + v5);
        id v14 = [v13 superview];
        if (v14)
        {
          unint64_t v15 = v14;
          [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v16 = [v13 leadingAnchor];
          id v17 = [v15 leadingAnchor];
          id v18 = [v16 constraintEqualToAnchor:v17];

          [v18 setConstant:2.4];
          if (v18)
          {
            id v18 = v18;
            [v18 setActive:1];

            id v13 = v18;
          }

          uint64_t v12 = &selRef_collectionView_didSelectItemAtIndexPath_;
        }
        else
        {
          id v18 = 0;
          unint64_t v15 = v13;
        }

        id v19 = *(id *)((char *)v0 + v5);
        id v20 = [v19 superview];
        if (v20)
        {
          Swift::OpaquePointer v21 = v20;
          [v19 v12[92]];
          id v22 = [v19 trailingAnchor];
          id v23 = [v21 trailingAnchor];
          id v24 = [v22 constraintEqualToAnchor:v23];

          [v24 setConstant:-2.4];
          if (v24)
          {
            id v24 = v24;
            [v24 setActive:1];

            id v19 = v24;
          }

          uint64_t v12 = &selRef_collectionView_didSelectItemAtIndexPath_;
        }
        else
        {
          id v24 = 0;
          Swift::OpaquePointer v21 = v19;
        }

        id v25 = *(id *)((char *)v0 + v5);
        id v26 = [v25 superview];
        if (v26)
        {
          uint64_t v27 = v26;
          [v25 v12[92]];
          id v28 = [v25 topAnchor];
          id v29 = [v27 topAnchor];
          id v30 = [v28 constraintEqualToAnchor:v29];

          [v30 setConstant:2.0];
          if (v30)
          {
            id v30 = v30;
            [v30 setActive:1];

            id v25 = v30;
          }

          uint64_t v12 = &selRef_collectionView_didSelectItemAtIndexPath_;
        }
        else
        {
          id v30 = 0;
          uint64_t v27 = v25;
        }

        id v31 = *(id *)((char *)v0 + v5);
        id v32 = [v31 superview];
        if (v32)
        {
          uint64_t v33 = v32;
          [v31 v12[92]];
          id v34 = [v31 bottomAnchor];
          id v35 = [v33 bottomAnchor];
          id v36 = [v34 constraintEqualToAnchor:v35];

          if (v36)
          {
            [v36 setConstant:-2.4];
            id v36 = v36;
            [v36 setActive:1];

            id v31 = v36;
          }

          uint64_t v12 = &selRef_collectionView_didSelectItemAtIndexPath_;
        }
        else
        {
          id v36 = 0;
          uint64_t v33 = v31;
        }
        double v37 = v3;

        [*(id *)((char *)v0 + v10) v12[92]];
        id v38 = *(id *)((char *)v0 + v10);
        id v39 = [v38 superview];
        if (v39)
        {
          unint64_t v40 = v39;
          [v38 v12[92]];
          id v41 = [v38 leadingAnchor];
          id v42 = [v40 leadingAnchor];
          id v43 = [v41 constraintEqualToAnchor:v42];

          [v43 setConstant:v37];
          if (v43)
          {
            id v43 = v43;
            [v43 setActive:1];

            id v38 = v43;
          }

          uint64_t v12 = &selRef_collectionView_didSelectItemAtIndexPath_;
        }
        else
        {
          id v43 = 0;
          unint64_t v40 = v38;
        }

        id v44 = *(id *)((char *)v0 + v10);
        id v45 = [v44 superview];
        if (v45)
        {
          id v46 = v45;
          [v44 v12[92]];
          id v47 = [v44 bottomAnchor];
          id v48 = [v46 bottomAnchor];
          id v49 = [v47 constraintEqualToAnchor:v48];

          if (v49)
          {
            [v49 setConstant:-v37];
            id v49 = v49;
            [v49 setActive:1];

            id v44 = v49;
          }
        }
        else
        {
          id v49 = 0;
          id v46 = v44;
        }

        id v50 = [*(id *)((char *)v0 + v10) widthAnchor];
        id v51 = [v50 constraintEqualToConstant:15.0];

        [v51 setActive:1];
        id v52 = [*(id *)((char *)v0 + v10) heightAnchor];
        id v53 = [v52 constraintEqualToConstant:15.0];

        [v53 setActive:1];
      }
      _objc_release_x2();
    }
  }
}

Swift::Void __swiftcall MOSuggestionSheetMediaAssetView.addSourceAppImageBadge(unmaskedAppIcon:)(UIImage unmaskedAppIcon)
{
  *(double *)&uint64_t v3 = COERCE_DOUBLE((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x320))());
  if ((v4 & 1) == 0)
  {
    double v5 = *(double *)&v3;
    uint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x328))();
    if ((v7 & 1) == 0)
    {
      double v8 = *(double *)&v6;
      *(double *)&uint64_t v9 = COERCE_DOUBLE((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x330))());
      if ((v10 & 1) == 0)
      {
        double v11 = v5;
        double v12 = v8;
        double v13 = *(double *)&v9;
        uint64_t v14 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView;
        [*(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView) setImage:unmaskedAppIcon.super.isa];
        [*(id *)((char *)v1 + v14) _setCornerRadius:v13];
        [*(id *)((char *)v1 + v14) setClipsToBounds:1];
        [v1 addSubview:*(void *)((char *)v1 + v14)];
        [*(id *)((char *)v1 + v14) setTranslatesAutoresizingMaskIntoConstraints:0];
        id v15 = *(id *)((char *)v1 + v14);
        id v16 = [v15 superview];
        id v17 = &selRef_collectionView_didSelectItemAtIndexPath_;
        if (v16)
        {
          id v18 = v16;
          [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v19 = [v15 leadingAnchor];
          id v20 = [v18 leadingAnchor];
          id v21 = [v19 constraintEqualToAnchor:v20];

          [v21 setConstant:v11];
          if (v21)
          {
            id v21 = v21;
            id v17 = &selRef_collectionView_didSelectItemAtIndexPath_;
            [v21 setActive:1];

            id v15 = v21;
          }
          else
          {
            id v17 = &selRef_collectionView_didSelectItemAtIndexPath_;
          }
        }
        else
        {
          id v21 = 0;
          id v18 = v15;
        }

        id v22 = *(id *)((char *)v1 + v14);
        id v23 = [v22 superview];
        if (v23)
        {
          id v24 = v23;
          id v25 = v17;
          [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v26 = [v22 bottomAnchor];
          id v27 = [v24 bottomAnchor];
          id v28 = [v26 constraintEqualToAnchor:v27];

          if (v28)
          {
            [v28 setConstant:-v11];
            id v28 = v28;
            id v17 = v25;
            [v28 v25[139]:1];

            id v22 = v28;
          }
          else
          {
            id v17 = v25;
          }
        }
        else
        {
          id v28 = 0;
          id v24 = v22;
        }

        id v29 = [*(id *)((char *)v1 + v14) widthAnchor];
        id v30 = [v29 constraintEqualToConstant:v12];

        [v30 v17[139]:1];
        id v31 = [*(id *)((char *)v1 + v14) heightAnchor];
        id v32 = [v31 constraintEqualToConstant:v12];

        [v32 v17[139]:1];
      }
    }
  }
}

UIImageView __swiftcall MOSuggestionSheetMediaAssetView.createCoverArt()()
{
  id v1 = [objc_allocWithZone((Class)UIImageView) init];
  char v2 = v1;
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback) == 1)
  {
    [v1 setContentMode:4];
    uint64_t v3 = one-time initialization token for BACKGROUND_COLOR;
    id v4 = v2;
    if (v3 != -1) {
      swift_once();
    }
    [v4 setBackgroundColor:static FallbackConstants.BACKGROUND_COLOR];

    if (one-time initialization token for IMAGE_TINT_COLOR != -1) {
      swift_once();
    }
    id v5 = [v4 setTintColor:static FallbackConstants.IMAGE_TINT_COLOR];
    uint64_t v6 = *(unsigned __int8 (**)(void))((swift_isaMask & *v0) + 0x100);
    if (((unsigned __int8 (*)(id))v6)(v5) == 6 || v6() == 5 || v6() == 8)
    {
      if (one-time initialization token for BIG_SYMBOL != -1) {
        swift_once();
      }
      char v7 = &static FallbackConstants.BIG_SYMBOL;
    }
    else
    {
      if (one-time initialization token for SMALL_SYMBOL != -1) {
        swift_once();
      }
      char v7 = &static FallbackConstants.SMALL_SYMBOL;
    }
    double v8 = (void *)*v7;
    if (*(void *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_fallbackSymbol + 8))
    {
      id v9 = v8;
      swift_bridgeObjectRetain();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v13 = v8;
      NSString v10 = 0;
    }
    id v12 = [self _systemImageNamed:v10 withConfiguration:v8];

    [v4 setImage:v12];
  }
  else
  {
    [v1 setContentMode:2];
    id v11 = [v2 setClipsToBounds:1];
    id v12 = (id)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x148))(v11);
    [v2 setImage:v12];
  }

  return (UIImageView)v2;
}

id MOSuggestionSheetMediaAssetView.blendColor(baseColor:overlayColor:opacity:)(void *a1, void *a2, double a3)
{
  if (a3 <= 0.0)
  {
    return a1;
  }
  else
  {
    double v12 = 0.0;
    double v13 = 0.0;
    uint64_t v10 = 0;
    double v11 = 0.0;
    double v8 = 0.0;
    double v9 = 0.0;
    uint64_t v6 = 0;
    double v7 = 0.0;
    double v4 = 1.0 / (a3 + 1.0);
    [a1 getRed:&v13 green:&v12 blue:&v11 alpha:&v10];
    [a2 getRed:&v9 green:&v8 blue:&v7 alpha:&v6];
    return [objc_allocWithZone((Class)UIColor) initWithRed:v4 * v13 + (1.0 - v4) * v9 green:v4 * v12 + (1.0 - v4) * v8 blue:v4 * v11 + (1.0 - v4) * v7 alpha:1.0];
  }
}

Swift::Void __swiftcall MOSuggestionSheetMediaAssetView.addCoverArtAndMetadataForThirdParty(horizontal:)(Swift::Bool horizontal)
{
  char v2 = v1;
  uint64_t v3 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x100);
  if (((unsigned __int8 (*)(Swift::Bool))v3)(horizontal) == 3)
  {
    double v4 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x348))();
    [v2 addSubview:v4];
    UIView.fillSuper(margin:)(0.0);

    swift_bridgeObjectRelease();
    return;
  }
  type metadata accessor for ThirdPartyMediaColorEffectView();
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v6 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x1A8);
  double v7 = (void *)v6();

  uint64_t v192 = v5;
  unint64_t v193 = v3;
  if (v7)
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.assets);
    double v9 = v2;
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      double v13 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412546;
      uint64_t v14 = v6();
      uint64_t v20 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *double v13 = v14;
      *(_WORD *)(v12 + 12) = 2048;
      (*(void (**)(uint64_t))((swift_isaMask & *v9) + 0x1C0))(v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "[MOSuggestionSheetMediaAssetView] bgColor %@ and variant %lu", (uint8_t *)v12, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for NSObject?);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v5 = v192;
    }
    else
    {
    }
    uint64_t v21 = v6();
    uint64_t v22 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v5) + 0x80))(v21);
    uint64_t v23 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v9) + 0x1C0))(v22);
    (*(void (**)(uint64_t, void))((swift_isaMask & *v5) + 0x98))(v23, 0);
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v9 addSubview:v5];
    UIView.fillSuper(margin:)(0.0);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    __swift_project_value_buffer(v15, (uint64_t)static MOAngelLogger.assets);
    id v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[MOSuggestionSheetMediaAssetView] bgColor is empty, use default color.", v18, 2u);
      swift_slowDealloc();
    }

    id v19 = [self systemGrayColor];
    [v2 _setBackgroundColor:v19];
  }
  uint64_t v24 = v3();
  if (v24 != 2) {
    uint64_t v24 = v3();
  }
  id v25 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x348))(v24);
  char v26 = v3();
  double v27 = 3.0;
  if (v26 != 2)
  {
    char v28 = ((uint64_t (*)(double))v3)(3.0);
    double v27 = 8.0;
    if (v28 == 3) {
      double v27 = 3.0;
    }
  }
  id v189 = v25;
  [v25 _setCornerRadius:v27];
  id v29 = [v2 traitCollection];
  id v30 = [v29 preferredContentSizeCategory];

  char v31 = static UIContentSizeCategory.> infix(_:_:)();
  uint64_t v32 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView;
  if (((unsigned __int8 (*)(id))v3)([*(id *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView) setAxis:1]) == 8) {
    [*(id *)((char *)v2 + v32) setSpacing:2.0];
}
  [*(id *)((char *)v2 + v32) setAlignment:1];
  }
  [*(id *)((char *)v2 + v32) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v33 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel;
  id v34 = *(void (**)(void))((swift_isaMask & *v2) + 0x178);
  id v35 = *(id *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel);
  uint64_t v188 = (uint64_t (*)(void))v34;
  v34();
  if (v36)
  {
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v37 = 0;
  }
  [v35 setText:v37];

  uint64_t v38 = v33;
  id v39 = [*(id *)((char *)v2 + v33) setNumberOfLines:2];
  if ((v31 & 1) != 0 && (((unsigned __int8 (*)(id))v3)(v39) == 2 || v3() == 4)) {
    [*(id *)((char *)v2 + v33) setNumberOfLines:1];
  }
  [*(id *)((char *)v2 + v33) setLineBreakMode:4];
  uint64_t v194 = v32;
  if (((unsigned __int8 (*)(id))v3)(objc_msgSend(*(id *)((char *)v2 + v33), "setMaximumContentSizeCategory:")) == 8)
  {
    unint64_t v40 = *(void **)((char *)v2 + v33);
    id v41 = self;
    id v42 = v40;
    id v43 = [v41 preferredFontForTextStyle:UIFontTextStyleBody];
    id v44 = [v43 fontDescriptor];
    id v45 = [v44 fontDescriptorWithSymbolicTraits:2];

    if (!v45)
    {
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    Class isa = (Class)[v41 fontWithDescriptor:v45 size:0.0];

    [v42 setFont:isa];
  }
  else
  {
    if (v3() == 7 || v3() == 5)
    {
      id v47 = *(void **)((char *)v2 + v33);
      id v48 = self;
      id v42 = v47;
      id v49 = [v48 preferredFontForTextStyle:UIFontTextStyleFootnote];
    }
    else
    {
      id v50 = *(void **)((char *)v2 + v33);
      id v51 = self;
      id v42 = v50;
      id v49 = [v51 preferredFontForTextStyle:UIFontTextStyleCaption2];
    }
    id v52 = v49;
    Class isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

    [v42 setFont:isa];
  }

  id v53 = *(void **)((char *)v2 + v38);
  id v54 = self;
  id v55 = v53;
  id v56 = [v54 whiteColor];
  id v57 = [v56 colorWithAlphaComponent:0.6];

  [v55 setTextColor:v57];
  id v58 = [*(id *)((char *)v2 + v38) layer];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v59 = objc_allocWithZone((Class)CAFilter);
  NSString v60 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v61 = [v59 initWithType:v60];

  [v58 setCompositingFilter:v61];
  Swift::String v190 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x1C0);
  if (v190() == 1)
  {
    id v62 = *(id *)((char *)v2 + v38);
    id v63 = [v54 blackColor];
    id v64 = [v63 colorWithAlphaComponent:0.6];

    [v62 setTextColor:v64];
  }
  id v191 = v54;
  [*(id *)((char *)v2 + v38) setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)((char *)v2 + v38) setAdjustsFontForContentSizeCategory:1];
  uint64_t v65 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel;
  uint64_t v66 = *(void (**)(void))((swift_isaMask & *v2) + 0x190);
  id v67 = objc_retain(*(id *)((char *)v2
                          + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel));
  v66();
  if (v68)
  {
    NSString v69 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v69 = 0;
  }
  long long v70 = (unsigned __int8 (*)(void))v193;
  [v67 setText:v69];

  if ((v31 & 1) != 0 || (uint64_t v71 = v188(), !v72))
  {
    uint64_t v77 = 1;
    uint64_t v78 = &selRef_collectionView_didSelectItemAtIndexPath_;
    goto LABEL_49;
  }
  uint64_t v73 = v71;
  uint64_t v74 = v72;
  unsigned __int8 v75 = v193() - 2;
  if (v75 > 8u) {
    double v76 = 287.0;
  }
  else {
    double v76 = dbl_1001DEF98[(char)v75];
  }
  id v85 = *(id *)((char *)v2 + v38);
  id v86 = [v85 font];
  if (!v86) {
    goto LABEL_137;
  }
  char v87 = v86;
  double v88 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, v86, v76);

  id v89 = *(id *)((char *)v2 + v38);
  id v90 = [v89 font];
  if (!v90)
  {
LABEL_138:
    __break(1u);
    JUMPOUT(0x10019704CLL);
  }
  uint64_t v91 = v90;
  double v92 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(v73, v74, v90, v76);

  uint64_t v93 = swift_bridgeObjectRelease();
  long long v70 = (unsigned __int8 (*)(void))v193;
  if (((unsigned __int8 (*)(uint64_t))v193)(v93) == 2 || v193() == 4)
  {
    uint64_t v78 = &selRef_collectionView_didSelectItemAtIndexPath_;
    if (v88 >= v92)
    {
LABEL_60:
      uint64_t v77 = 2;
      goto LABEL_49;
    }
  }
  else
  {
    uint64_t v78 = &selRef_collectionView_didSelectItemAtIndexPath_;
    if (v193() != 3 || v88 >= v92) {
      goto LABEL_60;
    }
  }
  uint64_t v77 = 1;
LABEL_49:
  [*(id *)((char *)v2 + v65) setNumberOfLines:v77];
  [*(id *)((char *)v2 + v65) v78[185]:4];
  if (((unsigned __int8 (*)(id))v70)([*(id *)((char *)v2 + v65) setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium]) == 8)
  {
    char v79 = *(void **)((char *)v2 + v65);
    unint64_t v80 = self;
    id v81 = v79;
    id v82 = [v80 preferredFontForTextStyle:UIFontTextStyleBody];
  }
  else if (v70() == 7 || v70() == 5)
  {
    uint64_t v83 = *(void **)((char *)v2 + v65);
    uint64_t v84 = self;
    id v81 = v83;
    id v82 = [v84 preferredFontForTextStyle:UIFontTextStyleFootnote];
  }
  else
  {
    uint64_t v94 = *(void **)((char *)v2 + v65);
    id v95 = self;
    id v81 = v94;
    id v82 = [v95 preferredFontForTextStyle:UIFontTextStyleCaption2];
  }
  id v96 = v82;
  [v81 setFont:v96];

  if (v70() == 4 || v70() == 2)
  {
    id v97 = *(id *)((char *)v2 + v65);
    id v98 = [v191 whiteColor];
    id v99 = [v98 colorWithAlphaComponent:0.25];

    [v97 setTextColor:v99];
    if (v190() == 1)
    {
      id v100 = *(id *)((char *)v2 + v65);
      id v101 = [v191 blackColor];
      id v102 = [v101 colorWithAlphaComponent:0.4];
LABEL_68:
      id v106 = v102;

      [v100 setTextColor:v106];
    }
  }
  else
  {
    id v103 = *(id *)((char *)v2 + v65);
    id v104 = [v191 whiteColor];
    id v105 = [v104 colorWithAlphaComponent:0.6];

    [v103 setTextColor:v105];
    if (v190() == 1)
    {
      id v100 = *(id *)((char *)v2 + v65);
      id v101 = [v191 blackColor];
      id v102 = [v101 colorWithAlphaComponent:0.6];
      goto LABEL_68;
    }
  }
  [*(id *)((char *)v2 + v65) setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)((char *)v2 + v65) setAdjustsFontForContentSizeCategory:1];
  uint64_t v107 = v194;
  [*(id *)((char *)v2 + v194) addArrangedSubview:*(void *)((char *)v2 + v38)];
  [*(id *)((char *)v2 + v194) addArrangedSubview:*(void *)((char *)v2 + v65)];
  if (((unsigned __int8 (*)(id))v70)([*(id *)((char *)v2 + v194) setCustomSpacing:*(void *)((char *)v2 + v38) afterView:3.0]) == 5
    || v70() == 8)
  {
    uint64_t v108 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel;
    [*(id *)((char *)v2 + v194) addArrangedSubview:*(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel)];
    int v109 = ((unsigned __int8 (*)(id))v70)([*(id *)((char *)v2 + v108) setNumberOfLines:1]);
    uint64_t v110 = *(void **)((char *)v2 + v108);
    id v111 = self;
    if (v109 == 8) {
      double v112 = 10.0;
    }
    else {
      double v112 = 6.0;
    }
    uint64_t v113 = &UIFontTextStyleCaption2;
    if (v109 == 8) {
      uint64_t v113 = &UIFontTextStyleBody;
    }
    UIFontTextStyle v114 = *v113;
    id v115 = v110;
    id v116 = [v111 preferredFontForTextStyle:v114];
    [v115 setFont:v116];

    [*(id *)((char *)v2 + v194) setCustomSpacing:*(void *)((char *)v2 + v65) afterView:v112];
    id v117 = *(id *)((char *)v2 + v108);
    id v118 = [v191 whiteColor];
    id v119 = [v118 colorWithAlphaComponent:0.25];

    [v117 setTextColor:v119];
    if (v190() == 1)
    {
      id v120 = *(id *)((char *)v2 + v108);
      id v121 = [v191 blackColor];
      id v122 = [v121 colorWithAlphaComponent:0.25];

      [v120 setTextColor:v122];
    }
    uint64_t v123 = *(void **)((char *)v2 + v108);
    if (*(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category + 8))
    {
      id v124 = v123;
      swift_bridgeObjectRetain();
      NSString v125 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v126 = v123;
      NSString v125 = 0;
    }
    long long v70 = (unsigned __int8 (*)(void))v193;
    uint64_t v107 = v194;
    id v127 = &selRef_collectionView_didSelectItemAtIndexPath_;
    [v123 setText:v125];

    [*(id *)((char *)v2 + v108) setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
    [*(id *)((char *)v2 + v108) setAdjustsFontForContentSizeCategory:1];
    goto LABEL_82;
  }
  uint64_t v141 = ((uint64_t (*)(void))v66)();
  if (!v142) {
    goto LABEL_95;
  }
  uint64_t v143 = v141;
  unint64_t v144 = v142;
  uint64_t v141 = swift_bridgeObjectRelease();
  uint64_t v145 = HIBYTE(v144) & 0xF;
  if ((v144 & 0x2000000000000000) == 0) {
    uint64_t v145 = v143 & 0xFFFFFFFFFFFFLL;
  }
  if (v145)
  {
LABEL_95:
    ((void (*)(uint64_t))v66)(v141);
    uint64_t v147 = v146;
    swift_bridgeObjectRelease();
    id v127 = &selRef_collectionView_didSelectItemAtIndexPath_;
    if (v147) {
      goto LABEL_82;
    }
    uint64_t v148 = *(void **)((char *)v2 + v65);
    if (*(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category + 8)) {
      goto LABEL_97;
    }
LABEL_124:
    id v176 = v148;
    NSString v150 = 0;
    goto LABEL_125;
  }
  uint64_t v148 = *(void **)((char *)v2 + v65);
  id v127 = &selRef_collectionView_didSelectItemAtIndexPath_;
  if (!*(void *)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category + 8)) {
    goto LABEL_124;
  }
LABEL_97:
  id v149 = v148;
  swift_bridgeObjectRetain();
  NSString v150 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
LABEL_125:
  [v148 setText:v150];

LABEL_82:
  switch(((unsigned __int8 (*)(id))v70)(objc_msgSend(*(id *)((char *)v192 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView), v127[164], *(void *)((char *)v2 + v107))))
  {
    case 2u:
    case 4u:
      id v135 = *(id *)((char *)v2 + v107);
      id v136 = [v135 superview];
      if (v136)
      {
        unint64_t v137 = v136;
        [v135 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v138 = [v135 leadingAnchor];
        id v139 = [v137 leadingAnchor];
        id v140 = [v138 constraintEqualToAnchor:v139];

        [v140 setConstant:6.6];
        if (v140)
        {
          id v140 = v140;
          [v140 setActive:1];

          id v135 = v140;
        }
        id v134 = v189;

        uint64_t v107 = v194;
      }
      else
      {
        id v140 = 0;
        unint64_t v137 = v135;
        id v134 = v189;
      }

      id v165 = *(id *)((char *)v2 + v107);
      id v166 = [v165 superview];
      if (v166)
      {
        uint64_t v167 = v166;
        [v165 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v168 = [v165 trailingAnchor];
        id v169 = [v167 trailingAnchor];
        id v170 = [v168 constraintEqualToAnchor:v169];

        [v170 setConstant:-6.0];
        if (v170)
        {
          id v170 = v170;
          [v170 setActive:1];

          id v165 = v170;
        }

        uint64_t v107 = v194;
      }
      else
      {
        id v170 = 0;
        uint64_t v167 = v165;
      }

      id v157 = *(id *)((char *)v2 + v107);
      id v158 = [v157 superview];
      if (!v158) {
        goto LABEL_119;
      }
      goto LABEL_117;
    case 5u:
    case 6u:
    case 7u:
      id v128 = *(id *)((char *)v2 + v107);
      id v129 = [v128 superview];
      if (v129)
      {
        int v130 = v129;
        [v128 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v131 = [v128 leadingAnchor];
        id v132 = [v130 leadingAnchor];
        id v133 = [v131 constraintEqualToAnchor:v132];

        [v133 setConstant:14.3];
        if (v133)
        {
          id v133 = v133;
          [v133 setActive:1];

          id v128 = v133;
        }
        id v134 = v189;

        uint64_t v107 = v194;
      }
      else
      {
        id v133 = 0;
        int v130 = v128;
        id v134 = v189;
      }

      id v151 = *(id *)((char *)v2 + v107);
      id v152 = [v151 superview];
      if (v152)
      {
        id v153 = v152;
        [v151 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v154 = [v151 trailingAnchor];
        id v155 = [v153 trailingAnchor];
        id v156 = [v154 constraintEqualToAnchor:v155];

        [v156 setConstant:-13.0];
        if (v156)
        {
          id v156 = v156;
          [v156 setActive:1];

          id v151 = v156;
        }

        uint64_t v107 = v194;
      }
      else
      {
        id v156 = 0;
        id v153 = v151;
      }

      id v157 = *(id *)((char *)v2 + v107);
      id v158 = [v157 superview];
      if (v158)
      {
LABEL_117:
        uint64_t v171 = v158;
        [v157 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v172 = [v157 topAnchor];
        id v173 = [v171 topAnchor];
        id v174 = [v172 constraintEqualToAnchor:v173];

        [v174 setConstant:13.0];
        id v175 = v174;
        [v175 setActive:1];

        goto LABEL_118;
      }
LABEL_119:

      break;
    case 8u:
      id v159 = *(id *)((char *)v2 + v107);
      id v160 = [v159 superview];
      if (v160)
      {
        id v161 = v160;
        [v159 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v162 = [v159 leadingAnchor];
        id v163 = [v161 leadingAnchor];
        id v164 = [v162 constraintEqualToAnchor:v163];

        [v164 setConstant:18.0];
        if (v164)
        {
          id v164 = v164;
          [v164 setActive:1];

          id v159 = v164;
        }

        uint64_t v107 = v194;
      }
      else
      {
        id v164 = 0;
        id v161 = v159;
      }

      id v177 = *(id *)((char *)v2 + v107);
      id v178 = [v177 superview];
      if (v178)
      {
        uint64_t v179 = v178;
        [v177 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v180 = [v177 trailingAnchor];
        id v181 = [v179 trailingAnchor];
        id v182 = [v180 constraintEqualToAnchor:v181];

        [v182 setConstant:-18.0];
        if (v182)
        {
          id v182 = v182;
          [v182 setActive:1];

          id v177 = v182;
        }

        uint64_t v107 = v194;
      }
      else
      {
        id v182 = 0;
        uint64_t v179 = v177;
      }

      id v183 = *(id *)((char *)v2 + v107);
      id v184 = [v183 superview];
      if (v184)
      {
        uint64_t v171 = v184;
        [v183 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v185 = [v183 topAnchor];
        id v186 = [v171 topAnchor];
        id v187 = [v185 constraintEqualToAnchor:v186];

        [v187 setConstant:23.4];
        id v175 = v187;
        [v175 setActive:1];

LABEL_118:
      }
      else
      {

LABEL_135:
      }
      break;
    default:
      goto LABEL_135;
  }
}

Swift::Void __swiftcall MOSuggestionSheetMediaAssetView.addCoverArtAndMetadata()()
{
  id v1 = v0;
  uint64_t v155 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback;
  if ((*((unsigned char *)v0 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback) & 1) == 0)
  {
    char v2 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x348))();
    [v1 addSubview:v2];
    UIView.fillSuper(margin:)(0.0);

    swift_bridgeObjectRelease();
  }
  id v3 = [self effectWithStyle:16];
  id v4 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v3];
  [v1 addSubview:v4];
  id v5 = [v4 superview];
  if (v5)
  {
    uint64_t v6 = v5;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v7 = [v4 trailingAnchor];
    id v8 = [v6 trailingAnchor];
    id v9 = [v7 constraintEqualToAnchor:v8];

    [v9 setConstant:0.0];
    if (v9)
    {
      id v10 = v9;
      [v10 setActive:1];
    }
  }
  id v11 = [v4 superview:v155];
  if (v11)
  {
    uint64_t v12 = v11;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v13 = [v4 bottomAnchor];
    id v14 = [v12 bottomAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    if (v15)
    {
      [v15 setConstant:-0.0];
      id v16 = v15;
      [v16 setActive:1];
    }
  }
  id v17 = [v4 superview];
  if (v17)
  {
    id v18 = v17;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v19 = [v4 topAnchor];
    id v20 = [v18 topAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    [v21 setConstant:0.0];
    if (v21)
    {
      id v22 = v21;
      [v22 setActive:1];
    }
  }
  id v158 = v4;
  id v23 = [v4 widthAnchor];
  id v24 = [v1 widthAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 multiplier:0.5];

  [v25 setActive:1];
  char v26 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x348))();
  [v1 addSubview:v26];
  id v27 = [v26 superview];
  id v160 = v26;
  if (v27)
  {
    char v28 = v27;
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v26 leadingAnchor];
    id v30 = [v28 leadingAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    [v31 setConstant:0.0];
    id v32 = v31;
    char v26 = v160;
    id v33 = v32;
    [v32 setActive:1];
  }
  id v34 = [v26 superview];
  if (v34)
  {
    id v35 = v34;
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v36 = [v26 topAnchor];
    id v37 = [v35 topAnchor];
    id v38 = [v36 constraintEqualToAnchor:v37];

    [v38 setConstant:0.0];
    id v39 = v38;
    char v26 = v160;
    id v40 = v39;
    [v39 setActive:1];
  }
  id v41 = [v26 superview];
  if (v41)
  {
    id v42 = v41;
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v43 = [v26 bottomAnchor];
    id v44 = [v42 bottomAnchor];
    id v45 = [v43 constraintEqualToAnchor:v44];

    if (v45)
    {
      [v45 setConstant:-0.0];
      id v46 = v45;
      [v46 setActive:1];
    }
    char v26 = v160;
  }
  id v47 = [v26 widthAnchor];
  id v48 = [v1 widthAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48 multiplier:0.5];

  [v49 setActive:1];
  id v157 = [self effectForBlurEffect:v3 style:4];
  id v50 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v157];
  [v1 addSubview:v50];
  [v50 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v51 = [v50 leadingAnchor];
  id v52 = [v26 trailingAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  id v54 = v50;
  [v53 setConstant:0.0];
  [v53 setActive:1];

  id v55 = [v50 superview];
  id v163 = v50;
  if (v55)
  {
    id v56 = v55;
    [v50 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v57 = [v50 trailingAnchor];
    id v58 = [v56 trailingAnchor];
    id v59 = [v57 constraintEqualToAnchor:v58];

    [v59 setConstant:0.0];
    id v60 = v59;
    [v60 setActive:1];

    id v54 = v50;
  }
  id v61 = [v54 superview];
  if (v61)
  {
    id v62 = v61;
    [v54 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v63 = [v54 bottomAnchor];
    id v64 = [v62 bottomAnchor];
    id v65 = [v63 constraintEqualToAnchor:v64];

    if (v65)
    {
      [v65 setConstant:-0.0];
      id v66 = v65;
      [v66 setActive:1];
    }
    id v54 = v50;
  }
  id v67 = [v54 superview];
  if (v67)
  {
    uint64_t v68 = v67;
    [v54 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v69 = [v54 topAnchor];
    id v70 = [v68 topAnchor];
    id v71 = [v69 constraintEqualToAnchor:v70];

    [v71 setConstant:0.0];
    id v72 = v71;
    [v72 setActive:1];
  }
  uint64_t v73 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView;
  [*(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView) setAxis:1];
  [*(id *)((char *)v1 + v73) setSpacing:2.0];
  [*(id *)((char *)v1 + v73) setAlignment:1];
  id v161 = (char *)v73;
  [*(id *)((char *)v1 + v73) setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v74 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel;
  unsigned __int8 v75 = *(void (**)(void))((swift_isaMask & *v1) + 0x178);
  id v76 = *(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel);
  v75();
  id v159 = v3;
  if (v77)
  {
    NSString v78 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v78 = 0;
  }
  [v76 setText:v78];

  [*(id *)((char *)v1 + v74) setNumberOfLines:3];
  [*(id *)((char *)v1 + v74) setLineBreakMode:4];
  [*(id *)((char *)v1 + v74) setMaximumContentSizeCategory:];
  char v79 = *(void **)((char *)v1 + v74);
  unint64_t v80 = self;
  id v81 = v79;
  id v82 = [v80 preferredFontForTextStyle:UIFontTextStyleFootnote];
  v83.super.Class isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

  id v84 = [(objc_class *)v83.super.isa fontDescriptor];
  id v85 = [v84 fontDescriptorWithSymbolicTraits:2];

  if (v85)
  {
    id v86 = v80;
    id v87 = [v80 fontWithDescriptor:v85 size:0.0];

    [v81 setFont:v87];
    double v88 = *(void **)((char *)v1 + v74);
    id v89 = self;
    id v90 = v88;
    id v91 = [v89 whiteColor];
    id v92 = [v91 colorWithAlphaComponent:0.7];

    [v90 setTextColor:v92];
    [*(id *)((char *)v1 + v74) setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v93 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel;
    uint64_t v94 = *(void (**)(void))((swift_isaMask & *v1) + 0x190);
    id v95 = objc_retain(*(id *)((char *)v1
                            + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel));
    v94();
    if (v96)
    {
      NSString v97 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v97 = 0;
    }
    [v95 setText:v97];

    [*(id *)((char *)v1 + v93) setNumberOfLines:1];
    [*(id *)((char *)v1 + v93) setLineBreakMode:4];
    [*(id *)((char *)v1 + v93) setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
    id v98 = *(id *)((char *)v1 + v93);
    id v99 = [v86 preferredFontForTextStyle:UIFontTextStyleFootnote];
    [v98 setFont:v99];

    id v100 = *(unsigned __int8 (**)(void))((swift_isaMask & *v1) + 0x100);
    id v101 = *(id *)((char *)v1 + v93);
    LODWORD(v99) = v100();
    id v102 = [v89 whiteColor];
    id v103 = v102;
    double v104 = 0.7;
    if (v99 != 6) {
      double v104 = 0.4;
    }
    id v105 = [v102 colorWithAlphaComponent:v104];

    [v101 setTextColor:v105];
    [*(id *)((char *)v1 + v93) setTranslatesAutoresizingMaskIntoConstraints:0];
    [*(id *)&v161[(void)v1] addArrangedSubview:*(void *)((char *)v1 + v74)];
    if (((unsigned __int8 (*)(id))v100)([*(id *)&v161[(void)v1] addArrangedSubview:*(void *)((char *)v1 + v93)]) == 6)
    {
      [*(id *)&v161[(void)v1] setCustomSpacing:*(void *)((char *)v1 + v93) afterView:5.0];
      uint64_t v106 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel;
      [*(id *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel) setNumberOfLines:1];
      id v107 = *(id *)((char *)v1 + v106);
      id v108 = [v86 preferredFontForTextStyle:UIFontTextStyleFootnote];
      [v107 setFont:v108];

      id v109 = *(id *)((char *)v1 + v106);
      id v110 = [v89 whiteColor];
      id v111 = [v110 colorWithAlphaComponent:0.4];

      [v109 setTextColor:v111];
      double v112 = *(void **)((char *)v1 + v106);
      if (*(void *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category + 8))
      {
        id v113 = v112;
        swift_bridgeObjectRetain();
        NSString v114 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v115 = v112;
        NSString v114 = 0;
      }
      [v112 setText:v114];

      [*(id *)((char *)v1 + v106) setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
      id v116 = [*(id *)&v161[(void)v1] addArrangedSubview:*(void *)((char *)v1 + v106)];
      id v117 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x160);
      if ((((uint64_t (*)(id))v117)(v116) == 1 || v117() == 4) && (*((unsigned char *)v1 + v156) & 1) == 0)
      {
        uint64_t v118 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x118))();
        uint64_t v120 = v119;
        id v121 = objc_allocWithZone((Class)type metadata accessor for MOCircularProgressIndicatorView());
        id v122 = MOCircularProgressIndicatorView.init(mediaAssetID:)(v118, v120);
        uint64_t v123 = *(void (**)(void *))((swift_isaMask & *v1) + 0x300);
        id v124 = v122;
        v123(v122);
        [v1 addSubview:v124];
        [v124 setTranslatesAutoresizingMaskIntoConstraints:0];
        [v124 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v125 = [v124 topAnchor];
        id v126 = [v50 topAnchor];
        id v127 = [v125 constraintEqualToAnchor:v126 constant:7.0];

        [v127 setActive:1];
        [v124 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v128 = [v124 leadingAnchor];
        id v129 = [v50 leadingAnchor];
        id v130 = [v128 constraintEqualToAnchor:v129 constant:7.0];

        [v130 setActive:1];
        [v124 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v131 = [v124 widthAnchor];
        id v132 = [v131 constraintEqualToConstant:30.0];

        [v132 setActive:1];
        [v124 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v133 = [v124 heightAnchor];
        id v134 = [v133 constraintEqualToConstant:30.0];

        [v134 setActive:1];
      }
    }
    if (v100() == 4) {
      double v135 = 8.0;
    }
    else {
      double v135 = 12.0;
    }
    [v1 addSubview:*(void *)&v161[(void)v1]];
    id v136 = *(id *)&v161[(void)v1];
    [v136 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v137 = [v136 leadingAnchor];
    id v138 = [v50 leadingAnchor];
    id v139 = [v137 constraintEqualToAnchor:v138 constant:v135];

    [v139 setActive:1];
    double v140 = -v135;
    id v141 = *(id *)&v161[(void)v1];
    [v141 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v142 = [v141 trailingAnchor];
    id v143 = [v50 trailingAnchor];
    id v144 = [v142 constraintEqualToAnchor:v143 constant:v140];

    [v144 setActive:1];
    id v145 = *(id *)&v161[(void)v1];
    id v146 = [v145 superview];
    if (v146)
    {
      uint64_t v147 = v146;
      [v145 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v148 = [v145 bottomAnchor];
      id v149 = [v147 bottomAnchor];
      id v150 = [v148 constraintEqualToAnchor:v149];

      id v151 = v159;
      if (v150)
      {
        [v150 setConstant:v140];
        id v162 = v150;
        [v162 setActive:1];

        id v145 = v162;
      }
      else
      {
        id v162 = 0;
      }
      id v154 = v157;
      id v152 = v158;
      id v153 = v160;
    }
    else
    {
      id v162 = 0;
      uint64_t v147 = v145;
      id v152 = v158;
      id v151 = v159;
      id v153 = v160;
      id v154 = v157;
    }
  }
  else
  {
    __break(1u);
  }
}

id MOSuggestionSheetMediaAssetView.sourceSymbolImage.getter()
{
  unint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x160))();
  id v2 = 0;
  if (v1 <= 8 && (((1 << v1) & 0x1C0) != 0 || ((1 << v1) & 0x12) != 0 || ((1 << v1) & 0x24) != 0))
  {
    NSString v3 = String._bridgeToObjectiveC()();
    id v2 = [self _systemImageNamed:v3];
  }
  return v2;
}

void MOSuggestionSheetMediaAssetView.init(frame:)()
{
}

id MOSuggestionSheetMediaAssetView.__deallocating_deinit()
{
  return MOSuggestionSheetMediaAssetView.__deallocating_deinit(0, type metadata accessor for MOSuggestionSheetMediaAssetView);
}

id ThirdPartyMediaColorEffectView.contentView.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView);
}

void *ThirdPartyMediaColorEffectView.fillColor.getter()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void ThirdPartyMediaColorEffectView.fillColor.setter(void *a1)
{
}

uint64_t (*ThirdPartyMediaColorEffectView.fillColor.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

uint64_t ThirdPartyMediaColorEffectView.colorVariant.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_colorVariant;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t ThirdPartyMediaColorEffectView.colorVariant.setter(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_colorVariant;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*ThirdPartyMediaColorEffectView.colorVariant.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

char *ThirdPartyMediaColorEffectView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView;
  id v10 = objc_allocWithZone((Class)UIView);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v11[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor] = 0;
  id v14 = &v11[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_colorVariant];
  *(void *)id v14 = 0;
  v14[8] = 1;

  v28.receiver = v11;
  v28.super_class = (Class)type metadata accessor for ThirdPartyMediaColorEffectView();
  id v15 = [super initWithFrame:a1, a2, a3, a4];
  uint64_t v16 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillView;
  id v17 = *(void **)&v15[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillView];
  id v18 = v15;
  id v19 = v17;
  [v18 bounds];
  [v19 setFrame:];

  id v20 = *(void **)&v15[v16];
  [v20 setAutoresizingMask:18];
  [v20 setContentMode:2];
  [v18 addSubview:v20];
  uint64_t v21 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView;
  id v22 = *(id *)&v18[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView];
  [v18 bounds];
  [v22 setFrame:];

  id v23 = *(void **)&v18[v21];
  [v23 setAutoresizingMask:18];
  [v18 addSubview:v23];
  uint64_t v24 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView;
  id v25 = *(id *)&v18[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView];
  [v18 bounds];
  [v25 setFrame:];

  char v26 = *(void **)&v18[v24];
  [v26 setAutoresizingMask:18];
  [v18 addSubview:v26];

  return v18;
}

uint64_t ThirdPartyMediaColorEffectView.init(coder:)(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView;
  id v4 = objc_allocWithZone((Class)UIView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView;
  id v8 = [objc_allocWithZone((Class)UIView) init];

  *(void *)&v5[v7] = v8;
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor;
  *(void *)&v5[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillColor] = 0;
  id v10 = &v5[OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_colorVariant];
  *(void *)id v10 = 0;
  v10[8] = 1;

  id v11 = *(void **)&v5[v9];
  type metadata accessor for ThirdPartyMediaColorEffectView();
  swift_deallocPartialClassInstance();
  return 0;
}

Swift::Void __swiftcall ThirdPartyMediaColorEffectView.layoutSubviews()()
{
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for ThirdPartyMediaColorEffectView();
  [super layoutSubviews];
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_fillView);
  uint64_t v3 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x78))(v1);
  [v2 setBackgroundColor:v3];

  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x90))();
  if ((v5 & 1) != 0 || v4 == 3)
  {
    [v0 setOverrideUserInterfaceStyle:2];
    uint64_t v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView);
    id v10 = [self systemWhiteColor];
    id v11 = [v10 colorWithAlphaComponent:0.13];
LABEL_7:
    id v8 = v11;

    [v6 setBackgroundColor:v8];
    uint64_t v9 = &kCAFilterPlusL;
    goto LABEL_8;
  }
  if (v4 == 2)
  {
    [v0 setOverrideUserInterfaceStyle:2];
    uint64_t v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView);
    id v10 = [self systemBlackColor];
    id v11 = [v10 colorWithAlphaComponent:0.6];
    goto LABEL_7;
  }
  if (v4 != 1) {
    return;
  }
  [v0 setOverrideUserInterfaceStyle:1];
  uint64_t v6 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_overlayView);
  id v7 = [self systemWhiteColor];
  id v8 = [v7 colorWithAlphaComponent:0.78];

  [v6 setBackgroundColor:v8];
  uint64_t v9 = &kCAFilterPlusD;
LABEL_8:

  id v12 = [v6 layer];
  [v12 setCompositingFilter:0];

  id v13 = [*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30ThirdPartyMediaColorEffectView_contentView) layer];
  [v13 setCompositingFilter:*v9];
}

id ThirdPartyMediaColorEffectView.__deallocating_deinit(uint64_t a1)
{
  return MOSuggestionSheetMediaAssetView.__deallocating_deinit(a1, type metadata accessor for ThirdPartyMediaColorEffectView);
}

id MOSuggestionSheetMediaAssetView.__deallocating_deinit(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

void *specialized MOSuggestionSheetMediaAssetView.init(mediaAssetID:mediaPreviewURL:image:mediaType:sizeType:title:subtitle:assignedTileSize:bgColor:associatedColors:colorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11, uint64_t a12, uint64_t a13)
{
  objc_super v14 = (uint64_t *)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaAssetID];
  *objc_super v14 = 0;
  v14[1] = 0;
  id v15 = &v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL];
  uint64_t v117 = (uint64_t)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL];
  uint64_t v16 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  id v17 = (void **)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image];
  *(void *)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image] = 0;
  id v18 = &v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_title];
  *(void *)id v18 = 0;
  *((void *)v18 + 1) = 0;
  id v19 = &v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitle];
  *(void *)id v19 = 0;
  *((void *)v19 + 1) = 0;
  id v20 = (void **)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor];
  *(void *)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor] = 0;
  uint64_t v118 = &v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant];
  *(void *)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant] = 0;
  uint64_t v119 = &v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors];
  *(void *)&v13[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors] = 0;
  uint64_t v21 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_coverArtView;
  id v22 = objc_allocWithZone((Class)UIImageView);
  id v23 = v13;
  *(void *)&v13[v21] = [v22 init];
  uint64_t v24 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel;
  *(void *)&v23[v24] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v25 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel;
  *(void *)&v23[v25] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v26 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel;
  *(void *)&v23[v26] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v27 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView;
  *(void *)&v23[v27] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v28 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_imageView;
  *(void *)&v23[v28] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v29 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceBlurContainerView;
  id v30 = [self effectWithStyle:16];
  id v31 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v30];

  *(void *)&v23[v29] = v31;
  uint64_t v32 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView;
  *(void *)&v23[v32] = [objc_allocWithZone((Class)UIImageView) init];
  id v33 = (Swift::String *)&v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category];
  v33->_uint64_t countAndFlagsBits = 0;
  v33->_object = 0;
  id v124 = v33;
  id v34 = &v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_fallbackSymbol];
  *(void *)id v34 = 0;
  *((void *)v34 + 1) = 0;
  id v116 = v34;
  uint64_t v35 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback;
  v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback] = 0;
  *(void *)&v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator] = 0;
  swift_beginAccess();
  *objc_super v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v36 = *v17;
  *id v17 = a4;
  id v126 = a4;

  *(void *)&v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaType] = a5;
  swift_beginAccess();
  outlined assign with copy of URL?(a3, v117);
  swift_endAccess();
  swift_beginAccess();
  *(void *)id v18 = a6;
  *((void *)v18 + 1) = a7;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)id v19 = a8;
  *((void *)v19 + 1) = a9;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v37 = *v20;
  *id v20 = a11;
  id v38 = a11;

  swift_beginAccess();
  *(void *)uint64_t v118 = a13;
  swift_beginAccess();
  *(void *)uint64_t v119 = a12;
  swift_bridgeObjectRelease();
  v23[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_assignedTileSize] = a10;
  if (!*v17) {
    v23[v35] = 1;
  }
  id v39 = &selRef_collectionView_didSelectItemAtIndexPath_;
  switch(a5)
  {
    case 1:
      id v44 = (objc_class *)[self mainBundle];
      unint64_t v45 = 0xD000000000000013;
      unint64_t v114 = 0x80000001001EA8D0;
      uint64_t v46 = 1735290707;
      unint64_t v47 = 0xE400000000000000;
      v48.super.Class isa = v44;
      uint64_t v49 = 0;
      unint64_t v50 = 0xE000000000000000;
      goto LABEL_8;
    case 2:
    case 5:
      id v40 = [self mainBundle];
      v134._uint64_t countAndFlagsBits = 0xD000000000000016;
      v134._object = (void *)0x80000001001EA8F0;
      v41._uint64_t countAndFlagsBits = 0x74736163646F50;
      v41._object = (void *)0xE700000000000000;
      v42._uint64_t countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      Swift::String v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, (Swift::String_optional)0, (NSBundle)v40, v42, v134);

      Swift::String *v124 = v43;
      swift_bridgeObjectRelease();
      *(_OWORD *)id v116 = xmmword_1001DEDC0;
      goto LABEL_14;
    case 3:
      id v51 = (objc_class *)[self mainBundle];
      unint64_t v115 = 0x80000001001EA8B0;
      uint64_t v52 = 0x6F65646956;
      goto LABEL_11;
    case 4:
      id v44 = (objc_class *)[self mainBundle];
      unint64_t v114 = 0x80000001001EA890;
      uint64_t v46 = 0x6D75626C41;
      unint64_t v47 = 0xE500000000000000;
      v48.super.Class isa = v44;
      uint64_t v49 = 0;
      unint64_t v50 = 0xE000000000000000;
      unint64_t v45 = 0xD000000000000014;
LABEL_8:
      Swift::String v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v46, (Swift::String_optional)0, v48, *(Swift::String *)&v49, *(Swift::String *)&v45);

      Swift::String *v124 = v53;
      swift_bridgeObjectRelease();
      *(_OWORD *)id v116 = xmmword_1001DEDB0;
      goto LABEL_14;
    case 7:
      id v51 = (objc_class *)[self mainBundle];
      unint64_t v115 = 0x80000001001EA890;
      uint64_t v52 = 0x6D75626C41;
      goto LABEL_11;
    case 8:
      id v51 = (objc_class *)[self mainBundle];
      unint64_t v58 = 0xD000000000000015;
      unint64_t v115 = 0x80000001001EA870;
      uint64_t v52 = 0x747369747241;
      unint64_t v54 = 0xE600000000000000;
      v55.super.Class isa = v51;
      uint64_t v56 = 0;
      unint64_t v57 = 0xE000000000000000;
      goto LABEL_13;
    default:
      id v51 = (objc_class *)[self mainBundle];
      unint64_t v115 = 0x80000001001EA820;
      uint64_t v52 = 0x616964654DLL;
LABEL_11:
      unint64_t v54 = 0xE500000000000000;
      v55.super.Class isa = v51;
      uint64_t v56 = 0;
      unint64_t v57 = 0xE000000000000000;
      unint64_t v58 = 0xD000000000000014;
LABEL_13:
      Swift::String v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v52, (Swift::String_optional)0, v55, *(Swift::String *)&v56, *(Swift::String *)(&v115 - 1));

      Swift::String *v124 = v59;
LABEL_14:

      swift_bridgeObjectRelease();
      double y = CGRectZero.origin.y;
      double width = CGRectZero.size.width;
      double height = CGRectZero.size.height;
      v133.receiver = v23;
      v133.super_class = (Class)type metadata accessor for MOSuggestionSheetMediaAssetView();
      id v63 = [super initWithFrame:CGRectZero.origin.x, y, width, height];
      id v64 = v63;
      uint64_t v66 = a3;
      uint64_t v65 = a5;
      unint64_t v125 = a5 - 6;
      if ((unint64_t)(a5 - 6) >= 3)
      {
        id v76 = v63;
        char v75 = a10;
      }
      else
      {
        connectionProperties = serverManager._connectionProperties;
        uint64_t v123 = v63;
        uint64_t v68 = v63;
        if (connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v69 = type metadata accessor for Logger();
        __swift_project_value_buffer(v69, (uint64_t)static MOAngelLogger.assets);
        id v70 = Logger.logObject.getter();
        os_log_type_t v71 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v70, v71))
        {
          id v72 = (uint8_t *)swift_slowAlloc();
          v132[0] = swift_slowAlloc();
          *(_DWORD *)id v72 = 136315138;
          unint64_t v73 = MOSuggestionAssetTileSize.description.getter(a10);
          getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v73, v74, v132);
          char v75 = a10;
          id v39 = &selRef_collectionView_didSelectItemAtIndexPath_;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v70, v71, "[MOSuggestionSheetMediaAssetView] assignedTileSize=%s", v72, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v65 = a5;
        }
        else
        {

          uint64_t v65 = a5;
          char v75 = a10;
        }
        id v64 = v123;
      }
      switch(v75)
      {
        case 2:
        case 3:
        case 5:
        case 8:
          if (v125 > 2)
          {
            uint64_t v77 = (void *)(*(uint64_t (**)(void *))((swift_isaMask & *v64) + 0x348))(v76);
            [v64 addSubview:v77];
            UIView.fillSuper(margin:)(0.0);

            swift_bridgeObjectRelease();
          }
          else
          {
            (*(void (**)(void))((swift_isaMask & *v64) + 0x358))(0);
          }
          if (v75 != 5 && v75 != 8
            || v65 != 4 && v65 != 1
            || (*((unsigned char *)v64 + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback) & 1) != 0)
          {
            goto LABEL_45;
          }
          id v78 = objc_allocWithZone((Class)type metadata accessor for MOCircularProgressIndicatorView());
          char v79 = MOCircularProgressIndicatorView.init(mediaAssetID:)(a1, a2);
          unint64_t v80 = (void **)((char *)v64
                        + OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator);
          swift_beginAccess();
          id v81 = *v80;
          *unint64_t v80 = v79;
          id v82 = v79;

          [v64 addSubview:v82];
          [v82 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v83 = [v82 superview];
          if (v83)
          {
            id v84 = v83;
            id v85 = v39;
            [v82 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v86 = [v82 topAnchor];
            id v87 = [v84 topAnchor];
            id v88 = [v86 constraintEqualToAnchor:v87];

            [v88 setConstant:7.0];
            if (v88)
            {
              id v89 = v88;
              [v89 setActive:1];
            }
            id v39 = v85;
          }
          id v90 = [v82 superview];
          if (v90)
          {
            id v91 = v90;
            id v92 = v39;
            [v82 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v93 = [v82 leadingAnchor];
            id v94 = [v91 leadingAnchor];
            id v95 = [v93 constraintEqualToAnchor:v94];

            [v95 setConstant:7.0];
            if (v95)
            {
              id v96 = v95;
              [v96 setActive:1];
            }
            id v39 = v92;
          }
          [v82 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v97 = [v82 widthAnchor];
          id v98 = [v97 constraintEqualToConstant:30.0];

          [v98 setActive:1];
          [v82 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v99 = [v82 heightAnchor];
          id v100 = [v99 constraintEqualToConstant:30.0];

          [v100 setActive:1];
          uint64_t v66 = a3;
          goto LABEL_46;
        case 4:
        case 6:
          if (v125 <= 2) {
            goto LABEL_26;
          }
          (*(void (**)(void *))((swift_isaMask & *v64) + 0x360))(v76);
          goto LABEL_45;
        case 7:
          if (v125 <= 2) {
LABEL_26:
          }
            (*(void (**)(uint64_t))((swift_isaMask & *v64) + 0x358))(1);
          goto LABEL_45;
        default:
LABEL_45:
          swift_bridgeObjectRelease();
LABEL_46:
          [v64 setIsAccessibilityElement:1];
          UIAccessibilityTraits v101 = UIAccessibilityTraitImage;
          id v102 = v64;
          unint64_t v103 = (unint64_t)[v102 accessibilityTraits];
          if ((v101 & ~v103) != 0) {
            UIAccessibilityTraits v104 = v101;
          }
          else {
            UIAccessibilityTraits v104 = 0;
          }
          [v102 setAccessibilityTraits:v104 | v103];

          [v102 setAccessibilityIgnoresInvertColors:1];
          id v105 = self;
          uint64_t v106 = v102;
          id v107 = [v105 v39[119]];
          v135._uint64_t countAndFlagsBits = 0xD000000000000024;
          v135._object = (void *)0x80000001001EA840;
          v108._uint64_t countAndFlagsBits = 0x616964654DLL;
          v108._object = (void *)0xE500000000000000;
          v109._uint64_t countAndFlagsBits = 0;
          v109._object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v108, (Swift::String_optional)0, (NSBundle)v107, v109, v135);

          NSString v110 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v106 setAccessibilityLabel:v110];

          if (v125 > 2)
          {
            (*(void (**)(void))((swift_isaMask & *v106) + 0x338))();
            id v112 = v126;
          }
          else
          {
            if (!a4) {
              goto LABEL_54;
            }
            id v111 = *(void (**)(void))((swift_isaMask & *v106) + 0x340);
            id v112 = v126;
            v111();

            id v38 = v112;
          }

LABEL_54:
          outlined destroy of URL?(v66);
          return v106;
      }
  }
}

uint64_t outlined assign with take of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ThirdPartyMediaColorEffectView()
{
  return self;
}

void specialized MOSuggestionSheetMediaAssetView.init(coder:)()
{
  id v1 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaAssetID];
  *id v1 = 0;
  v1[1] = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_mediaPreviewURL];
  uint64_t v3 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_image] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_title];
  *uint64_t v4 = 0;
  v4[1] = 0;
  char v5 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitle];
  *char v5 = 0;
  v5[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_bgColorVariant] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_associatedColors] = 0;
  uint64_t v6 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_coverArtView;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v7 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_titleLabel;
  *(void *)&v0[v7] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_subtitleLabel;
  *(void *)&v0[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_categoryLabel;
  *(void *)&v0[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_labelStackView;
  *(void *)&v0[v10] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v11 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_imageView;
  *(void *)&v0[v11] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceBlurContainerView;
  id v13 = [self effectWithStyle:16];
  id v14 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v13];

  *(void *)&v0[v12] = v14;
  uint64_t v15 = OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_sourceImageView;
  *(void *)&v0[v15] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v16 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_category];
  *uint64_t v16 = 0;
  v16[1] = 0;
  id v17 = &v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_fallbackSymbol];
  *id v17 = 0;
  v17[1] = 0;
  v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_needsFallback] = 0;
  *(void *)&v0[OBJC_IVAR____TtC16MomentsUIService31MOSuggestionSheetMediaAssetView_circularProgressIndicator] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for MOSuggestionSheetMediaAssetView()
{
  uint64_t result = type metadata singleton initialization cache for MOSuggestionSheetMediaAssetView;
  if (!type metadata singleton initialization cache for MOSuggestionSheetMediaAssetView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10019A704@<X0>(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x100))();
  *a2 = result;
  return result;
}

uint64_t sub_10019A768(unsigned __int8 *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0x108))(*a1);
}

uint64_t sub_10019A7C8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x118))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10019A82C(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x120);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_10019A8AC(void **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x130))();
}

uint64_t sub_10019A90C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x148))();
  *a2 = result;
  return result;
}

uint64_t sub_10019A970(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x150);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10019A9E0@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x160))();
  *a2 = result;
  return result;
}

uint64_t sub_10019AA44(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0x168))(*a1);
}

uint64_t sub_10019AAA4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x178))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10019AB08(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x180);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_10019AB88@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x190))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10019ABEC(uint64_t *a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **a2) + 0x198);
  swift_bridgeObjectRetain();
  return v4(v2, v3);
}

uint64_t sub_10019AC6C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x1A8))();
  *a2 = result;
  return result;
}

uint64_t sub_10019ACD0(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x1B0);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10019AD40@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x1C0))();
  *a2 = result;
  return result;
}

uint64_t sub_10019ADA4(void *a1, void **a2)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a2) + 0x1C8))(*a1);
}

uint64_t sub_10019AE04@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x1D8))();
  *a2 = result;
  return result;
}

uint64_t sub_10019AE68(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x1E0);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_10019AED4@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x2F8))();
  *a2 = result;
  return result;
}

uint64_t sub_10019AF38(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x300);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10019AFA8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x78))();
  *a2 = result;
  return result;
}

uint64_t sub_10019B004(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0x80);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_10019B06C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x90))();
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_10019B0D0(uint64_t a1, void **a2)
{
  return (*(uint64_t (**)(void, void))((swift_isaMask & **a2) + 0x98))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

ValueMetadata *type metadata accessor for AssetViewConstants()
{
  return &type metadata for AssetViewConstants;
}

uint64_t ObjC metadata update function for MOSuggestionSheetMediaAssetView()
{
  return type metadata accessor for MOSuggestionSheetMediaAssetView();
}

void type metadata completion function for MOSuggestionSheetMediaAssetView()
{
  type metadata accessor for URL?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void type metadata accessor for URL?()
{
  if (!lazy cache variable for type metadata for URL?)
  {
    type metadata accessor for URL();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&lazy cache variable for type metadata for URL?);
    }
  }
}

uint64_t outlined assign with copy of URL?(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void *MOSuggestionCollectionViewCell.paddingTitle.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewCell.paddingTitle;
}

void *MOSuggestionCollectionViewCell.paddingSubTitle.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewCell.paddingSubTitle;
}

Swift::String __swiftcall Date.getFullDateNumber()()
{
  uint64_t v0 = Date.getFullDateNumber()(&one-time initialization token for fullDateFormatter, (void **)&static MODateFormatter.fullDateFormatter);
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t *MOSuggestionCollectionViewCellConstants.ONE_DAY.unsafeMutableAddressor()
{
  if (one-time initialization token for ONE_DAY != -1) {
    swift_once();
  }
  return &static MOSuggestionCollectionViewCellConstants.ONE_DAY;
}

Swift::String __swiftcall Date.getRelativeDate()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  *(void *)&double v53 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v51 - v6;
  uint64_t v8 = type metadata accessor for Calendar();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v51 - v13;
  static Calendar.current.getter();
  char v15 = Calendar.isDateInToday(_:)();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  unint64_t v54 = v14;
  v16(v12, v14, v8);
  uint64_t v52 = (void (*)(char *, uint64_t))v3;
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v56 = v1;
  uint64_t v18 = v1;
  uint64_t v19 = v2;
  v17(v7, v18, v2);
  uint64_t v55 = v9;
  if (v15)
  {
    id v20 = *(void (**)(char *, uint64_t))(v3 + 8);
    v20(v7, v2);
    uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
    v21(v12, v8);
    uint64_t v22 = v8;
LABEL_5:
    double v25 = v53;
    uint64_t v24 = v54;
    if (one-time initialization token for relativeDateFormatter != -1) {
      swift_once();
    }
    uint64_t v26 = (void *)static MODateFormatter.relativeDateFormatter;
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    static Date.now.getter();
    v28.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
    v20(*(char **)&v25, v19);
    id v29 = [v26 localizedStringForDate:isa relativeToDate:v28.super.isa];

LABEL_22:
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v47;

    goto LABEL_23;
  }
  char v23 = Calendar.isDateInYesterday(_:)();
  id v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v7, v2);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v51 = v8;
  v21(v12, v8);
  if (v23)
  {
    uint64_t v22 = v51;
    goto LABEL_5;
  }
  uint64_t v52 = v21;
  if (one-time initialization token for dayNameFormatter != -1) {
    swift_once();
  }
  id v30 = (void *)static MODateFormatter.dayNameFormatter;
  Class v31 = Date._bridgeToObjectiveC()().super.isa;
  id v32 = [v30 stringFromDate:v31];

  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v34;

  id v36 = (void *)static MODateFormatter.dayNameFormatter;
  double v37 = v53;
  static Date.now.getter();
  Class v38 = Date._bridgeToObjectiveC()().super.isa;
  v20(*(char **)&v37, v2);
  id v39 = [v36 stringFromDate:v38];

  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  Swift::String v42 = v41;

  Date.timeIntervalSinceNow.getter();
  double v44 = fabs(v43);
  if (one-time initialization token for ONE_WEEK != -1)
  {
    double v53 = v44;
    swift_once();
    double v44 = v53;
  }
  uint64_t v22 = v51;
  if (v44 >= *(double *)&static MOSuggestionCollectionViewCellConstants.ONE_WEEK)
  {
    uint64_t v21 = v52;
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v21 = v52;
  if (v33 == v40 && v35 == v42) {
    goto LABEL_18;
  }
  char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v45)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    if (one-time initialization token for fullDateFormatter != -1) {
      swift_once();
    }
    uint64_t v46 = (void *)static MODateFormatter.fullDateFormatter;
    v28.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v29 = [v46 stringFromDate:v28.super.isa];
    uint64_t v24 = v54;
    goto LABEL_22;
  }
  uint64_t v24 = v54;
LABEL_23:
  v21(v24, v22);
  uint64_t v48 = v33;
  uint64_t v49 = v35;
  result._object = v49;
  result._uint64_t countAndFlagsBits = v48;
  return result;
}

void *MOSuggestionCollectionViewCell.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewCell.reuseIdentifier;
}

void *MOSuggestionCollectionViewDateSectionHeaderView.reuseIdentifier.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewDateSectionHeaderView.reuseIdentifier;
}

void one-time initialization function for ONE_DAY()
{
  static MOSuggestionCollectionViewCellConstants.ONE_DAY = 0x40F5180000000000;
}

double static MOSuggestionCollectionViewCellConstants.ONE_DAY.getter()
{
  return static MOSuggestionSheetInterstitialViewConstants.BUTTON_BOTTOM_MARGIN_LANDSCAPE.getter(&one-time initialization token for ONE_DAY, (uint64_t)&static MOSuggestionCollectionViewCellConstants.ONE_DAY);
}

double one-time initialization function for ONE_WEEK()
{
  if (one-time initialization token for ONE_DAY != -1) {
    swift_once();
  }
  double result = *(double *)&static MOSuggestionCollectionViewCellConstants.ONE_DAY * 7.0;
  *(double *)&static MOSuggestionCollectionViewCellConstants.ONE_WEEK = *(double *)&static MOSuggestionCollectionViewCellConstants.ONE_DAY
                                                                      * 7.0;
  return result;
}

uint64_t *MOSuggestionCollectionViewCellConstants.ONE_WEEK.unsafeMutableAddressor()
{
  if (one-time initialization token for ONE_WEEK != -1) {
    swift_once();
  }
  return &static MOSuggestionCollectionViewCellConstants.ONE_WEEK;
}

double static MOSuggestionCollectionViewCellConstants.ONE_WEEK.getter()
{
  return static MOSuggestionSheetInterstitialViewConstants.BUTTON_BOTTOM_MARGIN_LANDSCAPE.getter(&one-time initialization token for ONE_WEEK, (uint64_t)&static MOSuggestionCollectionViewCellConstants.ONE_WEEK);
}

unint64_t static MOSuggestionCollectionViewCell.reuseIdentifier.getter()
{
  return 0xD00000000000001ELL;
}

void *MOSuggestionCollectionViewCell.titleBaselineOffset.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewCell.titleBaselineOffset;
}

void *MOSuggestionCollectionViewCell.subtitleBaselineOffset.unsafeMutableAddressor()
{
  return &static MOSuggestionCollectionViewCell.subtitleBaselineOffset;
}

double static MOSuggestionCollectionViewCell.paddingSubTitle.getter()
{
  return 1.0;
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_labelColor);
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.subtitleLabel()
{
  return closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel(SEL *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 setLineBreakMode:4];
  [v2 setNumberOfLines:2];
  id v3 = [self *a1];
  [v2 setTextColor:v3];

  [v2 setTextAlignment:4];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraExtraLarge];
  return v2;
}

uint64_t key path setter for MOSuggestionCollectionViewCell.accessoryButtonAction : MOSuggestionCollectionViewCell(uint64_t *a1, void **a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  uint64_t v6 = *(uint64_t (**)(uint64_t (*)(), uint64_t))((swift_isaMask & **a2) + 0xB8);
  swift_retain();
  return v6(partial apply for thunk for @escaping @callee_guaranteed () -> (@out ()), v5);
}

uint64_t MOSuggestionCollectionViewCell.accessoryButtonAction.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t MOSuggestionCollectionViewCell.accessoryButtonAction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & **(void **)(v2
                                                                              + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton))
                                               + 0x68);
  swift_retain();
  v8(v6, v7);
  return swift_release();
}

void (*MOSuggestionCollectionViewCell.accessoryButtonAction.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction;
  void v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return MOSuggestionCollectionViewCell.accessoryButtonAction.modify;
}

void MOSuggestionCollectionViewCell.accessoryButtonAction.modify(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = v3[3];
    uint64_t v5 = (uint64_t *)(v4 + v3[4]);
    uint64_t v6 = *v5;
    uint64_t v7 = v5[1];
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & **(void **)(v4
                                                                                + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton))
                                                 + 0x68);
    swift_retain();
    v8(v6, v7);
  }

  free(v3);
}

void *MOSuggestionCollectionViewCell.gridViewHeightAnchor.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridViewHeightAnchor);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void MOSuggestionCollectionViewCell.gridViewHeightAnchor.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridViewHeightAnchor);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*MOSuggestionCollectionViewCell.gridViewHeightAnchor.modify())()
{
  return MOSuggestionMapSnapshotView.platterBlurView.modify;
}

double MOSuggestionCollectionViewCell.heightMultiplier.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier;
  swift_beginAccess();
  return *(double *)v1;
}

void MOSuggestionCollectionViewCell.heightMultiplier.setter(double a1)
{
  id v3 = (double *)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier);
  uint64_t v4 = swift_beginAccess();
  double v5 = *v3;
  *id v3 = a1;
  if (v5 != a1)
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xC8);
    uint64_t v7 = (void *)v6(v4);
    if (v7)
    {
      uint64_t v8 = v7;
      [v7 setActive:0];
    }
    uint64_t v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
    id v10 = [v9 heightAnchor];
    id v11 = [v9 widthAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11 multiplier:*v3];

    uint64_t v13 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0xD0))(v12);
    id v14 = (void *)v6(v13);
    if (v14)
    {
      char v15 = v14;
      [v14 setActive:1];
    }
  }
}

void (*MOSuggestionCollectionViewCell.heightMultiplier.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier;
  v3[4] = v1;
  v3[5] = v4;
  double v5 = (void *)(v1 + v4);
  swift_beginAccess();
  void v3[3] = *v5;
  return MOSuggestionCollectionViewCell.heightMultiplier.modify;
}

void MOSuggestionCollectionViewCell.heightMultiplier.modify(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  double v3 = *(double *)(*(void *)a1 + 24);
  if (a2)
  {
    MOSuggestionCollectionViewCell.heightMultiplier.setter(v3);
  }
  else
  {
    uint64_t v5 = v2[4];
    uint64_t v4 = v2[5];
    double v6 = *(double *)(v5 + v4);
    *(double *)(v5 + v4) = v3;
    if (v6 != v3)
    {
      uint64_t v7 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v2[4]) + 0xC8);
      uint64_t v8 = (void *)v7();
      if (v8)
      {
        uint64_t v9 = v8;
        [v8 setActive:0];
      }
      id v10 = (void *)v2[4];
      uint64_t v11 = v2[5];
      id v12 = *(void **)((char *)v10 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
      id v13 = [v12 heightAnchor];
      id v14 = [v12 widthAnchor];
      id v15 = [v13 constraintEqualToAnchor:v14 multiplier:*(double *)((char *)v10 + v11)];

      uint64_t v16 = (*(uint64_t (**)(id))((swift_isaMask & *v10) + 0xD0))(v15);
      id v17 = (void *)((uint64_t (*)(uint64_t))v7)(v16);
      if (v17)
      {
        uint64_t v18 = v17;
        [v17 setActive:1];
      }
    }
  }

  free(v2);
}

void MOSuggestionCollectionViewCell.cellViewModel.didset()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    double v3 = (unsigned __int8 *)Strong;
    uint64_t v4 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel);
    uint64_t v5 = *(void (**)(void))(*(void *)Strong + 176);
    v5();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v4 setText:v6];

    id v7 = specialized static MOSuggestionTheme.Fonts.footnoteEmphShortFont()();
    UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(v7, 0.0, 0.95, 0.0);

    uint64_t v8 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel);
    (*(void (**)(void))(*(void *)v3 + 376))();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v8 setText:v9];

    id v10 = specialized static MOSuggestionTheme.Fonts.footnoteShortFont()();
    UILabel.setLineSpacing(lineSpacing:lineHeightMultiple:baselineOffset:font:)(v10, 0.0, 0.95, 0.0);

    char v11 = (*(uint64_t (**)(void))(*(void *)v3 + 224))();
    uint64_t v12 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x188))(v11 & 1);
    char v13 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 248))(v12);
    uint64_t v14 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x190))(v13 & 1);
    id v15 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
    uint64_t v16 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 392))(v14);
    (*(void (**)(uint64_t))((swift_isaMask & *v15) + 0x110))(v16);
    id v17 = [v0 traitCollection];
    id v18 = [v17 preferredContentSizeCategory];

    char v19 = static UIContentSizeCategory.> infix(_:_:)();
    double v37 = *(uint64_t (**)(void))(*(void *)v3 + 400);
    if ((v37() & 1) != 0
      && ((double v20 = 0.25, (v19 & 1) == 0) || ((*(uint64_t (**)(void))(*(void *)v3 + 328))() & 1) != 0))
    {
      uint64_t v21 = 0;
    }
    else
    {
      uint64_t v21 = 1;
      double v20 = 0.5;
    }
    (*(void (**)(double))((swift_isaMask & *v1) + 0xE8))(v20);
    uint64_t v22 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v15) + 0x140))(v21);
    uint64_t v23 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x198))(v22);
    uint64_t v24 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x110))(v23);
    (*(void (**)(void))((swift_isaMask & *v24) + 0x70))(v3[80]);

    (*(void (**)(void))((swift_isaMask & **(void **)((char *)v1
                                                                  + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton))
                                   + 0x98))(v3[80]);
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    __swift_project_value_buffer(v25, (uint64_t)static MOAngelLogger.shared);
    swift_retain_n();
    uint64_t v26 = v1;
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315650;
      uint64_t v30 = ((uint64_t (*)(void))v5)();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v31, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      uint64_t v32 = swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2048;
      (*(void (**)(uint64_t))((swift_isaMask & *v26) + 0xE0))(v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v29 + 22) = 1024;
      v37();
      swift_release();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "[MOSuggestionCollectionViewCell] cellViewModel set, title=%s, heightMultiplier=%f, isCondensedHeight=%{BOOL}d", (uint8_t *)v29, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    __swift_project_value_buffer(v33, (uint64_t)static MOAngelLogger.shared);
    id v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v34, v35))
    {
      id v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "[MOSuggestionCollectionViewCell] cellViewModel cleared or nil", v36, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t MOSuggestionCollectionViewCell.cellViewModel.getter()
{
  return swift_weakLoadStrong();
}

uint64_t MOSuggestionCollectionViewCell.cellViewModel.setter()
{
  return swift_release();
}

void (*MOSuggestionCollectionViewCell.cellViewModel.modify(void *a1))(void **a1, char a2)
{
  double v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_cellViewModel;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  void v3[3] = swift_weakLoadStrong();
  return MOSuggestionCollectionViewCell.cellViewModel.modify;
}

void MOSuggestionCollectionViewCell.cellViewModel.modify(void **a1, char a2)
{
  double v3 = *a1;
  swift_weakAssign();
  if (a2)
  {
    swift_release();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_release();
    MOSuggestionCollectionViewCell.cellViewModel.didset();
  }

  free(v3);
}

id MOSuggestionCollectionViewCell.photoMemoryBanner.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void MOSuggestionCollectionViewCell.photoMemoryBanner.setter(void *a1)
{
  double v3 = (void **)(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *double v3 = a1;
}

uint64_t (*MOSuggestionCollectionViewCell.photoMemoryBanner.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewCell.bannerHiddenConstraints.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionCollectionViewCell.bannerHiddenConstraints.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerHiddenConstraints);
}

uint64_t (*MOSuggestionCollectionViewCell.bannerHiddenConstraints.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

uint64_t MOSuggestionCollectionViewCell.bannerPresentConstraints.getter()
{
  return MOSuggestionAssetMapsClusterer.skipRows.getter();
}

uint64_t MOSuggestionCollectionViewCell.bannerPresentConstraints.setter(uint64_t a1)
{
  return MOSuggestionAssetMapsClusterer.skipRows.setter(a1, &OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerPresentConstraints);
}

uint64_t (*MOSuggestionCollectionViewCell.bannerPresentConstraints.modify())()
{
  return MOSuggestionMapSnapshotView.secondaryField.modify;
}

char *MOSuggestionCollectionViewCell.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView;
  type metadata accessor for MOSuggestionSheetAssetGridView();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  char v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel;
  *(void *)&v11[v12] = closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_labelColor);
  uint64_t v13 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView;
  id v14 = [objc_allocWithZone((Class)UIView) init];
  id v15 = [v14 traitCollection];
  id v16 = [v15 userInterfaceStyle];

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v14, (uint64_t)v16);
  *(void *)&v11[v13] = v14;
  uint64_t v17 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel;
  *(void *)&v11[v17] = closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
  uint64_t v18 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton;
  char v19 = (objc_class *)type metadata accessor for MOSuggestionSheetJournalButton();
  double v20 = objc_allocWithZone(v19);
  uint64_t v21 = &v20[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionSheetJournalButton_buttonTapped];
  *uint64_t v21 = 0;
  v21[1] = 0;
  v20[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionSheetJournalButton_singleCellAsset] = 0;
  v48.receiver = v20;
  v48.super_class = v19;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  MOSuggestionSheetJournalButton.sharedInit()();

  *(void *)&v11[v18] = v22;
  uint64_t v23 = (void (__swiftcall **)())&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction];
  *uint64_t v23 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v23[1] = 0;
  *(void *)&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridViewHeightAnchor] = 0;
  *(void *)&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier] = 0x3FE0000000000000;
  swift_weakInit();
  uint64_t v24 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner;
  type metadata accessor for MOSuggestionPhotoMemoryBanner();
  *(void *)&v11[v24] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerHiddenConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerPresentConstraints] = _swiftEmptyArrayStorage;

  v47.receiver = v11;
  v47.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewCell();
  uint64_t v25 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v26 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView;
  uint64_t v27 = *(void **)&v25[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView];
  os_log_type_t v28 = *(void (**)(uint64_t))((swift_isaMask & *v27) + 0x128);
  uint64_t v29 = v25;
  uint64_t v30 = v27;
  v28(1);

  id v31 = [v29 contentView];
  [v31 addSubview:*(void *)&v25[v26]];

  id v32 = [v29 contentView];
  [v32 addSubview:*(void *)&v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel]];

  id v33 = [v29 contentView];
  [v33 addSubview:*(void *)&v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel]];

  id v34 = [v29 contentView];
  [v34 addSubview:*(void *)&v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton]];

  id v35 = [v29 contentView];
  id v36 = &v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner];
  swift_beginAccess();
  [v35 addSubview:*(void *)v36];

  id v37 = [v29 contentView];
  uint64_t v38 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView;
  [v37 addSubview:*(void *)&v29[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView]];

  id v39 = *(void **)&v29[v38];
  [v39 addSubview:*(void *)v36];
  id v40 = [v39 addSubview:*(void *)&v25[v26]];
  (*(void (**)(id))((swift_isaMask & *(void *)v29) + 0x160))(v40);
  Swift::String v41 = self;
  Swift::String v42 = v29;
  id v43 = [v41 clearColor];
  [v42 setBackgroundColor:v43];

  [v42 setClipsToBounds:0];
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<UITraitDefinition.Type>);
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = xmmword_1001DA0F0;
  *(void *)(v44 + 32) = type metadata accessor for UITraitUserInterfaceStyle();
  *(void *)(v44 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  char v45 = v42;
  UIView.registerForTraitChanges(_:action:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v45;
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.handleTraitChange()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView];
  id v2 = [v0 traitCollection];
  id v3 = [v2 userInterfaceStyle];

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v1, (uint64_t)v3);
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.setupConstraints()()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView];
  id v2 = [v1 superview];
  if (v2)
  {
    id v3 = v2;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v4 = [v1 topAnchor];
    id v5 = [v3 topAnchor];
    id v6 = [v4 constraintEqualToAnchor:v5];

    [v6 setConstant:4.0];
    if (v6)
    {
      id v7 = v6;
      [v7 setActive:1];
    }
  }
  id v8 = [v1 superview];
  if (v8)
  {
    uint64_t v9 = v8;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v1 leadingAnchor];
    id v11 = [v9 leadingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:4.0];
    if (v12)
    {
      id v13 = v12;
      [v13 setActive:1];
    }
  }
  id v14 = [v1 superview];
  if (v14)
  {
    id v15 = v14;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v1 trailingAnchor];
    id v17 = [v15 trailingAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:-4.0];
    if (v18)
    {
      id v19 = v18;
      [v19 setActive:1];
    }
  }
  double v20 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v0) + 0x110);
  uint64_t v21 = v0;
  id v22 = (void *)v20();
  id v23 = [v22 topAnchor];

  id v131 = v1;
  id v24 = [v1 topAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:4.0];

  uint64_t v26 = *(uint64_t (**)(void *))((swift_isaMask & *(void *)v21) + 0x150);
  uint64_t v27 = (void (*)(void *, void))v26(v132);
  uint64_t v29 = v28;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v27(v132, 0);
  id v128 = *(id *)&v21[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView];
  id v30 = [v128 topAnchor];
  id v31 = (void *)v20();
  id v32 = [v31 bottomAnchor];

  id v33 = [v30 constraintEqualToAnchor:v32];
  id v34 = (uint64_t (*)(void *, void))v26(v132);
  id v36 = v35;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v37 = v34(v132, 0);
  id v130 = v21;
  uint64_t v38 = (void *)((uint64_t (*)(uint64_t))v20)(v37);
  id v39 = [v38 superview];
  if (v39)
  {
    id v40 = v39;
    [v38 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v41 = [v38 leadingAnchor];
    id v42 = [v40 leadingAnchor];
    id v43 = [v41 constraintEqualToAnchor:v42];

    [v43 setConstant:4.0];
    uint64_t v44 = v128;
    if (v43)
    {
      id v43 = v43;
      [v43 setActive:1];

      uint64_t v38 = v43;
    }
    char v45 = &selRef_collectionView_didSelectItemAtIndexPath_;
  }
  else
  {
    id v43 = 0;
    id v40 = v38;
    char v45 = &selRef_collectionView_didSelectItemAtIndexPath_;
    uint64_t v44 = v128;
  }

  uint64_t v46 = (void *)v20();
  id v47 = [v46 superview];
  if (v47)
  {
    objc_super v48 = v47;
    [v46 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v49 = [v46 trailingAnchor];
    id v50 = [v48 trailingAnchor];
    id v51 = [v49 constraintEqualToAnchor:v50];

    [v51 setConstant:-4.0];
    if (v51)
    {
      id v51 = v51;
      [v51 setActive:1];

      uint64_t v46 = v51;
    }
    char v45 = &selRef_collectionView_didSelectItemAtIndexPath_;
    uint64_t v52 = v21;
  }
  else
  {
    id v51 = 0;
    objc_super v48 = v46;
    uint64_t v52 = v21;
  }

  id v53 = [v44 v45[144]];
  id v54 = [v131 v45[144]];
  id v55 = [v53 constraintEqualToAnchor:v54];

  uint64_t v56 = (void (*)(void *, void))(*(uint64_t (**)(void *))((swift_isaMask & *v52) + 0x138))(v132);
  unint64_t v58 = v57;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  v56(v132, 0);
  id v59 = [v44 superview];
  if (v59)
  {
    id v60 = v59;
    [v44 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v61 = [v44 leadingAnchor];
    id v62 = [v60 leadingAnchor];
    id v63 = [v61 constraintEqualToAnchor:v62];

    [v63 setConstant:0.0];
    if (v63)
    {
      id v64 = v63;
      [v64 setActive:1];
    }
  }
  id v65 = [v44 superview];
  if (v65)
  {
    uint64_t v66 = v65;
    [v44 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v67 = [v44 trailingAnchor];
    id v68 = [v66 trailingAnchor];
    id v69 = [v67 constraintEqualToAnchor:v68];

    [v69 setConstant:0.0];
    if (v69)
    {
      id v70 = v69;
      [v70 setActive:1];
    }
  }
  id v71 = [v44 superview];
  if (v71)
  {
    id v72 = v71;
    [v44 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v73 = [v44 bottomAnchor];
    id v74 = [v72 bottomAnchor];
    id v75 = [v73 constraintEqualToAnchor:v74];

    if (v75)
    {
      [v75 setConstant:-0.0];
      id v76 = v75;
      [v76 setActive:1];
    }
  }
  id v77 = [v44 heightAnchor];
  id v78 = [v44 widthAnchor];
  (*(void (**)(void))((swift_isaMask & *v52) + 0xE0))();
  id v79 = [v77 constraintEqualToAnchor:v78 multiplier:];

  uint64_t v80 = (*(uint64_t (**)(id))((swift_isaMask & *v52) + 0xD0))(v79);
  id v81 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v52) + 0xC8))(v80);
  if (v81)
  {
    id v82 = v81;
    [v81 setActive:1];
  }
  id v129 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = xmmword_1001DA3E0;
  id v84 = *(void **)((char *)v52 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel);
  id v85 = v45;
  id v86 = [v84 v45[144]];
  id v87 = [v131 bottomAnchor];
  id v88 = [v86 constraintEqualToAnchor:v87 constant:8.0];

  *(void *)(v83 + 32) = v88;
  id v89 = [v84 leadingAnchor];
  id v90 = [v52 leadingAnchor];
  id v91 = [v89 constraintEqualToAnchor:v90 constant:5.0];

  *(void *)(v83 + 40) = v91;
  id v92 = [v84 trailingAnchor];
  id v93 = *(void **)((char *)v52 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton);
  id v94 = [v93 leadingAnchor];
  id v95 = [v92 constraintEqualToAnchor:v94 constant:-4.0];

  *(void *)(v83 + 48) = v95;
  id v96 = [v93 v85[144]];
  id v97 = [v131 bottomAnchor];
  id v98 = [v96 constraintEqualToAnchor:v97 constant:10.0];

  *(void *)(v83 + 56) = v98;
  id v99 = [v93 leadingAnchor];
  id v100 = [v84 trailingAnchor];
  id v101 = [v99 constraintEqualToAnchor:v100];

  *(void *)(v83 + 64) = v101;
  id v102 = [v93 trailingAnchor];
  id v103 = [v131 trailingAnchor];
  id v104 = [v102 constraintEqualToAnchor:v103 constant:-3.0];

  *(void *)(v83 + 72) = v104;
  id v105 = [v93 heightAnchor];
  id v106 = [v93 widthAnchor];
  id v107 = [v105 constraintEqualToAnchor:v106];

  *(void *)(v83 + 80) = v107;
  id v108 = [v93 widthAnchor];
  id v109 = [v108 constraintGreaterThanOrEqualToConstant:27.0];

  *(void *)(v83 + 88) = v109;
  id v110 = [v93 widthAnchor];
  id v111 = [v110 constraintLessThanOrEqualToConstant:40.0];

  *(void *)(v83 + 96) = v111;
  v132[0] = v83;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v129 activateConstraints:isa];

  uint64_t v113 = swift_allocObject();
  *(_OWORD *)(v113 + 16) = xmmword_1001DA110;
  unint64_t v114 = *(void **)&v130[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel];
  id v115 = [v114 topAnchor];
  id v116 = [v84 bottomAnchor];
  id v117 = [v115 constraintEqualToAnchor:v116 constant:1.0];

  *(void *)(v113 + 32) = v117;
  id v118 = [v114 leadingAnchor];
  id v119 = [v84 leadingAnchor];
  id v120 = [v118 constraintEqualToAnchor:v119];

  *(void *)(v113 + 40) = v120;
  id v121 = [v114 trailingAnchor];
  id v122 = [v84 trailingAnchor];
  id v123 = [v121 constraintEqualToAnchor:v122];

  *(void *)(v113 + 48) = v123;
  id v124 = [v114 bottomAnchor];
  id v125 = [v130 bottomAnchor];
  id v126 = [v124 constraintLessThanOrEqualToAnchor:v125];

  *(void *)(v113 + 56) = v126;
  v132[0] = v113;
  specialized Array._endMutation()();
  Class v127 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v129 activateConstraints:v127];
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.prepareForReuse()()
{
  uint64_t v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewCell();
  [super prepareForReuse];
  id v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel);
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setText:v3];

  id v4 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel);
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setText:v5];

  uint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xF8))();
  if (v6)
  {
    (*(void (**)(void))(*(void *)v6 + 304))(0);
    swift_release();
  }
  (*(void (**)(void))((swift_isaMask & *v1) + 0x100))(0);
  id v7 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
  (*(void (**)(void, void, void))((swift_isaMask & *v7) + 0x158))(0, 0, 0);
  uint64_t v8 = (*(uint64_t (**)(void))((swift_isaMask & *v7) + 0x188))(0);
  (*(void (**)(uint64_t, double))((swift_isaMask & *v1) + 0xE8))(v8, 0.5);
}

void MOSuggestionCollectionViewCell.setAssetViewModels(_:)(unint64_t a1)
{
  NSString v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (!v4) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_12;
    }
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v4 < 0)
  {
    __break(1u);
    return;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = v5 + 1;
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for MOWeakReference<MOSuggestionSheetAssetViewModel>);
      swift_allocObject();
      swift_weakInit();
      swift_beginAccess();
      swift_weakAssign();
      swift_unknownObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      uint64_t v5 = v6;
    }
    while (v4 != v6);
  }
  else
  {
    unint64_t v7 = a1 + 32;
    do
    {
      v7 += 8;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for MOWeakReference<MOSuggestionSheetAssetViewModel>);
      swift_allocObject();
      swift_weakInit();
      swift_beginAccess();
      swift_weakAssign();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v4;
    }
    while (v4);
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v8 = *(uint64_t (**)(uint64_t, double *, void))((swift_isaMask & *v3) + 0x158);
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = v8(v9, _swiftEmptyArrayStorage, 0);
  id v11 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xF8);
  uint64_t v12 = v11(v10);
  if (v12)
  {
    id v13 = *(void (**)(uint64_t))(*(void *)v12 + 304);
    uint64_t v14 = swift_bridgeObjectRetain();
    v13(v14);
    uint64_t v12 = swift_release();
  }
  id v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel);
  uint64_t v16 = v11(v12);
  if (v16)
  {
    (*(void (**)(uint64_t))(*(void *)v16 + 376))(v16);
    swift_release();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v17 = 0;
  }
  [v15 setText:v17];
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.updateCell(with:)(Swift::OpaquePointer with)
{
  MOSuggestionCollectionViewCell.setAssetViewModels(_:)((unint64_t)with._rawValue);
  (*(void (**)(void))((swift_isaMask & **(void **)(v1
                                                   + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView))
                    + 0x1C8))();
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.updateCell(with:index:)(Swift::OpaquePointer with, Swift::Int index)
{
  MOSuggestionCollectionViewCell.setAssetViewModels(_:)((unint64_t)with._rawValue);
  (*(void (**)(Swift::Int))((swift_isaMask & **(void **)(v2
                                                                    + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView))
                                     + 0x1D0))(index);
}

uint64_t MOSuggestionCollectionViewCell.updateCell(with:index:)(uint64_t a1, unint64_t a2)
{
  NSString v3 = v2;
  uint64_t v5 = *(void **)((char *)v2 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
  unint64_t v7 = (uint64_t (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))((swift_isaMask & *v5) + 0x160))(v16);
  if (!*v6)
  {
    uint64_t v12 = v7(v16, 0);
    goto LABEL_10;
  }
  uint64_t v8 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for MOWeakReference<MOSuggestionSheetAssetViewModel>);
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  swift_weakAssign();
  uint64_t v10 = *v8;
  swift_retain_n();
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v8 = v10;
  if (!result || v10 < 0 || (v10 & 0x4000000000000000) != 0)
  {
    uint64_t result = specialized _ArrayBuffer._consumeAndCreateNew()(v10);
    uint64_t v10 = result;
    *uint64_t v8 = result;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a2)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 8 * a2 + 0x20) = v9;
  swift_release();
  specialized Array._endMutation()();
  swift_release_n();
  uint64_t v12 = v7(v16, 0);
LABEL_10:
  id v13 = *(void **)((char *)v3 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel);
  uint64_t v14 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xF8))(v12);
  NSString v15 = (NSString)v14;
  if (v14)
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 376))(v14);
    swift_release();
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v13 setText:v15];

  return (*(uint64_t (**)(unint64_t))((swift_isaMask & *v5) + 0x1D0))(a2);
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.setAddedVisibility(applyAdded:)(Swift::Bool applyAdded)
{
  BOOL v2 = applyAdded;
  NSString v3 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
  (*(void (**)(void))((swift_isaMask & *v3) + 0x1B0))(0);
  (*(void (**)(BOOL))((swift_isaMask & *v3) + 0x188))(v2);
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.setQuickAddedVisibility(_:)(Swift::Bool_optional a1)
{
  if (a1.value)
  {
    BOOL v2 = *(void **)(v1 + OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView);
    (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x1B0))(1);
    (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x188))(1);
  }
}

Swift::Void __swiftcall MOSuggestionCollectionViewCell.setPhotoMemoryBannerVisibility()()
{
  uint64_t v1 = v0;
  uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xF8))();
  if (v2)
  {
    char v3 = (*(uint64_t (**)(void))(*(void *)v2 + 320))();
    uint64_t v4 = self;
    if (v3)
    {
      (*(void (**)(void))((swift_isaMask & *v1) + 0x140))();
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v4 activateConstraints:isa];

      (*(void (**)(void))((swift_isaMask & *v1) + 0x128))();
      Class v6 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v4 deactivateConstraints:v6];

      unint64_t v7 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110))();
      [v7 setHidden:0];
    }
    else
    {
      (*(void (**)(void))((swift_isaMask & *v1) + 0x128))();
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
      Class v8 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v4 activateConstraints:v8];

      (*(void (**)(void))((swift_isaMask & *v1) + 0x140))();
      Class v9 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v4 deactivateConstraints:v9];

      unint64_t v7 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110))();
      [v7 setHidden:1];
    }

    swift_release();
  }
}

id MOSuggestionCollectionViewCell.hitTest(_:with:)(uint64_t a1, double a2, double a3)
{
  v10.receiver = v3;
  v10.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewCell();
  [super hitTest:a1 withEvent:a2];
  if (v7)
  {
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for UIButton);
    if (([v7 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
    {
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for PHLivePhotoView);
      if (([v7 isKindOfClass:swift_getObjCClassFromMetadata()] & 1) == 0)
      {

        id v8 = v3;
        return v3;
      }
    }
  }
  return v7;
}

id MOSuggestionCollectionViewCell.__deallocating_deinit(uint64_t a1)
{
  return MOSuggestionCollectionViewCell.__deallocating_deinit(a1, type metadata accessor for MOSuggestionCollectionViewCell);
}

unint64_t static MOSuggestionCollectionViewDateSectionHeaderView.reuseIdentifier.getter()
{
  return 0xD00000000000002FLL;
}

id closure #1 in variable initialization expression of MOSuggestionCollectionViewDateSectionHeaderView.dateLabel()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 setNumberOfLines:1];
  [v0 setAdjustsFontSizeToFitWidth:1];
  [v0 setAdjustsFontForContentSizeCategory:1];
  id v1 = [self preferredFontForTextStyle:UIFontTextStyleTitle3];
  Class isa = UIFont.withWeight(_:)(UIFontWeightRegular).super.isa;

  [v0 setFont:isa];
  return v0;
}

id MOSuggestionCollectionViewDateSectionHeaderView.dateLabel.getter()
{
  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel));
}

uint64_t key path setter for MOSuggestionCollectionViewDateSectionHeaderView.date : MOSuggestionCollectionViewDateSectionHeaderView(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4 - 8);
  Class v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  outlined init with copy of Date?(a1, (uint64_t)v6);
  return (*(uint64_t (**)(char *))((swift_isaMask & **a2) + 0x68))(v6);
}

uint64_t MOSuggestionCollectionViewDateSectionHeaderView.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_date;
  swift_beginAccess();
  return outlined init with copy of Date?(v3, a1);
}

uint64_t MOSuggestionCollectionViewDateSectionHeaderView.date.setter(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_date;
  swift_beginAccess();
  outlined assign with copy of Date?(a1, v3);
  uint64_t v4 = swift_endAccess();
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x78))(v4);
  return outlined destroy of Date?(a1);
}

uint64_t (*MOSuggestionCollectionViewDateSectionHeaderView.date.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return MOSuggestionCollectionViewDateSectionHeaderView.date.modify;
}

uint64_t MOSuggestionCollectionViewDateSectionHeaderView.date.modify(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(a1 + 24)) + 0x78))(result);
  }
  return result;
}

void MOSuggestionCollectionViewDateSectionHeaderView.init(coder:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel;
  *(void *)&v0[v1] = closure #1 in variable initialization expression of MOSuggestionCollectionViewDateSectionHeaderView.dateLabel();
  uint64_t v2 = &v0[OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_date];
  uint64_t v3 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Swift::Void __swiftcall MOSuggestionCollectionViewDateSectionHeaderView.setUpDate()()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  Class v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & *v0) + 0x60))(v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    outlined destroy of Date?((uint64_t)v4);
    [*(id *)((char *)v0 + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel) setText:0];
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  if (one-time initialization token for fullDateFormatter != -1) {
    swift_once();
  }
  objc_super v10 = (void *)static MODateFormatter.fullDateFormatter;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v12 = [v10 stringFromDate:isa];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  uint64_t v40 = v13;
  uint64_t v41 = v15;
  uint64_t v38 = 8236;
  unint64_t v39 = 0xE200000000000000;
  v37[2] = 32;
  uint64_t v37[3] = 0xE100000000000000;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v16 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  id v19 = *(void **)((char *)v1
                 + OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel);
  NSString v20 = String._bridgeToObjectiveC()();
  v37[1] = v19;
  [v19 setText:v20];

  uint64_t v40 = v16;
  uint64_t v41 = v18;
  if (one-time initialization token for dayNameFormatter != -1) {
    swift_once();
  }
  uint64_t v21 = (void *)static MODateFormatter.dayNameFormatter;
  Class v22 = Date._bridgeToObjectiveC()().super.isa;
  id v23 = [v21 stringFromDate:v22];

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v26 = v25;

  uint64_t v38 = v24;
  unint64_t v39 = v26;
  LOBYTE(v24) = StringProtocol.contains<A>(_:)();
  swift_bridgeObjectRelease();
  if (v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = (void *)static MODateFormatter.dayNameFormatter;
    Class v28 = Date._bridgeToObjectiveC()().super.isa;
    id v29 = [v27 stringFromDate:v28];

    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v32 = v31;

    uint64_t v33 = v30;
  }
  else
  {
    uint64_t v40 = v16;
    uint64_t v41 = v18;
    uint64_t v38 = 32;
    unint64_t v39 = 0xE100000000000000;
    id v34 = (void *)StringProtocol.components<A>(separatedBy:)();
    swift_bridgeObjectRelease();
    if (!v34[2]) {
      goto LABEL_12;
    }
    uint64_t v35 = v34[4];
    uint64_t v32 = v34[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v33 = v35;
  }
  uint64_t v36 = v32;
  UILabel.styleDateWithWeekday(weekday:)(*(Swift::String *)&v33);
LABEL_12:
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

Swift::String __swiftcall Date.getDayName()()
{
  uint64_t v0 = Date.getFullDateNumber()(&one-time initialization token for dayNameFormatter, (void **)&static MODateFormatter.dayNameFormatter);
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

id MOSuggestionCollectionViewDateSectionHeaderView.__deallocating_deinit()
{
  return MOSuggestionCollectionViewCell.__deallocating_deinit(0, type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView);
}

id MOSuggestionCollectionViewCell.__deallocating_deinit(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

Swift::String __swiftcall Date.getMonthName()()
{
  uint64_t v0 = Date.getFullDateNumber()(&one-time initialization token for monthNameFormatter, (void **)&static MODateFormatter.monthNameFormatter);
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall Date.getMonthDayNumber()()
{
  uint64_t v0 = Date.getFullDateNumber()(&one-time initialization token for monthDayNumberFormatter, (void **)&static MODateFormatter.monthDayNumberFormatter);
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t Date.getFullDateNumber()(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v5 = [v3 stringFromDate:isa];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v6;
}

double specialized static MOSuggestionCollectionViewCell.calculateLabelHeight(width:)(double a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setAdjustsFontForContentSizeCategory:1];
  uint64_t v3 = (objc_class *)specialized static MOSuggestionTheme.Fonts.footnoteEmphShortFont()();
  if (!v3)
  {
    id v11 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
    Class isa = UIFont.withWeight(_:)(UIFontWeightSemibold).super.isa;

    id v5 = specialized static MOSuggestionTheme.Fonts.footnoteShortFont()();
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  Class isa = v3;
  id v5 = specialized static MOSuggestionTheme.Fonts.footnoteShortFont()();
  if (!v5) {
LABEL_3:
  }
    id v5 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
LABEL_4:
  uint64_t v6 = v5;
  double v7 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, isa, a1);
  double v8 = v7 + v7;
  double v9 = specialized UILabel.estimatedHeight(forWidth:text:ofFont:)(0, 0xE000000000000000, v6, a1);

  return v8 + v9 + 8.0 + 1.0;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCell()
{
  return self;
}

void specialized MOSuggestionCollectionViewCell.init(coder:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_assetGridView;
  type metadata accessor for MOSuggestionSheetAssetGridView();
  *(void *)&v1[v2] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_titleLabel;
  *(void *)&v1[v3] = closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_labelColor);
  uint64_t v4 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridContainerView;
  id v5 = [objc_allocWithZone((Class)UIView) init];
  id v6 = [v5 traitCollection];
  id v7 = [v6 userInterfaceStyle];

  specialized static MOSuggestionTheme.Styles.styleViewAsPlatter(view:traitCollection:)(v5, (uint64_t)v7);
  *(void *)&v1[v4] = v5;
  uint64_t v8 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_subtitleLabel;
  *(void *)&v1[v8] = closure #1 in variable initialization expression of MOSuggestionCollectionViewCell.titleLabel((SEL *)&selRef_secondaryLabelColor);
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_journalButton;
  objc_super v10 = (objc_class *)type metadata accessor for MOSuggestionSheetJournalButton();
  id v11 = objc_allocWithZone(v10);
  id v12 = &v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionSheetJournalButton_buttonTapped];
  void *v12 = 0;
  v12[1] = 0;
  v11[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionSheetJournalButton_singleCellAsset] = 0;
  v16.receiver = v11;
  v16.super_class = v10;
  id v13 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  MOSuggestionSheetJournalButton.sharedInit()();

  *(void *)&v1[v9] = v13;
  uint64_t v14 = (void (__swiftcall **)())&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_accessoryButtonAction];
  *uint64_t v14 = MOSuggestionInterstitialExpandableListViewCellConstants.init();
  v14[1] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_gridViewHeightAnchor] = 0;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_heightMultiplier] = 0x3FE0000000000000;
  swift_weakInit();
  uint64_t v15 = OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_photoMemoryBanner;
  type metadata accessor for MOSuggestionPhotoMemoryBanner();
  *(void *)&v1[v15] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerHiddenConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC16MomentsUIService30MOSuggestionCollectionViewCell_bannerPresentConstraints] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

char *specialized MOSuggestionCollectionViewDateSectionHeaderView.init(frame:)()
{
  uint64_t v1 = OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel;
  uint64_t v2 = v0;
  *(void *)&v0[v1] = closure #1 in variable initialization expression of MOSuggestionCollectionViewDateSectionHeaderView.dateLabel();
  uint64_t v3 = &v2[OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_date];
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);

  double y = CGRectZero.origin.y;
  double width = CGRectZero.size.width;
  double height = CGRectZero.size.height;
  v28.receiver = v2;
  v28.super_class = (Class)type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView();
  uint64_t v8 = [super initWithFrame:CGRectZero.origin.x, y, width, height];
  uint64_t v9 = OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel;
  objc_super v10 = *(void **)&v8[OBJC_IVAR____TtC16MomentsUIService47MOSuggestionCollectionViewDateSectionHeaderView_dateLabel];
  id v11 = v8;
  [v11 addSubview:v10];
  id v12 = self;
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1001DA110;
  id v14 = [v10 topAnchor];
  id v15 = [v11 topAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v13 + 32) = v16;
  id v17 = [*(id *)&v8[v9] bottomAnchor];
  id v18 = [v11 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v13 + 40) = v19;
  id v20 = [*(id *)&v8[v9] leadingAnchor];
  id v21 = [v11 leadingAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:24.0];

  *(void *)(v13 + 48) = v22;
  id v23 = [*(id *)&v8[v9] trailingAnchor];
  id v24 = [v11 trailingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:-10.0];

  *(void *)(v13 + 56) = v25;
  specialized Array._endMutation()();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for NSLayoutConstraint);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 activateConstraints:isa];

  return v11;
}

uint64_t type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView()
{
  uint64_t result = type metadata singleton initialization cache for MOSuggestionCollectionViewDateSectionHeaderView;
  if (!type metadata singleton initialization cache for MOSuggestionCollectionViewDateSectionHeaderView) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001A0A14@<X0>(void **a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xB0))();
  uint64_t v5 = v4;
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *(void *)(result + 24) = v5;
  *a2 = partial apply for thunk for @callee_guaranteed () -> ();
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1001A0AAC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xC8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001A0B08(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *(uint64_t (**)(id))((swift_isaMask & **a2) + 0xD0);
  id v4 = *a1;
  return v3(v2);
}

void sub_1001A0B70(void **a1@<X0>, double *a2@<X8>)
{
  *a2 = (*(double (**)(void))((swift_isaMask & **a1) + 0xE0))();
}

uint64_t sub_1001A0BCC(double *a1, void **a2)
{
  return (*(uint64_t (**)(double))((swift_isaMask & **a2) + 0xE8))(*a1);
}

uint64_t sub_1001A0C24@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0xF8))();
  *a2 = result;
  return result;
}

uint64_t sub_1001A0C80(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x100);
  uint64_t v3 = swift_retain();
  return v2(v3);
}

uint64_t sub_1001A0CEC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x110))();
  *a2 = result;
  return result;
}

uint64_t sub_1001A0D50(id *a1, void **a2)
{
  return (*(uint64_t (**)(id))((swift_isaMask & **a2) + 0x118))(*a1);
}

uint64_t sub_1001A0DBC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x128))();
  *a2 = result;
  return result;
}

uint64_t sub_1001A0E20(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x130);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1001A0E8C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x140))();
  *a2 = result;
  return result;
}

uint64_t sub_1001A0EF0(uint64_t a1, void **a2)
{
  id v2 = *(uint64_t (**)(uint64_t))((swift_isaMask & **a2) + 0x148);
  uint64_t v3 = swift_bridgeObjectRetain();
  return v2(v3);
}

uint64_t sub_1001A0F5C(void **a1)
{
  return (*(uint64_t (**)(void))((swift_isaMask & **a1) + 0x60))();
}

uint64_t type metadata accessor for MOSuggestionCollectionViewCellConstants()
{
  return self;
}

uint64_t ObjC metadata update function for MOSuggestionCollectionViewDateSectionHeaderView()
{
  return type metadata accessor for MOSuggestionCollectionViewDateSectionHeaderView();
}

void type metadata completion function for MOSuggestionCollectionViewDateSectionHeaderView()
{
  type metadata accessor for Date?();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1001A1080()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t MOSuggestionAssetMediaItem.primaryTitle.getter()
{
  id v1 = [v0 mediaType];
  id v2 = (SEL *)&selRef_albumTitle;
  uint64_t v3 = &selRef_artistName;
  if (v1 != (id)5) {
    uint64_t v3 = &selRef_title;
  }
  if (v1 != (id)4) {
    id v2 = (SEL *)v3;
  }
  id v4 = [v0 *v2];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v5;
}

void one-time initialization function for Bag()
{
  NSString v0 = String._bridgeToObjectiveC()();
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self bagForProfile:v0 profileVersion:v1];

  static Constants.Bag = (uint64_t)v2;
}

int64x2_t one-time initialization function for DefaultArtworkSize()
{
  int64x2_t result = vdupq_n_s64(0x4079000000000000uLL);
  static Constants.DefaultArtworkSize = (__int128)result;
  return result;
}

int64x2_t one-time initialization function for HighQualityArtworkSize()
{
  int64x2_t result = vdupq_n_s64(0x408F400000000000uLL);
  static Constants.HighQualityArtworkSize = (__int128)result;
  return result;
}

uint64_t MOSuggestionAssetMediaItemType.mediaTaskType.getter(uint64_t a1)
{
  uint64_t v1 = 207;
  uint64_t v2 = 301;
  if (a1 != 2) {
    uint64_t v2 = 0;
  }
  if (a1 != 3) {
    uint64_t v1 = v2;
  }
  if (a1 == 1) {
    return 203;
  }
  else {
    return v1;
  }
}

unint64_t MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications.rawValue.getter(char a1)
{
  unint64_t result = 0x6C7070612E6D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000029;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t protocol witness for static Equatable.== infix(_:_:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications(unsigned __int8 *a1, unsigned char *a2)
{
  unint64_t v2 = 0xEC00000076742E65;
  uint64_t v3 = *a1;
  unint64_t v4 = 0x6C7070612E6D6F63;
  unint64_t v5 = 0xEC00000076742E65;
  switch(v3)
  {
    case 1:
      unint64_t v5 = 0x80000001001E0D10;
      unint64_t v4 = 0xD000000000000012;
      break;
    case 2:
      unint64_t v5 = 0xEF636973754D2E65;
      break;
    case 3:
      unint64_t v4 = 0xD000000000000029;
      unint64_t v5 = 0x80000001001E1270;
      break;
    default:
      break;
  }
  switch(*a2)
  {
    case 1:
      unint64_t v2 = 0x80000001001E0D10;
      if (v4 == 0xD000000000000012) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xEF636973754D2E65;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x80000001001E1270;
      if (v4 == 0xD000000000000029) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v4 != 0x6C7070612E6D6F63) {
        goto LABEL_14;
      }
LABEL_12:
      if (v5 == v2) {
        char v6 = 1;
      }
      else {
LABEL_14:
      }
        char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6 & 1;
  }
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications()
{
  return Hasher._finalize()();
}

unint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = specialized MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications.init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x6C7070612E6D6F63;
  unint64_t v3 = 0xEC00000076742E65;
  switch(*v1)
  {
    case 1:
      unint64_t v3 = 0x80000001001E0D10;
      unint64_t v2 = 0xD000000000000012;
      goto LABEL_3;
    case 2:
      *a1 = 0x6C7070612E6D6F63;
      a1[1] = 0xEF636973754D2E65;
      break;
    case 3:
      *a1 = 0xD000000000000029;
      a1[1] = 0x80000001001E1270;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = v3;
      break;
  }
}

BOOL MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

unint64_t MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications.rawValue.getter()
{
  return 0xD000000000000012;
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for Hashable.hash(into:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications()
{
  return String.hash(into:)();
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications()
{
  return Hasher._finalize()();
}

uint64_t protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications(void *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001001E12A0;
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.trackIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.trackIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

void (__swiftcall *MOSuggestionAssetMediaCoverArtQueryInput.trackIdentifier.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.bundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

void (__swiftcall *MOSuggestionAssetMediaCoverArtQueryInput.bundleIdentifier.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.type.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.type.setter(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

void (__swiftcall *MOSuggestionAssetMediaCoverArtQueryInput.type.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetMediaCoverArtQueryInput.isFirstParty.getter()
{
  return StringProtocol.contains<A>(_:)() & 1;
}

__n128 MOSuggestionAssetMediaCoverArtQueryInput.init(title:albumTitle:artistName:trackIdentifier:bundleIdentifier:type:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11)
{
  __n128 result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  return result;
}

uint64_t one-time initialization function for sharedSongProvider(uint64_t a1)
{
  return one-time initialization function for sharedSongProvider(a1, (void (*)(void))type metadata accessor for MOSuggestionAssetSongAlbumArtProvider, &static MOSuggestionMediaCoverArtProviders.sharedSongProvider);
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  MOSuggestionAssetMediaAlbumArtProvider.init()();
  return v0;
}

uint64_t *MOSuggestionMediaCoverArtProviders.sharedSongProvider.unsafeMutableAddressor()
{
  if (one-time initialization token for sharedSongProvider != -1) {
    swift_once();
  }
  return &static MOSuggestionMediaCoverArtProviders.sharedSongProvider;
}

uint64_t static MOSuggestionMediaCoverArtProviders.sharedSongProvider.getter()
{
  return static MOSuggestionMediaCoverArtProviders.sharedSongProvider.getter(&one-time initialization token for sharedSongProvider);
}

uint64_t one-time initialization function for sharedPodcastProvider(uint64_t a1)
{
  return one-time initialization function for sharedSongProvider(a1, (void (*)(void))type metadata accessor for MOSuggestionAssetPodcastAlbumArtProvider, &static MOSuggestionMediaCoverArtProviders.sharedPodcastProvider);
}

uint64_t one-time initialization function for sharedSongProvider(uint64_t a1, void (*a2)(void), uint64_t *a3)
{
  a2();
  uint64_t v4 = swift_allocObject();
  uint64_t result = MOSuggestionAssetMediaAlbumArtProvider.init()();
  *a3 = v4;
  return result;
}

uint64_t *MOSuggestionMediaCoverArtProviders.sharedPodcastProvider.unsafeMutableAddressor()
{
  if (one-time initialization token for sharedPodcastProvider != -1) {
    swift_once();
  }
  return &static MOSuggestionMediaCoverArtProviders.sharedPodcastProvider;
}

uint64_t static MOSuggestionMediaCoverArtProviders.sharedPodcastProvider.getter()
{
  return static MOSuggestionMediaCoverArtProviders.sharedSongProvider.getter(&one-time initialization token for sharedPodcastProvider);
}

uint64_t static MOSuggestionMediaCoverArtProviders.sharedSongProvider.getter(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_retain();
}

const char *MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_CACHE_COUNT_LIMIT.unsafeMutableAddressor()
{
  return "\a";
}

uint64_t static MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_CACHE_COUNT_LIMIT.getter()
{
  return 7;
}

void *MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_BATCH_REQUEST_QUIESCENT_INTERVAL.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_BATCH_REQUEST_QUIESCENT_INTERVAL;
}

void *MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_RETRY_COUNT.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.DEFAULT_RETRY_COUNT;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.init()()
{
  uint64_t v10 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::Int v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 24) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v0 + 32) = 0;
  id v6 = [objc_allocWithZone((Class)NSCache) init];
  *(void *)(v0 + 40) = v6;
  v9[1] = type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  static DispatchQoS.utility.getter();
  id v11 = _swiftEmptyArrayStorage;
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v10);
  *(void *)(v0 + 48) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v0 + 56) = &_swiftEmptySetSingleton;
  *(void *)(v0 + 64) = [objc_allocWithZone((Class)MOConfigurationManagerBase) init];
  id v7 = v6;
  [v7 setCountLimit:MOSuggestionAssetMediaAlbumArtProvider.dynamicCacheCount.getter()];

  return v0;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.dynamicCacheCount.getter()
{
  return MOSuggestionAssetMediaAlbumArtProvider.dynamicCacheCount.getter(0x80000001001EAB20, 7, "[MOSuggestionAssetMediaAlbumArtProvider] dynamicCacheCount=%d");
}

void MOSuggestionAssetMediaAlbumArtProvider.fetchAssetWithPossibleBatching(queryInput:tileSize:completion:)(uint64_t *a1, char a2, void (*a3)(id), void (*a4)(char *, uint64_t))
{
  uint64_t v5 = v4;
  id v108 = a3;
  id v109 = a4;
  uint64_t v8 = a1[1];
  uint64_t v101 = *a1;
  uint64_t v102 = v8;
  uint64_t v9 = a1[3];
  uint64_t v103 = a1[2];
  uint64_t v104 = v9;
  uint64_t v10 = a1[5];
  uint64_t v11 = a1[6];
  uint64_t v105 = a1[4];
  uint64_t v106 = v10;
  unint64_t v12 = a1[7];
  uint64_t v107 = a1[8];
  uint64_t v13 = a1[10];
  uint64_t v100 = a1[9];
  uint64_t v95 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  id v97 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for DispatchQoS();
  uint64_t v96 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  id v93 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchTime();
  uint64_t v92 = *(void *)(v16 - 8);
  uint64_t v17 = __chkstk_darwin(v16);
  id v90 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v91 = (char *)&v87 - v19;
  if (v12)
  {
    id v20 = *(void **)(v5 + 40);
    id v21 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain_n();
    uint64_t v99 = v11;
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [v21 initWithString:v22];

    id v24 = [v20 objectForKey:v23];
    if (v24)
    {
      id v25 = [v24 content];
      id v26 = [v25 albumArt];

      uint64_t v27 = v99;
      if (v26)
      {
        [v26 size];
        if ((a2 - 2) > 8u) {
          double v28 = 300.0;
        }
        else {
          double v28 = dbl_1001DF388[(char)(a2 - 2)];
        }
        if (one-time initialization token for DefaultArtworkSize != -1)
        {
          double v89 = v28;
          swift_once();
          double v28 = v89;
        }
        if (v28 < *(double *)&static Constants.DefaultArtworkSize)
        {
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v29 = type metadata accessor for Logger();
          __swift_project_value_buffer(v29, (uint64_t)static MOAngelLogger.assets);
          id v30 = v26;
          swift_bridgeObjectRetain();
          id v31 = v30;
          uint64_t v32 = Logger.logObject.getter();
          os_log_type_t v33 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v32, v33))
          {
            uint64_t v34 = swift_slowAlloc();
            aBlock[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v34 = 136315394;
            swift_bridgeObjectRetain();
            id v110 = (double *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v12, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v34 + 12) = 2080;
            [v31 size];
            uint64_t v35 = CGSize.debugDescription.getter();
            id v110 = (double *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v35, v36, aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v32, v33, "[MOSuggestionAssetMediaAlbumArtProvider] Early cache hit trackID=%s quality=%s", (uint8_t *)v34, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          id v86 = v24;
          v108(v24);

          return;
        }
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      specialized Set._Variant.insert(_:)((Swift::Int *)&v110, v27, v12);
      swift_endAccess();
      swift_bridgeObjectRelease();
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      __swift_project_value_buffer(v37, (uint64_t)static MOAngelLogger.assets);
      swift_bridgeObjectRetain_n();
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v88 = v13;
        uint64_t v40 = swift_slowAlloc();
        double v89 = *(double *)&v16;
        uint64_t v41 = (uint8_t *)v40;
        uint64_t v42 = swift_slowAlloc();
        id v87 = v24;
        aBlock[0] = v42;
        *(_DWORD *)uint64_t v41 = 136315138;
        swift_bridgeObjectRetain();
        id v110 = (double *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v99, v12, aBlock);
        uint64_t v13 = v88;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "[MOSuggestionAssetMediaAlbumArtProvider] Cache quality insufficient trackID=%s", v41, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v16 = *(void *)&v89;
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    __swift_project_value_buffer(v43, (uint64_t)static MOAngelLogger.assets);
    swift_bridgeObjectRetain();
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v44, v45))
    {

      swift_bridgeObjectRelease_n();
      uint64_t v11 = v99;
      if (*(unsigned char *)(v5 + 32)) {
        goto LABEL_25;
      }
      goto LABEL_31;
    }
    double v89 = *(double *)&v16;
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v88 = v5;
    aBlock[0] = v47;
    *(_DWORD *)uint64_t v46 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v48 = v99;
    id v110 = (double *)getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v99, v12, aBlock);
    uint64_t v11 = v48;
    uint64_t v16 = *(void *)&v89;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "[MOSuggestionAssetMediaAlbumArtProvider] Adding batch request trackID=%s", v46, 0xCu);
    swift_arrayDestroy();
    uint64_t v5 = v88;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  if (*(unsigned char *)(v5 + 32))
  {
LABEL_25:
    uint64_t v49 = v13;
    uint64_t v50 = v5;
    id v51 = (double **)(v5 + 24);
    swift_beginAccess();
    uint64_t v52 = *(double **)(v50 + 24);
    outlined retain of MOSuggestionAssetMediaCoverArtQueryInput((uint64_t)a1);
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v50 + 24) = v52;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v52 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v52 + 2) + 1, 1, v52);
      *id v51 = v52;
    }
    unint64_t v55 = *((void *)v52 + 2);
    unint64_t v54 = *((void *)v52 + 3);
    if (v55 >= v54 >> 1)
    {
      uint64_t v52 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v54 > 1), v55 + 1, 1, v52);
      *id v51 = v52;
    }
    *((void *)v52 + 2) = v55 + 1;
    uint64_t v56 = &v52[14 * v55];
    uint64_t v57 = v102;
    *((void *)v56 + 4) = v101;
    *((void *)v56 + 5) = v57;
    uint64_t v58 = v104;
    *((void *)v56 + 6) = v103;
    *((void *)v56 + 7) = v58;
    uint64_t v59 = v106;
    *((void *)v56 + 8) = v105;
    *((void *)v56 + 9) = v59;
    *((void *)v56 + 10) = v11;
    *((void *)v56 + 11) = v12;
    uint64_t v60 = v100;
    *((void *)v56 + 12) = v107;
    *((void *)v56 + 13) = v60;
    id v61 = v108;
    *((void *)v56 + 14) = v49;
    *((void *)v56 + 15) = v61;
    *((void *)v56 + 16) = v109;
    v56[17] = 0.0;
    swift_endAccess();
    return;
  }
LABEL_31:
  id v62 = (double **)(v5 + 16);
  swift_beginAccess();
  id v63 = *(double **)(v5 + 16);
  outlined retain of MOSuggestionAssetMediaCoverArtQueryInput((uint64_t)a1);
  swift_retain();
  char v64 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v5 + 16) = v63;
  uint64_t v65 = v5;
  if ((v64 & 1) == 0)
  {
    id v63 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v63 + 2) + 1, 1, v63);
    *id v62 = v63;
  }
  unint64_t v67 = *((void *)v63 + 2);
  unint64_t v66 = *((void *)v63 + 3);
  if (v67 >= v66 >> 1)
  {
    id v63 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v66 > 1), v67 + 1, 1, v63);
    *id v62 = v63;
  }
  *((void *)v63 + 2) = v67 + 1;
  id v68 = &v63[14 * v67];
  uint64_t v69 = v102;
  *((void *)v68 + 4) = v101;
  *((void *)v68 + 5) = v69;
  uint64_t v70 = v104;
  *((void *)v68 + 6) = v103;
  *((void *)v68 + 7) = v70;
  uint64_t v71 = v106;
  *((void *)v68 + 8) = v105;
  *((void *)v68 + 9) = v71;
  *((void *)v68 + 10) = v11;
  *((void *)v68 + 11) = v12;
  uint64_t v72 = v100;
  *((void *)v68 + 12) = v107;
  *((void *)v68 + 13) = v72;
  id v73 = v108;
  *((void *)v68 + 14) = v13;
  *((void *)v68 + 15) = v73;
  *((void *)v68 + 16) = v109;
  v68[17] = 0.0;
  uint64_t v74 = *(void *)(v65 + 16);
  swift_endAccess();
  uint64_t v75 = *(void *)(v74 + 16);
  id v108 = *(void (**)(id))(v65 + 48);
  id v76 = v90;
  static DispatchTime.now()();
  MOSuggestionAssetMediaAlbumArtProvider.dynamicBatchRequestInterval.getter();
  id v77 = v91;
  + infix(_:_:)();
  id v109 = *(void (**)(char *, uint64_t))(v92 + 8);
  v109(v76, v16);
  uint64_t v78 = swift_allocObject();
  swift_weakInit();
  uint64_t v79 = swift_allocObject();
  *(void *)(v79 + 16) = v78;
  *(void *)(v79 + 24) = v75;
  aBlock[4] = (uint64_t)partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fetchAssetWithPossibleBatching(queryInput:tileSize:completion:);
  aBlock[5] = v79;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)thunk for @escaping @callee_guaranteed () -> ();
  uint64_t aBlock[3] = (uint64_t)&block_descriptor_41;
  uint64_t v80 = _Block_copy(aBlock);
  swift_retain();
  id v81 = v93;
  static DispatchQoS.unspecified.getter();
  id v110 = _swiftEmptyArrayStorage;
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  uint64_t v82 = v16;
  uint64_t v83 = v81;
  id v84 = v97;
  uint64_t v85 = v95;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v80);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v84, v85);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v83, v98);
  v109(v77, v82);
  swift_release();
  swift_release();
}

double MOSuggestionAssetMediaAlbumArtProvider.dynamicBatchRequestInterval.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 getDoubleSettingForKey:v2 withFallback:1.5];
  double v4 = v3;

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.assets);
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[MOSuggestionAssetMediaAlbumArtProvider] dynamicBatchRequestInterval=%f", v8, 0xCu);
    swift_slowDealloc();
  }

  return v4;
}

void closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fetchAssetWithPossibleBatching(queryInput:tileSize:completion:)(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    swift_beginAccess();
    if (*(void *)(*(void *)(v4 + 16) + 16) == a2)
    {
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v5 = type metadata accessor for Logger();
      __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.assets);
      id v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "[MOSuggestionAssetMediaAlbumArtProvider] Met quiescent criteria", v8, 2u);
        swift_slowDealloc();
      }

      if (*(unsigned char *)(v4 + 32) == 1)
      {
        swift_beginAccess();
        uint64_t v9 = swift_bridgeObjectRetain();
        specialized Array.append<A>(contentsOf:)(v9);
        swift_endAccess();
        *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()();
    }
    swift_release();
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.assets);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "[MOSuggestionAssetMediaAlbumArtProvider] Invalid media query task type", v13, 2u);
      swift_slowDealloc();
    }
  }
}

void MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()()
{
  uint64_t v1 = v0;
  swift_beginAccess();
  if (*(void *)(*(void *)(v0 + 16) + 16))
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    __swift_project_value_buffer(v2, (uint64_t)static MOAngelLogger.assets);
    swift_retain();
    double v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 134218240;
      aBlock = *(void ***)(*(void *)(v1 + 16) + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v5 + 12) = 2048;
      swift_beginAccess();
      aBlock = *(void ***)(*(void *)(v1 + 24) + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "[MOSuggestionAssetMediaAlbumArtProvider] Starting batch operation activeCount=%ld staleCount=%ld", (uint8_t *)v5, 0x16u);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    *(unsigned char *)(v1 + 32) = 1;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v40 = &_swiftEmptySetSingleton;
    uint64_t v11 = *(void *)(v1 + 16);
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      lazy protocol witness table accessor for type String and conformance String();
      uint64_t v13 = (void *)(v11 + 72);
      do
      {
        Swift::Int v31 = v13[1];
        Swift::Int v14 = v13[2];
        uint64_t v15 = v13[4];
        uint64_t v16 = (void (*)(void))v13[6];
        aBlock = (void **)v13[3];
        uint64_t v33 = v15;
        uint64_t v38 = 0x6C7070612E6D6F63;
        unint64_t v39 = 0xE900000000000065;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if ((StringProtocol.contains<A>(_:)() & 1) != 0 && v14)
        {
          swift_bridgeObjectRetain();
          specialized Set._Variant.insert(_:)((Swift::Int *)&aBlock, v31, v14);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          v16(0);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v13 += 14;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
    }
    uint64_t v17 = (*(uint64_t (**)(void))(*(void *)v1 + 256))();
    if (one-time initialization token for Bag != -1) {
      swift_once();
    }
    uint64_t v18 = (void *)static Constants.Bag;
    id v19 = objc_allocWithZone((Class)AMSMediaTask);
    id v20 = v18;
    NSString v21 = String._bridgeToObjectiveC()();
    NSString v22 = String._bridgeToObjectiveC()();
    id v23 = [v19 initWithType:v17 clientIdentifier:v21 clientVersion:v22 bag:v20];

    specialized _copyCollectionToContiguousArray<A>(_:)((uint64_t)v40);
    swift_bridgeObjectRelease();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release();
    [v23 setItemIdentifiers:isa];

    id v25 = [v23 perform];
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    unint64_t v36 = partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation();
    uint64_t v37 = v26;
    aBlock = _NSConcreteStackBlock;
    uint64_t v33 = 1107296256;
    uint64_t v34 = thunk for @escaping @callee_guaranteed (@guaranteed Error) -> ();
    uint64_t v35 = &block_descriptor_72;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_release();
    [v25 addErrorBlock:v27];
    _Block_release(v27);
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v28;
    *(void *)(v29 + 24) = v10;
    unint64_t v36 = partial apply for closure #2 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation();
    uint64_t v37 = v29;
    aBlock = _NSConcreteStackBlock;
    uint64_t v33 = 1107296256;
    uint64_t v34 = thunk for @escaping @callee_guaranteed (@guaranteed AMSMediaResult) -> ();
    uint64_t v35 = &block_descriptor_79_0;
    id v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v25 addSuccessBlock:v30];
    _Block_release(v30);
    swift_release();
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    __swift_project_value_buffer(v6, (uint64_t)static MOAngelLogger.assets);
    os_log_type_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "[MOSuggestionAssetMediaAlbumArtProvider] No active requets to fire", v9, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.mediaTaskType()()
{
  return 203;
}

id *MOSuggestionAssetMediaAlbumArtProvider.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v20 = *(void *)(v4 - 8);
  uint64_t v21 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v19 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v17 - v12;
  v17[1] = *(void *)(v0 + 48);
  static DispatchTime.now()();
  MOSuggestionAssetMediaAlbumArtProvider.dynamicBatchRequestInterval.getter();
  + infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, v7);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests();
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t aBlock[3] = &block_descriptor_83_0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v23 = _swiftEmptyArrayStorage;
  _sSo17OS_dispatch_queueC8DispatchE10AttributesVAEs10SetAlgebraACWlTm_0((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  v18(v13, v19);
  swift_release();
  return swift_release();
}

uint64_t closure #1 in MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    MOSuggestionAssetMediaAlbumArtProvider._handleStaleRequests()();
    return swift_release();
  }
  return result;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider._handleStaleRequests()()
{
  swift_beginAccess();
  uint64_t v33 = *(double **)(v0 + 24);
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v35 = *(void *)(v1 + 16);
  if (v35)
  {
    uint64_t v24 = v0;
    id v27 = *(id *)(v0 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v2 = (uint64_t *)(v1 + 72);
    do
    {
      uint64_t v3 = *(v2 - 4);
      uint64_t v4 = *(v2 - 2);
      uint64_t v31 = *(v2 - 3);
      uint64_t v32 = *(v2 - 5);
      uint64_t v5 = *v2;
      unint64_t v6 = v2[2];
      uint64_t v34 = v2[1];
      uint64_t v7 = v2[4];
      uint64_t v29 = v2[3];
      uint64_t v30 = *(v2 - 1);
      uint64_t v28 = v2[5];
      long long v38 = *((_OWORD *)v2 + 3);
      uint64_t v37 = v2[8];
      swift_bridgeObjectRetain();
      uint64_t v36 = v7;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSString v8 = String._bridgeToObjectiveC()();
      signed int v9 = [v27 getIntegerSettingForKey:v8 withFallback:3];

      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v10 = type metadata accessor for Logger();
      __swift_project_value_buffer(v10, (uint64_t)static MOAngelLogger.assets);
      uint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 67109120;
        *(_DWORD *)(v13 + 4) = v9;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "[MOSuggestionAssetMediaAlbumArtProvider] dynamicRetryCount=%d", (uint8_t *)v13, 8u);
        swift_slowDealloc();
      }

      if (v37 >= v9)
      {
        ((void (*)(void))v38)(0);
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v14 = v36;
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        uint64_t v15 = Logger.logObject.getter();
        os_log_type_t type = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v15, type))
        {
          uint64_t v16 = swift_slowAlloc();
          log = v15;
          uint64_t v39 = swift_slowAlloc();
          *(_DWORD *)uint64_t v16 = 136315394;
          if (v6) {
            uint64_t v17 = v34;
          }
          else {
            uint64_t v17 = 7104878;
          }
          if (v6) {
            unint64_t v18 = v6;
          }
          else {
            unint64_t v18 = 0xE300000000000000;
          }
          swift_bridgeObjectRetain();
          uint64_t v14 = v36;
          *(void *)(v16 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v17, v18, &v39);
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v16 + 12) = 2048;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)(v16 + 14) = v37;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, log, type, "[MOSuggestionAssetMediaAlbumArtProvider] Queueing trackId=%s, numRetries=%ld", (uint8_t *)v16, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v33 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v33 + 2) + 1, 1, v33);
        }
        unint64_t v20 = *((void *)v33 + 2);
        unint64_t v19 = *((void *)v33 + 3);
        if (v20 >= v19 >> 1) {
          uint64_t v33 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v19 > 1), v20 + 1, 1, v33);
        }
        *((void *)v33 + 2) = v20 + 1;
        uint64_t v21 = &v33[14 * v20];
        *((void *)v21 + 4) = v32;
        *((void *)v21 + 5) = v3;
        *((void *)v21 + 6) = v31;
        *((void *)v21 + 7) = v4;
        *((void *)v21 + 8) = v30;
        *((void *)v21 + 9) = v5;
        *((void *)v21 + 10) = v34;
        *((void *)v21 + 11) = v6;
        *((void *)v21 + 12) = v29;
        *((void *)v21 + 13) = v14;
        *((void *)v21 + 14) = v28;
        *(_OWORD *)(v21 + 15) = v38;
        *((void *)v21 + 17) = v37 + 1;
      }
      v2 += 14;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
    uint64_t v0 = v24;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v0 + 32) = 0;
  *(void *)(v0 + 16) = v33;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 24) = _swiftEmptyArrayStorage;
  uint64_t v22 = swift_bridgeObjectRelease();
  return MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(v22);
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.dynamicRetryCount.getter()
{
  return MOSuggestionAssetMediaAlbumArtProvider.dynamicCacheCount.getter(0x80000001001EAB60, 3, "[MOSuggestionAssetMediaAlbumArtProvider] dynamicRetryCount=%d");
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.dynamicCacheCount.getter(uint64_t a1, uint64_t a2, const char *a3)
{
  unint64_t v6 = *(void **)(v3 + 64);
  NSString v7 = String._bridgeToObjectiveC()();
  signed int v8 = [v6 getIntegerSettingForKey:v7 withFallback:a2];

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  __swift_project_value_buffer(v9, (uint64_t)static MOAngelLogger.assets);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v12 = 67109120;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, a3, v12, 8u);
    swift_slowDealloc();
  }

  return v8;
}

uint64_t closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()()
{
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  __swift_project_value_buffer(v0, (uint64_t)static MOAngelLogger.assets);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    v7[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = Error.localizedDescription.getter();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v4, v5, v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[MOSuggestionAssetMediaAlbumArtProvider] AMSMedia promise error: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()();
    return swift_release();
  }
  return result;
}

void thunk for @escaping @callee_guaranteed (@guaranteed Error) -> ()(uint64_t a1, void *a2)
{
}

{
  void (*v3)(void);
  id v4;
  uint64_t vars8;

  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  uint64_t v4 = a2;
  v3();
  swift_release();
}

void closure #2 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  signed int v8 = (char *)v193 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  Swift::String v216 = (char *)v193 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v221 = (char *)v193 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v224 = (char *)v193 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v193 - v15;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v193 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  sockaddr v222 = (void (*)(void))((char *)v193 - v23);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)v193 - v25;
  __chkstk_darwin(v24);
  Swift::String v223 = (char *)v193 - v27;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_63;
  }
  uint64_t v29 = Strong;
  uint64_t v218 = v17;
  id v30 = [a1 responseDictionary];
  if (!v30) {
    goto LABEL_61;
  }
  uint64_t v31 = v30;
  uint64_t v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v230 = 1635017060;
  unint64_t v231 = 0xE400000000000000;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v32 + 16))
  {
    unint64_t v33 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v232);
    uint64_t v34 = v218;
    if (v35)
    {
      outlined init with copy of Any(*(void *)(v32 + 56) + 32 * v33, (uint64_t)&v233);
    }
    else
    {
      long long v233 = 0u;
      long long v234 = 0u;
    }
  }
  else
  {
    long long v233 = 0u;
    long long v234 = 0u;
    uint64_t v34 = v218;
  }
  swift_bridgeObjectRelease();
  outlined destroy of AnyHashable((uint64_t)&v232);
  if (!*((void *)&v234 + 1))
  {
    swift_release();
    outlined destroy of Any?((uint64_t)&v233, &demangling cache variable for type metadata for Any?);
    goto LABEL_63;
  }
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[AnyHashable : Any]]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_61:
    swift_release();
LABEL_63:
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v94 = type metadata accessor for Logger();
    __swift_project_value_buffer(v94, (uint64_t)static MOAngelLogger.assets);
    id v95 = a1;
    uint64_t v96 = Logger.logObject.getter();
    os_log_type_t v97 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v98 = (uint8_t *)swift_slowAlloc();
      uint64_t v232 = swift_slowAlloc();
      *(_DWORD *)uint64_t v98 = 136315138;
      id v99 = [v95 debugDescription];
      uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v102 = v101;

      *(void *)&long long v233 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v100, v102, &v232);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v96, v97, "[MOSuggestionAssetMediaAlbumArtProvider] Did not decode AMS result struct correctly result=%s", v98, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  Swift::String v211 = v26;
  uint64_t v204 = v21;
  uint64_t v205 = v18;
  uint64_t v194 = v8;
  uint64_t v217 = v29;
  id v209 = (uint64_t *)(a3 + 16);
  uint64_t v219 = v230;
  uint64_t v36 = *(void *)(v230 + 16);
  if (v36)
  {
    uint64_t v37 = (uint64_t *)(v219 + 32);
    unint64_t v215 = (uint64_t *)(v217 + 56);
    swift_beginAccess();
    uint64_t v212 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v205 + 56);
    uint64_t v208 = (unsigned int (**)(char *, uint64_t, uint64_t))(v205 + 48);
    *(void *)&long long v207 = v205 + 16;
    uint64_t v206 = (void (**)(char *, uint64_t))(v205 + 8);
    long long v38 = &protocol witness table for String;
    id v225 = (char *)&type metadata for Any + 8;
    *(void *)&long long v39 = 136315138;
    long long v203 = v39;
    Swift::String v210 = (void (***)(char *, uint64_t))(v205 + 32);
    while (1)
    {
      uint64_t v40 = *v37;
      uint64_t v228 = 0x7475626972747461;
      unint64_t v229 = 0xEA00000000007365;
      swift_bridgeObjectRetain();
      AnyHashable.init<A>(_:)();
      if (*(void *)(v40 + 16)
        && (unint64_t v41 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v232), (v42 & 1) != 0))
      {
        outlined init with copy of Any(*(void *)(v40 + 56) + 32 * v41, (uint64_t)&v233);
      }
      else
      {
        long long v233 = 0u;
        long long v234 = 0u;
      }
      outlined destroy of AnyHashable((uint64_t)&v232);
      if (*((void *)&v234 + 1))
      {
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [AnyHashable : Any]);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_23;
        }
        uint64_t v43 = v228;
        uint64_t v228 = 25705;
        unint64_t v229 = 0xE200000000000000;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v40 + 16)
          && (unint64_t v44 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v232), (v45 & 1) != 0))
        {
          outlined init with copy of Any(*(void *)(v40 + 56) + 32 * v44, (uint64_t)&v233);
        }
        else
        {
          long long v233 = 0u;
          long long v234 = 0u;
        }
        swift_bridgeObjectRelease();
        outlined destroy of AnyHashable((uint64_t)&v232);
        if (*((void *)&v234 + 1)) {
          break;
        }
      }
      swift_bridgeObjectRelease();
      outlined destroy of Any?((uint64_t)&v233, &demangling cache variable for type metadata for Any?);
LABEL_13:
      ++v37;
      if (!--v36) {
        goto LABEL_68;
      }
    }
    if (swift_dynamicCast())
    {
      uint64_t v46 = v16;
      uint64_t v47 = v38;
      uint64_t v49 = v228;
      uint64_t v48 = v229;
      uint64_t v50 = *v215;
      swift_bridgeObjectRetain();
      uint64_t v213 = v49;
      uint64_t v51 = v49;
      long long v38 = v47;
      uint64_t v220 = v48;
      LODWORD(v47) = specialized Set.contains(_:)(v51, v48, v50);
      swift_bridgeObjectRelease();
      uint64_t v228 = 0x6B726F77747261;
      unint64_t v229 = 0xE700000000000000;
      AnyHashable.init<A>(_:)();
      uint64_t v52 = *(void *)(v43 + 16);
      LODWORD(v214) = v47;
      if (v52 && (unint64_t v53 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v232), (v54 & 1) != 0))
      {
        outlined init with copy of Any(*(void *)(v43 + 56) + 32 * v53, (uint64_t)&v233);
      }
      else
      {
        long long v233 = 0u;
        long long v234 = 0u;
      }
      uint64_t v16 = v46;
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)&v232);
      if (*((void *)&v234 + 1))
      {
        if (swift_dynamicCast())
        {
          id v55 = objc_allocWithZone((Class)AMSMediaArtwork);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v57 = [v55 initWithDictionary:isa];

          if (v214)
          {
            uint64_t v58 = &static Constants.HighQualityArtworkSize;
            uint64_t v59 = v218;
            if (one-time initialization token for HighQualityArtworkSize != -1)
            {
              swift_once();
              uint64_t v58 = &static Constants.HighQualityArtworkSize;
            }
          }
          else
          {
            uint64_t v58 = &static Constants.DefaultArtworkSize;
            uint64_t v59 = v218;
            if (one-time initialization token for DefaultArtworkSize != -1)
            {
              swift_once();
              uint64_t v58 = &static Constants.DefaultArtworkSize;
            }
          }
          id v62 = [v57 URLWithSize:*(double *)v58, *((double *)v58 + 1)];

          uint64_t v63 = (uint64_t)v224;
          if (v62)
          {
            char v64 = v211;
            static URL._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v65 = *v210;
            ((void (*)(char *, char *, uint64_t))*v210)(v16, v64, v59);
            unint64_t v66 = *v212;
            (*v212)(v16, 0, 1, v59);
            unint64_t v67 = *v208;
            if ((*v208)(v16, 1, v59) != 1)
            {
              id v68 = v65;
              uint64_t v69 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v66;
              uint64_t v70 = v223;
              uint64_t v71 = v218;
              unint64_t v202 = v68;
              ((void (*)(char *, char *, uint64_t))v68)(v223, v16, v218);
              uint64_t v214 = *(uint8_t **)v207;
              ((void (*)(uint64_t, char *, uint64_t))v214)(v63, v70, v71);
              uint64_t v201 = v69;
              v69(v63, 0, 1, v71);
              uint64_t v72 = v209;
              swift_beginAccess();
              if (v67((char *)v63, 1, v71) == 1)
              {
                outlined destroy of Any?(v63, &demangling cache variable for type metadata for URL?);
                swift_bridgeObjectRetain();
                unint64_t v73 = specialized __RawDictionaryStorage.find<A>(_:)(v213, v220);
                char v75 = v74;
                swift_bridgeObjectRelease();
                if (v75)
                {
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v77 = *v72;
                  *(void *)&long long v233 = *v72;
                  *uint64_t v72 = 0x8000000000000000;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    specialized _NativeDictionary.copy()();
                    uint64_t v77 = v233;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v78 = (uint64_t)v221;
                  uint64_t v71 = v218;
                  ((void (*)(char *, unint64_t, uint64_t))v202)(v221, *(void *)(v77 + 56) + *(void *)(v205 + 72) * v73, v218);
                  specialized _NativeDictionary._delete(at:)(v73, v77);
                  *uint64_t v72 = v77;
                  swift_bridgeObjectRelease();
                  uint64_t v79 = 0;
                }
                else
                {
                  uint64_t v79 = 1;
                  uint64_t v71 = v218;
                  uint64_t v78 = (uint64_t)v221;
                }
                v201(v78, v79, 1, v71);
                swift_bridgeObjectRelease();
                outlined destroy of Any?(v78, &demangling cache variable for type metadata for URL?);
              }
              else
              {
                uint64_t v80 = (uint64_t)v211;
                ((void (*)(char *, uint64_t, uint64_t))v202)(v211, v63, v71);
                char v81 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)&long long v233 = *v72;
                *uint64_t v72 = 0x8000000000000000;
                specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v80, v213, v220, v81);
                *uint64_t v72 = v233;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              uint64_t v34 = v71;
              uint64_t v82 = v222;
              swift_endAccess();
              uint64_t v83 = v223;
              if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
                swift_once();
              }
              uint64_t v84 = type metadata accessor for Logger();
              __swift_project_value_buffer(v84, (uint64_t)static MOAngelLogger.assets);
              ((void (*)(void (*)(void), char *, uint64_t))v214)(v82, v83, v71);
              uint64_t v85 = v82;
              id v86 = Logger.logObject.getter();
              os_log_type_t v87 = static os_log_type_t.default.getter();
              if (os_log_type_enabled(v86, v87))
              {
                uint64_t v88 = swift_slowAlloc();
                uint64_t v220 = swift_slowAlloc();
                uint64_t v232 = v220;
                *(_DWORD *)uint64_t v88 = v203;
                uint64_t v214 = (uint8_t *)v88;
                double v89 = (char *)v85;
                uint64_t v90 = URL.debugDescription.getter();
                *(void *)(v88 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v90, v91, &v232);
                swift_bridgeObjectRelease();
                uint64_t v92 = *v206;
                (*v206)(v89, v218);
                _os_log_impl((void *)&_mh_execute_header, v86, v87, "[MOSuggestionAssetMediaAlbumArtProvider] Obtained %s", v214, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                uint64_t v34 = v218;
                swift_slowDealloc();

                v92(v223, v34);
              }
              else
              {

                id v93 = *v206;
                (*v206)((char *)v85, v34);
                v93(v83, v34);
              }
              goto LABEL_13;
            }
          }
          else
          {
            (*v212)(v46, 1, 1, v59);
          }
          swift_bridgeObjectRelease();
          uint64_t v60 = v16;
          id v61 = &demangling cache variable for type metadata for URL?;
LABEL_51:
          outlined destroy of Any?((uint64_t)v60, v61);
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v34 = v218;
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
      uint64_t v60 = (char *)&v233;
      id v61 = &demangling cache variable for type metadata for Any?;
      goto LABEL_51;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_68:
  swift_bridgeObjectRelease();
  uint64_t v103 = v217;
  swift_beginAccess();
  uint64_t v104 = *(void *)(v103 + 16);
  uint64_t v105 = *(void *)(v104 + 16);
  if (!v105) {
    goto LABEL_110;
  }
  uint64_t v106 = v217 + 56;
  swift_bridgeObjectRetain();
  v193[1] = v106;
  swift_beginAccess();
  uint64_t v206 = 0;
  Swift::String v210 = (void (***)(char *, uint64_t))(v205 + 56);
  uint64_t v201 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))(v205 + 16);
  uint64_t v208 = (unsigned int (**)(char *, uint64_t, uint64_t))(v205 + 48);
  unint64_t v200 = (void (**)(char *, uint64_t, uint64_t))(v205 + 32);
  unint64_t v202 = (void (**)(char *, uint64_t))(v205 + 8);
  v193[0] = &v227;
  v193[2] = v104;
  uint64_t v107 = v104 + 64;
  *(void *)&long long v108 = 136315138;
  long long v207 = v108;
  *(void *)&long long v203 = (char *)&type metadata for Any + 8;
  do
  {
    unint64_t v110 = *(void *)(v107 + 24);
    if (!v110) {
      goto LABEL_72;
    }
    uint64_t v220 = v105;
    id v111 = *(char **)(v107 - 24);
    uint64_t v212 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v107 - 32);
    id v112 = *(char **)(v107 - 8);
    uint64_t v213 = *(void *)(v107 - 16);
    uint64_t v214 = *(uint8_t **)v107;
    uint64_t v113 = v34;
    unint64_t v114 = *(char **)(v107 + 8);
    uint64_t v115 = *(void *)(v107 + 16);
    Swift::String v211 = *(char **)(v107 + 48);
    sockaddr v222 = *(void (**)(void))(v107 + 56);
    uint64_t v219 = v107;
    id v116 = *(char **)(v107 + 64);
    uint64_t v117 = v217;
    uint64_t v118 = *(void *)(v217 + 56);
    swift_bridgeObjectRetain();
    id v225 = v111;
    swift_bridgeObjectRetain();
    unint64_t v224 = v112;
    swift_bridgeObjectRetain();
    Swift::String v223 = v114;
    uint64_t v34 = v113;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    unint64_t v221 = v116;
    id v119 = (uint64_t *)v115;
    swift_retain();
    int v120 = specialized Set.contains(_:)(v115, v110, v118);
    swift_bridgeObjectRelease();
    id v121 = *(void **)(v117 + 40);
    id v122 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    id v123 = v121;
    NSString v124 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v125 = [v122 initWithString:v124 v193[0]];

    id v126 = [v123 objectForKey:v125];
    if (!v126) {
      goto LABEL_77;
    }
    if (v120)
    {

LABEL_77:
      Class v127 = v209;
      swift_beginAccess();
      uint64_t v128 = *v127;
      uint64_t v129 = *(void *)(*v127 + 16);
      unint64_t v215 = v119;
      if (v129)
      {
        swift_bridgeObjectRetain();
        unint64_t v130 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v119, v110);
        if (v131)
        {
          uint64_t v132 = *(void *)(v128 + 56);
          uint64_t v133 = v205;
          uint64_t v134 = (uint64_t)v216;
          (*(void (**)(char *, unint64_t, uint64_t))(v205 + 16))(v216, v132 + *(void *)(v205 + 72) * v130, v113);
          Swift::String v135 = *(void (***)(char *, uint64_t))(v133 + 56);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v135)(v134, 0, 1, v34);
        }
        else
        {
          Swift::String v135 = *v210;
          uint64_t v134 = (uint64_t)v216;
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v210)(v216, 1, 1, v34);
        }
        id v142 = v222;
        swift_bridgeObjectRelease();
        id v143 = *v208;
        if ((*v208)((char *)v134, 1, v34) != 1)
        {
          id v144 = v204;
          (*v200)(v204, v134, v34);
          swift_endAccess();
          id v145 = v206;
          uint64_t v146 = Data.init(contentsOf:options:)();
          if (!v145)
          {
            uint64_t v198 = v146;
            unint64_t v199 = v147;
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
              swift_once();
            }
            id v196 = v143;
            int v197 = v120;
            uint64_t v152 = type metadata accessor for Logger();
            __swift_project_value_buffer(v152, (uint64_t)static MOAngelLogger.assets);
            swift_bridgeObjectRetain_n();
            id v153 = Logger.logObject.getter();
            os_log_type_t v154 = static os_log_type_t.default.getter();
            BOOL v155 = os_log_type_enabled(v153, v154);
            uint64_t v206 = 0;
            if (v155)
            {
              uint64_t v156 = (uint8_t *)swift_slowAlloc();
              uint64_t v228 = swift_slowAlloc();
              *(_DWORD *)uint64_t v156 = v207;
              swift_bridgeObjectRetain();
              uint64_t v226 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v215, v110, &v228);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v153, v154, "[MOSuggestionAssetMediaAlbumArtProvider] Downloading Artwork for trackID=%s", v156, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            id v157 = objc_allocWithZone((Class)UIImage);
            uint64_t v158 = v198;
            unint64_t v159 = v199;
            outlined copy of Data._Representation(v198, v199);
            Class v160 = Data._bridgeToObjectiveC()().super.isa;
            id v161 = [v157 initWithData:v160];
            outlined consume of Data._Representation(v158, v159);

            id v162 = v194;
            uint64_t v163 = v218;
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v135)(v194, 1, 1, v218);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v195 = v161;
            uint64_t v212 = (void (**)(char *, uint64_t, uint64_t, uint64_t))String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            NSString v164 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            uint64_t v214 = (uint8_t *)String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            NSString v165 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            if (v196(v162, 1, v163) == 1)
            {
              uint64_t v167 = 0;
            }
            else
            {
              URL._bridgeToObjectiveC()(v166);
              uint64_t v167 = v168;
              (*v202)(v162, v163);
            }
            uint64_t v169 = v217;
            id v170 = v211;
            id v171 = objc_allocWithZone((Class)MOSuggestionAssetMediaItem);
            id v172 = v212;
            id v173 = v214;
            id v174 = v195;
            id v175 = [v171 initTitle:v212 albumTitle:v164 artistName:v214 albumArt:v195 trackIdentifier:v165 previewURL:v167 mediaType:v170];

            id v176 = v174;
            uint64_t v177 = MOSuggestionAssetsTypeMediaCoverArt;
            type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetMediaItem);
            id v178 = v175;
            id v179 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v175 type:v177 contentClassType:swift_getObjCClassFromMetadata()];
            id v180 = *(void **)(v169 + 40);
            id v181 = objc_allocWithZone((Class)NSString);
            swift_bridgeObjectRetain();
            id v182 = v180;
            id v183 = v215;
            NSString v184 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v185 = [v181 initWithString:v184];

            [v182 setObject:v179 forKey:v185];
            id v186 = v179;
            v222(v179);

            if (v197)
            {
              swift_beginAccess();
              specialized Set._Variant.remove(_:)((uint64_t)v183, v110);
              swift_endAccess();

              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              outlined consume of Data._Representation(v198, v199);
              swift_bridgeObjectRelease();
              uint64_t v34 = v218;
              (*v202)(v204, v218);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v34 = v218;
              (*v202)(v204, v218);
              outlined consume of Data._Representation(v198, v199);
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
            }
            uint64_t v105 = v220;
            goto LABEL_96;
          }
          swift_errorRelease();
          (*v202)(v144, v34);
          uint64_t v206 = 0;
LABEL_90:
          if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
            swift_once();
          }
          uint64_t v148 = type metadata accessor for Logger();
          __swift_project_value_buffer(v148, (uint64_t)static MOAngelLogger.assets);
          swift_bridgeObjectRetain();
          id v149 = Logger.logObject.getter();
          os_log_type_t v150 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v149, v150))
          {
            uint64_t v151 = swift_slowAlloc();
            uint64_t v228 = swift_slowAlloc();
            *(_DWORD *)uint64_t v151 = v207;
            swift_bridgeObjectRetain();
            *(void *)(v151 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v215, v110, &v228);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v149, v150, "[MOSuggestionAssetMediaAlbumArtProvider] Artwork failed for trackID=%s", (uint8_t *)v151, 0xCu);
            swift_arrayDestroy();
            uint64_t v34 = v218;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          uint64_t v105 = v220;
          v142(0);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_96:
          uint64_t v107 = v219;
          goto LABEL_72;
        }
      }
      else
      {
        uint64_t v134 = (uint64_t)v216;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v210)(v216, 1, 1, v113);
        id v142 = v222;
      }
      outlined destroy of Any?(v134, &demangling cache variable for type metadata for URL?);
      swift_endAccess();
      goto LABEL_90;
    }
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v136 = type metadata accessor for Logger();
    __swift_project_value_buffer(v136, (uint64_t)static MOAngelLogger.assets);
    swift_bridgeObjectRetain();
    id v137 = Logger.logObject.getter();
    os_log_type_t v138 = static os_log_type_t.error.getter();
    BOOL v139 = os_log_type_enabled(v137, v138);
    double v140 = (void (*)(id))v222;
    if (v139)
    {
      uint64_t v141 = swift_slowAlloc();
      uint64_t v228 = swift_slowAlloc();
      *(_DWORD *)uint64_t v141 = v207;
      swift_bridgeObjectRetain();
      *(void *)(v141 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v119, v110, &v228);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v137, v138, "[MOSuggestionAssetMediaAlbumArtProvider] Cache hit trackID=%s", (uint8_t *)v141, 0xCu);
      swift_arrayDestroy();
      uint64_t v34 = v218;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v107 = v219;
    id v109 = v126;
    v140(v126);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v105 = v220;
LABEL_72:
    v107 += 112;
    --v105;
  }
  while (v105);
  swift_bridgeObjectRelease();
LABEL_110:
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v187 = type metadata accessor for Logger();
  __swift_project_value_buffer(v187, (uint64_t)static MOAngelLogger.assets);
  uint64_t v188 = Logger.logObject.getter();
  os_log_type_t v189 = static os_log_type_t.default.getter();
  BOOL v190 = os_log_type_enabled(v188, v189);
  uint64_t v191 = v217;
  if (v190)
  {
    uint64_t v192 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v192 = 0;
    _os_log_impl((void *)&_mh_execute_header, v188, v189, "[MOSuggestionAssetMediaAlbumArtProvider] Finished executing all active requests", v192, 2u);
    swift_slowDealloc();
  }

  *(void *)(v191 + 16) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()();
  swift_release();
}

void thunk for @escaping @callee_guaranteed (@guaranteed AMSMediaResult) -> ()(uint64_t a1, void *a2)
{
}

uint64_t MOSuggestionAssetPodcastAlbumArtProvider.mediaTaskType()()
{
  return 301;
}

void *MOSuggestionAssetMediaAlbumArtProvider.BatchRequestIntervalKey.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.BatchRequestIntervalKey;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.BatchRequestIntervalKey.getter()
{
  return 0xD00000000000003BLL;
}

void *MOSuggestionAssetMediaAlbumArtProvider.CacheCountKey.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.CacheCountKey;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.CacheCountKey.getter()
{
  return 0xD000000000000031;
}

void *MOSuggestionAssetMediaAlbumArtProvider.RetryCountKey.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.RetryCountKey;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.RetryCountKey.getter()
{
  return 0xD000000000000031;
}

void *MOSuggestionAssetMediaAlbumArtProvider.PredefinedAppNum.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.PredefinedAppNum;
}

uint64_t static MOSuggestionAssetMediaAlbumArtProvider.PredefinedAppNum.getter()
{
  return 15;
}

void *MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashvalueKeyPrefix.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashvalueKeyPrefix;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashvalueKeyPrefix.getter()
{
  return 0xD000000000000035;
}

void *MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackKey.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackKey;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackKey.getter()
{
  return 0xD000000000000041;
}

void one-time initialization function for ThirdPartyAppColorHashDefaultValues()
{
  static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues = (uint64_t)&outlined read-only object #0 of one-time initialization function for ThirdPartyAppColorHashDefaultValues;
}

uint64_t *MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues.unsafeMutableAddressor()
{
  if (one-time initialization token for ThirdPartyAppColorHashDefaultValues != -1) {
    swift_once();
  }
  return &static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues;
}

uint64_t static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues.getter()
{
  if (one-time initialization token for ThirdPartyAppColorHashDefaultValues != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

void *MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackDefaultValue.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackDefaultValue;
}

unint64_t static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorFallbackDefaultValue.getter()
{
  return 0xD000000000000040;
}

double *MOSuggestionAssetMediaAlbumArtProvider.thirdPartyAppPredefinedColors.getter()
{
  if (one-time initialization token for ThirdPartyAppColorHashDefaultValues != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(static MOSuggestionAssetMediaAlbumArtProvider.ThirdPartyAppColorHashDefaultValues + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  os_log_type_t v2 = *(void **)(v0 + 64);
  uint64_t v3 = 0;
  uint64_t v4 = swift_bridgeObjectRetain() + 40;
  uint64_t v5 = _swiftEmptyArrayStorage;
  do
  {
    v21[0] = v3;
    swift_bridgeObjectRetain();
    v6._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    v21[0] = 0xD000000000000035;
    v21[1] = 0x80000001001EABA0;
    String.append(_:)(v6);
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v9 = [v2 getStringSettingForKey:v7 withFallback:v8];

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v5 + 2) + 1, 1, v5);
    }
    unint64_t v14 = *((void *)v5 + 2);
    unint64_t v13 = *((void *)v5 + 3);
    if (v14 >= v13 >> 1) {
      uint64_t v5 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v13 > 1), v14 + 1, 1, v5);
    }
    *((void *)v5 + 2) = v14 + 1;
    uint64_t v15 = &v5[2 * v14];
    *((void *)v15 + 4) = v10;
    *((void *)v15 + 5) = v12;
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    __swift_project_value_buffer(v16, (uint64_t)static MOAngelLogger.assets);
    swift_bridgeObjectRetain();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      v21[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v19 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v10, v12, v21);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[MOSuggestionAssetMediaAlbumArtProvider] ThirdPartyAppPredefinedColors=%s", (uint8_t *)v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    ++v3;
    v4 += 16;
  }
  while (v1 != v3);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t MOSuggestionAssetMediaAlbumArtProvider.thirdPartyAppColorFallbackValue.getter()
{
  uint64_t v1 = *(void **)(v0 + 64);
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 getStringSettingForKey:v2 withFallback:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  __swift_project_value_buffer(v8, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain_n();
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)unint64_t v11 = 136315138;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v5, v7, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "[MOSuggestionAssetMediaAlbumArtProvider] ThirdPartyAppColorFallbackValue=%s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v5;
}

uint64_t specialized static MOSuggestionAssetMediaCoverArtQueryInput.typeFromBundleId(_:)(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6C7070612E6D6F63 && a2 == 0xEC00000076742E65
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 3;
  }
  if (a1 == 0xD000000000000012 && a2 == 0x80000001001E0D10
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 2;
  }
  if (a1 == 0x6C7070612E6D6F63 && a2 == 0xEF636973754D2E65
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || a1 == 0xD000000000000029 && a2 == 0x80000001001E1270
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    return 1;
  }
  lazy protocol witness table accessor for type String and conformance String();
  lazy protocol witness table accessor for type String and conformance String();
  if (BidirectionalCollection<>.starts<A>(with:)()) {
    return 0;
  }
  else {
    return 6;
  }
}

unint64_t specialized MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications.init(rawValue:)(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&outlined read-only object #0 of MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications.init(rawValue:), v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t specialized static MOSuggestionAssetMediaCoverArtQueryInput.typeFromBundleMediaType(_:)()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3)
  {
    uint64_t v6 = 1;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v6;
  }
  char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
    if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
    {
      uint64_t v6 = 4;
    }
    else
    {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        return 4;
      }
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;
      if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17)
      {
        uint64_t v6 = 2;
      }
      else
      {
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          return 2;
        }
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;
        if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
        {
          uint64_t v6 = 5;
        }
        else
        {
          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v23) {
            return 5;
          }
          uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v26 = v25;
          if (v24 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v26 == v27)
          {
            uint64_t v6 = 6;
          }
          else
          {
            char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v28) {
              return 6;
            }
            uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v31 = v30;
            if (v29 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v31 == v32)
            {
              uint64_t v6 = 7;
            }
            else
            {
              char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v33) {
                return 7;
              }
              uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v36 = v35;
              if (v34 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v36 == v37)
              {
                uint64_t v6 = 8;
              }
              else if (_stringCompareWithSmolCheck(_:_:expecting:)())
              {
                uint64_t v6 = 8;
              }
              else
              {
                uint64_t v6 = 0;
              }
            }
          }
        }
      }
    }
    goto LABEL_8;
  }
  return 1;
}

uint64_t outlined retain of MOSuggestionAssetMediaCoverArtQueryInput(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001A7328()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001A7360()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fetchAssetWithPossibleBatching(queryInput:tileSize:completion:)()
{
  closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fetchAssetWithPossibleBatching(queryInput:tileSize:completion:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t block_copy_helper_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_41()
{
  return swift_release();
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications()
{
  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications()
{
  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications and conformance MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications);
  }
  return result;
}

uint64_t destroy for MOSuggestionAssetMediaCoverArtQueryInput()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MOSuggestionAssetMediaCoverArtQueryInput(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MOSuggestionAssetMediaCoverArtQueryInput(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void *assignWithTake for MOSuggestionAssetMediaCoverArtQueryInput(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetMediaCoverArtQueryInput(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetMediaCoverArtQueryInput(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaCoverArtQueryInput()
{
  return &type metadata for MOSuggestionAssetMediaCoverArtQueryInput;
}

unsigned char *storeEnumTagSinglePayload for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A7838);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications()
{
  return &type metadata for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownFirstPartyApplications;
}

unsigned char *storeEnumTagSinglePayload for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001A790CLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications()
{
  return &type metadata for MOSuggestionAssetMediaCoverArtQueryInput.MOKnownThirdPartyApplications;
}

ValueMetadata *type metadata accessor for MOSuggestionMediaCoverArtProviders()
{
  return &type metadata for MOSuggestionMediaCoverArtProviders;
}

uint64_t type metadata accessor for MOSuggestionAssetMediaAlbumArtProvider()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionAssetPodcastAlbumArtProvider()
{
  return self;
}

uint64_t type metadata accessor for MOSuggestionAssetSongAlbumArtProvider()
{
  return self;
}

uint64_t destroy for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *initializeWithCopy for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  uint64_t v4 = a2[12];
  a1[11] = a2[11];
  a1[12] = v4;
  swift_retain();
  swift_release();
  a1[13] = a2[13];
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest()
{
  return &type metadata for MOSuggestionAssetMediaAlbumArtProvider.QueuableRequest;
}

uint64_t sub_1001A7D1C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()()
{
  return closure #1 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()();
}

uint64_t sub_1001A7D5C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void partial apply for closure #2 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(void *a1)
{
  closure #2 in MOSuggestionAssetMediaAlbumArtProvider.fireBatchOperation()(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t outlined copy of Data._Representation(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t partial apply for closure #1 in MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()()
{
  return closure #1 in MOSuggestionAssetMediaAlbumArtProvider.handleStaleRequests()();
}

uint64_t specialized Dictionary.subscript.setter(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    outlined init with take of Any((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v7, a2, isUniquelyReferenced_nonNull_native);
    *unint64_t v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    outlined destroy of Any?(a1, &demangling cache variable for type metadata for Any?);
    specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)a2, v7);

    return outlined destroy of Any?((uint64_t)v7, &demangling cache variable for type metadata for Any?);
  }
}

uint64_t specialized Dictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date??);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v11);
  char v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    outlined destroy of Any?(a1, (uint64_t *)&demangling cache variable for type metadata for Date??);
    specialized Dictionary._Variant.removeValue(forKey:)(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return outlined destroy of Any?((uint64_t)v10, (uint64_t *)&demangling cache variable for type metadata for Date??);
  }
  else
  {
    outlined init with take of Date?(a1, (uint64_t)v13, (uint64_t *)&demangling cache variable for type metadata for Date?);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

unint64_t MOEventBundle.isSingleAsset.getter()
{
  unint64_t result = (unint64_t)MOEventBundle._orderedAssetReferences()();
  if (result)
  {
    if (result >> 62) {
      uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v1 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    return v1 == 1;
  }
  return result;
}

uint64_t *MOSuggestionAssetCacheManager.shared.unsafeMutableAddressor()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }
  return &static MOSuggestionAssetCacheManager.shared;
}

unint64_t MOEventBundle.orderedAssetReferencesForTransfer.getter()
{
  return (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
}

double *specialized Sequence.compactMap<A>(_:)(unint64_t a1, Swift::Int *a2, Swift::Int *a3, uint64_t a4, Swift::Int *a5, uint64_t a6, Swift::Int *a7)
{
  unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; uint64_t v9 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v11 = (a1 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(a1 + 8 * i);
      uint64_t v12 = v11;
      uint64_t v13 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v22 = v11;
      closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(&v22, a2, a3, a4, a5, a6, a7, &v21);
      if (v7)
      {
        swift_bridgeObjectRelease();

        return (double *)swift_bridgeObjectRelease();
      }

      if (v21)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (v13 == v9)
      {
        swift_bridgeObjectRelease();
        return (double *)v23;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t specialized _dictionaryUpCast<A, B, C, D>(_:)(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<MOUsageContextType, Any>);
    unint64_t v2 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v28 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v28 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    int64_t v13 = v28 + 1;
    if (!v12)
    {
      int64_t v13 = v28 + 2;
      if (v28 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v28 + 3;
        if (v28 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v28 + 4;
          if (v28 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v28 = v13;
LABEL_28:
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v31[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    *(void *)&v30[0] = v15;
    id v16 = *(id *)&v31[0];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UUID : [AnyHashable : Any]?]);
    swift_dynamicCast();
    uint64_t v17 = *(void *)&v31[0];
    outlined init with take of Any((_OWORD *)((char *)v31 + 8), v29);
    outlined init with take of Any(v29, v31);
    outlined init with take of Any(v31, v30);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = -1 << v2[32];
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v8 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(void *)(*((void *)v2 + 6) + 8 * v8) = v17;
    uint64_t result = (uint64_t)outlined init with take of Any(v30, (_OWORD *)(*((void *)v2 + 7) + 32 * v8));
    ++*((void *)v2 + 2);
  }
  int64_t v14 = v28 + 5;
  if (v28 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    outlined consume of Set<String>.Iterator._Variant();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v28 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

{
  unsigned char *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  _OWORD v31[4];
  _OWORD v32[2];
  _OWORD v33[3];

  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<NSAttributedStringKey, Any>);
    unint64_t v2 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v29 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  uint64_t v30 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v11);
    int64_t v13 = v30 + 1;
    if (!v12)
    {
      int64_t v13 = v30 + 2;
      if (v30 + 2 >= v28) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v29 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v30 + 3;
        if (v30 + 3 >= v28) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v29 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v30 + 4;
          if (v30 + 4 >= v28) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v29 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    uint64_t v30 = v13;
LABEL_28:
    id v16 = *(void **)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v33[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v15 = *(void **)&v33[0];
    *(void *)&v32[0] = v16;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIFont);
    uint64_t v17 = v15;
    Swift::Int v18 = v16;
    swift_dynamicCast();
    uint64_t v19 = *(void *)&v33[0];
    outlined init with take of Any((_OWORD *)((char *)v33 + 8), v31);
    outlined init with take of Any(v31, v33);
    outlined init with take of Any(v33, v32);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    unint64_t v20 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v21 = -1 << v2[32];
    char v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)&v6[8 * (v22 >> 6)]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v22) & ~*(void *)&v6[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      BOOL v24 = 0;
      uint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        int64_t v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)&v6[8 * v23];
      }
      while (v27 == -1);
      unint64_t v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)&v6[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(void *)(*((void *)v2 + 6) + 8 * v8) = v19;
    uint64_t result = (uint64_t)outlined init with take of Any(v32, (_OWORD *)(*((void *)v2 + 7) + 32 * v8));
    ++*((void *)v2 + 2);
  }
  int64_t v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    outlined consume of Set<String>.Iterator._Variant();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v29 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v29 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  long long v28;
  long long v29;
  uint64_t v30;
  _OWORD v31[2];
  long long v32;
  long long v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];
  _OWORD v37[2];
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  unint64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      int64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    int64_t v14 = *(void *)(v27 + 8 * v13);
    uint64_t v15 = v8 + 1;
    if (!v14)
    {
      uint64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      int64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        uint64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        int64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          uint64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          int64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    unint64_t v8 = v15;
LABEL_28:
    uint64_t v17 = *(void **)(*(void *)(a1 + 48) + 8 * v12);
    outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8);
    *(void *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    long long v38 = v40;
    *(void *)&v36[0] = v17;
    type metadata accessor for MOSuggestionAssetMetadataKey(0);
    Swift::Int v18 = v17;
    swift_dynamicCast();
    outlined init with take of Any((_OWORD *)((char *)v37 + 8), v31);
    uint64_t v32 = v28;
    char v33 = v29;
    uint64_t v34 = v30;
    outlined init with take of Any(v31, v35);
    int64_t v28 = v32;
    uint64_t v29 = v33;
    uint64_t v30 = v34;
    outlined init with take of Any(v35, v36);
    outlined init with take of Any(v36, &v32);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    unint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)unint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)outlined init with take of Any(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  id v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    outlined consume of Set<String>.Iterator._Variant();
    return (uint64_t)v2;
  }
  int64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    uint64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    uint64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    int64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char *v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  long long v28;
  long long v29;
  uint64_t v30;
  long long v31;
  long long v32;
  long long v33;
  uint64_t v34;
  _OWORD v35[2];
  _OWORD v36[2];
  _OWORD v37[2];
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;

  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _DictionaryStorage<AnyHashable, Any>);
    unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  unint64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      int64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    int64_t v14 = *(void *)(v27 + 8 * v13);
    uint64_t v15 = v8 + 1;
    if (!v14)
    {
      uint64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      int64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        uint64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        int64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          uint64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          int64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    unint64_t v8 = v15;
LABEL_28:
    uint64_t v17 = *(void **)(*(void *)(a1 + 48) + 8 * v12);
    outlined init with copy of Date?(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v39 + 8, &demangling cache variable for type metadata for Any?);
    *(void *)&v39[0] = v17;
    v37[0] = v39[0];
    v37[1] = v39[1];
    long long v38 = v40;
    type metadata accessor for MOSuggestionAssetMetadataKey(0);
    Swift::Int v18 = v17;
    swift_dynamicCast();
    outlined init with take of Date?((uint64_t)v37 + 8, (uint64_t)v36, &demangling cache variable for type metadata for Any?);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Any?);
    swift_dynamicCast();
    uint64_t v32 = v28;
    char v33 = v29;
    uint64_t v34 = v30;
    outlined init with take of Any(&v31, v35);
    int64_t v28 = v32;
    uint64_t v29 = v33;
    uint64_t v30 = v34;
    outlined init with take of Any(v35, v36);
    outlined init with take of Any(v36, &v32);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    unint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)unint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)outlined init with take of Any(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  id v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    outlined consume of Set<String>.Iterator._Variant();
    return (uint64_t)v2;
  }
  int64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    uint64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    uint64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    int64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t MOEventBundle.maxAssetDisplayCount.getter()
{
  unint64_t result = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  unint64_t v1 = result;
  if (!result) {
    return v1;
  }
  unint64_t v9 = &_swiftEmptySetSingleton;
  if (!(result >> 62))
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v7 = &_swiftEmptySetSingleton;
LABEL_13:
    unint64_t v1 = v7[2];
    swift_bridgeObjectRelease();
    return v1;
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_4:
  if (v2 >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v4 = *(void *)(v1 + 8 * v3 + 32);
        swift_retain();
      }
      ++v3;
      Swift::Int v5 = (*(uint64_t (**)(void))(*(void *)v4 + 304))();
      specialized Set._Variant.insert(_:)(&v8, v5, v6);
      swift_release();
      swift_bridgeObjectRelease();
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    uint64_t v7 = v9;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

Swift::OpaquePointer_optional __swiftcall MOEventBundle.orderedAssetReferencesForPreview(max:)(Swift::Int max)
{
  unint64_t v1 = (unint64_t)MOEventBundle._orderedAssetReferences()();
  if (v1)
  {
    unint64_t v3 = v1;
    unint64_t v24 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v23 = &_swiftEmptySetSingleton;
    if (v1 >> 62) {
      goto LABEL_23;
    }
    for (uint64_t i = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v5 = 0;
      unint64_t v6 = 0xE000000000000000;
      uint64_t v7 = 4;
      while (1)
      {
        uint64_t v8 = v7 - 4;
        if ((v3 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v10 = v7 - 3;
        if (__OFADD__(v8, 1)) {
          goto LABEL_22;
        }
LABEL_10:
        if (v23[2] >= max)
        {
          if ((*(uint64_t (**)(void))(*(void *)v9 + 304))() == v5 && v11 == v6)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v13 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_25;
            }
          }
        }
        int64_t v14 = (uint64_t (**)(void))(*(void *)v9 + 304);
        uint64_t v15 = *v14;
        Swift::Int v16 = (*v14)();
        specialized Set._Variant.insert(_:)(&v22, v16, v17);
        swift_bridgeObjectRelease();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        uint64_t v18 = specialized Array._endMutation()();
        uint64_t v5 = ((uint64_t (*)(uint64_t))v15)(v18);
        unint64_t v20 = v19;
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v6 = v20;
        ++v7;
        if (v10 == i)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
      }
      uint64_t v9 = *(void *)(v3 + 8 * v7);
      swift_retain();
      uint64_t v10 = v7 - 3;
      if (!__OFADD__(v8, 1)) {
        goto LABEL_10;
      }
LABEL_22:
      __break(1u);
LABEL_23:
      ;
    }
    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    unint64_t v1 = v24;
  }
  result.value._uint64_t rawValue = (void *)v1;
  result.is_nil = v2;
  return result;
}

unint64_t MOEventBundle.typeSortedAssetReferencesForInterstitial.getter()
{
  unint64_t result = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  if (result)
  {
    if (result >> 62)
    {
      unint64_t v2 = swift_bridgeObjectRetain();
      uint64_t v1 = (uint64_t)specialized _copyCollectionToContiguousArray<A>(_:)(v2);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v1 = result & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
    }
    uint64_t v3 = v1;
    specialized MutableCollection<>.sort(by:)(&v3);
    swift_bridgeObjectRelease();
    return v3;
  }
  return result;
}

id MOResource.packedMetadata.getter()
{
  id result = [v0 data];
  if (result)
  {
    unint64_t v2 = result;
    uint64_t v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    unint64_t v6 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    v12[0] = 0;
    id v8 = [v6 JSONObjectWithData:isa options:0 error:v12];

    if (v8)
    {
      id v9 = v12[0];
      _bridgeAnyObjectToAny(_:)();
      outlined consume of Data._Representation(v3, v5);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if (swift_dynamicCast()) {
        return (id)v11;
      }
    }
    else
    {
      id v10 = v12[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      outlined consume of Data._Representation(v3, v5);
      swift_errorRelease();
    }
    return 0;
  }
  return result;
}

uint64_t AppBgColor.bgColor.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t AppBgColor.bgColor.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t AppBgColor.isColorHashUnchanged.getter(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return a4 & 1;
}

uint64_t MOSuggestionAssetCacheWorkoutInput.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  return outlined init with copy of Date?(v1, a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t MOSuggestionAssetCacheWorkoutInput.startDate.setter(uint64_t a1)
{
  return outlined assign with take of Date?(a1, v1);
}

uint64_t MOSuggestionAssetCacheWorkoutInput.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for MOSuggestionAssetCacheWorkoutInput();
  return outlined init with copy of Date?(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&demangling cache variable for type metadata for Date?);
}

uint64_t MOSuggestionAssetCacheWorkoutInput.endDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MOSuggestionAssetCacheWorkoutInput() + 20);

  return outlined assign with take of Date?(a1, v3);
}

void (__swiftcall *MOSuggestionAssetCacheWorkoutInput.endDate.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetCacheWorkoutInput.workoutType.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for MOSuggestionAssetCacheWorkoutInput() + 24));
}

uint64_t MOSuggestionAssetCacheWorkoutInput.workoutType.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for MOSuggestionAssetCacheWorkoutInput();
  uint64_t v6 = v2 + *(int *)(result + 24);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

void (__swiftcall *MOSuggestionAssetCacheWorkoutInput.workoutType.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetCacheWorkoutInput.isIndoors.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MOSuggestionAssetCacheWorkoutInput() + 28));
}

uint64_t MOSuggestionAssetCacheWorkoutInput.isIndoors.setter(char a1)
{
  uint64_t result = type metadata accessor for MOSuggestionAssetCacheWorkoutInput();
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

void (__swiftcall *MOSuggestionAssetCacheWorkoutInput.isIndoors.modify())()
{
  return MOSuggestionInterstitialExpandableListViewCellConstants.init();
}

uint64_t MOSuggestionAssetCacheWorkoutInput.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v4 - 8);
  uint64_t v43 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(a2, 1, 1, v6);
  id v8 = (int *)type metadata accessor for MOSuggestionAssetCacheWorkoutInput();
  uint64_t v9 = a2 + v8[5];
  uint64_t v10 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v7)(v9, 1, 1, v6);
  uint64_t v11 = a2 + v8[6];
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = v8[7];
  *(unsigned char *)(a2 + v12) = 2;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 256))(v10);
  if (!v13)
  {
    return swift_release();
  }
  uint64_t v14 = v13;
  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v14 + 16) || (unint64_t v17 = specialized __RawDictionaryStorage.find<A>(_:)(v15, v16), (v18 & 1) == 0))
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v42 = v12;
  uint64_t v19 = *(void *)(*(void *)(v14 + 56) + 8 * v17);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v19;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_24;
  }
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v14 + 16)) {
    goto LABEL_22;
  }
  unint64_t v22 = specialized __RawDictionaryStorage.find<A>(_:)(v20, v21);
  if ((v23 & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v24 = *(void *)(*(void *)(v14 + 56) + 8 * v22);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = v24;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v14 + 16) || (unint64_t v27 = specialized __RawDictionaryStorage.find<A>(_:)(v25, v26), (v28 & 1) == 0))
  {
LABEL_22:
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v29 = *(void *)(*(void *)(v14 + 56) + 8 * v27);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = v29;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_24;
  }
  v41[1] = v44;
  v41[2] = v45;
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v14 + 16))
  {
    unint64_t v32 = specialized __RawDictionaryStorage.find<A>(_:)(v30, v31);
    if (v33)
    {
      uint64_t v34 = *(void *)(*(void *)(v14 + 56) + 8 * v32);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = v34;
      if (swift_dynamicCast())
      {
        uint64_t v35 = v46;
        uint64_t v36 = (uint64_t)v43;
        Date.init(timeIntervalSince1970:)();
        v7(v36, 0, 1, v6);
        outlined assign with take of Date?(v36, a2);
        Date.init(timeIntervalSince1970:)();
        v7(v36, 0, 1, v6);
        outlined assign with take of Date?(v36, v9);
        uint64_t v37 = self;
        NSString v38 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v39 = [v37 _workoutActivityTypeFromString:v38];

        uint64_t result = swift_release();
        *(void *)uint64_t v11 = v39;
        *(unsigned char *)(v11 + 8) = 0;
        *(unsigned char *)(a2 + v42) = v35 == 1;
        return result;
      }
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void MOSuggestionAssetCacheWorkoutInput.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v44 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(a2, 1, 1, v6);
  id v8 = (int *)type metadata accessor for MOSuggestionAssetCacheWorkoutInput();
  uint64_t v9 = a2 + v8[5];
  v7(v9, 1, 1, v6);
  uint64_t v10 = a2 + v8[6];
  *(void *)uint64_t v10 = 0;
  *(unsigned char *)(v10 + 8) = 1;
  *(unsigned char *)(a2 + v8[7]) = 2;
  id v11 = [v44 data];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v43 = v5;
    uint64_t v13 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    uint64_t v16 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v46 = 0;
    id v18 = [v16 JSONObjectWithData:isa options:0 error:&v46];

    if (v18)
    {
      id v19 = v46;
      _bridgeAnyObjectToAny(_:)();
      outlined consume of Data._Representation(v13, v15);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if (swift_dynamicCast())
      {
        uint64_t v20 = v45;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        if (*(void *)(v20 + 16))
        {
          unint64_t v23 = specialized __RawDictionaryStorage.find<A>(_:)(v21, v22);
          if (v24)
          {
            uint64_t v25 = *(void **)(*(void *)(v20 + 56) + 8 * v23);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            id v46 = v25;
            if ((swift_dynamicCast() & 1) == 0) {
              goto LABEL_20;
            }
            uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            if (*(void *)(v20 + 16))
            {
              unint64_t v28 = specialized __RawDictionaryStorage.find<A>(_:)(v26, v27);
              if (v29)
              {
                uint64_t v30 = *(void **)(*(void *)(v20 + 56) + 8 * v28);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                id v46 = v30;
                if (swift_dynamicCast())
                {
                  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  if (*(void *)(v20 + 16))
                  {
                    unint64_t v33 = specialized __RawDictionaryStorage.find<A>(_:)(v31, v32);
                    if (v34)
                    {
                      uint64_t v35 = *(void *)(*(void *)(v20 + 56) + 8 * v33);
                      swift_unknownObjectRetain();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v45 = v35;
                      if (swift_dynamicCast())
                      {
                        uint64_t v36 = (uint64_t)v43;
                        Date.init(timeIntervalSince1970:)();
                        v7(v36, 0, 1, v6);
                        outlined assign with take of Date?(v36, a2);
                        Date.init(timeIntervalSince1970:)();
                        v7(v36, 0, 1, v6);
                        outlined assign with take of Date?(v36, v9);
                        uint64_t v37 = self;
                        NSString v38 = String._bridgeToObjectiveC()();
                        swift_bridgeObjectRelease();
                        id v39 = [v37 _workoutActivityTypeFromString:v38];

                        *(void *)uint64_t v10 = v39;
                        *(unsigned char *)(v10 + 8) = 0;
                        return;
                      }
                      goto LABEL_19;
                    }
                  }

                  swift_bridgeObjectRelease();
                  goto LABEL_21;
                }
LABEL_20:

LABEL_21:
                swift_bridgeObjectRelease();
                return;
              }
            }
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      id v41 = v46;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      outlined consume of Data._Representation(v13, v15);
      swift_errorRelease();
    }
LABEL_19:

    return;
  }
  id v40 = v44;
}

MomentsUIService::MOSuggestionAssetCacheManager::CachedAssetCost_optional __swiftcall MOSuggestionAssetCacheManager.CachedAssetCost.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 10) {
    char v1 = 2;
  }
  else {
    char v1 = 3;
  }
  if (rawValue == 3) {
    v2.CMTimeValue value = MomentsUIService_MOSuggestionAssetCacheManager_CachedAssetCost_medium;
  }
  else {
    v2.CMTimeValue value = v1;
  }
  if (rawValue == 1) {
    return 0;
  }
  else {
    return v2;
  }
}

uint64_t MOSuggestionAssetCacheManager.CachedAssetCost.rawValue.getter(char a1)
{
  return qword_1001DF5D8[a1];
}

BOOL protocol witness for static Equatable.== infix(_:_:) in conformance MOSuggestionAssetCacheManager.CachedAssetCost(char *a1, char *a2)
{
  return qword_1001DF5D8[*a1] == qword_1001DF5D8[*a2];
}

Swift::Int protocol witness for Hashable.hashValue.getter in conformance MOSuggestionAssetCacheManager.CachedAssetCost()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1001DF5D8[v1]);
  return Hasher._finalize()();
}

void protocol witness for Hashable.hash(into:) in conformance MOSuggestionAssetCacheManager.CachedAssetCost()
{
  Hasher._combine(_:)(qword_1001DF5D8[*v0]);
}

Swift::Int protocol witness for Hashable._rawHashValue(seed:) in conformance MOSuggestionAssetCacheManager.CachedAssetCost()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1001DF5D8[v1]);
  return Hasher._finalize()();
}

uint64_t *protocol witness for RawRepresentable.init(rawValue:) in conformance MOSuggestionAssetCacheManager.CachedAssetCost@<X0>(uint64_t *result@<X0>, char *a2@<X8>)
{
  uint64_t v2 = *result;
  if (*result == 1) {
    char v3 = 0;
  }
  else {
    char v3 = 3;
  }
  if (v2 == 3) {
    char v4 = 1;
  }
  else {
    char v4 = v3;
  }
  if (v2 == 10) {
    char v5 = 2;
  }
  else {
    char v5 = v4;
  }
  *a2 = v5;
  return result;
}

void protocol witness for RawRepresentable.rawValue.getter in conformance MOSuggestionAssetCacheManager.CachedAssetCost(void *a1@<X8>)
{
  *a1 = qword_1001DF5D8[*v1];
}

void *MOSuggestionAssetCacheManager.__allocating_init()()
{
  uint64_t v0 = (void *)swift_allocObject();
  id v1 = [objc_allocWithZone((Class)NSCache) init];
  v0[2] = v1;
  v0[3] = &_swiftEmptySetSingleton;
  v0[4] = &_swiftEmptyDictionarySingleton;
  v0[5] = 0;
  type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider();
  swift_allocObject();
  v0[6] = MOSuggestionAssetPhotoLivePhotoVideosProvider.init()();
  [v1 setCountLimit:30];
  [v1 setTotalCostLimit:80];
  return v0;
}

uint64_t static MOSuggestionAssetCacheManager.shared.getter()
{
  if (one-time initialization token for shared != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t one-time initialization function for defaultQueue(uint64_t a1)
{
  return one-time initialization function for defaultQueue(a1, (void (*)(void))&static DispatchQoS.userInitiated.getter, &static MOSuggestionAssetCacheManager.defaultQueue);
}

uint64_t one-time initialization function for lowPriorityQueue(uint64_t a1)
{
  return one-time initialization function for defaultQueue(a1, (void (*)(void))&static DispatchQoS.utility.getter, &static MOSuggestionAssetCacheManager.lowPriorityQueue);
}

uint64_t one-time initialization function for defaultQueue(uint64_t a1, void (*a2)(void), uint64_t *a3)
{
  type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin();
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin();
  id v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DispatchQoS();
  __chkstk_darwin();
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
  a2();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v5);
  v10[1] = &_swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type OS_dispatch_queue.Attributes and conformance OS_dispatch_queue.Attributes, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [OS_dispatch_queue.Attributes] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [OS_dispatch_queue.Attributes]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *a3 = result;
  return result;
}

void *MOSuggestionAssetCacheManager.maxAssetDisplayCount.unsafeMutableAddressor()
{
  return &static MOSuggestionAssetCacheManager.maxAssetDisplayCount;
}

uint64_t MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder.order.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

void *MOSuggestionAssetCacheManager.predefinedBgColorDict.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  if (!v1)
  {
    uint64_t v2 = v0;
    type metadata accessor for MOSuggestionAssetMediaAlbumArtProvider();
    swift_initStackObject();
    MOSuggestionAssetMediaAlbumArtProvider.init()();
    char v3 = MOSuggestionAssetMediaAlbumArtProvider.thirdPartyAppPredefinedColors.getter();
    uint64_t v4 = MOSuggestionAssetMediaAlbumArtProvider.thirdPartyAppColorFallbackValue.getter();
    uint64_t v6 = v5;
    v7._uint64_t countAndFlagsBits = v4;
    v7._object = v6;
    unint64_t v8 = (unint64_t)MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:)((Swift::OpaquePointer)v3, v7);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v2 + 40) = v8;
    swift_bridgeObjectRelease();
    uint64_t v1 = *(void **)(v2 + 40);
  }
  if (v1) {
    uint64_t v9 = v1;
  }
  else {
    uint64_t v9 = &_swiftEmptyDictionarySingleton;
  }
  swift_bridgeObjectRetain();
  return v9;
}

Swift::OpaquePointer_optional __swiftcall MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:)(Swift::OpaquePointer predefinedColors, Swift::String colorFallbackValue)
{
  Swift::String v65 = colorFallbackValue;
  uint64_t v3 = type metadata accessor for DispatchTime();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  Swift::String v7 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v61 = (char *)v56 - v8;
  uint64_t v9 = swift_allocObject();
  uint64_t v66 = v9;
  *(void *)(v9 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v10 = v9 + 16;
  dispatch_group_t v11 = dispatch_group_create();
  uint64_t v12 = *((void *)predefinedColors._rawValue + 2);
  unint64_t v67 = v11;
  uint64_t v70 = v12;
  if (v12)
  {
    id v57 = v7;
    uint64_t v58 = v10;
    uint64_t v59 = v4;
    uint64_t v60 = v3;
    uint64_t v69 = (char *)predefinedColors._rawValue + 32;
    char v64 = v75;
    v56[1] = predefinedColors._rawValue;
    swift_bridgeObjectRetain();
    unint64_t v68 = lazy protocol witness table accessor for type String and conformance String();
    uint64_t v13 = 0;
    *(void *)&long long v14 = 136315138;
    long long v63 = v14;
    id v62 = (char *)&type metadata for Any + 8;
    while (1)
    {
      unint64_t v15 = (uint64_t *)&v69[16 * v13];
      unint64_t v16 = v15[1];
      uint64_t v71 = (double *)*v15;
      uint64_t v72 = v13;
      aBlock = v71;
      uint64_t v74 = v16;
      v75[4] = 44;
      v75[5] = 0xE100000000000000;
      swift_bridgeObjectRetain();
      uint64_t v17 = StringProtocol.components<A>(separatedBy:)();
      uint64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        id v19 = (uint64_t *)(v17 + 40);
        uint64_t v20 = _swiftEmptyArrayStorage;
        do
        {
          uint64_t v25 = *(v19 - 1);
          uint64_t v24 = *v19;
          uint64_t v26 = HIBYTE(*v19) & 0xF;
          if ((*v19 & 0x2000000000000000) == 0) {
            uint64_t v26 = v25 & 0xFFFFFFFFFFFFLL;
          }
          if (v26)
          {
            swift_bridgeObjectRetain();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            aBlock = v20;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v20 + 2) + 1, 1);
              uint64_t v20 = aBlock;
            }
            unint64_t v22 = *((void *)v20 + 2);
            unint64_t v21 = *((void *)v20 + 3);
            if (v22 >= v21 >> 1)
            {
              specialized ContiguousArray._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
              uint64_t v20 = aBlock;
            }
            *((void *)v20 + 2) = v22 + 1;
            unint64_t v23 = &v20[2 * v22];
            *((void *)v23 + 4) = v25;
            *((void *)v23 + 5) = v24;
          }
          v19 += 2;
          --v18;
        }
        while (v18);
      }
      else
      {
        uint64_t v20 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease();
      if (0xAAAAAAAAAAAAAAABLL * *((void *)v20 + 2) + 0x7FFFFFFFFFFFFFFFLL < 0x5555555555555555)
      {
        swift_bridgeObjectRelease();
        if (!*((void *)v20 + 2))
        {
          __break(1u);
LABEL_36:
          swift_once();
LABEL_29:
          uint64_t v49 = type metadata accessor for Logger();
          __swift_project_value_buffer(v49, (uint64_t)static MOAngelLogger.shared);
          uint64_t v50 = Logger.logObject.getter();
          os_log_type_t v51 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v50, v51))
          {
            uint64_t v52 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v52 = 0;
            _os_log_impl((void *)&_mh_execute_header, v50, v51, "[getPreDefinedAppBgColorDict] timed out while fetching bg colors", v52, 2u);
            swift_slowDealloc();
            swift_release();
          }
          else
          {
            swift_release();
          }
          char v54 = 0;
          goto LABEL_34;
        }
        uint64_t v34 = *((void *)v20 + 4);
        uint64_t v35 = *((void *)v20 + 5);
        swift_bridgeObjectRetain();
        uint64_t v36 = v67;
        dispatch_group_enter(v67);
        uint64_t v37 = swift_allocObject();
        swift_weakInit();
        NSString v38 = (void *)swift_allocObject();
        uint64_t countAndFlagsBits = v65._countAndFlagsBits;
        v38[2] = v20;
        v38[3] = countAndFlagsBits;
        v38[4] = v65._object;
        v38[5] = v37;
        v38[6] = v66;
        v38[7] = v34;
        v38[8] = v35;
        v38[9] = v36;
        id v40 = objc_allocWithZone((Class)ISIcon);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        id v41 = v36;
        NSString v42 = String._bridgeToObjectiveC()();
        id v43 = [v40 initWithBundleIdentifier:v42];

        if (one-time initialization token for iconDescriptor != -1) {
          swift_once();
        }
        uint64_t v44 = static MOSuggestionAssetAppIconProvider.iconDescriptor;
        [(id)static MOSuggestionAssetAppIconProvider.iconDescriptor setShouldApplyMask:0];
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = partial apply for closure #2 in MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:);
        *(void *)(v45 + 24) = v38;
        v75[2] = partial apply for closure #1 in static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:completion:);
        v75[3] = v45;
        aBlock = (double *)_NSConcreteStackBlock;
        uint64_t v74 = 1107296256;
        v75[0] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
        v75[1] = &block_descriptor_42;
        id v46 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v43 getCGImageForImageDescriptor:v44 completion:v46];
        _Block_release(v46);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        uint64_t v32 = v72;
      }
      else
      {
        swift_release();
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v28 = type metadata accessor for Logger();
        __swift_project_value_buffer(v28, (uint64_t)static MOAngelLogger.assets);
        swift_bridgeObjectRetain();
        char v29 = Logger.logObject.getter();
        os_log_type_t v30 = static os_log_type_t.error.getter();
        BOOL v31 = os_log_type_enabled(v29, v30);
        uint64_t v32 = v72;
        if (v31)
        {
          uint64_t v33 = swift_slowAlloc();
          aBlock = (double *)swift_slowAlloc();
          *(_DWORD *)uint64_t v33 = v63;
          swift_bridgeObjectRetain();
          *(void *)(v33 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)((uint64_t)v71, v16, (uint64_t *)&aBlock);
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v29, v30, "[MOSuggestionAssetCacheManager] predefinedColorsString invalid entry, %s", (uint8_t *)v33, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      uint64_t v13 = v32 + 1;
      if (v13 == v70)
      {
        swift_bridgeObjectRelease();
        dispatch_group_t v11 = v67;
        uint64_t v3 = v60;
        uint64_t v4 = v59;
        Swift::String v7 = v57;
        break;
      }
    }
  }
  static DispatchTime.now()();
  uint64_t v47 = v61;
  + infix(_:_:)();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v4 + 8);
  v48(v7, v3);
  OS_dispatch_group.wait(timeout:)();
  v48(v47, v3);
  if (static DispatchTimeoutResult.== infix(_:_:)())
  {
    if (serverManager._clientConnections != (NSMutableDictionary *)-1) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }

  swift_beginAccess();
  char v54 = *(void **)(v66 + 16);
  swift_bridgeObjectRetain();
  swift_release();
LABEL_34:
  id v55 = v54;
  result.value._uint64_t rawValue = v55;
  result.is_nil = v53;
  return result;
}

uint64_t MOSuggestionAssetCacheManager.init()()
{
  *(void *)(v0 + 16) = [objc_allocWithZone((Class)NSCache) init];
  *(void *)(v0 + 24) = &_swiftEmptySetSingleton;
  *(void *)(v0 + 32) = &_swiftEmptyDictionarySingleton;
  *(void *)(v0 + 40) = 0;
  type metadata accessor for MOSuggestionAssetPhotoLivePhotoVideosProvider();
  swift_allocObject();
  *(void *)(v0 + 48) = MOSuggestionAssetPhotoLivePhotoVideosProvider.init()();
  [*(id *)(v0 + 16) setCountLimit:30];
  [*(id *)(v0 + 16) setTotalCostLimit:80];
  return v0;
}

uint64_t MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(unint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v37 = a5;
  uint64_t v36 = a6;
  int v33 = a4;
  uint64_t v32 = a3;
  uint64_t v30 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a1 >> 62))
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_3;
    }
    return v37(0);
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v13) {
    return v37(0);
  }
LABEL_3:
  (*(void (**)(unint64_t))(*(void *)v38 + 248))(a1);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = _swiftEmptyArrayStorage;
  uint64_t result = swift_allocObject();
  uint64_t v34 = result;
  *(void *)(result + 16) = 0;
  if (v13 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v27 = v41;
    unint64_t v28 = a1 & 0xC000000000000001;
    uint64_t v26 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v25 = (void (**)(char *, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    uint64_t v29 = v13;
    do
    {
      if (v28)
      {
        uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v16 = *(void *)(a1 + 8 * v15 + 32);
        swift_retain();
      }
      uint64_t v17 = v15 + 1;
      uint64_t v18 = swift_allocObject();
      swift_weakInit();
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v18;
      *(void *)(v19 + 24) = v16;
      *(unsigned char *)(v19 + 32) = v33;
      uint64_t v21 = v34;
      uint64_t v20 = v35;
      *(void *)(v19 + 40) = v15;
      *(void *)(v19 + 48) = v20;
      *(void *)(v19 + 56) = v21;
      *(void *)(v19 + 64) = a1;
      uint64_t v22 = v36;
      *(void *)(v19 + 72) = v37;
      *(void *)(v19 + 80) = v22;
      v41[2] = partial apply for closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
      void v41[3] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v41[0] = thunk for @escaping @callee_guaranteed () -> ();
      v41[1] = &block_descriptor_23_0;
      unint64_t v23 = _Block_copy(aBlock);
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      static DispatchQoS.unspecified.getter();
      id v39 = _swiftEmptyArrayStorage;
      _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
      uint64_t v24 = v30;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v23);
      swift_release_n();
      (*v26)(v9, v24);
      (*v25)(v12, v31);
      swift_release();
      swift_release();
      uint64_t v15 = v17;
    }
    while (v29 != v17);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(uint64_t a1, uint64_t a2, unsigned int a3, void (*a4)(uint64_t, char *, uint64_t), uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(void), uint64_t a9)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = (uint64_t (*)())result;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)(a2, 0, a3, v17, a2, a3, a5, a4, a6, a7, a8, a9);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(void))
{
  unint64_t v101 = a7;
  uint64_t v102 = a6;
  uint64_t v99 = a5;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  __chkstk_darwin(v16);
  uint64_t v19 = (double **)(a4 + 16);
  if (a1)
  {
    id v95 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v96 = v18;
    connectionProperties = serverManager._connectionProperties;
    id v100 = a1;
    if (connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v98 = (double **)(a4 + 16);
    uint64_t v21 = type metadata accessor for Logger();
    __swift_project_value_buffer(v21, (uint64_t)static MOAngelLogger.assets);
    swift_retain_n();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    int v97 = a3;
    if (v24)
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v94 = a8;
      v107[0] = v26;
      uint64_t v93 = v16;
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v27 = (*(uint64_t (**)(void))(*(void *)a2 + 312))();
      *(void *)&long long v105 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v27, v28, v107);
      uint64_t v16 = v93;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "[MOSuggestionAssetCacheManager] Successfully fetched %s", v25, 0xCu);
      swift_arrayDestroy();
      a8 = v94;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v35 = v96;
    (*(void (**)(void))(*(void *)a2 + 192))();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v15, 1, v16) == 1)
    {
      outlined destroy of Any?((uint64_t)v15, &demangling cache variable for type metadata for UUID?);
      uint64_t v19 = v98;
      uint64_t v36 = v99;
      uint64_t v37 = v100;
    }
    else
    {
      uint64_t v38 = v95;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v95, v15, v16);
      uint64_t v37 = v100;
      id v39 = a8;
      uint64_t v40 = v35;
      id v41 = [v100 metadata];
      uint64_t v42 = v16;
      uint64_t v43 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v44 = (void *)MOSuggestionAssetMetadataKeyTransferID;
      *(void *)&long long v105 = MOSuggestionAssetMetadataKeyTransferID;
      type metadata accessor for MOSuggestionAssetMetadataKey(0);
      _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, type metadata accessor for MOSuggestionAssetMetadataKey);
      id v45 = v44;
      AnyHashable.init<A>(_:)();
      uint64_t v46 = UUID.uuidString.getter();
      uint64_t v106 = &type metadata for String;
      *(void *)&long long v105 = v46;
      *((void *)&v105 + 1) = v47;
      outlined init with take of Any(&v105, v104);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v103 = v43;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v104, (uint64_t)v107, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      outlined destroy of AnyHashable((uint64_t)v107);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v37 addMetadata:isa];

      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v42);
      a8 = v39;
      uint64_t v19 = v98;
      uint64_t v36 = v99;
    }
    int v50 = v97;
    id v51 = [v37 assetType:v93];
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;
    if (v52 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v54 == v55)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v56 & 1) == 0)
      {
        id v57 = v100;
        if ((v50 - 2) >= 9)
        {
LABEL_34:
          [v57 contentClassType];
          uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
          if (ObjCClassMetadata == type metadata accessor for MOSuggestionGenericFallBackInfo()) {
            goto LABEL_40;
          }
        }
LABEL_35:
        swift_beginAccess();
        uint64_t v69 = *v19;
        id v70 = v57;
        char v71 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t *v19 = v69;
        if ((v71 & 1) == 0)
        {
          uint64_t v69 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v69 + 2) + 1, 1, v69);
          uint64_t *v19 = v69;
        }
        unint64_t v73 = *((void *)v69 + 2);
        unint64_t v72 = *((void *)v69 + 3);
        if (v73 >= v72 >> 1)
        {
          uint64_t v69 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v72 > 1), v73 + 1, 1, v69);
          uint64_t *v19 = v69;
        }
        *((void *)v69 + 2) = v73 + 1;
        uint64_t v74 = &v69[2 * v73];
        *((void *)v74 + 4) = v70;
        *((void *)v74 + 5) = v36;
        swift_endAccess();

        goto LABEL_51;
      }
    }
    id v57 = v100;
    if ((v50 - 2) >= 9)
    {
      if ((v50 & 1) == 0)
      {
        unint64_t v58 = specialized static MOSuggestionAssetCacheManager.mappedLocationPreviewAssets(_:)(v100);
        if (v58)
        {
          unint64_t v59 = v58;
          if (v58 >> 62)
          {
            uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
            if (v60) {
              goto LABEL_23;
            }
          }
          else
          {
            uint64_t v60 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v60)
            {
LABEL_23:
              if (v60 < 1)
              {
                __break(1u);
                uint64_t result = swift_release();
                __break(1u);
                return result;
              }
              if ((v59 & 0xC000000000000001) != 0)
              {
                uint64_t v61 = 0;
                do
                {
                  uint64_t v62 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  swift_beginAccess();
                  long long v63 = *v19;
                  swift_unknownObjectRetain();
                  char v64 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t *v19 = v63;
                  if ((v64 & 1) == 0)
                  {
                    long long v63 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v63 + 2) + 1, 1, v63);
                    uint64_t *v19 = v63;
                  }
                  unint64_t v66 = *((void *)v63 + 2);
                  unint64_t v65 = *((void *)v63 + 3);
                  if (v66 >= v65 >> 1)
                  {
                    long long v63 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v65 > 1), v66 + 1, 1, v63);
                    uint64_t *v19 = v63;
                  }
                  ++v61;
                  *((void *)v63 + 2) = v66 + 1;
                  unint64_t v67 = &v63[2 * v66];
                  *((void *)v67 + 4) = v62;
                  *((void *)v67 + 5) = v36;
                  swift_endAccess();
                  swift_unknownObjectRelease();
                }
                while (v60 != v61);
              }
              else
              {
                uint64_t v75 = 0;
                do
                {
                  id v76 = *(void **)(v59 + 8 * v75 + 32);
                  swift_beginAccess();
                  uint64_t v77 = *v19;
                  id v78 = v76;
                  char v79 = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t *v19 = v77;
                  if ((v79 & 1) == 0)
                  {
                    uint64_t v77 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v77 + 2) + 1, 1, v77);
                    uint64_t *v19 = v77;
                  }
                  unint64_t v81 = *((void *)v77 + 2);
                  unint64_t v80 = *((void *)v77 + 3);
                  if (v81 >= v80 >> 1)
                  {
                    uint64_t v77 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v80 > 1), v81 + 1, 1, v77);
                    uint64_t *v19 = v77;
                  }
                  ++v75;
                  *((void *)v77 + 2) = v81 + 1;
                  uint64_t v82 = &v77[2 * v81];
                  *((void *)v82 + 4) = v78;
                  *((void *)v82 + 5) = v36;
                  swift_endAccess();
                }
                while (v60 != v75);
              }

              goto LABEL_50;
            }
          }

LABEL_50:
          swift_bridgeObjectRelease();
          goto LABEL_51;
        }
LABEL_40:

        goto LABEL_51;
      }
      goto LABEL_34;
    }
    goto LABEL_35;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  __swift_project_value_buffer(v29, (uint64_t)static MOAngelLogger.assets);
  swift_retain_n();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    v107[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v33 = (*(uint64_t (**)(void))(*(void *)a2 + 312))();
    *(void *)&long long v105 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v33, v34, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "[MOSuggestionAssetCacheManager] Failed retrieval for %s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
LABEL_51:
  uint64_t v83 = (uint64_t *)(v102 + 16);
  uint64_t result = swift_beginAccess();
  uint64_t v85 = *v83 + 1;
  if (__OFADD__(*v83, 1))
  {
    __break(1u);
LABEL_62:
    swift_bridgeObjectRetain();
    uint64_t v92 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v85 != v92) {
      return result;
    }
    goto LABEL_54;
  }
  *uint64_t v83 = v85;
  if (v101 >> 62) {
    goto LABEL_62;
  }
  if (v85 != *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return result;
  }
LABEL_54:
  swift_beginAccess();
  *(void *)&v104[0] = *v19;
  swift_bridgeObjectRetain_n();
  specialized MutableCollection<>.sort(by:)((uint64_t *)v104, specialized _ContiguousArrayBuffer._consumeAndCreateNew(), specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
  swift_bridgeObjectRelease();
  uint64_t v86 = *(void *)&v104[0];
  uint64_t v87 = *(void *)(*(void *)&v104[0] + 16);
  if (v87)
  {
    uint64_t v88 = a8;
    *(void *)&v104[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v89 = 32;
    do
    {
      id v90 = *(id *)(v86 + v89);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v89 += 16;
      --v87;
    }
    while (v87);
    uint64_t v91 = *(void *)&v104[0];
    swift_release();
    v88(v91);
  }
  else
  {
    swift_release();
    a8(_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t *v19 = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

Swift::OpaquePointer_optional __swiftcall MOSuggestionAssetCacheManager.authorizedAssetPrototypes(_:)(Swift::OpaquePointer_optional result)
{
  if (result.value._rawValue)
  {
    unint64_t rawValue = (unint64_t)result.value._rawValue;
    os_log_type_t v23 = result.value._rawValue;
    if ((unint64_t)result.value._rawValue >> 62) {
      goto LABEL_18;
    }
    uint64_t v3 = *(void *)(((uint64_t)result.value._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
      unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
      while (1)
      {
        unint64_t v21 = rawValue & 0xC000000000000001;
        uint64_t v22 = v1 + 3;
        swift_beginAccess();
        uint64_t v4 = 0;
        while (1)
        {
          if (v21)
          {
            uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v5 = *(void *)(rawValue + 8 * v4 + 32);
            swift_retain();
          }
          uint64_t v6 = *v22;
          uint64_t v7 = *(void (**)(void))(*(void *)v5 + 288);
          uint64_t v8 = swift_bridgeObjectRetain();
          v24[0] = ((uint64_t (*)(uint64_t))v7)(v8);
          v24[1] = v9;
          lazy protocol witness table accessor for type String and conformance String();
          uint64_t v1 = v24;
          uint64_t v10 = (void *)StringProtocol.components<A>(separatedBy:)();
          if (!v10[2]) {
            break;
          }
          uint64_t v12 = v10[4];
          uint64_t v11 = v10[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v13 = specialized Set.contains(_:)(v12, v11, v6);
          swift_bridgeObjectRelease();
          uint64_t v14 = swift_bridgeObjectRelease();
          if (v13)
          {
            uint64_t v15 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v5 + 120))(v14);
            v7();
            id v16 = objc_allocWithZone((Class)MOSuggestionAssetPrototype);
            NSString v17 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v18 = [v16 init:v15 identifier:v17];

            id v19 = v18;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_release();
          }
          else
          {
            swift_release();
          }
          unint64_t rawValue = (unint64_t)v23;
          if (v3 == ++v4)
          {
            swift_bridgeObjectRelease();
            result.value._unint64_t rawValue = (void *)v25;
            return result;
          }
        }
        __break(1u);
LABEL_18:
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter() <= 0) {
          break;
        }
        unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v20)
        {
          swift_bridgeObjectRelease();
          result.value._unint64_t rawValue = _swiftEmptyArrayStorage;
          return result;
        }
        if (v20 < 1)
        {
          __break(1u);
          break;
        }
        uint64_t v3 = v20;
        unint64_t rawValue = (unint64_t)v23;
      }
    }
    swift_bridgeObjectRelease();
    result.value._unint64_t rawValue = 0;
  }
  return result;
}

Swift::Void __swiftcall MOSuggestionAssetCacheManager.submitMediaMetrics(_:)(Swift::OpaquePointer_optional a1)
{
  if (a1.value._rawValue)
  {
    uint64_t rawValue = (uint64_t)a1.value._rawValue;
    if ((unint64_t)a1.value._rawValue >> 62) {
      goto LABEL_69;
    }
    uint64_t v2 = *(void *)(((uint64_t)a1.value._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
      long long v63 = &_swiftEmptySetSingleton;
LABEL_5:
      uint64_t v3 = 4;
      while (1)
      {
        uint64_t v4 = v3 - 4;
        if ((rawValue & 0xC000000000000001) == 0) {
          break;
        }
        unint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v6 = v3 - 3;
        if (__OFADD__(v4, 1)) {
          goto LABEL_67;
        }
LABEL_13:
        uint64_t v7 = (void *)(*(uint64_t (**)(void))(*(void *)v5 + 120))();
        uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v10 = v9;
        if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
        {

          uint64_t v14 = swift_bridgeObjectRelease_n();
        }
        else
        {
          char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          uint64_t v14 = swift_bridgeObjectRelease();
          if ((v13 & 1) == 0)
          {
            swift_release();
            goto LABEL_7;
          }
        }
        uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 256))(v14);
        if (!v15) {
          goto LABEL_27;
        }
        uint64_t v16 = v15;
        uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        if (!*(void *)(v16 + 16) || (unint64_t v19 = specialized __RawDictionaryStorage.find<A>(_:)(v17, v18), (v20 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_27:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
          {
LABEL_28:
            uint64_t v22 = type metadata accessor for Logger();
            __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.assets);
            swift_retain_n();
            os_log_type_t v23 = Logger.logObject.getter();
            os_log_type_t v24 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v23, v24))
            {
              unint64_t v25 = (uint8_t *)swift_slowAlloc();
              v61[0] = swift_slowAlloc();
              *(_DWORD *)unint64_t v25 = 136315138;
              uint64_t v26 = (*(uint64_t (**)(void))(*(void *)v5 + 312))();
              uint64_t v62 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v26, v27, v61);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v23, v24, "[MOSuggestionAssetCacheManager] Metrics has empty metaData or bundleId for media asset, %s", v25, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              swift_release();
            }
            else
            {

              swift_release_n();
            }
            return;
          }
LABEL_76:
          swift_once();
          goto LABEL_28;
        }
        uint64_t v21 = *(void *)(*(void *)(v16 + 56) + 8 * v19);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v62 = v21;
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_27;
        }
        specialized Set._Variant.insert(_:)(v61, v61[0], v61[1]);
        swift_release();
        swift_bridgeObjectRelease();
LABEL_7:
        ++v3;
        if (v6 == v2)
        {
          swift_bridgeObjectRelease();
          unint64_t v28 = v63;
          goto LABEL_32;
        }
      }
      unint64_t v5 = *(void *)(rawValue + 8 * v3);
      swift_retain();
      uint64_t v6 = v3 - 3;
      if (!__OFADD__(v4, 1)) {
        goto LABEL_13;
      }
LABEL_67:
      __break(1u);
      while (1)
      {
        __break(1u);
LABEL_69:
        swift_bridgeObjectRetain();
        if (_CocoaArrayWrapper.endIndex.getter() <= 0) {
          break;
        }
        long long v63 = &_swiftEmptySetSingleton;
        swift_bridgeObjectRetain();
        uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v2) {
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
        unint64_t v28 = &_swiftEmptySetSingleton;
LABEL_32:
        id v57 = v28 + 56;
        uint64_t v29 = 1 << v28[32];
        uint64_t v30 = -1;
        if (v29 < 64) {
          uint64_t v30 = ~(-1 << v29);
        }
        unint64_t v5 = v30 & *((void *)v28 + 7);
        int64_t v58 = (unint64_t)(v29 + 63) >> 6;
        uint64_t v31 = swift_bridgeObjectRetain();
        int64_t v32 = 0;
        uint64_t v33 = v56;
        uint64_t v59 = v31;
        if (v5)
        {
          while (1)
          {
            unint64_t v34 = __clz(__rbit64(v5));
            v5 &= v5 - 1;
            int64_t v60 = v32;
            unint64_t v35 = v34 | (v32 << 6);
LABEL_52:
            uint64_t v40 = (uint64_t *)(*(void *)(v31 + 48) + 16 * v35);
            uint64_t v42 = *v40;
            unint64_t v41 = v40[1];
            uint64_t v43 = *(uint64_t (**)(uint64_t))(*(void *)v33 + 216);
            uint64_t v44 = swift_bridgeObjectRetain();
            uint64_t v45 = v43(v44);
            if (!*(void *)(v45 + 16)) {
              goto LABEL_56;
            }
            swift_bridgeObjectRetain();
            unint64_t v46 = specialized __RawDictionaryStorage.find<A>(_:)(v42, v41);
            if ((v47 & 1) == 0) {
              break;
            }
            uint64_t v48 = *(void *)(v45 + 56) + 32 * v46;
            uint64_t v49 = *(void *)(v48 + 16);
            uint64_t rawValue = *(unsigned __int8 *)(v48 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v50 = 1;
            int v51 = rawValue;
LABEL_57:
            swift_bridgeObjectRetain();
            MOSuggestionAssetMediaAnalytics.MediaEngagementEvent.send()();
            swift_bridgeObjectRelease();
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
              swift_once();
            }
            uint64_t v52 = type metadata accessor for Logger();
            __swift_project_value_buffer(v52, (uint64_t)static MOAngelLogger.assets);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v53 = Logger.logObject.getter();
            os_log_type_t v54 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v53, v54))
            {
              uint64_t v55 = swift_slowAlloc();
              uint64_t rawValue = swift_slowAlloc();
              v61[0] = rawValue;
              *(_DWORD *)uint64_t v55 = 136315650;
              swift_bridgeObjectRetain();
              *(void *)(v55 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v42, v41, v61);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v55 + 12) = 1024;
              if (v49) {
                swift_bridgeObjectRelease();
              }
              else {
                int v51 = 1;
              }
              int64_t v32 = v60;
              *(_DWORD *)(v55 + 14) = v51;
              swift_bridgeObjectRelease();
              *(_WORD *)(v55 + 18) = 1024;
              *(_DWORD *)(v55 + 20) = v50;
              _os_log_impl((void *)&_mh_execute_header, v53, v54, "[MOSuggestionAssetCacheManager] Submit metrics for media asset, bundleId %s, appIconUnchanged, %{BOOL}d, predefinedApp, %{BOOL}d", (uint8_t *)v55, 0x18u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v33 = v56;
              uint64_t v31 = v59;
              if (!v5) {
                goto LABEL_38;
              }
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              uint64_t v31 = v59;
              int64_t v32 = v60;
              if (!v5) {
                goto LABEL_38;
              }
            }
          }
          swift_bridgeObjectRelease();
LABEL_56:
          swift_bridgeObjectRelease();
          int v51 = 0;
          uint64_t v49 = 0;
          int v50 = 0;
          uint64_t rawValue = 1;
          goto LABEL_57;
        }
LABEL_38:
        int64_t v36 = v32 + 1;
        if (!__OFADD__(v32, 1))
        {
          if (v36 < v58)
          {
            unint64_t v37 = *(void *)&v57[8 * v36];
            int64_t v38 = v32 + 1;
            if (v37) {
              goto LABEL_51;
            }
            int64_t v38 = v32 + 2;
            if (v32 + 2 < v58)
            {
              unint64_t v37 = *(void *)&v57[8 * v38];
              if (v37) {
                goto LABEL_51;
              }
              int64_t v38 = v32 + 3;
              if (v32 + 3 < v58)
              {
                unint64_t v37 = *(void *)&v57[8 * v38];
                if (v37) {
                  goto LABEL_51;
                }
                uint64_t v39 = v32 + 4;
                if (v32 + 4 < v58)
                {
                  unint64_t v37 = *(void *)&v57[8 * v39];
                  if (!v37)
                  {
                    while (1)
                    {
                      int64_t v38 = v39 + 1;
                      if (__OFADD__(v39, 1)) {
                        break;
                      }
                      if (v38 >= v58) {
                        goto LABEL_65;
                      }
                      unint64_t v37 = *(void *)&v57[8 * v38];
                      ++v39;
                      if (v37) {
                        goto LABEL_51;
                      }
                    }
                    __break(1u);
                    goto LABEL_76;
                  }
                  int64_t v38 = v32 + 4;
LABEL_51:
                  unint64_t v5 = (v37 - 1) & v37;
                  int64_t v60 = v38;
                  unint64_t v35 = __clz(__rbit64(v37)) + (v38 << 6);
                  goto LABEL_52;
                }
              }
            }
          }
LABEL_65:
          swift_release();
          swift_bridgeObjectRelease();
          return;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

NSCountedSet_optional __swiftcall MOSuggestionAssetCacheManager.authorizedAssetCountsForAnalytics(_:)(Swift::OpaquePointer a1)
{
  unint64_t v4 = (unint64_t)a1._rawValue >> 62;
  if (!((unint64_t)a1._rawValue >> 62))
  {
    if (*(uint64_t *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_3;
    }
LABEL_28:
    unint64_t v5 = 0;
    goto LABEL_29;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v30 < 1) {
    goto LABEL_28;
  }
LABEL_3:
  unint64_t v5 = (objc_class *)[objc_allocWithZone((Class)NSCountedSet) init];
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = (objc_class *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = (uint64_t)v7;
    if (v7) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
  uint64_t v6 = *(void *)(((unint64_t)a1._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = (objc_class *)swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_25:
    swift_bridgeObjectRelease();
LABEL_29:
    uint64_t v7 = v5;
    goto LABEL_31;
  }
LABEL_5:
  if (v6 >= 1)
  {
    uint64_t v31 = v5;
    int64_t v32 = v2 + 3;
    swift_beginAccess();
    uint64_t v8 = 0;
    uint64_t v9 = v6;
    while (1)
    {
      if (((unint64_t)a1._rawValue & 0xC000000000000001) != 0)
      {
        uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v11 = *((void *)a1._rawValue + v8 + 4);
        swift_retain();
      }
      uint64_t v12 = *v32;
      char v13 = *(uint64_t (**)(uint64_t))(*(void *)v11 + 288);
      unint64_t v4 = *(void *)v11 + 288;
      uint64_t v14 = swift_bridgeObjectRetain();
      v33[0] = v13(v14);
      v33[1] = v15;
      lazy protocol witness table accessor for type String and conformance String();
      uint64_t v2 = v33;
      uint64_t v16 = (void *)StringProtocol.components<A>(separatedBy:)();
      if (!v16[2])
      {
        __break(1u);
        goto LABEL_27;
      }
      uint64_t v17 = v16[4];
      uint64_t v18 = v16[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v19 = specialized Set.contains(_:)(v17, v18, v12);
      swift_bridgeObjectRelease();
      uint64_t v20 = swift_bridgeObjectRelease();
      if (v19) {
        break;
      }
      swift_release();
      uint64_t v10 = v9;
LABEL_8:
      if (v10 == ++v8)
      {
        swift_bridgeObjectRelease();
        unint64_t v5 = v31;
        goto LABEL_29;
      }
    }
    uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v11 + 120))(v20);
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;
    if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0) {
        goto LABEL_22;
      }
    }
    id v28 = MOSuggestionAssetsTypeMultiPinMap;

    uint64_t v21 = v28;
LABEL_22:
    uint64_t v10 = v9;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [(objc_class *)v31 addObject:v29];
    swift_release();

    goto LABEL_8;
  }
  __break(1u);
LABEL_31:
  result.value.super.super.super.Class isa = v7;
  result.is_nil = v1;
  return result;
}

Swift::Void __swiftcall MOSuggestionAssetCacheManager.markEligibleForTransfer(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  if ((a1._countAndFlagsBits || a1._object != (void *)0xE000000000000000)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
    && (countAndFlagsBits != 0x6C6F686563616C70 || object != (void *)0xEB00000000726564)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    v14[0] = countAndFlagsBits;
    v14[1] = (uint64_t)object;
    v15[0] = 35;
    v15[1] = 0xE100000000000000;
    lazy protocol witness table accessor for type String and conformance String();
    uint64_t v8 = (void *)StringProtocol.components<A>(separatedBy:)();
    if (v8[2])
    {
      Swift::Int v1 = v8[4];
      Swift::Int v2 = v8[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
      {
LABEL_16:
        uint64_t v9 = type metadata accessor for Logger();
        __swift_project_value_buffer(v9, (uint64_t)static MOAngelLogger.assets);
        swift_bridgeObjectRetain_n();
        uint64_t v10 = Logger.logObject.getter();
        os_log_type_t v11 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v10, v11))
        {
          uint64_t v12 = (uint8_t *)swift_slowAlloc();
          v14[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v12 = 136315138;
          swift_bridgeObjectRetain();
          v15[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(countAndFlagsBits, (unint64_t)object, v14);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v10, v11, "[MOSuggestionAssetCacheManager] Marking asset as authorized for transfer %s", v12, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        swift_beginAccess();
        specialized Set._Variant.insert(_:)(v15, v1, v2);
        swift_endAccess();
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_16;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  __swift_project_value_buffer(v5, (uint64_t)static MOAngelLogger.assets);
  os_log_t oslog = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, "[MOSuggestionAssetCacheManager] Failed to mark as authorized for transfer, blank ID", v7, 2u);
    swift_slowDealloc();
  }
}

Swift::Void __swiftcall MOSuggestionAssetCacheManager.markEligibleForTransfer(_:reflectionPromptIndex:)(Swift::String _, Swift::Int reflectionPromptIndex)
{
  object = _._object;
  uint64_t countAndFlagsBits = _._countAndFlagsBits;
  (*(void (**)(void))(*v2 + 264))();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = v2[4];
  v2[4] = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(reflectionPromptIndex, countAndFlagsBits, (uint64_t)object, isUniquelyReferenced_nonNull_native);
  v2[4] = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
}

unint64_t MOSuggestionAssetCacheManager.markEligibleForTransfer(_:)()
{
  unint64_t result = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  if (!result) {
    return result;
  }
  unint64_t v2 = result;
  if (result >> 62)
  {
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v3 = result;
    if (result) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_4:
      unint64_t v4 = *(void (**)(uint64_t))(*(void *)v0 + 264);
      if (v3 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v5 = 0;
      do
      {
        if ((v2 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v6 = *(void *)(v2 + 8 * v5 + 32);
          swift_retain();
        }
        ++v5;
        uint64_t v7 = (*(uint64_t (**)(void))(*(void *)v6 + 296))();
        v4(v7);
        swift_release();
        swift_bridgeObjectRelease();
      }
      while (v3 != v5);
    }
  }

  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MOSuggestionAssetCacheManager.clearEligibleAssetMarkings()()
{
  swift_beginAccess();
  *(void *)(v0 + 24) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall MOSuggestionAssetCacheManager.dumpMemory()()
{
  [*(id *)(v0 + 16) removeAllObjects];
}

void *MOSuggestionAssetCacheManager.preCache(_:)(void *a1)
{
  uint64_t v2 = v1;
  unint64_t result = MOEventBundle._orderedAssetReferences()();
  if (result)
  {
    uint64_t v5 = result;
    if (one-time initialization token for lowPriorityQueue != -1) {
      swift_once();
    }
    uint64_t v6 = static MOSuggestionAssetCacheManager.lowPriorityQueue;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    uint64_t v8 = *(void (**)(void *, void, uint64_t, uint64_t, void (*)(uint64_t), uint64_t))(*(void *)v2 + 232);
    id v9 = a1;
    v8(v5, 0, v6, 5, partial apply for closure #1 in MOSuggestionAssetCacheManager.preCache(_:), v7);
    swift_bridgeObjectRelease();
    return (void *)swift_release();
  }
  return result;
}

void closure #1 in MOSuggestionAssetCacheManager.preCache(_:)(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.assets);
  id v17 = a2;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    id v11 = [v17 bundleIdentifier:v10 + 4];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v18 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v12, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOSuggestionAssetCacheManager] Successfully pre-cached bundleId=%s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v15 = v17;
  }
}

uint64_t MOSuggestionAssetCacheManager.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t MOSuggestionAssetCacheManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t closure #1 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  __swift_project_value_buffer(v7, (uint64_t)static MOAngelLogger.assets);
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_beginAccess();
    uint64_t v17 = a4;
    id v11 = *(uint64_t (**)(uint64_t))(**(void **)(a1 + 16) + 312);
    uint64_t v12 = swift_retain();
    uint64_t v13 = v11(v12);
    unint64_t v15 = v14;
    swift_release();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v13, v15, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    a4 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[MOSuggestionAssetCacheManager] Cache hit for %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return a2(a4);
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:)(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, void (*a5)(id))
{
  if (!a1) {
    goto LABEL_18;
  }
  unint64_t v8 = a1;
  uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!(a1 >> 62))
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_4;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
LABEL_17:
    a1 = swift_bridgeObjectRelease();
LABEL_18:
    uint64_t v28 = (*(uint64_t (**)(unint64_t))(*(void *)a2 + 312))(a1);
    uint64_t v30 = v29;
    type metadata accessor for MOSuggestionGenericFallBackInfo();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 24) = 0;
    *(void *)(v31 + 16) = 0;
    swift_beginAccess();
    *(void *)(v31 + 16) = v28;
    *(void *)(v31 + 24) = v30;
    swift_bridgeObjectRelease();
    MOSuggestionGenericFallBackInfo.description()();
    int64_t v32 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 120);
    uint64_t v33 = swift_retain();
    unint64_t v34 = (void *)v32(v33);
    id v35 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v31 type:v34 contentClassType:swift_getObjCClassFromMetadata()];
    swift_release();

    id v27 = v35;
    a5(v35);
    swift_release();
    goto LABEL_19;
  }
LABEL_4:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    uint64_t v12 = v11;
    int v13 = a3;
    uint64_t v14 = swift_bridgeObjectRelease();
    int64_t v36 = *(void (**)(uint64_t))(*(void *)a2 + 288);
    v36(v14);
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 addIdentifier:v15];

    if ((v13 - 2) <= 8)
    {
      id v16 = [v12 assetType];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20)
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_12;
      }
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21)
      {
LABEL_12:
        [v12 contentClassType];
        uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
        if (ObjCClassMetadata == type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for PHLivePhoto))
        {
          swift_beginAccess();
          uint64_t Strong = swift_weakLoadStrong();
          if (Strong)
          {
            id v24 = *(id *)(Strong + 16);
            uint64_t v25 = swift_release();
            v36(v25);
            NSString v26 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v24 setObject:v12 forKey:v26 cost:1];
          }
        }
      }
    }
    id v27 = v12;
    a5(v12);
LABEL_19:

    return;
  }
  if (*(void *)(v9 + 16))
  {
    id v11 = *(id *)(v8 + 32);
    goto LABEL_7;
  }
  __break(1u);
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(id))
{
  if (a2)
  {
    uint64_t v8 = MOSuggestionAssetsTypeActivityRings;
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKActivitySummary);
    id v9 = objc_allocWithZone((Class)MOSuggestionAsset);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v11 = a2;
    id v12 = [v9 init:v11 type:v8 contentClassType:ObjCClassFromMetadata];
    int v13 = *(void (**)(void))(*(void *)a3 + 288);
    v13();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 addIdentifier:v14];

    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      id v16 = *(id *)(Strong + 16);
      uint64_t v17 = swift_release();
      ((void (*)(uint64_t))v13)(v17);
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v16 setObject:v12 forKey:v18 cost:1];
    }
    id v19 = v12;
    a5(v12);
  }
  else
  {
    a5(0);
  }
}

void closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(void *a1, void *a2, char *a3, uint64_t a4, void *a5, double *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int8 a19, uint64_t a20,void (*a21)(id),uint64_t a22)
{
  uint64_t v31 = a1;
  uint64_t inited = (uint64_t)(a1 + 2);
  swift_beginAccess();
  uint64_t v33 = v31[2];
  BOOL v34 = __OFADD__(v33, 1);
  id v35 = (char *)(v33 + 1);
  if (v34)
  {
    __break(1u);
    goto LABEL_36;
  }
  *(void *)uint64_t inited = v35;
  uint64_t v36 = a2[2];
  if (v36 + 0x4000000000000000 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  BOOL v34 = __OFADD__(a3, 2 * v36);
  unint64_t v37 = &a3[2 * v36];
  if (v34)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v134 = a2;
    Swift::String v135 = v31;
    id v136 = v22;
    id v137 = a5;
    os_log_type_t v138 = a6;
    swift_bridgeObjectRetain();
    BOOL v139 = a3;
    uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (v35 != v37) {
    return;
  }
  uint64_t v38 = a13;
  uint64_t v146 = (void **)(a9 + 16);
  id v145 = (uint64_t *)(a10 + 16);
  swift_beginAccess();
  uint64_t v39 = *(void **)(a4 + 16);
  if (v39 && a5)
  {
    uint64_t v40 = a6 + 2;
    id v41 = objc_allocWithZone((Class)HKQuantityFormattingParameters);
    id v42 = v39;
    id v43 = a5;
    id v44 = [v41 init];
    [v44 setPreferredUnit:v42];
    [v44 setPrecision:0];
    swift_beginAccess();
    id v45 = [self quantityWithUnit:v42 doubleValue:*v40];
    id v46 = [v45 localizedStringForType:v43 parameters:v44];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.uppercased()();
    swift_bridgeObjectRelease();
    NSString v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v48 = [v47 trimmedString];

    if (v48)
    {
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v51 = v50;
    }
    else
    {
      uint64_t v49 = 0;
      uint64_t v51 = 0;
    }
    swift_beginAccess();
    *(void *)(a7 + 16) = v49;
    *(void *)(a7 + 24) = v51;
    swift_bridgeObjectRelease();
    [v45 doubleValueForUnit:v42];
    uint64_t v53 = v52;

    swift_beginAccess();
    *(void *)(a8 + 16) = v53;
    *(unsigned char *)(a8 + 24) = 0;
    swift_beginAccess();
    os_log_type_t v54 = *v146;
    *uint64_t v146 = v45;

    uint64_t v38 = a13;
  }
  uint64_t v148 = (uint64_t *)(v38 + 16);
  swift_beginAccess();
  uint64_t v55 = *v145;
  if (*v145 < 1)
  {
    double v23 = 0.0;
  }
  else
  {
    swift_beginAccess();
    double v23 = *(double *)(a11 + 16) / (double)v55;
  }
  double v140 = (uint64_t *)(a14 + 16);
  uint64_t v141 = (uint64_t *)(a15 + 16);
  id v142 = (uint64_t *)(a16 + 16);
  id v143 = (uint64_t *)(a17 + 16);
  id v144 = (void **)(a18 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DB460;
  a2 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
  *(void *)(inited + 32) = MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
  swift_beginAccess();
  *(void *)(inited + 40) = *(void *)(a12 + 16);
  uint64_t v31 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCalories;
  *(void *)(inited + 64) = &type metadata for Double;
  *(void *)(inited + 72) = v31;
  swift_beginAccess();
  uint64_t v56 = *(void *)(a8 + 16);
  char v57 = *(unsigned char *)(a8 + 24);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Double?);
  *(void *)(inited + 80) = v56;
  *(unsigned char *)(inited + 88) = v57;
  uint64_t v22 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesQuantity;
  *(void *)(inited + 104) = v58;
  *(void *)(inited + 112) = v22;
  swift_beginAccess();
  a3 = (char *)*v146;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for HKQuantity?);
  *(void *)(inited + 120) = a3;
  a5 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesWithUnit;
  *(void *)(inited + 144) = v59;
  *(void *)(inited + 152) = a5;
  swift_beginAccess();
  uint64_t v60 = *(void *)(a7 + 16);
  uint64_t v61 = *(void *)(a7 + 24);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  *(void *)(inited + 160) = v60;
  *(void *)(inited + 168) = v61;
  a6 = (double *)MOSuggestionAssetMetadataKeyWorkoutGroupCount;
  *(void *)(inited + 184) = v62;
  *(void *)(inited + 192) = a6;
  swift_beginAccess();
  if ((unint64_t)*v148 >> 62) {
    goto LABEL_38;
  }
  uint64_t v63 = *(void *)((*v148 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  char v64 = a2;
  unint64_t v65 = v31;
  id v66 = v22;
  id v67 = a5;
  unint64_t v68 = a6;
  uint64_t v69 = a3;
LABEL_16:
  *(void *)(inited + 200) = v63;
  uint64_t v70 = MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrate;
  unint64_t v147 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrate;
  *(void *)(inited + 224) = &type metadata for Int;
  *(void *)(inited + 232) = v70;
  *(double *)(inited + 240) = v23;
  char v71 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTypes;
  *(void *)(inited + 264) = &type metadata for Double;
  *(void *)(inited + 272) = v71;
  swift_beginAccess();
  uint64_t v72 = *v140;
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  *(void *)(inited + 280) = v72;
  uint64_t v74 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTypeEnumValues;
  *(void *)(inited + 304) = v73;
  *(void *)(inited + 312) = v74;
  swift_beginAccess();
  uint64_t v75 = *v141;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UInt]);
  *(void *)(inited + 320) = v75;
  uint64_t v77 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupStartDates;
  *(void *)(inited + 344) = v76;
  *(void *)(inited + 352) = v77;
  swift_beginAccess();
  uint64_t v78 = *v142;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [Date]);
  *(void *)(inited + 360) = v78;
  unint64_t v80 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupEndDates;
  *(void *)(inited + 384) = v79;
  *(void *)(inited + 392) = v80;
  swift_beginAccess();
  uint64_t v81 = *v143;
  *(void *)(inited + 424) = v79;
  *(void *)(inited + 400) = v81;
  id v82 = v147;
  id v83 = v71;
  swift_bridgeObjectRetain();
  id v84 = v74;
  swift_bridgeObjectRetain();
  id v85 = v77;
  swift_bridgeObjectRetain();
  id v86 = v80;
  swift_bridgeObjectRetain();
  unint64_t v87 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  uint64_t v153 = v87;
  swift_beginAccess();
  uint64_t v88 = *v144;
  if (*v144 && v23 > 0.0)
  {
    id v89 = objc_allocWithZone((Class)HKHealthStore);
    id v90 = v88;
    id v91 = [v89 init];
    id v92 = [objc_allocWithZone((Class)FIUIUnitManager) initWithHealthStore:v91];

    id v93 = [objc_allocWithZone((Class)FIUIFormattingManager) initWithUnitManager:v92];
    if (v93)
    {
      id v94 = [self quantityWithUnit:v90 doubleValue:v23];
      id v95 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrateQuantity;
      uint64_t v152 = (void *)type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity);
      *(void *)&long long v151 = v94;
      outlined init with take of Any(&v151, v149);
      id v96 = v95;
      id v97 = v94;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v150 = v87;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v149, v96, isUniquelyReferenced_nonNull_native);
      uint64_t v153 = v150;

      swift_bridgeObjectRelease();
      id v99 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
      id v100 = [v93 localizedStringWithHeartRate:v97 unitStyle:1];
      if (!v100)
      {
        __break(1u);
        return;
      }
      unint64_t v101 = v100;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      String.uppercased()();
      swift_bridgeObjectRelease();
      NSString v102 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v103 = [v102 trimmedString];

      if (v103)
      {
        uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v106 = v105;

        uint64_t v152 = &type metadata for String;
        *(void *)&long long v151 = v104;
        *((void *)&v151 + 1) = v106;
        outlined init with take of Any(&v151, v149);
        uint64_t v107 = v153;
        char v108 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v150 = v107;
        specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v149, v99, v108);
        uint64_t v153 = v150;

        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)v99, &v151);

      outlined destroy of Any?((uint64_t)&v151, &demangling cache variable for type metadata for Any?);
    }
  }
LABEL_24:
  if (a19 - 4 >= 7 && a19 != 2)
  {
    if (a19 != 3)
    {
      id v125 = [self mainScreen];
      [v125 scale];
      double v127 = v126;

      swift_beginAccess();
      unint64_t v128 = swift_bridgeObjectRetain();
      uint64_t v129 = (void *)specialized static MOSuggestionAssetSnowglobeEffect.imageFor(images:targetSize:)(v128, v127 * 300.0, v127 * 300.0);
      swift_bridgeObjectRelease();
      if (v129)
      {
        uint64_t v130 = MOSuggestionAssetsTypeWorkoutGroup;
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
        id v131 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v129 type:v130 contentClassType:swift_getObjCClassFromMetadata()];
        (*(void (**)(void))(*(void *)a20 + 288))();
        NSString v132 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v131 addIdentifier:v132];

        specialized _dictionaryUpCast<A, B, C, D>(_:)(v153);
        swift_bridgeObjectRelease();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v131 addMetadata:isa];

        specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(v131, a19, (void (*)(void))a21, a22);
      }
      else
      {
        swift_bridgeObjectRelease();
        a21(0);
      }
      return;
    }
    int v120 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupIcons;
    swift_beginAccess();
    uint64_t v121 = *v148;
    uint64_t v152 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UIImage]);
    *(void *)&long long v151 = v121;
    outlined init with take of Any(&v151, v149);
    id v122 = v120;
    swift_bridgeObjectRetain();
    uint64_t v123 = v153;
    char v124 = swift_isUniquelyReferenced_nonNull_native();
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v149, v122, v124);
    uint64_t v153 = v123;

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t v109 = *v148;
  uint64_t v110 = one-time initialization token for exerciseGreen;
  swift_bridgeObjectRetain();
  if (v110 != -1) {
    swift_once();
  }
  id v111 = (void *)static MOSuggestionTheme.Colors.exerciseGreen;
  id v112 = [(id)static MOSuggestionTheme.Colors.exerciseGreen colorWithAlphaComponent:0.18];
  id v113 = [v111 colorWithAlphaComponent:0.18];
  objc_allocWithZone((Class)type metadata accessor for MOSuggestionWorkoutsSnowGlobeView());
  id v114 = v111;
  id v115 = specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(v109, v112, v113, v114);

  id v116 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v115 type:MOSuggestionAssetsTypeWorkoutGroup contentClassType:swift_getObjCClassFromMetadata()];
  (*(void (**)(void))(*(void *)a20 + 288))();
  NSString v117 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v116 addIdentifier:v117];

  specialized _dictionaryUpCast<A, B, C, D>(_:)(v153);
  swift_bridgeObjectRelease();
  Class v118 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v116 addMetadata:v118];

  id v119 = v116;
  a21(v116);
}

uint64_t closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  id v8 = a3;
  id v9 = specialized Dictionary.subscript.getter(v8, a1);

  if (v9)
  {
    swift_beginAccess();
    uint64_t v10 = *(void **)(a4 + 16);
    *(void *)(a4 + 16) = v9;
  }
  return a5();
}

uint64_t closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t (*a9)(void), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  if (a1)
  {
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a2;
    *(void *)(v23 + 24) = a3;
    *(void *)(v23 + 32) = a4;
    *(void *)(v23 + 40) = a5;
    *(void *)(v23 + 48) = a6;
    *(void *)(v23 + 56) = a1;
    *(unsigned char *)(v23 + 64) = a7;
    *(void *)(v23 + 72) = a8;
    *(void *)(v23 + 80) = a9;
    *(void *)(v23 + 88) = a10;
    *(void *)(v23 + 96) = a11;
    *(void *)(v23 + 104) = a12;
    *(void *)(v23 + 112) = a13;
    *(void *)(v23 + 120) = a14;
    *(void *)(v23 + 128) = a15;
    id v24 = a1;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    HKWorkout.packedSuggestionAssetMetadata(completion:)((uint64_t)partial apply for closure #1 in closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:), v23);

    return swift_release();
  }
  else
  {
    uint64_t v26 = a9();
    return ((uint64_t (*)(uint64_t))a9)(v26);
  }
}

uint64_t closure #1 in closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v153 = a8;
  id v154 = a7;
  uint64_t v152 = a6;
  uint64_t v151 = a5;
  uint64_t v150 = a4;
  id v19 = a10;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)v138 - v24;
  uint64_t v26 = type metadata accessor for Date();
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)v138 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v27);
  int64_t v32 = (char *)v138 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v34 = __chkstk_darwin(v33);
  uint64_t v38 = (char *)v138 - v37;
  if (!*(void *)(a1 + 16))
  {
    long long v160 = 0u;
    long long v161 = 0u;
    goto LABEL_10;
  }
  uint64_t v147 = v36;
  uint64_t v149 = v34;
  uint64_t v148 = v35;
  uint64_t v155 = a11;
  uint64_t v156 = a10;
  id v39 = MOSuggestionAssetMetadataKeyWorkoutType;
  uint64_t v40 = specialized __RawDictionaryStorage.find<A>(_:)(v39);
  if ((v41 & 1) == 0)
  {
    long long v160 = 0u;
    long long v161 = 0u;

    id v19 = v156;
    goto LABEL_10;
  }
  outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v40, (uint64_t)&v160);

  id v19 = v156;
  if (!*((void *)&v161 + 1))
  {
LABEL_10:
    id v46 = &demangling cache variable for type metadata for Any?;
    NSString v47 = &v160;
LABEL_11:
    uint64_t result = outlined destroy of Any?((uint64_t)v47, v46);
    return v19(result);
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return v19(result);
  }
  uint64_t v146 = v159;
  if (!*(void *)(a1 + 16))
  {
    long long v160 = 0u;
    long long v161 = 0u;
LABEL_20:
    outlined destroy of Any?((uint64_t)&v160, &demangling cache variable for type metadata for Any?);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v148 + 56))(v25, 1, 1, v149);
    goto LABEL_21;
  }
  double v144 = v158;
  id v43 = MOSuggestionAssetMetadataKeyWorkoutWorkoutStartTime;
  uint64_t v44 = specialized __RawDictionaryStorage.find<A>(_:)(v43);
  if (v45)
  {
    outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v44, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }

  if (!*((void *)&v161 + 1)) {
    goto LABEL_20;
  }
  id v145 = v38;
  uint64_t v48 = v149;
  int v49 = swift_dynamicCast();
  uint64_t v50 = v148;
  uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v148 + 56);
  *(void *)&double v143 = v148 + 56;
  id v142 = v51;
  v51(v25, v49 ^ 1u, 1, v48);
  uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
  uint64_t v141 = v50 + 48;
  double v140 = v52;
  if (v52(v25, 1, v48) == 1)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    uint64_t v58 = outlined destroy of Any?((uint64_t)v25, (uint64_t *)&demangling cache variable for type metadata for Date?);
    return v156(v58);
  }
  os_log_type_t v54 = *(void (**)(uint64_t, char *, uint64_t))(v50 + 32);
  uint64_t v53 = v50 + 32;
  BOOL v139 = v54;
  v54((uint64_t)v145, v25, v48);
  if (!*(void *)(a1 + 16))
  {
    long long v160 = 0u;
    long long v161 = 0u;
    uint64_t v59 = v145;
LABEL_29:
    outlined destroy of Any?((uint64_t)&v160, &demangling cache variable for type metadata for Any?);
    uint64_t v60 = v149;
    v142(v23, 1, 1, v149);
    id v19 = v156;
    goto LABEL_30;
  }
  id v55 = MOSuggestionAssetMetadataKeyWorkoutWorkoutEndTime;
  uint64_t v56 = specialized __RawDictionaryStorage.find<A>(_:)(v55);
  if (v57)
  {
    outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v56, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }
  uint64_t v59 = v145;

  if (!*((void *)&v161 + 1)) {
    goto LABEL_29;
  }
  v138[1] = v53;
  uint64_t v60 = v149;
  int v61 = swift_dynamicCast();
  v142(v23, v61 ^ 1u, 1, v60);
  int v62 = v140(v23, 1, v60);
  id v19 = v156;
  if (v62 == 1)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v148 + 8))(v59, v60);
    id v46 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    NSString v47 = (long long *)v23;
    goto LABEL_11;
  }
  v139(v147, v23, v60);
  if (!*(void *)(a1 + 16))
  {
    long long v160 = 0u;
    long long v161 = 0u;
LABEL_54:
    swift_bridgeObjectRelease();
    outlined destroy of Any?((uint64_t)&v160, &demangling cache variable for type metadata for Any?);
LABEL_56:
    uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
    uint64_t v99 = v149;
    v98(v147, v149);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v98)(v145, v99);
    return v19(result);
  }
  id v63 = MOSuggestionAssetMetadataKeyWorkoutHKType;
  uint64_t v64 = specialized __RawDictionaryStorage.find<A>(_:)(v63);
  if (v65)
  {
    outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v64, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }

  if (!*((void *)&v161 + 1)) {
    goto LABEL_54;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_56;
  }
  id v66 = (void *)(a2 + 16);
  double v143 = v158;
  swift_beginAccess();
  id v67 = *(void **)(a2 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *id v66 = v67;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v67 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v67[2] + 1, 1, v67);
    *id v66 = v67;
  }
  uint64_t v69 = (unint64_t *)(a3 + 16);
  unint64_t v71 = v67[2];
  unint64_t v70 = v67[3];
  if (v71 >= v70 >> 1)
  {
    id v67 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v70 > 1), v71 + 1, 1, v67);
    *id v66 = v67;
  }
  v67[2] = v71 + 1;
  uint64_t v72 = (double *)&v67[2 * v71];
  uint64_t v73 = v146;
  v72[4] = v144;
  *((void *)v72 + 5) = v73;
  swift_endAccess();
  uint64_t v146 = *(void (**)(void, void, void))(v148 + 16);
  v146(v32, v59, v149);
  swift_beginAccess();
  unint64_t v74 = *v69;
  char v75 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v69 = v74;
  if ((v75 & 1) == 0)
  {
    unint64_t v74 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v74 + 16) + 1, 1, v74);
    unint64_t *v69 = v74;
  }
  uint64_t v76 = (unint64_t *)(v150 + 16);
  unint64_t v78 = *(void *)(v74 + 16);
  unint64_t v77 = *(void *)(v74 + 24);
  uint64_t v79 = v148;
  if (v78 >= v77 >> 1)
  {
    uint64_t v137 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v77 > 1, v78 + 1, 1, v74);
    uint64_t v79 = v148;
    unint64_t v74 = v137;
    unint64_t *v69 = v137;
  }
  *(void *)(v74 + 16) = v78 + 1;
  unint64_t v80 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
  unint64_t v81 = v74 + v80;
  uint64_t v82 = *(void *)(v79 + 72);
  id v83 = v32;
  uint64_t v84 = v149;
  v139(v81 + v82 * v78, v83, v149);
  swift_endAccess();
  v146(v29, v147, v84);
  swift_beginAccess();
  unint64_t v85 = *v76;
  char v86 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v76 = v85;
  if ((v86 & 1) == 0)
  {
    unint64_t v85 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(v85 + 16) + 1, 1, v85);
    *uint64_t v76 = v85;
  }
  unint64_t v87 = (double **)(v151 + 16);
  unint64_t v89 = *(void *)(v85 + 16);
  unint64_t v88 = *(void *)(v85 + 24);
  if (v89 >= v88 >> 1)
  {
    unint64_t v85 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v89 + 1, 1, v85);
    *uint64_t v76 = v85;
  }
  *(void *)(v85 + 16) = v89 + 1;
  v139(v85 + v80 + v89 * v82, v29, v149);
  swift_endAccess();
  swift_beginAccess();
  id v90 = *v87;
  char v91 = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v87 = v90;
  if ((v91 & 1) == 0)
  {
    id v90 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v90 + 2) + 1, 1, v90);
    *unint64_t v87 = v90;
  }
  unint64_t v93 = *((void *)v90 + 2);
  unint64_t v92 = *((void *)v90 + 3);
  if (v93 >= v92 >> 1)
  {
    id v90 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v92 > 1), v93 + 1, 1, v90);
    *unint64_t v87 = v90;
  }
  id v94 = (double **)(v152 + 16);
  *((void *)v90 + 2) = v93 + 1;
  v90[v93 + 4] = v143;
  swift_endAccess();
  if (!*(void *)(a1 + 16))
  {
    long long v160 = 0u;
    long long v161 = 0u;
LABEL_62:
    outlined destroy of Any?((uint64_t)&v160, &demangling cache variable for type metadata for Any?);
    goto LABEL_63;
  }
  id v95 = MOSuggestionAssetMetadataKeyWorkoutIsIndoors;
  uint64_t v96 = specialized __RawDictionaryStorage.find<A>(_:)(v95);
  if (v97)
  {
    outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v96, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }

  if (!*((void *)&v161 + 1)) {
    goto LABEL_62;
  }
  if (swift_dynamicCast())
  {
    char v100 = LOBYTE(v158);
    goto LABEL_64;
  }
LABEL_63:
  char v100 = 0;
LABEL_64:
  swift_beginAccess();
  unint64_t v101 = *v94;
  char v102 = swift_isUniquelyReferenced_nonNull_native();
  *id v94 = v101;
  if ((v102 & 1) == 0)
  {
    unint64_t v101 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v101 + 2) + 1, 1, v101);
    *id v94 = v101;
  }
  int v103 = v153;
  unint64_t v105 = *((void *)v101 + 2);
  unint64_t v104 = *((void *)v101 + 3);
  if (v105 >= v104 >> 1)
  {
    unint64_t v101 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((double *)(v104 > 1), v105 + 1, 1, v101);
    *id v94 = v101;
  }
  *((void *)v101 + 2) = v105 + 1;
  *((unsigned char *)v101 + v105 + 32) = v100;
  swift_endAccess();
  id v106 = [v154 workoutActivityType];
  char v107 = (v103 - 11) < 0xFFFFFFF7;
  swift_retain();
  swift_retain();
  id v19 = v156;
  specialized MOSuggestionAssetSystemIconImageProvider.getAssetFor(workoutType:size:renderGlyph:isIndoors:completion:)((uint64_t)v106, 5, v107, v100, a9, v156);
  swift_release();
  swift_release();
  Date.timeIntervalSinceReferenceDate.getter();
  double v109 = v108;
  Date.timeIntervalSinceReferenceDate.getter();
  double v111 = v109 - v110;
  swift_beginAccess();
  *(double *)(a12 + 16) = v111 + *(double *)(a12 + 16);
  if (!*(void *)(a1 + 16))
  {
    long long v160 = 0u;
    long long v161 = 0u;
LABEL_78:
    outlined destroy of Any?((uint64_t)&v160, &demangling cache variable for type metadata for Any?);
    goto LABEL_79;
  }
  id v112 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntQuantity;
  uint64_t v113 = specialized __RawDictionaryStorage.find<A>(_:)(v112);
  if (v114)
  {
    outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v113, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }

  if (!*((void *)&v161 + 1)) {
    goto LABEL_78;
  }
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity);
  if (swift_dynamicCast())
  {
    id v115 = v157;
    swift_beginAccess();
    id v116 = *(void **)(a13 + 16);
    if (v116)
    {
      id v117 = v116;
      [v115 doubleValueForUnit:v117];
      double v119 = v118;

      swift_beginAccess();
      *(double *)(a14 + 16) = v119 + *(double *)(a14 + 16);
      if (!*(void *)(a1 + 16))
      {
LABEL_77:
        long long v160 = 0u;
        long long v161 = 0u;
LABEL_91:
        outlined destroy of Any?((uint64_t)&v160, &demangling cache variable for type metadata for Any?);
        goto LABEL_92;
      }
    }
    else
    {

      if (!*(void *)(a1 + 16)) {
        goto LABEL_77;
      }
    }
    goto LABEL_80;
  }
LABEL_79:
  if (!*(void *)(a1 + 16)) {
    goto LABEL_77;
  }
LABEL_80:
  id v120 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRate;
  uint64_t v121 = specialized __RawDictionaryStorage.find<A>(_:)(v120);
  if (v122)
  {
    outlined init with copy of Any(*(void *)(a1 + 56) + 32 * v121, (uint64_t)&v160);
  }
  else
  {
    long long v160 = 0u;
    long long v161 = 0u;
  }

  if (!*((void *)&v161 + 1)) {
    goto LABEL_91;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_92:
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v131 = type metadata accessor for Logger();
    __swift_project_value_buffer(v131, (uint64_t)static MOAngelLogger.assets);
    NSString v132 = Logger.logObject.getter();
    os_log_type_t v133 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v132, v133))
    {
      uint64_t v134 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v134 = 0;
      _os_log_impl((void *)&_mh_execute_header, v132, v133, "workout group avg heart rate ignored from average", v134, 2u);
      swift_slowDealloc();
    }

    Swift::String v135 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
    uint64_t v136 = v149;
    v135(v147, v149);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v135)(v145, v136);
    return v19(result);
  }
  double v123 = *(double *)&v157;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  char v124 = (void *)(a16 + 16);
  uint64_t v125 = type metadata accessor for Logger();
  __swift_project_value_buffer(v125, (uint64_t)static MOAngelLogger.assets);
  double v126 = Logger.logObject.getter();
  os_log_type_t v127 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v126, v127))
  {
    unint64_t v128 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v128 = 134217984;
    *(double *)&long long v160 = v123;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v126, v127, "workout group avg heart rate += %f", v128, 0xCu);
    swift_slowDealloc();
  }

  uint64_t v129 = *(void (**)(uint64_t, uint64_t))(v148 + 8);
  uint64_t v130 = v149;
  v129(v147, v149);
  v129((uint64_t)v145, v130);
  swift_beginAccess();
  *(double *)(a15 + 16) = v123 + *(double *)(a15 + 16);
  uint64_t result = swift_beginAccess();
  if (!__OFADD__(*v124, 1))
  {
    ++*v124;
    return v19(result);
  }
  __break(1u);
  return result;
}

uint64_t closure #1 in closure #1 in closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  if (a1)
  {
    uint64_t v4 = (void *)a1;
    uint64_t v5 = (void *)(a2 + 16);
    swift_beginAccess();
    id v6 = v4;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    a1 = swift_endAccess();
  }
  return a3(a1);
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(id), uint8_t *a11)
{
  id v19 = (void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
    return;
  }
  void *v19 = v22;
  if (v22 == a2)
  {
    swift_beginAccess();
    uint64_t v23 = *(void *)(a3 + 16);
    if (v23)
    {
      uint64_t v24 = (void **)(a4 + 16);
      swift_beginAccess();
      uint64_t v25 = *v24;
      swift_beginAccess();
      uint64_t v26 = *(void **)(a5 + 16);
      if ((a6 - 2) >= 9u)
      {
        if ((a6 & 1) != 0 || !v25) {
          goto LABEL_10;
        }
      }
      else if (!v25)
      {
LABEL_10:
        swift_beginAccess();
        id v27 = *(id *)(a7 + 16);
LABEL_11:
        id v28 = objc_allocWithZone((Class)MOSuggestionAssetWorkout);
        id v29 = v26;
        swift_bridgeObjectRetain();
        id v30 = v25;
        id v31 = [v28 init:0 route:v30 renderedRouteMap:v29 icon:v27];

        uint64_t v32 = MOSuggestionAssetsTypeWorkout;
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetWorkout);
        id v33 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v31 type:v32 contentClassType:swift_getObjCClassFromMetadata()];
        specialized _dictionaryUpCast<A, B, C, D>(_:)(v23);
        swift_bridgeObjectRelease();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v33 addMetadata:isa];

        uint64_t v35 = *(void (**)(void))(*(void *)a8 + 288);
        v35();
        NSString v36 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v33 addIdentifier:v36];

        if (a6 - 2 >= 6 && a6 - 9 > 1)
        {
          specialized static MOSuggestionAssetCacheManager.wrapWorkoutAssetInURLIfNecessary(asset:cacheType:completion:)(v33, a6, a10, a11);
        }
        else
        {
          swift_beginAccess();
          uint64_t Strong = swift_weakLoadStrong();
          if (Strong)
          {
            id v38 = *(id *)(Strong + 16);
            uint64_t v39 = swift_release();
            ((void (*)(uint64_t))v35)(v39);
            NSString v40 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            swift_beginAccess();
            if (*v24) {
              uint64_t v41 = 3;
            }
            else {
              uint64_t v41 = 1;
            }
            [v38 setObject:v33 forKey:v40 cost:v41 a10];
          }
          id v42 = v33;
          a10(v33);
        }
        return;
      }
      id v27 = 0;
      goto LABEL_11;
    }
  }
}

void closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(id))
{
  if (a1)
  {
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = a2;
    void v10[3] = a3;
    v10[4] = a4;
    id v11 = a1;
    swift_retain();
    swift_retain();
    HKWorkout.packedSuggestionAssetMetadata(completion:)((uint64_t)partial apply for closure #1 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:), (uint64_t)v10);

    swift_release();
  }
  else
  {
    uint64_t v14 = (*(uint64_t (**)(void))(*(void *)a5 + 312))();
    uint64_t v16 = v15;
    type metadata accessor for MOSuggestionGenericFallBackInfo();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 24) = 0;
    *(void *)(v17 + 16) = 0;
    swift_beginAccess();
    *(void *)(v17 + 16) = v14;
    *(void *)(v17 + 24) = v16;
    swift_bridgeObjectRelease();
    MOSuggestionGenericFallBackInfo.description()();
    NSString v18 = *(uint64_t (**)(uint64_t))(*(void *)a5 + 120);
    uint64_t v19 = swift_retain();
    uint64_t v20 = (void *)v18(v19);
    id v21 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v17 type:v20 contentClassType:swift_getObjCClassFromMetadata()];
    swift_release();

    id v22 = v21;
    a6(v21);
    swift_release();
  }
}

uint64_t closure #1 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_beginAccess();
  *(void *)(a2 + 16) = a1;
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_bridgeObjectRetain();
  return a3(v6);
}

void closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, int a7, uint64_t a8, double a9)
{
  uint64_t v93 = a6;
  uint64_t v90 = a3;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  id v22 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v85 - v24;
  if (!a1) {
    goto LABEL_26;
  }
  uint64_t v88 = a8;
  int v89 = a7;
  char v91 = a4;
  id v26 = a1;
  id v27 = [v26 locationReadings];
  uint64_t v92 = type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation);
  unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v29 < 2)
  {

    a4 = v91;
LABEL_26:
    a4(v23);
    return;
  }
  id v30 = [v26 locationReadings];
  unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v69) {
      goto LABEL_35;
    }
  }
  else if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_35:
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  if ((v31 & 0xC000000000000001) != 0)
  {
    id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_33;
    }
    id v32 = *(id *)(v31 + 32);
  }
  id v87 = v32;
  swift_bridgeObjectRelease();
  id v33 = [v26 locationReadings];
  unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v31 >> 62))
  {
    uint64_t v34 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v34) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  swift_bridgeObjectRetain();
  uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v34)
  {
LABEL_34:

    goto LABEL_35;
  }
LABEL_12:
  unint64_t v35 = v34 - 1;
  if (__OFSUB__(v34, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v85 = a2;
    uint64_t v86 = a5;
    if ((v31 & 0xC000000000000001) == 0)
    {
      if ((v35 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v35 < *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        NSString v36 = (char *)*(id *)(v31 + 8 * v35 + 32);
        goto LABEL_17;
      }
      __break(1u);
      goto LABEL_47;
    }
  }
  NSString v36 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_17:
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  id v38 = [v37 timestamp];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Date.timeIntervalSinceReferenceDate.getter();
  double v40 = v39;
  uint64_t v41 = *(void (**)(char *, uint64_t))(v19 + 8);
  v41(v25, v18);
  id v42 = v87;
  id v43 = [v87 timestamp];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  Date.timeIntervalSinceReferenceDate.getter();
  double v45 = v44;
  v41(v22, v18);
  double v46 = v40 - v45;
  Date.timeIntervalSinceReferenceDate.getter();
  double v48 = v47;
  Date.timeIntervalSinceReferenceDate.getter();
  double v50 = v48 - v49;
  [v42 coordinate];
  double v52 = v51;
  [v37 coordinate];
  double v54 = (v52 - v53) * (v52 - v53);
  [v42 coordinate];
  double v56 = v55;
  [v37 coordinate];
  double v10 = v54 + (v56 - v57) * (v56 - v57);
  double v9 = v46 / v50;
  id v22 = v37;
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
LABEL_47:
  }
    swift_once();
  double v58 = fabs(v9);
  double v59 = sqrt(v10);
  uint64_t v60 = type metadata accessor for Logger();
  __swift_project_value_buffer(v60, (uint64_t)static MOAngelLogger.assets);
  int v61 = Logger.logObject.getter();
  os_log_type_t v62 = static os_log_type_t.default.getter();
  BOOL v63 = os_log_type_enabled(v61, v62);
  a5 = v86;
  if (v63)
  {
    uint64_t v64 = swift_slowAlloc();
    *(_DWORD *)uint64_t v64 = 134218496;
    uint64_t v94 = *(void *)&v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v64 + 12) = 2048;
    uint64_t v94 = *(void *)&v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v64 + 22) = 2048;
    uint64_t v94 = 0x3F7DAE6076B981DBLL;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "[MOSuggestionAssetCacheManager] routeDurationPercentage=%f, routeDistance=%f, threshold=%f", (uint8_t *)v64, 0x20u);
    swift_slowDealloc();
  }

  if (v58 < a9 && v59 < 0.00724637681)
  {
    char v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v65, v66))
    {
      id v67 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v67 = 134217984;
      uint64_t v94 = *(void *)&v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "[MOSuggestionAssetCacheManager] Duration of route is less than threshold, falling back to icon, routeDurationPercentage=%f", v67, 0xCu);
      swift_slowDealloc();
    }

    v91(v68);
    return;
  }

LABEL_36:
  unint64_t v70 = (void **)(v93 + 16);
  swift_beginAccess();
  unint64_t v71 = *v70;
  *unint64_t v70 = a1;
  id v72 = v26;

  unsigned __int8 v74 = v89;
  if ((v89 - 2) > 8u)
  {
    v91(v73);
  }
  else
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v75 = type metadata accessor for Logger();
    __swift_project_value_buffer(v75, (uint64_t)static MOAngelLogger.assets);
    uint64_t v76 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.default.getter();
    BOOL v78 = os_log_type_enabled(v76, v77);
    uint64_t v79 = v88;
    if (v78)
    {
      unint64_t v80 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v80 = 0;
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "[MOSuggestionAssetCacheManager] Sheet only, rendering route", v80, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for MOSuggestionAssetMapSnapshotProvider();
    swift_allocObject();
    MOSuggestionAssetMapSnapshotProvider.init(targetQueue:)(0);
    id v81 = [v72 locationReadings];
    unint64_t v82 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v83 = (void *)swift_allocObject();
    uint64_t v84 = v91;
    v83[2] = v79;
    v83[3] = v84;
    v83[4] = a5;
    swift_retain();
    swift_retain();
    MOSuggestionAssetMapSnapshotProvider.getRouteMapFor(_:size:completion:)(v82, v74, (uint64_t)partial apply for closure #1 in closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:), (uint64_t)v83);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t closure #1 in closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t v6 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = a1;
    id v7 = a1;
  }
  return a3();
}

void specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t *a9, uint64_t a10, void (*a11)(id), uint8_t *a12, unsigned __int8 a13)
{
  double v110 = a8;
  uint64_t v111 = a3;
  uint64_t v19 = a11;
  uint64_t v18 = a12;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v23 = (char *)&v95 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  if (!a1)
  {
    a11(0);
    return;
  }
  id v106 = a1;
  char v107 = (char *)&v95 - v24;
  uint64_t v25 = a2 + 16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_11;
  }
  double v109 = a7;
  id v27 = v23;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)Strong + 216))(Strong);
  swift_release();
  if (!*(void *)(v28 + 16)
    || (swift_bridgeObjectRetain(),
        specialized __RawDictionaryStorage.find<A>(_:)(v111, a4),
        char v30 = v29,
        swift_bridgeObjectRelease(),
        (v30 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = v27;
    uint64_t v19 = a11;
    uint64_t v18 = a12;
    a7 = v109;
LABEL_11:
    swift_bridgeObjectRetain();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v31 = swift_weakLoadStrong();
  if (!v31)
  {
LABEL_52:
    uint64_t v112 = 0;
    goto LABEL_53;
  }
  uint64_t v32 = (*(uint64_t (**)(void))(*(void *)v31 + 216))();
  swift_release();
  if (!*(void *)(v32 + 16))
  {
LABEL_51:
    swift_bridgeObjectRelease();
    goto LABEL_52;
  }
  uint64_t v23 = v27;
  swift_bridgeObjectRetain();
  unint64_t v33 = specialized __RawDictionaryStorage.find<A>(_:)(v111, a4);
  if ((v34 & 1) == 0)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  uint64_t v19 = a11;
  a6 = *(void *)(*(void *)(v32 + 56) + 32 * v33 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = a12;
  a7 = v109;
LABEL_12:
  uint64_t v112 = 0;
  if (a6)
  {
    double v108 = a7 + 2;
    id v35 = objc_allocWithZone((Class)NSScanner);
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v37 = [v35 initWithString:v36];

    [v37 scanHexLongLong:&v112];
    double v38 = (double)BYTE2(v112) / 255.0;
    double v39 = (double)BYTE1(v112) / 255.0;
    double v40 = (double)v112 / 255.0;
    id v41 = [objc_allocWithZone((Class)UIColor) initWithRed:v38 green:v39 blue:v40 alpha:1.0];
    swift_beginAccess();
    uint64_t v42 = swift_weakLoadStrong();
    id v104 = v41;
    unint64_t v105 = v18;
    if (v42)
    {
      uint64_t v43 = (*(uint64_t (**)(void))(*(void *)v42 + 216))();
      swift_release();
      if (*(void *)(v43 + 16))
      {
        swift_bridgeObjectRetain();
        specialized __RawDictionaryStorage.find<A>(_:)(v111, a4);
        char v45 = v44;
        swift_bridgeObjectRelease();
        if (v45)
        {
          swift_bridgeObjectRelease();
          swift_beginAccess();
          uint64_t v46 = swift_weakLoadStrong();
          if (v46)
          {
            uint64_t v47 = (*(uint64_t (**)(void))(*(void *)v46 + 216))();
            swift_release();
            if (*(void *)(v47 + 16))
            {
              swift_bridgeObjectRetain();
              unint64_t v48 = specialized __RawDictionaryStorage.find<A>(_:)(v111, a4);
              if (v49) {
                double v109 = *(uint64_t **)(*(void *)(v47 + 56) + 32 * v48);
              }
              else {
                double v109 = 0;
              }
              char v50 = v49 ^ 1;
              swift_bridgeObjectRelease();
            }
            else
            {
              double v109 = 0;
              char v50 = 1;
            }
            swift_bridgeObjectRelease();
            uint64_t v93 = v109;
          }
          else
          {
            uint64_t v93 = 0;
            char v50 = 1;
          }
          swift_beginAccess();
          double v109 = v93;
          a7[2] = (uint64_t)v93;
          *((unsigned char *)a7 + 24) = v50 & 1;
          goto LABEL_26;
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    if (!swift_weakLoadStrong())
    {
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    swift_release();
    swift_beginAccess();
    char v50 = 0;
    if (v40 * 0.0722 + v38 * 0.2126 + v39 * 0.7152 <= 0.1)
    {
      uint64_t v51 = 3;
      uint64_t v52 = 3;
    }
    else
    {
      uint64_t v51 = 2;
      uint64_t v52 = 2;
    }
    double v109 = (uint64_t *)v52;
    a7[2] = v51;
    *((unsigned char *)a7 + 24) = 0;
LABEL_26:
    uint64_t v102 = a4;
    int v103 = v19;
    uint64_t v95 = v25;
    uint64_t v53 = type metadata accessor for URL();
    double v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56);
    uint64_t v55 = (uint64_t)v107;
    v54(v107, 1, 1, v53);
    v54(v23, 1, 1, v53);
    unint64_t v101 = v23;
    if ((v50 & 1) == 0)
    {
      uint64_t v100 = a10;
      double v108 = a9;
      uint64_t v56 = *v110;
      uint64_t v57 = v110[1];
      uint64_t v58 = v110[3];
      uint64_t v97 = v110[2];
      uint64_t v98 = v56;
      uint64_t v59 = v110[5];
      uint64_t v96 = v110[4];
      uint64_t v60 = v110[7];
      uint64_t v99 = v110[6];
      uint64_t v61 = v110[10];
      id v62 = objc_allocWithZone((Class)MOSuggestionAssetMediaItem);
      id v63 = v106;
      id v64 = v106;
      id v65 = v104;
      double v110 = (uint64_t *)v104;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v94 = v60;
      os_log_type_t v66 = v108;
      id v67 = @nonobjc MOSuggestionAssetMediaItem.init(title:albumTitle:artistName:albumArt:trackIdentifier:previewURL:mediaType:imageURL:bgColor:bgColorVariant:)(v98, v57, v97, v58, v96, v59, v63, v99, v94, v55, v61, (uint64_t)v101, v65, (uint64_t)v109);
      uint64_t v68 = MOSuggestionAssetsTypeMediaCoverArt;
      type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetMediaItem);
      id v69 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v67 type:v68 contentClassType:swift_getObjCClassFromMetadata()];
      unint64_t v70 = *(void (**)(void))(*v66 + 288);
      v70();
      NSString v71 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v69 addIdentifier:v71];

      id v72 = objc_allocWithZone((Class)LSApplicationRecord);
      uint64_t v73 = v102;
      swift_bridgeObjectRetain();
      id v74 = @nonobjc LSApplicationRecord.init(bundleIdentifier:allowPlaceholder:)(v111, v73, 1);
      uint64_t v75 = v74;
      if (v74)
      {
        id v76 = [v74 localizedName];
        uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v78 = v77;
      }
      else
      {
        uint64_t v111 = 0;
        uint64_t v78 = 0;
      }
      uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v81 = v100;
      if (*(void *)(v100 + 16) && (unint64_t v82 = specialized __RawDictionaryStorage.find<A>(_:)(v79, v80), (v83 & 1) != 0))
      {
        uint64_t v84 = *(void *)(*(void *)(v81 + 56) + 8 * v82);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v113 = v84;
        if (swift_dynamicCast())
        {
          if (!v78)
          {
            v103(0);
LABEL_40:

            return;
          }
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1001DA390;
          id v106 = (id)(inited + 32);
          double v109 = (uint64_t *)(inited + 72);
          id v104 = (id)MOSuggestionAssetMetadataKeyMediaStartDate;
          uint64_t v113 = MOSuggestionAssetMetadataKeyMediaStartDate;
          type metadata accessor for MOSuggestionAssetMetadataKey(0);
          char v107 = (char *)_s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, type metadata accessor for MOSuggestionAssetMetadataKey);
          id v86 = v104;
          AnyHashable.init<A>(_:)();
          *(void *)(inited + 96) = type metadata accessor for Date();
          __swift_allocate_boxed_opaque_existential_1(v109);
          Date.init(timeIntervalSinceReferenceDate:)();
          uint64_t v113 = MOSuggestionAssetMetadataKeyMediaThirdPartyAppeName;
          id v87 = MOSuggestionAssetMetadataKeyMediaThirdPartyAppeName;
          AnyHashable.init<A>(_:)();
          *(void *)(inited + 168) = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
          *(void *)(inited + 144) = v111;
          *(void *)(inited + 152) = v78;
          specialized Dictionary.init(dictionaryLiteral:)(inited);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v69 addMetadata:isa];

LABEL_37:
          swift_beginAccess();
          uint64_t v89 = swift_weakLoadStrong();
          if (v89)
          {
            id v90 = *(id *)(v89 + 16);
            uint64_t v91 = swift_release();
            ((void (*)(uint64_t))v70)(v91);
            NSString v92 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v90 setObject:v69 forKey:v92 cost:1];
          }
          specialized static MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary(asset:cacheType:completion:)(v69, a13, v103, v105);
          goto LABEL_40;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    __break(1u);
    goto LABEL_49;
  }
LABEL_53:
  __break(1u);
}

void closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, void (*a5)(id), uint8_t *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v22 = *(void (**)(void))(*(void *)a2 + 288);
    id v23 = a1;
    v22();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v23 addIdentifier:v24];

    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(a3 + 16) && (unint64_t v27 = specialized __RawDictionaryStorage.find<A>(_:)(v25, v26), (v28 & 1) != 0))
    {
      uint64_t v29 = *(void *)(*(void *)(a3 + 56) + 8 * v27);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v58 = v29;
      if (swift_dynamicCast())
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1001DA0F0;
        uint64_t v31 = (void *)MOSuggestionAssetMetadataKeyMediaStartDate;
        uint64_t v58 = MOSuggestionAssetMetadataKeyMediaStartDate;
        type metadata accessor for MOSuggestionAssetMetadataKey(0);
        _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, type metadata accessor for MOSuggestionAssetMetadataKey);
        id v32 = v31;
        AnyHashable.init<A>(_:)();
        *(void *)(inited + 96) = type metadata accessor for Date();
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
        Date.init(timeIntervalSinceReferenceDate:)();
        specialized Dictionary.init(dictionaryLiteral:)(inited);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v23 addMetadata:isa];
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    specialized static MOSuggestionAssetCacheManager.wrapMediaItemAssetInURLIfNecessary(asset:cacheType:completion:)(v23, a4, a5, a6);
  }
  else
  {
    double v54 = a5;
    uint64_t v55 = a6;
    v53[2] = a11;
    v53[1] = a9;
    uint64_t v34 = type metadata accessor for URL();
    uint64_t v35 = *(void *)(v34 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v21, 1, 1, v34);
    swift_beginAccess();
    uint64_t v36 = *(void *)(a13 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v38 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v41 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v21, 1, v34) != 1)
    {
      URL._bridgeToObjectiveC()(v40);
      id v41 = v42;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v34);
    }
    id v43 = [objc_allocWithZone((Class)MOSuggestionAssetMediaItem) initTitle:v37 albumTitle:v38 artistName:v39 albumArt:0 trackIdentifier:0 previewURL:v41 mediaType:v36];

    uint64_t v44 = MOSuggestionAssetsTypeMediaCoverArt;
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetMediaItem);
    id v45 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v43 type:v44 contentClassType:swift_getObjCClassFromMetadata()];
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    __swift_project_value_buffer(v46, (uint64_t)static MOAngelLogger.assets);
    swift_retain_n();
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v48))
    {
      char v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      *(_DWORD *)char v49 = 136315138;
      uint64_t v50 = (*(uint64_t (**)(void))(*(void *)a2 + 312))();
      uint64_t v56 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v50, v51, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "[MOSuggestionAssetCacheManager] Using fallback media image for: %s", v49, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v52 = v54;
    id v23 = v45;
    v52(v45);
  }
}

void closure #2 in MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:)(UIImage a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *object, uint64_t a8, dispatch_group_t group)
{
  if (!a1.super.isa) {
    goto LABEL_43;
  }
  Swift::String v16 = hashImage(image:)(a1);
  unint64_t v17 = *(void *)(a2 + 16);
  if (v17 < 4)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  uint64_t v54 = (uint64_t)object;
  unint64_t v55 = *(void *)(a2 + 16);
  object = v16._object;
  uint64_t v53 = a8;
  uint64_t v52 = (uint64_t *)(a6 + 16);
  unint64_t v18 = (unsigned __int128)((uint64_t)(v17 - 1) * (__int128)0x5555555555555556) >> 64;
  a8 = v18 + (v18 >> 63) - 1;
  lazy protocol witness table accessor for type String and conformance String();
  uint64_t v19 = 0;
  char v20 = 0;
  uint64_t v56 = a2 + 32;
  uint64_t v21 = a8;
  while (1)
  {
    Swift::String v60 = v16;
    uint64_t v58 = a3;
    uint64_t v59 = a4;
    if (StringProtocol.caseInsensitiveCompare<A>(_:)())
    {
      Swift::String v60 = v16;
      uint64_t v23 = 3 * v19;
      if ((unsigned __int128)(v19 * (__int128)3) >> 64 != (3 * v19) >> 63) {
        goto LABEL_51;
      }
      BOOL v22 = __OFADD__(v23, 3);
      unint64_t v24 = v23 + 3;
      if (v22) {
        goto LABEL_52;
      }
      if (v24 >= v55) {
        goto LABEL_53;
      }
      uint64_t v25 = (uint64_t *)(v56 + 16 * v24);
      uint64_t v27 = *v25;
      uint64_t v26 = v25[1];
      uint64_t v58 = v27;
      uint64_t v59 = v26;
      if (StringProtocol.caseInsensitiveCompare<A>(_:)())
      {
        if (a8 == v19) {
          goto LABEL_14;
        }
        goto LABEL_5;
      }
    }
    char v20 = 1;
    uint64_t v21 = v19;
    if (a8 == v19) {
      break;
    }
LABEL_5:
    BOOL v22 = __OFADD__(v19++, 1);
    if (v22)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
  }
  uint64_t v21 = a8;
LABEL_14:
  a8 = a5 + 16;
  swift_beginAccess();
  if (!swift_weakLoadStrong())
  {
LABEL_63:
    __break(1u);
    return;
  }
  uint64_t v28 = 3 * v21;
  if ((unsigned __int128)(v21 * (__int128)3) >> 64 != (3 * v21) >> 63) {
    goto LABEL_55;
  }
  unint64_t v29 = v28 + 1;
  if (__OFADD__(v28, 1)) {
    goto LABEL_56;
  }
  if (v29 >= v55) {
    goto LABEL_57;
  }
  char v30 = (uint64_t *)(v56 + 16 * v29);
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  if (*v30 == 0x746867696CLL && v32 == 0xE500000000000000)
  {
    swift_release();
    uint64_t v33 = 1;
    a8 = v53;
  }
  else
  {
    a8 = v53;
    if (_stringCompareWithSmolCheck(_:_:expecting:)())
    {
      swift_release();
      uint64_t v33 = 1;
    }
    else if (v31 == 1802658148 && v32 == 0xE400000000000000 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_release();
      uint64_t v33 = 2;
    }
    else if (v31 == 0x6B72614479726576 && v32 == 0xE800000000000000)
    {
      swift_release();
      uint64_t v33 = 3;
    }
    else
    {
      char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_release();
      if (v51) {
        uint64_t v33 = 3;
      }
      else {
        uint64_t v33 = 0;
      }
    }
  }
  unint64_t v34 = v28 + 2;
  if (__OFADD__(v28, 2))
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    swift_once();
    goto LABEL_31;
  }
  if (v34 >= v55) {
    goto LABEL_59;
  }
  uint64_t v35 = (uint64_t *)(v56 + 16 * v34);
  uint64_t v36 = *v35;
  uint64_t v37 = v35[1];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v57 = *v52;
  uint64_t *v52 = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v33, v36, v37, v20 & 1, v54, a8, isUniquelyReferenced_nonNull_native);
  uint64_t *v52 = v57;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if ((v20 & 1) == 0)
  {
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    __swift_project_value_buffer(v43, (uint64_t)static MOAngelLogger.assets);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    double v40 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v40, v44))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_42;
    }
    uint64_t v45 = 3 * v21;
    uint64_t v46 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136315650;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, a8, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v46 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16._countAndFlagsBits, (unint64_t)v16._object, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v46 + 22) = 2080;
    unint64_t v47 = v45 + 3;
    if (__OFADD__(v45, 3))
    {
      __break(1u);
    }
    else if (v47 < v55)
    {
      os_log_type_t v48 = (uint64_t *)(v56 + 16 * v47);
      uint64_t v49 = *v48;
      unint64_t v50 = v48[1];
      swift_bridgeObjectRetain();
      getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v49, v50, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v44, "[MOSuggestionAssetCacheManager] app icon background color hash value changed, bundleId, %s, new hashValue, %s, old hashValue, %s", (uint8_t *)v46, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_39;
    }
    __break(1u);
    goto LABEL_63;
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    goto LABEL_60;
  }
LABEL_31:
  uint64_t v39 = type metadata accessor for Logger();
  __swift_project_value_buffer(v39, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  double v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136315394;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v54, a8, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 12) = 2080;
    swift_bridgeObjectRetain();
    getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v16._countAndFlagsBits, (unint64_t)object, &v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "[MOSuggestionAssetCacheManager] app icon background color hash value unchanged, bundleId, %s, hashValue, %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_39:
    swift_slowDealloc();
  }
  else
  {

LABEL_42:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
LABEL_43:
  dispatch_group_leave(group);
}

Swift::String __swiftcall hashImage(image:)(UIImage image)
{
  uint64_t v1 = (CGImage *)[(objc_class *)image.super.isa CGImage];
  if (!v1)
  {
LABEL_5:
    uint64_t v3 = 0;
    goto LABEL_6;
  }
  uint64_t v2 = v1;
  uint64_t v3 = CGImageGetDataProvider(v1);

  if (v3)
  {
    CFDataRef v4 = CGDataProviderCopyData(v3);

    if (v4)
    {
      static Data._conditionallyBridgeFromObjectiveC(_:result:)();
    }
    goto LABEL_5;
  }
LABEL_6:
  uint64_t v5 = (uint64_t)v3;
  uint64_t v6 = (void *)0xE000000000000000;
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a1)
  {
    uint64_t v6 = *(void (**)(void))(*(void *)a2 + 288);
    id v7 = a1;
    v6();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 addIdentifier:v8];

    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      id v10 = *(id *)(Strong + 16);
      uint64_t v11 = swift_release();
      ((void (*)(uint64_t))v6)(v11);
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v10 setObject:v7 forKey:v12 cost:1];
    }
    id v13 = v7;
    ((void (*)(void *))a4)(a1);
  }
  else
  {
    a4();
  }
}

void specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  if (a1)
  {
    id v7 = *(void (**)(void))(*(void *)a2 + 288);
    id v8 = a1;
    v7();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v8 addIdentifier:v9];

    specialized _dictionaryUpCast<A, B, C, D>(_:)(a3);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v8 addMetadata:isa];

    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      id v12 = *(id *)(Strong + 16);
      uint64_t v13 = swift_release();
      ((void (*)(uint64_t))v7)(v13);
      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v12 setObject:v8 forKey:v14 cost:1];
    }
    id v15 = v8;
    ((void (*)(void *))a5)(a1);
  }
  else
  {
    a5();
  }
}

void *closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)@<X0>(id *a1@<X0>, Swift::Int *a2@<X1>, Swift::Int *a3@<X2>, uint64_t a4@<X3>, Swift::Int *a5@<X4>, uint64_t a6@<X5>, Swift::Int *a7@<X6>, void *a8@<X8>)
{
  uint64_t v69 = a6;
  unint64_t v70 = a7;
  uint64_t v65 = a4;
  os_log_type_t v66 = a3;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date??);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = *a1;
  id v17 = [*a1 name];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  [v16 placeNameConfidence];
  double v22 = v21;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  Swift::Int v71 = *a2;
  *a2 = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v18, v20, isUniquelyReferenced_nonNull_native, v22);
  *a2 = v71;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for MOMapLocation();
  id v24 = v16;
  Swift::String result = (void *)MOMapLocation.__allocating_init(fromResource:)(v24);
  uint64_t v26 = result;
  if (!result) {
    goto LABEL_12;
  }
  id v67 = a8;
  uint64_t v68 = v8;
  uint64_t v27 = (uint64_t (**)(void))(*result + 432);
  uint64_t v28 = *v27;
  uint64_t v29 = (*v27)();
  if (!v30)
  {
LABEL_11:
    id v41 = [v24 name];
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    uint64_t v45 = (*(uint64_t (**)(void))(*v26 + 504))();
    uint64_t v47 = v46;
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v71 = *a5;
    *a5 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v45, v47, v42, v44, v48);
    *a5 = v71;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v49 = [v24 name];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v51;

    (*(void (**)(void))(*v26 + 192))();
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v15, 0, 1, v53);
    specialized Dictionary.subscript.setter((uint64_t)v15, v50, v52);
    id v54 = [v24 name];
    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v57 = v56;

    double v58 = (*(double (**)(void))(*v26 + 456))();
    uint64_t v59 = v70;
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v71 = *v59;
    Swift::Int *v59 = 0x8000000000000000;
    specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v55, v57, v60, v58);
    Swift::Int *v59 = v71;
    swift_bridgeObjectRelease();
    Swift::String result = (void *)swift_bridgeObjectRelease();
    a8 = v67;
LABEL_12:
    *a8 = v26;
    return result;
  }
  uint64_t v31 = v29;
  uint64_t v32 = v30;
  if (v29) {
    BOOL v33 = 0;
  }
  else {
    BOOL v33 = v30 == 0xE000000000000000;
  }
  if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  id v62 = v15;
  id v34 = [v24 name];
  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v63 = v36;
  uint64_t v64 = v35;

  uint64_t v37 = v66;
  char v38 = swift_isUniquelyReferenced_nonNull_native();
  Swift::Int v71 = *v37;
  *uint64_t v37 = 0x8000000000000000;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v31, v32, v64, v63, v38);
  *uint64_t v37 = v71;
  swift_bridgeObjectRelease();
  uint64_t v39 = swift_bridgeObjectRelease();
  Swift::String result = (void *)((uint64_t (*)(uint64_t))v28)(v39);
  if (v40)
  {
    specialized Set._Variant.insert(_:)(&v71, (Swift::Int)result, v40);
    swift_bridgeObjectRelease();
    id v15 = v62;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

void closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1, NSObject *p_ivar_lyt, uint64_t a3, uint64_t a4, unint64_t a5, NSObject *a6, void (*a7)(id), uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v121 = (void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v18 = *(uint64_t **)(a1 + 16);
  if ((unint64_t)v18 >> 62)
  {
LABEL_103:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v19 = *(void *)(((unint64_t)v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v20 = (uint64_t *)&p_ivar_lyt[2];
  uint64_t v137 = a6 + 2;
  unint64_t v138 = a5;
  unint64_t v129 = a5 >> 62;
  BOOL v139 = (uint64_t *)&p_ivar_lyt[2];
  if (v19)
  {
    a3 += 16;
    unint64_t v134 = (unint64_t)v18 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v130 = (uint64_t *)a3;
    swift_beginAccess();
    double v21 = v18;
    uint64_t v18 = 0;
    NSString v132 = v21 + 4;
    uint64_t v122 = a5 & 0xFFFFFFFFFFFFFF8;
    os_log_type_t v133 = (uint64_t *)v19;
    while (1)
    {
      while (1)
      {
        if (v134)
        {
          a6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v22 = __OFADD__(v18, 1);
          uint64_t v18 = (uint64_t *)((char *)v18 + 1);
          if (v22) {
            goto LABEL_101;
          }
        }
        else
        {
          a6 = v132[(void)v18];
          swift_retain();
          BOOL v22 = __OFADD__(v18, 1);
          uint64_t v18 = (uint64_t *)((char *)v18 + 1);
          if (v22)
          {
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
            goto LABEL_103;
          }
        }
        a3 = *v20;
        uint64_t v23 = (uint64_t (*)(uint64_t))*((void *)a6->isa + 42);
        uint64_t v24 = swift_bridgeObjectRetain();
        uint64_t v136 = v23;
        uint64_t v25 = v23(v24);
        uint64_t v27 = v26;
        if (*(void *)(a3 + 16))
        {
          uint64_t v28 = v25;
          Hasher.init(_seed:)();
          String.hash(into:)();
          Swift::Int v29 = Hasher._finalize()();
          uint64_t v30 = -1 << *(unsigned char *)(a3 + 32);
          unint64_t v31 = v29 & ~v30;
          p_ivar_lyt = (a3 + 56);
          if ((*(void *)(a3 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31))
          {
            a5 = *(void *)(a3 + 48);
            uint64_t v32 = (void *)(a5 + 16 * v31);
            BOOL v33 = *v32 == v28 && v32[1] == v27;
            if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
LABEL_17:
              swift_bridgeObjectRelease();
LABEL_31:
              swift_bridgeObjectRelease();
              goto LABEL_33;
            }
            uint64_t v34 = ~v30;
            while (1)
            {
              unint64_t v31 = (v31 + 1) & v34;
              if (((*(unint64_t *)((char *)&p_ivar_lyt->isa + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
                break;
              }
              uint64_t v35 = (void *)(a5 + 16 * v31);
              BOOL v36 = *v35 == v28 && v35[1] == v27;
              if (v36 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                goto LABEL_17;
              }
            }
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v37 = swift_bridgeObjectRelease();
        char v38 = (uint64_t (**)(void))((char *)a6->isa + 288);
        uint64_t v39 = *v38;
        a5 = (unint64_t)v38;
        p_ivar_lyt = a6;
        Swift::Int v40 = (void *)((uint64_t (*)(uint64_t))*v38)(v37);
        if (v40) {
          break;
        }
LABEL_33:
        swift_release();
LABEL_34:
        uint64_t v20 = v139;
        if (v18 == v133) {
          goto LABEL_58;
        }
      }
      id v41 = v40;
      p_ivar_lyt = &ThirdPartyMediaColorEffectView.ivar_lyt;
      id v42 = [v40 name];
      if (!v42)
      {
        swift_unknownObjectRelease();
        goto LABEL_33;
      }
      uint64_t v43 = v42;
      uint64_t v131 = v39;
      Swift::Int v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      Swift::Int v46 = v45;

      a3 = *v130;
      swift_bridgeObjectRetain();
      id v47 = [v41 name];
      if (!v47)
      {
        __break(1u);
        return;
      }
      char v48 = v47;
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      a5 = v50;

      p_ivar_lyt = specialized Set.contains(_:)(v49, a5, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (p_ivar_lyt)
      {
        swift_unknownObjectRelease();
        goto LABEL_31;
      }
      if (specialized static MOSuggestionAssetCacheManager.shouldDropUninterestingPOI(_:mapItem:location:)(a4, v41))
      {
        if (v129)
        {
          swift_bridgeObjectRetain();
          uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v51 > 2)
          {
LABEL_39:
            a3 = 1;
            a5 = 1;
            goto LABEL_47;
          }
        }
        else if (*(uint64_t *)(v122 + 16) > 2)
        {
          goto LABEL_39;
        }
      }
      if ((*((double (**)(void))a6->isa + 45))() > 0.9 && v131())
      {
        swift_unknownObjectRelease();
        swift_beginAccess();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((uint64_t)v137->isa & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((uint64_t)v137->isa & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v52 = swift_endAccess();
        Swift::Int v53 = v136(v52);
        Swift::Int v55 = v54;
        swift_beginAccess();
        specialized Set._Variant.insert(_:)(&v142, v53, v55);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        specialized Set._Variant.insert(_:)(&v142, v44, v46);
        swift_endAccess();
        swift_bridgeObjectRelease();
        a3 = 0;
        a5 = 0;
      }
      else
      {
        a5 = 0;
        a3 = 1;
      }
LABEL_47:
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v56 = type metadata accessor for Logger();
      __swift_project_value_buffer(v56, (uint64_t)static MOAngelLogger.assets);
      swift_retain_n();
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      p_ivar_lyt = Logger.logObject.getter();
      os_log_type_t v57 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(p_ivar_lyt, v57))
      {

        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release_n();
        goto LABEL_34;
      }
      log = p_ivar_lyt;
      unsigned int v125 = a3;
      a3 = swift_slowAlloc();
      v143[0] = swift_slowAlloc();
      *(_DWORD *)a3 = 134219266;
      int v126 = a5;
      uint64_t v58 = String.hashValue.getter();
      swift_bridgeObjectRelease();
      uint64_t v142 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(a3 + 12) = 2080;
      id v59 = [v41 _poiCategory];
      uint64_t v142 = (uint64_t)v59;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for GEOPOICategory?);
      uint64_t v60 = Optional.debugDescription.getter();
      unint64_t v62 = v61;

      uint64_t v142 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v60, v62, v143);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      uint64_t v63 = swift_bridgeObjectRelease();
      *(_WORD *)(a3 + 22) = 2048;
      v136(v63);
      uint64_t v64 = String.hashValue.getter();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v142 = v64;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(a3 + 32) = 1024;
      LODWORD(v142) = v126;
      uint64_t v65 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(a3 + 38) = 1024;
      if ((*((double (**)(uint64_t))a6->isa + 45))(v65) <= 0.9)
      {
        swift_release();
        int v68 = 0;
        uint64_t v20 = v139;
        id v67 = v133;
        a5 = v125;
      }
      else
      {
        uint64_t v66 = v131();
        swift_release();
        id v67 = v133;
        a5 = v125;
        if (v66)
        {
          swift_unknownObjectRelease();
          int v68 = 1;
        }
        else
        {
          int v68 = 0;
        }
        uint64_t v20 = v139;
      }
      LODWORD(v142) = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(a3 + 44) = 1024;
      LODWORD(v142) = a5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      p_ivar_lyt = log;
      _os_log_impl((void *)&_mh_execute_header, log, v57, "[POIClustering] mapItemName=%ld, mapItemPOICategory=%s, poiLocationName=%ld, shouldDropAirportInTrip=%{BOOL}d, shouldUseMarker=%{BOOL}d, shouldDropPOI=%{BOOL}d", (uint8_t *)a3, 0x32u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
      swift_unknownObjectRelease();

      if (v18 == v67)
      {
LABEL_58:
        swift_bridgeObjectRelease();
        a5 = v138;
        if (v129) {
          goto LABEL_77;
        }
LABEL_59:
        a3 = *(void *)((a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t v18 = (uint64_t *)v137;
        if (a3) {
          goto LABEL_60;
        }
        goto LABEL_78;
      }
    }
  }
  swift_bridgeObjectRelease();
  if (!v129) {
    goto LABEL_59;
  }
LABEL_77:
  swift_bridgeObjectRetain();
  a3 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v18 = (uint64_t *)v137;
  if (a3)
  {
LABEL_60:
    swift_beginAccess();
    uint64_t v69 = 4;
    uint64_t v135 = a3;
    do
    {
      p_ivar_lyt = (v69 - 4);
      if ((v138 & 0xC000000000000001) != 0)
      {
        uint64_t v70 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v71 = v69 - 3;
        if (__OFADD__(p_ivar_lyt, 1)) {
          goto LABEL_102;
        }
      }
      else
      {
        uint64_t v70 = *(void *)(v138 + 8 * v69);
        swift_retain();
        uint64_t v71 = v69 - 3;
        if (__OFADD__(p_ivar_lyt, 1)) {
          goto LABEL_102;
        }
      }
      a5 = *v20;
      a6 = *(NSObject **)(*(void *)v70 + 336);
      uint64_t v72 = swift_bridgeObjectRetain();
      uint64_t v73 = ((uint64_t (*)(uint64_t))a6)(v72);
      char v75 = specialized Set.contains(_:)(v73, v74, a5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v75 & 1) == 0)
      {
        swift_beginAccess();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
      }
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v76 = type metadata accessor for Logger();
      __swift_project_value_buffer(v76, (uint64_t)static MOAngelLogger.assets);
      swift_retain_n();
      uint64_t v77 = Logger.logObject.getter();
      os_log_type_t v78 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v77, v78))
      {
        a5 = swift_slowAlloc();
        *(_DWORD *)a5 = 134218240;
        ((void (*)(void))a6)();
        a6 = String.hashValue.getter();
        swift_release();
        swift_bridgeObjectRelease();
        *(void *)(a5 + 4) = a6;
        swift_release();
        *(_WORD *)(a5 + 12) = 1024;
        *(_DWORD *)(a5 + 14) = (v75 & 1) == 0;
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "[POIClustering] visitLocationName=%ld, shouldAddVisit=%{BOOL}d", (uint8_t *)a5, 0x12u);
        swift_slowDealloc();
        swift_release();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v20 = v139;
      ++v69;
      a3 = v135;
      uint64_t v18 = (uint64_t *)v137;
    }
    while (v71 != v135);
  }
LABEL_78:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if ((unint64_t)*v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v88 > 0) {
      goto LABEL_80;
    }
LABEL_105:
    a7(0);
    return;
  }
  if (*(uint64_t *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0) {
    goto LABEL_105;
  }
LABEL_80:
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v79 = type metadata accessor for Logger();
  __swift_project_value_buffer(v79, (uint64_t)static MOAngelLogger.assets);
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  uint64_t v80 = Logger.logObject.getter();
  LOBYTE(v81) = static os_log_type_t.info.getter();
  if (!os_log_type_enabled((os_log_t)v80, (os_log_type_t)v81))
  {

    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    goto LABEL_92;
  }
  uint64_t v82 = swift_slowAlloc();
  *(_DWORD *)uint64_t v82 = 134218496;
  swift_beginAccess();
  if ((unint64_t)*v18 >> 62) {
    goto LABEL_131;
  }
  uint64_t v83 = *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v141 = v83;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v82 + 12) = 2048;
    swift_beginAccess();
    if (*v121 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v84 = *(void *)((*v121 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v141 = v84;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v82 + 22) = 2048;
    if (v129)
    {
      swift_bridgeObjectRetain();
      uint64_t v85 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v85 = *(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v141 = v85;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v80, (os_log_type_t)v81, "[MOPOIAnnotationView] count %ld, poiCount=%ld, visitCount=%ld", (uint8_t *)v82, 0x20u);
    swift_slowDealloc();

LABEL_92:
    swift_beginAccess();
    uint64_t v80 = *v18;
    if ((unint64_t)*v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
      if (!v82)
      {
LABEL_107:
        swift_bridgeObjectRelease();
        uint64_t v81 = _swiftEmptyArrayStorage;
        goto LABEL_108;
      }
    }
    else
    {
      uint64_t v82 = *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v82) {
        goto LABEL_107;
      }
    }
    double v140 = _swiftEmptyArrayStorage;
    uint64_t v81 = (double *)&v140;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v82 < 0)
    {
      __break(1u);
      goto LABEL_130;
    }
    uint64_t v86 = 0;
    do
    {
      if ((v80 & 0xC000000000000001) != 0)
      {
        uint64_t v87 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v87 = *(void *)(v80 + 8 * v86 + 32);
        swift_retain();
      }
      ++v86;
      (*(void (**)(void))(*(void *)v87 + 536))();
      swift_release();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v82 != v86);
    uint64_t v81 = v140;
    swift_bridgeObjectRelease();
    uint64_t v18 = (uint64_t *)v137;
LABEL_108:
    swift_beginAccess();
    uint64_t *v18 = (uint64_t)v81;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v82 = *v18;
    if ((unint64_t)*v18 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v80 = _CocoaArrayWrapper.endIndex.getter();
      if (!v80)
      {
LABEL_122:
        id v90 = (char *)_swiftEmptyArrayStorage;
        goto LABEL_123;
      }
    }
    else
    {
      uint64_t v80 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v80) {
        goto LABEL_122;
      }
    }
    if (v80 >= 1) {
      break;
    }
LABEL_130:
    __break(1u);
LABEL_131:
    swift_bridgeObjectRetain();
    uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v89 = 0;
  id v90 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if ((v82 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    unint64_t v91 = MOMapLocation.transferrableMetadata.getter();
    swift_release();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v90 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v90 + 2) + 1, 1, v90);
    }
    unint64_t v93 = *((void *)v90 + 2);
    unint64_t v92 = *((void *)v90 + 3);
    if (v93 >= v92 >> 1) {
      id v90 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((char *)(v92 > 1), v93 + 1, 1, v90);
    }
    ++v89;
    *((void *)v90 + 2) = v93 + 1;
    *(void *)&v90[8 * v93 + 32] = v91;
  }
  while (v80 != v89);
LABEL_123:
  swift_bridgeObjectRelease_n();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any?)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DA390;
  uint64_t v95 = (void *)MOSuggestionAssetMetadataKeyMultiPinMapLocations;
  *(void *)(inited + 32) = MOSuggestionAssetMetadataKeyMultiPinMapLocations;
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [[MOSuggestionAssetMetadataKey : Any?]]);
  *(void *)(inited + 40) = v90;
  uint64_t v97 = (void *)MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
  *(void *)(inited + 64) = v96;
  *(void *)(inited + 72) = v97;
  swift_beginAccess();
  uint64_t countAndFlagsBits = specialized Collection.first.getter(*(void *)(a9 + 16));
  *(void *)(inited + 104) = &type metadata for String;
  if (v98)
  {
    object = v98;
    id v101 = v95;
    id v102 = v97;
  }
  else
  {
    int v103 = self;
    id v104 = v95;
    id v105 = v97;
    id v106 = [v103 mainBundle];
    v144._object = (void *)0x80000001001EB080;
    v107._uint64_t countAndFlagsBits = 0x206E776F6E6B6E55;
    v107._object = (void *)0xEC00000061657241;
    v108._uint64_t countAndFlagsBits = 0;
    v108._object = (void *)0xE000000000000000;
    v144._uint64_t countAndFlagsBits = 0xD000000000000051;
    Swift::String v109 = NSLocalizedString(_:tableName:bundle:value:comment:)(v107, (Swift::String_optional)(unint64_t)countAndFlagsBits, (NSBundle)v106, v108, v144);
    uint64_t countAndFlagsBits = v109._countAndFlagsBits;
    object = v109._object;
  }
  *(void *)(inited + 80) = countAndFlagsBits;
  *(void *)(inited + 88) = object;
  unint64_t v110 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  if ((a10 - 2) > 8u)
  {
    id v115 = [objc_allocWithZone((Class)NSNull) init];
    uint64_t v116 = MOSuggestionAssetsTypeMultiPinMap;
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
    id v117 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v115 type:v116 contentClassType:swift_getObjCClassFromMetadata()];

    (*(void (**)(void))(*(void *)a13 + 288))();
    NSString v118 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v117 addIdentifier:v118];

    specialized _dictionaryUpCast<A, B, C, D>(_:)(v110);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v117 addMetadata:isa];

    id v120 = v117;
    a7(v117);
  }
  else
  {
    swift_beginAccess();
    uint64_t v111 = (uint64_t)v137->isa;
    uint64_t v112 = swift_allocObject();
    swift_weakInit();
    uint64_t v113 = (void *)swift_allocObject();
    v113[2] = a13;
    v113[3] = v110;
    v113[4] = v112;
    v113[5] = a7;
    v113[6] = a8;
    char v114 = *(void (**)(uint64_t, void, uint64_t (*)(uint64_t), void *))(*(void *)a11 + 184);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    v114(v111, a10, partial apply for closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:), v113);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
}

void closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *))
{
  if (a1)
  {
    NSString v9 = *(void (**)(void))(*(void *)a2 + 288);
    id v10 = a1;
    v9();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 addIdentifier:v11];

    specialized _dictionaryUpCast<A, B, C, D>(_:)(a3);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v10 addMetadata:isa];

    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      id v14 = *(id *)(Strong + 16);
      uint64_t v15 = swift_release();
      ((void (*)(uint64_t))v9)(v15);
      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v14 setObject:v10 forKey:v16 cost:10];
    }
    id v17 = v10;
    a5(a1);
  }
  else
  {
    uint64_t v18 = (*(uint64_t (**)(void))(*(void *)a2 + 312))();
    uint64_t v20 = v19;
    type metadata accessor for MOSuggestionGenericFallBackInfo();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 24) = 0;
    *(void *)(v21 + 16) = 0;
    swift_beginAccess();
    *(void *)(v21 + 16) = v18;
    *(void *)(v21 + 24) = v20;
    swift_bridgeObjectRelease();
    MOSuggestionGenericFallBackInfo.description()();
    BOOL v22 = *(uint64_t (**)(uint64_t))(*(void *)a2 + 120);
    uint64_t v23 = swift_retain();
    uint64_t v24 = (void *)v22(v23);
    id v25 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v21 type:v24 contentClassType:swift_getObjCClassFromMetadata()];
    swift_release();

    id v17 = v25;
    a5(v25);
    swift_release();
  }
}

uint64_t closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  NSString v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (one-time initialization token for defaultQueue != -1) {
    swift_once();
  }
  v15[0] = static MOSuggestionAssetCacheManager.defaultQueue;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  aBlock[4] = partial apply for thunk for @callee_guaranteed () -> ();
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = thunk for @escaping @callee_guaranteed () -> ();
  uint64_t aBlock[3] = &block_descriptor_215;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

uint64_t closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t (*a11)(uint64_t))
{
  uint64_t v91 = a8;
  uint64_t v92 = a3;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date??);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v90 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  unint64_t v93 = (char *)&v83 - v24;
  id v25 = (void *)(a2 + 16);
  swift_beginAccess();
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v29 = a10;
  *id v25 = v28;
  if (a1)
  {
    uint64_t v87 = v25;
    unint64_t v88 = a10;
    uint64_t v30 = a5 + 16;
    unint64_t v31 = (uint64_t *)(a6 + 16);
    uint64_t v89 = a1;
    swift_unknownObjectRetain();
    id v32 = [a4 name];
    uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v86 = v33;

    id v34 = [a4 name];
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    swift_beginAccess();
    if (*(void *)(*(void *)v30 + 16)) {
      specialized __RawDictionaryStorage.find<A>(_:)(v35, v37);
    }
    char v38 = (uint64_t *)(a7 + 16);
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v39 = [a4 name];
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    swift_beginAccess();
    uint64_t v43 = *v31;
    if (*(void *)(*v31 + 16) && (unint64_t v44 = specialized __RawDictionaryStorage.find<A>(_:)(v40, v42), (v45 & 1) != 0))
    {
      Swift::Int v46 = (uint64_t *)(*(void *)(v43 + 56) + 16 * v44);
      uint64_t v47 = *v46;
      uint64_t v84 = v46[1];
      uint64_t v85 = v47;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v84 = 0;
      uint64_t v85 = 0;
    }
    char v48 = (uint64_t *)(v91 + 16);
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v49 = [a4 name];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = v51;

    swift_beginAccess();
    uint64_t v53 = *v38;
    if (*(void *)(*v38 + 16) && (unint64_t v54 = specialized __RawDictionaryStorage.find<A>(_:)(v50, v52), (v55 & 1) != 0))
    {
      uint64_t v56 = (uint64_t *)(*(void *)(v53 + 56) + 16 * v54);
      uint64_t v57 = *v56;
      uint64_t v58 = v56[1];
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v58) {
        uint64_t v59 = v57;
      }
      else {
        uint64_t v59 = 0;
      }
      uint64_t v91 = v59;
    }
    else
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v91 = 0;
      uint64_t v58 = 0;
    }
    id v60 = [a4 name];
    uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v63 = v62;

    swift_beginAccess();
    uint64_t v64 = *v48;
    if (*(void *)(*v48 + 16) && (unint64_t v65 = specialized __RawDictionaryStorage.find<A>(_:)(v61, v63), (v66 & 1) != 0))
    {
      outlined init with copy of Date?(*(void *)(v64 + 56) + *(void *)(v21 + 72) * v65, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for Date?);
      uint64_t v67 = 0;
    }
    else
    {
      uint64_t v67 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, v67, 1, v20);
    swift_bridgeObjectRelease();
    swift_endAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      outlined destroy of Any?((uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for Date??);
      id v25 = v87;
      uint64_t v68 = (uint64_t)v93;
    }
    else
    {
      uint64_t v69 = v90;
      outlined init with take of Date?((uint64_t)v19, v90, (uint64_t *)&demangling cache variable for type metadata for Date?);
      uint64_t v70 = type metadata accessor for Date();
      uint64_t v71 = *(void *)(v70 - 8);
      int v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70);
      id v25 = v87;
      uint64_t v68 = (uint64_t)v93;
      if (v72 != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v93, v69, v70);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
        goto LABEL_26;
      }
      outlined destroy of Any?(v69, (uint64_t *)&demangling cache variable for type metadata for Date?);
    }
    uint64_t v73 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v68, 1, 1, v73);
LABEL_26:
    uint64_t v74 = (void *)(v92 + 16);
    id v75 = [a4 name];
    uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v78 = v77;

    swift_beginAccess();
    if (*(void *)(*(void *)(a9 + 16) + 16)) {
      specialized __RawDictionaryStorage.find<A>(_:)(v76, v78);
    }
    uint64_t v79 = v83;
    swift_bridgeObjectRelease();
    type metadata accessor for MOMapLocation();
    swift_endAccess();
    uint64_t v80 = (void *)swift_unknownObjectRetain();
    MOMapLocation.__allocating_init(fromGEOMapItem:title:confidenceLevel:enclosingArea:poiCategory:startDate:horizontalUncertainty:)(v80, v79, v86, v85, v84, v91, v58, v68);
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    swift_unknownObjectRelease();
    unint64_t v29 = v88;
  }
  uint64_t result = swift_beginAccess();
  a6 = *v25;
  if (!(v29 >> 62))
  {
    if (a6 != *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return result;
    }
    return a11(result);
  }
LABEL_36:
  swift_bridgeObjectRetain();
  uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (a6 != v82) {
    return result;
  }
  return a11(result);
}

void closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a1)
  {
    uint64_t v5 = *(void (**)(void))(*(void *)a2 + 288);
    id v6 = a1;
    v5();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v6 addIdentifier:v7];

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any)>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001DA0F0;
    uint64_t v9 = (void *)MOSuggestionAssetMetadataKeyLinkPreviewGeneratedDate;
    *(void *)(inited + 32) = MOSuggestionAssetMetadataKeyLinkPreviewGeneratedDate;
    *(void *)(inited + 64) = type metadata accessor for Date();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 40));
    id v10 = v9;
    Date.init(timeIntervalSinceReferenceDate:)();
    unint64_t v11 = specialized Dictionary.init(dictionaryLiteral:)(inited);
    specialized _dictionaryUpCast<A, B, C, D>(_:)(v11);
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 addMetadata:isa];

    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    if (Strong)
    {
      id v14 = *(id *)(Strong + 16);
      uint64_t v15 = swift_release();
      ((void (*)(uint64_t))v5)(v15);
      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v14 setObject:v6 forKey:v16 cost:1];
    }
    id v17 = v6;
    ((void (*)(void *))a4)(a1);
  }
  else
  {
    a4();
  }
}

void *MOEventBundle._orderedAssetReferences()()
{
  uint64_t v1 = v0;
  uint64_t v252 = type metadata accessor for UUID();
  uint64_t v241 = *(void *)(v252 - 8);
  __chkstk_darwin(v252);
  uint64_t v248 = (char *)v231 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [v0 resources];
  if (v3)
  {
    uint64_t v4 = v3;
    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOResource);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5 >> 62) {
      goto LABEL_123;
    }
    id v6 = (void *)(v5 & 0xFFFFFFFFFFFFFF8);
    if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v257 = (uint64_t)_swiftEmptyArrayStorage;
      unint64_t v258 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v255 = -1;
      unint64_t v256 = (unint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      while (1)
      {
        v259[0] = v6;
        specialized MutableCollection<>.sort(by:)((uint64_t *)v259);
        swift_bridgeObjectRelease();
        unint64_t v7 = (unint64_t)v259[0];
        uint64_t v235 = 0;
        if (((unint64_t)v259[0] & 0x8000000000000000) != 0
          || ((unint64_t)v259[0] & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
          swift_release();
        }
        else
        {
          uint64_t v8 = *((void *)v259[0] + 2);
        }
        uint64_t v9 = &off_1001D7000;
        if (!v8) {
          break;
        }
        unint64_t v249 = v7 & 0xC000000000000001;
        swift_beginAccess();
        uint64_t v10 = 0;
        id v11 = 0;
        id v238 = 0;
        id v240 = (void (**)(char *, uint64_t))(v241 + 8);
        v242 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v241 + 56);
        os_log_t v12 = (os_log_t)_swiftEmptyArrayStorage;
        uint64_t v236 = -1;
        long long v233 = (char *)&type metadata for Any + 8;
        CFStringRef v234 = @"MOActivityMetaDataMotionType";
        *(void *)&long long v13 = 134218242;
        long long v239 = v13;
        *(void *)&long long v13 = 136315394;
        long long v232 = v13;
        v231[1] = (char *)&type metadata for Swift.AnyObject + 8;
        uint64_t v237 = -1;
        v244 = (void (**)(char *, uint64_t))v7;
        id v245 = v1;
        id v247 = (void *)v8;
        while (1)
        {
          id v15 = v249 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v7 + 8 * v10 + 32);
          NSString v16 = v15;
          id v14 = (void *)(v10 + 1);
          if (__OFADD__(v10, 1)) {
            break;
          }
          [v15 priorityScore];
          id v253 = (char *)(v10 + 1);
          if (v17 >= 20000.0)
          {
            os_log_t v250 = v12;
            id v251 = (void *)v10;
            if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
              swift_once();
            }
            uint64_t v27 = type metadata accessor for Logger();
            __swift_project_value_buffer(v27, (uint64_t)static MOAngelLogger.assets);
            id v28 = v1;
            id v29 = v16;
            uint64_t v30 = Logger.logObject.getter();
            os_log_type_t v31 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v30, v31))
            {
              uint64_t v32 = swift_slowAlloc();
              *(void *)&long long v243 = swift_slowAlloc();
              v259[0] = (id)v243;
              *(_DWORD *)uint64_t v32 = v239;
              *(void *)(v32 + 4) = [v29 type];

              *(_WORD *)(v32 + 12) = 2080;
              id v33 = [v28 bundleIdentifier];
              id v246 = v11;
              id v34 = v248;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)();

              _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v35 = v252;
              uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
              unint64_t v38 = v37;
              id v39 = v34;
              id v11 = v246;
              uint64_t v40 = v35;
              uint64_t v9 = &off_1001D7000;
              (*v240)(v39, v40);
              *(void *)(v32 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v36, v38, (uint64_t *)v259);

              unint64_t v7 = (unint64_t)v244;
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v30, v31, "[MOEventBundle] Filtering out resource type=%lu, bundleIdentifier=%s", (uint8_t *)v32, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            os_log_t v12 = v250;
            uint64_t v1 = v245;
LABEL_12:
            uint64_t v8 = (uint64_t)v247;
            uint64_t v10 = (uint64_t)v251;
          }
          else
          {
            switch((unint64_t)[v16 type])
            {
              case 2uLL:
                id v246 = v11;
                uint64_t v18 = (objc_class *)v10;
                id v19 = MOResource.photoType.getter();
                if (v19)
                {
                  uint64_t v20 = v19;
                  type metadata accessor for MOSuggestionAssetReference(0);
                  uint64_t v21 = (objc_class *)swift_allocObject();
                  *((void *)v21 + 5) = 0;
                  *((void *)v21 + 4) = 0;
                  (*v242)((uint64_t)v21 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v252);
                  *(void *)((char *)v21 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v16;
                  swift_beginAccess();
                  *((void *)v21 + 4) = 0;
                  *((void *)v21 + 5) = 0;
                  id v22 = v16;
                  id v23 = v20;
                  swift_bridgeObjectRelease();
                  *((void *)v21 + 2) = v23;
                  *((void *)v21 + 3) = 0;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, (int64_t)v12[2].isa + 1, 1, v12);
                  }
                  unint64_t isa = (unint64_t)v12[2].isa;
                  unint64_t v24 = (unint64_t)v12[3].isa;
                  if (isa >= v24 >> 1) {
                    os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v24 > 1), isa + 1, 1, v12);
                  }
                  v12[2].unint64_t isa = (Class)(isa + 1);
                  uint64_t v26 = &v12[2 * isa];
                  v26[4].unint64_t isa = v21;
                  v26[5].unint64_t isa = v18;

                  uint64_t v10 = (uint64_t)v18;
                  uint64_t v9 = &off_1001D7000;
LABEL_75:
                  unint64_t v7 = (unint64_t)v244;
                  id v11 = v246;
                  uint64_t v8 = (uint64_t)v247;
                }
                else
                {

                  id v11 = v246;
                }
                break;
              case 3uLL:
                id v41 = v11;
                uint64_t v42 = (objc_class *)v10;
                uint64_t v43 = (void *)MOSuggestionAssetsTypeMediaCoverArt;
                type metadata accessor for MOSuggestionAssetReference(0);
                unint64_t v44 = (void *)swift_allocObject();
                v44[5] = 0;
                v44[4] = 0;
                char v45 = v44 + 4;
                (*v242)((uint64_t)v44 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v252);
                *(void *)((char *)v44 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v16;
                goto LABEL_49;
              case 4uLL:
                id v41 = v11;
                uint64_t v42 = (objc_class *)v10;
                uint64_t v43 = (void *)MOSuggestionAssetsTypeLinkPreview;
                type metadata accessor for MOSuggestionAssetReference(0);
                unint64_t v44 = (void *)swift_allocObject();
                v44[5] = 0;
                v44[4] = 0;
                char v45 = v44 + 4;
                (*v242)((uint64_t)v44 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v252);
                *(void *)((char *)v44 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v16;
                goto LABEL_49;
              case 6uLL:
                id v66 = v16;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v257 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v257 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                uint64_t v8 = (uint64_t)v247;
                uint64_t v1 = v245;
                break;
              case 7uLL:
                id v41 = v11;
                uint64_t v42 = (objc_class *)v10;
                uint64_t v43 = (void *)MOSuggestionAssetsTypeAppIcon;
                type metadata accessor for MOSuggestionAssetReference(0);
                unint64_t v44 = (void *)swift_allocObject();
                v44[5] = 0;
                v44[4] = 0;
                char v45 = v44 + 4;
                (*v242)((uint64_t)v44 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v252);
                *(void *)((char *)v44 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v16;
                goto LABEL_49;
              case 9uLL:
                id v246 = v11;
                id v251 = (void *)v10;
                id v46 = [v1 promptLanguages];
                if (v46)
                {
                  uint64_t v47 = v46;
                  uint64_t v48 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
                }
                else
                {
                  uint64_t v48 = 0;
                }
                type metadata accessor for MOEvergreenAssetReference(0);
                uint64_t v98 = (objc_class *)swift_allocObject();
                *(void *)((char *)v98 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts) = 0;
                uint64_t v99 = (void *)MOSuggestionAssetsTypeReflectionPrompt;
                *((void *)v98 + 5) = 0;
                *((void *)v98 + 4) = 0;
                (*v242)((uint64_t)v98 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v252);
                *(void *)((char *)v98 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v16;
                swift_beginAccess();
                *((void *)v98 + 4) = 0;
                *((void *)v98 + 5) = 0;
                id v100 = v16;
                id v101 = v99;
                swift_bridgeObjectRelease();
                *((void *)v98 + 2) = v101;
                *((void *)v98 + 3) = 0;
                id v102 = (uint64_t *)((char *)v98 + OBJC_IVAR____TtC16MomentsUIService25MOEvergreenAssetReference_prompts);
                swift_beginAccess();
                *id v102 = v48;
                swift_bridgeObjectRelease();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, (int64_t)v12[2].isa + 1, 1, v12);
                }
                uint64_t v9 = &off_1001D7000;
                unint64_t v104 = (unint64_t)v12[2].isa;
                unint64_t v103 = (unint64_t)v12[3].isa;
                if (v104 >= v103 >> 1) {
                  os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v103 > 1), v104 + 1, 1, v12);
                }
                v12[2].unint64_t isa = (Class)(v104 + 1);
                id v105 = &v12[2 * v104];
                uint64_t v10 = (uint64_t)v251;
                v105[4].unint64_t isa = v98;
                v105[5].unint64_t isa = (Class)v10;

                goto LABEL_75;
              case 0xAuLL:
                id v251 = (void *)v10;
                if (v255 == -1)
                {
                  uint64_t v255 = (uint64_t)v251;
                  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
                    swift_once();
                  }
                  uint64_t v49 = type metadata accessor for Logger();
                  __swift_project_value_buffer(v49, (uint64_t)static MOAngelLogger.assets);
                  id v50 = v1;
                  uint64_t v51 = Logger.logObject.getter();
                  os_log_type_t v52 = static os_log_type_t.debug.getter();
                  int v53 = v52;
                  if (os_log_type_enabled(v51, v52))
                  {
                    uint64_t v54 = swift_slowAlloc();
                    os_log_t v250 = v12;
                    uint64_t v55 = v54;
                    id v246 = (id)swift_slowAlloc();
                    v259[0] = v246;
                    *(_DWORD *)uint64_t v55 = v232;
                    id v56 = [v50 bundleIdentifier];
                    LODWORD(v243) = v53;
                    id v57 = v56;
                    uint64_t v58 = v248;
                    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

                    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
                    id v59 = v11;
                    uint64_t v60 = v252;
                    uint64_t v61 = dispatch thunk of CustomStringConvertible.description.getter();
                    unint64_t v63 = v62;
                    uint64_t v64 = v58;
                    uint64_t v1 = v245;
                    uint64_t v65 = v60;
                    id v11 = v59;
                    uint64_t v9 = &off_1001D7000;
                    (*v240)(v64, v65);
                    *(void *)(v55 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v61, v63, (uint64_t *)v259);

                    unint64_t v7 = (unint64_t)v244;
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v55 + 12) = 2048;
                    *(void *)(v55 + 14) = v255;
                    _os_log_impl((void *)&_mh_execute_header, v51, (os_log_type_t)v243, "[MOEventBundle] (debug) bundleIdentifier=%s setting singleWorkoutIndex=%ld", (uint8_t *)v55, 0x16u);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    os_log_t v12 = v250;
                    swift_slowDealloc();
                  }
                  else
                  {
                  }
                }
                id v111 = v16;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v256 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v256 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                goto LABEL_12;
              case 0xBuLL:
                if ([v1 bundleSuperType] != (id)3) {
                  goto LABEL_44;
                }
                id v41 = v11;
                uint64_t v42 = (objc_class *)v10;
                uint64_t v43 = (void *)MOSuggestionAssetsTypeContactPhoto;
                type metadata accessor for MOSuggestionAssetReference(0);
                unint64_t v44 = (void *)swift_allocObject();
                v44[5] = 0;
                v44[4] = 0;
                char v45 = v44 + 4;
                (*v242)((uint64_t)v44 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v252);
                *(void *)((char *)v44 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v16;
LABEL_49:
                swift_beginAccess();
                *char v45 = 0;
                v44[5] = 0;
                id v67 = v16;
                id v68 = v43;
                swift_bridgeObjectRelease();
                v44[2] = v68;
                v44[3] = 0;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, (int64_t)v12[2].isa + 1, 1, v12);
                }
                unint64_t v70 = (unint64_t)v12[2].isa;
                unint64_t v69 = (unint64_t)v12[3].isa;
                if (v70 >= v69 >> 1) {
                  os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v69 > 1), v70 + 1, 1, v12);
                }
                v12[2].unint64_t isa = (Class)(v70 + 1);
                uint64_t v71 = &v12[2 * v70];
                v71[4].unint64_t isa = (Class)v44;
                v71[5].unint64_t isa = v42;
                uint64_t v10 = (uint64_t)v42;

                unint64_t v7 = (unint64_t)v244;
                uint64_t v8 = (uint64_t)v247;
LABEL_54:
                id v11 = v41;
                uint64_t v9 = &off_1001D7000;
                break;
              case 0xCuLL:
                id v41 = v11;
                uint64_t v96 = v236;
                if (v236 == -1) {
                  uint64_t v96 = v10;
                }
                uint64_t v236 = v96;
                id v97 = v16;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                uint64_t v8 = (uint64_t)v247;
                goto LABEL_54;
              case 0xDuLL:
                uint64_t v72 = v237;
                id v251 = (void *)v10;
                if (v237 == -1) {
                  uint64_t v72 = v10;
                }
                uint64_t v237 = v72;
                uint64_t v73 = (void *)MOSuggestionAssetsTypeMotionActivity;
                type metadata accessor for MOSuggestionAssetReference(0);
                uint64_t v74 = (objc_class *)swift_allocObject();
                *((void *)v74 + 5) = 0;
                *((void *)v74 + 4) = 0;
                (*v242)((uint64_t)v74 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v252);
                id v75 = (id *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource);
                *(void *)((char *)v74 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v16;
                swift_beginAccess();
                *((void *)v74 + 4) = 0;
                *((void *)v74 + 5) = 0;
                uint64_t v76 = v16;
                id v77 = v73;
                swift_bridgeObjectRelease();
                *((void *)v74 + 2) = v77;
                *((void *)v74 + 3) = 0;
                swift_beginAccess();
                id v78 = *v75;
                id v79 = [v78 data];
                if (!v79)
                {

                  id v11 = 0;
                  uint64_t v9 = &off_1001D7000;
                  unint64_t v7 = (unint64_t)v244;
                  goto LABEL_78;
                }
                uint64_t v80 = v79;
                os_log_t v250 = v76;
                uint64_t v81 = v12;
                uint64_t v82 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v84 = v83;

                uint64_t v85 = self;
                Class v86 = Data._bridgeToObjectiveC()().super.isa;
                v259[0] = 0;
                id v87 = [v85 JSONObjectWithData:v86 options:0 error:v259];

                if (!v87)
                {
                  id v106 = v11;
                  id v107 = v259[0];
                  _convertNSErrorToError(_:)();

                  swift_willThrow();
                  outlined consume of Data._Representation(v82, v84);
                  swift_errorRelease();

                  id v11 = 0;
                  uint64_t v235 = 0;
LABEL_81:
                  uint64_t v9 = &off_1001D7000;
                  os_log_t v12 = v81;
                  unint64_t v7 = (unint64_t)v244;
                  goto LABEL_82;
                }
                id v88 = v259[0];
                _bridgeAnyObjectToAny(_:)();
                outlined consume of Data._Representation(v82, v84);
                swift_unknownObjectRelease();
                __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
                if ((swift_dynamicCast() & 1) == 0)
                {

                  id v11 = 0;
                  goto LABEL_81;
                }
                uint64_t v89 = v261;

                uint64_t v90 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v9 = &off_1001D7000;
                os_log_t v12 = v81;
                unint64_t v7 = (unint64_t)v244;
                if (*(void *)(v89 + 16))
                {
                  unint64_t v92 = specialized __RawDictionaryStorage.find<A>(_:)(v90, v91);
                  uint64_t v76 = v250;
                  if (v93)
                  {
                    uint64_t v94 = *(void **)(*(void *)(v89 + 56) + 8 * v92);
                    swift_unknownObjectRetain();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v259[0] = v94;
                    type metadata accessor for MOWorkoutMotionActivityAction(0);
                    if (swift_dynamicCast())
                    {
                      uint64_t v95 = (void *)v261;

                      id v11 = v95;
LABEL_78:
                      uint64_t v10 = (uint64_t)v251;
                      goto LABEL_83;
                    }
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }

                  id v11 = 0;
                  goto LABEL_78;
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                id v11 = 0;
LABEL_82:
                uint64_t v76 = v250;
                uint64_t v10 = (uint64_t)v251;
LABEL_83:
                swift_retain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, (int64_t)v12[2].isa + 1, 1, v12);
                }
                unint64_t v109 = (unint64_t)v12[2].isa;
                unint64_t v108 = (unint64_t)v12[3].isa;
                if (v109 >= v108 >> 1) {
                  os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v108 > 1), v109 + 1, 1, v12);
                }
                v12[2].unint64_t isa = (Class)(v109 + 1);
                unint64_t v110 = &v12[2 * v109];
                v110[4].unint64_t isa = v74;
                v110[5].unint64_t isa = (Class)v10;
                swift_release();

                uint64_t v1 = v245;
                uint64_t v8 = (uint64_t)v247;
                break;
              case 0xEuLL:

                id v238 = v16;
                goto LABEL_14;
              case 0x10uLL:
                id v41 = v11;
                uint64_t v42 = (objc_class *)v10;
                uint64_t v43 = (void *)MOSuggestionAssetsTypeStateOfMindAsset;
                type metadata accessor for MOSuggestionAssetReference(0);
                unint64_t v44 = (void *)swift_allocObject();
                v44[5] = 0;
                v44[4] = 0;
                char v45 = v44 + 4;
                (*v242)((uint64_t)v44 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v252);
                *(void *)((char *)v44 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v16;
                goto LABEL_49;
              default:
LABEL_44:

                goto LABEL_14;
            }
          }
          id v14 = v253;
LABEL_14:
          ++v10;
          if (v14 == (void *)v8)
          {
            swift_release();
            unint64_t v112 = v256;
            if (!(v256 >> 62)) {
              goto LABEL_96;
            }
LABEL_100:
            swift_bridgeObjectRetain();
            uint64_t v114 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v114 < 2) {
              goto LABEL_101;
            }
LABEL_97:
            if ([v1 interfaceType] != (id)12) {
              goto LABEL_101;
            }
            unint64_t v113 = [v1 bundleSubType] == (id)202;
            goto LABEL_102;
          }
        }
        __break(1u);
LABEL_123:
        swift_bridgeObjectRetain();
        uint64_t v129 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v129) {
          goto LABEL_125;
        }
        uint64_t v257 = (uint64_t)_swiftEmptyArrayStorage;
        unint64_t v258 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v255 = -1;
        unint64_t v256 = (unint64_t)_swiftEmptyArrayStorage;
        unint64_t v130 = swift_bridgeObjectRetain();
        id v6 = specialized _copyCollectionToContiguousArray<A>(_:)(v130);
        swift_bridgeObjectRelease();
      }
      swift_release();
      id v11 = 0;
      id v238 = 0;
      uint64_t v236 = -1;
      unint64_t v112 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v237 = -1;
      os_log_t v12 = (os_log_t)_swiftEmptyArrayStorage;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
        goto LABEL_100;
      }
LABEL_96:
      if (*(uint64_t *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2) {
        goto LABEL_97;
      }
LABEL_101:
      unint64_t v113 = 0;
LABEL_102:
      unint64_t v115 = v258;
      if (v258 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v116 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v116 = *(void *)((v258 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v116 < 1) {
        char v117 = 1;
      }
      else {
        char v117 = v113;
      }
      if (v117)
      {
LABEL_141:
        if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
          swift_once();
        }
        uint64_t v153 = type metadata accessor for Logger();
        uint64_t v154 = __swift_project_value_buffer(v153, (uint64_t)static MOAngelLogger.assets);
        uint64_t v155 = (void *)v255;
        id v156 = v1;
        id v157 = Logger.logObject.getter();
        os_log_type_t v158 = static os_log_type_t.debug.getter();
        uint64_t v159 = v158;
        BOOL v160 = os_log_type_enabled(v157, v158);
        id v245 = (void *)v154;
        id v246 = v11;
        if (v160)
        {
          uint64_t v161 = swift_slowAlloc();
          id v251 = v155;
          uint64_t v162 = v161;
          uint64_t v163 = (char *)swift_slowAlloc();
          os_log_t v250 = v12;
          id v253 = v163;
          v259[0] = v163;
          *(_DWORD *)uint64_t v162 = *((void *)v9 + 425);
          id v164 = [v156 bundleIdentifier];
          NSString v165 = v248;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v166 = v252;
          uint64_t v167 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v169 = v168;
          (*(void (**)(char *, uint64_t))(v241 + 8))(v165, v166);
          uint64_t v261 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v167, v169, (uint64_t *)v259);
          uint64_t v9 = &off_1001D7000;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v162 + 12) = 2048;
          uint64_t v261 = (uint64_t)v251;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v157, (os_log_type_t)v159, "[MOEventBundle] (debug) bundleIdentifier=%s singleWorkoutIndex=%ld", (uint8_t *)v162, 0x16u);
          swift_arrayDestroy();
          os_log_t v12 = v250;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v170 = v256;
        if (v256 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v185 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v185 >= 2) {
            goto LABEL_148;
          }
          swift_bridgeObjectRetain();
          id v171 = (id)_CocoaArrayWrapper.endIndex.getter();
          if (v171) {
            goto LABEL_154;
          }
        }
        else
        {
          id v171 = *(id *)((v256 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if ((unint64_t)v171 > 1)
          {
LABEL_148:
            type metadata accessor for MOWorkoutGroupAssetReference(0);
            swift_allocObject();
            unint64_t v172 = swift_bridgeObjectRetain();
            uint64_t v173 = MOWorkoutGroupAssetReference.init(workoutResources:)(v172);
            swift_beginAccess();
            uint64_t v174 = v255;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, (int64_t)v12[2].isa + 1, 1, v12);
            }
            unint64_t v176 = (unint64_t)v12[2].isa;
            unint64_t v175 = (unint64_t)v12[3].isa;
            if (v176 >= v175 >> 1) {
              os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v175 > 1), v176 + 1, 1, v12);
            }
            v12[2].unint64_t isa = (Class)(v176 + 1);
            uint64_t v177 = &v12[2 * v176];
            v177[4].unint64_t isa = (Class)v173;
            v177[5].unint64_t isa = (Class)v174;
            swift_release();
            goto LABEL_164;
          }
          swift_bridgeObjectRetain();
          if (v171)
          {
LABEL_154:
            if ((v170 & 0xC000000000000001) != 0)
            {
              id v178 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (!*(void *)((v170 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_183;
              }
              id v178 = *(id *)(v170 + 32);
            }
            id v179 = v178;
            swift_bridgeObjectRelease();
            id v180 = (void *)MOSuggestionAssetsTypeWorkout;
            type metadata accessor for MOSuggestionAssetReference(0);
            uint64_t v170 = swift_allocObject();
            *(void *)(v170 + 32) = 0;
            *(void *)(v170 + 40) = 0;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v241 + 56))(v170 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v252);
            *(void *)(v170 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v179;
            swift_beginAccess();
            *(void *)(v170 + 32) = 0;
            *(void *)(v170 + 40) = 0;
            id v171 = v179;
            id v181 = v180;
            swift_bridgeObjectRelease();
            *(void *)(v170 + 16) = v181;
            *(void *)(v170 + 24) = 0;
            swift_beginAccess();
            uint64_t v159 = v255;
            if (swift_isUniquelyReferenced_nonNull_native())
            {
LABEL_158:
              unint64_t v183 = (unint64_t)v12[2].isa;
              unint64_t v182 = (unint64_t)v12[3].isa;
              if (v183 >= v182 >> 1) {
                os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v182 > 1), v183 + 1, 1, v12);
              }
              v12[2].unint64_t isa = (Class)(v183 + 1);
              NSString v184 = &v12[2 * v183];
              v184[4].unint64_t isa = (Class)v170;
              v184[5].unint64_t isa = (Class)v159;

              uint64_t v9 = &off_1001D7000;
              goto LABEL_164;
            }
LABEL_183:
            os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, (int64_t)v12[2].isa + 1, 1, v12);
            goto LABEL_158;
          }
        }
        swift_bridgeObjectRelease();
LABEL_164:
        p_unint64_t isa = &v12->isa;
        swift_bridgeObjectRetain_n();
        uint64_t v186 = v235;
        specialized MutableCollection<>.sort(by:)((uint64_t *)&p_isa, (uint64_t (*)(uint64_t))specialized _ContiguousArrayBuffer._consumeAndCreateNew(), specialized UnsafeMutableBufferPointer._stableSortImpl(by:));
        if (v186)
        {
          swift_release();
          __break(1u);
          JUMPOUT(0x1001B86A4);
        }
        swift_bridgeObjectRelease_n();
        uint64_t v187 = p_isa;
        swift_retain_n();
        id v188 = v156;
        os_log_type_t v189 = Logger.logObject.getter();
        os_log_type_t v190 = static os_log_type_t.default.getter();
        int v191 = v190;
        BOOL v192 = os_log_type_enabled(v189, v190);
        id v247 = v187;
        if (v192)
        {
          uint64_t v193 = swift_slowAlloc();
          p_unint64_t isa = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v193 = *((void *)v9 + 425);
          id v194 = [v188 bundleIdentifier];
          LODWORD(v253) = v191;
          id v195 = v194;
          id v196 = v248;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v197 = v252;
          uint64_t v198 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v200 = v199;
          (*(void (**)(char *, uint64_t))(v241 + 8))(v196, v197);
          uint64_t v254 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v198, v200, (uint64_t *)&p_isa);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v193 + 12) = 2048;
          uint64_t v201 = v247[2];
          swift_release();
          uint64_t v254 = v201;
          uint64_t v187 = v247;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v189, (os_log_type_t)v253, "[MOEventBundle] Building asset references bundleIdentifier=%s expectedAssetReferenceCount=%ld", (uint8_t *)v193, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        unint64_t v202 = v188;
        long long v203 = (char *)v187[2];
        if (!v203) {
          goto LABEL_178;
        }
        v244 = (void (**)(char *, uint64_t))(v241 + 8);
        swift_retain();
        uint64_t v204 = 4;
        *(void *)&long long v205 = 136315650;
        long long v243 = v205;
        v242 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&type metadata for Any + 8);
        do
        {
          uint64_t v206 = v187[v204];
          swift_retain_n();
          id v207 = v202;
          uint64_t v208 = Logger.logObject.getter();
          os_log_type_t v209 = static os_log_type_t.info.getter();
          int v210 = v209;
          if (os_log_type_enabled(v208, v209))
          {
            uint64_t v211 = swift_slowAlloc();
            id v251 = (void *)swift_slowAlloc();
            p_unint64_t isa = v251;
            *(_DWORD *)uint64_t v211 = v243;
            id v212 = [v207 bundleIdentifier];
            os_log_t v250 = v208;
            id v213 = v212;
            uint64_t v214 = v248;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
            LODWORD(v249) = v210;
            uint64_t v215 = v252;
            uint64_t v216 = dispatch thunk of CustomStringConvertible.description.getter();
            id v253 = v203;
            uint64_t v217 = v202;
            unint64_t v219 = v218;
            (*v244)(v214, v215);
            *(void *)(v211 + 4) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v216, v219, (uint64_t *)&p_isa);

            unint64_t v202 = v217;
            long long v203 = v253;
            uint64_t v220 = swift_bridgeObjectRelease();
            *(_WORD *)(v211 + 12) = 2080;
            uint64_t v221 = (*(uint64_t (**)(uint64_t))(*(void *)v206 + 312))(v220);
            *(void *)(v211 + 14) = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v221, v222, (uint64_t *)&p_isa);
            swift_release_n();
            uint64_t v223 = swift_bridgeObjectRelease();
            *(_WORD *)(v211 + 22) = 2048;
            unint64_t v224 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v206 + 216))(v223);
            [v224 priorityScore];
            uint64_t v226 = v225;

            *(void *)(v211 + 24) = v226;
            swift_release_n();
            os_log_t v227 = v250;
            _os_log_impl((void *)&_mh_execute_header, v250, (os_log_type_t)v249, "[MOEventBundle] (bundleIdentifier=%s) -- expected asset reference: %s priorityScore: %f", (uint8_t *)v211, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v187 = v247;
            swift_slowDealloc();
            swift_release();
          }
          else
          {

            swift_release_n();
          }
          v204 += 2;
          --v203;
        }
        while (v203);
        swift_release();
        uint64_t v228 = v187[2];
        if (v228)
        {
          p_unint64_t isa = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          uint64_t v229 = 32;
          do
          {
            swift_retain();
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            v229 += 16;
            --v228;
          }
          while (v228);
          uint64_t v142 = p_isa;
          swift_release();
        }
        else
        {
LABEL_178:
          swift_release();

          uint64_t v142 = _swiftEmptyArrayStorage;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return v142;
      }
      if (v237 == -1)
      {
LABEL_136:
        id v143 = v11;
        uint64_t v144 = v257;
        id v145 = v238;
        id v146 = v238;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v147 = [v1 interfaceType];
        type metadata accessor for MOMultiMapAssetReference(0);
        swift_allocObject();
        uint64_t v148 = (objc_class *)specialized MOMultiMapAssetReference.init(locationResources:weatherResource:pointOfInterestResources:bundleType:)(v115, v145, v144, (uint64_t)v147);

        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, (int64_t)v12[2].isa + 1, 1, v12);
        }
        unint64_t v150 = (unint64_t)v12[2].isa;
        unint64_t v149 = (unint64_t)v12[3].isa;
        id v11 = v143;
        if (v150 >= v149 >> 1) {
          os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v149 > 1), v150 + 1, 1, v12);
        }
        uint64_t v9 = &off_1001D7000;
        v12[2].unint64_t isa = (Class)(v150 + 1);
        uint64_t v151 = &v12[2 * v150];
        uint64_t v152 = v236;
        v151[4].unint64_t isa = v148;
        v151[5].unint64_t isa = (Class)v152;
        swift_release();
        goto LABEL_141;
      }
      if (v115 >> 62)
      {
        swift_bridgeObjectRetain();
        id v118 = (id)_CocoaArrayWrapper.endIndex.getter();
        if (v118)
        {
LABEL_111:
          if ((v115 & 0xC000000000000001) != 0)
          {
            id v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_186:
              os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, (int64_t)v12[2].isa + 1, 1, v12);
LABEL_118:
              unint64_t v126 = (unint64_t)v12[2].isa;
              unint64_t v125 = (unint64_t)v12[3].isa;
              if (v126 >= v125 >> 1) {
                os_log_t v12 = (os_log_t)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)((void *)(v125 > 1), v126 + 1, 1, v12);
              }
              v12[2].unint64_t isa = (Class)(v126 + 1);
              os_log_type_t v127 = &v12[2 * v126];
              uint64_t v128 = v237;
              v127[4].unint64_t isa = (Class)v115;
              v127[5].unint64_t isa = (Class)v128;

              uint64_t v9 = &off_1001D7000;
              goto LABEL_141;
            }
            id v119 = *(id *)(v115 + 32);
          }
          id v120 = v119;
          swift_bridgeObjectRelease();
          id v121 = [v120 placeName];
          if (v121)
          {
            uint64_t v122 = v121;

            goto LABEL_136;
          }
          if (!v11)
          {

            goto LABEL_136;
          }
          type metadata accessor for MOGenericMapAssetReference(0);
          unint64_t v115 = swift_allocObject();
          *(void *)(v115 + OBJC_IVAR____TtC16MomentsUIService26MOGenericMapAssetReference_associatedMotionType) = v11;
          double v123 = (void *)MOSuggestionAssetsTypeGenericMap;
          *(void *)(v115 + 32) = 0;
          *(void *)(v115 + 40) = 0;
          (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v241 + 56))(v115 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID, 1, 1, v252);
          *(void *)(v115 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v120;
          swift_beginAccess();
          *(void *)(v115 + 32) = 0;
          *(void *)(v115 + 40) = 0;
          unint64_t v113 = (unint64_t)v11;
          id v118 = v120;
          id v124 = v123;
          swift_bridgeObjectRelease();
          *(void *)(v115 + 16) = v124;
          *(void *)(v115 + 24) = 0;

          if (swift_isUniquelyReferenced_nonNull_native()) {
            goto LABEL_118;
          }
          goto LABEL_186;
        }
      }
      else
      {
        id v118 = *(id *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v118) {
          goto LABEL_111;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_136;
    }
LABEL_125:
    swift_bridgeObjectRelease();
  }
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v131 = type metadata accessor for Logger();
  __swift_project_value_buffer(v131, (uint64_t)static MOAngelLogger.assets);
  id v132 = v1;
  os_log_type_t v133 = Logger.logObject.getter();
  os_log_type_t v134 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v133, v134))
  {
    uint64_t v135 = (uint8_t *)swift_slowAlloc();
    id v253 = (char *)swift_slowAlloc();
    v259[0] = v253;
    *(_DWORD *)uint64_t v135 = 136315138;
    id v251 = v135 + 4;
    id v136 = [v132 bundleIdentifier];
    uint64_t v137 = v248;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v138 = v252;
    uint64_t v139 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v141 = v140;
    (*(void (**)(char *, uint64_t))(v241 + 8))(v137, v138);
    uint64_t v262 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v139, v141, (uint64_t *)v259);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v133, v134, "[MOEventBundle] No assets for bundleIdentifier=%s", v135, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

BOOL closure #1 in MOEventBundle.typeSortedAssetReferencesForInterstitial.getter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)*a1 + 120);
  unint64_t v5 = (void *)v4();
  id v107 = (id)specialized static MOSuggestionAssetReference.consolidatedType(_:)((uint64_t)v5);

  id v6 = *(uint64_t (**)(void))(*(void *)v3 + 120);
  unint64_t v7 = (void *)v6();
  id v106 = (id)specialized static MOSuggestionAssetReference.consolidatedType(_:)((uint64_t)v7);

  uint64_t v105 = v2;
  uint64_t v8 = v4;
  uint64_t v9 = (void *)v4();
  uint64_t v104 = v3;
  uint64_t v10 = (void *)v6();
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
  {

    uint64_t v18 = v8;
    uint64_t v19 = v105;
LABEL_15:
    uint64_t v17 = swift_bridgeObjectRelease_n();
LABEL_16:
    int v53 = (void *)((uint64_t (*)(uint64_t))v18)(v17);
    uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v56 = v55;
    if (v54 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v56 == v57)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v59 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0)
      {
        uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v62 = v61;
        if (v60 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v62 == v63) {
          goto LABEL_23;
        }
        char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v74) {
          goto LABEL_38;
        }
        uint64_t v75 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v77 = v76;
        if (v75 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v77 == v78)
        {
LABEL_23:
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v79 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v79 & 1) == 0)
          {
            uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v96 = v95;
            if (v94 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v96 == v97)
            {

              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v98 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v98 & 1) == 0) {
                goto LABEL_54;
              }
            }
LABEL_39:
            uint64_t v80 = (*(uint64_t (**)(void))(*(void *)v19 + 256))();
            if (v80)
            {
              uint64_t v81 = v80;
              uint64_t v82 = (*(uint64_t (**)(void))(*(void *)v104 + 256))();
              if (!v82) {
                goto LABEL_53;
              }
              uint64_t v83 = v82;
              uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              if (*(void *)(v81 + 16))
              {
                specialized __RawDictionaryStorage.find<A>(_:)(v84, v85);
                if (v86)
                {
                  swift_unknownObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (swift_dynamicCast())
                  {
                    uint64_t v87 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    if (*(void *)(v83 + 16))
                    {
                      specialized __RawDictionaryStorage.find<A>(_:)(v87, v88);
                      if (v89)
                      {
                        swift_unknownObjectRetain();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();

                        if (swift_dynamicCast()) {
                          return 0;
                        }
                        return 0;
                      }
                    }
LABEL_52:
                    swift_bridgeObjectRelease();
                    goto LABEL_53;
                  }
                  goto LABEL_53;
                }
              }
              goto LABEL_48;
            }
            goto LABEL_54;
          }
        }
LABEL_38:

        goto LABEL_39;
      }
    }

    uint64_t v64 = (*(uint64_t (**)(void))(*(void *)v19 + 256))();
    if (v64)
    {
      uint64_t v65 = v64;
      uint64_t v66 = (*(uint64_t (**)(void))(*(void *)v104 + 256))();
      if (!v66) {
        goto LABEL_53;
      }
      uint64_t v67 = v66;
      uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (*(void *)(v65 + 16))
      {
        specialized __RawDictionaryStorage.find<A>(_:)(v68, v69);
        if (v70)
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (swift_dynamicCast())
          {
            uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            if (*(void *)(v67 + 16))
            {
              specialized __RawDictionaryStorage.find<A>(_:)(v71, v72);
              if (v73)
              {
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                if (swift_dynamicCast()) {
                  return 0;
                }
                return 0;
              }
            }
            goto LABEL_52;
          }
LABEL_53:
          swift_bridgeObjectRelease();
          goto LABEL_54;
        }
      }
LABEL_48:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v90 = v106;
LABEL_55:

      return 0;
    }
LABEL_54:

    uint64_t v90 = v107;
    goto LABEL_55;
  }
  unint64_t v103 = v6;
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  uint64_t v17 = swift_bridgeObjectRelease();
  uint64_t v18 = v8;
  uint64_t v19 = v105;
  if (v16) {
    goto LABEL_16;
  }
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;
  if (v20 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v22 == v23) {
    goto LABEL_15;
  }
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<MOSuggestionAssetsType>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DB460;
  uint64_t v27 = (void *)MOSuggestionAssetsTypeMultiPinMap;
  *(void *)(inited + 32) = MOSuggestionAssetsTypeMultiPinMap;
  id v28 = (void *)MOSuggestionAssetsTypeVideo;
  id v29 = (void *)MOSuggestionAssetsTypeLivePhoto;
  *(void *)(inited + 40) = MOSuggestionAssetsTypeVideo;
  *(void *)(inited + 48) = v29;
  uint64_t v30 = (void *)MOSuggestionAssetsTypePhoto;
  os_log_type_t v31 = (void *)MOSuggestionAssetsTypeWorkoutGroup;
  *(void *)(inited + 56) = MOSuggestionAssetsTypePhoto;
  *(void *)(inited + 64) = v31;
  uint64_t v32 = (void *)MOSuggestionAssetsTypeWorkout;
  uint64_t v33 = MOSuggestionAssetsTypeContactPhoto;
  id v100 = (void *)MOSuggestionAssetsTypeContactPhoto;
  *(void *)(inited + 72) = MOSuggestionAssetsTypeWorkout;
  *(void *)(inited + 80) = v33;
  uint64_t v99 = (void *)MOSuggestionAssetsTypeMotionActivity;
  uint64_t v34 = MOSuggestionAssetsTypeGenericMap;
  id v101 = (void *)MOSuggestionAssetsTypeGenericMap;
  *(void *)(inited + 88) = MOSuggestionAssetsTypeMotionActivity;
  *(void *)(inited + 96) = v34;
  id v102 = (void *)MOSuggestionAssetsTypeMediaCoverArt;
  *(void *)(inited + 104) = MOSuggestionAssetsTypeMediaCoverArt;
  id v35 = v27;
  id v36 = v28;
  id v37 = v29;
  id v38 = v30;
  id v39 = v31;
  id v40 = v32;
  id v41 = v100;
  id v42 = v99;
  id v43 = v101;
  unint64_t v44 = (void *)((uint64_t (*)(void *))v8)(v102);
  uint64_t v45 = specialized Collection<>.firstIndex(of:)((uint64_t)v44, inited);
  char v47 = v46;

  if ((v47 & 1) == 0)
  {
    uint64_t v48 = (void *)v103();
    uint64_t v49 = specialized Collection<>.firstIndex(of:)((uint64_t)v48, inited);
    char v51 = v50;

    if ((v51 & 1) == 0)
    {

      swift_setDeallocating();
      type metadata accessor for MOSuggestionAssetsType(0);
      swift_arrayDestroy();
      return v45 < v49;
    }
  }
  uint64_t v91 = (void *)v103();
  specialized Collection<>.firstIndex(of:)((uint64_t)v91, inited);
  char v93 = v92;

  swift_setDeallocating();
  type metadata accessor for MOSuggestionAssetsType(0);
  swift_arrayDestroy();
  return (v93 & 1) == 0;
}

void *MOEventBundle.uniqueAssetTypes.getter()
{
  unint64_t v0 = (unint64_t)MOEventBundle.orderedAssetReferencesForPreview(max:)(13);
  uint64_t result = &_swiftEmptySetSingleton;
  if (!v0) {
    return result;
  }
  unint64_t v7 = &_swiftEmptySetSingleton;
  if (!(v0 >> 62))
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return &_swiftEmptySetSingleton;
  }
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = (uint64_t)result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_4:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = 0;
    do
    {
      if ((v0 & 0xC000000000000001) != 0)
      {
        uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v4 = *(void *)(v0 + 8 * v3 + 32);
        swift_retain();
      }
      ++v3;
      unint64_t v5 = (void *)(*(uint64_t (**)(void))(*(void *)v4 + 120))();
      specialized Set._Variant.insert(_:)(&v6, v5);
      swift_release();
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

id MOResource.photoType.getter()
{
  uint64_t v1 = v0;
  id v2 = [v0 data];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;

    unint64_t v7 = self;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    v38[0] = 0;
    id v9 = [v7 JSONObjectWithData:isa options:0 error:v38];

    if (v9)
    {
      id v10 = v38[0];
      _bridgeAnyObjectToAny(_:)();
      outlined consume of Data._Representation(v4, v6);
      swift_unknownObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
      if (swift_dynamicCast())
      {
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        if (v37[2] && (unint64_t v13 = specialized __RawDictionaryStorage.find<A>(_:)(v11, v12), (v14 & 1) != 0))
        {
          id v15 = *(void **)(v37[7] + 8 * v13);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v38[0] = v15;
          type metadata accessor for MOPhotoResourceType(0);
          if (swift_dynamicCast())
          {
            uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v18 = v17;
            if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
            {
              swift_bridgeObjectRelease_n();
LABEL_15:
              char v25 = (id *)&MOSuggestionAssetsTypePhoto;
LABEL_21:
              id v22 = *v25;

              return v22;
            }
            char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v24) {
              goto LABEL_15;
            }
            uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v28 = v27;
            if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29)
            {
              swift_bridgeObjectRelease_n();
LABEL_20:
              char v25 = (id *)&MOSuggestionAssetsTypeLivePhoto;
              goto LABEL_21;
            }
            char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v30) {
              goto LABEL_20;
            }
            uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v33 = v32;
            if (v31 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v33 == v34)
            {
              swift_bridgeObjectRelease_n();
LABEL_26:
              char v25 = (id *)&MOSuggestionAssetsTypeVideo;
              goto LABEL_21;
            }
            char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v35) {
              goto LABEL_26;
            }

            return 0;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
    }
    else
    {
      id v20 = v38[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      outlined consume of Data._Representation(v4, v6);
      swift_errorRelease();
    }
  }
  id v21 = [v1 assets];
  if (!v21) {
    return 0;
  }

  id v22 = (id)MOSuggestionAssetsTypePhoto;
  id v23 = MOSuggestionAssetsTypePhoto;
  return v22;
}

Swift::Bool __swiftcall MOEventBundle.isSingleAssetType()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v62 = *(void *)(v2 - 8);
  uint64_t v63 = v2;
  __chkstk_darwin(v2);
  uint64_t v61 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = (unint64_t)MOEventBundle._orderedAssetReferences()();
  if (!v4)
  {
LABEL_17:
    if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
      goto LABEL_44;
    }
    goto LABEL_18;
  }
  unint64_t v5 = v4;
  uint64_t v6 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v4 >> 62)
  {
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (!v7) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  unint64_t v64 = v5 & 0xC000000000000001;
  uint64_t v65 = v7;
  if ((v5 & 0xC000000000000001) != 0)
  {
    uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v58 = *(uint64_t (**)(void))(*(void *)v12 + 120);
    uint64_t v11 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    id v10 = v58;
    uint64_t v9 = *v11;
  }
  else
  {
    if (!*(void *)(v6 + 16))
    {
      __break(1u);
      goto LABEL_49;
    }
    uint64_t v8 = *(void *)(v5 + 32);
    uint64_t v9 = *(void *)v8;
    id v10 = *(uint64_t (**)(void))(*(void *)v8 + 120);
    uint64_t v11 = (uint64_t *)swift_retain_n();
    uint64_t v12 = v8;
  }
  unint64_t v13 = (void *)(*(uint64_t (**)(uint64_t *))(v9 + 120))(v11);
  uint64_t v66 = (uint8_t *)v12;
  char v14 = v10;
  id v15 = (void *)v10();
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v21 & 1) == 0)
    {
LABEL_37:
      swift_bridgeObjectRelease();
      if (serverManager._connectionProperties == (NSMutableDictionary *)-1)
      {
LABEL_38:
        uint64_t v47 = type metadata accessor for Logger();
        __swift_project_value_buffer(v47, (uint64_t)static MOAngelLogger.assets);
        id v48 = v1;
        uint64_t v49 = Logger.logObject.getter();
        os_log_type_t v50 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v49, v50))
        {
          char v51 = (uint8_t *)swift_slowAlloc();
          uint64_t v65 = swift_slowAlloc();
          uint64_t v68 = v65;
          *(_DWORD *)char v51 = 136315138;
          unint64_t v64 = (unint64_t)(v51 + 4);
          id v52 = [v48 bundleIdentifier];
          int v53 = v61;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v54 = v63;
          uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v57 = v56;
          (*(void (**)(char *, uint64_t))(v62 + 8))(v53, v54);
          uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v55, v57, &v68);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v49, v50, "[MOEventBundle] isSingleAssetType=false bundleIdentifier=%s", v51, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_release();
          swift_release();
        }
        else
        {

          swift_release();
          swift_release();
        }
        return 0;
      }
LABEL_49:
      swift_once();
      goto LABEL_38;
    }
  }
  char v59 = v1;
  uint64_t v60 = v6;
  swift_release();
  if (v65 == 1)
  {
LABEL_15:
    swift_release();
    uint64_t v1 = v59;
    goto LABEL_16;
  }
  uint64_t v35 = 5;
  while (1)
  {
    unint64_t v36 = v35 - 4;
    if (!v64) {
      break;
    }
    uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    id v38 = v14;
    uint64_t v1 = (void *)(v35 - 3);
    if (__OFADD__(v36, 1)) {
      goto LABEL_42;
    }
LABEL_31:
    id v39 = (void *)(*(uint64_t (**)(void))(*(void *)v37 + 120))();
    id v40 = (void *)v38();
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v43 = v42;
    if (v41 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v43 == v44)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v46 & 1) == 0)
      {
        uint64_t v1 = v59;
        goto LABEL_37;
      }
    }
    swift_release();
    ++v35;
    if (v1 == (void *)v65) {
      goto LABEL_15;
    }
  }
  if (v36 >= *(void *)(v60 + 16)) {
    goto LABEL_43;
  }
  id v38 = v14;
  uint64_t v37 = *(void *)(v5 + 8 * v35);
  swift_retain();
  uint64_t v1 = (void *)(v35 - 3);
  if (!__OFADD__(v36, 1)) {
    goto LABEL_31;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  swift_once();
LABEL_18:
  uint64_t v22 = type metadata accessor for Logger();
  __swift_project_value_buffer(v22, (uint64_t)static MOAngelLogger.assets);
  id v23 = v1;
  char v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v66 = v26 + 4;
    id v27 = [v23 bundleIdentifier];
    uint64_t v28 = v61;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type UUID and conformance UUID, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v29 = v63;
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v32 = v31;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v28, v29);
    uint64_t v67 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v30, v32, &v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "[MOEventBundle] isSingleAssetType=true bundleIdentifier=%s", v26, 0xCu);
    Swift::Bool v33 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    return 1;
  }
  return v33;
}

uint64_t digest(input:)(void *a1)
{
  uint64_t v2 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)(v2 + 16) = 32;
  *(_OWORD *)(v2 + 32) = 0u;
  uint64_t v3 = (unsigned __int8 *)(v2 + 32);
  *(_OWORD *)(v2 + 48) = 0u;
  id v4 = a1;
  id v5 = [v4 bytes];
  unint64_t v6 = (unint64_t)[v4 length];
  if ((v6 & 0x8000000000000000) != 0 || HIDWORD(v6))
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    CC_SHA256(v5, v6, v3);
    id v7 = [objc_allocWithZone((Class)NSData) initWithBytes:v3 length:32];
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t hexStringFromData(input:)(void *a1)
{
  uint64_t v2 = specialized Array.init(repeating:count:)(0, (size_t)[a1 length]);
  id v3 = [a1 length];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v2 + 2), 0, v2);
  }
  [a1 getBytes:v2 + 4 length:v3];
  uint64_t v4 = *((void *)v2 + 2);
  if (v4)
  {
    uint64_t v5 = 0;
    do
    {
      char v6 = *((unsigned char *)v2 + v5++ + 32);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1001DA0F0;
      *(void *)(v7 + 56) = &type metadata for UInt8;
      *(void *)(v7 + 64) = &protocol witness table for UInt8;
      *(unsigned char *)(v7 + 32) = v6;
      v8._uint64_t countAndFlagsBits = String.init(format:_:)();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
  }
  swift_bridgeObjectRelease();
  return 0;
}

id @nonobjc MOSuggestionAssetMediaItem.init(title:albumTitle:artistName:albumArt:trackIdentifier:previewURL:mediaType:imageURL:bgColor:bgColorVariant:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14)
{
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v30 = a7;
  if (a9)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  id v20 = 0;
  if (v18(a10, 1, v16) != 1)
  {
    URL._bridgeToObjectiveC()(v19);
    id v20 = v21;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a10, v16);
  }
  if (v18(a12, 1, v16) == 1)
  {
    id v23 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v22);
    id v23 = v24;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a12, v16);
  }
  id v25 = [v29 initTitle:v28 albumTitle:v27 artistName:v31 albumArt:v30 trackIdentifier:v15 previewURL:v20 mediaType:a11 imageURL:v23 bgColor:a13 bgColorVariant:a14];

  return v25;
}

uint64_t specialized _merge<A>(low:mid:high:buffer:by:)(void **__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v5 = a2;
  char v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  id v39 = __src;
  id v38 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_46;
    }
    if (a4 != a2 || &a2[v12] <= a4) {
      memmove(a4, a2, 8 * v12);
    }
    id v23 = &a4[v12];
    uint64_t v37 = (char *)v23;
    id v39 = v5;
    if (v6 >= v5 || v10 < 8) {
      goto LABEL_45;
    }
    char v24 = (id *)(a3 - 8);
    id v25 = v5;
    while (1)
    {
      uint64_t v26 = v24 + 1;
      NSString v27 = v23 - 1;
      NSString v28 = *--v25;
      id v29 = *(v23 - 1);
      id v30 = v28;
      [v29 priorityScore];
      double v32 = v31;
      [v30 priorityScore];
      double v34 = v33;

      if (v32 < v34) {
        break;
      }
      uint64_t v37 = (char *)(v23 - 1);
      if (v26 < v23 || v24 >= v23)
      {
        *char v24 = *v27;
        id v25 = v5;
        --v23;
        goto LABEL_43;
      }
      if (v26 != v23) {
        *char v24 = *v27;
      }
      id v25 = v5;
      --v23;
      if (v5 <= v6) {
        goto LABEL_45;
      }
LABEL_44:
      --v24;
      uint64_t v5 = v25;
      if (v23 <= a4) {
        goto LABEL_45;
      }
    }
    if (v26 != v5 || v24 >= v5) {
      *char v24 = *v25;
    }
    id v39 = v25;
LABEL_43:
    if (v25 <= v6) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4) {
      memmove(a4, __src, 8 * v9);
    }
    unint64_t v13 = &a4[v9];
    uint64_t v37 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      char v14 = a4;
      do
      {
        NSString v15 = *v14;
        id v16 = *v5;
        id v17 = v15;
        [v16 priorityScore];
        double v19 = v18;
        [v17 priorityScore];
        double v21 = v20;

        if (v19 >= v21)
        {
          if (v6 != v14) {
            void *v6 = *v14;
          }
          id v38 = ++v14;
          uint64_t v22 = v5;
        }
        else
        {
          uint64_t v22 = v5 + 1;
          if (v6 < v5 || v6 >= v22 || v6 != v5) {
            void *v6 = *v5;
          }
        }
        ++v6;
        if (v14 >= v13) {
          break;
        }
        uint64_t v5 = v22;
      }
      while ((unint64_t)v22 < a3);
      id v39 = v6;
    }
LABEL_45:
    specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)((void **)&v39, (const void **)&v38, &v37);
    return 1;
  }
LABEL_46:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for MOSuggestionAssetMapsClusterer.Cluster);
}

{
  return specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(a1, a2, a3, type metadata accessor for MOSuggestionSheetAssetDateRange);
}

char *specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(void **a1, const void **a2, void *a3)
{
  id v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  uint64_t vars8;

  id v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  uint64_t vars8;

  id v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t specialized $defer #1 <A>() in _merge<A>(low:mid:high:buffer:by:)(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t type metadata accessor for MOSuggestionAssetCacheWorkoutInput()
{
  uint64_t result = type metadata singleton initialization cache for MOSuggestionAssetCacheWorkoutInput;
  if (!type metadata singleton initialization cache for MOSuggestionAssetCacheWorkoutInput) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001BC2BC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BC2F4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BC32C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

void partial apply for closure #2 in MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:)(UIImage a1)
{
  closure #2 in MOSuggestionAssetCacheManager.getPredefinedAppBgColorDict(predefinedColors:colorFallbackValue:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64), *(dispatch_group_t *)(v1 + 72));
}

uint64_t block_copy_helper_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_42()
{
  return swift_release();
}

uint64_t sub_1001BC3D8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001BC3E8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)()
{
  return closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void (**)(uint64_t, char *, uint64_t))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void (**)(void))(v0 + 72), *(void *)(v0 + 80));
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.preCache(_:)(uint64_t a1)
{
  closure #1 in MOSuggestionAssetCacheManager.preCache(_:)(a1, *(void **)(v1 + 16));
}

uint64_t outlined consume of Data?(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return outlined consume of Data._Representation(a1, a2);
  }
  return a1;
}

uint64_t _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t lazy protocol witness table accessor for type MOSuggestionAssetCacheManager.CachedAssetCost and conformance MOSuggestionAssetCacheManager.CachedAssetCost()
{
  unint64_t result = lazy protocol witness table cache variable for type MOSuggestionAssetCacheManager.CachedAssetCost and conformance MOSuggestionAssetCacheManager.CachedAssetCost;
  if (!lazy protocol witness table cache variable for type MOSuggestionAssetCacheManager.CachedAssetCost and conformance MOSuggestionAssetCacheManager.CachedAssetCost)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetCacheManager.CachedAssetCost and conformance MOSuggestionAssetCacheManager.CachedAssetCost);
  }
  return result;
}

uint64_t destroy for AppBgColor()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppBgColor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppBgColor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AppBgColor(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppBgColor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppBgColor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppBgColor()
{
  return &type metadata for AppBgColor;
}

uint64_t *initializeBufferWithCopyOfBuffer for MOSuggestionAssetCacheWorkoutInput(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[5];
    unint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    uint64_t v17 = a3[7];
    double v18 = (char *)a1 + v16;
    double v19 = (char *)a2 + v16;
    *(void *)double v18 = *(void *)v19;
    v18[8] = v19[8];
    *((unsigned char *)a1 + v17) = *((unsigned char *)a2 + v17);
  }
  return a1;
}

uint64_t destroy for MOSuggestionAssetCacheWorkoutInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

char *initializeWithCopy for MOSuggestionAssetCacheWorkoutInput(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  a1[v15] = a2[v15];
  return a1;
}

char *assignWithCopy for MOSuggestionAssetCacheWorkoutInput(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  double v19 = &a1[v18];
  double v20 = &a2[v18];
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)double v19 = v21;
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

char *initializeWithTake for MOSuggestionAssetCacheWorkoutInput(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[5];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a3[7];
  int v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(void *)int v16 = *(void *)v17;
  v16[8] = v17[8];
  a1[v15] = a2[v15];
  return a1;
}

char *assignWithTake for MOSuggestionAssetCacheWorkoutInput(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  uint64_t v18 = a3[6];
  uint64_t v19 = a3[7];
  double v20 = &a1[v18];
  uint64_t v21 = &a2[v18];
  *(void *)double v20 = *(void *)v21;
  v20[8] = v21[8];
  a1[v19] = a2[v19];
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetCacheWorkoutInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001BD3A8);
}

uint64_t sub_1001BD3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 2) {
      int v11 = ((v10 + 2147483646) & 0x7FFFFFFF) - 1;
    }
    else {
      int v11 = -2;
    }
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetCacheWorkoutInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001BD49C);
}

uint64_t sub_1001BD49C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  }
  return result;
}

void type metadata completion function for MOSuggestionAssetCacheWorkoutInput()
{
  type metadata accessor for Date?();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for MOSuggestionAssetCacheManager()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for MOSuggestionAssetCacheManager.CachedAssetCost(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001BD6ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetCacheManager.CachedAssetCost()
{
  return &type metadata for MOSuggestionAssetCacheManager.CachedAssetCost;
}

void *initializeBufferWithCopyOfBuffer for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder()
{
  return &type metadata for MOSuggestionAssetCacheManager.MOSuggestionAssetCompletionResultHolder;
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew()(void *a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, a1[2], 0, a1);
}

{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, a1[2], 0, a1);
}

{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, a1[2], 0, a1);
}

{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, a1[2], 0, a1);
}

uint64_t specialized _ContiguousArrayBuffer._consumeAndCreateNew()(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, (char *)a1);
}

{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

void specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(id), uint8_t *a11)
{
  uint64_t v19 = (void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
    return;
  }
  void *v19 = v22;
  if (v22 == a2)
  {
    swift_beginAccess();
    uint64_t v23 = *(void *)(a3 + 16);
    if (v23)
    {
      char v24 = (void **)(a4 + 16);
      swift_beginAccess();
      id v25 = *v24;
      swift_beginAccess();
      uint64_t v26 = *(void **)(a5 + 16);
      uint64_t v43 = a10;
      if ((a6 - 2) >= 9u)
      {
        if ((a6 & 1) != 0 || !v25) {
          goto LABEL_10;
        }
      }
      else if (!v25)
      {
LABEL_10:
        swift_beginAccess();
        id v27 = *(id *)(a7 + 16);
        goto LABEL_11;
      }
      id v27 = 0;
LABEL_11:
      id v28 = objc_allocWithZone((Class)MOSuggestionAssetWorkout);
      id v29 = v26;
      swift_retain();
      swift_bridgeObjectRetain();
      id v30 = v25;
      id v31 = [v28 init:0 route:v30 renderedRouteMap:v29 icon:v27];

      uint64_t v32 = MOSuggestionAssetsTypeWorkout;
      type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for MOSuggestionAssetWorkout);
      id v33 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v31 type:v32 contentClassType:swift_getObjCClassFromMetadata()];
      specialized _dictionaryUpCast<A, B, C, D>(_:)(v23);
      swift_bridgeObjectRelease();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v33 addMetadata:isa];

      uint64_t v35 = *(void (**)(void))(*(void *)a8 + 288);
      v35();
      NSString v36 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v33 addIdentifier:v36];

      if (a6 - 2 >= 6 && a6 - 9 >= 2)
      {
        swift_retain();
        specialized static MOSuggestionAssetCacheManager.wrapWorkoutAssetInURLIfNecessary(asset:cacheType:completion:)(v33, a6, a10, a11);

        swift_release_n();
      }
      else
      {
        swift_beginAccess();
        uint64_t Strong = swift_weakLoadStrong();
        if (Strong)
        {
          id v38 = *(id *)(Strong + 16);
          uint64_t v39 = swift_release();
          ((void (*)(uint64_t))v35)(v39);
          NSString v40 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          swift_beginAccess();
          if (*v24) {
            uint64_t v41 = 3;
          }
          else {
            uint64_t v41 = 1;
          }
          [v38 setObject:v33 forKey:v40 cost:v41 a10];
        }
        id v42 = v33;
        v43(v33);
        swift_release();
      }
    }
  }
}

unint64_t specialized static MOSuggestionAssetCacheManager.mappedLocationPreviewAssets(_:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [a1 assetType];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      return 0;
    }
  }
  id v132 = v8;
  uint64_t v133 = v5;
  unint64_t v139 = (unint64_t)_swiftEmptyArrayStorage;
  id v16 = [a1 metadata];
  uint64_t v17 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v18 = (void *)MOSuggestionAssetMetadataKeyMultiPinMapLocations;
  uint64_t v134 = MOSuggestionAssetMetadataKeyMultiPinMapLocations;
  type metadata accessor for MOSuggestionAssetMetadataKey(0);
  uint64_t v20 = v19;
  uint64_t v21 = _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, type metadata accessor for MOSuggestionAssetMetadataKey);
  id v22 = v18;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v17 + 16) && (unint64_t v23 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v135), (v24 & 1) != 0))
  {
    outlined init with copy of Any(*(void *)(v17 + 56) + 32 * v23, (uint64_t)&v137);
  }
  else
  {
    long long v137 = 0u;
    long long v138 = 0u;
  }
  swift_bridgeObjectRelease();
  outlined destroy of AnyHashable((uint64_t)&v135);
  if (*((void *)&v138 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [[MOSuggestionAssetMetadataKey : Any]]);
    if (swift_dynamicCast())
    {
      uint64_t v127 = v21;
      uint64_t v128 = v20;
      uint64_t v131 = v4;
      uint64_t v25 = v134;
      uint64_t v26 = *(void *)(v134 + 16);
      if (v26)
      {
        uint64_t v27 = 0;
        unint64_t v130 = (void (**)(long long *, void, uint64_t, uint64_t))(v6 + 56);
        unint64_t v125 = (void (**)(char *, long long *, uint64_t))(v6 + 32);
        unint64_t v126 = (unsigned int (**)(long long *, uint64_t, uint64_t))(v6 + 48);
        id v124 = (void (**)(char *, uint64_t))(v6 + 8);
        id v28 = (char *)&type metadata for Any + 8;
        long long v123 = xmmword_1001DDF40;
        while (1)
        {
          uint64_t v29 = *(void *)(v25 + 8 * v27 + 32);
          if (!*(void *)(v29 + 16)) {
            break;
          }
          id v30 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitLatitude;
          swift_bridgeObjectRetain();
          id v31 = v30;
          uint64_t v32 = specialized __RawDictionaryStorage.find<A>(_:)(v31);
          if (v33)
          {
            outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v32, (uint64_t)&v135);
          }
          else
          {
            long long v135 = 0u;
            long long v136 = 0u;
          }

          if (!*((void *)&v136 + 1)) {
            goto LABEL_35;
          }
          if (swift_dynamicCast())
          {
            if (!*(void *)(v29 + 16))
            {
              long long v135 = 0u;
              long long v136 = 0u;
LABEL_35:
              swift_bridgeObjectRelease();
              goto LABEL_36;
            }
            double v34 = *(double *)&v137;
            id v35 = MOSuggestionAssetMetadataKeyLocationPreviewVisitLongitude;
            uint64_t v36 = specialized __RawDictionaryStorage.find<A>(_:)(v35);
            if (v37)
            {
              outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v36, (uint64_t)&v135);
            }
            else
            {
              long long v135 = 0u;
              long long v136 = 0u;
            }

            if (!*((void *)&v136 + 1)) {
              goto LABEL_35;
            }
            if (swift_dynamicCast())
            {
              if (*(void *)(v29 + 16))
              {
                double v38 = *(double *)&v137;
                id v39 = MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
                uint64_t v40 = specialized __RawDictionaryStorage.find<A>(_:)(v39);
                if (v41)
                {
                  outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v40, (uint64_t)&v135);
                }
                else
                {
                  long long v135 = 0u;
                  long long v136 = 0u;
                }

                if (*((void *)&v136 + 1))
                {
                  uint64_t v44 = (long long *)v131;
                  uint64_t v45 = v133;
                  int v46 = swift_dynamicCast();
                  (*v130)(v44, v46 ^ 1u, 1, v45);
                  if ((*v126)(v44, 1, v45) != 1)
                  {
                    (*v125)(v132, v44, v133);
                    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any?)>);
                    uint64_t inited = (void *)swift_initStackObject();
                    *((_OWORD *)inited + 1) = v123;
                    id v48 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
                    uint64_t v129 = inited;
                    inited[4] = MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
                    if (*(void *)(v29 + 16))
                    {
                      uint64_t v122 = inited + 5;
                      id v49 = v48;
                      uint64_t v50 = specialized __RawDictionaryStorage.find<A>(_:)(v49);
                      if (v51)
                      {
                        outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v50, (uint64_t)v122);
                      }
                      else
                      {
                        int v53 = v122;
                        *uint64_t v122 = 0u;
                        v53[1] = 0u;
                      }
                    }
                    else
                    {
                      *(_OWORD *)(inited + 5) = 0u;
                      *(_OWORD *)(inited + 7) = 0u;
                      id v52 = v48;
                    }
                    uint64_t v54 = v129 + 10;
                    uint64_t v55 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
                    v129[9] = MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
                    if (*(void *)(v29 + 16))
                    {
                      uint64_t v122 = v54;
                      id v56 = v55;
                      uint64_t v57 = specialized __RawDictionaryStorage.find<A>(_:)(v56);
                      if (v58)
                      {
                        outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v57, (uint64_t)v122);
                      }
                      else
                      {
                        uint64_t v60 = v122;
                        *uint64_t v122 = 0u;
                        v60[1] = 0u;
                      }
                    }
                    else
                    {
                      *uint64_t v54 = 0u;
                      v54[1] = 0u;
                      id v59 = v55;
                    }
                    uint64_t v61 = v129 + 15;
                    uint64_t v62 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewCityName;
                    v129[14] = MOSuggestionAssetMetadataKeyLocationPreviewCityName;
                    if (*(void *)(v29 + 16))
                    {
                      uint64_t v122 = v61;
                      id v63 = v62;
                      uint64_t v64 = specialized __RawDictionaryStorage.find<A>(_:)(v63);
                      if (v65)
                      {
                        outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v64, (uint64_t)v122);
                      }
                      else
                      {
                        uint64_t v67 = v122;
                        *uint64_t v122 = 0u;
                        v67[1] = 0u;
                      }
                    }
                    else
                    {
                      _OWORD *v61 = 0u;
                      v61[1] = 0u;
                      id v66 = v62;
                    }
                    uint64_t v68 = v129 + 20;
                    uint64_t v69 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
                    v129[19] = MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
                    if (*(void *)(v29 + 16))
                    {
                      uint64_t v122 = v68;
                      id v70 = v69;
                      uint64_t v71 = specialized __RawDictionaryStorage.find<A>(_:)(v70);
                      if (v72)
                      {
                        outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v71, (uint64_t)v122);
                      }
                      else
                      {
                        char v74 = v122;
                        *uint64_t v122 = 0u;
                        v74[1] = 0u;
                      }
                    }
                    else
                    {
                      *uint64_t v68 = 0u;
                      v68[1] = 0u;
                      id v73 = v69;
                    }
                    uint64_t v75 = v129 + 25;
                    uint64_t v76 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
                    v129[24] = MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
                    if (*(void *)(v29 + 16))
                    {
                      uint64_t v122 = v75;
                      id v77 = v76;
                      uint64_t v78 = specialized __RawDictionaryStorage.find<A>(_:)(v77);
                      if (v79)
                      {
                        outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v78, (uint64_t)v122);
                      }
                      else
                      {
                        uint64_t v81 = v122;
                        *uint64_t v122 = 0u;
                        v81[1] = 0u;
                      }
                    }
                    else
                    {
                      *uint64_t v75 = 0u;
                      v75[1] = 0u;
                      id v80 = v76;
                    }
                    uint64_t v82 = v129 + 30;
                    uint64_t v83 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitMapItem;
                    v129[29] = MOSuggestionAssetMetadataKeyLocationPreviewVisitMapItem;
                    if (*(void *)(v29 + 16))
                    {
                      uint64_t v122 = v82;
                      id v84 = v83;
                      uint64_t v85 = specialized __RawDictionaryStorage.find<A>(_:)(v84);
                      if (v86)
                      {
                        outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v85, (uint64_t)v122);
                      }
                      else
                      {
                        uint64_t v88 = v122;
                        *uint64_t v122 = 0u;
                        v88[1] = 0u;
                      }
                    }
                    else
                    {
                      *uint64_t v82 = 0u;
                      v82[1] = 0u;
                      id v87 = v83;
                    }
                    uint64_t v122 = v129 + 35;
                    char v89 = (void *)MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
                    v129[34] = MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
                    id v90 = v89;
                    id v91 = [a1 metadata];
                    uint64_t v92 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                    *(void *)&long long v137 = MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
                    id v93 = MOSuggestionAssetMetadataKeyMultiPinMapRepresentativeArea;
                    AnyHashable.init<A>(_:)();
                    if (*(void *)(v92 + 16))
                    {
                      uint64_t v94 = v122;
                      unint64_t v95 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)&v135);
                      if (v96)
                      {
                        outlined init with copy of Any(*(void *)(v92 + 56) + 32 * v95, (uint64_t)v94);
                      }
                      else
                      {
                        *uint64_t v94 = 0u;
                        v94[1] = 0u;
                      }
                    }
                    else
                    {
                      uint64_t v97 = v122;
                      *uint64_t v122 = 0u;
                      v97[1] = 0u;
                    }
                    swift_bridgeObjectRelease();
                    outlined destroy of AnyHashable((uint64_t)&v135);
                    char v98 = v129 + 40;
                    uint64_t v99 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitHorizontalUncertainty;
                    v129[39] = MOSuggestionAssetMetadataKeyLocationPreviewVisitHorizontalUncertainty;
                    if (*(void *)(v29 + 16))
                    {
                      uint64_t v122 = v98;
                      id v100 = v99;
                      uint64_t v101 = specialized __RawDictionaryStorage.find<A>(_:)(v100);
                      if (v102)
                      {
                        outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v101, (uint64_t)v122);
                      }
                      else
                      {
                        uint64_t v104 = v122;
                        *uint64_t v122 = 0u;
                        v104[1] = 0u;
                      }
                    }
                    else
                    {
                      *char v98 = 0u;
                      v98[1] = 0u;
                      id v103 = v99;
                    }
                    uint64_t v129 = (void *)specialized Dictionary.init(dictionaryLiteral:)((uint64_t)v129);
                    if (*(void *)(v29 + 16))
                    {
                      id v105 = MOSuggestionAssetMetadataKeyLocationPreviewVisitHorizontalUncertainty;
                      uint64_t v106 = specialized __RawDictionaryStorage.find<A>(_:)(v105);
                      if (v107)
                      {
                        outlined init with copy of Any(*(void *)(v29 + 56) + 32 * v106, (uint64_t)&v135);
                      }
                      else
                      {
                        long long v135 = 0u;
                        long long v136 = 0u;
                      }
                    }
                    else
                    {
                      long long v135 = 0u;
                      long long v136 = 0u;
                    }
                    swift_bridgeObjectRelease();
                    id v121 = v28;
                    if (*((void *)&v136 + 1))
                    {
                      if (swift_dynamicCast())
                      {
                        double v108 = *(double *)&v137;
LABEL_102:
                        id v109 = objc_allocWithZone((Class)CLLocation);
                        Class isa = Date._bridgeToObjectiveC()().super.isa;
                        id v111 = [v109 initWithCoordinate:isa, v34, v38, 0.0, v108, 0.0];

                        uint64_t v112 = MOSuggestionAssetsTypeLocationPreview;
                        type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation);
                        id v113 = objc_allocWithZone((Class)MOSuggestionAsset);
                        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
                        uint64_t v122 = v111;
                        id v115 = [v113 init:v111 type:v112 contentClassType:ObjCClassFromMetadata];
                        specialized _dictionaryUpCast<A, B, C, D>(_:)((uint64_t)v129);
                        swift_bridgeObjectRelease();
                        Class v116 = Dictionary._bridgeToObjectiveC()().super.isa;
                        swift_bridgeObjectRelease();
                        [v115 addMetadata:v116];

                        id v117 = v115;
                        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                        if (*(void *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v139 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
                          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                        specialized Array._endMutation()();

                        (*v124)(v132, v133);
                        id v28 = v121;
                        goto LABEL_17;
                      }
                    }
                    else
                    {
                      outlined destroy of Any?((uint64_t)&v135, &demangling cache variable for type metadata for Any?);
                    }
                    double v108 = 0.0;
                    goto LABEL_102;
                  }
LABEL_46:
                  swift_bridgeObjectRelease();
                  id v42 = v44;
                  uint64_t v43 = (uint64_t *)&demangling cache variable for type metadata for Date?;
LABEL_37:
                  outlined destroy of Any?((uint64_t)v42, v43);
                  goto LABEL_17;
                }
              }
              else
              {
                long long v135 = 0u;
                long long v136 = 0u;
              }
              outlined destroy of Any?((uint64_t)&v135, &demangling cache variable for type metadata for Any?);
              uint64_t v44 = (long long *)v131;
              (*v130)((long long *)v131, 1, 1, v133);
              goto LABEL_46;
            }
          }
          swift_bridgeObjectRelease();
LABEL_17:
          if (v26 == ++v27) {
            goto LABEL_106;
          }
        }
        long long v135 = 0u;
        long long v136 = 0u;
LABEL_36:
        id v42 = &v135;
        uint64_t v43 = &demangling cache variable for type metadata for Any?;
        goto LABEL_37;
      }
LABEL_106:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    outlined destroy of Any?((uint64_t)&v137, &demangling cache variable for type metadata for Any?);
  }
  unint64_t v118 = v139;
  if (v139 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v120 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v120 >= 1) {
      return v118;
    }
    goto LABEL_109;
  }
  if (*(uint64_t *)((v139 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_109:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v118;
}

uint64_t specialized MOSuggestionAssetCacheManager.isInQueryList(_:reference:)(uint64_t a1, uint64_t a2)
{
  if (!a1) {
    return 1;
  }
  uint64_t v3 = *(uint64_t (**)(void))(*(void *)a2 + 120);
  uint64_t v4 = (void *)v3();
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
LABEL_16:

    id v21 = MOSuggestionAssetsTypePhoto;
    char v22 = specialized Sequence<>.contains(_:)((uint64_t)v21, a1);

    if (v22) {
      return 1;
    }
    id v23 = MOSuggestionAssetsTypeLivePhoto;
    char v24 = specialized Sequence<>.contains(_:)((uint64_t)v23, a1);

    if (v24) {
      return 1;
    }
    uint64_t v25 = (id *)&MOSuggestionAssetsTypeVideo;
    goto LABEL_19;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10) {
    goto LABEL_16;
  }
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;
  if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
LABEL_22:

    id v30 = MOSuggestionAssetsTypeWorkout;
    char v31 = specialized Sequence<>.contains(_:)((uint64_t)v30, a1);

    if (v31) {
      return 1;
    }
    id v32 = MOSuggestionAssetsTypeActivityRings;
    char v33 = specialized Sequence<>.contains(_:)((uint64_t)v32, a1);

    if (v33) {
      return 1;
    }
    uint64_t v25 = (id *)&MOSuggestionAssetsTypeRoutePreview;
    goto LABEL_19;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16) {
    goto LABEL_22;
  }
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;
  if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    uint64_t v35 = swift_bridgeObjectRelease();
    if ((v34 & 1) == 0)
    {
      id v26 = (id)((uint64_t (*)(uint64_t))v3)(v35);
      goto LABEL_20;
    }
  }
  id v36 = MOSuggestionAssetsTypeLocationPreview;
  char v37 = specialized Sequence<>.contains(_:)((uint64_t)v36, a1);

  if ((v37 & 1) == 0)
  {
    uint64_t v25 = (id *)&MOSuggestionAssetsTypeMapSnapshot;
LABEL_19:
    id v26 = *v25;
LABEL_20:
    uint64_t v27 = v26;
    char v28 = specialized Sequence<>.contains(_:)((uint64_t)v26, a1);

    return v28 & 1;
  }
  return 1;
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:)(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, void (*a10)(void), uint64_t a11)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(unsigned char *)(v17 + 24) = a5;
  *(void *)(v17 + 32) = a6;
  *(void *)(v17 + 40) = a7;
  *(void *)(v17 + 48) = a8;
  *(void *)(v17 + 56) = a9;
  *(void *)(v17 + 64) = a10;
  *(void *)(v17 + 72) = a11;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(void *)(v18 + 24) = v17;
  uint64_t v33 = v18;
  uint64_t v19 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 264);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v20 = swift_retain();
  uint64_t v21 = v19(v20);
  if (v22)
  {
    uint64_t v23 = v21;
    uint64_t v24 = v22;
    uint64_t v25 = *(void *)(a3 + 48);
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1001DA0F0;
    *(void *)(v26 + 32) = v23;
    *(void *)(v26 + 40) = v24;
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = a1;
    *(unsigned char *)(v28 + 24) = a2;
    *(void *)(v28 + 32) = v27;
    *(void *)(v28 + 40) = partial apply for thunk for @callee_guaranteed (@guaranteed UIGraphicsImageRendererContext) -> ();
    *(void *)(v28 + 48) = v33;
    uint64_t v29 = *(void (**)(uint64_t, void, void (*)(unint64_t), uint64_t))(*(void *)v25 + 160);
    swift_retain();
    swift_retain();
    swift_retain();
    v29(v26, a2, partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:), v28);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, a6, a7, a8, a9, a10);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(void), uint64_t a10)
{
  v52[1] = a2;
  uint64_t v64 = a1;
  char v65 = a9;
  uint64_t v66 = a6;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v55 = (uint64_t)v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v52 - v18;
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v63 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  int v53 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  id v56 = (char *)v52 - v23;
  uint64_t v54 = (char *)type metadata accessor for MOSuggestionAssetCacheWorkoutInput();
  __chkstk_darwin(v54);
  uint64_t v25 = (char *)v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a3;
  int v57 = a4;
  *(unsigned char *)(v26 + 24) = a4;
  uint64_t v27 = v66;
  *(void *)(v26 + 32) = a5;
  *(void *)(v26 + 40) = v27;
  *(void *)(v26 + 48) = a7;
  *(void *)(v26 + 56) = a8;
  *(void *)(v26 + 64) = v65;
  *(void *)(v26 + 72) = a10;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(void *)(v28 + 24) = v26;
  uint64_t v58 = a3;
  swift_retain();
  uint64_t v59 = a5;
  swift_retain();
  uint64_t v60 = a7;
  swift_retain();
  unint64_t v62 = a8;
  swift_bridgeObjectRetain();
  uint64_t v61 = a10;
  swift_retain();
  swift_retain();
  uint64_t v29 = swift_retain();
  MOSuggestionAssetCacheWorkoutInput.init(_:)(v29, (uint64_t)v25);
  outlined init with copy of Date?((uint64_t)v25, (uint64_t)v19, (uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v30 = v63;
  char v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  uint64_t v32 = v20;
  if (v31((uint64_t)v19, 1, v20) == 1)
  {
    uint64_t v33 = (uint64_t)v19;
  }
  else
  {
    v52[0] = v28;
    char v34 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    uint64_t v35 = v56;
    id v36 = v19;
    uint64_t v37 = v32;
    v34(v56, v36, v32);
    uint64_t v38 = *((int *)v54 + 5);
    uint64_t v54 = v25;
    uint64_t v33 = v55;
    outlined init with copy of Date?((uint64_t)&v25[v38], v55, (uint64_t *)&demangling cache variable for type metadata for Date?);
    if (v31(v33, 1, v32) != 1)
    {
      uint64_t v43 = v53;
      v34(v53, (char *)v33, v37);
      type metadata accessor for MOSuggestionAssetActivityRingsProvider();
      swift_allocObject();
      uint64_t v44 = MOSuggestionAssetActivityRingsProvider.init()();
      uint64_t v45 = swift_allocObject();
      swift_weakInit();
      int v46 = (void *)swift_allocObject();
      v46[2] = v64;
      v46[3] = v45;
      uint64_t v66 = v37;
      uint64_t v47 = v52[0];
      v46[4] = closure #2 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)partial apply;
      v46[5] = v47;
      id v48 = *(void (**)(char *, char *, void, void (*)(uint64_t, void *), void *))(*(void *)v44 + 304);
      swift_retain();
      swift_retain();
      swift_retain();
      v48(v35, v43, 0, partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:), v46);
      swift_release();
      swift_release();
      id v49 = *(void (**)(char *, uint64_t))(v30 + 8);
      uint64_t v50 = v66;
      v49(v43, v66);
      v49(v35, v50);
      outlined destroy of MOSuggestionAssetCacheWorkoutInput((uint64_t)v54);
      swift_release();
      swift_release();
      return swift_release();
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v32);
    uint64_t v25 = v54;
  }
  outlined destroy of Any?(v33, (uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v39 = v58;
  swift_retain();
  uint64_t v40 = v59;
  swift_retain();
  uint64_t v41 = v60;
  swift_retain();
  unint64_t v42 = v62;
  swift_bridgeObjectRetain();
  swift_retain();
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v39, v57, v40, v66, v41, v42, v65);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  outlined destroy of MOSuggestionAssetCacheWorkoutInput((uint64_t)v25);
  swift_release();
  return swift_release();
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(uint64_t a1, int a2, uint64_t (*a3)(), uint64_t a4, int a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t), uint64_t a8, uint64_t a9, void (*a10)(void), uint64_t a11)
{
  char v107 = a3;
  int v112 = a2;
  uint64_t inited = a9;
  uint64_t v127 = a11;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v115 = (uint64_t)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v117 = (uint64_t)&v105 - v20;
  uint64_t v119 = type metadata accessor for Date();
  uint64_t v129 = *(void *)(v119 - 8);
  uint64_t v21 = __chkstk_darwin(v119);
  id v111 = (char *)&v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v110 = (char *)&v105 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  id v113 = (char *)&v105 - v26;
  uint64_t v109 = v27;
  __chkstk_darwin(v25);
  Class v116 = (char *)&v105 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  __chkstk_darwin(v29 - 8);
  char v31 = (char *)&v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for UUID();
  uint64_t v131 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v118 = (uint64_t)&v105 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = (int *)type metadata accessor for MOSuggestionAssetCacheWorkoutInput();
  __chkstk_darwin(v114);
  uint64_t v35 = (char *)&v105 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = a4;
  LODWORD(v121) = a5;
  *(unsigned char *)(v36 + 24) = a5;
  *(void *)(v36 + 32) = a6;
  *(void *)(v36 + 40) = a7;
  uint64_t v122 = a7;
  uint64_t v37 = v36;
  unint64_t v38 = inited;
  *(void *)(v36 + 48) = a8;
  *(void *)(v36 + 56) = v38;
  uint64_t v120 = a10;
  *(void *)(v36 + 64) = a10;
  *(void *)(v36 + 72) = v127;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(void *)(v39 + 24) = v37;
  uint64_t v130 = v39;
  uint64_t v128 = (uint8_t *)v37;
  swift_retain_n();
  uint64_t v123 = a4;
  swift_retain();
  uint64_t v124 = a6;
  swift_retain();
  uint64_t v125 = a8;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v40 = swift_retain();
  uint64_t v41 = MOSuggestionAssetCacheWorkoutInput.init(_:)(v40, (uint64_t)v35);
  unint64_t v42 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 216);
  uint64_t v108 = a1;
  uint64_t v43 = (void *)v42(v41);
  MOResource.workoutUUID.getter((uint64_t)v31);

  uint64_t v44 = v131;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v131 + 48))(v31, 1, v32) == 1)
  {
    uint64_t v45 = &demangling cache variable for type metadata for UUID?;
    uint64_t v46 = (uint64_t)v31;
LABEL_7:
    outlined destroy of Any?(v46, v45);
    goto LABEL_8;
  }
  uint64_t v47 = v118;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v118, v31, v32);
  uint64_t v48 = v117;
  outlined init with copy of Date?((uint64_t)v35, v117, (uint64_t *)&demangling cache variable for type metadata for Date?);
  id v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v129 + 48);
  if (v49(v48, 1, v119) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v47, v32);
    uint64_t v45 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    uint64_t v46 = v48;
    goto LABEL_7;
  }
  uint64_t v106 = v32;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 32);
  char v51 = v116;
  uint64_t v52 = v48;
  uint64_t v53 = v119;
  uint64_t v117 = v129 + 32;
  v50(v116, v52, v119);
  uint64_t v54 = v114;
  uint64_t v55 = v115;
  outlined init with copy of Date?((uint64_t)&v35[v114[5]], v115, (uint64_t *)&demangling cache variable for type metadata for Date?);
  if (v49(v55, 1, v53) == 1)
  {
    (*(void (**)(char *, uint64_t))(v129 + 8))(v51, v53);
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v118, v106);
    uint64_t v45 = (uint64_t *)&demangling cache variable for type metadata for Date?;
    uint64_t v46 = v55;
    goto LABEL_7;
  }
  uint64_t v60 = v113;
  v50(v113, v55, v53);
  uint64_t v61 = &v35[v54[6]];
  uint64_t v62 = v106;
  if (v61[8])
  {
    uint64_t v63 = v53;
    uint64_t v64 = v60;
    char v65 = *(void (**)(char *, uint64_t))(v129 + 8);
    v65(v64, v53);
  }
  else
  {
    int v66 = v35[v54[7]];
    if (v66 != 2)
    {
      uint64_t v120 = *(void (**)(void))v61;
      LODWORD(v121) = v66 & 1;
      uint64_t v67 = swift_allocObject();
      *(void *)(v67 + 16) = 0;
      uint64_t v68 = swift_allocObject();
      *(void *)(v68 + 16) = 0;
      uint64_t v69 = swift_allocObject();
      *(void *)(v69 + 16) = 0;
      uint64_t v70 = swift_allocObject();
      *(void *)(v70 + 16) = 0;
      uint64_t v125 = v70;
      uint64_t v71 = swift_allocObject();
      *(void *)(v71 + 16) = 0;
      uint64_t v72 = swift_allocObject();
      swift_weakInit();
      uint64_t v73 = swift_allocObject();
      *(void *)(v73 + 16) = v67;
      *(void *)(v73 + 24) = 3;
      uint64_t v127 = v67;
      *(void *)(v73 + 32) = v71;
      *(void *)(v73 + 40) = v68;
      uint64_t v124 = v68;
      *(void *)(v73 + 48) = v69;
      *(unsigned char *)(v73 + 56) = v112;
      uint64_t v122 = (void (*)(uint64_t, char *, uint64_t))v50;
      uint64_t v74 = v108;
      *(void *)(v73 + 64) = v70;
      *(void *)(v73 + 72) = v74;
      char v107 = closure #2 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)partial apply;
      *(void *)(v73 + 80) = v72;
      *(void *)(v73 + 88) = closure #2 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)partial apply;
      uint64_t v75 = v130;
      *(void *)(v73 + 96) = v130;
      uint64_t v76 = v75;
      uint64_t v123 = type metadata accessor for MOSuggestionAssetWorkoutProvider();
      uint64_t inited = swift_initStackObject();
      *(void *)(inited + 16) = -1;
      uint64_t v114 = (int *)objc_allocWithZone((Class)HKHealthStore);
      swift_retain_n();
      swift_retain_n();
      uint64_t v77 = v71;
      swift_retain_n();
      swift_retain_n();
      uint64_t v78 = v69;
      uint64_t v105 = v69;
      swift_retain_n();
      uint64_t v79 = v125;
      swift_retain_n();
      swift_retain_n();
      swift_retain();
      id v80 = [v114 init];
      *(void *)(inited + 24) = v80;
      uint64_t v81 = (void *)swift_allocObject();
      uint64_t v114 = (int *)partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:);
      v81[2] = v71;
      v81[3] = partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:);
      v81[4] = v73;
      v81[5] = v74;
      v81[6] = v107;
      v81[7] = v76;
      swift_retain();
      uint64_t v115 = v71;
      swift_retain();
      swift_retain();
      swift_retain();
      MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(v118, (uint64_t)partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:), (uint64_t)v81);
      swift_release();
      uint64_t v82 = v128;
      swift_retain();
      swift_retain();
      swift_retain();
      specialized MOSuggestionAssetSystemIconImageProvider.getAssetFor(workoutType:size:renderGlyph:isIndoors:completion:)((uint64_t)v120, v112, 0, (char)v121, v79, v127, 3, v77, v124, v78, v112, v79, v74, v72, (void (*)(id))partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:), v82);
      swift_release();
      swift_release();
      swift_release();
      type metadata accessor for MOSuggestionAssetWorkoutRouteProvider();
      uint64_t v83 = swift_allocObject();
      id v84 = [objc_allocWithZone((Class)HKHealthStore) init];
      uint64_t v120 = (void (*)(void))v83;
      *(void *)(v83 + 16) = v84;
      *(void *)(v83 + 24) = _swiftEmptyArrayStorage;
      *(void *)(v83 + 32) = 0;
      uint64_t v85 = v129;
      char v86 = *(void (**)(char *, char *, uint64_t))(v129 + 16);
      id v87 = v110;
      uint64_t v88 = v119;
      v86(v110, v113, v119);
      v86(v111, v116, v88);
      uint64_t v89 = *(unsigned __int8 *)(v85 + 80);
      uint64_t v90 = (v89 + 16) & ~v89;
      uint64_t v91 = (v109 + v89 + v90) & ~v89;
      unint64_t v92 = (v109 + v91 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v93 = (v92 + 15) & 0xFFFFFFFFFFFFFFF8;
      id v121 = v35;
      uint64_t v94 = swift_allocObject();
      unint64_t v95 = v87;
      char v96 = v122;
      v122(v94 + v90, v95, v88);
      v96(v94 + v91, v111, v88);
      *(void *)(v94 + v92) = 0x3FD51EB851EB851FLL;
      uint64_t v97 = (void *)(v94 + v93);
      void *v97 = v114;
      v97[1] = v73;
      unint64_t v98 = v94 + ((v93 + 23) & 0xFFFFFFFFFFFFFFF8);
      *(void *)unint64_t v98 = v124;
      *(unsigned char *)(v98 + 8) = v112;
      *(void *)(v94 + ((v93 + 39) & 0xFFFFFFFFFFFFFFF8)) = v105;
      uint64_t v99 = swift_initStackObject();
      *(void *)(v99 + 16) = -1;
      id v100 = objc_allocWithZone((Class)HKHealthStore);
      swift_retain();
      swift_retain();
      swift_retain();
      *(void *)(v99 + 24) = [v100 init];
      uint64_t v101 = (void *)swift_allocObject();
      v101[2] = partial apply for closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:);
      v101[3] = v94;
      v101[4] = v120;
      swift_retain();
      swift_retain();
      uint64_t v102 = v118;
      MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:)(v118, (uint64_t)partial apply for closure #1 in MOSuggestionAssetWorkoutRouteProvider.getAsset(workoutUUID:completion:), (uint64_t)v101);
      swift_release();
      swift_setDeallocating();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      id v103 = *(void (**)(char *, uint64_t))(v129 + 8);
      uint64_t v104 = v119;
      v103(v113, v119);
      v103(v116, v104);
      (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v102, v106);
      outlined destroy of MOSuggestionAssetCacheWorkoutInput((uint64_t)v121);
      swift_release();
      swift_release();
      swift_release_n();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    char v65 = *(void (**)(char *, uint64_t))(v129 + 8);
    uint64_t v63 = v119;
    v65(v113, v119);
  }
  v65(v116, v63);
  (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v118, v62);
LABEL_8:
  uint64_t v56 = v123;
  swift_retain();
  uint64_t v57 = v124;
  swift_retain();
  uint64_t v58 = v125;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v56, (int)v121, v57, (uint64_t)v122, v58, v38, v120);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  outlined destroy of MOSuggestionAssetCacheWorkoutInput((uint64_t)v35);
  swift_release_n();
  return swift_release();
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheMotionActivityFromProvider(_:cacheType:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, void (*a10)(void), uint64_t a11)
{
  uint64_t v275 = a7;
  int v273 = a5;
  *(void *)&long long v269 = a3;
  LODWORD(v272) = a2;
  unint64_t v274 = a10;
  uint64_t v15 = (void *)type metadata accessor for CharacterSet();
  uint64_t v270 = (void *)*(v15 - 1);
  id v271 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v263 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v263 - v19;
  uint64_t v21 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 256);
  uint64_t v279 = a4;
  swift_retain_n();
  uint64_t v278 = a6;
  swift_retain_n();
  uint64_t v277 = a8;
  swift_retain_n();
  unint64_t v276 = a9;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = swift_retain_n();
  uint64_t v23 = v21(v22);
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = (*(uint64_t (**)(void))(*(void *)a1 + 280))();
    if (v25)
    {
      id v26 = (id)v25;
      unint64_t v27 = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;
      BOOL v32 = v28 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v30 == v31;
      uint64_t v266 = a1;
      id v268 = v26;
      if (v32)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v33 & 1) == 0)
        {
          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v36 = v35;
          if (v34 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v36 == v37)
          {
            swift_bridgeObjectRelease_n();
LABEL_16:
            id v42 = [self mainBundle];
            v285._object = (void *)0x80000001001EB020;
            v50._uint64_t countAndFlagsBits = 7238994;
            v50._object = (void *)0xE300000000000000;
            v51._uint64_t countAndFlagsBits = 0;
            v51._object = (void *)0xE000000000000000;
            v285._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
            Swift::String v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, (Swift::String_optional)0, (NSBundle)v42, v51, v285);
            uint64_t countAndFlagsBits = v52._countAndFlagsBits;
            object = v52._object;
            uint64_t v48 = (id *)&MOSuggestionAssetMotionActivityTypeRunning;
            goto LABEL_22;
          }
          char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v49) {
            goto LABEL_16;
          }
          uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v55 = v54;
          if (v53 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v55 == v56)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v57 & 1) == 0)
            {
              id v61 = 0;
              goto LABEL_30;
            }
          }
          id v42 = [self mainBundle];
          v286._uint64_t countAndFlagsBits = 0xD000000000000025;
          v286._object = (void *)0x80000001001EAFC0;
          v58._uint64_t countAndFlagsBits = 0x61572026206E7552;
          v58._object = (void *)0xEA00000000006B6CLL;
          v59._uint64_t countAndFlagsBits = 0;
          v59._object = (void *)0xE000000000000000;
          Swift::String v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, (Swift::String_optional)0, (NSBundle)v42, v59, v286);
          uint64_t countAndFlagsBits = v60._countAndFlagsBits;
          object = v60._object;
          uint64_t v48 = (id *)&MOSuggestionAssetMotionActivityTypeRunningWalking;
LABEL_22:

          id v61 = *v48;
          uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          if (*(void *)(v24 + 16) && (unint64_t v64 = specialized __RawDictionaryStorage.find<A>(_:)(v62, v63), (v65 & 1) != 0))
          {
            uint64_t v66 = *(void *)(*(void *)(v24 + 56) + 8 * v64);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)&v281[0] = v66;
            if (swift_dynamicCast())
            {
              unint64_t v264 = v27;
              id v267 = v61;
              uint64_t v265 = a11;
              uint64_t v67 = *((void *)&v282 + 1);
              uint64_t v263 = v282;
              static CharacterSet.decimalDigits.getter();
              CharacterSet.inverted.getter();
              uint64_t v68 = (void (*)(char *, id))v270[1];
              uint64_t v69 = v20;
              id v70 = v271;
              v68(v69, v271);
              lazy protocol witness table accessor for type String and conformance String();
              uint64_t v71 = StringProtocol.trimmingCharacters(in:)();
              unint64_t v73 = v72;
              v68(v18, v70);
              uint64_t v74 = (void *)specialized FixedWidthInteger.init(_:)(v71, v73);
              if (v75)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                id v61 = v267;
                unint64_t v27 = v264;
              }
              else
              {
                id v271 = v74;
                id v76 = [self mainBundle];
                v287._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
                v287._object = (void *)0x80000001001EAFF0;
                v77._uint64_t countAndFlagsBits = 0x7370657473204025;
                v77._object = (void *)0xE800000000000000;
                v78._uint64_t countAndFlagsBits = 0;
                v78._object = (void *)0xE000000000000000;
                NSLocalizedString(_:tableName:bundle:value:comment:)(v77, (Swift::String_optional)0, (NSBundle)v76, v78, v287);

                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<CVarArg>);
                uint64_t v79 = swift_allocObject();
                *(_OWORD *)(v79 + 16) = xmmword_1001DA0F0;
                *(void *)(v79 + 56) = &type metadata for String;
                *(void *)(v79 + 64) = lazy protocol witness table accessor for type String and conformance String();
                *(void *)(v79 + 32) = v263;
                *(void *)(v79 + 40) = v67;
                uint64_t v80 = static String.localizedStringWithFormat(_:_:)();
                unint64_t v81 = v264;
                uint64_t v82 = v80;
                uint64_t v84 = v83;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v85 = (void *)MOSuggestionAssetMetadataKeyMotionActivityType;
                id v283 = &type metadata for String;
                *(void *)&long long v282 = countAndFlagsBits;
                *((void *)&v282 + 1) = object;
                outlined init with take of Any(&v282, v281);
                id v86 = v85;
                swift_bridgeObjectRetain();
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                unint64_t v280 = v81;
                specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v281, v86, isUniquelyReferenced_nonNull_native);
                unint64_t v88 = v280;

                swift_bridgeObjectRelease();
                uint64_t v89 = (void *)MOSuggestionAssetMetadataKeyMotionActivityTypeLocalized;
                id v283 = &type metadata for String;
                *(void *)&long long v282 = countAndFlagsBits;
                *((void *)&v282 + 1) = object;
                outlined init with take of Any(&v282, v281);
                id v90 = v89;
                char v91 = swift_isUniquelyReferenced_nonNull_native();
                unint64_t v280 = v88;
                specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v281, v90, v91);
                unint64_t v92 = v280;

                swift_bridgeObjectRelease();
                unint64_t v93 = (void *)MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
                type metadata accessor for MOSuggestionAssetMotionActivityType(0);
                id v283 = v94;
                id v61 = v267;
                *(void *)&long long v282 = v267;
                outlined init with take of Any(&v282, v281);
                id v95 = v93;
                id v96 = v61;
                char v97 = swift_isUniquelyReferenced_nonNull_native();
                unint64_t v280 = v92;
                specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v281, v95, v97);
                unint64_t v98 = v280;

                swift_bridgeObjectRelease();
                uint64_t v99 = (void *)MOSuggestionAssetMetadataKeyMotionActivityStepCount;
                id v283 = &type metadata for String;
                *(void *)&long long v282 = v82;
                *((void *)&v282 + 1) = v84;
                outlined init with take of Any(&v282, v281);
                id v100 = v99;
                swift_bridgeObjectRetain();
                char v101 = swift_isUniquelyReferenced_nonNull_native();
                unint64_t v280 = v98;
                specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v281, v100, v101);
                unint64_t v102 = v280;

                swift_bridgeObjectRelease();
                id v103 = (void *)MOSuggestionAssetMetadataKeyMotionActivityStepCountLocalized;
                id v283 = &type metadata for String;
                *(void *)&long long v282 = v82;
                *((void *)&v282 + 1) = v84;
                outlined init with take of Any(&v282, v281);
                id v104 = v103;
                char v105 = swift_isUniquelyReferenced_nonNull_native();
                unint64_t v280 = v102;
                specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v281, v104, v105);
                unint64_t v106 = v280;

                swift_bridgeObjectRelease();
                char v107 = (void *)MOSuggestionAssetMetadataKeyMotionActivityNumberOfSteps;
                id v283 = &type metadata for Int;
                *(void *)&long long v282 = v271;
                outlined init with take of Any(&v282, v281);
                id v108 = v107;
                char v109 = swift_isUniquelyReferenced_nonNull_native();
                unint64_t v280 = v106;
                specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v281, v108, v109);
                unint64_t v27 = v280;

                swift_bridgeObjectRelease();
              }
              goto LABEL_29;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
LABEL_29:
          id v26 = v268;
LABEL_30:
          uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          if (*(void *)(v24 + 16)
            && (unint64_t v112 = specialized __RawDictionaryStorage.find<A>(_:)(v110, v111), (v113 & 1) != 0))
          {
            uint64_t v114 = *(void *)(*(void *)(v24 + 56) + 8 * v112);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)&long long v282 = v114;
            if ((swift_dynamicCast() & 1) == 0) {
              goto LABEL_42;
            }
            uint64_t v115 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            if (!*(void *)(v24 + 16)
              || (unint64_t v117 = specialized __RawDictionaryStorage.find<A>(_:)(v115, v116), (v118 & 1) == 0))
            {
              swift_bridgeObjectRelease();
LABEL_42:
              swift_bridgeObjectRelease();
              uint64_t v128 = v272;
              if (!v61) {
                goto LABEL_63;
              }
LABEL_43:
              uint64_t v129 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v131 = v130;
              if (v129 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v131 != v132)
              {
                char v133 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v133) {
                  goto LABEL_49;
                }
                uint64_t v134 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v136 = v135;
                if (v134 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v136 != v137)
                {
                  char v165 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if ((v165 & 1) == 0) {
                    goto LABEL_63;
                  }
                  goto LABEL_49;
                }
              }
              swift_bridgeObjectRelease_n();
LABEL_49:
              specialized static MOSuggestionAssetSystemSymbolProvider.symbolName(type:)();
              if (v138)
              {
                swift_bridgeObjectRelease();
                if (one-time initialization token for shared != -1) {
                  swift_once();
                }
                unint64_t v139 = *(uint64_t (**)(id, uint64_t, void, uint64_t))(*(void *)static MOSuggestionAssetSystemSymbolProvider.shared
                                                                              + 128);
                uint64_t v140 = v139(v26, v128, 0, 1);
                if (v140)
                {
                  unint64_t v141 = (void *)v140;
                  uint64_t v142 = v139(v26, v128, 0, 2);
                  if (v142)
                  {
                    id v143 = (void *)v142;
                    id v267 = v61;
                    id v144 = [v141 imageAsset];
                    if (v144)
                    {
                      id v145 = v144;
                      id v146 = [self traitCollectionWithUserInterfaceStyle:2];
                      [v145 registerImage:v143 withTraitCollection:v146];
                    }
                    id v147 = v26;
                    uint64_t v148 = MOSuggestionAssetsTypeMotionActivity;
                    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
                    id v149 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v141 type:v148 contentClassType:swift_getObjCClassFromMetadata()];
                    specialized _dictionaryUpCast<A, B, C, D>(_:)(v27);
                    swift_bridgeObjectRelease();
                    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
                    swift_bridgeObjectRelease();
                    [v149 addMetadata:isa];

                    uint64_t v151 = *(void (**)(void))(*(void *)v266 + 288);
                    v151();
                    NSString v152 = String._bridgeToObjectiveC()();
                    swift_bridgeObjectRelease();
                    [v149 addIdentifier:v152];

                    if (((_BYTE)v272 - 2) <= 8u)
                    {
                      id v153 = *(id *)(v269 + 16);
                      v151();
                      NSString v154 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      [v153 setObject:v149 forKey:v154 cost:1];
                    }
                    uint64_t v155 = v279;
                    swift_retain();
                    uint64_t v156 = v278;
                    swift_retain();
                    uint64_t v157 = v277;
                    swift_retain();
                    unint64_t v158 = v276;
                    swift_bridgeObjectRetain();
                    swift_retain();
                    specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary(asset:cacheType:completion:)(v149, v272, v155, v273, v156, v275, v157, v158, v274);

                    goto LABEL_61;
                  }
                }
                swift_bridgeObjectRelease();
                uint64_t v159 = v279;
                swift_retain();
                BOOL v160 = v61;
                uint64_t v161 = v278;
                swift_retain();
                uint64_t v162 = v26;
                uint64_t v163 = v277;
                swift_retain();
                unint64_t v164 = v276;
                swift_bridgeObjectRetain();
                swift_retain();
                closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v159, v273, v161, v275, v163, v164, v274);

LABEL_61:
                swift_release_n();
                swift_release_n();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
LABEL_94:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                goto LABEL_95;
              }
LABEL_63:
              id v267 = v61;
              specialized static MOSuggestionAssetSystemSymbolProvider.symbolName(type:)();
              if (!v166
                || (swift_bridgeObjectRelease(),
                    specialized static MOSuggestionAssetSystemSymbolProvider.symbolName(type:)(),
                    !v167))
              {
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();

                goto LABEL_94;
              }
              swift_bridgeObjectRelease();
              if (v128 - 2 >= 7 && v128 != 10)
              {
                if (one-time initialization token for shared != -1) {
                  swift_once();
                }
                uint64_t v197 = MOWorkoutMotionActivityActionWalk[0];
                uint64_t v198 = *(uint64_t (**)(__CFString *, uint64_t, void, uint64_t))(*(void *)static MOSuggestionAssetSystemSymbolProvider.shared
                                                                                        + 128);
                unint64_t v199 = (void *)v198(MOWorkoutMotionActivityActionWalk[0], v128, 0, 1);
                if (v199)
                {
                  id v271 = v199;
                  unint64_t v200 = MOWorkoutMotionActivityActionRun[0];
                  uint64_t v201 = (void *)v198(MOWorkoutMotionActivityActionRun[0], v128, 0, 1);
                  if (v201)
                  {
                    uint64_t v270 = v201;
                    uint64_t v202 = v198(v197, v128, 0, 2);
                    if (v202)
                    {
                      id v203 = (id)v202;
                      uint64_t v204 = v198(v200, v128, 0, 2);
                      if (v204)
                      {
                        long long v205 = (void *)v204;
                        id v206 = [self mainScreen];
                        [v206 scale];

                        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
                        uint64_t v207 = swift_allocObject();
                        long long v269 = xmmword_1001DACA0;
                        *(_OWORD *)(v207 + 16) = xmmword_1001DACA0;
                        id v209 = v270;
                        id v208 = v271;
                        *(void *)(v207 + 32) = v270;
                        *(void *)(v207 + 40) = v208;
                        *(void *)&long long v282 = v207;
                        specialized Array._endMutation()();
                        unint64_t v210 = v282;
                        MOSuggestionInterstitialExpandableListViewCellConstants.init()();
                        double v212 = v211;
                        float64_t v214 = v213;
                        id v271 = v208;
                        id v215 = v209;
                        uint64_t v216 = (void *)specialized static MOSuggestionAssetSnowglobeEffect.imageFor(images:targetSize:)(v210, v212, v214);
                        swift_bridgeObjectRelease();
                        if (v216)
                        {
                          uint64_t v217 = swift_allocObject();
                          *(_OWORD *)(v217 + 16) = v269;
                          *(void *)(v217 + 32) = v205;
                          *(void *)(v217 + 40) = v203;
                          *(void *)&long long v282 = v217;
                          specialized Array._endMutation()();
                          unint64_t v218 = v282;
                          uint64_t v270 = v203;
                          id v219 = v205;
                          uint64_t v220 = (void *)specialized static MOSuggestionAssetSnowglobeEffect.imageFor(images:targetSize:)(v218, v212, v214);
                          swift_bridgeObjectRelease();
                          if (v220)
                          {
                            *(void *)&long long v269 = v219;
                            id v221 = [v216 imageAsset];
                            if (v221)
                            {
                              unint64_t v222 = v221;
                              id v223 = [self traitCollectionWithUserInterfaceStyle:2];
                              [v222 registerImage:v220 withTraitCollection:v223];
                            }
                            uint64_t v224 = MOSuggestionAssetsTypeMotionActivity;
                            type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
                            id v225 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v216 type:v224 contentClassType:swift_getObjCClassFromMetadata()];
                            specialized _dictionaryUpCast<A, B, C, D>(_:)(v27);
                            swift_bridgeObjectRelease();
                            Class v226 = Dictionary._bridgeToObjectiveC()().super.isa;
                            swift_bridgeObjectRelease();
                            [v225 addMetadata:v226];

                            (*(void (**)(void))(*(void *)v266 + 288))();
                            NSString v227 = String._bridgeToObjectiveC()();
                            swift_bridgeObjectRelease();
                            [v225 addIdentifier:v227];

                            uint64_t v228 = v279;
                            swift_retain();
                            uint64_t v229 = v278;
                            swift_retain();
                            uint64_t v230 = v277;
                            swift_retain();
                            unint64_t v231 = v276;
                            swift_bridgeObjectRetain();
                            swift_retain();
                            specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary(asset:cacheType:completion:)(v225, v272, v228, v273, v229, v275, v230, v231, v274);
                          }
                          else
                          {
                            id v253 = v26;
                            swift_bridgeObjectRelease();
                            if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
                              swift_once();
                            }
                            uint64_t v254 = type metadata accessor for Logger();
                            __swift_project_value_buffer(v254, (uint64_t)static MOAngelLogger.assets);
                            uint64_t v255 = Logger.logObject.getter();
                            os_log_type_t v256 = static os_log_type_t.error.getter();
                            BOOL v257 = os_log_type_enabled(v255, v256);
                            uint64_t v259 = v277;
                            uint64_t v258 = v278;
                            if (v257)
                            {
                              v260 = (uint8_t *)swift_slowAlloc();
                              *(_WORD *)v260 = 0;
                              _os_log_impl((void *)&_mh_execute_header, v255, v256, "Failed to generate dark mode snowglobe motion activity", v260, 2u);
                              swift_slowDealloc();
                            }

                            uint64_t v261 = v279;
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            unint64_t v262 = v276;
                            swift_bridgeObjectRetain();
                            swift_retain();
                            closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v261, v273, v258, v275, v259, v262, v274);
                          }
                        }
                        else
                        {
                          swift_bridgeObjectRelease();
                          if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
                            swift_once();
                          }
                          uint64_t v244 = type metadata accessor for Logger();
                          __swift_project_value_buffer(v244, (uint64_t)static MOAngelLogger.assets);
                          id v245 = Logger.logObject.getter();
                          os_log_type_t v246 = static os_log_type_t.error.getter();
                          BOOL v247 = os_log_type_enabled(v245, v246);
                          uint64_t v249 = v277;
                          uint64_t v248 = v278;
                          if (v247)
                          {
                            os_log_t v250 = (uint8_t *)swift_slowAlloc();
                            *(_WORD *)os_log_t v250 = 0;
                            _os_log_impl((void *)&_mh_execute_header, v245, v246, "Failed to generate snowglobe motion activity", v250, 2u);
                            swift_slowDealloc();
                          }

                          uint64_t v251 = v279;
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          unint64_t v252 = v276;
                          swift_bridgeObjectRetain();
                          swift_retain();
                          closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v251, v273, v248, v275, v249, v252, v274);
                        }
                        swift_release_n();
                        swift_release_n();
                        swift_release_n();
                        swift_bridgeObjectRelease_n();
                        goto LABEL_72;
                      }

                      id v243 = v270;
                    }
                    else
                    {
                      id v203 = v270;
                      id v243 = v271;
                    }

                    uint64_t v128 = v272;
                  }
                  else
                  {
                    id v203 = v271;
                  }
                }
              }
              if (one-time initialization token for shared != -1) {
                swift_once();
              }
              unint64_t v168 = *(uint64_t (**)(__CFString *, uint64_t, uint64_t, uint64_t))(*(void *)static MOSuggestionAssetSystemSymbolProvider.shared
                                                                                       + 128);
              uint64_t v169 = v168(MOWorkoutMotionActivityActionWalk[0], v128, 1, 1);
              if (v169)
              {
                uint64_t v170 = (void *)v169;
                uint64_t v171 = v168(MOWorkoutMotionActivityActionRun[0], v128, 1, 1);
                if (v171)
                {
                  unint64_t v172 = (void *)v171;
                  NSString v173 = String._bridgeToObjectiveC()();
                  uint64_t v174 = self;
                  id v175 = [v174 colorNamed:v173];

                  if (v175)
                  {
                    id v176 = [v174 systemWhiteColor];
                    uint64_t v270 = [v176 colorWithAlphaComponent:0.55];

                    id v177 = [v174 systemBlackColor];
                    uint64_t v178 = v27;
                    id v179 = [v177 colorWithAlphaComponent:0.2];

                    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
                    uint64_t v180 = swift_allocObject();
                    *(_OWORD *)(v180 + 16) = xmmword_1001DACA0;
                    *(void *)(v180 + 32) = v172;
                    *(void *)(v180 + 40) = v170;
                    *(void *)&long long v282 = v180;
                    specialized Array._endMutation()();
                    uint64_t v181 = v282;
                    id v182 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionWorkoutsSnowGlobeView());
                    id v272 = v172;
                    id v271 = v170;
                    unint64_t v183 = v270;
                    uint64_t v270 = v183;
                    id v184 = v179;
                    *(void *)&long long v269 = v184;
                    id v185 = v175;
                    id v186 = specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(v181, v183, v184, v185);

                    uint64_t v187 = v186;
                    id v188 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v186 type:MOSuggestionAssetsTypeMotionActivity contentClassType:swift_getObjCClassFromMetadata()];
                    specialized _dictionaryUpCast<A, B, C, D>(_:)(v178);
                    swift_bridgeObjectRelease();
                    Class v189 = Dictionary._bridgeToObjectiveC()().super.isa;
                    swift_bridgeObjectRelease();
                    [v188 addMetadata:v189];

                    (*(void (**)(void))(*(void *)v266 + 288))();
                    NSString v190 = String._bridgeToObjectiveC()();
                    swift_bridgeObjectRelease();
                    [v188 addIdentifier:v190];

                    uint64_t v191 = v279;
                    swift_retain();
                    uint64_t v192 = v278;
                    swift_retain();
                    uint64_t v193 = v26;
                    uint64_t v194 = v277;
                    swift_retain();
                    unint64_t v195 = v276;
                    swift_bridgeObjectRetain();
                    swift_retain();
                    id v196 = v188;
                    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v188, v191, v273, v192, v275, v194, v195, v274);

                    swift_release_n();
                    swift_release_n();
                    swift_release_n();
                    swift_bridgeObjectRelease_n();
LABEL_72:
                    swift_release_n();

                    goto LABEL_95;
                  }

                  uint64_t v170 = v172;
                }
              }
              long long v232 = v26;
              swift_bridgeObjectRelease();
              if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
                swift_once();
              }
              uint64_t v233 = type metadata accessor for Logger();
              __swift_project_value_buffer(v233, (uint64_t)static MOAngelLogger.assets);
              CFStringRef v234 = Logger.logObject.getter();
              os_log_type_t v235 = static os_log_type_t.error.getter();
              BOOL v236 = os_log_type_enabled(v234, v235);
              uint64_t v238 = v277;
              uint64_t v237 = v278;
              if (v236)
              {
                long long v239 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)long long v239 = 0;
                _os_log_impl((void *)&_mh_execute_header, v234, v235, "Failed to generate asset for motion activity", v239, 2u);
                swift_slowDealloc();
              }

              uint64_t v240 = v279;
              swift_retain();
              swift_retain();
              swift_retain();
              unint64_t v241 = v276;
              swift_bridgeObjectRetain();
              swift_retain();
              closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v240, v273, v237, v275, v238, v241, v274);

              swift_release_n();
              swift_release_n();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();

              goto LABEL_94;
            }
            uint64_t v119 = *(void *)(*(void *)(v24 + 56) + 8 * v117);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)&long long v282 = v119;
            if (swift_dynamicCast())
            {
              uint64_t v120 = (void *)MOSuggestionAssetMetadataKeyMotionActivityStartDate;
              uint64_t v121 = type metadata accessor for Date();
              id v283 = (void *)v121;
              __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v282);
              id v122 = v120;
              Date.init(timeIntervalSince1970:)();
              outlined init with take of Any(&v282, v281);
              char v123 = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v280 = v27;
              specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v281, v122, v123);
              unint64_t v124 = v280;

              swift_bridgeObjectRelease();
              uint64_t v125 = (void *)MOSuggestionAssetMetadataKeyMotionActivityEndDate;
              id v283 = (void *)v121;
              __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v282);
              id v126 = v125;
              Date.init(timeIntervalSince1970:)();
              outlined init with take of Any(&v282, v281);
              char v127 = swift_isUniquelyReferenced_nonNull_native();
              unint64_t v280 = v124;
              specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v281, v126, v127);
              unint64_t v27 = v280;

              goto LABEL_42;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v128 = v272;
          if (!v61) {
            goto LABEL_63;
          }
          goto LABEL_43;
        }
      }
      id v42 = [self mainBundle];
      v284._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
      v284._object = (void *)0x80000001001EB040;
      v43._uint64_t countAndFlagsBits = 1802264919;
      v43._object = (void *)0xE400000000000000;
      v44._uint64_t countAndFlagsBits = 0;
      v44._object = (void *)0xE000000000000000;
      Swift::String v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v284);
      uint64_t countAndFlagsBits = v45._countAndFlagsBits;
      object = v45._object;
      uint64_t v48 = (id *)&MOSuggestionAssetMotionActivityTypeWalking;
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v38 = v279;
  swift_retain();
  uint64_t v39 = v278;
  swift_retain();
  uint64_t v40 = v277;
  swift_retain();
  unint64_t v41 = v276;
  swift_bridgeObjectRetain();
  swift_retain();
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v38, v273, v39, v275, v40, v41, v274);
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
LABEL_95:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  return swift_release_n();
}

void specialized MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, void (*a10)(void), uint64_t a11)
{
  uint64_t v145 = a3;
  LODWORD(v146) = a2;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v17 - 8);
  id v147 = (char *)&v137 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a4;
  int v149 = a5;
  *(unsigned char *)(v19 + 24) = a5;
  *(void *)(v19 + 32) = a6;
  *(void *)(v19 + 40) = a7;
  uint64_t v150 = a7;
  *(void *)(v19 + 48) = a8;
  *(void *)(v19 + 56) = a9;
  uint64_t v148 = a10;
  *(void *)(v19 + 64) = a10;
  *(void *)(v19 + 72) = a11;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(void *)(v20 + 24) = v19;
  uint64_t v154 = v20;
  uint64_t v21 = *(uint64_t (**)(void))(*(void *)a1 + 256);
  uint64_t v151 = a4;
  swift_retain();
  uint64_t v153 = a6;
  swift_retain();
  swift_retain();
  unint64_t v152 = a9;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v22 = swift_retain();
  uint64_t v23 = ((uint64_t (*)(uint64_t))v21)(v22);
  if (!v23) {
    goto LABEL_31;
  }
  uint64_t v24 = v23;
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v24 + 16))
  {
    unint64_t v27 = specialized __RawDictionaryStorage.find<A>(_:)(v25, v26);
    if (v28)
    {
      uint64_t v144 = a1;
      uint64_t v29 = *(void *)(*(void *)(v24 + 56) + 8 * v27);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      aBlock[0] = v29;
      if (swift_dynamicCast())
      {
        long long v30 = v156;
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        if (*(void *)(v24 + 16))
        {
          unint64_t v33 = specialized __RawDictionaryStorage.find<A>(_:)(v31, v32);
          if (v34)
          {
            uint64_t v143 = *((void *)&v30 + 1);
            uint64_t v35 = *(void *)(*(void *)(v24 + 56) + 8 * v33);
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            aBlock[0] = v35;
            if ((swift_dynamicCast() & 1) == 0)
            {
LABEL_29:
              swift_bridgeObjectRelease();
              goto LABEL_30;
            }
            uint64_t v141 = v30;
            uint64_t v36 = *((void *)&v156 + 1);
            uint64_t v140 = v156;
            uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            if (*(void *)(v24 + 16))
            {
              uint64_t v142 = v36;
              unint64_t v39 = specialized __RawDictionaryStorage.find<A>(_:)(v37, v38);
              if (v40)
              {
                uint64_t v41 = *(void *)(*(void *)(v24 + 56) + 8 * v39);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                aBlock[0] = v41;
                if (swift_dynamicCast())
                {
                  long long v42 = v156;
                  uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  if (!*(void *)(v24 + 16)
                    || (unint64_t v45 = specialized __RawDictionaryStorage.find<A>(_:)(v43, v44), (v46 & 1) == 0))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    goto LABEL_30;
                  }
                  *((void *)&v139 + 1) = *((void *)&v42 + 1);
                  uint64_t v47 = *(void *)(*(void *)(v24 + 56) + 8 * v45);
                  swift_unknownObjectRetain();
                  swift_bridgeObjectRelease();
                  aBlock[0] = v47;
                  if (swift_dynamicCast())
                  {
                    *(void *)&long long v139 = v42;
                    uint64_t v48 = *((void *)&v156 + 1);
                    uint64_t v138 = v156;
                    uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    if (!*(void *)(v24 + 16)
                      || (unint64_t v51 = specialized __RawDictionaryStorage.find<A>(_:)(v49, v50), (v52 & 1) == 0))
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      goto LABEL_30;
                    }
                    uint64_t v53 = *(void *)(*(void *)(v24 + 56) + 8 * v51);
                    swift_unknownObjectRetain();
                    swift_bridgeObjectRelease();
                    aBlock[0] = v53;
                    if (swift_dynamicCast())
                    {
                      long long v137 = v156;
                      uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      if (!*(void *)(v24 + 16)
                        || (unint64_t v56 = specialized __RawDictionaryStorage.find<A>(_:)(v54, v55), (v57 & 1) == 0))
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        goto LABEL_30;
                      }
                      uint64_t v58 = *(void *)(*(void *)(v24 + 56) + 8 * v56);
                      swift_unknownObjectRetain();
                      swift_bridgeObjectRelease();
                      aBlock[0] = v58;
                      if (swift_dynamicCast())
                      {
                        long long v59 = v156;
                        uint64_t v60 = swift_allocObject();
                        uint64_t v61 = specialized static MOSuggestionAssetMediaCoverArtQueryInput.typeFromBundleId(_:)(v139, *((uint64_t *)&v139 + 1));
                        uint64_t v153 = v60;
                        *(void *)(v60 + 16) = v61;
                        uint64_t v62 = swift_allocObject();
                        *(void *)(v62 + 16) = 0;
                        unint64_t v152 = v62;
                        *(unsigned char *)(v62 + 24) = 0;
                        uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                        uint64_t v65 = *(void *)(v24 + 16);
                        if (v61 == 6)
                        {
                          if (v65)
                          {
                            unint64_t v66 = specialized __RawDictionaryStorage.find<A>(_:)(v63, v64);
                            if (v67)
                            {
                              uint64_t v68 = *(void *)(*(void *)(v24 + 56) + 8 * v66);
                              swift_unknownObjectRetain();
                              swift_bridgeObjectRelease();
                              *(void *)&long long v156 = v68;
                              type metadata accessor for MOMediaPlayMetaDataKeyPlayerMediaType(0);
                              if ((swift_dynamicCast() & 1) == 0) {
                                goto LABEL_56;
                              }
                              uint64_t v69 = (void *)aBlock[0];
                              uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                              uint64_t v72 = v71;
                              if (v70 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v72 == v73) {
                                goto LABEL_26;
                              }
                              char v125 = _stringCompareWithSmolCheck(_:_:expecting:)();
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              if (v125) {
                                goto LABEL_70;
                              }
                              uint64_t v127 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                              uint64_t v129 = v128;
                              if (v127 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v129 == v130) {
                                goto LABEL_26;
                              }
                              char v131 = _stringCompareWithSmolCheck(_:_:expecting:)();
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              if (v131) {
                                goto LABEL_70;
                              }
                              uint64_t v132 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                              uint64_t v134 = v133;
                              if (v132 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v134 == v135)
                              {
LABEL_26:
                                swift_bridgeObjectRelease_n();
                              }
                              else
                              {
                                char v136 = _stringCompareWithSmolCheck(_:_:expecting:)();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                if ((v136 & 1) == 0)
                                {

LABEL_56:
                                  uint64_t v101 = *(void *)(v153 + 16);
                                  *(void *)&long long v156 = v141;
                                  *((void *)&v156 + 1) = v143;
                                  long long v157 = v59;
                                  *(void *)&long long v158 = v138;
                                  *((void *)&v158 + 1) = v48;
                                  *(void *)&long long v159 = v140;
                                  *((void *)&v159 + 1) = v142;
                                  long long v160 = v139;
                                  uint64_t v161 = v101;
                                  if ((unint64_t)(v101 - 6) > 2)
                                  {
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    uint64_t v117 = *(void *)(v153 + 16);
                                    if (v117 == 4 || v117 == 1)
                                    {
                                      if (one-time initialization token for sharedSongProvider != -1) {
                                        swift_once();
                                      }
                                      char v118 = &static MOSuggestionMediaCoverArtProviders.sharedSongProvider;
                                    }
                                    else
                                    {
                                      if (one-time initialization token for sharedPodcastProvider != -1) {
                                        swift_once();
                                      }
                                      char v118 = &static MOSuggestionMediaCoverArtProviders.sharedPodcastProvider;
                                    }
                                    uint64_t v119 = *v118;
                                    swift_retain();
                                    uint64_t v120 = swift_allocObject();
                                    *(void *)(v120 + 16) = v144;
                                    *(void *)(v120 + 24) = v24;
                                    uint64_t v121 = v146;
                                    *(unsigned char *)(v120 + 32) = v146;
                                    uint64_t v122 = v154;
                                    *(void *)(v120 + 40) = closure #2 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)partial apply;
                                    *(void *)(v120 + 48) = v122;
                                    uint64_t v123 = v143;
                                    *(void *)(v120 + 56) = v141;
                                    *(void *)(v120 + 64) = v123;
                                    *(_OWORD *)(v120 + 72) = v59;
                                    *(void *)(v120 + 88) = v138;
                                    *(void *)(v120 + 96) = v48;
                                    *(void *)(v120 + 104) = v153;
                                    unint64_t v124 = *(void (**)(long long *, uint64_t, void (*)(void *), uint64_t))(*(void *)v119 + 248);
                                    swift_retain();
                                    swift_retain();
                                    swift_retain();
                                    v124(&v156, v121, partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:), v120);
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_bridgeObjectRelease();
                                    swift_bridgeObjectRelease();
                                    swift_bridgeObjectRelease();
                                    swift_bridgeObjectRelease();
                                    swift_bridgeObjectRelease();
                                  }
                                  else
                                  {
                                    uint64_t v102 = swift_allocObject();
                                    swift_weakInit();
                                    uint64_t v103 = swift_allocObject();
                                    uint64_t v104 = v139;
                                    *(void *)(v103 + 16) = v102;
                                    *(void *)(v103 + 24) = v104;
                                    uint64_t v105 = v137;
                                    *(void *)(v103 + 32) = *((void *)&v139 + 1);
                                    *(void *)(v103 + 40) = v105;
                                    unint64_t v106 = v152;
                                    *(void *)(v103 + 48) = *((void *)&v137 + 1);
                                    *(void *)(v103 + 56) = v106;
                                    long long v107 = v159;
                                    *(_OWORD *)(v103 + 96) = v158;
                                    *(_OWORD *)(v103 + 112) = v107;
                                    *(_OWORD *)(v103 + 128) = v160;
                                    uint64_t v108 = v161;
                                    long long v109 = v157;
                                    *(_OWORD *)(v103 + 64) = v156;
                                    *(_OWORD *)(v103 + 80) = v109;
                                    uint64_t v110 = v144;
                                    *(void *)(v103 + 144) = v108;
                                    *(void *)(v103 + 152) = v110;
                                    *(void *)(v103 + 160) = v24;
                                    *(void *)(v103 + 168) = closure #2 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)partial apply;
                                    *(void *)(v103 + 176) = v154;
                                    *(unsigned char *)(v103 + 184) = v146;
                                    id v111 = objc_allocWithZone((Class)ISIcon);
                                    swift_bridgeObjectRetain_n();
                                    swift_retain();
                                    swift_retain();
                                    swift_retain();
                                    swift_retain();
                                    NSString v112 = String._bridgeToObjectiveC()();
                                    id v113 = [v111 initWithBundleIdentifier:v112];

                                    if (one-time initialization token for iconDescriptor != -1) {
                                      swift_once();
                                    }
                                    uint64_t v114 = static MOSuggestionAssetAppIconProvider.iconDescriptor;
                                    [(id)static MOSuggestionAssetAppIconProvider.iconDescriptor setShouldApplyMask:0];
                                    uint64_t v115 = swift_allocObject();
                                    *(void *)(v115 + 16) = partial apply for specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:);
                                    *(void *)(v115 + 24) = v103;
                                    aBlock[4] = closure #1 in static MOSuggestionAssetAppIconProvider.getImageFor(bundleIdentifier:shouldApplyMask:completion:)partial apply;
                                    aBlock[5] = v115;
                                    aBlock[0] = _NSConcreteStackBlock;
                                    aBlock[1] = 1107296256;
                                    void aBlock[2] = thunk for @escaping @callee_guaranteed (@guaranteed CGImageRef?) -> ();
                                    uint64_t aBlock[3] = &block_descriptor_147;
                                    uint64_t v116 = _Block_copy(aBlock);
                                    swift_retain();
                                    swift_release();
                                    [v113 getCGImageForImageDescriptor:v114 completion:v116];
                                    _Block_release(v116);
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_release();
                                    swift_bridgeObjectRelease();
                                  }
                                  return;
                                }
                              }
LABEL_70:
                              uint64_t v126 = specialized static MOSuggestionAssetMediaCoverArtQueryInput.typeFromBundleMediaType(_:)();

                              *(void *)(v153 + 16) = v126;
                              goto LABEL_56;
                            }
                          }
                        }
                        else if (v65)
                        {
                          unint64_t v96 = specialized __RawDictionaryStorage.find<A>(_:)(v63, v64);
                          if (v97)
                          {
                            uint64_t v98 = *(void *)(*(void *)(v24 + 56) + 8 * v96);
                            swift_unknownObjectRetain();
                            swift_bridgeObjectRelease();
                            *(void *)&long long v156 = v98;
                            type metadata accessor for MOMediaPlayMetaDataKeyPlayerMediaType(0);
                            if (swift_dynamicCast())
                            {
                              uint64_t v99 = (void *)aBlock[0];
                              uint64_t v100 = specialized static MOSuggestionAssetMediaCoverArtQueryInput.typeFromBundleMediaType(_:)();

                              *(void *)(v153 + 16) = v100;
                            }
                            goto LABEL_56;
                          }
                        }
                        swift_bridgeObjectRelease();
                        goto LABEL_56;
                      }
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      goto LABEL_44;
                    }
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                }
LABEL_44:
                swift_bridgeObjectRelease();
                goto LABEL_29;
              }
            }
            swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_30:
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_31:
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v74 = type metadata accessor for Logger();
  __swift_project_value_buffer(v74, (uint64_t)static MOAngelLogger.assets);
  swift_retain_n();
  char v75 = Logger.logObject.getter();
  os_log_type_t v76 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v146 = a11;
    Swift::String v77 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v156 = swift_slowAlloc();
    *(_DWORD *)Swift::String v77 = 136315138;
    if (v21())
    {
      uint64_t v78 = Dictionary.debugDescription.getter();
      unint64_t v80 = v79;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v80 = 0xE300000000000000;
      uint64_t v78 = 7104878;
    }
    aBlock[0] = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v78, v80, (uint64_t *)&v156);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "[MOSuggestionAssetCacheManager] Incomplete media metadata for artwork fetch %s", v77, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v81 = type metadata accessor for URL();
  uint64_t v82 = *(void *)(v81 - 8);
  uint64_t v83 = v147;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56))(v147, 1, 1, v81);
  NSString v84 = String._bridgeToObjectiveC()();
  NSString v85 = String._bridgeToObjectiveC()();
  NSString v86 = String._bridgeToObjectiveC()();
  unint64_t v88 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v83, 1, v81) != 1)
  {
    URL._bridgeToObjectiveC()(v87);
    unint64_t v88 = v89;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v81);
  }
  id v90 = [objc_allocWithZone((Class)MOSuggestionAssetMediaItem) initTitle:v84 albumTitle:v85 artistName:v86 albumArt:0 trackIdentifier:0 previewURL:v88 mediaType:0];

  uint64_t v91 = MOSuggestionAssetsTypeMediaCoverArt;
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetMediaItem);
  id v92 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v90 type:v91 contentClassType:swift_getObjCClassFromMetadata()];
  uint64_t v93 = v151;
  swift_retain();
  uint64_t v94 = v153;
  swift_retain();
  swift_retain();
  unint64_t v95 = v152;
  swift_bridgeObjectRetain();
  swift_retain();
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v92, v93, v149, v94, v150, a8, v95, v148);
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(void), uint64_t a10)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(unsigned char *)(v17 + 24) = a4;
  *(void *)(v17 + 32) = a5;
  *(void *)(v17 + 40) = a6;
  uint64_t v31 = a6;
  *(void *)(v17 + 48) = a7;
  *(void *)(v17 + 56) = a8;
  *(void *)(v17 + 64) = a9;
  *(void *)(v17 + 72) = a10;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 216);
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v32 = a8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v20 = swift_retain();
  uint64_t v21 = (void *)v19(v20);
  id v22 = [v21 assets];

  if (v22)
  {
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    if (one-time initialization token for shared != -1) {
      swift_once();
    }
    uint64_t v26 = static MOSuggestionAssetAppIconProvider.shared;
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    char v28 = (void *)swift_allocObject();
    Swift::Int v28[2] = a1;
    v28[3] = v27;
    v28[4] = closure #2 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)partial apply;
    v28[5] = v18;
    uint64_t v29 = *(void (**)(uint64_t, uint64_t, void (*)(void *), void *))(*(void *)v26 + 88);
    swift_retain();
    swift_retain();
    swift_retain();
    v29(v23, v25, partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:), v28);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a3, a4, a5, v31, a7, v32, a9);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheReflectionsPromptsFromProvider(_:isProxyForClient:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, void (*a10)(void))
{
  uint64_t v16 = a10;
  type metadata accessor for MOEvergreenAssetReference(0);
  uint64_t v17 = swift_dynamicCastClass();
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v79 = a7;
    uint64_t v19 = *(uint64_t (**)(uint64_t))(*(void *)v17 + 344);
    uint64_t v78 = a4;
    swift_retain_n();
    uint64_t v75 = a6;
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v20 = swift_retain();
    uint64_t v21 = v19(v20);
    uint64_t v22 = a8;
    if (v21)
    {
      uint64_t v23 = v21;
      uint64_t v73 = a1;
      uint64_t v24 = v79;
      uint64_t v25 = v75;
      if ((a2 & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v26 = (uint64_t (**)(void))(*(void *)v73 + 288);
      uint64_t v27 = *v26;
      uint64_t v28 = (*v26)();
      uint64_t v30 = v29;
      swift_beginAccess();
      uint64_t v31 = *(void *)(a3 + 32);
      if (*(void *)(v31 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v32 = specialized __RawDictionaryStorage.find<A>(_:)(v28, v30);
        if (v33)
        {
          unint64_t v34 = *(void *)(*(void *)(v31 + 56) + 8 * v32);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v35 = *(void *)(v23 + 16);
          if ((uint64_t)v34 < (uint64_t)v35)
          {
            uint64_t v36 = v27;
            __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<String>);
            uint64_t v37 = swift_allocObject();
            *(_OWORD *)(v37 + 16) = xmmword_1001DA0F0;
            if ((v34 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v34 < v35)
            {
              uint64_t v38 = v37;
              uint64_t v39 = v23 + 16 * v34;
              uint64_t v40 = *(void *)(v39 + 32);
              uint64_t v41 = *(void *)(v39 + 40);
              swift_bridgeObjectRetain();
              uint64_t v42 = swift_bridgeObjectRelease();
              *(void *)(v38 + 32) = v40;
              *(void *)(v38 + 40) = v41;
              uint64_t v43 = ((uint64_t (*)(uint64_t))v36)(v42);
              uint64_t v45 = v44;
              swift_beginAccess();
              specialized Dictionary._Variant.removeValue(forKey:)(v43, v45);
              swift_endAccess();
              swift_bridgeObjectRelease();
              uint64_t v24 = v79;
              uint64_t v25 = v75;
              goto LABEL_18;
            }
            __break(1u);
LABEL_45:
            swift_release_n();
            swift_bridgeObjectRelease_n();
            swift_release_n();
            swift_release_n();
            swift_release_n();
            __break(1u);
            JUMPOUT(0x1001C4168);
          }
LABEL_17:
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v24 = v79;
          closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, v75, v79, a8, a9, a10);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
LABEL_18:
          uint64_t v76 = a8;
          uint64_t v48 = *(uint64_t (**)(uint64_t))(*(void *)v18 + 256);
          uint64_t v49 = swift_retain();
          uint64_t v50 = v48(v49);
          swift_release();
          if (v50)
          {
            uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v53 = a10;
            unint64_t v54 = a9;
            if (*(void *)(v50 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(v51, v52), (v55 & 1) != 0))
            {
              swift_unknownObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (swift_dynamicCast())
              {
                uint64_t v53 = (void (*)(void))v76;
                switch(v81)
                {
                  case 1:
                    NSString v56 = String._bridgeToObjectiveC()();
                    id v57 = [self _systemImageNamed:v56];

                    if (v57) {
                      goto LABEL_42;
                    }
                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                    swift_release_n();
                    swift_release_n();
                    swift_release_n();
                    __break(1u);
                    goto LABEL_25;
                  case 2:
                    NSString v60 = String._bridgeToObjectiveC()();
                    id v57 = [self _systemImageNamed:v60];

                    if (v57) {
                      goto LABEL_42;
                    }
                    swift_release_n();
                    swift_bridgeObjectRelease_n();
                    swift_release_n();
                    swift_release_n();
                    swift_release_n();
                    __break(1u);
LABEL_33:
                    NSString v61 = String._bridgeToObjectiveC()();
                    id v57 = [self _systemImageNamed:v61];

                    if (!v57)
                    {
                      swift_release_n();
                      swift_bridgeObjectRelease_n();
                      swift_release_n();
                      swift_release_n();
                      swift_release_n();
                      __break(1u);
LABEL_35:
                      NSString v62 = String._bridgeToObjectiveC()();
                      id v57 = [self _systemImageNamed:v62];

                      if (!v57)
                      {
                        swift_release_n();
                        swift_bridgeObjectRelease_n();
                        swift_release_n();
                        swift_release_n();
                        swift_release_n();
                        __break(1u);
LABEL_37:
                        NSString v63 = String._bridgeToObjectiveC()();
                        id v57 = [self _systemImageNamed:v63];

                        if (!v57)
                        {
                          swift_release_n();
                          swift_bridgeObjectRelease_n();
                          swift_release_n();
                          swift_release_n();
                          swift_release_n();
                          __break(1u);
LABEL_39:
                          NSString v64 = String._bridgeToObjectiveC()();
                          id v57 = [self _systemImageNamed:v64];

                          if (!v57)
                          {
                            swift_release_n();
                            swift_bridgeObjectRelease_n();
                            swift_release_n();
                            swift_release_n();
                            swift_release_n();
                            __break(1u);
LABEL_41:
                            NSString v65 = String._bridgeToObjectiveC()();
                            id v57 = [self _systemImageNamed:v65];

                            uint64_t v53 = (void (*)(void))v76;
                            if (!v57) {
                              goto LABEL_45;
                            }
                          }
                        }
                      }
                    }
LABEL_42:
                    id v66 = objc_allocWithZone((Class)MOSuggestionAssetReflectionPrompt);
                    id v67 = v57;
                    Class isa = Array._bridgeToObjectiveC()().super.isa;
                    swift_bridgeObjectRelease();
                    id v77 = [v66 initWithReflectionPrompts:isa icon:v67 type:v81];

                    uint64_t v69 = MOSuggestionAssetsTypeReflectionPrompt;
                    type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for MOSuggestionAssetReflectionPrompt);
                    id v70 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v77 type:v69 contentClassType:swift_getObjCClassFromMetadata()];
                    (*(void (**)(id))(*(void *)v73 + 288))(v70);
                    NSString v71 = String._bridgeToObjectiveC()();
                    swift_bridgeObjectRelease();
                    [v70 addIdentifier:v71];

                    swift_retain();
                    swift_retain();
                    swift_retain();
                    swift_bridgeObjectRetain();
                    swift_retain();
                    id v72 = v70;
                    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v70, v78, a5, v25, v79, (uint64_t)v53, a9, a10);

                    swift_release();
                    break;
                  case 3:
                    goto LABEL_33;
                  case 4:
                    goto LABEL_35;
                  case 5:
                    goto LABEL_37;
                  case 6:
                    goto LABEL_39;
                  default:
                    goto LABEL_41;
                }
                goto LABEL_13;
              }
            }
            else
            {
LABEL_25:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            uint64_t v58 = v78;
          }
          else
          {
            swift_bridgeObjectRelease();
            unint64_t v54 = a9;
            uint64_t v58 = v78;
            uint64_t v53 = a10;
          }
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v58, a5, v25, v24, v76, v54, v53);
          swift_release();
          swift_release_n();
          swift_release_n();
          goto LABEL_29;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    swift_release();
    unint64_t v47 = a9;
    uint64_t v16 = a10;
    a7 = v79;
    uint64_t v46 = v75;
  }
  else
  {
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v46 = a6;
    uint64_t v22 = a8;
    unint64_t v47 = a9;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, v46, a7, v22, v47, v16);
LABEL_13:
  swift_release_n();
  swift_release_n();
LABEL_29:
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  return swift_release_n();
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheLocationsPreviews(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(void))
{
  uint64_t v120 = a6;
  int v121 = a4;
  uint64_t v113 = a2;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v115 = *(void *)(v14 - 8);
  uint64_t v116 = v14;
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v117 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v118 = (char *)&v107 - v17;
  uint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 256);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = swift_retain_n();
  uint64_t v114 = a1;
  uint64_t v20 = v18(v19);
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v119 = a9;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (!*(void *)(v21 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSString v85 = v119;
      uint64_t v25 = v120;
LABEL_27:
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v78 = a3;
      int v79 = v121;
      uint64_t v80 = a5;
      uint64_t v81 = v25;
      uint64_t v82 = a7;
      unint64_t v83 = a8;
      NSString v84 = v85;
      goto LABEL_28;
    }
    unint64_t v24 = specialized __RawDictionaryStorage.find<A>(_:)(v22, v23);
    uint64_t v25 = v120;
    if (v26)
    {
      uint64_t v27 = *(void *)(*(void *)(v21 + 56) + 8 * v24);
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&long long v122 = v27;
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_26;
      }
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (*(void *)(v21 + 16))
      {
        unint64_t v30 = specialized __RawDictionaryStorage.find<A>(_:)(v28, v29);
        if (v31)
        {
          uint64_t v32 = *(void *)(*(void *)(v21 + 56) + 8 * v30);
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&long long v122 = v32;
          if (swift_dynamicCast())
          {
            uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            if (*(void *)(v21 + 16))
            {
              unint64_t v35 = specialized __RawDictionaryStorage.find<A>(_:)(v33, v34);
              if (v36)
              {
                uint64_t v37 = *(void *)(*(void *)(v21 + 56) + 8 * v35);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                *(void *)&long long v122 = v37;
                if (swift_dynamicCast())
                {
                  double v38 = v124;
                  Date.init(timeIntervalSinceReferenceDate:)();
                  Date.init(timeIntervalSinceReferenceDate:)();
                  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  if (*(void *)(v21 + 16))
                  {
                    uint64_t v112 = *(void *)&v38;
                    unint64_t v41 = specialized __RawDictionaryStorage.find<A>(_:)(v39, v40);
                    if (v42)
                    {
                      uint64_t v43 = *(void *)(*(void *)(v21 + 56) + 8 * v41);
                      swift_unknownObjectRetain();
                      swift_bridgeObjectRelease();
                      *(void *)&long long v122 = v43;
                      __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
                      if ((swift_dynamicCast() & 1) == 0)
                      {
LABEL_33:
                        swift_bridgeObjectRelease();
LABEL_34:
                        int v47 = v121;
                        goto LABEL_35;
                      }
                      double v44 = v124;
                      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      int v47 = v121;
                      if (!*(void *)(*(void *)&v44 + 16)
                        || (id v111 = v46,
                            unint64_t v48 = specialized __RawDictionaryStorage.find<A>(_:)(v45, (uint64_t)v46),
                            (v49 & 1) == 0))
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
LABEL_35:
                        swift_retain();
                        swift_retain();
                        swift_retain();
                        swift_bridgeObjectRetain();
                        swift_retain();
                        closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a3, v47, a5, v25, a7, a8, v119);
LABEL_36:
                        swift_release();
                        swift_release();
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release();
                        uint64_t v87 = v116;
                        unint64_t v88 = *(void (**)(char *, uint64_t))(v115 + 8);
                        v88(v117, v116);
                        v88(v118, v87);
                        swift_release();
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                        swift_release();
                        goto LABEL_29;
                      }
                      uint64_t v50 = *(void *)(*(void *)(*(void *)&v44 + 56) + 8 * v48);
                      swift_unknownObjectRetain();
                      swift_bridgeObjectRelease();
                      *(void *)&long long v122 = v50;
                      if (swift_dynamicCast())
                      {
                        double v51 = v124;
                        uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                        if (*(void *)(*(void *)&v44 + 16)
                          && (unint64_t v54 = specialized __RawDictionaryStorage.find<A>(_:)(v52, v53), (v55 & 1) != 0))
                        {
                          uint64_t v56 = *(void *)(*(void *)(*(void *)&v44 + 56) + 8 * v54);
                          swift_unknownObjectRetain();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          *(void *)&long long v122 = v56;
                          if (swift_dynamicCast())
                          {
                            id v57 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v51 longitude:v124];
                            id v110 = (id)MOSuggestionAssetsTypeLocationPreview;
                            type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation);
                            id v58 = objc_allocWithZone((Class)MOSuggestionAsset);
                            uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
                            id v111 = v57;
                            id v110 = [v58 init:v57 type:v110 contentClassType:ObjCClassFromMetadata];
                            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any)>);
                            uint64_t inited = swift_initStackObject();
                            *(_OWORD *)(inited + 16) = xmmword_1001DB470;
                            NSString v61 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
                            *(void *)(inited + 32) = MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
                            long long v109 = *(uint64_t (**)(id))(*(void *)v114 + 216);
                            id v62 = v61;
                            NSString v63 = (void *)v109(v62);
                            id v64 = [v63 name];

                            uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            long long v109 = v66;

                            id v67 = v109;
                            *(void *)(inited + 40) = v65;
                            *(void *)(inited + 48) = v67;
                            uint64_t v68 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
                            *(void *)(inited + 64) = &type metadata for String;
                            *(void *)(inited + 72) = v68;
                            *(void *)(inited + 80) = v112;
                            uint64_t v69 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewCityName;
                            *(void *)(inited + 104) = &type metadata for Int;
                            *(void *)(inited + 112) = v69;
                            uint64_t v112 = inited;
                            long long v109 = (uint64_t (*)(id))static String._unconditionallyBridgeFromObjectiveC(_:)();
                            uint64_t v71 = v70;
                            if (*(void *)(v21 + 16))
                            {
                              id v72 = v68;
                              id v73 = v69;
                              unint64_t v74 = specialized __RawDictionaryStorage.find<A>(_:)((uint64_t)v109, v71);
                              if (v75)
                              {
                                uint64_t v76 = (_OWORD *)(v112 + 120);
                                uint64_t v77 = *(void *)(*(void *)(v21 + 56) + 8 * v74);
                                swift_unknownObjectRetain();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                uint64_t ObjectType = swift_getObjectType();
                                *(void *)&long long v122 = v77;
                                outlined init with take of Any(&v122, v76);
LABEL_42:
                                id v92 = (void *)v112;
                                uint64_t v93 = (uint64_t *)(v112 + 160);
                                long long v109 = (uint64_t (*)(id))MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
                                *(void *)(v112 + 152) = MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
                                uint64_t v94 = v116;
                                v92[23] = v116;
                                boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v93);
                                uint64_t v108 = *(void (**)(uint64_t *, char *, uint64_t))(v115 + 16);
                                v108(boxed_opaque_existential_1, v118, v94);
                                unint64_t v96 = (void *)MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
                                v92[24] = MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
                                v92[28] = v94;
                                char v97 = __swift_allocate_boxed_opaque_existential_1(v92 + 25);
                                v108(v97, v117, v94);
                                uint64_t v98 = v109;
                                id v99 = v96;
                                unint64_t v100 = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)v92);
                                specialized _dictionaryUpCast<A, B, C, D>(_:)(v100);
                                swift_bridgeObjectRelease();
                                Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
                                swift_bridgeObjectRelease();
                                id v102 = v110;
                                [v110 addMetadata:isa];

                                long long v109 = (uint64_t (*)(id))(*(void *)v114 + 288);
                                uint64_t v112 = *(void *)v109;
                                ((void (*)(void))v112)();
                                NSString v103 = String._bridgeToObjectiveC()();
                                swift_bridgeObjectRelease();
                                [v102 addIdentifier:v103];

                                id v104 = *(id *)(v113 + 16);
                                ((void (*)(void))v112)();
                                NSString v105 = String._bridgeToObjectiveC()();
                                swift_bridgeObjectRelease();
                                [v104 setObject:v102 forKey:v105 cost:1];

                                swift_retain();
                                swift_retain();
                                swift_retain();
                                swift_bridgeObjectRetain();
                                swift_retain();
                                id v106 = v102;
                                closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v102, a3, v121, a5, v120, a7, a8, v119);

                                goto LABEL_36;
                              }
                            }
                            else
                            {
                              id v89 = v68;
                              id v90 = v69;
                            }
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            uint64_t v91 = v112;
                            *(void *)(v112 + 144) = &type metadata for String;
                            *(void *)(v91 + 120) = 0;
                            *(void *)(v91 + 128) = 0xE000000000000000;
                            goto LABEL_42;
                          }
                        }
                        else
                        {
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                        }
                        swift_bridgeObjectRelease();
                        uint64_t v25 = v120;
                        goto LABEL_34;
                      }
                    }
                  }
                  swift_bridgeObjectRelease();
                  goto LABEL_33;
                }
                goto LABEL_26;
              }
            }
            goto LABEL_24;
          }
LABEL_26:
          swift_bridgeObjectRelease();
          NSString v85 = v119;
          goto LABEL_27;
        }
      }
    }
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v78 = a3;
  int v79 = v121;
  uint64_t v80 = a5;
  uint64_t v81 = v120;
  uint64_t v82 = a7;
  unint64_t v83 = a8;
  NSString v84 = a9;
LABEL_28:
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v78, v79, v80, v81, v82, v83, v84);
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
LABEL_29:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  return swift_release_n();
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(void), uint64_t a10)
{
  v46[2] = a2;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for URL?);
  __chkstk_darwin(v17 - 8);
  unint64_t v48 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v49 = *(void *)(v19 - 8);
  uint64_t v50 = v19;
  __chkstk_darwin(v19);
  int v47 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a3;
  int v52 = a4;
  *(unsigned char *)(v21 + 24) = a4;
  *(void *)(v21 + 32) = a5;
  *(void *)(v21 + 40) = a6;
  uint64_t v53 = a6;
  *(void *)(v21 + 48) = a7;
  *(void *)(v21 + 56) = a8;
  double v51 = a9;
  *(void *)(v21 + 64) = a9;
  *(void *)(v21 + 72) = a10;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(void *)(v22 + 24) = v21;
  uint64_t v54 = v22;
  uint64_t v23 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 256);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v24 = swift_retain();
  uint64_t v25 = v23(v24);
  if (!v25) {
    goto LABEL_12;
  }
  uint64_t v26 = v25;
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v26 + 16) || (unint64_t v29 = specialized __RawDictionaryStorage.find<A>(_:)(v27, v28), (v30 & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v31 = *(void *)(*(void *)(v26 + 56) + 8 * v29);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = v31;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v32 = v56;
  v46[1] = v55;
  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v26 + 16) || (unint64_t v35 = specialized __RawDictionaryStorage.find<A>(_:)(v33, v34), (v36 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v46[0] = v32;
  uint64_t v37 = *(void *)(*(void *)(v26 + 56) + 8 * v35);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = v37;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v38 = v57;
  uint64_t v39 = (uint64_t)v48;
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v41 = v49;
  uint64_t v40 = v50;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v39, 1, v50) != 1)
  {
    uint64_t v43 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v47, v39, v40);
    uint64_t v44 = swift_allocObject();
    swift_weakInit();
    uint64_t v45 = (void *)swift_allocObject();
    v45[2] = a1;
    v45[3] = v38;
    v45[4] = v44;
    v45[5] = closure #2 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)partial apply;
    v45[6] = v54;
    swift_retain();
    swift_retain();
    swift_retain();
    specialized MOSuggestionAssetLinkPreviewProvider.getAssetFor(url:completion:)(v43, (uint64_t)partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:), (uint64_t)v45);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v43, v40);
    swift_release();
    swift_release();
    return swift_release();
  }
  outlined destroy of Any?(v39, &demangling cache variable for type metadata for URL?);
LABEL_12:
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a3, v52, a5, v53, a7, a8, v51);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheContactPhotoFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, void (*a15)(void), uint64_t a16)
{
  if (a1)
  {
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v20 = a1;
    uint64_t v21 = a2;
    uint64_t v22 = specialized static MOSuggestionAssetContactProfilePictureProvider.getFirstNameFor(idInput:)();
    uint64_t v41 = v23;
    uint64_t v42 = v22;
    uint64_t v38 = *(void (**)(void))(*(void *)a4 + 288);
    v38();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v20 addIdentifier:v24];

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1001DA740;
    uint64_t v26 = (void *)MOSuggestionAssetMetadataKeyContactName;
    type metadata accessor for MOSuggestionAssetMetadataKey(0);
    _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, type metadata accessor for MOSuggestionAssetMetadataKey);
    id v27 = v26;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 72) = a5;
    *(void *)(inited + 80) = a6;
    uint64_t v28 = (void *)MOSuggestionAssetMetadataKeyContactIdentifier;
    swift_bridgeObjectRetain();
    id v29 = v28;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 168) = &type metadata for String;
    *(void *)(inited + 144) = v21;
    *(void *)(inited + 152) = a3;
    char v30 = (void *)MOSuggestionAssetMetadataKeyContactFirstName;
    swift_bridgeObjectRetain();
    id v31 = v30;
    AnyHashable.init<A>(_:)();
    *(void *)(inited + 240) = &type metadata for String;
    *(void *)(inited + 216) = v42;
    *(void *)(inited + 224) = v41;
    specialized Dictionary.init(dictionaryLiteral:)(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v20 addMetadata:isa];

    if ((a7 - 2) < 9u)
    {
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        id v34 = *(id *)(Strong + 16);
        uint64_t v35 = swift_release();
        ((void (*)(uint64_t))v38)(v35);
        NSString v36 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v34 setObject:v20 forKey:v36 cost:3];
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(v20, a7, a9, a10, a11, a12, a13, a14, a15, a16);

    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a9, a10, a11, a12, a13, a14, a15);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheContactPhotoFromProvider(_:cacheType:completion:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, void (*a10)(void), uint64_t a11)
{
  uint64_t v14 = *(uint64_t (**)(void))(*(void *)a1 + 216);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = swift_retain_n();
  uint64_t v16 = (void *)((uint64_t (*)(uint64_t))v14)(v15);
  id v17 = [v16 personName];

  if (v17)
  {
    uint64_t v43 = a6;
    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    id v20 = (void *)v14();
    id v21 = [v20 contactIdentifier];

    if (v21)
    {
      uint64_t v42 = v19;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;

      swift_weakInit();
      id v25 = objc_allocWithZone((Class)CNContactStore);
      swift_bridgeObjectRetain();
      swift_retain();
      id v26 = [v25 init];
      NSString v27 = String._bridgeToObjectiveC()();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for CNKeyDescriptor);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      id v48 = 0;
      id v29 = [v26 unifiedContactWithIdentifier:v27 keysToFetch:isa error:&v48];

      if (v29)
      {
        uint64_t v40 = v26;
        uint64_t v30 = v22;
        if ((a2 - 2) >= 9u) {
          double v31 = 300.0;
        }
        else {
          double v31 = dbl_1001DF5F0[(char)(a2 - 2)];
        }
        uint64_t v33 = one-time initialization token for sharedFetcher;
        id v34 = v48;
        if (v33 != -1) {
          swift_once();
        }
        id v35 = [static MOSuggestionAssetContactProfilePictureProvider.sharedFetcher avatarForContact:v29 size:v31];
        if (v35)
        {
          NSString v36 = v35;
          uint64_t v37 = MOSuggestionAssetsTypeContactPhoto;
          type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
          id v39 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v36 type:v37 contentClassType:swift_getObjCClassFromMetadata()];
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheContactPhotoFromProvider(_:cacheType:completion:)(v39, v30, v24, a1, v41, v42, a2, (uint64_t)v49, a4, a5, v43, a7, a8, a9, a10, a11);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();

          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_weakDestroy();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_16;
        }
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, v43, a7, a8, a9, a10);
        swift_bridgeObjectRelease();

        id v26 = v29;
      }
      else
      {
        id v32 = v48;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        swift_errorRelease();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, v43, a7, a8, a9, a10);
        swift_bridgeObjectRelease();
      }

      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_weakDestroy();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    a6 = v43;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, a6, a7, a8, a9, a10);
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
LABEL_16:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  return swift_release_n();
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, void (*a10)(void), uint64_t a11)
{
  id v17 = a10;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  *(unsigned char *)(v18 + 24) = a5;
  *(void *)(v18 + 32) = a6;
  *(void *)(v18 + 40) = a7;
  uint64_t v66 = a7;
  *(void *)(v18 + 48) = a8;
  *(void *)(v18 + 56) = a9;
  *(void *)(v18 + 64) = a10;
  *(void *)(v18 + 72) = a11;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(void *)(v19 + 24) = v18;
  type metadata accessor for MOMultiMapAssetReference(0);
  uint64_t v20 = swift_dynamicCastClass();
  if (v20)
  {
    int v62 = a5;
    uint64_t v47 = v19;
    id v21 = *(uint64_t (**)(void))(*(void *)v20 + 360);
    uint64_t v22 = v20;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v46 = a1;
    uint64_t v23 = swift_retain();
    uint64_t v56 = v21;
    unint64_t v24 = ((uint64_t (*)(uint64_t))v21)(v23);
    if (v24 >> 62) {
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    a5 = v62;
    if (v25 >= 1)
    {
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v60 = swift_allocObject();
      *(void *)(v60 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v67 = swift_allocObject();
      *(void *)(v67 + 16) = specialized Dictionary.init(dictionaryLiteral:)((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = &_swiftEmptySetSingleton;
      unint64_t v27 = v56();
      uint64_t v28 = v26;
      uint64_t v57 = specialized Sequence.compactMap<A>(_:)(v27, (Swift::Int *)(v63 + 16), (Swift::Int *)(v61 + 16), v26 + 16, (Swift::Int *)(v60 + 16), v59 + 16, (Swift::Int *)(v67 + 16));
      swift_bridgeObjectRelease();
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = _swiftEmptyArrayStorage;
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = _swiftEmptyArrayStorage;
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = &_swiftEmptySetSingleton;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = &_swiftEmptySetSingleton;
      type metadata accessor for MOSuggestionAssetMapSnapshotProvider();
      swift_allocObject();
      uint64_t v33 = MOSuggestionAssetMapSnapshotProvider.init(targetQueue:)(0);
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v29;
      *(void *)(v34 + 24) = v31;
      *(void *)(v34 + 32) = v32;
      *(void *)(v34 + 40) = v22;
      *(void *)(v34 + 48) = v57;
      *(void *)(v34 + 56) = v30;
      *(void *)(v34 + 64) = closure #2 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)partial apply;
      *(void *)(v34 + 72) = v47;
      *(void *)(v34 + 80) = v28;
      *(unsigned char *)(v34 + 88) = a2;
      *(void *)(v34 + 96) = v33;
      *(void *)(v34 + 104) = a3;
      *(void *)(v34 + 112) = v46;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:);
      *(void *)(v35 + 24) = v34;
      uint64_t v55 = v35;
      uint64_t v50 = *(uint64_t (**)(uint64_t))(*(void *)v22 + 408);
      swift_retain_n();
      uint64_t v58 = v29;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v65 = v33;
      swift_retain();
      swift_retain();
      uint64_t v36 = swift_retain();
      unint64_t v37 = v50(v36);
      if (v37)
      {
        unint64_t v38 = v37;
        unint64_t v52 = v37;
        if (v37 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v45 > 0)
          {
            uint64_t v51 = swift_allocObject();
            *(void *)(v51 + 16) = 0;
            swift_bridgeObjectRetain();
            uint64_t result = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v54 = result;
            if (!result)
            {
LABEL_21:
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_bridgeObjectRelease_n();
LABEL_24:
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              goto LABEL_25;
            }
LABEL_9:
            uint64_t v49 = *(void (**)(id, uint64_t (*)(uint64_t), void *))(*(void *)v65 + 176);
            if (v54 < 1)
            {
              __break(1u);
              return result;
            }
            uint64_t v40 = 0;
            unint64_t v48 = v38 & 0xC000000000000001;
            do
            {
              if (v48) {
                id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v41 = *(id *)(v52 + 8 * v40 + 32);
              }
              uint64_t v42 = v41;
              ++v40;
              uint64_t v43 = (void *)swift_allocObject();
              v43[2] = v51;
              v43[3] = v58;
              v43[4] = v42;
              v43[5] = v63;
              v43[6] = v61;
              v43[7] = v60;
              v43[8] = v59;
              v43[9] = v67;
              v43[10] = v52;
              v43[11] = partial apply for closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:);
              v43[12] = v55;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_retain();
              id v44 = v42;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              v49(v44, partial apply for closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:), v43);

              swift_release();
            }
            while (v54 != v40);
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t v54 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v54)
          {
            uint64_t v51 = swift_allocObject();
            *(void *)(v51 + 16) = 0;
            uint64_t result = swift_bridgeObjectRetain();
            goto LABEL_9;
          }
        }
        swift_bridgeObjectRelease();
      }
      closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)((uint64_t)partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:), v34);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_24;
    }
    swift_release();
    id v17 = a10;
  }
  else
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, a6, v66, a8, a9, v17);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
LABEL_25:

  return swift_release();
}

uint64_t specialized closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(void *a1, void *a2, char *a3, void **a4, uint64_t inited, double *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int8 a19, uint64_t a20,uint64_t a21,unsigned __int8 a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,void (*a27)(void),uint64_t a28)
{
  unint64_t v37 = a1;
  unint64_t v38 = (char **)(a1 + 2);
  swift_beginAccess();
  uint64_t v39 = v37[2];
  BOOL v40 = __OFADD__(v39, 1);
  id v41 = (char *)(v39 + 1);
  if (v40)
  {
    __break(1u);
    goto LABEL_40;
  }
  *unint64_t v38 = v41;
  uint64_t v42 = a2[2];
  if (v42 + 0x4000000000000000 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  BOOL v40 = __OFADD__(a3, 2 * v42);
  uint64_t v43 = &a3[2 * v42];
  if (v40)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v143 = a4;
    uint64_t v144 = a6;
    uint64_t v145 = a3;
    uint64_t v146 = a2;
    id v147 = v37;
    swift_bridgeObjectRetain();
    id v148 = v28;
    uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if (v41 != v43)
  {
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
LABEL_32:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    return swift_release_n();
  }
  unint64_t v160 = a26;
  id v44 = a4 + 2;
  long long v158 = (void **)(a9 + 16);
  uint64_t v45 = (uint64_t *)(a10 + 16);
  swift_beginAccess();
  uint64_t v46 = *v44;
  uint64_t v151 = a23;
  uint64_t v152 = a21;
  uint64_t v149 = a28;
  uint64_t v150 = a25;
  if (v46 && inited)
  {
    uint64_t v47 = a6 + 2;
    id v48 = objc_allocWithZone((Class)HKQuantityFormattingParameters);
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v49 = (id)inited;
    id v50 = v46;
    id v51 = [v48 init];
    [v51 setPreferredUnit:v50];
    [v51 setPrecision:0];
    swift_beginAccess();
    id v52 = [self quantityWithUnit:v50 doubleValue:*v47];
    id v53 = [v52 localizedStringForType:v49 parameters:v51];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.uppercased()();
    swift_bridgeObjectRelease();
    NSString v54 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v55 = [v54 trimmedString];

    if (v55)
    {
      uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v58 = v57;
    }
    else
    {
      uint64_t v56 = 0;
      uint64_t v58 = 0;
    }
    swift_beginAccess();
    *(void *)(a7 + 16) = v56;
    *(void *)(a7 + 24) = v58;
    swift_bridgeObjectRelease();
    [v52 doubleValueForUnit:v50];
    uint64_t v60 = v59;

    swift_beginAccess();
    *(void *)(a8 + 16) = v60;
    *(unsigned char *)(a8 + 24) = 0;
    swift_beginAccess();
    uint64_t v61 = *v158;
    *long long v158 = v52;

    uint64_t v45 = (uint64_t *)(a10 + 16);
  }
  else
  {
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
  }
  uint64_t v161 = (uint64_t *)(a13 + 16);
  swift_beginAccess();
  uint64_t v62 = *v45;
  if (*v45 < 1)
  {
    double v29 = 0.0;
  }
  else
  {
    swift_beginAccess();
    double v29 = *(double *)(a11 + 16) / (double)v62;
  }
  uint64_t v153 = (uint64_t *)(a14 + 16);
  uint64_t v154 = (uint64_t *)(a15 + 16);
  uint64_t v155 = (uint64_t *)(a16 + 16);
  long long v156 = (uint64_t *)(a17 + 16);
  long long v157 = (void **)(a18 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(MOSuggestionAssetMetadataKey, Any)>);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1001DB460;
  a4 = (void **)MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
  *(void *)(inited + 32) = MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
  swift_beginAccess();
  *(void *)(inited + 40) = *(void *)(a12 + 16);
  a6 = (double *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCalories;
  *(void *)(inited + 64) = &type metadata for Double;
  *(void *)(inited + 72) = a6;
  swift_beginAccess();
  uint64_t v63 = *(void *)(a8 + 16);
  char v64 = *(unsigned char *)(a8 + 24);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Double?);
  *(void *)(inited + 80) = v63;
  *(unsigned char *)(inited + 88) = v64;
  a3 = (char *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesQuantity;
  *(void *)(inited + 104) = v65;
  *(void *)(inited + 112) = a3;
  swift_beginAccess();
  uint64_t v28 = *v158;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for HKQuantity?);
  *(void *)(inited + 120) = v28;
  a2 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesWithUnit;
  *(void *)(inited + 144) = v66;
  *(void *)(inited + 152) = a2;
  swift_beginAccess();
  uint64_t v67 = *(void *)(a7 + 16);
  uint64_t v68 = *(void *)(a7 + 24);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for String?);
  *(void *)(inited + 160) = v67;
  *(void *)(inited + 168) = v68;
  unint64_t v37 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupCount;
  *(void *)(inited + 184) = v69;
  *(void *)(inited + 192) = v37;
  swift_beginAccess();
  if ((unint64_t)*v161 >> 62) {
    goto LABEL_42;
  }
  uint64_t v70 = *(void *)((*v161 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v71 = a4;
  id v72 = a6;
  id v73 = a3;
  unint64_t v74 = a2;
  char v75 = v37;
  id v76 = v28;
LABEL_18:
  *(void *)(inited + 200) = v70;
  uint64_t v77 = MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrate;
  long long v159 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrate;
  *(void *)(inited + 224) = &type metadata for Int;
  *(void *)(inited + 232) = v77;
  *(double *)(inited + 240) = v29;
  uint64_t v78 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTypes;
  *(void *)(inited + 264) = &type metadata for Double;
  *(void *)(inited + 272) = v78;
  swift_beginAccess();
  uint64_t v79 = *v153;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [String]);
  *(void *)(inited + 280) = v79;
  uint64_t v81 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupTypeEnumValues;
  *(void *)(inited + 304) = v80;
  *(void *)(inited + 312) = v81;
  swift_beginAccess();
  uint64_t v82 = *v154;
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UInt]);
  *(void *)(inited + 320) = v82;
  NSString v84 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupStartDates;
  *(void *)(inited + 344) = v83;
  *(void *)(inited + 352) = v84;
  swift_beginAccess();
  uint64_t v85 = *v155;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [Date]);
  *(void *)(inited + 360) = v85;
  uint64_t v87 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupEndDates;
  *(void *)(inited + 384) = v86;
  *(void *)(inited + 392) = v87;
  swift_beginAccess();
  uint64_t v88 = *v156;
  *(void *)(inited + 424) = v86;
  *(void *)(inited + 400) = v88;
  id v89 = v159;
  id v90 = v78;
  swift_bridgeObjectRetain();
  id v91 = v81;
  swift_bridgeObjectRetain();
  id v92 = v84;
  swift_bridgeObjectRetain();
  id v93 = v87;
  swift_bridgeObjectRetain();
  unint64_t v94 = specialized Dictionary.init(dictionaryLiteral:)(inited);
  uint64_t v166 = v94;
  swift_beginAccess();
  unint64_t v95 = *v157;
  if (!*v157 || v29 <= 0.0)
  {
LABEL_26:
    if (a19 - 4 >= 7 && a19 != 2)
    {
      if (a19 != 3)
      {
        id v134 = [self mainScreen];
        [v134 scale];
        double v136 = v135;

        swift_beginAccess();
        unint64_t v137 = swift_bridgeObjectRetain();
        uint64_t v138 = (void *)specialized static MOSuggestionAssetSnowglobeEffect.imageFor(images:targetSize:)(v137, v136 * 300.0, v136 * 300.0);
        swift_bridgeObjectRelease();
        if (!v138)
        {
          swift_bridgeObjectRelease();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v152, a22, v151, a24, v150, v160, a27);
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          goto LABEL_31;
        }
        uint64_t v139 = MOSuggestionAssetsTypeWorkoutGroup;
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
        id v140 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v138 type:v139 contentClassType:swift_getObjCClassFromMetadata()];
        (*(void (**)(void))(*(void *)a20 + 288))();
        NSString v141 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v140 addIdentifier:v141];

        specialized _dictionaryUpCast<A, B, C, D>(_:)(v166);
        swift_bridgeObjectRelease();
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v140 addMetadata:isa];

        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLIfNecessary(asset:cacheType:completion:)(v140, a19, v152, a22, v151, a24, v150, v160, a27, v149);

        swift_release_n();
        swift_release_n();
LABEL_30:
        swift_release_n();
        swift_bridgeObjectRelease_n();
LABEL_31:
        swift_release_n();
        goto LABEL_32;
      }
      uint64_t v129 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupIcons;
      swift_beginAccess();
      uint64_t v130 = *v161;
      char v165 = (void *)__swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [UIImage]);
      *(void *)&long long v164 = v130;
      outlined init with take of Any(&v164, v162);
      id v131 = v129;
      swift_bridgeObjectRetain();
      uint64_t v132 = v166;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v162, v131, isUniquelyReferenced_nonNull_native);
      uint64_t v166 = v132;

      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v116 = *v161;
    uint64_t v117 = one-time initialization token for exerciseGreen;
    swift_bridgeObjectRetain();
    if (v117 != -1) {
      swift_once();
    }
    char v118 = (void *)static MOSuggestionTheme.Colors.exerciseGreen;
    id v119 = [(id)static MOSuggestionTheme.Colors.exerciseGreen colorWithAlphaComponent:0.18];
    id v120 = [v118 colorWithAlphaComponent:0.18];
    id v121 = objc_allocWithZone((Class)type metadata accessor for MOSuggestionWorkoutsSnowGlobeView());
    id v122 = v118;
    id v123 = specialized MOSuggestionWorkoutsSnowGlobeView.init(icons:glyphLightBackgroundColor:glyphDarkBackgroundColor:glyphTintColor:)(v116, v119, v120, v122);

    id v124 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v123 type:MOSuggestionAssetsTypeWorkoutGroup contentClassType:swift_getObjCClassFromMetadata()];
    (*(void (**)(void))(*(void *)a20 + 288))();
    NSString v125 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v124 addIdentifier:v125];

    specialized _dictionaryUpCast<A, B, C, D>(_:)(v166);
    swift_bridgeObjectRelease();
    Class v126 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v124 addMetadata:v126];

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    id v127 = v124;
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v124, v152, a22, v151, a24, v150, v160, a27);

    swift_release_n();
    swift_release_n();
    goto LABEL_30;
  }
  id v96 = objc_allocWithZone((Class)HKHealthStore);
  id v97 = v95;
  id v98 = [v96 init];
  id v99 = [objc_allocWithZone((Class)FIUIUnitManager) initWithHealthStore:v98];

  id v100 = [objc_allocWithZone((Class)FIUIFormattingManager) initWithUnitManager:v99];
  if (!v100)
  {
LABEL_25:

    goto LABEL_26;
  }
  id v101 = [self quantityWithUnit:v97 doubleValue:v29];
  id v102 = (void *)MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrateQuantity;
  char v165 = (void *)type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for HKQuantity);
  *(void *)&long long v164 = v101;
  outlined init with take of Any(&v164, v162);
  id v103 = v102;
  id v104 = v101;
  char v105 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v163 = v94;
  specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v162, v103, v105);
  uint64_t v166 = v163;

  swift_bridgeObjectRelease();
  id v106 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRateWithUnit;
  id v107 = [v100 localizedStringWithHeartRate:v104 unitStyle:1];
  if (v107)
  {
    uint64_t v108 = v107;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.uppercased()();
    swift_bridgeObjectRelease();
    NSString v109 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v110 = [v109 trimmedString];

    if (v110)
    {
      uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v113 = v112;

      char v165 = &type metadata for String;
      *(void *)&long long v164 = v111;
      *((void *)&v164 + 1) = v113;
      outlined init with take of Any(&v164, v162);
      uint64_t v114 = v166;
      char v115 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v163 = v114;
      specialized _NativeDictionary.setValue(_:forKey:isUnique:)(v162, v106, v115);
      uint64_t v166 = v163;

      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    specialized Dictionary._Variant.removeValue(forKey:)((uint64_t)v106, &v164);

    outlined destroy of Any?((uint64_t)&v164, &demangling cache variable for type metadata for Any?);
    goto LABEL_25;
  }
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  __break(1u);
  return result;
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, id a7, unint64_t a8, void (*a9)(void), uint64_t a10)
{
  int v189 = a2;
  uint64_t v174 = a1;
  uint64_t v204 = type metadata accessor for UUID();
  uint64_t v190 = *(void *)(v204 - 8);
  uint64_t v16 = __chkstk_darwin(v204);
  id v203 = (double *)((char *)&v159 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v197 = (char *)&v159 - v19;
  __chkstk_darwin(v18);
  uint64_t v201 = (char *)&v159 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for UUID?);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  unint64_t v24 = (char *)&v159 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  id v185 = (char *)&v159 - v25;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a3;
  LODWORD(v182) = a4;
  *(unsigned char *)(v26 + 24) = a4;
  *(void *)(v26 + 32) = a5;
  *(void *)(v26 + 40) = a6;
  uint64_t v183 = a6;
  *(void *)(v26 + 48) = a7;
  *(void *)(v26 + 56) = a8;
  unint64_t v175 = a8;
  *(void *)(v26 + 64) = a9;
  *(void *)(v26 + 72) = a10;
  uint64_t v173 = a10;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(void *)(v27 + 24) = v26;
  type metadata accessor for MOWorkoutGroupAssetReference(0);
  uint64_t v28 = swift_dynamicCastClass();
  if (!v28)
  {
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    unint64_t v62 = v175;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain_n();
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a3, (int)v182, a5, v183, (uint64_t)a7, v62, a9);
    swift_release();
    swift_release();
    goto LABEL_58;
  }
  uint64_t v181 = a9;
  uint64_t v163 = v27;
  double v29 = (__CFString *)v26;
  uint64_t v30 = *(uint64_t (**)(uint64_t))(*(void *)v28 + 344);
  uint64_t v168 = a3;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v169 = v29;
  swift_retain_n();
  uint64_t v31 = swift_retain();
  uint64_t v32 = v30(v31);
  unint64_t v33 = v32;
  if ((unint64_t)v32 >> 62)
  {
    if (v32 < 0) {
      uint64_t v30 = (uint64_t (*)(uint64_t))v32;
    }
    else {
      uint64_t v30 = (uint64_t (*)(uint64_t))(v32 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v34 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v165 = a5;
  uint64_t v164 = (uint64_t)a7;
  if (v34)
  {
    if (v34 >= 1)
    {
      uint64_t v35 = 0;
      uint64_t v195 = 0;
      unint64_t v202 = v33 & 0xC000000000000001;
      uint64_t v194 = @"MOWorkoutMetaDataKeyWorkoutID";
      uint64_t v198 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v190 + 56);
      unint64_t v200 = (unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48);
      unint64_t v199 = (void (**)(char *, char *, uint64_t))(v190 + 32);
      uint64_t v36 = _swiftEmptyArrayStorage;
      uint64_t v196 = (uint64_t)&type metadata for Any + 8;
      uint64_t v193 = (uint64_t)&type metadata for Swift.AnyObject + 8;
      while (1)
      {
        id v37 = v202 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v33 + 8 * v35 + 32);
        unint64_t v38 = v37;
        unint64_t v39 = v33;
        id v40 = [v37 data];
        if (!v40) {
          break;
        }
        id v41 = v40;
        uint64_t v42 = v36;
        uint64_t v43 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v45 = v44;

        uint64_t v46 = self;
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        unint64_t aBlock = 0;
        id v48 = [v46 JSONObjectWithData:isa options:0 error:&aBlock];

        if (!v48)
        {
          id v57 = (id)aBlock;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          outlined consume of Data._Representation(v43, v45);
          swift_errorRelease();
          uint64_t v195 = 0;
LABEL_21:
          uint64_t v53 = v204;
          uint64_t v36 = v42;
LABEL_23:
          (*v198)(v24, 1, 1, v53);

          goto LABEL_24;
        }
        id v49 = (id)aBlock;
        _bridgeAnyObjectToAny(_:)();
        outlined consume of Data._Representation(v43, v45);
        swift_unknownObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [String : Swift.AnyObject]);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_21;
        }
        uint64_t v50 = v205;
        uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v53 = v204;
        uint64_t v36 = v42;
        if (!*(void *)(v50 + 16) || (unint64_t v54 = specialized __RawDictionaryStorage.find<A>(_:)(v51, v52), (v55 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
        uint64_t v56 = *(void *)(*(void *)(v50 + 56) + 8 * v54);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v205 = v56;
        if ((swift_dynamicCast() & 1) == 0) {
          break;
        }
        UUID.init(uuidString:)();

        swift_bridgeObjectRelease();
        uint64_t v53 = v204;
LABEL_24:
        if ((*v200)(v24, 1, v53) == 1)
        {
          outlined destroy of Any?((uint64_t)v24, &demangling cache variable for type metadata for UUID?);
        }
        else
        {
          uint64_t v58 = *v199;
          uint64_t v59 = v197;
          (*v199)(v197, v24, v53);
          v58((char *)v203, v59, v53);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v36 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *((void *)v36 + 2) + 1, 1, (unint64_t)v36);
          }
          unint64_t v61 = *((void *)v36 + 2);
          unint64_t v60 = *((void *)v36 + 3);
          if (v61 >= v60 >> 1) {
            uint64_t v36 = (double *)specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v60 > 1, v61 + 1, 1, (unint64_t)v36);
          }
          *((void *)v36 + 2) = v61 + 1;
          v58((char *)v36+ ((*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80))+ *(void *)(v190 + 72) * v61, (char *)v203, v53);
        }
        ++v35;
        unint64_t v33 = v39;
        if (v34 == v35)
        {
          swift_bridgeObjectRelease();
          goto LABEL_33;
        }
      }
      uint64_t v53 = v204;
      goto LABEL_23;
    }
    __break(1u);
    goto LABEL_43;
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = _swiftEmptyArrayStorage;
LABEL_33:
  swift_bridgeObjectRelease();
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = _swiftEmptyArrayStorage;
  uint64_t v191 = swift_allocObject();
  *(void *)(v191 + 16) = 0;
  id v203 = (double *)swift_allocObject();
  v203[2] = 0.0;
  uint64_t v196 = swift_allocObject();
  *(void *)(v196 + 16) = 0;
  uint64_t v195 = swift_allocObject();
  *(void *)(v195 + 16) = 0;
  unint64_t v172 = (void *)swift_allocObject();
  v172[2] = 0;
  uint64_t v194 = (__CFString *)swift_allocObject();
  v194->data = 0;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = 0;
  *(void *)(v63 + 24) = 0;
  uint64_t v64 = swift_allocObject();
  uint64_t v171 = v64;
  *(void *)(v64 + 16) = 0;
  *(unsigned char *)(v64 + 24) = 1;
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = 0;
  id v66 = [objc_allocWithZone((Class)HKQuantityType) initWithIdentifier:HKQuantityTypeIdentifierActiveEnergyBurned];
  id v162 = [objc_allocWithZone((Class)HKQuantityType) initWithIdentifier:HKQuantityTypeIdentifierHeartRate];
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = _swiftEmptyArrayStorage;
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = _swiftEmptyArrayStorage;
  unint64_t v202 = swift_allocObject();
  *(void *)(v202 + 16) = _swiftEmptyArrayStorage;
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = _swiftEmptyArrayStorage;
  uint64_t v70 = swift_allocObject();
  *(void *)(v70 + 16) = _swiftEmptyArrayStorage;
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = 0;
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = v172;
  *(void *)(v72 + 24) = v36;
  *(void *)(v72 + 32) = 2;
  *(void *)(v72 + 40) = v194;
  *(void *)(v72 + 48) = v66;
  *(void *)(v72 + 56) = v203;
  *(void *)(v72 + 64) = v63;
  uint64_t v167 = v63;
  uint64_t v73 = v191;
  *(void *)(v72 + 72) = v171;
  *(void *)(v72 + 80) = v65;
  uint64_t v166 = v65;
  uint64_t v74 = v67;
  uint64_t v75 = v196;
  *(void *)(v72 + 88) = v195;
  *(void *)(v72 + 96) = v75;
  uint64_t v76 = v193;
  *(void *)(v72 + 104) = v73;
  *(void *)(v72 + 112) = v76;
  *(void *)(v72 + 120) = v67;
  *(void *)(v72 + 128) = v68;
  *(void *)(v72 + 136) = v69;
  *(void *)(v72 + 144) = v70;
  *(void *)(v72 + 152) = v71;
  *(unsigned char *)(v72 + 160) = v189;
  *(void *)(v72 + 168) = v174;
  *(void *)(v72 + 176) = closure #2 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)partial apply;
  uint64_t v188 = v72;
  *(void *)(v72 + 184) = v163;
  uint64_t v170 = v36;
  uint64_t v187 = v67;
  uint64_t v192 = v68;
  uint64_t v186 = v69;
  uint64_t v184 = v70;
  uint64_t v161 = v71;
  id v160 = v66;
  if (v66)
  {
    id v77 = objc_allocWithZone((Class)HKHealthStore);
    id v78 = v66;
    swift_retain();
    uint64_t v30 = (uint64_t (*)(uint64_t))v78;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    a3 = v196;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    double v29 = v194;
    swift_retain();
    swift_retain();
    a7 = [v77 init];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t inited = swift_initStackObject();
    unint64_t v24 = (char *)&unk_1001DA000;
    *(_OWORD *)(inited + 16) = xmmword_1001DA250;
    *(void *)(inited + 32) = v30;
    unint64_t aBlock = inited;
    specialized Array._endMutation()();
    unint64_t v33 = aBlock;
    if (!(aBlock >> 62))
    {
      uint64_t v80 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v81 = v30;
      if (!v80)
      {
LABEL_44:
        swift_bridgeObjectRelease();
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType);
        lazy protocol witness table accessor for type HKQuantityType and conformance NSObject();
        Class v100 = Set._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v101 = (void *)swift_allocObject();
        v101[2] = v30;
        v101[3] = v29;
        uint64_t v102 = v188;
        v101[4] = partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
        v101[5] = v102;
        unint64_t v210 = (uint64_t (*)())partial apply for closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
        double v211 = v101;
        unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
        uint64_t v207 = 1107296256;
        id v208 = thunk for @escaping @callee_guaranteed (@guaranteed [HKQuantityType : HKUnit], @guaranteed Error?) -> ();
        id v209 = &block_descriptor_283;
        id v103 = _Block_copy(&aBlock);
        id v104 = v30;
        swift_retain();
        swift_retain();
        swift_release();
        [a7 preferredUnitsForQuantityTypes:v100 completion:v103];
        _Block_release(v103);

        unint64_t v93 = v175;
        uint64_t v92 = v173;
        uint64_t v94 = v183;
        uint64_t v95 = v187;
        uint64_t v96 = v192;
        id v97 = &selRef_collectionView_didSelectItemAtIndexPath_;
        uint64_t v89 = v168;
        goto LABEL_45;
      }
LABEL_36:
      specialized Set.init(_nonEmptyArrayLiteral:)(v33);
      goto LABEL_44;
    }
LABEL_43:
    id v98 = v30;
    swift_bridgeObjectRetain();
    uint64_t v99 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v99) {
      goto LABEL_44;
    }
    goto LABEL_36;
  }
  swift_retain();
  swift_retain();
  uint64_t v82 = v164;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v83 = v171;
  swift_retain();
  uint64_t v84 = v195;
  swift_retain();
  uint64_t v85 = v166;
  swift_retain();
  swift_retain();
  uint64_t v86 = v167;
  swift_retain();
  swift_retain();
  p_Class isa = &v194->isa;
  swift_retain();
  uint64_t v88 = (void *)swift_retain();
  uint64_t v156 = v70;
  uint64_t v157 = v71;
  uint64_t v89 = v168;
  uint64_t v90 = v192;
  uint64_t v154 = v74;
  uint64_t v91 = v196;
  uint64_t v152 = v85;
  uint64_t v92 = v173;
  specialized closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(v88, v36, (char *)2, p_isa, 0, v203, v86, v83, v152, v84, v196, v191, v193, v154, v192, v186, v156, v157, v189,
    v174,
    v168,
    v182,
    v165,
    v183,
    v82,
    v175,
    v181,
    v173);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v93 = v175;
  swift_bridgeObjectRelease();
  swift_release();
  a3 = v91;
  uint64_t v94 = v183;
  uint64_t v95 = v187;
  uint64_t v96 = v90;
  id v97 = &selRef_collectionView_didSelectItemAtIndexPath_;
  unint64_t v24 = (unsigned char *)&unk_1001DA000;
LABEL_45:
  id v105 = v162;
  if (v162)
  {
    id v106 = objc_allocWithZone((Class)HKHealthStore);
    id v107 = v105;
    id v108 = [v106 v97[69]];
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
    uint64_t v109 = swift_initStackObject();
    *(_OWORD *)(v109 + 16) = *((_OWORD *)v24 + 37);
    *(void *)(v109 + 32) = v107;
    unint64_t aBlock = v109;
    specialized Array._endMutation()();
    unint64_t v110 = aBlock;
    uint64_t v111 = v203;
    if (aBlock >> 62)
    {
      id v151 = v107;
      swift_bridgeObjectRetain();
      uint64_t v112 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v112 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v113 = v107;
    }
    uint64_t v114 = v161;
    uint64_t v115 = v193;
    if (v112) {
      specialized Set.init(_nonEmptyArrayLiteral:)(v110);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for HKQuantityType);
    lazy protocol witness table accessor for type HKQuantityType and conformance NSObject();
    Class v121 = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v122 = (void *)swift_allocObject();
    v122[2] = v107;
    v122[3] = v114;
    uint64_t v123 = v188;
    v122[4] = partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
    v122[5] = v123;
    unint64_t v210 = partial apply for closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
    double v211 = v122;
    unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
    uint64_t v207 = 1107296256;
    id v208 = thunk for @escaping @callee_guaranteed (@guaranteed [HKQuantityType : HKUnit], @guaranteed Error?) -> ();
    id v209 = &block_descriptor_277;
    id v124 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    id v125 = v107;
    swift_release();
    [v108 preferredUnitsForQuantityTypes:v121 completion:v124];
    _Block_release(v124);

    id v119 = v170;
    id v120 = v111;
  }
  else
  {
    swift_retain();
    uint64_t v116 = v92;
    uint64_t v117 = v165;
    swift_retain();
    uint64_t v118 = v164;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v158 = v94;
    uint64_t v155 = v95;
    uint64_t v115 = v193;
    uint64_t v153 = a3;
    id v119 = v170;
    id v120 = v203;
    specialized closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(v172, v170, (char *)2, &v194->isa, (uint64_t)v160, v203, v167, v171, v166, v195, v153, v191, v193, v155, v96, v186, v184, v161, v189,
      v174,
      v89,
      v182,
      v117,
      v158,
      v118,
      v93,
      v181,
      v116);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  Class v126 = (unsigned int (**)(char *, uint64_t, uint64_t))*((void *)v119 + 2);
  uint64_t v127 = v204;
  uint64_t v128 = v185;
  if (v126)
  {
    id v182 = *(void (**)(char *, void, uint64_t))(v190 + 16);
    uint64_t v129 = (void (**)(char *, char *, uint64_t))((char *)v170
                                                         + ((*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80)));
    uint64_t v181 = (void (*)(void))(v190 + 56);
    uint64_t v179 = *(void *)(v190 + 72);
    uint64_t v180 = (uint64_t (**)(char *, uint64_t, uint64_t))(v190 + 48);
    uint64_t v178 = (void (**)(char *, char *, uint64_t))(v190 + 32);
    id v177 = &v208;
    uint64_t v183 = v190 + 16;
    id v176 = (void (**)(char *, uint64_t))(v190 + 8);
    while (1)
    {
      v182(v128, v129, v127);
      (*(void (**)(char *, void, uint64_t, uint64_t))v181)(v128, 0, 1, v127);
      int v130 = (*v180)(v128, 1, v127);
      uint64_t v131 = v186;
      uint64_t v132 = v184;
      if (v130 == 1) {
        break;
      }
      (*v178)(v201, v128, v127);
      uint64_t v198 = (void (**)(char *, uint64_t, uint64_t, uint64_t))[objc_allocWithZone((Class)HKHealthStore) v97[69]];
      uint64_t v133 = swift_allocObject();
      unint64_t v200 = v126;
      uint64_t v134 = v133;
      *(void *)(v133 + 16) = v187;
      *(void *)(v133 + 24) = v131;
      uint64_t v135 = v192;
      *(void *)(v133 + 32) = v132;
      *(void *)(v133 + 40) = v135;
      *(void *)(v133 + 48) = v202;
      *(unsigned char *)(v133 + 56) = v189;
      *(void *)(v133 + 64) = v115;
      *(void *)(v133 + 72) = partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
      uint64_t v136 = v191;
      *(void *)(v133 + 80) = v188;
      *(void *)(v133 + 88) = v136;
      unint64_t v199 = v129;
      *(void *)(v133 + 96) = v194;
      *(void *)(v133 + 104) = v120;
      uint64_t v137 = v195;
      *(void *)(v133 + 112) = v196;
      *(void *)(v133 + 120) = v137;
      uint64_t v197 = (char *)self;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v138 = v193;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v139 = v201;
      uint64_t v115 = v138;
      Class v140 = UUID._bridgeToObjectiveC()().super.isa;
      id v141 = [v197 predicateForObjectWithUUID:v140];

      id v142 = [self workoutType];
      uint64_t v143 = swift_allocObject();
      *(void *)(v143 + 16) = partial apply for closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:);
      *(void *)(v143 + 24) = v134;
      id v144 = objc_allocWithZone((Class)HKSampleQuery);
      unint64_t v210 = (uint64_t (*)())partial apply for closure #1 in MOSuggestionAssetWorkoutProvider.getWorkout(workoutUUID:completion:);
      double v211 = (void *)v143;
      unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
      uint64_t v207 = 1107296256;
      id v208 = thunk for @escaping @callee_guaranteed @Sendable (@guaranteed HKSampleQuery, @guaranteed [HKSample]?, @guaranteed Error?) -> ();
      id v209 = &block_descriptor_271;
      uint64_t v145 = _Block_copy(&aBlock);
      swift_retain();
      id v146 = [v144 initWithSampleType:v142 predicate:v141 limit:1 sortDescriptors:0 resultsHandler:v145];

      id v97 = &selRef_collectionView_didSelectItemAtIndexPath_;
      _Block_release(v145);
      swift_release();
      id v147 = v198;
      [v198 executeQuery:v146];

      id v148 = v200;
      uint64_t v127 = v204;
      swift_release();

      uint64_t v128 = v185;
      uint64_t v149 = v199;
      id v120 = v203;
      (*v176)(v139, v127);
      uint64_t v129 = (void (**)(char *, char *, uint64_t))((char *)v149 + v179);
      Class v126 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)v148 - 1);
      if (!v126) {
        goto LABEL_56;
      }
    }
  }
  else
  {
LABEL_56:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v190 + 56))(v128, 1, 1, v127);
  }

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
LABEL_58:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  return swift_release_n();
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, void (*a10)(void), uint64_t a11)
{
  uint64_t v104 = a3;
  int v106 = a2;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for Date?);
  __chkstk_darwin(v17 - 8);
  id v108 = (char *)v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for Date();
  uint64_t v109 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  id v103 = (char *)v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a4;
  int v111 = a5;
  *(unsigned char *)(v20 + 24) = a5;
  *(void *)(v20 + 32) = a6;
  *(void *)(v20 + 40) = a7;
  uint64_t v112 = a7;
  id v113 = a10;
  *(void *)(v20 + 48) = a8;
  *(void *)(v20 + 56) = a9;
  *(void *)(v20 + 64) = a10;
  *(void *)(v20 + 72) = a11;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
  *(void *)(v21 + 24) = v20;
  type metadata accessor for MOGenericMapAssetReference(0);
  uint64_t v116 = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v115 = a9;
  swift_bridgeObjectRetain();
  uint64_t v114 = a11;
  swift_retain();
  uint64_t v22 = swift_dynamicCastClass();
  if (v22)
  {
    uint64_t v23 = v22;
    uint64_t v110 = v21;
    type metadata accessor for MOMapLocation();
    unint64_t v24 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 216);
    swift_retain_n();
    swift_retain_n();
    uint64_t v105 = a8;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain();
    uint64_t v25 = swift_retain();
    uint64_t v26 = (void *)v24(v25);
    uint64_t v27 = MOMapLocation.__allocating_init(fromResource:)(v26);
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v101 = a1;
      uint64_t v102 = (*(uint64_t (**)(void))(*(void *)v27 + 536))();
      unint64_t v29 = MOMapLocation.transferrableMetadata.getter();
      uint64_t v30 = (void *)(*(uint64_t (**)(void))(*(void *)v23 + 344))();
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v100[1] = v28;
      if (v31 == v34 && v33 == v35)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v38 & 1) == 0)
        {
          uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v67 = v66;
          if (v65 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v67 == v68)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v85 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v85 & 1) == 0)
            {
              uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v88 = v87;
              if (v86 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v88 == v89)
              {

                swift_bridgeObjectRelease_n();
                uint64_t v52 = (uint64_t)v108;
              }
              else
              {
                char v90 = _stringCompareWithSmolCheck(_:_:expecting:)();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v52 = (uint64_t)v108;
                if ((v90 & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  uint64_t v97 = v116;
                  swift_retain();
                  swift_retain();
                  uint64_t v98 = v105;
                  swift_retain();
                  unint64_t v99 = v115;
                  swift_bridgeObjectRetain();
                  swift_retain();
                  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v97, v111, a6, v112, v98, v99, v113);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release_n();
                  swift_release_n();
                  swift_release_n();
                  goto LABEL_16;
                }
              }
              uint64_t v91 = (void *)MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
              uint64_t v92 = (void *)MOSuggestionAssetMotionActivityTypeRunningWalking;
              type metadata accessor for MOSuggestionAssetMotionActivityType(0);
              uint64_t v120 = v93;
              v119[0] = v92;
              outlined init with take of Date?((uint64_t)v119, (uint64_t)v118, &demangling cache variable for type metadata for Any?);
              id v94 = v91;
              id v95 = v92;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v117 = v29;
              specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v118, v94, isUniquelyReferenced_nonNull_native);
              v100[0] = v117;

              uint64_t v46 = swift_bridgeObjectRelease();
              uint64_t v47 = v101;
              uint64_t v49 = v109;
              uint64_t v48 = v110;
              uint64_t v50 = v107;
              unsigned __int8 v51 = v106;
LABEL_12:
              if ((v51 - 2) < 9u)
              {
                unsigned __int8 v53 = v51;
                type metadata accessor for MOSuggestionAssetMapSnapshotProvider();
                swift_allocObject();
                uint64_t v54 = MOSuggestionAssetMapSnapshotProvider.init(targetQueue:)(0);
                char v55 = (void (*)(void))swift_allocObject();
                id v113 = v55;
                swift_weakInit();
                uint64_t v56 = (void *)swift_allocObject();
                uint64_t v57 = v100[0];
                void v56[2] = v47;
                v56[3] = v57;
                v56[4] = v55;
                v56[5] = closure #2 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)partial apply;
                v56[6] = v48;
                swift_retain_n();
                swift_retain_n();
                swift_retain_n();
                swift_bridgeObjectRetain();
                id v58 = specialized MOSuggestionAssetMapSnapshotProvider.makeOptionsForArea(for:size:)(v102, v53);
                uint64_t v59 = swift_allocObject();
                *(void *)(v59 + 16) = partial apply for specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:);
                *(void *)(v59 + 24) = v56;
                unint64_t v60 = *(void (**)(id, void (*)(void *), uint64_t))(*(void *)v54 + 200);
                swift_retain();
                v60(v58, partial apply for closure #1 in MOSuggestionAssetMapSnapshotProvider.getGenericMapFor(location:size:completion:), v59);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release_n();
                swift_release_n();
                swift_bridgeObjectRelease();
                swift_release();
                swift_release();
                swift_release();
                swift_release_n();

                goto LABEL_21;
              }
              uint64_t v61 = v102;
              (*(void (**)(uint64_t))(*(void *)v102 + 192))(v46);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v52, 1, v50) != 1)
              {
                uint64_t v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 32))(v103, v52, v50);
                double v70 = (*(double (**)(uint64_t))(*(void *)v61 + 240))(v69);
                double v71 = (*(double (**)(void))(*(void *)v61 + 264))();
                double v72 = (*(double (**)(void))(*(void *)v61 + 456))();
                id v73 = objc_allocWithZone((Class)CLLocation);
                Class isa = Date._bridgeToObjectiveC()().super.isa;
                id v75 = [v73 initWithCoordinate:isa v70 v71 0.0 v72 0.0];

                uint64_t v76 = MOSuggestionAssetsTypeGenericMap;
                type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CLLocation);
                id v77 = [objc_allocWithZone((Class)MOSuggestionAsset) init:v75 type:v76 contentClassType:swift_getObjCClassFromMetadata()];
                specialized _dictionaryUpCast<A, B, C, D>(_:)(v100[0]);
                swift_bridgeObjectRelease();
                Class v78 = Dictionary._bridgeToObjectiveC()().super.isa;
                swift_bridgeObjectRelease();
                [v77 addMetadata:v78];

                uint64_t v79 = v116;
                swift_retain();
                swift_retain();
                uint64_t v80 = v50;
                uint64_t v81 = v105;
                swift_retain();
                unint64_t v82 = v115;
                swift_bridgeObjectRetain();
                swift_retain();
                id v83 = v77;
                closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(v77, v79, v111, a6, v112, v81, v82, v113);

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                (*(void (**)(char *, uint64_t))(v109 + 8))(v103, v80);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                goto LABEL_21;
              }
              swift_bridgeObjectRelease();
              outlined destroy of Any?(v52, (uint64_t *)&demangling cache variable for type metadata for Date?);
              uint64_t v62 = v116;
              swift_retain();
              swift_retain();
              uint64_t v63 = v105;
              swift_retain();
              unint64_t v64 = v115;
              swift_bridgeObjectRetain();
              swift_retain();
              closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v62, v111, a6, v112, v63, v64, v113);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release_n();
              swift_release_n();
              swift_release_n();
LABEL_16:
              swift_bridgeObjectRelease();
              goto LABEL_21;
            }
          }

          unint64_t v39 = (void *)MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
          id v40 = (void **)&MOSuggestionAssetMotionActivityTypeWalking;
LABEL_11:
          id v41 = *v40;
          type metadata accessor for MOSuggestionAssetMotionActivityType(0);
          uint64_t v120 = v42;
          v119[0] = v41;
          outlined init with take of Date?((uint64_t)v119, (uint64_t)v118, &demangling cache variable for type metadata for Any?);
          id v43 = v39;
          id v44 = v41;
          char v45 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v117 = v29;
          specialized _NativeDictionary.setValue(_:forKey:isUnique:)((uint64_t)v118, v43, v45);
          v100[0] = v117;

          uint64_t v46 = swift_bridgeObjectRelease();
          uint64_t v47 = v101;
          uint64_t v49 = v109;
          uint64_t v48 = v110;
          uint64_t v50 = v107;
          unsigned __int8 v51 = v106;
          uint64_t v52 = (uint64_t)v108;
          goto LABEL_12;
        }
      }

      unint64_t v39 = (void *)MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
      id v40 = (void **)&MOSuggestionAssetMotionActivityTypeRunning;
      goto LABEL_11;
    }
    swift_release();
    a8 = v105;
  }
  else
  {
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain();
  }
  uint64_t v36 = v116;
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v37 = v115;
  swift_bridgeObjectRetain();
  swift_retain();
  closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v36, v111, a6, v112, a8, v37, v113);
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease();
LABEL_21:
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

uint64_t specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheStateOfMindFromProvider(_:cacheType:completion:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, double a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, void (*a15)(void))
{
  if (!a1)
  {
    swift_retain();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a9, a10, a11, a12, a13, a14, a15);
    swift_bridgeObjectRelease();
LABEL_52:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    return swift_release_n();
  }
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v124 = a2;
  id v126 = a1;
  uint64_t v119 = a3;
  id v21 = (id)HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
  uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v115 = v23;
  uint64_t v117 = v22;

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(a4 + 16) && (unint64_t v26 = specialized __RawDictionaryStorage.find<A>(_:)(v24, v25), (v27 & 1) != 0))
  {
    uint64_t v28 = *(void *)(*(void *)(a4 + 56) + 8 * v26);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v131[0] = v28;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Int]);
    if (swift_dynamicCast()) {
      uint64_t v29 = v129;
    }
    else {
      uint64_t v29 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = 0;
  }
  unint64_t v30 = specialized static MOSuggestionAssetStateOfMindProvider.getLabelsLocalized(labelResource:)(v29);
  uint64_t v107 = v31;
  unint64_t v109 = v30;
  uint64_t v111 = v33;
  uint64_t v113 = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v104 = a9;
  if (*(void *)(a4 + 16) && (unint64_t v36 = specialized __RawDictionaryStorage.find<A>(_:)(v34, v35), (v37 & 1) != 0))
  {
    uint64_t v38 = *(void *)(*(void *)(a4 + 56) + 8 * v36);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v131[0] = v38;
    __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for [Int]);
    if (swift_dynamicCast()) {
      uint64_t v39 = v129;
    }
    else {
      uint64_t v39 = 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v39 = 0;
  }
  unint64_t v40 = specialized static MOSuggestionAssetStateOfMindProvider.getDomainsLocalized(domainResource:)(v39);
  uint64_t v42 = v41;
  uint64_t v105 = v43;
  uint64_t v45 = v44;
  swift_bridgeObjectRelease();
  type metadata accessor for UIApplication(0, &lazy cache variable for type metadata for CAGradientLayer);
  uint64_t v46 = (void *)static CAGradientLayer.gradientLayerForValence(_:style:)();
  uint64_t v127 = (void *)static CAGradientLayer.gradientLayerForValence(_:style:)();
  unint64_t v99 = *(void (**)(void))(*(void *)a5 + 288);
  v99();
  NSString v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v126 addIdentifier:v47];

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for _ContiguousArrayStorage<(AnyHashable, Any)>);
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_1001DF410;
  uint64_t v49 = (void *)MOSuggestionAssetMetadataKeyStateOfMindValenceClassificationAndReflectiveIntervalLocalized;
  type metadata accessor for MOSuggestionAssetMetadataKey(0);
  _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type MOSuggestionAssetMetadataKey and conformance MOSuggestionAssetMetadataKey, type metadata accessor for MOSuggestionAssetMetadataKey);
  id v103 = v49;
  AnyHashable.init<A>(_:)();
  *(void *)(v48 + 96) = &type metadata for String;
  *(void *)(v48 + 72) = v117;
  *(void *)(v48 + 80) = v115;
  id v118 = MOSuggestionAssetMetadataKeyStateOfMindReflectiveInterval;
  AnyHashable.init<A>(_:)();
  *(void *)(v48 + 168) = &type metadata for Int;
  *(void *)(v48 + 144) = v119;
  id v120 = MOSuggestionAssetMetadataKeyStateOfMindValence;
  AnyHashable.init<A>(_:)();
  *(void *)(v48 + 240) = &type metadata for Double;
  *(double *)(v48 + 216) = a7;
  id v116 = MOSuggestionAssetMetadataKeyStateOfMindLabelsLocalized;
  AnyHashable.init<A>(_:)();
  *(void *)(v48 + 312) = &type metadata for String;
  *(void *)(v48 + 288) = v109;
  *(void *)(v48 + 296) = v107;
  id v110 = MOSuggestionAssetMetadataKeyStateOfMindLabelsLocalizedShortened;
  AnyHashable.init<A>(_:)();
  *(void *)(v48 + 384) = &type metadata for String;
  *(void *)(v48 + 360) = v113;
  *(void *)(v48 + 368) = v111;
  id v114 = MOSuggestionAssetMetadataKeyStateOfMindDomainsLocalized;
  AnyHashable.init<A>(_:)();
  *(void *)(v48 + 456) = &type metadata for String;
  *(void *)(v48 + 432) = v40;
  *(void *)(v48 + 440) = v42;
  id v50 = MOSuggestionAssetMetadataKeyStateOfMindDomainsLocalizedShortened;
  AnyHashable.init<A>(_:)();
  *(void *)(v48 + 528) = &type metadata for String;
  *(void *)(v48 + 504) = v105;
  *(void *)(v48 + 512) = v45;
  *(void *)&v131[0] = MOSuggestionAssetMetadataKeyStateOfMindLabels;
  id v51 = MOSuggestionAssetMetadataKeyStateOfMindLabels;
  AnyHashable.init<A>(_:)();
  uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v54 = v53;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for Swift.AnyObject?);
  *(void *)(v48 + 600) = v55;
  if (*(void *)(a4 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(v52, v54), (v56 & 1) != 0)) {
    uint64_t v57 = swift_unknownObjectRetain();
  }
  else {
    uint64_t v57 = 0;
  }
  *(void *)(v48 + 576) = v57;
  swift_bridgeObjectRelease();
  *(void *)&v131[0] = MOSuggestionAssetMetadataKeyStateOfMindDomains;
  id v121 = MOSuggestionAssetMetadataKeyStateOfMindDomains;
  AnyHashable.init<A>(_:)();
  uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v48 + 672) = v55;
  uint64_t v112 = v50;
  id v108 = v51;
  if (*(void *)(a4 + 16) && (specialized __RawDictionaryStorage.find<A>(_:)(v58, v59), (v60 & 1) != 0)) {
    uint64_t v61 = swift_unknownObjectRetain();
  }
  else {
    uint64_t v61 = 0;
  }
  *(void *)(v48 + 648) = v61;
  swift_bridgeObjectRelease();
  id v106 = MOSuggestionAssetMetadataKeyStateOfMindValenceClassification;
  AnyHashable.init<A>(_:)();
  *(void *)(v48 + 744) = &type metadata for Int;
  *(void *)(v48 + 720) = v124;
  *(void *)&v131[0] = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsLight;
  id v102 = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsLight;
  AnyHashable.init<A>(_:)();
  __swift_instantiateConcreteTypeFromMangledName(&demangling cache variable for type metadata for _ContiguousArrayStorage<Swift.AnyObject>);
  uint64_t v62 = swift_allocObject();
  *(_OWORD *)(v62 + 16) = xmmword_1001DACA0;
  id v63 = [v46 colors];
  if (!v63)
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    __break(1u);
LABEL_54:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    __break(1u);
    goto LABEL_55;
  }
  unint64_t v64 = v63;
  uint64_t v65 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v65 + 16))
  {
    outlined init with copy of Any(v65 + 32, (uint64_t)&v129);
  }
  else
  {
    long long v129 = 0u;
    long long v130 = 0u;
  }
  uint64_t v101 = v55;
  id v125 = v46;
  swift_bridgeObjectRelease();
  if (!*((void *)&v130 + 1)) {
    goto LABEL_54;
  }
  outlined init with take of Any(&v129, v131);
  type metadata accessor for CGColorRef(0);
  swift_dynamicCast();
  id v66 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v128];

  *(void *)(v62 + 32) = v66;
  id v67 = [v46 colors];
  if (!v67)
  {
LABEL_55:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    __break(1u);
LABEL_56:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v68 = v67;
  uint64_t v69 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v70 = *(void *)(v69 + 16);
  if (v70)
  {
    outlined init with copy of Any(v69 + 32 * v70, (uint64_t)&v129);
  }
  else
  {
    long long v129 = 0u;
    long long v130 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v130 + 1)) {
    goto LABEL_56;
  }
  outlined init with take of Any(&v129, v131);
  swift_dynamicCast();
  id v71 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v128];

  *(void *)(v62 + 40) = v71;
  *(void *)&v131[0] = v62;
  specialized Array._endMutation()();
  uint64_t v72 = *(void *)&v131[0];
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [UIColor]);
  *(void *)(v48 + 816) = v73;
  *(void *)(v48 + 792) = v72;
  *(void *)&v131[0] = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsDark;
  id v100 = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsDark;
  AnyHashable.init<A>(_:)();
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_1001DACA0;
  id v75 = [v127 colors];
  if (!v75)
  {
LABEL_57:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    __break(1u);
LABEL_58:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v76 = v75;
  uint64_t v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v77 + 16))
  {
    outlined init with copy of Any(v77 + 32, (uint64_t)&v129);
  }
  else
  {
    long long v129 = 0u;
    long long v130 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v130 + 1)) {
    goto LABEL_58;
  }
  outlined init with take of Any(&v129, v131);
  swift_dynamicCast();
  id v78 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v128];

  *(void *)(v74 + 32) = v78;
  id v79 = [v127 colors];
  if (!v79)
  {
LABEL_59:
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v80 = v79;
  uint64_t v81 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v82 = *(void *)(v81 + 16);
  if (v82)
  {
    outlined init with copy of Any(v81 + 32 * v82, (uint64_t)&v129);
  }
  else
  {
    long long v129 = 0u;
    long long v130 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v130 + 1))
  {

    outlined init with take of Any(&v129, v131);
    swift_dynamicCast();
    id v83 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v128];

    *(void *)(v74 + 40) = v83;
    *(void *)&v131[0] = v74;
    specialized Array._endMutation()();
    uint64_t v84 = *(void *)&v131[0];
    *(void *)(v48 + 888) = v73;
    *(void *)(v48 + 864) = v84;
    *(void *)&v131[0] = MOSuggestionAssetMetadataKeyStateOfMindIdentifier;
    id v85 = MOSuggestionAssetMetadataKeyStateOfMindIdentifier;
    AnyHashable.init<A>(_:)();
    uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v48 + 960) = v101;
    if (*(void *)(a4 + 16))
    {
      specialized __RawDictionaryStorage.find<A>(_:)(v86, v87);
      uint64_t v88 = v104;
      int v89 = a10;
      if (v90) {
        uint64_t v91 = swift_unknownObjectRetain();
      }
      else {
        uint64_t v91 = 0;
      }
    }
    else
    {
      uint64_t v91 = 0;
      uint64_t v88 = v104;
      int v89 = a10;
    }
    *(void *)(v48 + 936) = v91;
    swift_bridgeObjectRelease();
    *(void *)&v131[0] = MOSuggestionAssetMetadataKeyStateOfMindStartDate;
    id v92 = MOSuggestionAssetMetadataKeyStateOfMindStartDate;
    AnyHashable.init<A>(_:)();
    *(void *)(v48 + 1032) = type metadata accessor for Date();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v48 + 1008));
    Date.init(timeIntervalSince1970:)();
    specialized Dictionary.init(dictionaryLiteral:)(v48);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v126 addMetadata:isa];

    if ((a6 - 2) <= 8u)
    {
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        id v95 = *(id *)(Strong + 16);
        uint64_t v96 = swift_release();
        ((void (*)(uint64_t))v99)(v96);
        NSString v97 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v95 setObject:v126 forKey:v97 cost:1];
      }
    }
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized static MOSuggestionAssetCacheManager.wrapImageAssetInURLPairIfNecessary(asset:cacheType:completion:)(v126, a6, v88, v89, a11, a12, a13, a14, a15);

    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release();
    goto LABEL_52;
  }
LABEL_60:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  __break(1u);
  return result;
}

uint64_t specialized MOSuggestionAssetCacheManager.fetchAndCacheStateOfMindFromProvider(_:cacheType:completion:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, void (*a10)(void))
{
  uint64_t v61 = a7;
  int v60 = a5;
  uint64_t v57 = a3;
  int v58 = a2;
  uint64_t v59 = a10;
  uint64_t v55 = type metadata accessor for StateOfMindVisualization.ValenceImageProvider.ImageScale();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v52 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for StateOfMindVisualization.ValenceImageProvider();
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 256);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = swift_retain_n();
  uint64_t v19 = v17(v18);
  if (!v19) {
    goto LABEL_17;
  }
  uint64_t v20 = v19;
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v20 + 16)) {
    goto LABEL_15;
  }
  unint64_t v23 = specialized __RawDictionaryStorage.find<A>(_:)(v21, v22);
  if ((v24 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v25 = *(void *)(*(void *)(v20 + 56) + 8 * v23);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v25;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v26 = v62;
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v20 + 16)) {
    goto LABEL_15;
  }
  uint64_t v51 = v26;
  unint64_t v29 = specialized __RawDictionaryStorage.find<A>(_:)(v27, v28);
  if ((v30 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v31 = *(void *)(*(void *)(v20 + 56) + 8 * v29);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v31;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  double v32 = *(double *)&v62;
  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v20 + 16)) {
    goto LABEL_15;
  }
  unint64_t v35 = specialized __RawDictionaryStorage.find<A>(_:)(v33, v34);
  if ((v36 & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v37 = *(void *)(*(void *)(v20 + 56) + 8 * v35);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v37;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v20 + 16) || (unint64_t v40 = specialized __RawDictionaryStorage.find<A>(_:)(v38, v39), (v41 & 1) == 0))
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    swift_bridgeObjectRelease();
LABEL_17:
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, v60, a6, v61, a8, a9, v59);
    swift_release_n();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    goto LABEL_18;
  }
  uint64_t v42 = *(void *)(*(void *)(v20 + 56) + 8 * v40);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = v42;
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v50 = v62;
  swift_weakInit();
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v52, enum case for StateOfMindVisualization.ValenceImageProvider.ImageScale.confirmationView(_:), v55);
  swift_retain();
  StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)();
  uint64_t v57 = StateOfMindVisualization.ValenceImageProvider.uiImage.getter();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v56);
  uint64_t v43 = MOSuggestionAssetsTypeStateOfMindAsset;
  type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for UIImage);
  id v44 = objc_allocWithZone((Class)MOSuggestionAsset);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v46 = v44;
  NSString v47 = (void *)v57;
  id v48 = [v46 init:v57 type:v43 contentClassType:ObjCClassFromMetadata];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheStateOfMindFromProvider(_:cacheType:completion:)(v48, v51, v50, v20, a1, v58, v32, (uint64_t)&v63, a4, v60, a6, v61, a8, a9, v59);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_weakDestroy();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
LABEL_18:
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t specialized MOSuggestionAssetCacheManager.buildCacheAndReturnAsset(_:cacheType:completion:)(uint64_t a1, unsigned int a2, uint64_t (*a3)(), uint64_t a4, int a5, uint64_t a6, void (*a7)(uint64_t, char *, uint64_t), void *a8, unint64_t a9, void (*a10)(void), uint64_t a11)
{
  uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 120);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = swift_retain_n();
  uint64_t v17 = (void *)v15(v16);
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;
  if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21) {
    goto LABEL_13;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_14;
  }
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;
  if (v24 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v26 == v27) {
    goto LABEL_13;
  }
  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v29)
  {
LABEL_14:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10, a11);
    goto LABEL_15;
  }
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v31;
  if (v30 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v32 == v33)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v35) {
    goto LABEL_14;
  }
  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;
  if (v36 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v38 == v39)
  {
    swift_bridgeObjectRelease_n();
LABEL_21:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:)(a1, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10, a11);
    goto LABEL_15;
  }
  char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v40) {
    goto LABEL_21;
  }
  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v43 = v42;
  if (v41 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v43 == v44)
  {
    swift_bridgeObjectRelease_n();
LABEL_26:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(a1, a2, a3, a4, a5, a6, a7, (uint64_t)a8, a9, a10, a11);
    goto LABEL_15;
  }
  char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v45) {
    goto LABEL_26;
  }
  uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v48 = v47;
  if (v46 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v48 == v49)
  {
    swift_bridgeObjectRelease_n();
LABEL_31:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheMotionActivityFromProvider(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10, a11);
    goto LABEL_15;
  }
  char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v50) {
    goto LABEL_31;
  }
  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;
  if (v51 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v53 == v54)
  {
    swift_bridgeObjectRelease_n();
LABEL_36:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10, a11);
    goto LABEL_15;
  }
  char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v55) {
    goto LABEL_36;
  }
  uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v58 = v57;
  if (v56 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v58 == v59)
  {
    swift_bridgeObjectRelease_n();
LABEL_41:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:)(a1, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10, a11);
    goto LABEL_15;
  }
  char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v60) {
    goto LABEL_41;
  }
  uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v63 = v62;
  if (v61 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v63 == v64)
  {
    swift_bridgeObjectRelease_n();
LABEL_46:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheReflectionsPromptsFromProvider(_:isProxyForClient:completion:)(a1, (a2 - 11) < 0xF7u, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10);
    goto LABEL_15;
  }
  char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v65) {
    goto LABEL_46;
  }
  uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v68 = v67;
  if (v66 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v68 == v69)
  {
    swift_bridgeObjectRelease_n();
LABEL_51:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheLocationsPreviews(_:completion:)(a1, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10);
    goto LABEL_15;
  }
  char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v70) {
    goto LABEL_51;
  }
  uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v73 = v72;
  if (v71 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v73 == v74)
  {
    swift_bridgeObjectRelease_n();
LABEL_56:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:)(a1, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10, a11);
    goto LABEL_15;
  }
  char v75 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v75) {
    goto LABEL_56;
  }
  uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v78 = v77;
  if (v76 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v78 == v79)
  {
    swift_bridgeObjectRelease_n();
LABEL_61:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheContactPhotoFromProvider(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10, a11);
    goto LABEL_15;
  }
  char v80 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v80) {
    goto LABEL_61;
  }
  uint64_t v81 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v83 = v82;
  if (v81 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v83 == v84)
  {
    swift_bridgeObjectRelease_n();
LABEL_66:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10, a11);
    goto LABEL_15;
  }
  char v85 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v85) {
    goto LABEL_66;
  }
  uint64_t v86 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v88 = v87;
  if (v86 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v88 == v89)
  {
    swift_bridgeObjectRelease_n();
LABEL_71:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(a1, a2, a4, a5, a6, (uint64_t)a7, a8, a9, a10, a11);
    goto LABEL_15;
  }
  char v90 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v90) {
    goto LABEL_71;
  }
  uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v93 = v92;
  if (v91 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v93 == v94)
  {
    swift_bridgeObjectRelease_n();
LABEL_76:

    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    specialized MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10, a11);
    goto LABEL_15;
  }
  char v95 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v95) {
    goto LABEL_76;
  }
  uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v98 = v97;
  if (v96 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v98 == v99)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v100 & 1) == 0)
    {
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10);
      goto LABEL_15;
    }
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  specialized MOSuggestionAssetCacheManager.fetchAndCacheStateOfMindFromProvider(_:cacheType:completion:)(a1, a2, (uint64_t)a3, a4, a5, a6, (uint64_t)a7, (uint64_t)a8, a9, a10);
LABEL_15:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  return swift_release_n();
}

uint64_t specialized MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t (*a4)(), uint64_t a5, int a6, uint64_t a7, void (*a8)(uint64_t, char *, uint64_t), uint64_t a9, unint64_t a10, void (*a11)(void), uint64_t a12)
{
  uint64_t v139 = a4;
  unsigned int v140 = a3;
  uint64_t v132 = a2;
  uint64_t v17 = a12;
  uint64_t v128 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v127 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  id v125 = (char *)v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for DispatchQoS();
  uint64_t v124 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v123 = (char *)v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a5;
  int v130 = a6;
  *(unsigned char *)(v20 + 24) = a6;
  *(void *)(v20 + 32) = a7;
  *(void *)(v20 + 40) = a8;
  uint64_t v131 = a8;
  *(void *)(v20 + 48) = a9;
  *(void *)(v20 + 56) = a10;
  long long v129 = a11;
  *(void *)(v20 + 64) = a11;
  *(void *)(v20 + 72) = a12;
  uint64_t v134 = v20;
  uint64_t v21 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 120);
  uint64_t v138 = a5;
  swift_retain_n();
  uint64_t v137 = a7;
  swift_retain_n();
  uint64_t v136 = (void *)a9;
  swift_retain_n();
  unint64_t v135 = a10;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = swift_retain_n();
  char v23 = (void *)v21(v22);
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;
  if (v24 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v26 == v27)
  {

    uint64_t v28 = swift_bridgeObjectRelease_n();
  }
  else
  {
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    uint64_t v28 = swift_bridgeObjectRelease();
    if ((v29 & 1) == 0) {
      uint64_t v28 = (*(uint64_t (**)(void))(*(void *)a1 + 328))(v140);
    }
  }
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 296))(v28);
  uint64_t v32 = v31;
  int v33 = v140 - 11;
  if ((v140 - 11) > 0xF6u)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = v30;
    uint64_t v133 = a12;
    char v35 = v139;
    swift_beginAccess();
    uint64_t v36 = *((void *)v35 + 3);
    swift_bridgeObjectRetain();
    char v37 = specialized Set.contains(_:)(v34, v32, v36);
    swift_bridgeObjectRelease();
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v49 = type metadata accessor for Logger();
      __swift_project_value_buffer(v49, (uint64_t)static MOAngelLogger.assets);
      swift_retain_n();
      char v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = (uint8_t *)swift_slowAlloc();
        unint64_t aBlock = (double *)swift_slowAlloc();
        *(_DWORD *)uint64_t v52 = 136315138;
        uint64_t v53 = (*(uint64_t (**)(void))(*(void *)a1 + 312))();
        uint64_t v148 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v53, v54, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "[MOSuggestionAssetCacheManager] Cache retrieval blocked for %s", v52, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(0, v138, v130, v137, (uint64_t)v131, (uint64_t)v136, v135, v129);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_22;
    }
    swift_beginAccess();
    specialized Set._Variant.remove(_:)(v34, v32);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v133;
  }
  if ((specialized MOSuggestionAssetCacheManager.isInQueryList(_:reference:)(v132, a1) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
LABEL_22:
    swift_release();
    goto LABEL_47;
  }
  int v122 = v33;
  unsigned int v38 = v33;
  uint64_t v39 = swift_allocObject();
  uint64_t v132 = v39;
  *(void *)(v39 + 16) = a1;
  uint64_t v40 = v39 + 16;
  uint64_t v41 = swift_retain();
  p_weak_ivar_lyt = &MOSuggestionSheetNewEntryButton.weak_ivar_lyt;
  if (v38 < 0xF7)
  {
    uint64_t v43 = (void *)v21(v41);
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v46 = v45;
    if (v44 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v46 == v47)
    {

      uint64_t v48 = swift_bridgeObjectRelease_n();
LABEL_24:
      uint64_t v56 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 216))(v48);
      uint64_t v57 = (void *)MOSuggestionAssetsTypeLocationPreview;
      type metadata accessor for MOSuggestionAssetReference(0);
      uint64_t v58 = (void *)swift_allocObject();
      v58[4] = 0;
      v58[5] = 0;
      uint64_t v59 = (char *)v58 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_transferID;
      uint64_t v60 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
      *(void *)((char *)v58 + OBJC_IVAR____TtC16MomentsUIService26MOSuggestionAssetReference_resource) = v56;
      swift_beginAccess();
      v58[4] = 0;
      v58[5] = 0;
      id v61 = v57;
      swift_bridgeObjectRelease();
      v58[2] = v61;
      v58[3] = 0;
      unint64_t aBlock = 0;
      unint64_t v142 = 0xE000000000000000;
      v62._uint64_t countAndFlagsBits = 0x5954454843414323;
      v62._object = (void *)0xEA00000000004550;
      String.append(_:)(v62);
      LOBYTE(v148) = v140;
      _print_unlocked<A, B>(_:_:)();
      uint64_t v64 = (uint64_t)aBlock;
      uint64_t v63 = (void *)v142;
      if (!v58[5])
      {
        *((_OWORD *)v58 + 2) = xmmword_1001DF420;
        swift_bridgeObjectRelease();
      }
      char v65 = MOSuggestionSheetAssetViewModel.image.modify();
      uint64_t v67 = v132;
      if (*(void *)(v66 + 8))
      {
        v68._uint64_t countAndFlagsBits = v64;
        v68._object = v63;
        String.append(_:)(v68);
      }
      ((void (*)(double **, void))v65)(&aBlock, 0);
      swift_bridgeObjectRelease();
      *(void *)uint64_t v40 = v58;
      swift_retain();
      swift_release();
      if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
        swift_once();
      }
      uint64_t v69 = type metadata accessor for Logger();
      __swift_project_value_buffer(v69, (uint64_t)static MOAngelLogger.assets);
      swift_retain_n();
      char v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.info.getter();
      int v72 = v71;
      if (os_log_type_enabled(v70, v71))
      {
        int v121 = v72;
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        id v120 = (double *)swift_slowAlloc();
        unint64_t aBlock = v120;
        *(_DWORD *)uint64_t v73 = 136315138;
        v119[1] = v73 + 4;
        swift_beginAccess();
        uint64_t v74 = *(uint64_t (**)(uint64_t))(**(void **)(v67 + 16) + 312);
        uint64_t v75 = swift_retain();
        uint64_t v76 = v17;
        uint64_t v77 = v74(v75);
        unint64_t v79 = v78;
        swift_release();
        uint64_t v80 = v77;
        uint64_t v17 = v76;
        uint64_t v148 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v80, v79, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v121, "[MOSuggestionAssetCacheManager] Dynamic assetIdentifier swap --> %s", v73, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        p_weak_ivar_lyt = (void **)(&MOSuggestionSheetNewEntryButton + 56);
        swift_slowDealloc();
        swift_release();
      }
      else
      {

        swift_release_n();
        swift_release();
      }
      goto LABEL_33;
    }
    char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    uint64_t v48 = swift_bridgeObjectRelease();
    if (v55) {
      goto LABEL_24;
    }
  }
LABEL_33:
  uint64_t v133 = v17;
  uint64_t v81 = (void *)*((void *)v139 + 2);
  swift_beginAccess();
  uint64_t v82 = *(void (**)(uint64_t))(**(void **)v40 + 288);
  id v83 = v81;
  uint64_t v84 = swift_retain();
  v82(v84);
  swift_release();
  NSString v85 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v86 = [v83 objectForKey:v85];

  uint64_t v87 = v132;
  if (v86)
  {
    id v88 = [v86 assetType];
    uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v91 = v90;
    if (v89 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v91 == v92)
    {
      unsigned int v93 = v122;

      swift_bridgeObjectRelease_n();
      if (v93 > 0xF6)
      {
LABEL_49:
        type metadata accessor for UIApplication(0, (unint64_t *)&lazy cache variable for type metadata for OS_dispatch_queue);
        uint64_t v112 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v113 = (void *)swift_allocObject();
        v113[2] = v87;
        v113[3] = partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:);
        v113[4] = v134;
        v113[5] = v86;
        uint64_t v145 = partial apply for closure #1 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:);
        id v146 = v113;
        unint64_t aBlock = (double *)_NSConcreteStackBlock;
        unint64_t v142 = 1107296256;
        uint64_t v143 = thunk for @escaping @callee_guaranteed () -> ();
        id v144 = &block_descriptor_60;
        id v114 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        id v115 = v86;
        swift_release();
        id v116 = v123;
        static DispatchQoS.unspecified.getter();
        unint64_t aBlock = _swiftEmptyArrayStorage;
        _s8Dispatch0A13WorkItemFlagsVACs10SetAlgebraAAWlTm_4((unint64_t *)&lazy protocol witness table cache variable for type DispatchWorkItemFlags and conformance DispatchWorkItemFlags, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        lazy protocol witness table accessor for type [OS_dispatch_queue.Attributes] and conformance [A]((unint64_t *)&lazy protocol witness table cache variable for type [DispatchWorkItemFlags] and conformance [A], (uint64_t *)&demangling cache variable for type metadata for [DispatchWorkItemFlags]);
        uint64_t v117 = v125;
        uint64_t v118 = v128;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v114);

        (*(void (**)(char *, uint64_t))(v127 + 8))(v117, v118);
        (*(void (**)(char *, uint64_t))(v124 + 8))(v116, v126);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
    }
    else
    {
      unsigned int v94 = v122;
      char v95 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v94 > 0xF6 || (v95 & 1) == 0) {
        goto LABEL_49;
      }
    }
  }
  if (p_weak_ivar_lyt[452] != (void *)-1) {
    swift_once();
  }
  uint64_t v96 = type metadata accessor for Logger();
  __swift_project_value_buffer(v96, (uint64_t)static MOAngelLogger.assets);
  swift_retain_n();
  uint64_t v97 = Logger.logObject.getter();
  os_log_type_t v98 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v97, v98))
  {
    uint64_t v99 = (uint8_t *)swift_slowAlloc();
    unint64_t aBlock = (double *)swift_slowAlloc();
    *(_DWORD *)uint64_t v99 = 136315138;
    char v100 = *(uint64_t (**)(uint64_t))(**(void **)(v87 + 16) + 312);
    uint64_t v101 = swift_retain();
    uint64_t v102 = v100(v101);
    unint64_t v104 = v103;
    swift_release();
    uint64_t v147 = getNullTerminatedUTF8PointerImpl(_:storingStringOwnersIn:)(v102, v104, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v97, v98, "[MOSuggestionAssetCacheManager] Building cache for %s", v99, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v105 = v133;
  uint64_t v106 = v138;
  swift_retain();
  uint64_t v107 = v137;
  swift_retain();
  id v108 = v136;
  swift_retain();
  unint64_t v109 = v135;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v110 = swift_retain();
  specialized MOSuggestionAssetCacheManager.buildCacheAndReturnAsset(_:cacheType:completion:)(v110, v140, v139, v106, v130, v107, v131, v108, v109, v129, v105);
  swift_release();
  swift_release();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
LABEL_47:
  swift_release();
  return swift_release();
}

uint64_t sub_1001CD570()
{
  swift_release();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CD5A8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #1 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)()
{
  return closure #1 in MOSuggestionAssetCacheManager.retrieveAssetFor(_:withTypes:cacheType:completion:)(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:)(unint64_t a1)
{
  closure #1 in MOSuggestionAssetCacheManager.fetchAndCachePhotoLivePhotoVideosFromProvider(_:cacheType:completion:)(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(id))(v1 + 40));
}

uint64_t outlined destroy of MOSuggestionAssetCacheWorkoutInput(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MOSuggestionAssetCacheWorkoutInput();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:)(uint64_t a1, void *a2)
{
  closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheRingsFromProvider(_:completion:)(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(id))(v2 + 32));
}

uint64_t sub_1001CD68C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)()
{
  closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void (**)(id))(v0 + 88), *(uint8_t **)(v0 + 96));
}

uint64_t sub_1001CD740()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1)
{
  closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(id))(v1 + 48));
}

uint64_t sub_1001CD7A0()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  uint64_t v8 = (v6 + v4 + v5) & ~v4;
  unint64_t v9 = (((((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  v3(v0 + v5, v1);
  v3(v0 + v8, v1);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v9 + 8, v7);
}

void partial apply for closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = (v6 + v4 + v5) & ~v4;
  unint64_t v8 = (v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  double v10 = *(double *)(v1 + v8);
  uint64_t v11 = v1 + v7;
  uint64_t v12 = *(void (**)(void))(v1 + v9);
  uint64_t v13 = *(void *)(v1 + v9 + 8);
  uint64_t v14 = v1 + ((v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *(void *)(v1 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8));
  int v17 = *(unsigned __int8 *)(v14 + 8);

  closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(a1, v1 + v5, v11, v12, v13, v15, v17, v16, v10);
}

uint64_t sub_1001CD988()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t partial apply for closure #1 in closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(void *a1)
{
  return closure #1 in closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t partial apply for closure #1 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(uint64_t a1)
{
  return closure #1 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheWorkoutObjectFromProvider(_:cacheType:completion:)(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1001CD9EC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001CDA24()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001CDA34()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

void partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(void *a1)
{
  closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void (**)(id))(v1 + 40), *(uint8_t **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104));
}

uint64_t sub_1001CDAE0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 185, 7);
}

void partial apply for specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(void *a1)
{
  specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheMediaArtworkFromProvider(_:cacheType:completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(uint64_t **)(v1 + 56), (uint64_t *)(v1 + 64), *(uint64_t **)(v1 + 152), *(void *)(v1 + 160), *(void (**)(id))(v1 + 168), *(uint8_t **)(v1 + 176), *(unsigned char *)(v1 + 184));
}

uint64_t objectdestroy_82Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:)(void *a1)
{
  closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheAppIconsFromProvider(_:completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

void partial apply for closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:)(void *a1)
{
  closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheLinkPreviews(_:completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

uint64_t sub_1001CDC34()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 120, 7);
}

void partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)()
{
  closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(*(void *)(v0 + 16), *(NSObject **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(NSObject **)(v0 + 56), *(void (**)(id))(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112));
}

uint64_t partial apply for closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)()
{
  return closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001CDD14()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t partial apply for closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1)
{
  return closure #4 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(uint64_t (**)(uint64_t))(v1 + 88));
}

uint64_t partial apply for closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1)
{
  return partial apply for closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:));
}

uint64_t specialized static MOSuggestionAssetCacheManager.shouldDropUninterestingPOI(_:mapItem:location:)(uint64_t a1, void *a2)
{
  if (serverManager._connectionProperties != (NSMutableDictionary *)-1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  __swift_project_value_buffer(v4, (uint64_t)static MOAngelLogger.assets);
  swift_retain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109376;
    specialized static MOAngelDefaultsManager.BOOLeanValueFor(_:)();
    uint64_t v8 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 2048;
    (*(void (**)(uint64_t))(*(void *)a1 + 144))(v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[POIClustering] [DEFAULTS] shouldDropUninterestingPOI=%{BOOL}d, bundleType=%lu", (uint8_t *)v7, 0x12u);
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
  uint64_t v9 = specialized static MOAngelDefaultsManager.BOOLeanValueFor(_:)();
  if ((v9 & 1) == 0
    || (*(uint64_t (**)(uint64_t))(*(void *)a1 + 144))(v9) != 13
    || (id v10 = [a2 _poiCategory]) == 0)
  {
    char v21 = 0;
    return v21 & 1;
  }
  uint64_t v11 = v10;
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;
  if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15) {
    goto LABEL_14;
  }
  char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
LABEL_15:

    char v21 = 1;
    return v21 & 1;
  }
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;
  if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20) {
    goto LABEL_14;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23) {
    goto LABEL_15;
  }
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;
  if (v24 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v26 == v27) {
    goto LABEL_14;
  }
  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_15;
  }
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;
  if (v29 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v31 == v32) {
    goto LABEL_14;
  }
  char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_15;
  }
  uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v36 = v35;
  if (v34 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v36 == v37) {
    goto LABEL_14;
  }
  char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v38) {
    goto LABEL_15;
  }
  uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v40;
  if (v39 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v41 == v42) {
    goto LABEL_14;
  }
  char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v43) {
    goto LABEL_15;
  }
  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;
  if (v44 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v46 == v47) {
    goto LABEL_14;
  }
  char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v48) {
    goto LABEL_15;
  }
  uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v51 = v50;
  if (v49 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v51 == v52) {
    goto LABEL_14;
  }
  char v53 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v53) {
    goto LABEL_15;
  }
  uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v56 = v55;
  if (v54 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v56 == v57) {
    goto LABEL_14;
  }
  char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v58) {
    goto LABEL_15;
  }
  uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v61 = v60;
  if (v59 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v61 == v62) {
    goto LABEL_14;
  }
  char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v63) {
    goto LABEL_15;
  }
  uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v66 = v65;
  if (v64 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v66 == v67) {
    goto LABEL_14;
  }
  char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v68) {
    goto LABEL_15;
  }
  uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v71 = v70;
  if (v69 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v71 == v72) {
    goto LABEL_14;
  }
  char v73 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v73) {
    goto LABEL_15;
  }
  uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v76 = v75;
  if (v74 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v76 == v77)
  {
LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v78 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v78) {
    goto LABEL_15;
  }
  uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v81 = v80;
  if (v79 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v81 == v82) {
    char v21 = 1;
  }
  else {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  id v83 = v11;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v21 & 1;
}

uint64_t sub_1001CE5B8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001CE5F0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001CE628()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 192, 7);
}

void partial apply for closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)()
{
  closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(*(void **)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(double **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(unsigned char *)(v0 + 160),
    *(void *)(v0 + 168),
    *(void (**)(id))(v0 + 176),
    *(void *)(v0 + 184));
}

uint64_t sub_1001CE750()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t partial apply for closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(void *a1)
{
  return closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), *(void *)(v1 + 64), *(uint64_t (**)(void))(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120));
}

uint64_t objectdestroy_273Tm()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t partial apply for closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1, uint64_t a2)
{
  return closure #3 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(uint64_t (**)(void))(v2 + 32));
}

uint64_t sub_1001CE8A0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t partial apply for closure #1 in closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(uint64_t a1)
{
  return closure #1 in closure #5 in MOSuggestionAssetCacheManager.fetchAndCacheCombinedWorkoutObjectsFromProviders(_:cacheType:completion:)(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72), *(uint64_t (**)(uint64_t))(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128));
}

uint64_t objectdestroy_50Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t partial apply for closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(void *a1)
{
  return closure #1 in closure #1 in MOSuggestionAssetCacheManager.retrieveAssetsFor(_:withTypes:queue:cacheType:completion:)(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void (**)(void))(v1 + 64));
}

uint64_t partial apply for specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:)(uint64_t a1)
{
  return partial apply for closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))specialized closure #1 in MOSuggestionAssetCacheManager.fetchAndCacheGenericMapSnapshots(_:cacheType:completion:));
}

uint64_t partial apply for closure #3 in closure #2 in MOSuggestionAssetCacheManager.fetchAndCacheMultiPinMapSnapshots(_:cacheType:completion:)(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

objc_class *one-time initialization function for resourceBundle()
{
  type metadata accessor for ResourceBundleClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t result = (objc_class *)[self bundleForClass:ObjCClassFromMetadata];
  resourceBundle.super.Class isa = result;
  return result;
}

uint64_t one-time initialization function for creativity()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.creativity);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.creativity);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.creativity.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for creativity, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.creativity);
}

uint64_t static ColorResource.creativity.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for creativity, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.creativity, a1);
}

uint64_t one-time initialization function for gratitude()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.gratitude);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.gratitude);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.gratitude.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for gratitude, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.gratitude);
}

uint64_t static ColorResource.gratitude.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for gratitude, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.gratitude, a1);
}

uint64_t one-time initialization function for kindness()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.kindness);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.kindness);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.kindness.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for kindness, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.kindness);
}

uint64_t static ColorResource.kindness.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for kindness, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.kindness, a1);
}

uint64_t one-time initialization function for purpose()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.purpose);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.purpose);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.purpose.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for purpose, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.purpose);
}

uint64_t static ColorResource.purpose.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for purpose, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.purpose, a1);
}

uint64_t one-time initialization function for resilience()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.resilience);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.resilience);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.resilience.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for resilience, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.resilience);
}

uint64_t static ColorResource.resilience.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for resilience, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.resilience, a1);
}

uint64_t one-time initialization function for wisdom()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.wisdom);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.wisdom);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.wisdom.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for wisdom, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.wisdom);
}

uint64_t static ColorResource.wisdom.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for wisdom, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.wisdom, a1);
}

uint64_t one-time initialization function for wisdomText()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.wisdomText);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.wisdomText);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.wisdomText.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for wisdomText, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.wisdomText);
}

uint64_t static ColorResource.wisdomText.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for wisdomText, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.wisdomText, a1);
}

uint64_t one-time initialization function for distanceBlue()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.distanceBlue);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.distanceBlue);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.distanceBlue.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for distanceBlue, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.distanceBlue);
}

uint64_t static ColorResource.distanceBlue.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for distanceBlue, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.distanceBlue, a1);
}

uint64_t one-time initialization function for exerciseGreen()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.exerciseGreen);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.exerciseGreen);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.exerciseGreen.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for exerciseGreen, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.exerciseGreen);
}

uint64_t static ColorResource.exerciseGreen.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for exerciseGreen, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.exerciseGreen, a1);
}

uint64_t one-time initialization function for exerciseGreenFaded()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.exerciseGreenFaded);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.exerciseGreenFaded);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.exerciseGreenFaded.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for exerciseGreenFaded, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.exerciseGreenFaded);
}

uint64_t static ColorResource.exerciseGreenFaded.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for exerciseGreenFaded, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.exerciseGreenFaded, a1);
}

uint64_t one-time initialization function for heartRed()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.heartRed);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.heartRed);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.heartRed.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for heartRed, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.heartRed);
}

uint64_t static ColorResource.heartRed.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for heartRed, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.heartRed, a1);
}

uint64_t one-time initialization function for motionBackground()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.motionBackground);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.motionBackground);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.motionBackground.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for motionBackground, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.motionBackground);
}

uint64_t static ColorResource.motionBackground.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for motionBackground, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.motionBackground, a1);
}

uint64_t one-time initialization function for motionFootsteps()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.motionFootsteps);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.motionFootsteps);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.motionFootsteps.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for motionFootsteps, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.motionFootsteps);
}

uint64_t static ColorResource.motionFootsteps.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for motionFootsteps, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.motionFootsteps, a1);
}

uint64_t one-time initialization function for movePink()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.movePink);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.movePink);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.movePink.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for movePink, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.movePink);
}

uint64_t static ColorResource.movePink.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for movePink, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.movePink, a1);
}

uint64_t one-time initialization function for standBlue()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.standBlue);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.standBlue);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.standBlue.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for standBlue, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.standBlue);
}

uint64_t static ColorResource.standBlue.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for standBlue, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.standBlue, a1);
}

uint64_t one-time initialization function for timeYellow()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  __swift_allocate_value_buffer(v0, static ColorResource.timeYellow);
  __swift_project_value_buffer(v0, (uint64_t)static ColorResource.timeYellow);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ColorResource.init(name:bundle:)();
}

uint64_t ColorResource.timeYellow.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for timeYellow, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.timeYellow);
}

uint64_t static ColorResource.timeYellow.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for timeYellow, (uint64_t (*)(void))&type metadata accessor for ColorResource, (uint64_t)static ColorResource.timeYellow, a1);
}

uint64_t one-time initialization function for journalingSuggestionsIcon()
{
  uint64_t v0 = type metadata accessor for ImageResource();
  __swift_allocate_value_buffer(v0, static ImageResource.journalingSuggestionsIcon);
  __swift_project_value_buffer(v0, (uint64_t)static ImageResource.journalingSuggestionsIcon);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ImageResource.init(name:bundle:)();
}

uint64_t ImageResource.journalingSuggestionsIcon.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for journalingSuggestionsIcon, (uint64_t (*)(void))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.journalingSuggestionsIcon);
}

uint64_t static ImageResource.journalingSuggestionsIcon.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for journalingSuggestionsIcon, (uint64_t (*)(void))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.journalingSuggestionsIcon, a1);
}

uint64_t one-time initialization function for momentMockup()
{
  uint64_t v0 = type metadata accessor for ImageResource();
  __swift_allocate_value_buffer(v0, static ImageResource.momentMockup);
  __swift_project_value_buffer(v0, (uint64_t)static ImageResource.momentMockup);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ImageResource.init(name:bundle:)();
}

uint64_t ImageResource.momentMockup.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for momentMockup, (uint64_t (*)(void))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.momentMockup);
}

uint64_t static ImageResource.momentMockup.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for momentMockup, (uint64_t (*)(void))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.momentMockup, a1);
}

uint64_t one-time initialization function for privacyIcon()
{
  uint64_t v0 = type metadata accessor for ImageResource();
  __swift_allocate_value_buffer(v0, static ImageResource.privacyIcon);
  __swift_project_value_buffer(v0, (uint64_t)static ImageResource.privacyIcon);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ImageResource.init(name:bundle:)();
}

uint64_t ImageResource.privacyIcon.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for privacyIcon, (uint64_t (*)(void))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.privacyIcon);
}

uint64_t static ImageResource.privacyIcon.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for privacyIcon, (uint64_t (*)(void))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.privacyIcon, a1);
}

uint64_t one-time initialization function for momentsPrivacy80Masked()
{
  uint64_t v0 = type metadata accessor for ImageResource();
  __swift_allocate_value_buffer(v0, static ImageResource.momentsPrivacy80Masked);
  __swift_project_value_buffer(v0, (uint64_t)static ImageResource.momentsPrivacy80Masked);
  if (one-time initialization token for resourceBundle != -1) {
    swift_once();
  }
  uint64_t v1 = resourceBundle.super.isa;
  return ImageResource.init(name:bundle:)();
}

uint64_t ImageResource.momentsPrivacy80Masked.unsafeMutableAddressor()
{
  return ColorResource.creativity.unsafeMutableAddressor(&one-time initialization token for momentsPrivacy80Masked, (uint64_t (*)(void))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.momentsPrivacy80Masked);
}

uint64_t ColorResource.creativity.unsafeMutableAddressor(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return __swift_project_value_buffer(v5, a3);
}

uint64_t static ImageResource.momentsPrivacy80Masked.getter@<X0>(uint64_t a1@<X8>)
{
  return static ColorResource.creativity.getter(&one-time initialization token for momentsPrivacy80Masked, (uint64_t (*)(void))&type metadata accessor for ImageResource, (uint64_t)static ImageResource.momentsPrivacy80Masked, a1);
}

uint64_t static ColorResource.creativity.getter@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

uint64_t static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)()
{
  return static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)();
}

uint64_t Measurement.unit.getter()
{
  return Measurement.unit.getter();
}

uint64_t Measurement.init(value:unit:)()
{
  return Measurement.init(value:unit:)();
}

uint64_t Measurement.value.getter()
{
  return Measurement.value.getter();
}

uint64_t static Measurement<>.FormatStyle.UnitWidth.abbreviated.getter()
{
  return static Measurement<>.FormatStyle.UnitWidth.abbreviated.getter();
}

uint64_t Measurement<>.formatted<A>(_:)()
{
  return Measurement<>.formatted<A>(_:)();
}

uint64_t CharacterSet.init(charactersIn:)()
{
  return CharacterSet.init(charactersIn:)();
}

uint64_t static CharacterSet.decimalDigits.getter()
{
  return static CharacterSet.decimalDigits.getter();
}

uint64_t CharacterSet.inverted.getter()
{
  return CharacterSet.inverted.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

NSDateComponents __swiftcall DateComponents._bridgeToObjectiveC()()
{
  return (NSDateComponents)DateComponents._bridgeToObjectiveC()();
}

uint64_t DateComponents.day.getter()
{
  return DateComponents.day.getter();
}

uint64_t DateComponents.hour.getter()
{
  return DateComponents.hour.getter();
}

uint64_t DateComponents.hour.setter()
{
  return DateComponents.hour.setter();
}

uint64_t DateComponents.year.getter()
{
  return DateComponents.year.getter();
}

uint64_t DateComponents.month.getter()
{
  return DateComponents.month.getter();
}

uint64_t DateComponents.minute.getter()
{
  return DateComponents.minute.getter();
}

uint64_t DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t DateComponents.calendar.setter()
{
  return DateComponents.calendar.setter();
}

uint64_t type metadata accessor for DateComponents()
{
  return type metadata accessor for DateComponents();
}

uint64_t type metadata accessor for AttributedString()
{
  return type metadata accessor for AttributedString();
}

uint64_t AttributedString.init(_:attributes:)()
{
  return AttributedString.init(_:attributes:)();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t type metadata accessor for AttributeContainer()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t AttributeContainer.init(_:)()
{
  return AttributeContainer.init(_:)();
}

uint64_t static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)()
{
  return static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
}

uint64_t static PredicateExpressions.build_Arg<A>(_:)()
{
  return static PredicateExpressions.build_Arg<A>(_:)();
}

{
  return static PredicateExpressions.build_Arg<A>(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t NSFastEnumerationIterator.next()()
{
  return NSFastEnumerationIterator.next()();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t static MeasurementFormatUnitUsage.general.getter()
{
  return static MeasurementFormatUnitUsage.general.getter();
}

uint64_t URL.absoluteURL.getter()
{
  return URL.absoluteURL.getter();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t URL.pathExtension.getter()
{
  return URL.pathExtension.getter();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t URL.debugDescription.getter()
{
  return URL.debugDescription.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.appendingPathComponent(_:conformingTo:)()
{
  return URL.appendingPathComponent(_:conformingTo:)();
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t URL.appending<A>(component:directoryHint:)()
{
  return URL.appending<A>(component:directoryHint:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Data._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.write(to:options:)()
{
  return Data.write(to:options:)();
}

uint64_t Date.init(timeIntervalSinceReferenceDate:)()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.> infix(_:_:)()
{
  return static Date.> infix(_:_:)();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t Date.init(timeIntervalSince1970:)()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)Locale._bridgeToObjectiveC()();
}

uint64_t static Locale.autoupdatingCurrent.getter()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t Calendar.isDateInToday(_:)()
{
  return Calendar.isDateInToday(_:)();
}

uint64_t Calendar.dateComponents(_:from:)()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t Calendar.isDateInYesterday(_:)()
{
  return Calendar.isDateInYesterday(_:)();
}

uint64_t static Calendar.autoupdatingCurrent.getter()
{
  return static Calendar.autoupdatingCurrent.getter();
}

uint64_t Calendar.date(from:)()
{
  return Calendar.date(from:)();
}

uint64_t Calendar.isDate(_:inSameDayAs:)()
{
  return Calendar.isDate(_:inSameDayAs:)();
}

uint64_t static Calendar.current.getter()
{
  return static Calendar.current.getter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t Calendar.component(_:from:)()
{
  return Calendar.component(_:from:)();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

void __swiftcall IndexSet._bridgeToObjectiveC()(NSIndexSet *__return_ptr retstr)
{
}

uint64_t type metadata accessor for IndexSet()
{
  return type metadata accessor for IndexSet();
}

uint64_t type metadata accessor for TimeZone()
{
  return type metadata accessor for TimeZone();
}

uint64_t IndexPath.debugDescription.getter()
{
  return IndexPath.debugDescription.getter();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t IndexPath.init(row:section:)()
{
  return IndexPath.init(row:section:)();
}

uint64_t IndexPath.row.getter()
{
  return IndexPath.row.getter();
}

uint64_t IndexPath.init(item:section:)()
{
  return IndexPath.init(item:section:)();
}

uint64_t IndexPath.item.getter()
{
  return IndexPath.item.getter();
}

uint64_t IndexPath.section.getter()
{
  return IndexPath.section.getter();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

NSNumber __swiftcall CGFloat._bridgeToObjectiveC()()
{
  return (NSNumber)CGFloat._bridgeToObjectiveC()();
}

uint64_t static CGFloat._forceBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

uint64_t dispatch thunk of PhotosFileProviderRegister.registerFileRepresentations(itemProvider:asset:)()
{
  return dispatch thunk of PhotosFileProviderRegister.registerFileRepresentations(itemProvider:asset:)();
}

uint64_t dispatch thunk of PhotosFileProviderRegister.Configuration.userEncodingPolicy.setter()
{
  return dispatch thunk of PhotosFileProviderRegister.Configuration.userEncodingPolicy.setter();
}

uint64_t dispatch thunk of PhotosFileProviderRegister.Configuration.clientEncodingPolicy.setter()
{
  return dispatch thunk of PhotosFileProviderRegister.Configuration.clientEncodingPolicy.setter();
}

uint64_t dispatch thunk of PhotosFileProviderRegister.Configuration.shouldIncludeCaption.setter()
{
  return dispatch thunk of PhotosFileProviderRegister.Configuration.shouldIncludeCaption.setter();
}

uint64_t dispatch thunk of PhotosFileProviderRegister.Configuration.shouldIncludeLocation.setter()
{
  return dispatch thunk of PhotosFileProviderRegister.Configuration.shouldIncludeLocation.setter();
}

uint64_t PhotosFileProviderRegister.Configuration.init(usage:)()
{
  return PhotosFileProviderRegister.Configuration.init(usage:)();
}

uint64_t type metadata accessor for PhotosFileProviderRegister.Configuration()
{
  return type metadata accessor for PhotosFileProviderRegister.Configuration();
}

uint64_t PhotosFileProviderRegister.init(configuration:fileProviderManager:domain:)()
{
  return PhotosFileProviderRegister.init(configuration:fileProviderManager:domain:)();
}

uint64_t type metadata accessor for PhotosFileProviderRegister()
{
  return type metadata accessor for PhotosFileProviderRegister();
}

uint64_t StateOfMindVisualization.ValenceImageProvider.uiImage.getter()
{
  return StateOfMindVisualization.ValenceImageProvider.uiImage.getter();
}

uint64_t type metadata accessor for StateOfMindVisualization.ValenceImageProvider.ImageScale()
{
  return type metadata accessor for StateOfMindVisualization.ValenceImageProvider.ImageScale();
}

uint64_t StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)()
{
  return StateOfMindVisualization.ValenceImageProvider.init(valence:imageScale:)();
}

uint64_t type metadata accessor for StateOfMindVisualization.ValenceImageProvider()
{
  return type metadata accessor for StateOfMindVisualization.ValenceImageProvider();
}

uint64_t ColorResource.init(name:bundle:)()
{
  return ColorResource.init(name:bundle:)();
}

uint64_t type metadata accessor for ColorResource()
{
  return type metadata accessor for ColorResource();
}

uint64_t ImageResource.init(name:bundle:)()
{
  return ImageResource.init(name:bundle:)();
}

uint64_t type metadata accessor for ImageResource()
{
  return type metadata accessor for ImageResource();
}

uint64_t static UTType.png.getter()
{
  return static UTType.png.getter();
}

uint64_t type metadata accessor for UTType()
{
  return type metadata accessor for UTType();
}

uint64_t MOOnboardingNavigationController.init(onboardingDelegate:)()
{
  return MOOnboardingNavigationController.init(onboardingDelegate:)();
}

uint64_t type metadata accessor for MOOnboardingNavigationController()
{
  return type metadata accessor for MOOnboardingNavigationController();
}

uint64_t OSSignposter.init(logger:)()
{
  return OSSignposter.init(logger:)();
}

uint64_t type metadata accessor for OSSignposter()
{
  return type metadata accessor for OSSignposter();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t type metadata accessor for UICellAccessory.DisplayedState()
{
  return type metadata accessor for UICellAccessory.DisplayedState();
}

uint64_t type metadata accessor for UICellAccessory.LayoutDimension()
{
  return type metadata accessor for UICellAccessory.LayoutDimension();
}

uint64_t static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)()
{
  return static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)();
}

uint64_t UICellAccessory.OutlineDisclosureOptions._customImage.setter()
{
  return UICellAccessory.OutlineDisclosureOptions._customImage.setter();
}

uint64_t type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style()
{
  return type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style();
}

uint64_t UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)()
{
  return UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)();
}

uint64_t UICellAccessory.OutlineDisclosureOptions.tintColor.setter()
{
  return UICellAccessory.OutlineDisclosureOptions.tintColor.setter();
}

uint64_t type metadata accessor for UICellAccessory.OutlineDisclosureOptions()
{
  return type metadata accessor for UICellAccessory.OutlineDisclosureOptions();
}

uint64_t type metadata accessor for UICellAccessory()
{
  return type metadata accessor for UICellAccessory();
}

uint64_t static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for UICellConfigurationState()
{
  return type metadata accessor for UICellConfigurationState();
}

uint64_t UIBackgroundConfiguration.backgroundColor.setter()
{
  return UIBackgroundConfiguration.backgroundColor.setter();
}

uint64_t static UIBackgroundConfiguration.listGroupedCell()()
{
  return static UIBackgroundConfiguration.listGroupedCell()();
}

uint64_t static UIBackgroundConfiguration.clear()()
{
  return static UIBackgroundConfiguration.clear()();
}

uint64_t type metadata accessor for UIBackgroundConfiguration()
{
  return type metadata accessor for UIBackgroundConfiguration();
}

uint64_t type metadata accessor for UITraitUserInterfaceStyle()
{
  return type metadata accessor for UITraitUserInterfaceStyle();
}

uint64_t UIListSeparatorConfiguration.bottomSeparatorInsets.setter()
{
  return UIListSeparatorConfiguration.bottomSeparatorInsets.setter();
}

uint64_t UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)()
{
  return UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
}

uint64_t UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)()
{
  return UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();
}

uint64_t NSDiffableDataSourceSectionSnapshot.append(_:to:)()
{
  return NSDiffableDataSourceSectionSnapshot.append(_:to:)();
}

uint64_t NSDiffableDataSourceSectionSnapshot.init()()
{
  return NSDiffableDataSourceSectionSnapshot.init()();
}

uint64_t UICollectionLayoutListConfiguration.separatorConfiguration.modify()
{
  return UICollectionLayoutListConfiguration.separatorConfiguration.modify();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.Appearance()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
}

uint64_t UICollectionLayoutListConfiguration.init(appearance:)()
{
  return UICollectionLayoutListConfiguration.init(appearance:)();
}

uint64_t UICollectionLayoutListConfiguration.backgroundColor.setter()
{
  return UICollectionLayoutListConfiguration.backgroundColor.setter();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration()
{
  return type metadata accessor for UICollectionLayoutListConfiguration();
}

uint64_t dispatch thunk of Tip.id.getter()
{
  return dispatch thunk of Tip.id.getter();
}

uint64_t Tip.statusUpdates.getter()
{
  return Tip.statusUpdates.getter();
}

uint64_t Tip.status.getter()
{
  return Tip.status.getter();
}

uint64_t TipUIView.backgroundColor.setter()
{
  return TipUIView.backgroundColor.setter();
}

uint64_t TipUIView.imageSize.setter()
{
  return TipUIView.imageSize.setter();
}

uint64_t type metadata accessor for TipUIView()
{
  return type metadata accessor for TipUIView();
}

uint64_t TipUIView.init(_:arrowEdge:actionHandler:)()
{
  return TipUIView.init(_:arrowEdge:actionHandler:)();
}

uint64_t static Tips.RuleBuilder.buildExpression(_:)()
{
  return static Tips.RuleBuilder.buildExpression(_:)();
}

uint64_t static Tips.RuleBuilder.buildPartialBlock(first:)()
{
  return static Tips.RuleBuilder.buildPartialBlock(first:)();
}

uint64_t static Tips.OptionsBuilder.buildExpression<A>(_:)()
{
  return static Tips.OptionsBuilder.buildExpression<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildFinalResult<A>(_:)()
{
  return static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildPartialBlock<A>(first:)()
{
  return static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
}

uint64_t type metadata accessor for Tips.InvalidationReason()
{
  return type metadata accessor for Tips.InvalidationReason();
}

uint64_t static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter()
{
  return static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine()
{
  return type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine();
}

uint64_t static Tips.ConfigurationOption.analyticsEngine(_:)()
{
  return static Tips.ConfigurationOption.analyticsEngine(_:)();
}

uint64_t static Tips.ConfigurationOption.DatastoreLocation.url(_:)()
{
  return static Tips.ConfigurationOption.DatastoreLocation.url(_:)();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.DatastoreLocation()
{
  return type metadata accessor for Tips.ConfigurationOption.DatastoreLocation();
}

uint64_t static Tips.ConfigurationOption.datastoreLocation(_:)()
{
  return static Tips.ConfigurationOption.datastoreLocation(_:)();
}

uint64_t type metadata accessor for Tips.ConfigurationOption()
{
  return type metadata accessor for Tips.ConfigurationOption();
}

uint64_t type metadata accessor for Tips.IgnoresDisplayFrequency()
{
  return type metadata accessor for Tips.IgnoresDisplayFrequency();
}

uint64_t Tips.IgnoresDisplayFrequency.init(_:)()
{
  return Tips.IgnoresDisplayFrequency.init(_:)();
}

uint64_t type metadata accessor for Tips.Rule()
{
  return type metadata accessor for Tips.Rule();
}

uint64_t Tips.Rule.init<A>(_:_:)()
{
  return Tips.Rule.init<A>(_:_:)();
}

uint64_t Tips.Action.init<A>(id:title:perform:)()
{
  return Tips.Action.init<A>(id:title:perform:)();
}

uint64_t Tips.Action.init(id:perform:_:)()
{
  return Tips.Action.init(id:perform:_:)();
}

uint64_t Tips.Action.id.getter()
{
  return Tips.Action.id.getter();
}

uint64_t Tips.Action.with(index:)()
{
  return Tips.Action.with(index:)();
}

uint64_t type metadata accessor for Tips.Action()
{
  return type metadata accessor for Tips.Action();
}

uint64_t static Tips.Status.== infix(_:_:)()
{
  return static Tips.Status.== infix(_:_:)();
}

uint64_t type metadata accessor for Tips.Status()
{
  return type metadata accessor for Tips.Status();
}

uint64_t Tips.Parameter.wrappedValue.getter()
{
  return Tips.Parameter.wrappedValue.getter();
}

uint64_t Tips.Parameter.wrappedValue.setter()
{
  return Tips.Parameter.wrappedValue.setter();
}

uint64_t Tips.Parameter.init<A>(_:_:_:_:)()
{
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t static Tips.configure(_:)()
{
  return static Tips.configure(_:)();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t Published.projectedValue.setter()
{
  return Published.projectedValue.setter();
}

uint64_t static Published.subscript.modify()
{
  return static Published.subscript.modify();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t type metadata accessor for NWPathMonitor.Iterator()
{
  return type metadata accessor for NWPathMonitor.Iterator();
}

uint64_t NWPathMonitor.init()()
{
  return NWPathMonitor.init()();
}

uint64_t type metadata accessor for NWPathMonitor()
{
  return type metadata accessor for NWPathMonitor();
}

uint64_t type metadata accessor for NWPath.Status()
{
  return type metadata accessor for NWPath.Status();
}

uint64_t NWPath.status.getter()
{
  return NWPath.status.getter();
}

uint64_t type metadata accessor for NWPath()
{
  return type metadata accessor for NWPath();
}

uint64_t LocalizedStringKey.init(stringLiteral:)()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t UIViewRepresentable.sizeThatFits(_:uiView:context:)()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t UIViewRepresentable.body.getter()
{
  return UIViewRepresentable.body.getter();
}

uint64_t Text.foregroundStyle<A>(_:)()
{
  return Text.foregroundStyle<A>(_:)();
}

uint64_t Text.init(_:tableName:bundle:comment:)()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t static Color.clear.getter()
{
  return static Color.clear.getter();
}

uint64_t Color.init(_:)()
{
  return Color.init(_:)();
}

uint64_t static DispatchTimeoutResult.== infix(_:_:)()
{
  return static DispatchTimeoutResult.== infix(_:_:)();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t static DispatchQoS.userInteractive.getter()
{
  return static DispatchQoS.userInteractive.getter();
}

uint64_t static DispatchQoS.utility.getter()
{
  return static DispatchQoS.utility.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.debugDescription.getter()
{
  return Dictionary.debugDescription.getter();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t BidirectionalCollection<>.starts<A>(with:)()
{
  return BidirectionalCollection<>.starts<A>(with:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.<= infix(_:_:)()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)()
{
  return String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t String.LocalizationValue.init(stringInterpolation:)()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init(data:encoding:)()
{
  return String.init(data:encoding:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

uint64_t String.init(localized:table:bundle:locale:comment:)()
{
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.uppercased()()
{
  uint64_t v0 = String.uppercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(before:)()
{
  return String.index(before:)();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t String.index(_:offsetBy:)()
{
  return String.index(_:offsetBy:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t String.hashValue.getter()
{
  return String.hashValue.getter();
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

{
  return String.subscript.getter();
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t Sequence.withContiguousStorageIfAvailable<A>(_:)()
{
  return Sequence.withContiguousStorageIfAvailable<A>(_:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t Array.debugDescription.getter()
{
  return Array.debugDescription.getter();
}

Swift::Void __swiftcall Array._makeMutableAndUnique()()
{
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t type metadata accessor for Array()
{
  return type metadata accessor for Array();
}

uint64_t Array.subscript.getter()
{
  return Array.subscript.getter();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t AsyncStream.makeAsyncIterator()()
{
  return AsyncStream.makeAsyncIterator()();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

uint64_t Double.description.getter()
{
  return Double.description.getter();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.debugDescription.getter()
{
  return Set.debugDescription.getter();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t dispatch thunk of static Numeric.* infix(_:_:)()
{
  return dispatch thunk of static Numeric.* infix(_:_:)();
}

uint64_t RandomAccessCollection<>.indices.getter()
{
  return RandomAccessCollection<>.indices.getter();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t Collection.first.getter()
{
  return Collection.first.getter();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t Range.contains(_:)()
{
  return Range.contains(_:)();
}

uint64_t type metadata accessor for Range()
{
  return type metadata accessor for Range();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

HKQuantityType __swiftcall HKQuantityType.init(_:)(HKQuantityTypeIdentifier a1)
{
  return (HKQuantityType)HKQuantityType.init(_:)(a1);
}

uint64_t static CAGradientLayer.gradientLayerForValence(_:style:)()
{
  return static CAGradientLayer.gradientLayerForValence(_:style:)();
}

uint64_t CGMutablePathRef.move(to:transform:)()
{
  return CGMutablePathRef.move(to:transform:)();
}

uint64_t CGMutablePathRef.addLine(to:transform:)()
{
  return CGMutablePathRef.addLine(to:transform:)();
}

uint64_t UICollectionView.CellRegistration.init(handler:)()
{
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t UICollectionView.SupplementaryRegistration.init(elementKind:handler:)()
{
  return UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
}

uint64_t UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)()
{
  return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
}

uint64_t UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)()
{
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

uint64_t UIViewController.registerForTraitChanges(_:action:)()
{
  return UIViewController.registerForTraitChanges(_:action:)();
}

uint64_t OS_dispatch_group.wait(timeout:)()
{
  return OS_dispatch_group.wait(timeout:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t UICollectionViewCell.backgroundConfiguration.getter()
{
  return UICollectionViewCell.backgroundConfiguration.getter();
}

uint64_t UICollectionViewCell.backgroundConfiguration.setter()
{
  return UICollectionViewCell.backgroundConfiguration.setter();
}

uint64_t static UIContentSizeCategory.> infix(_:_:)()
{
  return static UIContentSizeCategory.> infix(_:_:)();
}

uint64_t UICollectionViewListCell.accessories.setter()
{
  return UICollectionViewListCell.accessories.setter();
}

uint64_t static NSCollectionLayoutSection.list(using:layoutEnvironment:)()
{
  return static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
}

uint64_t static UISheetPresentationControllerDetent.custom(identifier:resolver:)()
{
  return static UISheetPresentationControllerDetent.custom(identifier:resolver:)();
}

uint64_t NSSet.makeIterator()()
{
  return NSSet.makeIterator()();
}

uint64_t CGRect.debugDescription.getter()
{
  return CGRect.debugDescription.getter();
}

uint64_t CGSize.debugDescription.getter()
{
  return CGSize.debugDescription.getter();
}

uint64_t static CGSize.* infix(_:_:)()
{
  return static CGSize.* infix(_:_:)();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t UIView.registerForTraitChanges(_:action:)()
{
  return UIView.registerForTraitChanges(_:action:)();
}

uint64_t UIView.userInteractionEnabled(_:)()
{
  return UIView.userInteractionEnabled(_:)();
}

uint64_t CGPoint.debugDescription.getter()
{
  return CGPoint.debugDescription.getter();
}

uint64_t NSArray.makeIterator()()
{
  return NSArray.makeIterator()();
}

uint64_t UIColor.init(_:)()
{
  return UIColor.init(_:)();
}

uint64_t UILabel.textColor(_:)()
{
  return UILabel.textColor(_:)();
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t UIButton.Configuration.buttonSize.setter()
{
  return UIButton.Configuration.buttonSize.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.CornerStyle()
{
  return type metadata accessor for UIButton.Configuration.CornerStyle();
}

uint64_t UIButton.Configuration.cornerStyle.setter()
{
  return UIButton.Configuration.cornerStyle.setter();
}

uint64_t UIButton.Configuration.attributedTitle.setter()
{
  return UIButton.Configuration.attributedTitle.setter();
}

uint64_t UIButton.Configuration.baseBackgroundColor.setter()
{
  return UIButton.Configuration.baseBackgroundColor.setter();
}

uint64_t UIButton.Configuration.baseForegroundColor.setter()
{
  return UIButton.Configuration.baseForegroundColor.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.Size()
{
  return type metadata accessor for UIButton.Configuration.Size();
}

uint64_t UIButton.Configuration.image.setter()
{
  return UIButton.Configuration.image.setter();
}

uint64_t static UIButton.Configuration.plain()()
{
  return static UIButton.Configuration.plain()();
}

uint64_t static UIButton.Configuration.filled()()
{
  return static UIButton.Configuration.filled()();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t UIButton.configuration.getter()
{
  return UIButton.configuration.getter();
}

uint64_t UIButton.configuration.setter()
{
  return UIButton.configuration.setter();
}

uint64_t type metadata accessor for APSubject()
{
  return type metadata accessor for APSubject();
}

uint64_t CGPathRef.copy(dashingWithPhase:lengths:transform:)()
{
  return CGPathRef.copy(dashingWithPhase:lengths:transform:)();
}

uint64_t CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)()
{
  return CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)();
}

uint64_t Optional.debugDescription.getter()
{
  return Optional.debugDescription.getter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t Optional<A>.hashValue.getter()
{
  return Optional<A>.hashValue.getter();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.localizedCapitalized.getter()
{
  return StringProtocol.localizedCapitalized.getter();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.caseInsensitiveCompare<A>(_:)()
{
  return StringProtocol.caseInsensitiveCompare<A>(_:)();
}

uint64_t StringProtocol.hash.getter()
{
  return StringProtocol.hash.getter();
}

uint64_t StringProtocol.compare<A>(_:options:range:locale:)()
{
  return StringProtocol.compare<A>(_:options:range:locale:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static CommandLine.unsafeArgv.getter()
{
  return static CommandLine.unsafeArgv.getter();
}

uint64_t static CommandLine.argc.getter()
{
  return static CommandLine.argc.getter();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t StaticString.description.getter()
{
  return StaticString.description.getter();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t ContiguousArray.append(_:)()
{
  return ContiguousArray.append(_:)();
}

uint64_t ContiguousArray.init()()
{
  return ContiguousArray.init()();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t __CocoaDictionary.lookup(_:)()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t print(_:separator:terminator:)()
{
  return print(_:separator:terminator:)();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t AnalyticsSendEventLazy()
{
  return _AnalyticsSendEventLazy();
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_SHA256(data, len, md);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

void CGContextAddEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextDrawPath(CGContextRef c, CGPathDrawingMode mode)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineCap(CGContextRef c, CGLineCap cap)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CFDataRef CGDataProviderCopyData(CGDataProviderRef provider)
{
  return _CGDataProviderCopyData(provider);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return _CGImageCreateWithImageInRect(image, rect);
}

CGDataProviderRef CGImageGetDataProvider(CGImageRef image)
{
  return _CGImageGetDataProvider(image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return _CGImageGetHeight(image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return _CGImageGetWidth(image);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return _CGPathCreateMutable();
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

void CGRectDivide(CGRect rect, CGRect *slice, CGRect *remainder, CGFloat amount, CGRectEdge edge)
{
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

BOOL CGSizeEqualToSize(CGSize size1, CGSize size2)
{
  return _CGSizeEqualToSize(size1, size2);
}

Float64 CMTimeGetSeconds(CMTime *time)
{
  return _CMTimeGetSeconds(time);
}

uint64_t FILocalizedNameForActivityType()
{
  return _FILocalizedNameForActivityType();
}

uint64_t FIUIDistanceTypeForActivityType()
{
  return _FIUIDistanceTypeForActivityType();
}

uint64_t FIUIStaticScalableWorkoutIconImage()
{
  return _FIUIStaticScalableWorkoutIconImage();
}

uint64_t HKUILocalizedStringForStateOfMindDomain()
{
  return _HKUILocalizedStringForStateOfMindDomain();
}

uint64_t HKUILocalizedStringForStateOfMindLabel()
{
  return _HKUILocalizedStringForStateOfMindLabel();
}

uint64_t HKUILocalizedStringForValenceClassificationAndReflectiveInterval()
{
  return _HKUILocalizedStringForValenceClassificationAndReflectiveInterval();
}

uint64_t HKUIStandardMapGreenColor()
{
  return _HKUIStandardMapGreenColor();
}

uint64_t HKUIStandardMapRedColor()
{
  return _HKUIStandardMapRedColor();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGCopyAnswerWithError()
{
  return _MGCopyAnswerWithError();
}

CLLocationCoordinate2D MKCoordinateForMapPoint(MKMapPoint mapPoint)
{
  CLLocationCoordinate2D v3 = _MKCoordinateForMapPoint(mapPoint);
  double longitude = v3.longitude;
  double latitude = v3.latitude;
  result.double longitude = longitude;
  result.double latitude = latitude;
  return result;
}

MKCoordinateRegion MKCoordinateRegionForMapRect(MKMapRect rect)
{
  return _MKCoordinateRegionForMapRect(rect);
}

MKMapPoint MKMapPointForCoordinate(CLLocationCoordinate2D coordinate)
{
  MKMapPoint v3 = _MKMapPointForCoordinate(coordinate);
  double y = v3.y;
  double x = v3.x;
  result.double y = y;
  result.double x = x;
  return result;
}

BOOL MKMapRectIntersectsRect(MKMapRect rect1, MKMapRect rect2)
{
  return _MKMapRectIntersectsRect(rect1, rect2);
}

CGFloat MKRoadWidthAtZoomScale(MKZoomScale zoomScale)
{
  return _MKRoadWidthAtZoomScale(zoomScale);
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return _NSSelectorFromString(aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t SBSGetScreenLockStatus()
{
  return _SBSGetScreenLockStatus();
}

SCNetworkReachabilityRef SCNetworkReachabilityCreateWithAddress(CFAllocatorRef allocator, const sockaddr *address)
{
  return _SCNetworkReachabilityCreateWithAddress(allocator, address);
}

Boolean SCNetworkReachabilityGetFlags(SCNetworkReachabilityRef target, SCNetworkReachabilityFlags *flags)
{
  return _SCNetworkReachabilityGetFlags(target, flags);
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

void UIGraphicsBeginImageContext(CGSize size)
{
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

void UIRectFill(CGRect rect)
{
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return __swift_isClassOrObjCExistentialType();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

objc_property_t *__cdecl class_copyPropertyList(Class cls, unsigned int *outCount)
{
  return _class_copyPropertyList(cls, outCount);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

void exit(int a1)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t os_variant_has_internal_diagnostics()
{
  return _os_variant_has_internal_diagnostics();
}

const char *__cdecl property_getAttributes(objc_property_t property)
{
  return _property_getAttributes(property);
}

const char *__cdecl property_getName(objc_property_t property)
{
  return _property_getName(property);
}

long double remainder(long double __x, long double __y)
{
  return _remainder(__x, __y);
}

uint64_t sandbox_extension_issue_file()
{
  return _sandbox_extension_issue_file();
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_deletedMethodError()
{
  return _swift_deletedMethodError();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStaticObject()
{
  return _swift_initStaticObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _[a1 activate];
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _[a1 activationState];
}

id objc_msgSend_addConnection_withId_(void *a1, const char *a2, ...)
{
  return [a1 addConnection:withId:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _[a1 authorizationStatus];
}

id objc_msgSend_avatarImageForContacts_scope_(void *a1, const char *a2, ...)
{
  return [a1 avatarImageForContacts:];
}

id objc_msgSend_baseBundle(void *a1, const char *a2, ...)
{
  return _[a1 baseBundle];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_BOOLeanValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLeanValue];
}

id objc_msgSend_brokenPipeState(void *a1, const char *a2, ...)
{
  return _[a1 brokenPipeState];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_clientWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 clientWithIdentifier:];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return [a1 componentsSeparatedByCharactersInSet:];
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsSeparatedByString:];
}

id objc_msgSend_configurationForDefaultMainDisplayMonitor(void *a1, const char *a2, ...)
{
  return _[a1 configurationForDefaultMainDisplayMonitor];
}

id objc_msgSend_configureConnection_(void *a1, const char *a2, ...)
{
  return [a1 configureConnection:];
}

id objc_msgSend_connectionHost(void *a1, const char *a2, ...)
{
  return _[a1 connectionHost];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_currentContext(void *a1, const char *a2, ...)
{
  return _[a1 currentContext];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _[a1 currentState];
}

id objc_msgSend_currentViewState(void *a1, const char *a2, ...)
{
  return _[a1 currentViewState];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_describeArray_withName_withDepth_(void *a1, const char *a2, ...)
{
  return [a1 describeArray:withName:withDepth:];
}

id objc_msgSend_describeComplexObject_withName_withDepth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describeComplexObject:withName:withDepth:");
}

id objc_msgSend_describeDictionary_withName_withDepth_(void *a1, const char *a2, ...)
{
  return [a1 describeDictionary:withName:withDepth:];
}

id objc_msgSend_describeSimpleObject_withName_withDepth_(void *a1, const char *a2, ...)
{
  return [a1 describeSimpleObject:withName:withDepth:];
}

id objc_msgSend_describingPropertyNamed_withClassName_andValue_andRecursiveDepth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "describingPropertyNamed:withClassName:andValue:andRecursiveDepth:");
}

id objc_msgSend_describingPropertyNamed_withClassType_andValue_andRecursiveDepth_(void *a1, const char *a2, ...)
{
  return [a1 describingPropertyNamed:withClassType:andValue:andRecursiveDepth:];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_destroyScene_(void *a1, const char *a2, ...)
{
  return [a1 destroyScene:];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithDictionary:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_didGrantSandboxAccessFor_(void *a1, const char *a2, ...)
{
  return [a1 didGrantSandboxAccessFor:];
}

id objc_msgSend_didReceivePresentationRequestWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 didReceivePresentationRequestWithOptions:];
}

id objc_msgSend_didReceiveStateUpdateRequest_(void *a1, const char *a2, ...)
{
  return [a1 didReceiveStateUpdateRequest:];
}

id objc_msgSend_didReceiveUpdateRequestWithState_animated_(void *a1, const char *a2, ...)
{
  return [a1 didReceiveUpdateRequestWithState:animated:];
}

id objc_msgSend_doTrialSetup(void *a1, const char *a2, ...)
{
  return _[a1 doTrialSetup];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_elements(void *a1, const char *a2, ...)
{
  return _[a1 elements];
}

id objc_msgSend_endowmentNamespaces(void *a1, const char *a2, ...)
{
  return _[a1 endowmentNamespaces];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateKeysAndObjectsUsingBlock:];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_experimentIdentifiersWithNamespaceName_(void *a1, const char *a2, ...)
{
  return [a1 experimentIdentifiersWithNamespaceName:];
}

id objc_msgSend_extractClassFrom_(void *a1, const char *a2, ...)
{
  return [a1 extractClassFrom:];
}

id objc_msgSend_extractHardwareAndSoftwareMetadata(void *a1, const char *a2, ...)
{
  return _[a1 extractHardwareAndSoftwareMetadata];
}

id objc_msgSend_extractValueFrom_belongingTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extractValueFrom:belongingTo:");
}

id objc_msgSend_factor(void *a1, const char *a2, ...)
{
  return _[a1 factor];
}

id objc_msgSend_factorLevelsWithNamespaceName_(void *a1, const char *a2, ...)
{
  return [a1 factorLevelsWithNamespaceName:];
}

id objc_msgSend_fetchGenerativeModelsAvailabilityWithReply_(void *a1, const char *a2, ...)
{
  return [a1 fetchGenerativeModelsAvailabilityWithReply:];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_getBoolDefaultsForKey_withFallback_(void *a1, const char *a2, ...)
{
  return [a1 getBoolDefaultsForKey:withFallback:];
}

id objc_msgSend_getBoolTrialLevelForKey_withFallback_(void *a1, const char *a2, ...)
{
  return [a1 getBoolTrialLevelForKey:withFallback:];
}

id objc_msgSend_getBuildVersion(void *a1, const char *a2, ...)
{
  return _[a1 getBuildVersion];
}

id objc_msgSend_getClientConnectionPropertiesFor_(void *a1, const char *a2, ...)
{
  return [a1 getClientConnectionPropertiesFor:];
}

id objc_msgSend_getClientProxyFor_(void *a1, const char *a2, ...)
{
  return [a1 getClientProxyFor:];
}

id objc_msgSend_getClientRemoteProcessFor_(void *a1, const char *a2, ...)
{
  return [a1 getClientRemoteProcessFor:];
}

id objc_msgSend_getConnectionHostId_(void *a1, const char *a2, ...)
{
  return [a1 getConnectionHostId:];
}

id objc_msgSend_getConnectionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 getConnectionIdentifier:];
}

id objc_msgSend_getDoubleDefaultsForKey_withFallback_(void *a1, const char *a2, ...)
{
  return [a1 getDoubleDefaultsForKey:withFallback:];
}

id objc_msgSend_getDoubleTrialLevelForKey_withFallback_(void *a1, const char *a2, ...)
{
  return [a1 getDoubleTrialLevelForKey:withFallback:];
}

id objc_msgSend_getFloatDefaultsForKey_withFallback_(void *a1, const char *a2, ...)
{
  return [a1 getFloatDefaultsForKey:withFallback:];
}

id objc_msgSend_getFloatTrialLevelForKey_withFallback_(void *a1, const char *a2, ...)
{
  return [a1 getFloatTrialLevelForKey:withFallback:];
}

id objc_msgSend_getHWModel(void *a1, const char *a2, ...)
{
  return _[a1 getHWModel];
}

id objc_msgSend_getIntegerDefaultsForKey_withFallback_(void *a1, const char *a2, ...)
{
  return [a1 getIntegerDefaultsForKey:withFallback:];
}

id objc_msgSend_getIntegerTrialLevelForKey_withFallback_(void *a1, const char *a2, ...)
{
  return [a1 getIntegerTrialLevelForKey:withFallback:];
}

id objc_msgSend_getNotificationSettingsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getNotificationSettingsWithCompletionHandler:];
}

id objc_msgSend_getProductType(void *a1, const char *a2, ...)
{
  return _[a1 getProductType];
}

id objc_msgSend_getProductVersion(void *a1, const char *a2, ...)
{
  return _[a1 getProductVersion];
}

id objc_msgSend_getPropertiesForConnection_(void *a1, const char *a2, ...)
{
  return [a1 getPropertiesForConnection];
}

id objc_msgSend_getProxyFor_withBlock_(void *a1, const char *a2, ...)
{
  return [a1 getProxyFor:withBlock:];
}

id objc_msgSend_getRemoteProcessIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 getRemoteProcessIdentifier:];
}

id objc_msgSend_getStringDefaultsForKey_withFallback_(void *a1, const char *a2, ...)
{
  return [a1 getStringDefaultsForKey:withFallback:];
}

id objc_msgSend_getStringTrialLevelForKey_withFallback_(void *a1, const char *a2, ...)
{
  return [a1 getStringTrialLevelForKey:withFallback:];
}

id objc_msgSend_getTrialExperimentIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 getTrialExperimentIdentifiers];
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleForIdentifier_error_(void *a1, const char *a2, ...)
{
  return [a1 handleForIdentifier:error:];
}

id objc_msgSend_hasEntitlement_(void *a1, const char *a2, ...)
{
  return [a1 hasEntitlement:];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_initWithActivityType_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivityType:];
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIdentifier:];
}

id objc_msgSend_initWithClassName_propertyName_andPropertyValue_andRecursiveDepth_(void *a1, const char *a2, ...)
{
  return [a1 initWithClassName:propertyName:andPropertyValue:andRecursiveDepth:];
}

id objc_msgSend_initWithDefaultsManager_enableTrialClient_(void *a1, const char *a2, ...)
{
  return [a1 initWithDefaultsManager:enableTrialClient:];
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return [a1 initWithSuiteName:];
}

id objc_msgSend_initWithTargetSceneIdentity_(void *a1, const char *a2, ...)
{
  return [a1 initWithTargetSceneIdentity:];
}

id objc_msgSend_initWithUniverse_(void *a1, const char *a2, ...)
{
  return [a1 initWithUniverse:];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interfaceWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 interfaceWithIdentifier:];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_isConnectingProcessAuthorized_(void *a1, const char *a2, ...)
{
  return [a1 isConnectingProcessAuthorized:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isInternalBuild(void *a1, const char *a2, ...)
{
  return _[a1 isInternalBuild];
}

id objc_msgSend_isSeedBuild(void *a1, const char *a2, ...)
{
  return _[a1 isSeedBuild];
}

id objc_msgSend_isVisibleClient_(void *a1, const char *a2, ...)
{
  return [a1 isVisibleClient:];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_levelForFactor_withNamespaceName_(void *a1, const char *a2, ...)
{
  return [a1 levelForFactor:withNamespaceName:];
}

id objc_msgSend_levelOneOfCase(void *a1, const char *a2, ...)
{
  return _[a1 levelOneOfCase];
}

id objc_msgSend_listenerWithConfigurator_(void *a1, const char *a2, ...)
{
  return [a1 listenerWithConfigurator:];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _[a1 longValue];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_metadata(void *a1, const char *a2, ...)
{
  return _[a1 metadata];
}

id objc_msgSend_monitorWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 monitorWithConfiguration:];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_objCType(void *a1, const char *a2, ...)
{
  return _[a1 objCType];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_onLockNotification(void *a1, const char *a2, ...)
{
  return _[a1 onLockNotification];
}

id objc_msgSend_onboardingFlowCompletionStatus(void *a1, const char *a2, ...)
{
  return _[a1 onboardingFlowCompletionStatus];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pendingPresentationOptions(void *a1, const char *a2, ...)
{
  return _[a1 pendingPresentationOptions];
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:];
}

id objc_msgSend_performTask_suggestion_(void *a1, const char *a2, ...)
{
  return [a1 performTask:suggestion:];
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _[a1 pid];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:];
}

id objc_msgSend_protocolForProtocol_(void *a1, const char *a2, ...)
{
  return [a1 protocolForProtocol:];
}

id objc_msgSend_refresh(void *a1, const char *a2, ...)
{
  return _[a1 refresh];
}

id objc_msgSend_registerApplicationsForDataAccess_(void *a1, const char *a2, ...)
{
  return [a1 registerApplicationsForDataAccess];
}

id objc_msgSend_registerForLayoutMonitorForBackgroundStateNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerForLayoutMonitorForBackgroundStateNotifications];
}

id objc_msgSend_registerForLockNotifications(void *a1, const char *a2, ...)
{
  return _[a1 registerForLockNotifications];
}

id objc_msgSend_remoteProcess(void *a1, const char *a2, ...)
{
  return _[a1 remoteProcess];
}

id objc_msgSend_remoteTarget(void *a1, const char *a2, ...)
{
  return _[a1 remoteTarget];
}

id objc_msgSend_removeConnection_(void *a1, const char *a2, ...)
{
  return [a1 removeConnection];
}

id objc_msgSend_removeConnectionId_(void *a1, const char *a2, ...)
{
  return [a1 removeConnectionId];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [a1 removeObject:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_renderAvatarsForContacts_scope_imageHandler_(void *a1, const char *a2, ...)
{
  return [a1 renderAvatarsForContacts:scope:imageHandler:];
}

id objc_msgSend_renderMonogramForString_scope_imageHandler_(void *a1, const char *a2, ...)
{
  return [a1 renderMonogramForString:scope:imageHandler:];
}

id objc_msgSend_requestAuthorizationWithOptions_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestAuthorizationWithOptions:];
}

id objc_msgSend_requestNotificationAuthIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 requestNotificationAuthIfNeeded];
}

id objc_msgSend_requestSceneSessionActivation_userActivity_options_errorHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestSceneSessionActivation:userActivity:options:errorHandler:];
}

id objc_msgSend_requestSceneSessionDestruction_options_errorHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestSceneSessionDestruction:options:errorHandler:];
}

id objc_msgSend_requestedTypes(void *a1, const char *a2, ...)
{
  return _[a1 requestedTypes];
}

id objc_msgSend_responseQueue(void *a1, const char *a2, ...)
{
  return _[a1 responseQueue];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_sceneIdentityToken(void *a1, const char *a2, ...)
{
  return _[a1 sceneIdentityToken];
}

id objc_msgSend_scopeWithPointSize_scale_rightToLeft_style_(void *a1, const char *a2, ...)
{
  return [a1 scopeWithPointSize:scale:rightToLeft:style:];
}

id objc_msgSend_session(void *a1, const char *a2, ...)
{
  return _[a1 session];
}

id objc_msgSend_setActivationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setActivationHandler:];
}

id objc_msgSend_setActivationState_(void *a1, const char *a2, ...)
{
  return [a1 setActivationState:];
}

id objc_msgSend_setAssets_(void *a1, const char *a2, ...)
{
  return [a1 setAssets:];
}

id objc_msgSend_setBrokenPipeState_(void *a1, const char *a2, ...)
{
  return [a1 setBrokenPipeState:];
}

id objc_msgSend_setClient_(void *a1, const char *a2, ...)
{
  return [a1 setClient:];
}

id objc_msgSend_setClientMessagingExpectation_(void *a1, const char *a2, ...)
{
  return [a1 setClientMessagingExpectation:];
}

id objc_msgSend_setConnectionHost_(void *a1, const char *a2, ...)
{
  return [a1 setConnectionHost:];
}

id objc_msgSend_setCurrentViewState_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentViewState:];
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDateStyle:];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDomain_(void *a1, const char *a2, ...)
{
  return [a1 setDomain:];
}

id objc_msgSend_setFDefaultsManager_(void *a1, const char *a2, ...)
{
  return [a1 setFDefaultsManager:];
}

id objc_msgSend_setInterface_(void *a1, const char *a2, ...)
{
  return [a1 setInterface:];
}

id objc_msgSend_setInterfaceTarget_(void *a1, const char *a2, ...)
{
  return [a1 setInterfaceTarget:];
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setInterruptionHandler:];
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setInvalidationHandler:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setPendingPresentationOptions_(void *a1, const char *a2, ...)
{
  return [a1 setPendingPresentationOptions:];
}

id objc_msgSend_setPlacement_(void *a1, const char *a2, ...)
{
  return [a1 setPlacement:];
}

id objc_msgSend_setRequiredUserInfoKeys_(void *a1, const char *a2, ...)
{
  return [a1 setRequiredUserInfoKeys:];
}

id objc_msgSend_setResponseQueue_(void *a1, const char *a2, ...)
{
  return [a1 setResponseQueue:];
}

id objc_msgSend_setSceneIdentityToken_(void *a1, const char *a2, ...)
{
  return [a1 setSceneIdentityToken:];
}

id objc_msgSend_setServer_(void *a1, const char *a2, ...)
{
  return [a1 setServer:];
}

id objc_msgSend_setService_(void *a1, const char *a2, ...)
{
  return [a1 setService:];
}

id objc_msgSend_setServiceQuality_(void *a1, const char *a2, ...)
{
  return [a1 setServiceQuality:];
}

id objc_msgSend_setSession_(void *a1, const char *a2, ...)
{
  return [a1 setSession:];
}

id objc_msgSend_setTargetQueue_(void *a1, const char *a2, ...)
{
  return [a1 setTargetQueue:];
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return [a1 setTimeStyle:];
}

id objc_msgSend_setTransitionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setTransitionHandler:];
}

id objc_msgSend_setUnfulfilledUpdateIsAnimated_(void *a1, const char *a2, ...)
{
  return [a1 setUnfulfilledUpdateIsAnimated:];
}

id objc_msgSend_setUnfulfilledUpdateState_(void *a1, const char *a2, ...)
{
  return [a1 setUnfulfilledUpdateState:];
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return [a1 setUserInfo:];
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return [a1 setWithArray:];
}

id objc_msgSend_setupListener(void *a1, const char *a2, ...)
{
  return _[a1 setupListener];
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _[a1 sharedApplication];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sheetCancelled(void *a1, const char *a2, ...)
{
  return _[a1 sheetCancelled];
}

id objc_msgSend_showBlankComposeView(void *a1, const char *a2, ...)
{
  return _[a1 showBlankComposeView];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:];
}

id objc_msgSend_stringRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 stringRepresentation];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return [a1 stringWithCString:encoding:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 stringWithUTF8String:];
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return [a1 substringFromIndex:];
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return [a1 substringWithRange:];
}

id objc_msgSend_suggestionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 suggestionIdentifier];
}

id objc_msgSend_taskState(void *a1, const char *a2, ...)
{
  return _[a1 taskState];
}

id objc_msgSend_unfulfilledUpdateIsAnimated(void *a1, const char *a2, ...)
{
  return _[a1 unfulfilledUpdateIsAnimated];
}

id objc_msgSend_unfulfilledUpdateState(void *a1, const char *a2, ...)
{
  return _[a1 unfulfilledUpdateState];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInitiated(void *a1, const char *a2, ...)
{
  return _[a1 userInitiated];
}

id objc_msgSend_userInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceLayoutDirection];
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return [a1 valueForEntitlement:];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceCharacterSet];
}

id objc_msgSend_willReturnAssetsForSuggestion_withTypes_completion_(void *a1, const char *a2, ...)
{
  return [a1 willReturnAssetsForSuggestion:withTypes:completion:];
}

id objc_msgSend_willReturnAssetsForSuggestion_withTypes_onAssetsCallback_(void *a1, const char *a2, ...)
{
  return [a1 willReturnAssetsForSuggestion:withTypes:onAssetsCallback:];
}